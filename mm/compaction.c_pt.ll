; ModuleID = '/llk/IR_all_yes/mm/compaction.c_pt.bc'
source_filename = "../mm/compaction.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+PageMovable\22, \22a\22\09"
module asm "\09.weak\09__crc_PageMovable\09\09\09\09"
module asm "\09.long\09__crc_PageMovable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_PageMovable:\09\09\09\09\09"
module asm "\09.asciz \09\22PageMovable\22\09\09\09\09\09"
module asm "__kstrtabns_PageMovable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__SetPageMovable\22, \22a\22\09"
module asm "\09.weak\09__crc___SetPageMovable\09\09\09\09"
module asm "\09.long\09__crc___SetPageMovable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SetPageMovable:\09\09\09\09\09"
module asm "\09.asciz \09\22__SetPageMovable\22\09\09\09\09\09"
module asm "__kstrtabns___SetPageMovable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__ClearPageMovable\22, \22a\22\09"
module asm "\09.weak\09__crc___ClearPageMovable\09\09\09\09"
module asm "\09.long\09__crc___ClearPageMovable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___ClearPageMovable:\09\09\09\09\09"
module asm "\09.asciz \09\22__ClearPageMovable\22\09\09\09\09\09"
module asm "__kstrtabns___ClearPageMovable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.104 }
%union.anon.104 = type { %struct.anon.105 }
%struct.anon.105 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.106, %struct.trace_event, ptr, ptr, %union.anon.107, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.106 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.107 = type { ptr }
%union.anon.108 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.109 = type { %struct.bpf_raw_event_map }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%union.anon.111 = type { %struct.bpf_raw_event_map }
%union.anon.112 = type { %struct.bpf_raw_event_map }
%union.anon.113 = type { %struct.bpf_raw_event_map }
%union.anon.114 = type { %struct.bpf_raw_event_map }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%union.anon.116 = type { %struct.bpf_raw_event_map }
%union.anon.117 = type { %struct.bpf_raw_event_map }
%union.anon.118 = type { %struct.bpf_raw_event_map }
%union.anon.119 = type { %struct.bpf_raw_event_map }
%union.anon.120 = type { %struct.bpf_raw_event_map }
%union.anon.121 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.trace_print_flags = type { i32, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.vm_event_state = type { [76 x i32] }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon }
%union.anon = type { i32 }
%struct.static_key_true = type { %struct.static_key }
%struct.pglist_data = type { [4 x %struct.zone], [1 x %struct.zonelist], i32, ptr, ptr, i32, i32, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, [4 x %struct.wait_queue_head], %struct.atomic_t, i32, ptr, i32, i32, i32, i32, i32, %struct.wait_queue_head, ptr, i8, i32, [36 x i8], %struct.zone_padding, %struct.lruvec, i32, [12 x i8], %struct.zone_padding, ptr, [40 x %struct.atomic_t], [92 x i8] }
%struct.zone = type { [3 x i32], i32, i32, [4 x i32], ptr, ptr, ptr, i32, i32, ptr, i32, %struct.atomic_t, i32, i32, i32, ptr, i32, i32, [36 x i8], %struct.zone_padding, [12 x %struct.free_area], i32, %struct.spinlock, [96 x i8], %struct.zone_padding, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i8, i8, [90 x i8], %struct.zone_padding, [11 x %struct.atomic_t], [0 x %struct.atomic_t], [84 x i8] }
%struct.free_area = type { [6 x %struct.list_head], i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.zonelist = type { [5 x %struct.zoneref] }
%struct.zoneref = type { ptr, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.lruvec = type { [5 x %struct.list_head], %struct.spinlock, i32, i32, %struct.atomic_t, [2 x i32], i32, ptr }
%struct.zone_padding = type { [0 x i8] }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_mm_compaction_isolate_template = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_mm_compaction_migratepages = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_compaction_begin = type { %struct.trace_entry, i32, i32, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_mm_compaction_end = type { %struct.trace_entry, i32, i32, i32, i32, i8, i32, [0 x i8] }
%struct.trace_event_raw_mm_compaction_try_to_compact_pages = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_compaction_suitable_template = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_compaction_defer_template = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_compaction_kcompactd_sleep = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_kcompactd_wake_template = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.page = type { i32, %union.anon.3, %union.anon.75, %struct.atomic_t, i32 }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.75 = type { %struct.atomic_t }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.address_space_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.compact_control = type { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.48, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.11 }
%struct.llist_node = type { ptr }
%union.anon.11 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.13 }
%union.anon.13 = type { %struct.anon.14 }
%struct.anon.14 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.48 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.anon.69 = type { i32, i8, i8, %struct.atomic_t, i32 }
%struct.anon.81 = type { i32, %struct.list_head, ptr, i32, ptr, %struct.atomic_t, %struct.atomic_t, i32 }
%struct.alloc_context = type { ptr, ptr, ptr, i32, i32, i8 }
%struct.capture_control = type { ptr, ptr }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.obj_cgroup = type { %struct.percpu_ref, ptr, %struct.atomic_t, %union.anon.83 }
%struct.percpu_ref = type { i32, ptr }
%union.anon.83 = type { %struct.list_head }
%struct.mem_cgroup = type { %struct.cgroup_subsys_state, %struct.mem_cgroup_id, %struct.page_counter, %union.anon.82, %struct.page_counter, %struct.page_counter, %struct.work_struct, i32, %struct.vmpressure, i8, i8, i32, i32, i32, %struct.cgroup_file, %struct.cgroup_file, %struct.cgroup_file, %struct.mutex, %struct.mem_cgroup_thresholds, %struct.mem_cgroup_thresholds, %struct.list_head, i32, %struct.spinlock, i32, [20 x i8], %struct.memcg_padding, %struct.memcg_vmstats, [9 x %struct.atomic_t], [9 x %struct.atomic_t], i32, i8, i32, i32, ptr, %struct.list_head, [92 x i8], %struct.memcg_padding, %struct.atomic_t, ptr, ptr, %struct.list_head, %struct.wb_domain, [4 x %struct.memcg_cgwb_frn], %struct.list_head, %struct.spinlock, [0 x ptr], [84 x i8] }
%struct.cgroup_subsys_state = type { ptr, ptr, %struct.percpu_ref, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i64, %struct.atomic_t, %struct.work_struct, %struct.rcu_work, ptr }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, ptr }
%struct.mem_cgroup_id = type { i32, %struct.refcount_struct }
%union.anon.82 = type { %struct.page_counter }
%struct.page_counter = type { %struct.atomic_t, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t, i32, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.vmpressure = type { i32, i32, i32, i32, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.work_struct }
%struct.cgroup_file = type { ptr, i32, %struct.timer_list }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.mem_cgroup_thresholds = type { ptr, ptr }
%struct.memcg_vmstats = type { [44 x i32], [76 x i32], [44 x i32], [76 x i32] }
%struct.memcg_padding = type { [0 x i8] }
%struct.wb_domain = type { %struct.spinlock, %struct.fprop_global, %struct.timer_list, i32, i32, i32 }
%struct.fprop_global = type { %struct.percpu_counter, i32, %struct.seqcount }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.memcg_cgwb_frn = type { i64, i32, i64, %struct.wb_completion }
%struct.wb_completion = type { %struct.atomic_t, ptr }

@__tpstrtab_mm_compaction_isolate_migratepages = internal constant [35 x i8] c"mm_compaction_isolate_migratepages\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_isolate_migratepages = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_isolate_migratepages }, align 4
@__tracepoint_mm_compaction_isolate_migratepages = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_isolate_migratepages, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_isolate_migratepages, ptr null, ptr @__traceiter_mm_compaction_isolate_migratepages, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_isolate_migratepages = internal constant ptr @__tracepoint_mm_compaction_isolate_migratepages, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_isolate_freepages = internal constant [32 x i8] c"mm_compaction_isolate_freepages\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_isolate_freepages = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_isolate_freepages }, align 4
@__tracepoint_mm_compaction_isolate_freepages = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_isolate_freepages, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_isolate_freepages, ptr null, ptr @__traceiter_mm_compaction_isolate_freepages, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_isolate_freepages = internal constant ptr @__tracepoint_mm_compaction_isolate_freepages, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_migratepages = internal constant [27 x i8] c"mm_compaction_migratepages\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_migratepages = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_migratepages }, align 4
@__tracepoint_mm_compaction_migratepages = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_migratepages, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_migratepages, ptr null, ptr @__traceiter_mm_compaction_migratepages, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_migratepages = internal constant ptr @__tracepoint_mm_compaction_migratepages, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_begin = internal constant [20 x i8] c"mm_compaction_begin\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_begin = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_begin }, align 4
@__tracepoint_mm_compaction_begin = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_begin, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_begin, ptr null, ptr @__traceiter_mm_compaction_begin, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_begin = internal constant ptr @__tracepoint_mm_compaction_begin, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_end = internal constant [18 x i8] c"mm_compaction_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_end = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_end }, align 4
@__tracepoint_mm_compaction_end = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_end, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_end, ptr null, ptr @__traceiter_mm_compaction_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_end = internal constant ptr @__tracepoint_mm_compaction_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_try_to_compact_pages = internal constant [35 x i8] c"mm_compaction_try_to_compact_pages\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_try_to_compact_pages = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_try_to_compact_pages }, align 4
@__tracepoint_mm_compaction_try_to_compact_pages = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_try_to_compact_pages, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_try_to_compact_pages, ptr null, ptr @__traceiter_mm_compaction_try_to_compact_pages, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_try_to_compact_pages = internal constant ptr @__tracepoint_mm_compaction_try_to_compact_pages, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_finished = internal constant [23 x i8] c"mm_compaction_finished\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_finished = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_finished }, align 4
@__tracepoint_mm_compaction_finished = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_finished, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_finished, ptr null, ptr @__traceiter_mm_compaction_finished, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_finished = internal constant ptr @__tracepoint_mm_compaction_finished, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_suitable = internal constant [23 x i8] c"mm_compaction_suitable\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_suitable = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_suitable }, align 4
@__tracepoint_mm_compaction_suitable = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_suitable, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_suitable, ptr null, ptr @__traceiter_mm_compaction_suitable, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_suitable = internal constant ptr @__tracepoint_mm_compaction_suitable, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_deferred = internal constant [23 x i8] c"mm_compaction_deferred\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_deferred = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_deferred }, align 4
@__tracepoint_mm_compaction_deferred = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_deferred, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_deferred, ptr null, ptr @__traceiter_mm_compaction_deferred, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_deferred = internal constant ptr @__tracepoint_mm_compaction_deferred, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_defer_compaction = internal constant [31 x i8] c"mm_compaction_defer_compaction\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_defer_compaction = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_defer_compaction }, align 4
@__tracepoint_mm_compaction_defer_compaction = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_defer_compaction, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_defer_compaction, ptr null, ptr @__traceiter_mm_compaction_defer_compaction, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_defer_compaction = internal constant ptr @__tracepoint_mm_compaction_defer_compaction, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_defer_reset = internal constant [26 x i8] c"mm_compaction_defer_reset\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_defer_reset = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_defer_reset }, align 4
@__tracepoint_mm_compaction_defer_reset = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_defer_reset, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_defer_reset, ptr null, ptr @__traceiter_mm_compaction_defer_reset, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_defer_reset = internal constant ptr @__tracepoint_mm_compaction_defer_reset, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_kcompactd_sleep = internal constant [30 x i8] c"mm_compaction_kcompactd_sleep\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_kcompactd_sleep = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_kcompactd_sleep }, align 4
@__tracepoint_mm_compaction_kcompactd_sleep = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_kcompactd_sleep, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_kcompactd_sleep, ptr null, ptr @__traceiter_mm_compaction_kcompactd_sleep, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_kcompactd_sleep = internal constant ptr @__tracepoint_mm_compaction_kcompactd_sleep, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_wakeup_kcompactd = internal constant [31 x i8] c"mm_compaction_wakeup_kcompactd\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_wakeup_kcompactd = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_wakeup_kcompactd }, align 4
@__tracepoint_mm_compaction_wakeup_kcompactd = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_wakeup_kcompactd, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_wakeup_kcompactd, ptr null, ptr @__traceiter_mm_compaction_wakeup_kcompactd, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_wakeup_kcompactd = internal constant ptr @__tracepoint_mm_compaction_wakeup_kcompactd, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_compaction_kcompactd_wake = internal constant [29 x i8] c"mm_compaction_kcompactd_wake\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_compaction_kcompactd_wake = dso_local global %struct.static_call_key { ptr @__traceiter_mm_compaction_kcompactd_wake }, align 4
@__tracepoint_mm_compaction_kcompactd_wake = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_compaction_kcompactd_wake, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_compaction_kcompactd_wake, ptr null, ptr @__traceiter_mm_compaction_kcompactd_wake, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_compaction_kcompactd_wake = internal constant ptr @__tracepoint_mm_compaction_kcompactd_wake, section "__tracepoints_ptrs", align 4
@str__compaction__trace_system_name = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"compaction\00", [21 x i8] zeroinitializer }, align 32
@.str = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"COMPACT_SKIPPED\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_SKIPPED = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_SKIPPED = internal global ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_DEFERRED\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_DEFERRED = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.1, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_DEFERRED = internal global ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_CONTINUE\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_CONTINUE = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.2, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_CONTINUE = internal global ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"COMPACT_SUCCESS\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_SUCCESS = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.3, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_SUCCESS = internal global ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"COMPACT_PARTIAL_SKIPPED\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.4, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED = internal global ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_COMPLETE\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_COMPLETE = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.5, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_COMPLETE = internal global ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"COMPACT_NO_SUITABLE_PAGE\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.6, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE = internal global ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, section "_ftrace_eval_map", align 4
@.str.7 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"COMPACT_NOT_SUITABLE_ZONE\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.7, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE = internal global ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, section "_ftrace_eval_map", align 4
@.str.8 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"COMPACT_CONTENDED\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_CONTENDED = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.8, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_CONTENDED = internal global ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, section "_ftrace_eval_map", align 4
@.str.9 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"COMPACT_PRIO_SYNC_FULL\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.9, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, section "_ftrace_eval_map", align 4
@.str.10 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"COMPACT_PRIO_SYNC_LIGHT\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.10, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, section "_ftrace_eval_map", align 4
@.str.11 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"COMPACT_PRIO_ASYNC\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_ASYNC = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.11, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_ASYNC = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, section "_ftrace_eval_map", align 4
@.str.12 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ZONE_DMA\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_DMA = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.12, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_DMA = internal global ptr @__TRACE_SYSTEM_ZONE_DMA, section "_ftrace_eval_map", align 4
@.str.13 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ZONE_NORMAL\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_NORMAL = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.13, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_NORMAL = internal global ptr @__TRACE_SYSTEM_ZONE_NORMAL, section "_ftrace_eval_map", align 4
@.str.14 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ZONE_HIGHMEM\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_HIGHMEM = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.14, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_HIGHMEM = internal global ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, section "_ftrace_eval_map", align 4
@.str.15 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ZONE_MOVABLE\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_MOVABLE = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.15, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_MOVABLE = internal global ptr @__TRACE_SYSTEM_ZONE_MOVABLE, section "_ftrace_eval_map", align 4
@.str.16 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"LRU_INACTIVE_ANON\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_INACTIVE_ANON = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.16, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_INACTIVE_ANON = internal global ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, section "_ftrace_eval_map", align 4
@.str.17 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_ACTIVE_ANON\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_ACTIVE_ANON = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.17, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_ACTIVE_ANON = internal global ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, section "_ftrace_eval_map", align 4
@.str.18 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"LRU_INACTIVE_FILE\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_INACTIVE_FILE = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.18, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_INACTIVE_FILE = internal global ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, section "_ftrace_eval_map", align 4
@.str.19 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_ACTIVE_FILE\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_ACTIVE_FILE = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.19, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_ACTIVE_FILE = internal global ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, section "_ftrace_eval_map", align 4
@.str.20 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_UNEVICTABLE\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_UNEVICTABLE = internal global %struct.trace_eval_map { ptr @str__compaction__trace_system_name, ptr @.str.20, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_UNEVICTABLE = internal global ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, section "_ftrace_eval_map", align 4
@trace_event_fields_mm_compaction_isolate_template = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.29, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.31, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_mm_compaction_isolate_template = internal global %struct.trace_event_class { ptr @str__compaction__trace_system_name, ptr @trace_event_raw_event_mm_compaction_isolate_template, ptr @perf_trace_mm_compaction_isolate_template, ptr @trace_event_reg, ptr @trace_event_fields_mm_compaction_isolate_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_compaction_isolate_template, i64 24), ptr getelementptr (i8, ptr @event_class_mm_compaction_isolate_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_compaction_isolate_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_compaction_isolate_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_compaction_isolate_template = internal global { [114 x i8], [46 x i8] } { [114 x i8] c"\22range=(0x%lx ~ 0x%lx) nr_scanned=%lu nr_taken=%lu\22, REC->start_pfn, REC->end_pfn, REC->nr_scanned, REC->nr_taken\00", [46 x i8] zeroinitializer }, align 32
@event_mm_compaction_isolate_migratepages = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_isolate_template, %union.anon.106 { ptr @__tracepoint_mm_compaction_isolate_migratepages }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_isolate_template }, ptr @print_fmt_mm_compaction_isolate_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_isolate_migratepages = internal global ptr @event_mm_compaction_isolate_migratepages, section "_ftrace_events", align 4
@event_mm_compaction_isolate_freepages = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_isolate_template, %union.anon.106 { ptr @__tracepoint_mm_compaction_isolate_freepages }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_isolate_template }, ptr @print_fmt_mm_compaction_isolate_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_isolate_freepages = internal global ptr @event_mm_compaction_isolate_freepages, section "_ftrace_events", align 4
@trace_event_fields_mm_compaction_migratepages = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.35, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_mm_compaction_migratepages = internal global %struct.trace_event_class { ptr @str__compaction__trace_system_name, ptr @trace_event_raw_event_mm_compaction_migratepages, ptr @perf_trace_mm_compaction_migratepages, ptr @trace_event_reg, ptr @trace_event_fields_mm_compaction_migratepages, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_compaction_migratepages, i64 24), ptr getelementptr (i8, ptr @event_class_mm_compaction_migratepages, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_compaction_migratepages = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_compaction_migratepages, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_compaction_migratepages = internal global { [66 x i8], [62 x i8] } { [66 x i8] c"\22nr_migrated=%lu nr_failed=%lu\22, REC->nr_migrated, REC->nr_failed\00", [62 x i8] zeroinitializer }, align 32
@event_mm_compaction_migratepages = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_migratepages, %union.anon.106 { ptr @__tracepoint_mm_compaction_migratepages }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_migratepages }, ptr @print_fmt_mm_compaction_migratepages, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_migratepages = internal global ptr @event_mm_compaction_migratepages, section "_ftrace_events", align 4
@trace_event_fields_mm_compaction_begin = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.38, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.40, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_mm_compaction_begin = internal global %struct.trace_event_class { ptr @str__compaction__trace_system_name, ptr @trace_event_raw_event_mm_compaction_begin, ptr @perf_trace_mm_compaction_begin, ptr @trace_event_reg, ptr @trace_event_fields_mm_compaction_begin, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_compaction_begin, i64 24), ptr getelementptr (i8, ptr @event_class_mm_compaction_begin, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_compaction_begin = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_compaction_begin, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_compaction_begin = internal global { [171 x i8], [53 x i8] } { [171 x i8] c"\22zone_start=0x%lx migrate_pfn=0x%lx free_pfn=0x%lx zone_end=0x%lx, mode=%s\22, REC->zone_start, REC->migrate_pfn, REC->free_pfn, REC->zone_end, REC->sync ? \22sync\22 : \22async\22\00", [53 x i8] zeroinitializer }, align 32
@event_mm_compaction_begin = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_begin, %union.anon.106 { ptr @__tracepoint_mm_compaction_begin }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_begin }, ptr @print_fmt_mm_compaction_begin, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_begin = internal global ptr @event_mm_compaction_begin, section "_ftrace_events", align 4
@trace_event_fields_mm_compaction_end = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.38, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.104 { %struct.anon.105 { ptr @.str.40, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.41, %union.anon.104 { %struct.anon.105 { ptr @.str.42, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.46, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_mm_compaction_end = internal global %struct.trace_event_class { ptr @str__compaction__trace_system_name, ptr @trace_event_raw_event_mm_compaction_end, ptr @perf_trace_mm_compaction_end, ptr @trace_event_reg, ptr @trace_event_fields_mm_compaction_end, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_compaction_end, i64 24), ptr getelementptr (i8, ptr @event_class_mm_compaction_end, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_compaction_end = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_compaction_end, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_compaction_end = internal global { [546 x i8], [158 x i8] } { [546 x i8] c"\22zone_start=0x%lx migrate_pfn=0x%lx free_pfn=0x%lx zone_end=0x%lx, mode=%s status=%s\22, REC->zone_start, REC->migrate_pfn, REC->free_pfn, REC->zone_end, REC->sync ? \22sync\22 : \22async\22, __print_symbolic(REC->status, {COMPACT_SKIPPED, \22skipped\22}, {COMPACT_DEFERRED, \22deferred\22}, {COMPACT_CONTINUE, \22continue\22}, {COMPACT_SUCCESS, \22success\22}, {COMPACT_PARTIAL_SKIPPED, \22partial_skipped\22}, {COMPACT_COMPLETE, \22complete\22}, {COMPACT_NO_SUITABLE_PAGE, \22no_suitable_page\22}, {COMPACT_NOT_SUITABLE_ZONE, \22not_suitable_zone\22}, {COMPACT_CONTENDED, \22contended\22})\00", [158 x i8] zeroinitializer }, align 32
@event_mm_compaction_end = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_end, %union.anon.106 { ptr @__tracepoint_mm_compaction_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_end }, ptr @print_fmt_mm_compaction_end, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_end = internal global ptr @event_mm_compaction_end, section "_ftrace_events", align 4
@trace_event_fields_mm_compaction_try_to_compact_pages = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.57, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.104 { %struct.anon.105 { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.60, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_mm_compaction_try_to_compact_pages = internal global %struct.trace_event_class { ptr @str__compaction__trace_system_name, ptr @trace_event_raw_event_mm_compaction_try_to_compact_pages, ptr @perf_trace_mm_compaction_try_to_compact_pages, ptr @trace_event_reg, ptr @trace_event_fields_mm_compaction_try_to_compact_pages, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_compaction_try_to_compact_pages, i64 24), ptr getelementptr (i8, ptr @event_class_mm_compaction_try_to_compact_pages, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_compaction_try_to_compact_pages = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_compaction_try_to_compact_pages, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_compaction_try_to_compact_pages = internal global { [3033 x i8], [743 x i8] } { [3033 x i8] c"\22order=%d gfp_mask=%s priority=%d\22, REC->order, (REC->gfp_mask) ? __print_flags(REC->gfp_mask, \22|\22, {(unsigned long)(((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))) | (( gfp_t)0x400u)), \22GFP_TRANSHUGE\22}, {(unsigned long)((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))), \22GFP_TRANSHUGE_LIGHT\22}, {(unsigned long)((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)), \22GFP_HIGHUSER_MOVABLE\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)), \22GFP_HIGHUSER\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)), \22GFP_USER\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)) | (( gfp_t)0x400000u)), \22GFP_KERNEL_ACCOUNT\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)), \22GFP_KERNEL\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u)), \22GFP_NOFS\22}, {(unsigned long)((( gfp_t)0x20u)|(( gfp_t)0x200u)|(( gfp_t)0x800u)), \22GFP_ATOMIC\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u))), \22GFP_NOIO\22}, {(unsigned long)((( gfp_t)0x800u)), \22GFP_NOWAIT\22}, {(unsigned long)(( gfp_t)0x01u), \22GFP_DMA\22}, {(unsigned long)(( gfp_t)0x02u), \22__GFP_HIGHMEM\22}, {(unsigned long)(( gfp_t)0x04u), \22GFP_DMA32\22}, {(unsigned long)(( gfp_t)0x20u), \22__GFP_HIGH\22}, {(unsigned long)(( gfp_t)0x200u), \22__GFP_ATOMIC\22}, {(unsigned long)(( gfp_t)0x40u), \22__GFP_IO\22}, {(unsigned long)(( gfp_t)0x80u), \22__GFP_FS\22}, {(unsigned long)(( gfp_t)0x2000u), \22__GFP_NOWARN\22}, {(unsigned long)(( gfp_t)0x4000u), \22__GFP_RETRY_MAYFAIL\22}, {(unsigned long)(( gfp_t)0x8000u), \22__GFP_NOFAIL\22}, {(unsigned long)(( gfp_t)0x10000u), \22__GFP_NORETRY\22}, {(unsigned long)(( gfp_t)0x40000u), \22__GFP_COMP\22}, {(unsigned long)(( gfp_t)0x100u), \22__GFP_ZERO\22}, {(unsigned long)(( gfp_t)0x80000u), \22__GFP_NOMEMALLOC\22}, {(unsigned long)(( gfp_t)0x20000u), \22__GFP_MEMALLOC\22}, {(unsigned long)(( gfp_t)0x100000u), \22__GFP_HARDWALL\22}, {(unsigned long)(( gfp_t)0x200000u), \22__GFP_THISNODE\22}, {(unsigned long)(( gfp_t)0x10u), \22__GFP_RECLAIMABLE\22}, {(unsigned long)(( gfp_t)0x08u), \22__GFP_MOVABLE\22}, {(unsigned long)(( gfp_t)0x400000u), \22__GFP_ACCOUNT\22}, {(unsigned long)(( gfp_t)0x1000u), \22__GFP_WRITE\22}, {(unsigned long)(( gfp_t)(0x400u|0x800u)), \22__GFP_RECLAIM\22}, {(unsigned long)(( gfp_t)0x400u), \22__GFP_DIRECT_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800u), \22__GFP_KSWAPD_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800000u), \22__GFP_ZEROTAGS\22}, {(unsigned long)(( gfp_t)0x1000000u),\22__GFP_SKIP_KASAN_POISON\22} ) : \22none\22, REC->prio\00", [743 x i8] zeroinitializer }, align 32
@event_mm_compaction_try_to_compact_pages = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_try_to_compact_pages, %union.anon.106 { ptr @__tracepoint_mm_compaction_try_to_compact_pages }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_try_to_compact_pages }, ptr @print_fmt_mm_compaction_try_to_compact_pages, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_try_to_compact_pages = internal global ptr @event_mm_compaction_try_to_compact_pages, section "_ftrace_events", align 4
@trace_event_fields_mm_compaction_suitable_template = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.102, %union.anon.104 { %struct.anon.105 { ptr @.str.103, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.57, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.104, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_mm_compaction_suitable_template = internal global %struct.trace_event_class { ptr @str__compaction__trace_system_name, ptr @trace_event_raw_event_mm_compaction_suitable_template, ptr @perf_trace_mm_compaction_suitable_template, ptr @trace_event_reg, ptr @trace_event_fields_mm_compaction_suitable_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_compaction_suitable_template, i64 24), ptr getelementptr (i8, ptr @event_class_mm_compaction_suitable_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_compaction_suitable_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_compaction_suitable_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_compaction_suitable_template = internal global { [546 x i8], [158 x i8] } { [546 x i8] c"\22node=%d zone=%-8s order=%d ret=%s\22, REC->nid, __print_symbolic(REC->idx, {ZONE_DMA, \22DMA\22}, {ZONE_NORMAL, \22Normal\22}, {ZONE_HIGHMEM, \22HighMem\22}, {ZONE_MOVABLE, \22Movable\22}), REC->order, __print_symbolic(REC->ret, {COMPACT_SKIPPED, \22skipped\22}, {COMPACT_DEFERRED, \22deferred\22}, {COMPACT_CONTINUE, \22continue\22}, {COMPACT_SUCCESS, \22success\22}, {COMPACT_PARTIAL_SKIPPED, \22partial_skipped\22}, {COMPACT_COMPLETE, \22complete\22}, {COMPACT_NO_SUITABLE_PAGE, \22no_suitable_page\22}, {COMPACT_NOT_SUITABLE_ZONE, \22not_suitable_zone\22}, {COMPACT_CONTENDED, \22contended\22})\00", [158 x i8] zeroinitializer }, align 32
@event_mm_compaction_finished = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_suitable_template, %union.anon.106 { ptr @__tracepoint_mm_compaction_finished }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_suitable_template }, ptr @print_fmt_mm_compaction_suitable_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_finished = internal global ptr @event_mm_compaction_finished, section "_ftrace_events", align 4
@event_mm_compaction_suitable = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_suitable_template, %union.anon.106 { ptr @__tracepoint_mm_compaction_suitable }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_suitable_template }, ptr @print_fmt_mm_compaction_suitable_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_suitable = internal global ptr @event_mm_compaction_suitable, section "_ftrace_events", align 4
@trace_event_fields_mm_compaction_defer_template = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.102, %union.anon.104 { %struct.anon.105 { ptr @.str.103, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.57, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.111, %union.anon.104 { %struct.anon.105 { ptr @.str.112, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.111, %union.anon.104 { %struct.anon.105 { ptr @.str.113, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.114, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_mm_compaction_defer_template = internal global %struct.trace_event_class { ptr @str__compaction__trace_system_name, ptr @trace_event_raw_event_mm_compaction_defer_template, ptr @perf_trace_mm_compaction_defer_template, ptr @trace_event_reg, ptr @trace_event_fields_mm_compaction_defer_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_compaction_defer_template, i64 24), ptr getelementptr (i8, ptr @event_class_mm_compaction_defer_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_compaction_defer_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_compaction_defer_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_compaction_defer_template = internal global { [276 x i8], [76 x i8] } { [276 x i8] c"\22node=%d zone=%-8s order=%d order_failed=%d consider=%u limit=%lu\22, REC->nid, __print_symbolic(REC->idx, {ZONE_DMA, \22DMA\22}, {ZONE_NORMAL, \22Normal\22}, {ZONE_HIGHMEM, \22HighMem\22}, {ZONE_MOVABLE, \22Movable\22}), REC->order, REC->order_failed, REC->considered, 1UL << REC->defer_shift\00", [76 x i8] zeroinitializer }, align 32
@event_mm_compaction_deferred = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_defer_template, %union.anon.106 { ptr @__tracepoint_mm_compaction_deferred }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_defer_template }, ptr @print_fmt_mm_compaction_defer_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_deferred = internal global ptr @event_mm_compaction_deferred, section "_ftrace_events", align 4
@event_mm_compaction_defer_compaction = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_defer_template, %union.anon.106 { ptr @__tracepoint_mm_compaction_defer_compaction }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_defer_template }, ptr @print_fmt_mm_compaction_defer_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_defer_compaction = internal global ptr @event_mm_compaction_defer_compaction, section "_ftrace_events", align 4
@event_mm_compaction_defer_reset = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_defer_template, %union.anon.106 { ptr @__tracepoint_mm_compaction_defer_reset }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_defer_template }, ptr @print_fmt_mm_compaction_defer_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_defer_reset = internal global ptr @event_mm_compaction_defer_reset, section "_ftrace_events", align 4
@trace_event_fields_mm_compaction_kcompactd_sleep = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_mm_compaction_kcompactd_sleep = internal global %struct.trace_event_class { ptr @str__compaction__trace_system_name, ptr @trace_event_raw_event_mm_compaction_kcompactd_sleep, ptr @perf_trace_mm_compaction_kcompactd_sleep, ptr @trace_event_reg, ptr @trace_event_fields_mm_compaction_kcompactd_sleep, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_compaction_kcompactd_sleep, i64 24), ptr getelementptr (i8, ptr @event_class_mm_compaction_kcompactd_sleep, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_compaction_kcompactd_sleep = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_compaction_kcompactd_sleep, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_compaction_kcompactd_sleep = internal global { [19 x i8], [45 x i8] } { [19 x i8] c"\22nid=%d\22, REC->nid\00", [45 x i8] zeroinitializer }, align 32
@event_mm_compaction_kcompactd_sleep = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_compaction_kcompactd_sleep, %union.anon.106 { ptr @__tracepoint_mm_compaction_kcompactd_sleep }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_compaction_kcompactd_sleep }, ptr @print_fmt_mm_compaction_kcompactd_sleep, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_kcompactd_sleep = internal global ptr @event_mm_compaction_kcompactd_sleep, section "_ftrace_events", align 4
@trace_event_fields_kcompactd_wake_template = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.104 { %struct.anon.105 { ptr @.str.57, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.102, %union.anon.104 { %struct.anon.105 { ptr @.str.117, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_kcompactd_wake_template = internal global %struct.trace_event_class { ptr @str__compaction__trace_system_name, ptr @trace_event_raw_event_kcompactd_wake_template, ptr @perf_trace_kcompactd_wake_template, ptr @trace_event_reg, ptr @trace_event_fields_kcompactd_wake_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_kcompactd_wake_template, i64 24), ptr getelementptr (i8, ptr @event_class_kcompactd_wake_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_kcompactd_wake_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_kcompactd_wake_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_kcompactd_wake_template = internal global { [197 x i8], [59 x i8] } { [197 x i8] c"\22nid=%d order=%d classzone_idx=%-8s\22, REC->nid, REC->order, __print_symbolic(REC->highest_zoneidx, {ZONE_DMA, \22DMA\22}, {ZONE_NORMAL, \22Normal\22}, {ZONE_HIGHMEM, \22HighMem\22}, {ZONE_MOVABLE, \22Movable\22})\00", [59 x i8] zeroinitializer }, align 32
@event_mm_compaction_wakeup_kcompactd = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_kcompactd_wake_template, %union.anon.106 { ptr @__tracepoint_mm_compaction_wakeup_kcompactd }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_kcompactd_wake_template }, ptr @print_fmt_kcompactd_wake_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_wakeup_kcompactd = internal global ptr @event_mm_compaction_wakeup_kcompactd, section "_ftrace_events", align 4
@event_mm_compaction_kcompactd_wake = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_kcompactd_wake_template, %union.anon.106 { ptr @__tracepoint_mm_compaction_kcompactd_wake }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_kcompactd_wake_template }, ptr @print_fmt_kcompactd_wake_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_compaction_kcompactd_wake = internal global ptr @event_mm_compaction_kcompactd_wake, section "_ftrace_events", align 4
@__bpf_trace_tp_map_mm_compaction_isolate_migratepages = internal global %union.anon.108 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_isolate_migratepages, ptr @__bpf_trace_mm_compaction_isolate_template, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_isolate_freepages = internal global %union.anon.109 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_isolate_freepages, ptr @__bpf_trace_mm_compaction_isolate_template, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_migratepages = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_migratepages, ptr @__bpf_trace_mm_compaction_migratepages, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_begin = internal global %union.anon.111 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_begin, ptr @__bpf_trace_mm_compaction_begin, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_end = internal global %union.anon.112 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_end, ptr @__bpf_trace_mm_compaction_end, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_try_to_compact_pages = internal global %union.anon.113 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_try_to_compact_pages, ptr @__bpf_trace_mm_compaction_try_to_compact_pages, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_finished = internal global %union.anon.114 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_finished, ptr @__bpf_trace_mm_compaction_suitable_template, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_suitable = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_suitable, ptr @__bpf_trace_mm_compaction_suitable_template, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_deferred = internal global %union.anon.116 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_deferred, ptr @__bpf_trace_mm_compaction_defer_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_defer_compaction = internal global %union.anon.117 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_defer_compaction, ptr @__bpf_trace_mm_compaction_defer_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_defer_reset = internal global %union.anon.118 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_defer_reset, ptr @__bpf_trace_mm_compaction_defer_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_kcompactd_sleep = internal global %union.anon.119 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_kcompactd_sleep, ptr @__bpf_trace_mm_compaction_kcompactd_sleep, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_wakeup_kcompactd = internal global %union.anon.120 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_wakeup_kcompactd, ptr @__bpf_trace_kcompactd_wake_template, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_compaction_kcompactd_wake = internal global %union.anon.121 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_compaction_kcompactd_wake, ptr @__bpf_trace_kcompactd_wake_template, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@.str.21 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"VM_BUG_ON_PAGE(!PageLocked(page))\00", [62 x i8] zeroinitializer }, align 32
@__kstrtab_PageMovable = external dso_local constant [0 x i8], align 1
@__kstrtabns_PageMovable = external dso_local constant [0 x i8], align 1
@__ksymtab_PageMovable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @PageMovable to i32), ptr @__kstrtab_PageMovable, ptr @__kstrtabns_PageMovable }, section "___ksymtab+PageMovable", align 4
@.str.22 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"VM_BUG_ON_PAGE((unsigned long)mapping & 0x2)\00", [51 x i8] zeroinitializer }, align 32
@__kstrtab___SetPageMovable = external dso_local constant [0 x i8], align 1
@__kstrtabns___SetPageMovable = external dso_local constant [0 x i8], align 1
@__ksymtab___SetPageMovable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SetPageMovable to i32), ptr @__kstrtab___SetPageMovable, ptr @__kstrtabns___SetPageMovable }, section "___ksymtab+__SetPageMovable", align 4
@.str.23 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(!PageMovable(page))\00", [61 x i8] zeroinitializer }, align 32
@__kstrtab___ClearPageMovable = external dso_local constant [0 x i8], align 1
@__kstrtabns___ClearPageMovable = external dso_local constant [0 x i8], align 1
@__ksymtab___ClearPageMovable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__ClearPageMovable to i32), ptr @__kstrtab___ClearPageMovable, ptr @__kstrtabns___ClearPageMovable }, section "___ksymtab+__ClearPageMovable", align 4
@sysctl_compact_unevictable_allowed = dso_local local_unnamed_addr global i32 1, section ".data..read_mostly", align 4
@sysctl_extfrag_threshold = dso_local global { i32, [28 x i8] } { i32 500, [28 x i8] zeroinitializer }, align 32
@sysctl_compaction_proactiveness = dso_local local_unnamed_addr global i32 20, section ".data..read_mostly", align 4
@.str.24 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"kcompactd%d\00", [20 x i8] zeroinitializer }, align 32
@kcompactd_run._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.26, ptr @.str.27, i32 2995, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\013Failed to start kcompactd on node %d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"kcompactd_run\00", [18 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mm/compaction.c\00", [16 x i8] zeroinitializer }, align 32
@kcompactd_run._entry_ptr = internal global ptr @kcompactd_run._entry, section ".printk_index", align 4
@__initcall__kmod_compaction__417_3056_kcompactd_init4 = internal global ptr @kcompactd_init, section ".initcall4.init", align 4
@.str.28 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"start_pfn\00", [22 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"end_pfn\00", [24 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nr_scanned\00", [21 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nr_taken\00", [23 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"range=(0x%lx ~ 0x%lx) nr_scanned=%lu nr_taken=%lu\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"nr_migrated\00", [20 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nr_failed\00", [22 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"nr_migrated=%lu nr_failed=%lu\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"zone_start\00", [21 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"migrate_pfn\00", [20 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"free_pfn\00", [23 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"zone_end\00", [23 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bool\00", [27 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"sync\00", [27 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"zone_start=0x%lx migrate_pfn=0x%lx free_pfn=0x%lx zone_end=0x%lx, mode=%s\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"async\00", [26 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"status\00", [25 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [85 x i8], [43 x i8] } { [85 x i8] c"zone_start=0x%lx migrate_pfn=0x%lx free_pfn=0x%lx zone_end=0x%lx, mode=%s status=%s\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_compaction_end.symbols = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.48 }, %struct.trace_print_flags { i32 2, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 8, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 5, ptr @.str.53 }, %struct.trace_print_flags { i32 3, ptr @.str.54 }, %struct.trace_print_flags { i32 0, ptr @.str.55 }, %struct.trace_print_flags { i32 7, ptr @.str.56 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"skipped\00", [24 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"deferred\00", [23 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"continue\00", [23 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"success\00", [24 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"partial_skipped\00", [16 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"complete\00", [23 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"no_suitable_page\00", [47 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"not_suitable_zone\00", [46 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"contended\00", [22 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"order\00", [26 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"gfp_t\00", [26 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"gfp_mask\00", [23 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"prio\00", [27 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"order=%d gfp_mask=%s priority=%d\0A\00", [62 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_compaction_try_to_compact_pages.__flags = internal constant { [38 x %struct.trace_print_flags], [80 x i8] } { [38 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 18621642, ptr @.str.62 }, %struct.trace_print_flags { i32 18620618, ptr @.str.63 }, %struct.trace_print_flags { i32 17829066, ptr @.str.64 }, %struct.trace_print_flags { i32 1051842, ptr @.str.65 }, %struct.trace_print_flags { i32 1051840, ptr @.str.66 }, %struct.trace_print_flags { i32 4197568, ptr @.str.67 }, %struct.trace_print_flags { i32 3264, ptr @.str.68 }, %struct.trace_print_flags { i32 3136, ptr @.str.69 }, %struct.trace_print_flags { i32 2592, ptr @.str.70 }, %struct.trace_print_flags { i32 3072, ptr @.str.71 }, %struct.trace_print_flags { i32 2048, ptr @.str.72 }, %struct.trace_print_flags { i32 1, ptr @.str.73 }, %struct.trace_print_flags { i32 2, ptr @.str.74 }, %struct.trace_print_flags { i32 4, ptr @.str.75 }, %struct.trace_print_flags { i32 32, ptr @.str.76 }, %struct.trace_print_flags { i32 512, ptr @.str.77 }, %struct.trace_print_flags { i32 64, ptr @.str.78 }, %struct.trace_print_flags { i32 128, ptr @.str.79 }, %struct.trace_print_flags { i32 8192, ptr @.str.80 }, %struct.trace_print_flags { i32 16384, ptr @.str.81 }, %struct.trace_print_flags { i32 32768, ptr @.str.82 }, %struct.trace_print_flags { i32 65536, ptr @.str.83 }, %struct.trace_print_flags { i32 262144, ptr @.str.84 }, %struct.trace_print_flags { i32 256, ptr @.str.85 }, %struct.trace_print_flags { i32 524288, ptr @.str.86 }, %struct.trace_print_flags { i32 131072, ptr @.str.87 }, %struct.trace_print_flags { i32 1048576, ptr @.str.88 }, %struct.trace_print_flags { i32 2097152, ptr @.str.89 }, %struct.trace_print_flags { i32 16, ptr @.str.90 }, %struct.trace_print_flags { i32 8, ptr @.str.91 }, %struct.trace_print_flags { i32 4194304, ptr @.str.92 }, %struct.trace_print_flags { i32 4096, ptr @.str.93 }, %struct.trace_print_flags { i32 3072, ptr @.str.94 }, %struct.trace_print_flags { i32 1024, ptr @.str.95 }, %struct.trace_print_flags { i32 2048, ptr @.str.96 }, %struct.trace_print_flags { i32 8388608, ptr @.str.97 }, %struct.trace_print_flags { i32 16777216, ptr @.str.98 }, %struct.trace_print_flags { i32 -1, ptr null }], [80 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"GFP_TRANSHUGE\00", [18 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GFP_TRANSHUGE_LIGHT\00", [44 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFP_HIGHUSER_MOVABLE\00", [43 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"GFP_HIGHUSER\00", [19 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"GFP_USER\00", [23 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFP_KERNEL_ACCOUNT\00", [45 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GFP_KERNEL\00", [21 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"GFP_NOFS\00", [23 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GFP_ATOMIC\00", [21 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"GFP_NOIO\00", [23 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GFP_NOWAIT\00", [21 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"GFP_DMA\00", [24 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_HIGHMEM\00", [18 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"GFP_DMA32\00", [22 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__GFP_HIGH\00", [21 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__GFP_ATOMIC\00", [19 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"__GFP_IO\00", [23 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"__GFP_FS\00", [23 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__GFP_NOWARN\00", [19 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__GFP_RETRY_MAYFAIL\00", [44 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__GFP_NOFAIL\00", [19 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_NORETRY\00", [18 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__GFP_COMP\00", [21 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__GFP_ZERO\00", [21 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__GFP_NOMEMALLOC\00", [47 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_MEMALLOC\00", [17 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_HARDWALL\00", [17 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_THISNODE\00", [17 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__GFP_RECLAIMABLE\00", [46 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_MOVABLE\00", [18 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_ACCOUNT\00", [18 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"__GFP_WRITE\00", [20 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_RECLAIM\00", [18 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__GFP_DIRECT_RECLAIM\00", [43 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__GFP_KSWAPD_RECLAIM\00", [43 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_ZEROTAGS\00", [17 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"__GFP_SKIP_KASAN_POISON\00", [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"|\00", [30 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"nid\00", [28 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"enum zone_type\00", [17 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"idx\00", [28 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ret\00", [28 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"node=%d zone=%-8s order=%d ret=%s\0A\00", [61 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_compaction_suitable_template.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.106 }, %struct.trace_print_flags { i32 1, ptr @.str.107 }, %struct.trace_print_flags { i32 2, ptr @.str.108 }, %struct.trace_print_flags { i32 3, ptr @.str.109 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"DMA\00", [28 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Normal\00", [25 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"HighMem\00", [24 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Movable\00", [24 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_compaction_suitable_template.symbols.110 = internal constant { [10 x %struct.trace_print_flags], [48 x i8] } { [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.48 }, %struct.trace_print_flags { i32 2, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 8, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 5, ptr @.str.53 }, %struct.trace_print_flags { i32 3, ptr @.str.54 }, %struct.trace_print_flags { i32 0, ptr @.str.55 }, %struct.trace_print_flags { i32 7, ptr @.str.56 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"considered\00", [21 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"defer_shift\00", [20 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"order_failed\00", [19 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"node=%d zone=%-8s order=%d order_failed=%d consider=%u limit=%lu\0A\00", [62 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_compaction_defer_template.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.106 }, %struct.trace_print_flags { i32 1, ptr @.str.107 }, %struct.trace_print_flags { i32 2, ptr @.str.108 }, %struct.trace_print_flags { i32 3, ptr @.str.109 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"nid=%d\0A\00", [24 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"highest_zoneidx\00", [16 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"nid=%d order=%d classzone_idx=%-8s\0A\00", [60 x i8] zeroinitializer }, align 32
@trace_raw_output_kcompactd_wake_template.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.106 }, %struct.trace_print_flags { i32 1, ptr @.str.107 }, %struct.trace_print_flags { i32 2, ptr @.str.108 }, %struct.trace_print_flags { i32 3, ptr @.str.109 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str.119 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(((typeof(page))_compound_head(page))))\00", [61 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"include/trace/events/compaction.h\00", [62 x i8] zeroinitializer }, align 32
@trace_mm_compaction_defer_reset.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.121 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.122 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@.str.123 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(p))\00", [32 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(page))\00", [61 x i8] zeroinitializer }, align 32
@trace_mm_compaction_isolate_freepages.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@vm_event_states = external dso_local global %struct.vm_event_state, section ".data..percpu", align 4
@vm_node_stat = external dso_local global [40 x %struct.atomic_t], align 4
@__tracepoint_page_ref_mod_unless = external dso_local global %struct.tracepoint, align 4
@folio_lruvec.__warned = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.126 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"VM_WARN_ON_ONCE_FOLIO(!memcg && !mem_cgroup_disabled())\00", [40 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/linux/memcontrol.h\00", [37 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"VM_BUG_ON_PAGE(PageTail(&folio->page))\00", [57 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"VM_BUG_ON_FOLIO(folio->memcg_data & MEMCG_DATA_OBJCGS)\00", [41 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"VM_BUG_ON_FOLIO(folio_test_slab(folio))\00", [56 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@memory_cgrp_subsys_enabled_key = external dso_local global %struct.static_key_true, align 4
@root_mem_cgroup = external dso_local local_unnamed_addr global ptr, align 4
@.str.136 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"VM_BUG_ON_FOLIO(folio_test_active(folio) && folio_test_unevictable(folio))\00", [53 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@trace_mm_compaction_isolate_migratepages.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_compaction_suitable.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_compaction_try_to_compact_pages.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_compaction_deferred.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.138 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"include/linux/gfp.h\00", [44 x i8] zeroinitializer }, align 32
@page_group_by_mobility_disabled = external dso_local local_unnamed_addr global i32, align 4
@trace_mm_compaction_begin.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_compaction_finished.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@fast_isolate_freepages.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_mm_compaction_migratepages.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_compaction_end.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_compaction_defer_compaction.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@contig_page_data = external dso_local global %struct.pglist_data, align 128
@trace_mm_compaction_wakeup_kcompactd.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_compaction_kcompactd_sleep.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.139 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/freezer.h\00", [40 x i8] zeroinitializer }, align 32
@system_freezing_cnt = external dso_local global %struct.atomic_t, align 4
@trace_mm_compaction_kcompactd_wake.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.140 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"mm/compaction:online\00", [43 x i8] zeroinitializer }, align 32
@kcompactd_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.142, ptr @.str.27, i32 3048, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013kcompactd: failed to register hotplug callbacks.\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"kcompactd_init\00", [17 x i8] zeroinitializer }, align 32
@kcompactd_init._entry_ptr = internal global ptr @kcompactd_init._entry, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 5, i64 6, i64 8]
@__sancov_gen_cov_switch_values.143 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 4, i64 8]
@__sancov_gen_cov_switch_values.144 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.145 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.146 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 4]
@__sancov_gen_cov_switch_values.147 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 4]
@___asan_gen_.148 = private unnamed_addr constant [35 x i8] c"str__compaction__trace_system_name\00", align 1
@___asan_gen_.149 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.149, i32 36, i32 1 }
@___asan_gen_.177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 274, i32 1 }
@___asan_gen_.186 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 275, i32 1 }
@___asan_gen_.198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 277, i32 1 }
@___asan_gen_.212 = private unnamed_addr constant [34 x i8] c"../include/trace/events/mmflags.h\00", align 1
@___asan_gen_.213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 278, i32 1 }
@___asan_gen_.214 = private unnamed_addr constant [50 x i8] c"trace_event_fields_mm_compaction_isolate_template\00", align 1
@___asan_gen_.217 = private unnamed_addr constant [54 x i8] c"trace_event_type_funcs_mm_compaction_isolate_template\00", align 1
@___asan_gen_.220 = private unnamed_addr constant [41 x i8] c"print_fmt_mm_compaction_isolate_template\00", align 1
@___asan_gen_.223 = private unnamed_addr constant [41 x i8] c"event_mm_compaction_isolate_migratepages\00", align 1
@___asan_gen_.225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 45, i32 1 }
@___asan_gen_.226 = private unnamed_addr constant [38 x i8] c"event_mm_compaction_isolate_freepages\00", align 1
@___asan_gen_.228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 56, i32 1 }
@___asan_gen_.229 = private unnamed_addr constant [46 x i8] c"trace_event_fields_mm_compaction_migratepages\00", align 1
@___asan_gen_.232 = private unnamed_addr constant [50 x i8] c"trace_event_type_funcs_mm_compaction_migratepages\00", align 1
@___asan_gen_.235 = private unnamed_addr constant [37 x i8] c"print_fmt_mm_compaction_migratepages\00", align 1
@___asan_gen_.238 = private unnamed_addr constant [33 x i8] c"event_mm_compaction_migratepages\00", align 1
@___asan_gen_.241 = private unnamed_addr constant [39 x i8] c"trace_event_fields_mm_compaction_begin\00", align 1
@___asan_gen_.244 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_mm_compaction_begin\00", align 1
@___asan_gen_.247 = private unnamed_addr constant [30 x i8] c"print_fmt_mm_compaction_begin\00", align 1
@___asan_gen_.250 = private unnamed_addr constant [26 x i8] c"event_mm_compaction_begin\00", align 1
@___asan_gen_.253 = private unnamed_addr constant [37 x i8] c"trace_event_fields_mm_compaction_end\00", align 1
@___asan_gen_.256 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_mm_compaction_end\00", align 1
@___asan_gen_.259 = private unnamed_addr constant [28 x i8] c"print_fmt_mm_compaction_end\00", align 1
@___asan_gen_.262 = private unnamed_addr constant [24 x i8] c"event_mm_compaction_end\00", align 1
@___asan_gen_.265 = private unnamed_addr constant [54 x i8] c"trace_event_fields_mm_compaction_try_to_compact_pages\00", align 1
@___asan_gen_.268 = private unnamed_addr constant [58 x i8] c"trace_event_type_funcs_mm_compaction_try_to_compact_pages\00", align 1
@___asan_gen_.271 = private unnamed_addr constant [45 x i8] c"print_fmt_mm_compaction_try_to_compact_pages\00", align 1
@___asan_gen_.274 = private unnamed_addr constant [41 x i8] c"event_mm_compaction_try_to_compact_pages\00", align 1
@___asan_gen_.277 = private unnamed_addr constant [51 x i8] c"trace_event_fields_mm_compaction_suitable_template\00", align 1
@___asan_gen_.280 = private unnamed_addr constant [55 x i8] c"trace_event_type_funcs_mm_compaction_suitable_template\00", align 1
@___asan_gen_.283 = private unnamed_addr constant [42 x i8] c"print_fmt_mm_compaction_suitable_template\00", align 1
@___asan_gen_.286 = private unnamed_addr constant [29 x i8] c"event_mm_compaction_finished\00", align 1
@___asan_gen_.288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 210, i32 1 }
@___asan_gen_.289 = private unnamed_addr constant [29 x i8] c"event_mm_compaction_suitable\00", align 1
@___asan_gen_.291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 219, i32 1 }
@___asan_gen_.292 = private unnamed_addr constant [48 x i8] c"trace_event_fields_mm_compaction_defer_template\00", align 1
@___asan_gen_.295 = private unnamed_addr constant [52 x i8] c"trace_event_type_funcs_mm_compaction_defer_template\00", align 1
@___asan_gen_.298 = private unnamed_addr constant [39 x i8] c"print_fmt_mm_compaction_defer_template\00", align 1
@___asan_gen_.301 = private unnamed_addr constant [29 x i8] c"event_mm_compaction_deferred\00", align 1
@___asan_gen_.303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 261, i32 1 }
@___asan_gen_.304 = private unnamed_addr constant [37 x i8] c"event_mm_compaction_defer_compaction\00", align 1
@___asan_gen_.306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 268, i32 1 }
@___asan_gen_.307 = private unnamed_addr constant [32 x i8] c"event_mm_compaction_defer_reset\00", align 1
@___asan_gen_.310 = private unnamed_addr constant [49 x i8] c"trace_event_fields_mm_compaction_kcompactd_sleep\00", align 1
@___asan_gen_.313 = private unnamed_addr constant [53 x i8] c"trace_event_type_funcs_mm_compaction_kcompactd_sleep\00", align 1
@___asan_gen_.316 = private unnamed_addr constant [40 x i8] c"print_fmt_mm_compaction_kcompactd_sleep\00", align 1
@___asan_gen_.319 = private unnamed_addr constant [36 x i8] c"event_mm_compaction_kcompactd_sleep\00", align 1
@___asan_gen_.322 = private unnamed_addr constant [43 x i8] c"trace_event_fields_kcompactd_wake_template\00", align 1
@___asan_gen_.325 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_kcompactd_wake_template\00", align 1
@___asan_gen_.328 = private unnamed_addr constant [34 x i8] c"print_fmt_kcompactd_wake_template\00", align 1
@___asan_gen_.331 = private unnamed_addr constant [37 x i8] c"event_mm_compaction_wakeup_kcompactd\00", align 1
@___asan_gen_.333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 327, i32 1 }
@___asan_gen_.334 = private unnamed_addr constant [35 x i8] c"event_mm_compaction_kcompactd_wake\00", align 1
@___asan_gen_.336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 334, i32 1 }
@___asan_gen_.339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.710, i32 118, i32 2 }
@___asan_gen_.342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.710, i32 133, i32 2 }
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.710, i32 140, i32 2 }
@___asan_gen_.346 = private unnamed_addr constant [25 x i8] c"sysctl_extfrag_threshold\00", align 1
@___asan_gen_.348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.710, i32 2544, i32 5 }
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.710, i32 2993, i32 21 }
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.710, i32 2995, i32 3 }
@___asan_gen_.381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 14, i32 1 }
@___asan_gen_.390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 68, i32 1 }
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 90, i32 1 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 120, i32 1 }
@___asan_gen_.469 = private unnamed_addr constant [8 x i8] c"__flags\00", align 1
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 154, i32 1 }
@___asan_gen_.621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 181, i32 1 }
@___asan_gen_.639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 228, i32 1 }
@___asan_gen_.642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 282, i32 1 }
@___asan_gen_.649 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 299, i32 1 }
@___asan_gen_.654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.686, i32 414, i32 1 }
@___asan_gen_.659 = private unnamed_addr constant [37 x i8] c"../include/trace/events/compaction.h\00", align 1
@___asan_gen_.660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.659, i32 275, i32 1 }
@___asan_gen_.662 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.662, i32 108, i32 2 }
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.692, i32 1368, i32 10 }
@___asan_gen_.669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.686, i32 698, i32 1 }
@___asan_gen_.675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.683, i32 746, i32 2 }
@___asan_gen_.678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.683, i32 537, i32 2 }
@___asan_gen_.681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.683, i32 538, i32 2 }
@___asan_gen_.683 = private unnamed_addr constant [30 x i8] c"../include/linux/memcontrol.h\00", align 1
@___asan_gen_.684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.683, i32 417, i32 2 }
@___asan_gen_.686 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.686, i32 260, i32 2 }
@___asan_gen_.689 = private unnamed_addr constant [29 x i8] c"../include/linux/mm_inline.h\00", align 1
@___asan_gen_.690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.689, i32 83, i32 2 }
@___asan_gen_.692 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.692, i32 717, i32 2 }
@___asan_gen_.695 = private unnamed_addr constant [23 x i8] c"../include/linux/gfp.h\00", align 1
@___asan_gen_.696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.695, i32 347, i32 2 }
@___asan_gen_.698 = private unnamed_addr constant [27 x i8] c"../include/linux/freezer.h\00", align 1
@___asan_gen_.699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.698, i32 57, i32 2 }
@___asan_gen_.702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.710, i32 3045, i32 6 }
@___asan_gen_.703 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.709 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.710 = private constant [19 x i8] c"../mm/compaction.c\00", align 1
@___asan_gen_.711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.710, i32 3048, i32 3 }
@llvm.compiler.used = appending global [301 x ptr] [ptr @TRACE_SYSTEM_COMPACT_COMPLETE, ptr @TRACE_SYSTEM_COMPACT_CONTENDED, ptr @TRACE_SYSTEM_COMPACT_CONTINUE, ptr @TRACE_SYSTEM_COMPACT_DEFERRED, ptr @TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, ptr @TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, ptr @TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, ptr @TRACE_SYSTEM_COMPACT_PRIO_ASYNC, ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, ptr @TRACE_SYSTEM_COMPACT_SKIPPED, ptr @TRACE_SYSTEM_COMPACT_SUCCESS, ptr @TRACE_SYSTEM_LRU_ACTIVE_ANON, ptr @TRACE_SYSTEM_LRU_ACTIVE_FILE, ptr @TRACE_SYSTEM_LRU_INACTIVE_ANON, ptr @TRACE_SYSTEM_LRU_INACTIVE_FILE, ptr @TRACE_SYSTEM_LRU_UNEVICTABLE, ptr @TRACE_SYSTEM_ZONE_DMA, ptr @TRACE_SYSTEM_ZONE_HIGHMEM, ptr @TRACE_SYSTEM_ZONE_MOVABLE, ptr @TRACE_SYSTEM_ZONE_NORMAL, ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, ptr @__TRACE_SYSTEM_ZONE_DMA, ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, ptr @__TRACE_SYSTEM_ZONE_MOVABLE, ptr @__TRACE_SYSTEM_ZONE_NORMAL, ptr @__bpf_trace_tp_map_mm_compaction_begin, ptr @__bpf_trace_tp_map_mm_compaction_defer_compaction, ptr @__bpf_trace_tp_map_mm_compaction_defer_reset, ptr @__bpf_trace_tp_map_mm_compaction_deferred, ptr @__bpf_trace_tp_map_mm_compaction_end, ptr @__bpf_trace_tp_map_mm_compaction_finished, ptr @__bpf_trace_tp_map_mm_compaction_isolate_freepages, ptr @__bpf_trace_tp_map_mm_compaction_isolate_migratepages, ptr @__bpf_trace_tp_map_mm_compaction_kcompactd_sleep, ptr @__bpf_trace_tp_map_mm_compaction_kcompactd_wake, ptr @__bpf_trace_tp_map_mm_compaction_migratepages, ptr @__bpf_trace_tp_map_mm_compaction_suitable, ptr @__bpf_trace_tp_map_mm_compaction_try_to_compact_pages, ptr @__bpf_trace_tp_map_mm_compaction_wakeup_kcompactd, ptr @__event_mm_compaction_begin, ptr @__event_mm_compaction_defer_compaction, ptr @__event_mm_compaction_defer_reset, ptr @__event_mm_compaction_deferred, ptr @__event_mm_compaction_end, ptr @__event_mm_compaction_finished, ptr @__event_mm_compaction_isolate_freepages, ptr @__event_mm_compaction_isolate_migratepages, ptr @__event_mm_compaction_kcompactd_sleep, ptr @__event_mm_compaction_kcompactd_wake, ptr @__event_mm_compaction_migratepages, ptr @__event_mm_compaction_suitable, ptr @__event_mm_compaction_try_to_compact_pages, ptr @__event_mm_compaction_wakeup_kcompactd, ptr @__initcall__kmod_compaction__417_3056_kcompactd_init4, ptr @__ksymtab_PageMovable, ptr @__ksymtab___ClearPageMovable, ptr @__ksymtab___SetPageMovable, ptr @__tracepoint_mm_compaction_begin, ptr @__tracepoint_mm_compaction_defer_compaction, ptr @__tracepoint_mm_compaction_defer_reset, ptr @__tracepoint_mm_compaction_deferred, ptr @__tracepoint_mm_compaction_end, ptr @__tracepoint_mm_compaction_finished, ptr @__tracepoint_mm_compaction_isolate_freepages, ptr @__tracepoint_mm_compaction_isolate_migratepages, ptr @__tracepoint_mm_compaction_kcompactd_sleep, ptr @__tracepoint_mm_compaction_kcompactd_wake, ptr @__tracepoint_mm_compaction_migratepages, ptr @__tracepoint_mm_compaction_suitable, ptr @__tracepoint_mm_compaction_try_to_compact_pages, ptr @__tracepoint_mm_compaction_wakeup_kcompactd, ptr @__tracepoint_ptr_mm_compaction_begin, ptr @__tracepoint_ptr_mm_compaction_defer_compaction, ptr @__tracepoint_ptr_mm_compaction_defer_reset, ptr @__tracepoint_ptr_mm_compaction_deferred, ptr @__tracepoint_ptr_mm_compaction_end, ptr @__tracepoint_ptr_mm_compaction_finished, ptr @__tracepoint_ptr_mm_compaction_isolate_freepages, ptr @__tracepoint_ptr_mm_compaction_isolate_migratepages, ptr @__tracepoint_ptr_mm_compaction_kcompactd_sleep, ptr @__tracepoint_ptr_mm_compaction_kcompactd_wake, ptr @__tracepoint_ptr_mm_compaction_migratepages, ptr @__tracepoint_ptr_mm_compaction_suitable, ptr @__tracepoint_ptr_mm_compaction_try_to_compact_pages, ptr @__tracepoint_ptr_mm_compaction_wakeup_kcompactd, ptr @event_class_kcompactd_wake_template, ptr @event_class_mm_compaction_begin, ptr @event_class_mm_compaction_defer_template, ptr @event_class_mm_compaction_end, ptr @event_class_mm_compaction_isolate_template, ptr @event_class_mm_compaction_kcompactd_sleep, ptr @event_class_mm_compaction_migratepages, ptr @event_class_mm_compaction_suitable_template, ptr @event_class_mm_compaction_try_to_compact_pages, ptr @event_mm_compaction_begin, ptr @event_mm_compaction_defer_compaction, ptr @event_mm_compaction_defer_reset, ptr @event_mm_compaction_deferred, ptr @event_mm_compaction_end, ptr @event_mm_compaction_finished, ptr @event_mm_compaction_isolate_freepages, ptr @event_mm_compaction_isolate_migratepages, ptr @event_mm_compaction_kcompactd_sleep, ptr @event_mm_compaction_kcompactd_wake, ptr @event_mm_compaction_migratepages, ptr @event_mm_compaction_suitable, ptr @event_mm_compaction_try_to_compact_pages, ptr @event_mm_compaction_wakeup_kcompactd, ptr @kcompactd_init._entry, ptr @kcompactd_init._entry_ptr, ptr @kcompactd_run._entry, ptr @kcompactd_run._entry_ptr, ptr @str__compaction__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @trace_event_fields_mm_compaction_isolate_template, ptr @trace_event_type_funcs_mm_compaction_isolate_template, ptr @print_fmt_mm_compaction_isolate_template, ptr @trace_event_fields_mm_compaction_migratepages, ptr @trace_event_type_funcs_mm_compaction_migratepages, ptr @print_fmt_mm_compaction_migratepages, ptr @trace_event_fields_mm_compaction_begin, ptr @trace_event_type_funcs_mm_compaction_begin, ptr @print_fmt_mm_compaction_begin, ptr @trace_event_fields_mm_compaction_end, ptr @trace_event_type_funcs_mm_compaction_end, ptr @print_fmt_mm_compaction_end, ptr @trace_event_fields_mm_compaction_try_to_compact_pages, ptr @trace_event_type_funcs_mm_compaction_try_to_compact_pages, ptr @print_fmt_mm_compaction_try_to_compact_pages, ptr @trace_event_fields_mm_compaction_suitable_template, ptr @trace_event_type_funcs_mm_compaction_suitable_template, ptr @print_fmt_mm_compaction_suitable_template, ptr @trace_event_fields_mm_compaction_defer_template, ptr @trace_event_type_funcs_mm_compaction_defer_template, ptr @print_fmt_mm_compaction_defer_template, ptr @trace_event_fields_mm_compaction_kcompactd_sleep, ptr @trace_event_type_funcs_mm_compaction_kcompactd_sleep, ptr @print_fmt_mm_compaction_kcompactd_sleep, ptr @trace_event_fields_kcompactd_wake_template, ptr @trace_event_type_funcs_kcompactd_wake_template, ptr @print_fmt_kcompactd_wake_template, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @sysctl_extfrag_threshold, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @trace_raw_output_mm_compaction_end.symbols, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @trace_raw_output_mm_compaction_try_to_compact_pages.__flags, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @trace_raw_output_mm_compaction_suitable_template.symbols, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @trace_raw_output_mm_compaction_suitable_template.symbols.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @trace_raw_output_mm_compaction_defer_template.symbols, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @trace_raw_output_kcompactd_wake_template.symbols, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.133, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142], section "llvm.metadata"
@0 = internal global [188 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__compaction__trace_system_name to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_compaction_isolate_template to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_compaction_isolate_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_compaction_isolate_template to i32), i32 114, i32 160, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_isolate_migratepages to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_isolate_freepages to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_compaction_migratepages to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_compaction_migratepages to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_compaction_migratepages to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_migratepages to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_compaction_begin to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_compaction_begin to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_compaction_begin to i32), i32 171, i32 224, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_begin to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_compaction_end to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_compaction_end to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_compaction_end to i32), i32 546, i32 704, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_end to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_compaction_try_to_compact_pages to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_compaction_try_to_compact_pages to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_compaction_try_to_compact_pages to i32), i32 3033, i32 3776, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_try_to_compact_pages to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_compaction_suitable_template to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_compaction_suitable_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_compaction_suitable_template to i32), i32 546, i32 704, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_finished to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_suitable to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_compaction_defer_template to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_compaction_defer_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_compaction_defer_template to i32), i32 276, i32 352, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_deferred to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_defer_compaction to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_defer_reset to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_compaction_kcompactd_sleep to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_compaction_kcompactd_sleep to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_compaction_kcompactd_sleep to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_kcompactd_sleep to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_kcompactd_wake_template to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_kcompactd_wake_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_kcompactd_wake_template to i32), i32 197, i32 256, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_wakeup_kcompactd to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_compaction_kcompactd_wake to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sysctl_extfrag_threshold to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kcompactd_run._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_compaction_end.symbols to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_compaction_try_to_compact_pages.__flags to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_compaction_suitable_template.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_compaction_suitable_template.symbols.110 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_compaction_defer_template.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_kcompactd_wake_template.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kcompactd_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_isolate_migratepages(ptr nocapture readnone %__data, i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_isolate_migratepages, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_isolate_freepages(ptr nocapture readnone %__data, i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_isolate_freepages, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_migratepages(ptr nocapture readnone %__data, i32 noundef %nr_all, i32 noundef %nr_succeeded) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_migratepages, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nr_all, i32 noundef %nr_succeeded) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_begin(ptr nocapture readnone %__data, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_begin, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_end(ptr nocapture readnone %__data, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_end, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync, i32 noundef %status) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_try_to_compact_pages(ptr nocapture readnone %__data, i32 noundef %order, i32 noundef %gfp_mask, i32 noundef %prio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_try_to_compact_pages, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %order, i32 noundef %gfp_mask, i32 noundef %prio) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_finished(ptr nocapture readnone %__data, ptr noundef %zone, i32 noundef %order, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_finished, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %zone, i32 noundef %order, i32 noundef %ret) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_suitable(ptr nocapture readnone %__data, ptr noundef %zone, i32 noundef %order, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_suitable, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %zone, i32 noundef %order, i32 noundef %ret) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_deferred(ptr nocapture readnone %__data, ptr noundef %zone, i32 noundef %order) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_deferred, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %zone, i32 noundef %order) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_defer_compaction(ptr nocapture readnone %__data, ptr noundef %zone, i32 noundef %order) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_defer_compaction, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %zone, i32 noundef %order) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_defer_reset(ptr nocapture readnone %__data, ptr noundef %zone, i32 noundef %order) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_defer_reset, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %zone, i32 noundef %order) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_kcompactd_sleep(ptr nocapture readnone %__data, i32 noundef %nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_kcompactd_sleep, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_wakeup_kcompactd(ptr nocapture readnone %__data, i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_wakeup_kcompactd, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_compaction_kcompactd_wake(ptr nocapture readnone %__data, i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_kcompactd_wake, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_compaction_isolate_template(ptr noundef %__data, i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !434

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !435

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %start_pfn6 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %start_pfn6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %start_pfn, ptr %start_pfn6, align 4
  %end_pfn7 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %end_pfn7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %end_pfn, ptr %end_pfn7, align 4
  %nr_scanned8 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %nr_scanned8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %nr_scanned, ptr %nr_scanned8, align 4
  %nr_taken9 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %nr_taken9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %nr_taken, ptr %nr_taken9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_compaction_isolate_template(ptr noundef %__data, i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !436
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !436
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !424) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %start_pfn17 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %start_pfn17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %start_pfn, ptr %start_pfn17, align 4
  %end_pfn18 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %end_pfn18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %end_pfn, ptr %end_pfn18, align 4
  %nr_scanned19 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %nr_scanned19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %nr_scanned, ptr %nr_scanned19, align 4
  %nr_taken20 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %nr_taken20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %nr_taken, ptr %nr_taken20, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_compaction_migratepages(ptr noundef %__data, i32 noundef %nr_all, i32 noundef %nr_succeeded) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !434

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !435

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %nr_migrated = getelementptr inbounds %struct.trace_event_raw_mm_compaction_migratepages, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nr_migrated to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nr_succeeded, ptr %nr_migrated, align 4
  %sub = sub i32 %nr_all, %nr_succeeded
  %nr_failed = getelementptr inbounds %struct.trace_event_raw_mm_compaction_migratepages, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %nr_failed to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %sub, ptr %nr_failed, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_compaction_migratepages(ptr noundef %__data, i32 noundef %nr_all, i32 noundef %nr_succeeded) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !436
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !436
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !424) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nr_migrated = getelementptr inbounds %struct.trace_event_raw_mm_compaction_migratepages, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nr_migrated to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nr_succeeded, ptr %nr_migrated, align 4
  %sub17 = sub i32 %nr_all, %nr_succeeded
  %nr_failed = getelementptr inbounds %struct.trace_event_raw_mm_compaction_migratepages, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %nr_failed to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %sub17, ptr %nr_failed, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_compaction_begin(ptr noundef %__data, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  %frombool = zext i1 %sync to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !434

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !435

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #11
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %zone_start7 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %zone_start7 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %zone_start, ptr %zone_start7, align 4
  %migrate_pfn8 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %migrate_pfn8 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %migrate_pfn, ptr %migrate_pfn8, align 4
  %free_pfn9 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %free_pfn9 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %free_pfn, ptr %free_pfn9, align 4
  %zone_end10 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %zone_end10 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %zone_end, ptr %zone_end10, align 4
  %sync12 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %sync12 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %frombool, ptr %sync12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_compaction_begin(ptr noundef %__data, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  %frombool = zext i1 %sync to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !436
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !436
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !424) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %zone_start18 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call14, i32 0, i32 1
  %27 = ptrtoint ptr %zone_start18 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %zone_start, ptr %zone_start18, align 4
  %migrate_pfn19 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call14, i32 0, i32 2
  %28 = ptrtoint ptr %migrate_pfn19 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %migrate_pfn, ptr %migrate_pfn19, align 4
  %free_pfn20 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call14, i32 0, i32 3
  %29 = ptrtoint ptr %free_pfn20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %free_pfn, ptr %free_pfn20, align 4
  %zone_end21 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call14, i32 0, i32 4
  %30 = ptrtoint ptr %zone_end21 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %zone_end, ptr %zone_end21, align 4
  %sync23 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %call14, i32 0, i32 5
  %31 = ptrtoint ptr %sync23 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %frombool, ptr %sync23, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_compaction_end(ptr noundef %__data, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  %frombool = zext i1 %sync to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !434

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !435

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #11
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %zone_start7 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %zone_start7 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %zone_start, ptr %zone_start7, align 4
  %migrate_pfn8 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %migrate_pfn8 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %migrate_pfn, ptr %migrate_pfn8, align 4
  %free_pfn9 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %free_pfn9 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %free_pfn, ptr %free_pfn9, align 4
  %zone_end10 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %zone_end10 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %zone_end, ptr %zone_end10, align 4
  %sync12 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %sync12 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %frombool, ptr %sync12, align 4
  %status14 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %status14 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %status, ptr %status14, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_compaction_end(ptr noundef %__data, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  %frombool = zext i1 %sync to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !436
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !436
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !424) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %zone_start18 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call14, i32 0, i32 1
  %27 = ptrtoint ptr %zone_start18 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %zone_start, ptr %zone_start18, align 4
  %migrate_pfn19 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call14, i32 0, i32 2
  %28 = ptrtoint ptr %migrate_pfn19 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %migrate_pfn, ptr %migrate_pfn19, align 4
  %free_pfn20 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call14, i32 0, i32 3
  %29 = ptrtoint ptr %free_pfn20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %free_pfn, ptr %free_pfn20, align 4
  %zone_end21 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call14, i32 0, i32 4
  %30 = ptrtoint ptr %zone_end21 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %zone_end, ptr %zone_end21, align 4
  %sync23 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call14, i32 0, i32 5
  %31 = ptrtoint ptr %sync23 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %frombool, ptr %sync23, align 4
  %status25 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %call14, i32 0, i32 6
  %32 = ptrtoint ptr %status25 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %status, ptr %status25, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 36, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_compaction_try_to_compact_pages(ptr noundef %__data, i32 noundef %order, i32 noundef %gfp_mask, i32 noundef %prio) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !434

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !435

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %order6 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_try_to_compact_pages, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %order6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %order, ptr %order6, align 4
  %gfp_mask7 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_try_to_compact_pages, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gfp_mask7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gfp_mask, ptr %gfp_mask7, align 4
  %prio8 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_try_to_compact_pages, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %prio8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %prio, ptr %prio8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_compaction_try_to_compact_pages(ptr noundef %__data, i32 noundef %order, i32 noundef %gfp_mask, i32 noundef %prio) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !436
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !436
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !424) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %order17 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_try_to_compact_pages, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %order17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %order, ptr %order17, align 4
  %gfp_mask18 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_try_to_compact_pages, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %gfp_mask18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gfp_mask, ptr %gfp_mask18, align 4
  %prio19 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_try_to_compact_pages, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %prio19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %prio, ptr %prio19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_compaction_suitable_template(ptr noundef %__data, ptr noundef %zone, i32 noundef %order, i32 noundef %ret) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !434

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !435

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %nid, align 4
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %4 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %zone_pgdat, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %zone to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %5 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 1152
  %idx = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sub.ptr.div, ptr %idx, align 4
  %order7 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %order7 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %order, ptr %order7, align 4
  %ret8 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %ret8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %ret, ptr %ret8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_compaction_suitable_template(ptr noundef %__data, ptr noundef %zone, i32 noundef %order, i32 noundef %ret) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !436
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !436
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !424) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %nid, align 4
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %28 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %zone_pgdat, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %zone to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %29 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 1152
  %idx = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %sub.ptr.div, ptr %idx, align 4
  %order18 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %order18 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %order, ptr %order18, align 4
  %ret19 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %ret19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %ret, ptr %ret19, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_compaction_defer_template(ptr noundef %__data, ptr noundef %zone, i32 noundef %order) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !434

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !435

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %nid, align 4
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %4 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %zone_pgdat, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %zone to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %5 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 1152
  %idx = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sub.ptr.div, ptr %idx, align 4
  %order7 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %order7 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %order, ptr %order7, align 4
  %compact_considered = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 30
  %8 = ptrtoint ptr %compact_considered to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %compact_considered, align 8
  %considered = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %considered to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %considered, align 4
  %compact_defer_shift = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 31
  %11 = ptrtoint ptr %compact_defer_shift to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %compact_defer_shift, align 4
  %defer_shift = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call3, i32 0, i32 5
  %13 = ptrtoint ptr %defer_shift to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %defer_shift, align 4
  %compact_order_failed = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 32
  %14 = ptrtoint ptr %compact_order_failed to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %compact_order_failed, align 32
  %order_failed = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call3, i32 0, i32 6
  %16 = ptrtoint ptr %order_failed to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %order_failed, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_compaction_defer_template(ptr noundef %__data, ptr noundef %zone, i32 noundef %order) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !436
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !436
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !424) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %nid, align 4
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %28 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %zone_pgdat, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %zone to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %29 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 1152
  %idx = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %idx to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %sub.ptr.div, ptr %idx, align 4
  %order18 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %order18 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %order, ptr %order18, align 4
  %compact_considered = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 30
  %32 = ptrtoint ptr %compact_considered to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %compact_considered, align 8
  %considered = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %considered to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %considered, align 4
  %compact_defer_shift = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 31
  %35 = ptrtoint ptr %compact_defer_shift to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %compact_defer_shift, align 4
  %defer_shift = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call13, i32 0, i32 5
  %37 = ptrtoint ptr %defer_shift to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %defer_shift, align 4
  %compact_order_failed = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 32
  %38 = ptrtoint ptr %compact_order_failed to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %compact_order_failed, align 32
  %order_failed = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %call13, i32 0, i32 6
  %40 = ptrtoint ptr %order_failed to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %order_failed, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_compaction_kcompactd_sleep(ptr noundef %__data, i32 noundef %nid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !434

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !435

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %nid6 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_kcompactd_sleep, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nid, ptr %nid6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_compaction_kcompactd_sleep(ptr noundef %__data, i32 noundef %nid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !436
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !436
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !424) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid17 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_kcompactd_sleep, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nid, ptr %nid17, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_kcompactd_wake_template(ptr noundef %__data, i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !434

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !435

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %nid6 = getelementptr inbounds %struct.trace_event_raw_kcompactd_wake_template, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nid, ptr %nid6, align 4
  %order7 = getelementptr inbounds %struct.trace_event_raw_kcompactd_wake_template, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %order7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %order, ptr %order7, align 4
  %highest_zoneidx8 = getelementptr inbounds %struct.trace_event_raw_kcompactd_wake_template, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %highest_zoneidx8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %highest_zoneidx, ptr %highest_zoneidx8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_kcompactd_wake_template(ptr noundef %__data, i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !436
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !436
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !424) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid17 = getelementptr inbounds %struct.trace_event_raw_kcompactd_wake_template, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nid, ptr %nid17, align 4
  %order18 = getelementptr inbounds %struct.trace_event_raw_kcompactd_wake_template, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %order18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %order, ptr %order18, align 4
  %highest_zoneidx19 = getelementptr inbounds %struct.trace_event_raw_kcompactd_wake_template, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %highest_zoneidx19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %highest_zoneidx, ptr %highest_zoneidx19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_compaction_isolate_template(ptr noundef %__data, i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %conv = zext i32 %start_pfn to i64
  %conv4 = zext i32 %end_pfn to i64
  %conv8 = zext i32 %nr_scanned to i64
  %conv12 = zext i32 %nr_taken to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_compaction_migratepages(ptr noundef %__data, i32 noundef %nr_all, i32 noundef %nr_succeeded) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %conv = zext i32 %nr_all to i64
  %conv4 = zext i32 %nr_succeeded to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_compaction_begin(ptr noundef %__data, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %conv = zext i32 %zone_start to i64
  %conv4 = zext i32 %migrate_pfn to i64
  %conv8 = zext i32 %free_pfn to i64
  %conv12 = zext i32 %zone_end to i64
  %conv17 = zext i1 %sync to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv17) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_compaction_end(ptr noundef %__data, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %conv = zext i32 %zone_start to i64
  %conv4 = zext i32 %migrate_pfn to i64
  %conv8 = zext i32 %free_pfn to i64
  %conv12 = zext i32 %zone_end to i64
  %conv17 = zext i1 %sync to i64
  %conv21 = zext i32 %status to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv17, i64 noundef %conv21) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_compaction_try_to_compact_pages(ptr noundef %__data, i32 noundef %order, i32 noundef %gfp_mask, i32 noundef %prio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %conv = zext i32 %order to i64
  %conv4 = zext i32 %gfp_mask to i64
  %conv8 = zext i32 %prio to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_compaction_suitable_template(ptr noundef %__data, ptr noundef %zone, i32 noundef %order, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %0 = ptrtoint ptr %zone to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %order to i64
  %conv8 = zext i32 %ret to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_compaction_defer_template(ptr noundef %__data, ptr noundef %zone, i32 noundef %order) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %0 = ptrtoint ptr %zone to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %order to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_compaction_kcompactd_sleep(ptr noundef %__data, i32 noundef %nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %conv = zext i32 %nid to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_kcompactd_wake_template(ptr noundef %__data, i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %conv = zext i32 %nid to i64
  %conv4 = zext i32 %order to i64
  %conv8 = zext i32 %highest_zoneidx to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @PageMovable(ptr noundef %page) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !434

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i = add i32 %2, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i to ptr
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %cmp.i.not.i = icmp eq i32 %6, -1
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %0, align 4
  %and.i16.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !435

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !434

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i18.i = add i32 %8, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %9 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %9, %if.end.i20.i ]
  %10 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %10, ptr noundef nonnull @.str.119) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #11, !srcloc !437
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !434

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i25.i = add i32 %8, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #13
  %11 = ptrtoint ptr %page to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %11, %if.end.i27.i ]
  %12 = inttoptr i32 %retval.0.i28.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and1.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not, label %if.then, label %do.end9, !prof !435

if.then:                                          ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.21) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 118, 0\0A.popsection", ""() #11, !srcloc !438
  unreachable

do.end9:                                          ; preds = %PageLocked.exit
  %mapping.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %15 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mapping.i, align 4
  %17 = ptrtoint ptr %16 to i32
  %and.i = and i32 %17, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 2
  br i1 %cmp.i.not, label %if.end13, label %do.end9.cleanup_crit_edge

do.end9.cleanup_crit_edge:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end13:                                         ; preds = %do.end9
  %call14 = tail call ptr @page_mapping(ptr noundef %page) #11
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end13.if.end21_crit_edge, label %land.lhs.true

if.end13.if.end21_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end21

land.lhs.true:                                    ; preds = %if.end13
  %a_ops = getelementptr inbounds %struct.address_space, ptr %call14, i32 0, i32 9
  %18 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %a_ops, align 4
  %tobool16.not = icmp eq ptr %19, null
  br i1 %tobool16.not, label %land.lhs.true.if.end21_crit_edge, label %land.lhs.true17

land.lhs.true.if.end21_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end21

land.lhs.true17:                                  ; preds = %land.lhs.true
  %isolate_page = getelementptr inbounds %struct.address_space_operations, ptr %19, i32 0, i32 14
  %20 = ptrtoint ptr %isolate_page to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %isolate_page, align 4
  %tobool19.not = icmp eq ptr %21, null
  br i1 %tobool19.not, label %land.lhs.true17.if.end21_crit_edge, label %land.lhs.true17.cleanup_crit_edge

land.lhs.true17.cleanup_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

land.lhs.true17.if.end21_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end21

if.end21:                                         ; preds = %land.lhs.true17.if.end21_crit_edge, %land.lhs.true.if.end21_crit_edge, %if.end13.if.end21_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %land.lhs.true17.cleanup_crit_edge, %do.end9.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end21 ], [ 0, %do.end9.cleanup_crit_edge ], [ 1, %land.lhs.true17.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_mapping(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__SetPageMovable(ptr noundef %page, ptr noundef %mapping) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !434

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i = add i32 %2, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i to ptr
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %cmp.i.not.i = icmp eq i32 %6, -1
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %0, align 4
  %and.i16.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !435

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !434

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i18.i = add i32 %8, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %9 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %9, %if.end.i20.i ]
  %10 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %10, ptr noundef nonnull @.str.119) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #11, !srcloc !437
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !434

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i25.i = add i32 %8, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #13
  %11 = ptrtoint ptr %page to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %11, %if.end.i27.i ]
  %12 = inttoptr i32 %retval.0.i28.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and1.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not, label %if.then, label %do.body8, !prof !435

if.then:                                          ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.21) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 132, 0\0A.popsection", ""() #11, !srcloc !439
  unreachable

do.body8:                                         ; preds = %PageLocked.exit
  %15 = ptrtoint ptr %mapping to i32
  %and = and i32 %15, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool9.not = icmp eq i32 %and, 0
  br i1 %tobool9.not, label %do.end22, label %if.then16, !prof !434

if.then16:                                        ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.22) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 133, 0\0A.popsection", ""() #11, !srcloc !440
  unreachable

do.end22:                                         ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #13
  %or = or i32 %15, 2
  %16 = inttoptr i32 %or to ptr
  %mapping23 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %17 = ptrtoint ptr %mapping23 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %mapping23, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__ClearPageMovable(ptr noundef %page) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @PageMovable(ptr noundef %page)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %do.end7, !prof !435

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.23) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 140, 0\0A.popsection", ""() #11, !srcloc !441
  unreachable

do.end7:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %2 = ptrtoint ptr %1 to i32
  %and = and i32 %2, 2
  %3 = inttoptr i32 %and to ptr
  store ptr %3, ptr %mapping, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @compaction_defer_reset(ptr noundef %zone, i32 noundef %order, i1 noundef zeroext %alloc_success) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %alloc_success, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %compact_considered = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 30
  %0 = ptrtoint ptr %compact_considered to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %compact_considered, align 8
  %compact_defer_shift = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 31
  %1 = ptrtoint ptr %compact_defer_shift to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %compact_defer_shift, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %compact_order_failed = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 32
  %2 = ptrtoint ptr %compact_order_failed to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %compact_order_failed, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %order)
  %cmp.not = icmp sgt i32 %3, %order
  br i1 %cmp.not, label %if.end.if.end3_crit_edge, label %if.then1

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end3

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %add = add i32 %order, 1
  %4 = ptrtoint ptr %compact_order_failed to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %add, ptr %compact_order_failed, align 32
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.end.if.end3_crit_edge
  tail call fastcc void @trace_mm_compaction_defer_reset(ptr noundef %zone, i32 noundef %order)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_defer_reset(ptr noundef %zone, i32 noundef %order) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_defer_reset, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_defer_reset, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !443
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_defer_reset, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %zone, i32 noundef %order) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !444
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !444
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_defer_reset, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_defer_reset.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_defer_reset.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 280, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @reset_isolation_suitable(ptr noundef %pgdat) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %present_pages.i = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 0, i32 13
  %0 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %present_pages.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %compact_blockskip_flush = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 0, i32 33
  %2 = ptrtoint ptr %compact_blockskip_flush to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %compact_blockskip_flush, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.then1

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  tail call fastcc void @__reset_isolation_suitable(ptr noundef %pgdat)
  br label %cleanup

cleanup:                                          ; preds = %if.then1, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %arrayidx.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1
  %present_pages.i.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1, i32 13
  %4 = ptrtoint ptr %present_pages.i.1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %present_pages.i.1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not.1 = icmp eq i32 %5, 0
  br i1 %tobool.i.not.1, label %cleanup.cleanup.1_crit_edge, label %if.end.1

cleanup.cleanup.1_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.1

if.end.1:                                         ; preds = %cleanup
  %compact_blockskip_flush.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1, i32 33
  %6 = ptrtoint ptr %compact_blockskip_flush.1 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %compact_blockskip_flush.1, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.1 = icmp eq i8 %7, 0
  br i1 %tobool.not.1, label %if.end.1.cleanup.1_crit_edge, label %if.then1.1

if.end.1.cleanup.1_crit_edge:                     ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.1

if.then1.1:                                       ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #13
  tail call fastcc void @__reset_isolation_suitable(ptr noundef %arrayidx.1)
  br label %cleanup.1

cleanup.1:                                        ; preds = %if.then1.1, %if.end.1.cleanup.1_crit_edge, %cleanup.cleanup.1_crit_edge
  %arrayidx.2 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 2
  %present_pages.i.2 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 2, i32 13
  %8 = ptrtoint ptr %present_pages.i.2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %present_pages.i.2, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i.not.2 = icmp eq i32 %9, 0
  br i1 %tobool.i.not.2, label %cleanup.1.cleanup.2_crit_edge, label %if.end.2

cleanup.1.cleanup.2_crit_edge:                    ; preds = %cleanup.1
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.2

if.end.2:                                         ; preds = %cleanup.1
  %compact_blockskip_flush.2 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 2, i32 33
  %10 = ptrtoint ptr %compact_blockskip_flush.2 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %compact_blockskip_flush.2, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.2 = icmp eq i8 %11, 0
  br i1 %tobool.not.2, label %if.end.2.cleanup.2_crit_edge, label %if.then1.2

if.end.2.cleanup.2_crit_edge:                     ; preds = %if.end.2
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.2

if.then1.2:                                       ; preds = %if.end.2
  call void @__sanitizer_cov_trace_pc() #13
  tail call fastcc void @__reset_isolation_suitable(ptr noundef %arrayidx.2)
  br label %cleanup.2

cleanup.2:                                        ; preds = %if.then1.2, %if.end.2.cleanup.2_crit_edge, %cleanup.1.cleanup.2_crit_edge
  %arrayidx.3 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 3
  %present_pages.i.3 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 3, i32 13
  %12 = ptrtoint ptr %present_pages.i.3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %present_pages.i.3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.i.not.3 = icmp eq i32 %13, 0
  br i1 %tobool.i.not.3, label %cleanup.2.cleanup.3_crit_edge, label %if.end.3

cleanup.2.cleanup.3_crit_edge:                    ; preds = %cleanup.2
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.3

if.end.3:                                         ; preds = %cleanup.2
  %compact_blockskip_flush.3 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 3, i32 33
  %14 = ptrtoint ptr %compact_blockskip_flush.3 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %compact_blockskip_flush.3, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.3 = icmp eq i8 %15, 0
  br i1 %tobool.not.3, label %if.end.3.cleanup.3_crit_edge, label %if.then1.3

if.end.3.cleanup.3_crit_edge:                     ; preds = %if.end.3
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.3

if.then1.3:                                       ; preds = %if.end.3
  call void @__sanitizer_cov_trace_pc() #13
  tail call fastcc void @__reset_isolation_suitable(ptr noundef %arrayidx.3)
  br label %cleanup.3

cleanup.3:                                        ; preds = %if.then1.3, %if.end.3.cleanup.3_crit_edge, %cleanup.2.cleanup.3_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__reset_isolation_suitable(ptr noundef %zone) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %compact_blockskip_flush = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 33
  %0 = ptrtoint ptr %compact_blockskip_flush to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %compact_blockskip_flush, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %spanned_pages.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %2 = ptrtoint ptr %spanned_pages.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %spanned_pages.i, align 4
  %zone_start_pfn = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %4 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %zone_start_pfn, align 4
  %add.i = add i32 %3, -1
  %sub = add i32 %add.i, %5
  %6 = ptrtoint ptr %compact_blockskip_flush to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %compact_blockskip_flush, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %sub)
  %cmp68 = icmp ult i32 %5, %sub
  br i1 %cmp68, label %for.body.lr.ph, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %compact_init_migrate_pfn = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 28
  %compact_cached_migrate_pfn = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 27
  %arrayidx8 = getelementptr %struct.zone, ptr %zone, i32 0, i32 27, i32 1
  %compact_init_free_pfn = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 29
  %compact_cached_free_pfn = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 26
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %migrate_pfn.074 = phi i32 [ %5, %for.body.lr.ph ], [ %add, %for.inc.for.body_crit_edge ]
  %free_set.0.off073 = phi i1 [ false, %for.body.lr.ph ], [ %free_set.1.off0, %for.inc.for.body_crit_edge ]
  %source_set.0.off072 = phi i1 [ false, %for.body.lr.ph ], [ %source_set.1.off0, %for.inc.for.body_crit_edge ]
  %reset_free.071 = phi i32 [ %5, %for.body.lr.ph ], [ %reset_free.1, %for.inc.for.body_crit_edge ]
  %reset_migrate.070 = phi i32 [ %sub, %for.body.lr.ph ], [ %reset_migrate.1, %for.inc.for.body_crit_edge ]
  %free_pfn.069 = phi i32 [ %sub, %for.body.lr.ph ], [ %sub16, %for.inc.for.body_crit_edge ]
  tail call void @__might_resched(ptr noundef nonnull @.str.27, i32 noundef 353, i32 noundef 0) #11
  %call.i = tail call i32 @__cond_resched() #11
  %call4 = tail call fastcc zeroext i1 @__reset_isolation_pfn(ptr noundef %zone, i32 noundef %migrate_pfn.074, i1 noundef zeroext true, i1 noundef zeroext %source_set.0.off072)
  call void @__sanitizer_cov_trace_cmp4(i32 %migrate_pfn.074, i32 %reset_migrate.070)
  %cmp5 = icmp ult i32 %migrate_pfn.074, %reset_migrate.070
  %or.cond = select i1 %call4, i1 %cmp5, i1 false
  br i1 %or.cond, label %if.then6, label %for.body.if.end9_crit_edge

for.body.if.end9_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end9

if.then6:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  %7 = ptrtoint ptr %compact_init_migrate_pfn to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %migrate_pfn.074, ptr %compact_init_migrate_pfn, align 16
  %8 = ptrtoint ptr %compact_cached_migrate_pfn to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %migrate_pfn.074, ptr %compact_cached_migrate_pfn, align 8
  %9 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %migrate_pfn.074, ptr %arrayidx8, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %for.body.if.end9_crit_edge
  %reset_migrate.1 = phi i32 [ %migrate_pfn.074, %if.then6 ], [ %reset_migrate.070, %for.body.if.end9_crit_edge ]
  %source_set.1.off0 = phi i1 [ true, %if.then6 ], [ %source_set.0.off072, %for.body.if.end9_crit_edge ]
  %call11 = tail call fastcc zeroext i1 @__reset_isolation_pfn(ptr noundef %zone, i32 noundef %free_pfn.069, i1 noundef zeroext %free_set.0.off073, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_cmp4(i32 %free_pfn.069, i32 %reset_free.071)
  %cmp13 = icmp ugt i32 %free_pfn.069, %reset_free.071
  %or.cond67 = select i1 %call11, i1 %cmp13, i1 false
  br i1 %or.cond67, label %if.then14, label %if.end9.for.inc_crit_edge

if.end9.for.inc_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.then14:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #13
  %10 = ptrtoint ptr %compact_init_free_pfn to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %free_pfn.069, ptr %compact_init_free_pfn, align 4
  %11 = ptrtoint ptr %compact_cached_free_pfn to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %free_pfn.069, ptr %compact_cached_free_pfn, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then14, %if.end9.for.inc_crit_edge
  %reset_free.1 = phi i32 [ %free_pfn.069, %if.then14 ], [ %reset_free.071, %if.end9.for.inc_crit_edge ]
  %free_set.1.off0 = phi i1 [ true, %if.then14 ], [ %free_set.0.off073, %if.end9.for.inc_crit_edge ]
  %add = add i32 %migrate_pfn.074, 2048
  %sub16 = add i32 %free_pfn.069, -2048
  %cmp = icmp ult i32 %add, %sub16
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %free_pfn.0.lcssa = phi i32 [ %sub, %if.end.for.end_crit_edge ], [ %sub16, %for.inc.for.end_crit_edge ]
  %reset_migrate.0.lcssa = phi i32 [ %sub, %if.end.for.end_crit_edge ], [ %reset_migrate.1, %for.inc.for.end_crit_edge ]
  %reset_free.0.lcssa = phi i32 [ %5, %if.end.for.end_crit_edge ], [ %reset_free.1, %for.inc.for.end_crit_edge ]
  %migrate_pfn.0.lcssa = phi i32 [ %5, %if.end.for.end_crit_edge ], [ %add, %for.inc.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %reset_migrate.0.lcssa, i32 %reset_free.0.lcssa)
  %cmp17.not = icmp ult i32 %reset_migrate.0.lcssa, %reset_free.0.lcssa
  br i1 %cmp17.not, label %for.end.cleanup_crit_edge, label %if.then18

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then18:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  %compact_cached_migrate_pfn19 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 27
  %12 = ptrtoint ptr %compact_cached_migrate_pfn19 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %migrate_pfn.0.lcssa, ptr %compact_cached_migrate_pfn19, align 8
  %arrayidx22 = getelementptr %struct.zone, ptr %zone, i32 0, i32 27, i32 1
  %13 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %migrate_pfn.0.lcssa, ptr %arrayidx22, align 4
  %compact_cached_free_pfn23 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 26
  %14 = ptrtoint ptr %compact_cached_free_pfn23 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %free_pfn.0.lcssa, ptr %compact_cached_free_pfn23, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then18, %for.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @isolate_freepages_range(ptr nocapture noundef %cc, i32 noundef %start_pfn, i32 noundef %end_pfn) local_unnamed_addr #0 align 64 {
entry:
  %freelist = alloca %struct.list_head, align 4
  %isolate_start_pfn = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %freelist) #11
  %0 = getelementptr inbounds %struct.list_head, ptr %freelist, i32 0, i32 1
  %1 = ptrtoint ptr %freelist to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %freelist, ptr %freelist, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %freelist, ptr %0, align 4
  %zone = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 7
  call void @__sanitizer_cov_trace_cmp4(i32 %start_pfn, i32 %end_pfn)
  %cmp569 = icmp ult i32 %start_pfn, %end_pfn
  br i1 %cmp569, label %for.body.preheader, label %entry.if.end32.critedge_crit_edge

entry.if.end32.critedge_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end32.critedge

for.body.preheader:                               ; preds = %entry
  %add3 = add i32 %start_pfn, 2048
  %and4 = and i32 %add3, -2048
  %and = and i32 %start_pfn, -2048
  %3 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %zone, align 4
  %zone_start_pfn = getelementptr inbounds %struct.zone, ptr %4, i32 0, i32 10
  %5 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %zone_start_pfn, align 4
  %7 = call i32 @llvm.umax.i32(i32 %and, i32 %6)
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.preheader
  %block_end_pfn.073 = phi i32 [ %add28, %for.inc.for.body_crit_edge ], [ %and4, %for.body.preheader ]
  %block_start_pfn.172 = phi i32 [ %block_end_pfn.1, %for.inc.for.body_crit_edge ], [ %7, %for.body.preheader ]
  %pfn.070 = phi i32 [ %add27, %for.inc.for.body_crit_edge ], [ %start_pfn, %for.body.preheader ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %isolate_start_pfn) #11
  %8 = ptrtoint ptr %isolate_start_pfn to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %pfn.070, ptr %isolate_start_pfn, align 4
  %9 = call i32 @llvm.umin.i32(i32 %block_end_pfn.073, i32 %end_pfn)
  call void @__sanitizer_cov_trace_cmp4(i32 %pfn.070, i32 %9)
  %cmp7.not = icmp ult i32 %pfn.070, %9
  br i1 %cmp7.not, label %for.body.if.end19_crit_edge, label %if.then8

for.body.if.end19_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end19

if.then8:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  %and9 = and i32 %pfn.070, -2048
  %add11 = add i32 %pfn.070, 2048
  %and12 = and i32 %add11, -2048
  %10 = call i32 @llvm.umin.i32(i32 %and12, i32 %end_pfn)
  br label %if.end19

if.end19:                                         ; preds = %if.then8, %for.body.if.end19_crit_edge
  %block_start_pfn.2 = phi i32 [ %and9, %if.then8 ], [ %block_start_pfn.172, %for.body.if.end19_crit_edge ]
  %block_end_pfn.1 = phi i32 [ %10, %if.then8 ], [ %9, %for.body.if.end19_crit_edge ]
  %11 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %zone, align 4
  %contiguous.i = getelementptr inbounds %struct.zone, ptr %12, i32 0, i32 34
  %13 = ptrtoint ptr %contiguous.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %contiguous.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not.i = icmp eq i8 %14, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %15 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %16 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %block_start_pfn.2, %16
  %add.ptr.i = getelementptr %struct.page, ptr %15, i32 %sub.i
  br label %pageblock_pfn_to_page.exit

if.end.i:                                         ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #13
  %call.i = call ptr @__pageblock_pfn_to_page(i32 noundef %block_start_pfn.2, i32 noundef %block_end_pfn.1, ptr noundef %12) #11
  br label %pageblock_pfn_to_page.exit

pageblock_pfn_to_page.exit:                       ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi ptr [ %add.ptr.i, %if.then.i ], [ %call.i, %if.end.i ]
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %pageblock_pfn_to_page.exit.if.then30.critedge_crit_edge, label %if.end22

pageblock_pfn_to_page.exit.if.then30.critedge_crit_edge: ; preds = %pageblock_pfn_to_page.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then30.critedge

if.end22:                                         ; preds = %pageblock_pfn_to_page.exit
  %call23 = call fastcc i32 @isolate_freepages_block(ptr noundef %cc, ptr noundef nonnull %isolate_start_pfn, i32 noundef %block_end_pfn.1, ptr noundef nonnull %freelist, i32 noundef 0, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end22.if.then30.critedge_crit_edge, label %for.inc

if.end22.if.then30.critedge_crit_edge:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then30.critedge

for.inc:                                          ; preds = %if.end22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %isolate_start_pfn) #11
  %add27 = add i32 %call23, %pfn.070
  %add28 = add i32 %block_end_pfn.1, 2048
  %cmp5 = icmp ult i32 %add27, %end_pfn
  br i1 %cmp5, label %for.inc.for.body_crit_edge, label %for.inc.if.end32.critedge_crit_edge

for.inc.if.end32.critedge_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end32.critedge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

if.then30.critedge:                               ; preds = %if.end22.if.then30.critedge_crit_edge, %pageblock_pfn_to_page.exit.if.then30.critedge_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %isolate_start_pfn) #11
  call fastcc void @split_map_pages(ptr noundef nonnull %freelist)
  %17 = ptrtoint ptr %freelist to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %freelist, align 4
  %cmp.not24.i = icmp eq ptr %18, %freelist
  br i1 %cmp.not24.i, label %if.then30.critedge.cleanup33_crit_edge, label %if.then30.critedge.for.body.i_crit_edge

if.then30.critedge.for.body.i_crit_edge:          ; preds = %if.then30.critedge
  br label %for.body.i

if.then30.critedge.cleanup33_crit_edge:           ; preds = %if.then30.critedge
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup33

for.body.i:                                       ; preds = %list_del.exit.i.for.body.i_crit_edge, %if.then30.critedge.for.body.i_crit_edge
  %.pn.in26.i = phi ptr [ %.pn28.i, %list_del.exit.i.for.body.i_crit_edge ], [ %18, %if.then30.critedge.for.body.i_crit_edge ]
  %19 = ptrtoint ptr %.pn.in26.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn28.i = load ptr, ptr %.pn.in26.i, align 4
  %page.0.i = getelementptr i8, ptr %.pn.in26.i, i32 -4
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in26.i) #11
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.list_del.exit.i_crit_edge

for.body.i.list_del.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #13
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in26.i, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i.i, align 4
  %22 = ptrtoint ptr %.pn.in26.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %.pn.in26.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %23, ptr %21, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i.list_del.exit.i_crit_edge
  %26 = ptrtoint ptr %.pn.in26.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in26.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in26.i, i32 0, i32 1
  %27 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  call void @__free_pages(ptr noundef %page.0.i, i32 noundef 0) #11
  %cmp.not.i = icmp eq ptr %.pn28.i, %freelist
  br i1 %cmp.not.i, label %list_del.exit.i.cleanup33_crit_edge, label %list_del.exit.i.for.body.i_crit_edge

list_del.exit.i.for.body.i_crit_edge:             ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i

list_del.exit.i.cleanup33_crit_edge:              ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup33

if.end32.critedge:                                ; preds = %for.inc.if.end32.critedge_crit_edge, %entry.if.end32.critedge_crit_edge
  %pfn.0.lcssa = phi i32 [ %start_pfn, %entry.if.end32.critedge_crit_edge ], [ %add27, %for.inc.if.end32.critedge_crit_edge ]
  call fastcc void @split_map_pages(ptr noundef nonnull %freelist)
  br label %cleanup33

cleanup33:                                        ; preds = %if.end32.critedge, %list_del.exit.i.cleanup33_crit_edge, %if.then30.critedge.cleanup33_crit_edge
  %retval.0 = phi i32 [ %pfn.0.lcssa, %if.end32.critedge ], [ 0, %if.then30.critedge.cleanup33_crit_edge ], [ 0, %list_del.exit.i.cleanup33_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %freelist) #11
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @isolate_freepages_block(ptr nocapture noundef %cc, ptr nocapture noundef %start_pfn, i32 noundef %end_pfn, ptr noundef %freelist, i32 noundef %stride, i1 noundef zeroext %strict) unnamed_addr #0 align 64 {
entry:
  %flags = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags) #11
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %flags, align 4
  %1 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %start_pfn, align 4
  %spec.select = select i1 %strict, i32 1, i32 %stride
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %end_pfn)
  %cmp213 = icmp ult i32 %2, %end_pfn
  br i1 %cmp213, label %for.body.lr.ph, label %entry.if.end62_crit_edge

entry.if.end62_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end62

for.body.lr.ph:                                   ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %3 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %4 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub = sub i32 %2, %4
  %add.ptr = getelementptr %struct.page, ptr %3, i32 %sub
  %zone = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 7
  %nr_freepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 2
  %prev.i = getelementptr inbounds %struct.list_head, ptr %freelist, i32 0, i32 1
  %nr_migratepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %blockpfn.0222 = phi i32 [ %2, %for.body.lr.ph ], [ %add56, %for.inc.for.body_crit_edge ]
  %cursor.0220 = phi ptr [ %add.ptr, %for.body.lr.ph ], [ %add.ptr57, %for.inc.for.body_crit_edge ]
  %total_isolated.0218 = phi i32 [ 0, %for.body.lr.ph ], [ %total_isolated.1174, %for.inc.for.body_crit_edge ]
  %nr_scanned.0215 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %locked.0214 = phi i8 [ 0, %for.body.lr.ph ], [ %locked.5172, %for.inc.for.body_crit_edge ]
  %rem = and i32 %blockpfn.0222, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %tobool1.not = icmp eq i32 %rem, 0
  br i1 %tobool1.not, label %land.lhs.true, label %for.body.if.end3_crit_edge

for.body.if.end3_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end3

land.lhs.true:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %locked.0214)
  %tobool.not.i143 = icmp eq i8 %locked.0214, 0
  br i1 %tobool.not.i143, label %land.lhs.true.if.end.i_crit_edge, label %if.then.i

land.lhs.true.if.end.i_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 4
  %7 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %zone, align 4
  %lock = getelementptr inbounds %struct.zone, ptr %8, i32 0, i32 22
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %6) #11
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %land.lhs.true.if.end.i_crit_edge
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i144 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i144 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i, align 8
  %stack.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %stack.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %stack.i.i.i.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and1.i.i.i.i.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.compact_unlock_should_abort.exit_crit_edge, label %fatal_signal_pending.exit.i

if.end.i.compact_unlock_should_abort.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compact_unlock_should_abort.exit

fatal_signal_pending.exit.i:                      ; preds = %if.end.i
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 116, i32 1
  %17 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %signal.i.i.i, align 4
  %19 = and i32 %18, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool2.not.i = icmp eq i32 %19, 0
  br i1 %tobool2.not.i, label %fatal_signal_pending.exit.i.compact_unlock_should_abort.exit_crit_edge, label %for.end.thread188

fatal_signal_pending.exit.i.compact_unlock_should_abort.exit_crit_edge: ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compact_unlock_should_abort.exit

for.end.thread188:                                ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  %contended.i = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 24
  %20 = ptrtoint ptr %contended.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 1, ptr %contended.i, align 2
  br label %if.end62

compact_unlock_should_abort.exit:                 ; preds = %fatal_signal_pending.exit.i.compact_unlock_should_abort.exit_crit_edge, %if.end.i.compact_unlock_should_abort.exit_crit_edge
  tail call void @__might_resched(ptr noundef nonnull @.str.27, i32 noundef 540, i32 noundef 0) #11
  %call.i.i = tail call i32 @__cond_resched() #11
  br label %if.end3

if.end3:                                          ; preds = %compact_unlock_should_abort.exit, %for.body.if.end3_crit_edge
  %locked.2 = phi i8 [ 0, %compact_unlock_should_abort.exit ], [ %locked.0214, %for.body.if.end3_crit_edge ]
  %inc = add i32 %nr_scanned.0215, 1
  %21 = ptrtoint ptr %cursor.0220 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %cursor.0220, align 4
  %23 = and i32 %22, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not.i = icmp eq i32 %23, 0
  br i1 %tobool.not.i, label %PageCompound.exit, label %if.end3.if.then6_crit_edge

if.end3.if.then6_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then6

PageCompound.exit:                                ; preds = %if.end3
  %24 = getelementptr inbounds %struct.page, ptr %cursor.0220, i32 0, i32 1
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %24, align 4
  %and.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool5.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool5.not, label %if.end18, label %PageCompound.exit.if.then6_crit_edge

PageCompound.exit.if.then6_crit_edge:             ; preds = %PageCompound.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then6

if.then6:                                         ; preds = %PageCompound.exit.if.then6_crit_edge, %if.end3.if.then6_crit_edge
  %27 = ptrtoint ptr %cursor.0220 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %cursor.0220, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %28)
  %cmp.i.not.i.i = icmp eq i32 %28, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %PageHead.exit.i, !prof !435

if.then.i.i:                                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %cursor.0220, ptr noundef nonnull @.str.124) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !448
  unreachable

PageHead.exit.i:                                  ; preds = %if.then6
  %29 = ptrtoint ptr %cursor.0220 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %cursor.0220, align 4
  %31 = and i32 %30, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i145 = icmp eq i32 %31, 0
  br i1 %tobool.not.i145, label %PageHead.exit.i.compound_order.exit.thread_crit_edge, label %compound_order.exit

PageHead.exit.i.compound_order.exit.thread_crit_edge: ; preds = %PageHead.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compound_order.exit.thread

compound_order.exit:                              ; preds = %PageHead.exit.i
  %32 = getelementptr %struct.page, ptr %cursor.0220, i32 1, i32 1
  %compound_order.i = getelementptr inbounds %struct.anon.69, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %compound_order.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %compound_order.i, align 1
  %conv.i146 = zext i8 %34 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %34)
  %cmp9 = icmp ult i8 %34, 12
  %notmask = shl nsw i32 -1, %conv.i146
  %sub13 = xor i32 %notmask, -1
  br i1 %cmp9, label %compound_order.exit.compound_order.exit.thread_crit_edge, label %compound_order.exit._crit_edge

compound_order.exit._crit_edge:                   ; preds = %compound_order.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %35

compound_order.exit.compound_order.exit.thread_crit_edge: ; preds = %compound_order.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %compound_order.exit.thread

compound_order.exit.thread:                       ; preds = %compound_order.exit.compound_order.exit.thread_crit_edge, %PageHead.exit.i.compound_order.exit.thread_crit_edge
  %sub13256 = phi i32 [ %sub13, %compound_order.exit.compound_order.exit.thread_crit_edge ], [ 0, %PageHead.exit.i.compound_order.exit.thread_crit_edge ]
  br label %35

35:                                               ; preds = %compound_order.exit.thread, %compound_order.exit._crit_edge
  %36 = phi i32 [ %sub13256, %compound_order.exit.thread ], [ 0, %compound_order.exit._crit_edge ]
  %cursor.1 = getelementptr %struct.page, ptr %cursor.0220, i32 %36
  %blockpfn.1 = add i32 %36, %blockpfn.0222
  br label %cleanup

if.end18:                                         ; preds = %PageCompound.exit
  %37 = getelementptr inbounds %struct.page, ptr %cursor.0220, i32 0, i32 2
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %37, align 4
  %and.i = and i32 %39, -268435328
  call void @__sanitizer_cov_trace_const_cmp4(i32 -268435456, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, -268435456
  br i1 %cmp.i.not, label %if.end22, label %if.end18.cleanup_crit_edge

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end22:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %locked.2)
  %tobool23.not = icmp eq i8 %locked.2, 0
  br i1 %tobool23.not, label %if.then24, label %if.end22.if.end33_crit_edge

if.end22.if.end33_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end33

if.then24:                                        ; preds = %if.end22
  %40 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %zone, align 4
  %lock26 = getelementptr inbounds %struct.zone, ptr %41, i32 0, i32 22
  call fastcc void @compact_lock_irqsave(ptr noundef %lock26, ptr noundef nonnull %flags, ptr noundef %cc)
  %42 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %37, align 4
  %and.i140 = and i32 %43, -268435328
  call void @__sanitizer_cov_trace_const_cmp4(i32 -268435456, i32 %and.i140)
  %cmp.i141.not = icmp eq i32 %and.i140, -268435456
  br i1 %cmp.i141.not, label %if.then24.if.end33_crit_edge, label %if.then24.cleanup_crit_edge

if.then24.cleanup_crit_edge:                      ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then24.if.end33_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end33

if.end33:                                         ; preds = %if.then24.if.end33_crit_edge, %if.end22.if.end33_crit_edge
  %locked.3 = phi i8 [ 1, %if.then24.if.end33_crit_edge ], [ %locked.2, %if.end22.if.end33_crit_edge ]
  %private.i = getelementptr inbounds %struct.page, ptr %cursor.0220, i32 0, i32 1, i32 0, i32 3
  %44 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %private.i, align 4
  %call35 = tail call i32 @__isolate_free_page(ptr noundef %cursor.0220, i32 noundef %45) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %if.end33.if.then59_crit_edge, label %if.end38

if.end33.if.then59_crit_edge:                     ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then59

if.end38:                                         ; preds = %if.end33
  %46 = ptrtoint ptr %private.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %private.i, align 4
  %add39 = add i32 %call35, %total_isolated.0218
  %47 = ptrtoint ptr %nr_freepages to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %nr_freepages, align 4
  %add40 = add i32 %48, %call35
  store i32 %add40, ptr %nr_freepages, align 4
  %49 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %prev.i, align 4
  %call.i.i148 = tail call zeroext i1 @__list_add_valid(ptr noundef %24, ptr noundef %50, ptr noundef %freelist) #11
  br i1 %call.i.i148, label %if.end.i.i, label %if.end38.list_add_tail.exit_crit_edge

if.end38.list_add_tail.exit_crit_edge:            ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #13
  %51 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %24, ptr %prev.i, align 4
  %52 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %freelist, ptr %24, align 4
  %prev3.i.i = getelementptr inbounds %struct.page, ptr %cursor.0220, i32 0, i32 1, i32 0, i32 0, i32 1
  %53 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %50, ptr %prev3.i.i, align 4
  %54 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %24, ptr %50, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end38.list_add_tail.exit_crit_edge
  br i1 %strict, label %list_add_tail.exit.cleanup.thread163_crit_edge, label %land.lhs.true42

list_add_tail.exit.cleanup.thread163_crit_edge:   ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.thread163

land.lhs.true42:                                  ; preds = %list_add_tail.exit
  %55 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %nr_migratepages, align 4
  %57 = ptrtoint ptr %nr_freepages to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %nr_freepages, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %58)
  %cmp44.not = icmp ugt i32 %56, %58
  br i1 %cmp44.not, label %land.lhs.true42.cleanup.thread163_crit_edge, label %if.then45

land.lhs.true42.cleanup.thread163_crit_edge:      ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.thread163

if.then45:                                        ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #13
  %add46 = add i32 %call35, %blockpfn.0222
  br label %if.then59

cleanup.thread163:                                ; preds = %land.lhs.true42.cleanup.thread163_crit_edge, %list_add_tail.exit.cleanup.thread163_crit_edge
  %sub48 = add i32 %call35, -1
  %add49 = add i32 %sub48, %blockpfn.0222
  %add.ptr51 = getelementptr %struct.page, ptr %cursor.0220, i32 %sub48
  br label %for.inc

cleanup:                                          ; preds = %if.then24.cleanup_crit_edge, %if.end18.cleanup_crit_edge, %35
  %locked.4 = phi i8 [ %locked.2, %if.end18.cleanup_crit_edge ], [ 1, %if.then24.cleanup_crit_edge ], [ %locked.2, %35 ]
  %cursor.2 = phi ptr [ %cursor.0220, %if.end18.cleanup_crit_edge ], [ %cursor.0220, %if.then24.cleanup_crit_edge ], [ %cursor.1, %35 ]
  %blockpfn.2 = phi i32 [ %blockpfn.0222, %if.end18.cleanup_crit_edge ], [ %blockpfn.0222, %if.then24.cleanup_crit_edge ], [ %blockpfn.1, %35 ]
  br i1 %strict, label %cleanup.for.end_crit_edge, label %cleanup.for.inc_crit_edge

cleanup.for.inc_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.inc:                                          ; preds = %cleanup.for.inc_crit_edge, %cleanup.thread163
  %blockpfn.3176 = phi i32 [ %add49, %cleanup.thread163 ], [ %blockpfn.2, %cleanup.for.inc_crit_edge ]
  %cursor.3175 = phi ptr [ %add.ptr51, %cleanup.thread163 ], [ %cursor.2, %cleanup.for.inc_crit_edge ]
  %total_isolated.1174 = phi i32 [ %add39, %cleanup.thread163 ], [ %total_isolated.0218, %cleanup.for.inc_crit_edge ]
  %locked.5172 = phi i8 [ %locked.3, %cleanup.thread163 ], [ %locked.4, %cleanup.for.inc_crit_edge ]
  %add56 = add i32 %blockpfn.3176, %spec.select
  %add.ptr57 = getelementptr %struct.page, ptr %cursor.3175, i32 %spec.select
  %cmp = icmp ult i32 %add56, %end_pfn
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %cleanup.for.end_crit_edge
  %total_isolated.0.lcssa = phi i32 [ %total_isolated.1174, %for.inc.for.end_crit_edge ], [ %total_isolated.0218, %cleanup.for.end_crit_edge ]
  %locked.6 = phi i8 [ %locked.5172, %for.inc.for.end_crit_edge ], [ %locked.4, %cleanup.for.end_crit_edge ]
  %blockpfn.4 = phi i32 [ %add56, %for.inc.for.end_crit_edge ], [ %blockpfn.2, %cleanup.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %locked.6)
  %tobool58.not = icmp eq i8 %locked.6, 0
  br i1 %tobool58.not, label %for.end.if.end62_crit_edge, label %for.end.if.then59_crit_edge

for.end.if.then59_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then59

for.end.if.end62_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end62

if.then59:                                        ; preds = %for.end.if.then59_crit_edge, %if.then45, %if.end33.if.then59_crit_edge
  %blockpfn.4186 = phi i32 [ %blockpfn.4, %for.end.if.then59_crit_edge ], [ %add46, %if.then45 ], [ %blockpfn.0222, %if.end33.if.then59_crit_edge ]
  %total_isolated.2184 = phi i32 [ %total_isolated.0.lcssa, %for.end.if.then59_crit_edge ], [ %add39, %if.then45 ], [ %total_isolated.0218, %if.end33.if.then59_crit_edge ]
  %zone60 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 7
  %59 = ptrtoint ptr %zone60 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %zone60, align 4
  %lock61 = getelementptr inbounds %struct.zone, ptr %60, i32 0, i32 22
  %61 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %flags, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock61, i32 noundef %62) #11
  br label %if.end62

if.end62:                                         ; preds = %if.then59, %for.end.if.end62_crit_edge, %for.end.thread188, %entry.if.end62_crit_edge
  %blockpfn.4187 = phi i32 [ %blockpfn.4186, %if.then59 ], [ %blockpfn.4, %for.end.if.end62_crit_edge ], [ %blockpfn.0222, %for.end.thread188 ], [ %2, %entry.if.end62_crit_edge ]
  %total_isolated.2185 = phi i32 [ %total_isolated.2184, %if.then59 ], [ %total_isolated.0.lcssa, %for.end.if.end62_crit_edge ], [ %total_isolated.0218, %for.end.thread188 ], [ 0, %entry.if.end62_crit_edge ]
  %nr_scanned.2183 = phi i32 [ %inc, %if.then59 ], [ %inc, %for.end.if.end62_crit_edge ], [ %nr_scanned.0215, %for.end.thread188 ], [ 0, %entry.if.end62_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %blockpfn.4187, i32 %end_pfn)
  %cmp63 = icmp ugt i32 %blockpfn.4187, %end_pfn
  br i1 %cmp63, label %if.then70, label %if.end62.if.end71_crit_edge, !prof !435

if.end62.if.end71_crit_edge:                      ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end71

if.then70:                                        ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end62.if.end71_crit_edge
  %blockpfn.5 = phi i32 [ %end_pfn, %if.then70 ], [ %blockpfn.4187, %if.end62.if.end71_crit_edge ]
  %63 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %start_pfn, align 4
  tail call fastcc void @trace_mm_compaction_isolate_freepages(i32 noundef %64, i32 noundef %blockpfn.5, i32 noundef %nr_scanned.2183, i32 noundef %total_isolated.2185)
  %65 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %blockpfn.5, ptr %start_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %blockpfn.5, i32 %end_pfn)
  %cmp74 = icmp ult i32 %blockpfn.5, %end_pfn
  %or.cond = and i1 %cmp74, %strict
  %total_isolated.3 = select i1 %or.cond, i32 0, i32 %total_isolated.2185
  %total_free_scanned = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 9
  %66 = ptrtoint ptr %total_free_scanned to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %total_free_scanned, align 4
  %add77 = add i32 %67, %nr_scanned.2183
  store i32 %add77, ptr %total_free_scanned, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %total_isolated.3)
  %tobool78.not = icmp eq i32 %total_isolated.3, 0
  br i1 %tobool78.not, label %if.end71.if.end80_crit_edge, label %if.then79

if.end71.if.end80_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end80

if.then79:                                        ; preds = %if.end71
  %68 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !449
  %69 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 3
  %71 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %cpu.i.i, align 4
  %arrayidx13.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %72
  %73 = ptrtoint ptr %arrayidx13.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx13.i.i, align 4
  %add.i.i = add i32 %74, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 53) to i32)
  %75 = inttoptr i32 %add.i.i to ptr
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %75, align 4
  %add14.i.i = add i32 %77, %total_isolated.3
  store i32 %add14.i.i, ptr %75, align 4
  %78 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !450
  %and.i.i.i.i = and i32 %78, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i149 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i149, label %if.then.i.i150, label %if.then79.count_compact_events.exit_crit_edge, !prof !435

if.then79.count_compact_events.exit_crit_edge:    ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #13
  br label %count_compact_events.exit

if.then.i.i150:                                   ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @warn_bogus_irq_restore() #11
  br label %count_compact_events.exit

count_compact_events.exit:                        ; preds = %if.then.i.i150, %if.then79.count_compact_events.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %68) #11, !srcloc !451
  br label %if.end80

if.end80:                                         ; preds = %count_compact_events.exit, %if.end71.if.end80_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags) #11
  ret i32 %total_isolated.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @split_map_pages(ptr noundef %list) unnamed_addr #0 align 64 {
entry:
  %tmp_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_list) #11
  %0 = getelementptr inbounds %struct.list_head, ptr %tmp_list, i32 0, i32 1
  %1 = ptrtoint ptr %tmp_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tmp_list, ptr %tmp_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %tmp_list, ptr %0, align 4
  %3 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %list, align 4
  %cmp.not43 = icmp eq ptr %4, %list
  br i1 %cmp.not43, label %entry.for.end19_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end19_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end19

for.cond.loopexit:                                ; preds = %list_add.exit
  %cmp.not = icmp eq ptr %.pn47, %list
  br i1 %cmp.not, label %for.cond.loopexit.for.end19_crit_edge, label %for.cond.loopexit.for.body_crit_edge

for.cond.loopexit.for.body_crit_edge:             ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

for.cond.loopexit.for.end19_crit_edge:            ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end19

for.body:                                         ; preds = %for.cond.loopexit.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in44 = phi ptr [ %.pn47, %for.cond.loopexit.for.body_crit_edge ], [ %4, %entry.for.body_crit_edge ]
  %page.046 = getelementptr i8, ptr %.pn.in44, i32 -4
  %5 = ptrtoint ptr %.pn.in44 to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn47 = load ptr, ptr %.pn.in44, align 4
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in44) #11
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del.exit_crit_edge

for.body.list_del.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in44, i32 0, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %8 = ptrtoint ptr %.pn.in44 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %.pn.in44, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body.list_del.exit_crit_edge
  %12 = ptrtoint ptr %.pn.in44 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in44, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn.in44, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %private = getelementptr i8, ptr %.pn.in44, i32 16
  %14 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %private, align 4
  call void @post_alloc_hook(ptr noundef %page.046, i32 noundef %15, i32 noundef 8) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not = icmp eq i32 %15, 0
  br i1 %tobool.not, label %list_del.exit.for.body11.preheader_crit_edge, label %if.then

list_del.exit.for.body11.preheader_crit_edge:     ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body11.preheader

if.then:                                          ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #13
  call void @split_page(ptr noundef %page.046, i32 noundef %15) #11
  br label %for.body11.preheader

for.body11.preheader:                             ; preds = %if.then, %list_del.exit.for.body11.preheader_crit_edge
  br label %for.body11

for.body11:                                       ; preds = %list_add.exit.for.body11_crit_edge, %for.body11.preheader
  %i.040 = phi i32 [ %inc, %list_add.exit.for.body11_crit_edge ], [ 0, %for.body11.preheader ]
  %page.138 = phi ptr [ %incdec.ptr, %list_add.exit.for.body11_crit_edge ], [ %page.046, %for.body11.preheader ]
  %16 = getelementptr inbounds %struct.page, ptr %page.138, i32 0, i32 1
  %17 = ptrtoint ptr %tmp_list to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tmp_list, align 4
  %call.i.i35 = call zeroext i1 @__list_add_valid(ptr noundef %16, ptr noundef nonnull %tmp_list, ptr noundef %18) #11
  br i1 %call.i.i35, label %if.end.i.i36, label %for.body11.list_add.exit_crit_edge

for.body11.list_add.exit_crit_edge:               ; preds = %for.body11
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_add.exit

if.end.i.i36:                                     ; preds = %for.body11
  call void @__sanitizer_cov_trace_pc() #13
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %18, ptr %16, align 4
  %prev3.i.i = getelementptr inbounds %struct.page, ptr %page.138, i32 0, i32 1, i32 0, i32 0, i32 1
  %21 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %tmp_list, ptr %prev3.i.i, align 4
  %22 = ptrtoint ptr %tmp_list to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %16, ptr %tmp_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i36, %for.body11.list_add.exit_crit_edge
  %incdec.ptr = getelementptr %struct.page, ptr %page.138, i32 1
  %inc = add i32 %i.040, 1
  %i.0.highbits = lshr i32 %inc, %15
  %cmp10 = icmp eq i32 %i.0.highbits, 0
  br i1 %cmp10, label %list_add.exit.for.body11_crit_edge, label %for.cond.loopexit

list_add.exit.for.body11_crit_edge:               ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body11

for.end19:                                        ; preds = %for.cond.loopexit.for.end19_crit_edge, %entry.for.end19_crit_edge
  %23 = ptrtoint ptr %tmp_list to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %tmp_list, align 4
  %cmp.i.not.i = icmp eq ptr %24, %tmp_list
  br i1 %cmp.i.not.i, label %for.end19.list_splice.exit_crit_edge, label %if.then.i

for.end19.list_splice.exit_crit_edge:             ; preds = %for.end19
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_splice.exit

if.then.i:                                        ; preds = %for.end19
  call void @__sanitizer_cov_trace_pc() #13
  %25 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %list, align 4
  %27 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %0, align 4
  %prev3.i.i37 = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %29 = ptrtoint ptr %prev3.i.i37 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %list, ptr %prev3.i.i37, align 4
  store ptr %24, ptr %list, align 4
  %30 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %26, ptr %28, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %31 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %28, ptr %prev6.i.i, align 4
  br label %list_splice.exit

list_splice.exit:                                 ; preds = %if.then.i, %for.end19.list_splice.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_list) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @isolate_migratepages_range(ptr noundef %cc, i32 noundef %start_pfn, i32 noundef %end_pfn) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %zone = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 7
  %nr_migratepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 3
  call void @__sanitizer_cov_trace_cmp4(i32 %start_pfn, i32 %end_pfn)
  %cmp535 = icmp ult i32 %start_pfn, %end_pfn
  br i1 %cmp535, label %for.body.preheader, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.body.preheader:                               ; preds = %entry
  %add3 = add i32 %start_pfn, 2048
  %and4 = and i32 %add3, -2048
  %and = and i32 %start_pfn, -2048
  %0 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %zone, align 4
  %zone_start_pfn = getelementptr inbounds %struct.zone, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %zone_start_pfn, align 4
  %4 = tail call i32 @llvm.umax.i32(i32 %and, i32 %3)
  br label %for.body

for.body:                                         ; preds = %for.body.backedge, %for.body.preheader
  %pfn.038 = phi i32 [ %start_pfn, %for.body.preheader ], [ %5, %for.body.backedge ]
  %block_end_pfn.037 = phi i32 [ %and4, %for.body.preheader ], [ %block_end_pfn.037.be, %for.body.backedge ]
  %block_start_pfn.136 = phi i32 [ %4, %for.body.preheader ], [ %5, %for.body.backedge ]
  %5 = tail call i32 @llvm.umin.i32(i32 %block_end_pfn.037, i32 %end_pfn)
  %6 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %zone, align 4
  %contiguous.i = getelementptr inbounds %struct.zone, ptr %7, i32 0, i32 34
  %8 = ptrtoint ptr %contiguous.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %contiguous.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %10 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %11 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %block_start_pfn.136, %11
  %add.ptr.i = getelementptr %struct.page, ptr %10, i32 %sub.i
  br label %pageblock_pfn_to_page.exit

if.end.i:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  %call.i = tail call ptr @__pageblock_pfn_to_page(i32 noundef %block_start_pfn.136, i32 noundef %5, ptr noundef %7) #11
  br label %pageblock_pfn_to_page.exit

pageblock_pfn_to_page.exit:                       ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi ptr [ %add.ptr.i, %if.then.i ], [ %call.i, %if.end.i ]
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %for.inc, label %if.end9

if.end9:                                          ; preds = %pageblock_pfn_to_page.exit
  %call10 = tail call fastcc i32 @isolate_migratepages_block(ptr noundef %cc, i32 noundef %pfn.038, i32 noundef %5, i32 noundef 8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end13, label %if.end9.for.end_crit_edge

if.end9.for.end_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end13:                                         ; preds = %if.end9
  %12 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_migratepages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %13)
  %cmp14 = icmp ult i32 %13, 32
  call void @__sanitizer_cov_trace_cmp4(i32 %block_end_pfn.037, i32 %end_pfn)
  %cmp5 = icmp ult i32 %block_end_pfn.037, %end_pfn
  %or.cond = select i1 %cmp14, i1 %cmp5, i1 false
  br i1 %or.cond, label %if.end13.for.body.backedge_crit_edge, label %if.end13.for.end_crit_edge

if.end13.for.end_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end13.for.body.backedge_crit_edge:             ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.backedge

for.inc:                                          ; preds = %pageblock_pfn_to_page.exit
  call void @__sanitizer_cov_trace_cmp4(i32 %block_end_pfn.037, i32 %end_pfn)
  %cmp5.old = icmp ult i32 %block_end_pfn.037, %end_pfn
  br i1 %cmp5.old, label %for.inc.for.body.backedge_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.inc.for.body.backedge_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.backedge

for.body.backedge:                                ; preds = %for.inc.for.body.backedge_crit_edge, %if.end13.for.body.backedge_crit_edge
  %block_end_pfn.037.be = add i32 %5, 2048
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end13.for.end_crit_edge, %if.end9.for.end_crit_edge, %entry.for.end_crit_edge
  %ret.2 = phi i32 [ 0, %entry.for.end_crit_edge ], [ 0, %if.end13.for.end_crit_edge ], [ %call10, %if.end9.for.end_crit_edge ], [ 0, %for.inc.for.end_crit_edge ]
  ret i32 %ret.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @isolate_migratepages_block(ptr noundef %cc, i32 noundef %low_pfn, i32 noundef %end_pfn, i32 noundef %isolate_mode) unnamed_addr #0 align 64 {
entry:
  %flags = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %zone = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 7
  %0 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %zone, align 4
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %zone_pgdat, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags) #11
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %flags, align 4
  %migrate_pfn = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 5
  %5 = ptrtoint ptr %migrate_pfn to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %low_pfn, ptr %migrate_pfn, align 4
  %nr_migratepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 3
  %mode = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 17
  br label %while.cond

while.cond:                                       ; preds = %fatal_signal_pending.exit.while.cond_crit_edge, %entry
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), i32 noundef 4) #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2) to i32))
  %6 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), align 4
  %7 = tail call i32 @llvm.smax.i32(i32 %6, i32 0) #11
  %call.i.i.i.i12.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_node_stat to i32))
  %8 = load volatile i32, ptr @vm_node_stat, align 4
  %9 = tail call i32 @llvm.smax.i32(i32 %8, i32 0) #11
  %call.i.i.i.i13.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), i32 noundef 4) #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3) to i32))
  %10 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), align 4
  %11 = tail call i32 @llvm.smax.i32(i32 %10, i32 0) #11
  %call.i.i.i.i14.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), i32 noundef 4) #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1) to i32))
  %12 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), align 4
  %13 = tail call i32 @llvm.smax.i32(i32 %12, i32 0) #11
  %call.i.i.i.i15.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8), i32 noundef 4) #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8) to i32))
  %14 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8), align 4
  %15 = tail call i32 @llvm.smax.i32(i32 %14, i32 0) #11
  %call.i.i.i.i16.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7), i32 noundef 4) #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7) to i32))
  %16 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7), align 4
  %17 = tail call i32 @llvm.smax.i32(i32 %16, i32 0) #11
  %add7.i = add nuw i32 %17, %15
  %add4.i = add nuw i32 %9, %7
  %add.i = add i32 %add4.i, %11
  %add8.i = add i32 %add.i, %13
  %div11.i = lshr i32 %add8.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add7.i, i32 %div11.i)
  %cmp.i564 = icmp ugt i32 %add7.i, %div11.i
  br i1 %cmp.i564, label %while.body, label %if.then.i565

if.then.i565:                                     ; preds = %while.cond
  %head.i.i.i = getelementptr %struct.pglist_data, ptr %3, i32 0, i32 11, i32 1, i32 1
  %18 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %head.i.i.i, align 4
  %cmp.i.i.not.i.i = icmp eq ptr %19, %head.i.i.i
  br i1 %cmp.i.i.not.i.i, label %if.then.i565.while.end_crit_edge, label %if.then.i.i566

if.then.i565.while.end_crit_edge:                 ; preds = %if.then.i565
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

if.then.i.i566:                                   ; preds = %if.then.i565
  call void @__sanitizer_cov_trace_pc() #13
  %arrayidx.i.i = getelementptr %struct.pglist_data, ptr %3, i32 0, i32 11, i32 1
  tail call void @__wake_up(ptr noundef %arrayidx.i.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #11
  br label %while.end

while.body:                                       ; preds = %while.cond
  %20 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %nr_migratepages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool2.not = icmp eq i32 %21, 0
  br i1 %tobool2.not, label %if.end, label %while.body.cleanup_crit_edge

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %while.body
  %22 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp = icmp eq i32 %23, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end4:                                          ; preds = %if.end
  tail call void @reclaim_throttle(ptr noundef %3, i32 noundef 1) #11
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i567 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i567 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %task, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %stack.i.i.i, align 4
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %29, align 4
  %and1.i.i.i.i.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i568 = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i568, label %if.end4.fatal_signal_pending.exit_crit_edge, label %land.rhs.i

if.end4.fatal_signal_pending.exit_crit_edge:      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #13
  br label %fatal_signal_pending.exit

land.rhs.i:                                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #13
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 116, i32 1
  %32 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %signal.i.i, align 4
  %34 = lshr i32 %33, 8
  %.lobit.i = and i32 %34, 1
  br label %fatal_signal_pending.exit

fatal_signal_pending.exit:                        ; preds = %land.rhs.i, %if.end4.fatal_signal_pending.exit_crit_edge
  %35 = phi i32 [ 0, %if.end4.fatal_signal_pending.exit_crit_edge ], [ %.lobit.i, %land.rhs.i ]
  %tobool7.not = icmp eq i32 %35, 0
  br i1 %tobool7.not, label %fatal_signal_pending.exit.while.cond_crit_edge, label %fatal_signal_pending.exit.cleanup_crit_edge

fatal_signal_pending.exit.cleanup_crit_edge:      ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

fatal_signal_pending.exit.while.cond_crit_edge:   ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond

while.end:                                        ; preds = %if.then.i.i566, %if.then.i565.while.end_crit_edge
  tail call void @__might_resched(ptr noundef nonnull @.str.27, i32 noundef 837, i32 noundef 0) #11
  %call.i = tail call i32 @__cond_resched() #11
  %direct_compaction = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 21
  %36 = ptrtoint ptr %direct_compaction to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %direct_compaction, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool11.not = icmp eq i8 %37, 0
  br i1 %tobool11.not, label %while.end.if.end19_crit_edge, label %land.lhs.true

while.end.if.end19_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end19

land.lhs.true:                                    ; preds = %while.end
  %38 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp13 = icmp eq i32 %39, 0
  br i1 %cmp13, label %if.then14, label %land.lhs.true.if.end19_crit_edge

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end19

if.then14:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  %order = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 13
  %40 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %order, align 4
  %notmask486 = shl nsw i32 -1, %41
  %add15 = sub i32 %low_pfn, %notmask486
  %and = and i32 %add15, %notmask486
  br label %if.end19

if.end19:                                         ; preds = %if.then14, %land.lhs.true.if.end19_crit_edge, %while.end.if.end19_crit_edge
  %skip_on_failure.0.off0 = phi i1 [ true, %if.then14 ], [ false, %land.lhs.true.if.end19_crit_edge ], [ false, %while.end.if.end19_crit_edge ]
  %next_skip_pfn.0 = phi i32 [ %and, %if.then14 ], [ 0, %land.lhs.true.if.end19_crit_edge ], [ 0, %while.end.if.end19_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %low_pfn, i32 %end_pfn)
  %cmp20984 = icmp ult i32 %low_pfn, %end_pfn
  br i1 %cmp20984, label %for.body.lr.ph, label %if.end19.for.end_crit_edge

if.end19.for.end_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end19
  %skip_on_failure.0.off0.not = xor i1 %skip_on_failure.0.off0, true
  %order29 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 13
  %ignore_skip_hint = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 18
  %alloc_contig107 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 26
  %gfp_mask = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 12
  %no_set_skip_hint.i = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 19
  %migratepages255 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 1
  %rescan = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 25
  %contended237 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 24
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %low_pfn.addr.01007 = phi i32 [ %low_pfn, %for.body.lr.ph ], [ %inc268, %for.inc.for.body_crit_edge ]
  %skip_updated.0.off01001 = phi i1 [ false, %for.body.lr.ph ], [ %skip_updated.7.off0, %for.inc.for.body_crit_edge ]
  %next_skip_pfn.11000 = phi i32 [ %next_skip_pfn.0, %for.body.lr.ph ], [ %next_skip_pfn.4, %for.inc.for.body_crit_edge ]
  %valid_page.0998 = phi ptr [ null, %for.body.lr.ph ], [ %valid_page.1, %for.inc.for.body_crit_edge ]
  %locked.0996 = phi ptr [ null, %for.body.lr.ph ], [ %locked.12, %for.inc.for.body_crit_edge ]
  %nr_isolated.0989 = phi i32 [ 0, %for.body.lr.ph ], [ %nr_isolated.2, %for.inc.for.body_crit_edge ]
  %nr_scanned.0985 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %low_pfn.addr.01007, i32 %next_skip_pfn.11000)
  %cmp23.not = icmp ult i32 %low_pfn.addr.01007, %next_skip_pfn.11000
  %or.cond = select i1 %skip_on_failure.0.off0.not, i1 true, i1 %cmp23.not
  br i1 %or.cond, label %for.body.if.end38_crit_edge, label %if.then24

for.body.if.end38_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end38

if.then24:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_isolated.0989)
  %tobool25.not = icmp eq i32 %nr_isolated.0989, 0
  br i1 %tobool25.not, label %if.end27, label %if.then24.for.end_crit_edge

if.then24.for.end_crit_edge:                      ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end27:                                         ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #13
  %42 = ptrtoint ptr %order29 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %order29, align 4
  %notmask485 = shl nsw i32 -1, %43
  %add32 = sub i32 %low_pfn.addr.01007, %notmask485
  %and37 = and i32 %add32, %notmask485
  br label %if.end38

if.end38:                                         ; preds = %if.end27, %for.body.if.end38_crit_edge
  %next_skip_pfn.2 = phi i32 [ %and37, %if.end27 ], [ %next_skip_pfn.11000, %for.body.if.end38_crit_edge ]
  %rem = and i32 %low_pfn.addr.01007, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %tobool39.not = icmp eq i32 %rem, 0
  br i1 %tobool39.not, label %if.then40, label %if.end38.if.end52_crit_edge

if.end38.if.end52_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end52

if.then40:                                        ; preds = %if.end38
  %tobool41.not = icmp eq ptr %locked.0996, null
  br i1 %tobool41.not, label %if.then40.if.end43_crit_edge, label %if.then42

if.then40.if.end43_crit_edge:                     ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end43

if.then42:                                        ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #13
  %44 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %flags, align 4
  %lru_lock.i = getelementptr inbounds %struct.lruvec, ptr %locked.0996, i32 0, i32 1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lru_lock.i, i32 noundef %45) #11
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.then40.if.end43_crit_edge
  %46 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i569 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i569 to ptr
  %task45 = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %task45 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %task45, align 8
  %stack.i.i.i570 = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %stack.i.i.i570 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %stack.i.i.i570, align 4
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  %and1.i.i.i.i.i571 = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i571)
  %tobool.not.i572 = icmp eq i32 %and1.i.i.i.i.i571, 0
  br i1 %tobool.not.i572, label %if.end43.if.end49_crit_edge, label %fatal_signal_pending.exit576

if.end43.if.end49_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end49

fatal_signal_pending.exit576:                     ; preds = %if.end43
  %signal.i.i573 = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 116, i32 1
  %54 = ptrtoint ptr %signal.i.i573 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %signal.i.i573, align 4
  %56 = and i32 %55, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool47.not = icmp eq i32 %56, 0
  br i1 %tobool47.not, label %fatal_signal_pending.exit576.if.end49_crit_edge, label %if.then48

fatal_signal_pending.exit576.if.end49_crit_edge:  ; preds = %fatal_signal_pending.exit576
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end49

if.then48:                                        ; preds = %fatal_signal_pending.exit576
  call void @__sanitizer_cov_trace_pc() #13
  %57 = ptrtoint ptr %contended237 to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 1, ptr %contended237, align 2
  br label %fatal_pending

if.end49:                                         ; preds = %fatal_signal_pending.exit576.if.end49_crit_edge, %if.end43.if.end49_crit_edge
  tail call void @__might_resched(ptr noundef nonnull @.str.27, i32 noundef 887, i32 noundef 0) #11
  %call.i577 = tail call i32 @__cond_resched() #11
  br label %if.end52

if.end52:                                         ; preds = %if.end49, %if.end38.if.end52_crit_edge
  %locked.2 = phi ptr [ %locked.0996, %if.end38.if.end52_crit_edge ], [ null, %if.end49 ]
  %inc = add i32 %nr_scanned.0985, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %58 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %59 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub53 = sub i32 %low_pfn.addr.01007, %59
  %add.ptr = getelementptr %struct.page, ptr %58, i32 %sub53
  %tobool54.not = icmp eq ptr %valid_page.0998, null
  br i1 %tobool54.not, label %land.lhs.true55, label %if.end52.if.end66_crit_edge

if.end52.if.end66_crit_edge:                      ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end66

land.lhs.true55:                                  ; preds = %if.end52
  %and56 = and i32 %low_pfn.addr.01007, 2047
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and56)
  %cmp57 = icmp eq i32 %and56, 0
  br i1 %cmp57, label %if.then58, label %land.lhs.true55.if.end66_crit_edge

land.lhs.true55.if.end66_crit_edge:               ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end66

if.then58:                                        ; preds = %land.lhs.true55
  %60 = ptrtoint ptr %ignore_skip_hint to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %ignore_skip_hint, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %tobool59.not = icmp eq i8 %61, 0
  br i1 %tobool59.not, label %land.lhs.true60, label %if.then58.if.end66_crit_edge

if.then58.if.end66_crit_edge:                     ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end66

land.lhs.true60:                                  ; preds = %if.then58
  %add.ptr.idx = mul i32 %sub53, 36
  %sub.ptr.div = sdiv exact i32 %add.ptr.idx, 36
  %add61 = add i32 %sub.ptr.div, %59
  %call62 = tail call i32 @get_pfnblock_flags_mask(ptr noundef %add.ptr, i32 noundef %add61, i32 noundef 8) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %land.lhs.true60.if.end66_crit_edge, label %land.lhs.true60.isolate_abort_crit_edge

land.lhs.true60.isolate_abort_crit_edge:          ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_abort

land.lhs.true60.if.end66_crit_edge:               ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end66

if.end66:                                         ; preds = %land.lhs.true60.if.end66_crit_edge, %if.then58.if.end66_crit_edge, %land.lhs.true55.if.end66_crit_edge, %if.end52.if.end66_crit_edge
  %valid_page.1 = phi ptr [ %valid_page.0998, %if.end52.if.end66_crit_edge ], [ null, %land.lhs.true55.if.end66_crit_edge ], [ %add.ptr, %land.lhs.true60.if.end66_crit_edge ], [ %add.ptr, %if.then58.if.end66_crit_edge ]
  %62 = getelementptr %struct.page, ptr %58, i32 %sub53, i32 2
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %62, align 4
  %and.i = and i32 %64, -268435328
  call void @__sanitizer_cov_trace_const_cmp4(i32 -268435456, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, -268435456
  br i1 %cmp.i.not, label %if.then93, label %if.end103

if.then93:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #13
  %private = getelementptr %struct.page, ptr %58, i32 %sub53, i32 1, i32 0, i32 3
  %65 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %private, align 4
  %67 = add i32 %66, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %67)
  %68 = icmp ult i32 %67, 11
  %notmask484 = shl nsw i32 -1, %66
  %sub100 = xor i32 %notmask484, -1
  %add101 = select i1 %68, i32 %sub100, i32 0
  %low_pfn.addr.1 = add i32 %add101, %low_pfn.addr.01007
  br label %for.inc

if.end103:                                        ; preds = %if.end66
  %69 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %add.ptr, align 4
  %71 = and i32 %70, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool.not.i = icmp eq i32 %71, 0
  br i1 %tobool.not.i, label %PageCompound.exit, label %if.end103.land.lhs.true106_crit_edge

if.end103.land.lhs.true106_crit_edge:             ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true106

PageCompound.exit:                                ; preds = %if.end103
  %72 = getelementptr %struct.page, ptr %58, i32 %sub53, i32 1
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %72, align 4
  %and.i.i = and i32 %74, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool105.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool105.not, label %PageCompound.exit.if.end124_crit_edge, label %PageCompound.exit.land.lhs.true106_crit_edge

PageCompound.exit.land.lhs.true106_crit_edge:     ; preds = %PageCompound.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true106

PageCompound.exit.if.end124_crit_edge:            ; preds = %PageCompound.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end124

land.lhs.true106:                                 ; preds = %PageCompound.exit.land.lhs.true106_crit_edge, %if.end103.land.lhs.true106_crit_edge
  %75 = ptrtoint ptr %alloc_contig107 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %alloc_contig107, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %76)
  %tobool108.not = icmp eq i8 %76, 0
  br i1 %tobool108.not, label %if.then109, label %land.lhs.true106.if.end124_crit_edge

land.lhs.true106.if.end124_crit_edge:             ; preds = %land.lhs.true106
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end124

if.then109:                                       ; preds = %land.lhs.true106
  %77 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %78)
  %cmp.i.not.i.i = icmp eq i32 %78, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i578, label %PageHead.exit.i, !prof !435

if.then.i.i578:                                   ; preds = %if.then109
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.124) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !448
  unreachable

PageHead.exit.i:                                  ; preds = %if.then109
  %79 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %add.ptr, align 4
  %81 = and i32 %80, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool.not.i579 = icmp eq i32 %81, 0
  br i1 %tobool.not.i579, label %PageHead.exit.i.compound_order.exit.thread_crit_edge, label %compound_order.exit

PageHead.exit.i.compound_order.exit.thread_crit_edge: ; preds = %PageHead.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compound_order.exit.thread

compound_order.exit:                              ; preds = %PageHead.exit.i
  %82 = getelementptr %struct.page, ptr %add.ptr, i32 1, i32 1
  %compound_order.i = getelementptr inbounds %struct.anon.69, ptr %82, i32 0, i32 2
  %83 = ptrtoint ptr %compound_order.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %compound_order.i, align 1
  %conv.i580 = zext i8 %84 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %84)
  %cmp112 = icmp ult i8 %84, 12
  %notmask = shl nsw i32 -1, %conv.i580
  %sub121 = xor i32 %notmask, -1
  %add122 = add i32 %low_pfn.addr.01007, %sub121
  br i1 %cmp112, label %compound_order.exit.compound_order.exit.thread_crit_edge, label %compound_order.exit.isolate_fail_crit_edge

compound_order.exit.isolate_fail_crit_edge:       ; preds = %compound_order.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail

compound_order.exit.compound_order.exit.thread_crit_edge: ; preds = %compound_order.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %compound_order.exit.thread

compound_order.exit.thread:                       ; preds = %compound_order.exit.compound_order.exit.thread_crit_edge, %PageHead.exit.i.compound_order.exit.thread_crit_edge
  %add122702 = phi i32 [ %add122, %compound_order.exit.compound_order.exit.thread_crit_edge ], [ %low_pfn.addr.01007, %PageHead.exit.i.compound_order.exit.thread_crit_edge ]
  br label %isolate_fail

if.end124:                                        ; preds = %land.lhs.true106.if.end124_crit_edge, %PageCompound.exit.if.end124_crit_edge
  %85 = getelementptr %struct.page, ptr %58, i32 %sub53, i32 1
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %85, align 4
  %and.i.i488 = and i32 %87, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i488)
  %tobool.not.i.i = icmp eq i32 %and.i.i488, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !434

if.then.i.i:                                      ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i = add i32 %87, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #13
  %88 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %88, %if.end.i.i ]
  %89 = inttoptr i32 %retval.0.i.i to ptr
  %90 = ptrtoint ptr %89 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %89, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %91)
  %cmp.i.not.i = icmp eq i32 %91, -1
  %92 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %85, align 4
  %and.i13.i = and i32 %93, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !435

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !434

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i15.i = add i32 %93, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %94 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %94, %if.end.i17.i ]
  %95 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %95, ptr noundef nonnull @.str.119) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #11, !srcloc !452
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !434

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i22.i = add i32 %93, -1
  br label %PageLRU.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #13
  %96 = ptrtoint ptr %add.ptr to i32
  br label %PageLRU.exit

PageLRU.exit:                                     ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %96, %if.end.i24.i ]
  %97 = inttoptr i32 %retval.0.i25.i to ptr
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load volatile i32, ptr %97, align 4
  %100 = and i32 %99, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %100)
  %tobool126.not = icmp eq i32 %100, 0
  br i1 %tobool126.not, label %if.then127, label %if.end148

if.then127:                                       ; preds = %PageLRU.exit
  %mapping.i = getelementptr %struct.page, ptr %58, i32 %sub53, i32 1, i32 0, i32 1
  %101 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %mapping.i, align 4
  %103 = ptrtoint ptr %102 to i32
  %and.i489 = and i32 %103, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i489)
  %cmp.i490.not = icmp eq i32 %and.i489, 2
  br i1 %cmp.i490.not, label %land.lhs.true136, label %if.then127.isolate_fail_crit_edge, !prof !435

if.then127.isolate_fail_crit_edge:                ; preds = %if.then127
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail

land.lhs.true136:                                 ; preds = %if.then127
  %104 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %105)
  %cmp.i.not.i492 = icmp eq i32 %105, -1
  br i1 %cmp.i.not.i492, label %if.then.i493, label %PageIsolated.exit, !prof !435

if.then.i493:                                     ; preds = %land.lhs.true136
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.124) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 921, 0\0A.popsection", ""() #11, !srcloc !453
  unreachable

PageIsolated.exit:                                ; preds = %land.lhs.true136
  %106 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile i32, ptr %add.ptr, align 4
  %108 = and i32 %107, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %108)
  %tobool138.not = icmp eq i32 %108, 0
  br i1 %tobool138.not, label %if.then139, label %PageIsolated.exit.isolate_fail_crit_edge

PageIsolated.exit.isolate_fail_crit_edge:         ; preds = %PageIsolated.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail

if.then139:                                       ; preds = %PageIsolated.exit
  %tobool140.not = icmp eq ptr %locked.2, null
  br i1 %tobool140.not, label %if.then139.if.end142_crit_edge, label %if.then141

if.then139.if.end142_crit_edge:                   ; preds = %if.then139
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end142

if.then141:                                       ; preds = %if.then139
  call void @__sanitizer_cov_trace_pc() #13
  %109 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %flags, align 4
  %lru_lock.i581 = getelementptr inbounds %struct.lruvec, ptr %locked.2, i32 0, i32 1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lru_lock.i581, i32 noundef %110) #11
  br label %if.end142

if.end142:                                        ; preds = %if.then141, %if.then139.if.end142_crit_edge
  %call143 = tail call i32 @isolate_movable_page(ptr noundef %add.ptr, i32 noundef %isolate_mode) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call143)
  %tobool144.not = icmp eq i32 %call143, 0
  br i1 %tobool144.not, label %if.end142.isolate_success_crit_edge, label %if.end142.isolate_fail_crit_edge

if.end142.isolate_fail_crit_edge:                 ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail

if.end142.isolate_success_crit_edge:              ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_success

if.end148:                                        ; preds = %PageLRU.exit
  %call149 = tail call ptr @page_mapping(ptr noundef %add.ptr) #11
  %tobool150.not = icmp eq ptr %call149, null
  br i1 %tobool150.not, label %land.lhs.true151, label %if.end148.if.end156_crit_edge

if.end148.if.end156_crit_edge:                    ; preds = %if.end148
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end156

land.lhs.true151:                                 ; preds = %if.end148
  %111 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %85, align 4
  %and.i.i582 = and i32 %112, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i582)
  %tobool.not.i.i583 = icmp eq i32 %and.i.i582, 0
  br i1 %tobool.not.i.i583, label %if.end.i.i586, label %if.then.i.i585, !prof !434

if.then.i.i585:                                   ; preds = %land.lhs.true151
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i584 = add i32 %112, -1
  br label %page_count.exit

if.end.i.i586:                                    ; preds = %land.lhs.true151
  call void @__sanitizer_cov_trace_pc() #13
  %113 = ptrtoint ptr %add.ptr to i32
  br label %page_count.exit

page_count.exit:                                  ; preds = %if.end.i.i586, %if.then.i.i585
  %retval.0.i.i587 = phi i32 [ %sub.i.i584, %if.then.i.i585 ], [ %113, %if.end.i.i586 ]
  %114 = inttoptr i32 %retval.0.i.i587 to ptr
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %114, i32 0, i32 3
  %call.i.i.i.i.i588 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  %115 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile i32, ptr %_refcount.i.i.i, align 4
  %117 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load volatile i32, ptr %add.ptr, align 4
  %119 = and i32 %118, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %119)
  %tobool.not.i.i590 = icmp eq i32 %119, 0
  br i1 %tobool.not.i.i590, label %PageCompound.exit.i, label %page_count.exit.if.then.i592_crit_edge

page_count.exit.if.then.i592_crit_edge:           ; preds = %page_count.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i592

PageCompound.exit.i:                              ; preds = %page_count.exit
  %120 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load volatile i32, ptr %85, align 4
  %and.i.i.i = and i32 %121, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i591 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i591, label %if.end.i594, label %PageCompound.exit.i.if.then.i592_crit_edge, !prof !434

PageCompound.exit.i.if.then.i592_crit_edge:       ; preds = %PageCompound.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i592

if.then.i592:                                     ; preds = %PageCompound.exit.i.if.then.i592_crit_edge, %page_count.exit.if.then.i592_crit_edge
  %call3.i = tail call i32 @__page_mapcount(ptr noundef %add.ptr) #11
  br label %page_mapcount.exit

if.end.i594:                                      ; preds = %PageCompound.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %62, i32 noundef 4) #11
  %122 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile i32, ptr %62, align 4
  %add.i593 = add i32 %123, 1
  br label %page_mapcount.exit

page_mapcount.exit:                               ; preds = %if.end.i594, %if.then.i592
  %retval.0.i595 = phi i32 [ %call3.i, %if.then.i592 ], [ %add.i593, %if.end.i594 ]
  call void @__sanitizer_cov_trace_cmp4(i32 %116, i32 %retval.0.i595)
  %cmp154 = icmp sgt i32 %116, %retval.0.i595
  br i1 %cmp154, label %page_mapcount.exit.isolate_fail_crit_edge, label %page_mapcount.exit.if.end156_crit_edge

page_mapcount.exit.if.end156_crit_edge:           ; preds = %page_mapcount.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end156

page_mapcount.exit.isolate_fail_crit_edge:        ; preds = %page_mapcount.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail

if.end156:                                        ; preds = %page_mapcount.exit.if.end156_crit_edge, %if.end148.if.end156_crit_edge
  %124 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %gfp_mask, align 4
  %and157 = and i32 %125, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and157)
  %tobool158.not = icmp eq i32 %and157, 0
  br i1 %tobool158.not, label %land.lhs.true159, label %if.end156.if.end163_crit_edge

if.end156.if.end163_crit_edge:                    ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end163

land.lhs.true159:                                 ; preds = %if.end156
  %call160 = tail call ptr @page_mapping(ptr noundef %add.ptr) #11
  %tobool161.not = icmp eq ptr %call160, null
  br i1 %tobool161.not, label %land.lhs.true159.if.end163_crit_edge, label %land.lhs.true159.isolate_fail_crit_edge

land.lhs.true159.isolate_fail_crit_edge:          ; preds = %land.lhs.true159
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail

land.lhs.true159.if.end163_crit_edge:             ; preds = %land.lhs.true159
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end163

if.end163:                                        ; preds = %land.lhs.true159.if.end163_crit_edge, %if.end156.if.end163_crit_edge
  %_refcount.i.i = getelementptr %struct.page, ptr %58, i32 %sub53, i32 3
  %call.i.i.i.i596 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !454
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i, i32 1, i32 3, i32 1) #11
  %126 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i, ptr %_refcount.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i) #11, !srcloc !455
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %126, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.end163.atomic_add_unless.exit.i.i_crit_edge, label %do.end11.i.i.i.i.i

if.end163.atomic_add_unless.exit.i.i_crit_edge:   ; preds = %if.end163
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i

do.end11.i.i.i.i.i:                               ; preds = %if.end163
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !456
  br label %atomic_add_unless.exit.i.i

atomic_add_unless.exit.i.i:                       ; preds = %do.end11.i.i.i.i.i, %if.end163.atomic_add_unless.exit.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@isolate_migratepages_block, %if.then.i.i597)) #11
          to label %get_page_unless_zero.exit [label %if.then.i.i597], !srcloc !442

if.then.i.i597:                                   ; preds = %atomic_add_unless.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i = zext i1 %cmp.i.i.i.i to i32
  tail call void @__page_ref_mod_unless(ptr noundef %add.ptr, i32 noundef 1, i32 noundef %conv.i.i) #11
  br label %get_page_unless_zero.exit

get_page_unless_zero.exit:                        ; preds = %if.then.i.i597, %atomic_add_unless.exit.i.i
  br i1 %cmp.i.i.i.i, label %if.end174, label %get_page_unless_zero.exit.isolate_fail_crit_edge, !prof !434

get_page_unless_zero.exit.isolate_fail_crit_edge: ; preds = %get_page_unless_zero.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail

if.end174:                                        ; preds = %get_page_unless_zero.exit
  %call175 = tail call zeroext i1 @__isolate_lru_page_prepare(ptr noundef %add.ptr, i32 noundef %isolate_mode) #11
  br i1 %call175, label %if.end177, label %if.end174.isolate_fail_put_crit_edge

if.end174.isolate_fail_put_crit_edge:             ; preds = %if.end174
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail_put

if.end177:                                        ; preds = %if.end174
  %127 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile i32, ptr %85, align 4
  %and.i.i496 = and i32 %128, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i496)
  %tobool.not.i.i497 = icmp eq i32 %and.i.i496, 0
  br i1 %tobool.not.i.i497, label %if.end.i.i500, label %if.then.i.i499, !prof !434

if.then.i.i499:                                   ; preds = %if.end177
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i498 = add i32 %128, -1
  br label %_compound_head.exit.i505

if.end.i.i500:                                    ; preds = %if.end177
  call void @__sanitizer_cov_trace_pc() #13
  %129 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i505

_compound_head.exit.i505:                         ; preds = %if.end.i.i500, %if.then.i.i499
  %retval.0.i.i501 = phi i32 [ %sub.i.i498, %if.then.i.i499 ], [ %129, %if.end.i.i500 ]
  %130 = inttoptr i32 %retval.0.i.i501 to ptr
  %131 = ptrtoint ptr %130 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load volatile i32, ptr %130, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %132)
  %cmp.i.not.i502 = icmp eq i32 %132, -1
  %133 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load volatile i32, ptr %85, align 4
  %and.i13.i503 = and i32 %134, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i503)
  %tobool.not.i14.i504 = icmp eq i32 %and.i13.i503, 0
  br i1 %cmp.i.not.i502, label %if.then.i506, label %do.end8.i512, !prof !435

if.then.i506:                                     ; preds = %_compound_head.exit.i505
  br i1 %tobool.not.i14.i504, label %if.end.i17.i509, label %if.then.i16.i508, !prof !434

if.then.i16.i508:                                 ; preds = %if.then.i506
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i15.i507 = add i32 %134, -1
  br label %_compound_head.exit19.i511

if.end.i17.i509:                                  ; preds = %if.then.i506
  call void @__sanitizer_cov_trace_pc() #13
  %135 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i511

_compound_head.exit19.i511:                       ; preds = %if.end.i17.i509, %if.then.i16.i508
  %retval.0.i18.i510 = phi i32 [ %sub.i15.i507, %if.then.i16.i508 ], [ %135, %if.end.i17.i509 ]
  %136 = inttoptr i32 %retval.0.i18.i510 to ptr
  tail call void @dump_page(ptr noundef %136, ptr noundef nonnull @.str.119) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 423, 0\0A.popsection", ""() #11, !srcloc !457
  unreachable

do.end8.i512:                                     ; preds = %_compound_head.exit.i505
  br i1 %tobool.not.i14.i504, label %if.end.i24.i515, label %if.then.i23.i514, !prof !434

if.then.i23.i514:                                 ; preds = %do.end8.i512
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i22.i513 = add i32 %134, -1
  br label %TestClearPageLRU.exit

if.end.i24.i515:                                  ; preds = %do.end8.i512
  call void @__sanitizer_cov_trace_pc() #13
  %137 = ptrtoint ptr %add.ptr to i32
  br label %TestClearPageLRU.exit

TestClearPageLRU.exit:                            ; preds = %if.end.i24.i515, %if.then.i23.i514
  %retval.0.i25.i516 = phi i32 [ %sub.i22.i513, %if.then.i23.i514 ], [ %137, %if.end.i24.i515 ]
  %138 = inttoptr i32 %retval.0.i25.i516 to ptr
  %call10.i = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %138) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool179.not = icmp eq i32 %call10.i, 0
  br i1 %tobool179.not, label %TestClearPageLRU.exit.isolate_fail_put_crit_edge, label %if.end181

TestClearPageLRU.exit.isolate_fail_put_crit_edge: ; preds = %TestClearPageLRU.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail_put

if.end181:                                        ; preds = %TestClearPageLRU.exit
  %139 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load volatile i32, ptr %85, align 4
  %and.i598 = and i32 %140, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i598)
  %tobool.not.i599 = icmp eq i32 %and.i598, 0
  br i1 %tobool.not.i599, label %if.end.i601, label %if.then.i600, !prof !434

if.then.i600:                                     ; preds = %if.end181
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i = add i32 %140, -1
  br label %_compound_head.exit

if.end.i601:                                      ; preds = %if.end181
  call void @__sanitizer_cov_trace_pc() #13
  %141 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i601, %if.then.i600
  %retval.0.i602 = phi i32 [ %sub.i, %if.then.i600 ], [ %141, %if.end.i601 ]
  %142 = inttoptr i32 %retval.0.i602 to ptr
  %call183 = tail call fastcc ptr @folio_lruvec(ptr noundef %142)
  %cmp184.not = icmp eq ptr %call183, %locked.2
  br i1 %cmp184.not, label %_compound_head.exit.if.end214_crit_edge, label %if.then185

_compound_head.exit.if.end214_crit_edge:          ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end214

if.then185:                                       ; preds = %_compound_head.exit
  %tobool186.not = icmp eq ptr %locked.2, null
  br i1 %tobool186.not, label %if.then185.if.end188_crit_edge, label %if.then187

if.then185.if.end188_crit_edge:                   ; preds = %if.then185
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end188

if.then187:                                       ; preds = %if.then185
  call void @__sanitizer_cov_trace_pc() #13
  %143 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %flags, align 4
  %lru_lock.i603 = getelementptr inbounds %struct.lruvec, ptr %locked.2, i32 0, i32 1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lru_lock.i603, i32 noundef %144) #11
  br label %if.end188

if.end188:                                        ; preds = %if.then187, %if.then185.if.end188_crit_edge
  %lru_lock = getelementptr inbounds %struct.lruvec, ptr %call183, i32 0, i32 1
  call fastcc void @compact_lock_irqsave(ptr noundef %lru_lock, ptr noundef nonnull %flags, ptr noundef %cc)
  %145 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load volatile i32, ptr %85, align 4
  %and.i604 = and i32 %146, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i604)
  %tobool.not.i605 = icmp eq i32 %and.i604, 0
  br i1 %tobool.not.i605, label %if.end.i608, label %if.then.i607, !prof !434

if.then.i607:                                     ; preds = %if.end188
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i606 = add i32 %146, -1
  br label %_compound_head.exit610

if.end.i608:                                      ; preds = %if.end188
  call void @__sanitizer_cov_trace_pc() #13
  %147 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit610

_compound_head.exit610:                           ; preds = %if.end.i608, %if.then.i607
  %retval.0.i609 = phi i32 [ %sub.i606, %if.then.i607 ], [ %147, %if.end.i608 ]
  %148 = inttoptr i32 %retval.0.i609 to ptr
  tail call void @lruvec_memcg_debug(ptr noundef %call183, ptr noundef %148) #11
  br i1 %skip_updated.0.off01001, label %_compound_head.exit610.if.end196_crit_edge, label %if.then192

_compound_head.exit610.if.end196_crit_edge:       ; preds = %_compound_head.exit610
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end196

if.then192:                                       ; preds = %_compound_head.exit610
  %149 = ptrtoint ptr %ignore_skip_hint to i32
  call void @__asan_load1_noabort(i32 %149)
  %150 = load i8, ptr %ignore_skip_hint, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %150)
  %tobool.not.i611 = icmp eq i8 %150, 0
  %and.i612 = and i32 %low_pfn.addr.01007, 2047
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i612)
  %cmp.i613 = icmp eq i32 %and.i612, 0
  %or.cond.i = and i1 %cmp.i613, %tobool.not.i611
  br i1 %or.cond.i, label %if.end2.i, label %if.then192.if.end196_crit_edge

if.then192.if.end196_crit_edge:                   ; preds = %if.then192
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end196

if.end2.i:                                        ; preds = %if.then192
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %151 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %151 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %152 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i614 = add i32 %sub.ptr.div.i, %152
  %call.i615 = tail call i32 @get_pfnblock_flags_mask(ptr noundef %add.ptr, i32 noundef %add.i614, i32 noundef 8) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i615)
  %tobool3.not.i = icmp eq i32 %call.i615, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i, label %if.end2.i.isolate_abort_crit_edge

if.end2.i.isolate_abort_crit_edge:                ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_abort

land.lhs.true.i:                                  ; preds = %if.end2.i
  %153 = ptrtoint ptr %no_set_skip_hint.i to i32
  call void @__asan_load1_noabort(i32 %153)
  %154 = load i8, ptr %no_set_skip_hint.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %154)
  %tobool5.not.i = icmp eq i8 %154, 0
  br i1 %tobool5.not.i, label %if.then6.i, label %land.lhs.true.i.if.end196_crit_edge

land.lhs.true.i.if.end196_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end196

if.then6.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %155 = load ptr, ptr @mem_map, align 4
  %sub.ptr.rhs.cast8.i = ptrtoint ptr %155 to i32
  %sub.ptr.sub9.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast8.i
  %sub.ptr.div10.i = sdiv exact i32 %sub.ptr.sub9.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %156 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add11.i = add i32 %sub.ptr.div10.i, %156
  tail call void @set_pfnblock_flags_mask(ptr noundef %add.ptr, i32 noundef 8, i32 noundef %add11.i, i32 noundef 8) #11
  br label %if.end196

if.end196:                                        ; preds = %if.then6.i, %land.lhs.true.i.if.end196_crit_edge, %if.then192.if.end196_crit_edge, %_compound_head.exit610.if.end196_crit_edge
  %157 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile i32, ptr %add.ptr, align 4
  %159 = and i32 %158, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %159)
  %tobool.not.i517 = icmp eq i32 %159, 0
  br i1 %tobool.not.i517, label %PageCompound.exit520, label %if.end196.land.rhs_crit_edge

if.end196.land.rhs_crit_edge:                     ; preds = %if.end196
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.rhs

PageCompound.exit520:                             ; preds = %if.end196
  %160 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load volatile i32, ptr %85, align 4
  %and.i.i518 = and i32 %161, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i518)
  %tobool198.not = icmp eq i32 %and.i.i518, 0
  br i1 %tobool198.not, label %PageCompound.exit520.if.end214_crit_edge, label %PageCompound.exit520.land.rhs_crit_edge

PageCompound.exit520.land.rhs_crit_edge:          ; preds = %PageCompound.exit520
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.rhs

PageCompound.exit520.if.end214_crit_edge:         ; preds = %PageCompound.exit520
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end214

land.rhs:                                         ; preds = %PageCompound.exit520.land.rhs_crit_edge, %if.end196.land.rhs_crit_edge
  %162 = ptrtoint ptr %alloc_contig107 to i32
  call void @__asan_load1_noabort(i32 %162)
  %163 = load i8, ptr %alloc_contig107, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %163)
  %tobool200.not = icmp eq i8 %163, 0
  br i1 %tobool200.not, label %if.then209, label %land.rhs.if.end214_crit_edge, !prof !435

land.rhs.if.end214_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end214

if.then209:                                       ; preds = %land.rhs
  %call210 = tail call fastcc i32 @compound_nr(ptr noundef %add.ptr)
  %sub211 = add i32 %low_pfn.addr.01007, -1
  %add212 = add i32 %sub211, %call210
  %164 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load volatile i32, ptr %85, align 4
  %and.i.i521 = and i32 %165, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i521)
  %tobool.not.i.i522 = icmp eq i32 %and.i.i521, 0
  br i1 %tobool.not.i.i522, label %if.end.i.i525, label %if.then.i.i524, !prof !434

if.then.i.i524:                                   ; preds = %if.then209
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i523 = add i32 %165, -1
  br label %_compound_head.exit.i528

if.end.i.i525:                                    ; preds = %if.then209
  call void @__sanitizer_cov_trace_pc() #13
  %166 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i528

_compound_head.exit.i528:                         ; preds = %if.end.i.i525, %if.then.i.i524
  %retval.0.i.i526 = phi i32 [ %sub.i.i523, %if.then.i.i524 ], [ %166, %if.end.i.i525 ]
  %167 = inttoptr i32 %retval.0.i.i526 to ptr
  %168 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load volatile i32, ptr %167, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %169)
  %cmp.i.not.i527 = icmp eq i32 %169, -1
  %170 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load volatile i32, ptr %85, align 4
  %and.i12.i = and i32 %171, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i)
  %tobool.not.i13.i = icmp eq i32 %and.i12.i, 0
  br i1 %cmp.i.not.i527, label %if.then.i529, label %do.end8.i530, !prof !435

if.then.i529:                                     ; preds = %_compound_head.exit.i528
  br i1 %tobool.not.i13.i, label %if.end.i16.i, label %if.then.i15.i, !prof !434

if.then.i15.i:                                    ; preds = %if.then.i529
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i14.i = add i32 %171, -1
  br label %_compound_head.exit18.i

if.end.i16.i:                                     ; preds = %if.then.i529
  call void @__sanitizer_cov_trace_pc() #13
  %172 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit18.i

_compound_head.exit18.i:                          ; preds = %if.end.i16.i, %if.then.i15.i
  %retval.0.i17.i = phi i32 [ %sub.i14.i, %if.then.i15.i ], [ %172, %if.end.i16.i ]
  %173 = inttoptr i32 %retval.0.i17.i to ptr
  tail call void @dump_page(ptr noundef %173, ptr noundef nonnull @.str.119) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #11, !srcloc !458
  unreachable

do.end8.i530:                                     ; preds = %_compound_head.exit.i528
  br i1 %tobool.not.i13.i, label %if.end.i23.i, label %if.then.i22.i, !prof !434

if.then.i22.i:                                    ; preds = %do.end8.i530
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i21.i = add i32 %171, -1
  br label %SetPageLRU.exit

if.end.i23.i:                                     ; preds = %do.end8.i530
  call void @__sanitizer_cov_trace_pc() #13
  %174 = ptrtoint ptr %add.ptr to i32
  br label %SetPageLRU.exit

SetPageLRU.exit:                                  ; preds = %if.end.i23.i, %if.then.i22.i
  %retval.0.i24.i = phi i32 [ %sub.i21.i, %if.then.i22.i ], [ %174, %if.end.i23.i ]
  %175 = inttoptr i32 %retval.0.i24.i to ptr
  tail call void @_set_bit(i32 noundef 4, ptr noundef %175) #11
  br label %isolate_fail_put

if.end214:                                        ; preds = %land.rhs.if.end214_crit_edge, %PageCompound.exit520.if.end214_crit_edge, %_compound_head.exit.if.end214_crit_edge
  %locked.4 = phi ptr [ %call183, %land.rhs.if.end214_crit_edge ], [ %locked.2, %_compound_head.exit.if.end214_crit_edge ], [ %call183, %PageCompound.exit520.if.end214_crit_edge ]
  %skip_updated.2.off0 = phi i1 [ true, %land.rhs.if.end214_crit_edge ], [ %skip_updated.0.off01001, %_compound_head.exit.if.end214_crit_edge ], [ true, %PageCompound.exit520.if.end214_crit_edge ]
  %176 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load volatile i32, ptr %add.ptr, align 4
  %178 = and i32 %177, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %178)
  %tobool.not.i531 = icmp eq i32 %178, 0
  br i1 %tobool.not.i531, label %PageCompound.exit534, label %if.end214.if.then217_crit_edge

if.end214.if.then217_crit_edge:                   ; preds = %if.end214
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then217

PageCompound.exit534:                             ; preds = %if.end214
  %179 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load volatile i32, ptr %85, align 4
  %and.i.i532 = and i32 %180, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i532)
  %tobool216.not = icmp eq i32 %and.i.i532, 0
  br i1 %tobool216.not, label %PageCompound.exit534.if.end221_crit_edge, label %PageCompound.exit534.if.then217_crit_edge

PageCompound.exit534.if.then217_crit_edge:        ; preds = %PageCompound.exit534
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then217

PageCompound.exit534.if.end221_crit_edge:         ; preds = %PageCompound.exit534
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end221

if.then217:                                       ; preds = %PageCompound.exit534.if.then217_crit_edge, %if.end214.if.then217_crit_edge
  %181 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %182)
  %cmp.i.not.i.i617 = icmp eq i32 %182, -1
  br i1 %cmp.i.not.i.i617, label %if.then.i.i618, label %PageHead.exit.i620, !prof !435

if.then.i.i618:                                   ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.124) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !448
  unreachable

PageHead.exit.i620:                               ; preds = %if.then217
  %183 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load volatile i32, ptr %add.ptr, align 4
  %185 = and i32 %184, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %185)
  %tobool.not.i619 = icmp eq i32 %185, 0
  br i1 %tobool.not.i619, label %PageHead.exit.i620.compound_nr.exit_crit_edge, label %if.end.i621

PageHead.exit.i620.compound_nr.exit_crit_edge:    ; preds = %PageHead.exit.i620
  call void @__sanitizer_cov_trace_pc() #13
  br label %compound_nr.exit

if.end.i621:                                      ; preds = %PageHead.exit.i620
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i = getelementptr %struct.page, ptr %add.ptr, i32 1, i32 1, i32 0, i32 2
  %186 = ptrtoint ptr %compound_nr.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %compound_nr.i, align 4
  br label %compound_nr.exit

compound_nr.exit:                                 ; preds = %if.end.i621, %PageHead.exit.i620.compound_nr.exit_crit_edge
  %retval.0.i622 = phi i32 [ %187, %if.end.i621 ], [ 1, %PageHead.exit.i620.compound_nr.exit_crit_edge ]
  %sub219 = add i32 %low_pfn.addr.01007, -1
  %add220 = add i32 %sub219, %retval.0.i622
  br label %if.end221

if.end221:                                        ; preds = %compound_nr.exit, %PageCompound.exit534.if.end221_crit_edge
  %low_pfn.addr.3 = phi i32 [ %add220, %compound_nr.exit ], [ %low_pfn.addr.01007, %PageCompound.exit534.if.end221_crit_edge ]
  %188 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load volatile i32, ptr %85, align 4
  %and.i.i535 = and i32 %189, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i535)
  %tobool.not.i.i536 = icmp eq i32 %and.i.i535, 0
  br i1 %tobool.not.i.i536, label %if.end.i.i538, label %if.then.i.i537, !prof !434

if.then.i.i537:                                   ; preds = %if.end221
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i1.i = add i32 %189, -1
  br label %_compound_head.exit.i540

if.end.i.i538:                                    ; preds = %if.end221
  call void @__sanitizer_cov_trace_pc() #13
  %190 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i540

_compound_head.exit.i540:                         ; preds = %if.end.i.i538, %if.then.i.i537
  %retval.0.i.i539 = phi i32 [ %sub.i1.i, %if.then.i.i537 ], [ %190, %if.end.i.i538 ]
  %191 = inttoptr i32 %retval.0.i.i539 to ptr
  %lru.i.i = getelementptr inbounds %struct.anon.81, ptr %191, i32 0, i32 1
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %lru.i.i) #11
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %_compound_head.exit.i540.list_del.exit.i.i_crit_edge

_compound_head.exit.i540.list_del.exit.i.i_crit_edge: ; preds = %_compound_head.exit.i540
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_del.exit.i.i

if.end.i.i.i.i:                                   ; preds = %_compound_head.exit.i540
  call void @__sanitizer_cov_trace_pc() #13
  %prev.i.i.i.i = getelementptr inbounds %struct.anon.81, ptr %191, i32 0, i32 1, i32 1
  %192 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %prev.i.i.i.i, align 4
  %194 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %lru.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %195, i32 0, i32 1
  %196 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %196)
  store ptr %193, ptr %prev1.i.i.i.i.i, align 4
  %197 = ptrtoint ptr %193 to i32
  call void @__asan_store4_noabort(i32 %197)
  store volatile ptr %195, ptr %193, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i.i.i, %_compound_head.exit.i540.list_del.exit.i.i_crit_edge
  %198 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store ptr inttoptr (i32 256 to ptr), ptr %lru.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.anon.81, ptr %191, i32 0, i32 1, i32 1
  %199 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  %200 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i.i.i.i = and i32 %200, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_test_active.exit.i.i.i, label %if.then.i.i.i.i.i, !prof !434

if.then.i.i.i.i.i:                                ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %201 = inttoptr i32 %retval.0.i.i539 to ptr
  tail call void @dump_page(ptr noundef %201, ptr noundef nonnull @.str.133) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !459
  unreachable

folio_test_active.exit.i.i.i:                     ; preds = %list_del.exit.i.i
  %202 = ptrtoint ptr %191 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load volatile i32, ptr %191, align 4
  %204 = and i32 %203, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %204)
  %tobool.i.not.i.i.i = icmp eq i32 %204, 0
  br i1 %tobool.i.not.i.i.i, label %folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge, label %land.rhs.i.i.i

folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge: ; preds = %folio_test_active.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end8.i.i.i

land.rhs.i.i.i:                                   ; preds = %folio_test_active.exit.i.i.i
  %205 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i23.i.i.i = and i32 %206, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i23.i.i.i)
  %tobool.not.i.i24.i.i.i = icmp eq i32 %and.i.i.i23.i.i.i, 0
  br i1 %tobool.not.i.i24.i.i.i, label %folio_test_unevictable.exit.i.i.i, label %if.then.i.i25.i.i.i, !prof !434

if.then.i.i25.i.i.i:                              ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %207 = inttoptr i32 %retval.0.i.i539 to ptr
  tail call void @dump_page(ptr noundef %207, ptr noundef nonnull @.str.133) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !459
  unreachable

folio_test_unevictable.exit.i.i.i:                ; preds = %land.rhs.i.i.i
  %208 = ptrtoint ptr %191 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load volatile i32, ptr %191, align 4
  %210 = and i32 %209, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %210)
  %tobool.i26.not.i.i.i = icmp eq i32 %210, 0
  br i1 %tobool.i26.not.i.i.i, label %folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge, label %if.then.i.i.i, !prof !434

folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge: ; preds = %folio_test_unevictable.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end8.i.i.i

if.then.i.i.i:                                    ; preds = %folio_test_unevictable.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %211 = inttoptr i32 %retval.0.i.i539 to ptr
  tail call void @dump_page(ptr noundef %211, ptr noundef nonnull @.str.136) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm_inline.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 83, 0\0A.popsection", ""() #11, !srcloc !460
  unreachable

do.end8.i.i.i:                                    ; preds = %folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge, %folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge
  %212 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i27.i.i.i = and i32 %213, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i27.i.i.i)
  %tobool.not.i.i28.i.i.i = icmp eq i32 %and.i.i.i27.i.i.i, 0
  br i1 %tobool.not.i.i28.i.i.i, label %folio_test_unevictable.exit31.i.i.i, label %if.then.i.i29.i.i.i, !prof !434

if.then.i.i29.i.i.i:                              ; preds = %do.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %214 = inttoptr i32 %retval.0.i.i539 to ptr
  tail call void @dump_page(ptr noundef %214, ptr noundef nonnull @.str.133) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !459
  unreachable

folio_test_unevictable.exit31.i.i.i:              ; preds = %do.end8.i.i.i
  %215 = ptrtoint ptr %191 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load volatile i32, ptr %191, align 4
  %217 = and i32 %216, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %217)
  %tobool.i30.not.i.i.i = icmp eq i32 %217, 0
  br i1 %tobool.i30.not.i.i.i, label %if.end11.i.i.i, label %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge

folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge: ; preds = %folio_test_unevictable.exit31.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_lru_list.exit.i.i

if.end11.i.i.i:                                   ; preds = %folio_test_unevictable.exit31.i.i.i
  %218 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i.i.i.i.i = and i32 %219, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %folio_is_file_lru.exit.i.i.i, label %if.then.i.i.i.i.i.i, !prof !434

if.then.i.i.i.i.i.i:                              ; preds = %if.end11.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %220 = inttoptr i32 %retval.0.i.i539 to ptr
  tail call void @dump_page(ptr noundef %220, ptr noundef nonnull @.str.133) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !459
  unreachable

folio_is_file_lru.exit.i.i.i:                     ; preds = %if.end11.i.i.i
  %221 = ptrtoint ptr %191 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load volatile i32, ptr %191, align 4
  %223 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i32.i.i.i = and i32 %224, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i32.i.i.i)
  %tobool.not.i.i33.i.i.i = icmp eq i32 %and.i.i.i32.i.i.i, 0
  br i1 %tobool.not.i.i33.i.i.i, label %folio_test_active.exit36.i.i.i, label %if.then.i.i34.i.i.i, !prof !434

if.then.i.i34.i.i.i:                              ; preds = %folio_is_file_lru.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %225 = inttoptr i32 %retval.0.i.i539 to ptr
  tail call void @dump_page(ptr noundef %225, ptr noundef nonnull @.str.133) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !459
  unreachable

folio_test_active.exit36.i.i.i:                   ; preds = %folio_is_file_lru.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %226 = lshr i32 %222, 18
  %227 = and i32 %226, 2
  %228 = ptrtoint ptr %191 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load volatile i32, ptr %191, align 4
  %230 = lshr i32 %229, 5
  %231 = and i32 %230, 1
  %232 = or i32 %231, %227
  %233 = xor i32 %232, 2
  br label %folio_lru_list.exit.i.i

folio_lru_list.exit.i.i:                          ; preds = %folio_test_active.exit36.i.i.i, %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %233, %folio_test_active.exit36.i.i.i ], [ 4, %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge ]
  %234 = ptrtoint ptr %191 to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load volatile i32, ptr %191, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %235)
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %235, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i6.i.i, label %PageHead.exit.i.i.i.i, !prof !435

if.then.i.i.i6.i.i:                               ; preds = %folio_lru_list.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %236 = inttoptr i32 %retval.0.i.i539 to ptr
  tail call void @dump_page(ptr noundef %236, ptr noundef nonnull @.str.124) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !448
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %folio_lru_list.exit.i.i
  %237 = ptrtoint ptr %191 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load volatile i32, ptr %191, align 4
  %239 = and i32 %238, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %239)
  %tobool.not.i.i.i.i = icmp eq i32 %239, 0
  br i1 %tobool.not.i.i.i.i, label %PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge, label %if.end.i.i7.i.i

PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge: ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %del_page_from_lru_list.exit

if.end.i.i7.i.i:                                  ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i.i.i = getelementptr %struct.page, ptr %191, i32 1, i32 1, i32 0, i32 2
  %240 = ptrtoint ptr %compound_nr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %compound_nr.i.i.i.i, align 4
  br label %del_page_from_lru_list.exit

del_page_from_lru_list.exit:                      ; preds = %if.end.i.i7.i.i, %PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge
  %retval.0.i.i.i.i = phi i32 [ %241, %if.end.i.i7.i.i ], [ 1, %PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge ]
  %shr.i.i.i.i = lshr i32 %216, 30
  %sub.i.i541 = sub i32 0, %retval.0.i.i.i.i
  %pgdat.i.i.i.i = getelementptr inbounds %struct.lruvec, ptr %call183, i32 0, i32 7
  %242 = ptrtoint ptr %pgdat.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %pgdat.i.i.i.i, align 4
  tail call void @__mod_lruvec_state(ptr noundef %call183, i32 noundef %retval.0.i.i.i, i32 noundef %sub.i.i541) #11
  %arrayidx.i.i.i = getelementptr [4 x %struct.zone], ptr %243, i32 0, i32 %shr.i.i.i.i
  %add1.i.i.i = add nsw i32 %retval.0.i.i.i, 1
  tail call void @__mod_zone_page_state(ptr noundef %arrayidx.i.i.i, i32 noundef %add1.i.i.i, i32 noundef %sub.i.i541) #11
  tail call void @mem_cgroup_update_lru_size(ptr noundef %call183, i32 noundef %retval.0.i.i.i, i32 noundef %shr.i.i.i.i, i32 noundef %sub.i.i541) #11
  %244 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %245)
  %cmp.i.not.i.i623 = icmp eq i32 %245, -1
  br i1 %cmp.i.not.i.i623, label %if.then.i.i624, label %page_pgdat.exit, !prof !435

if.then.i.i624:                                   ; preds = %del_page_from_lru_list.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.123) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #11, !srcloc !461
  unreachable

page_pgdat.exit:                                  ; preds = %del_page_from_lru_list.exit
  %246 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load volatile i32, ptr %85, align 4
  %and.i.i625 = and i32 %247, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i625)
  %tobool.not.i.i626 = icmp eq i32 %and.i.i625, 0
  br i1 %tobool.not.i.i626, label %if.end.i.i629, label %if.then.i.i628, !prof !434

if.then.i.i628:                                   ; preds = %page_pgdat.exit
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i627 = add i32 %247, -1
  br label %_compound_head.exit.i632

if.end.i.i629:                                    ; preds = %page_pgdat.exit
  call void @__sanitizer_cov_trace_pc() #13
  %248 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i632

_compound_head.exit.i632:                         ; preds = %if.end.i.i629, %if.then.i.i628
  %retval.0.i.i630 = phi i32 [ %sub.i.i627, %if.then.i.i628 ], [ %248, %if.end.i.i629 ]
  %249 = inttoptr i32 %retval.0.i.i630 to ptr
  %250 = getelementptr inbounds %struct.page, ptr %249, i32 0, i32 1
  %251 = ptrtoint ptr %250 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load volatile i32, ptr %250, align 4
  %and.i.i.i.i.i = and i32 %252, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i631 = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i631, label %page_is_file_lru.exit, label %if.then.i.i.i.i, !prof !434

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i632
  call void @__sanitizer_cov_trace_pc() #13
  %253 = inttoptr i32 %retval.0.i.i630 to ptr
  tail call void @dump_page(ptr noundef %253, ptr noundef nonnull @.str.133) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !459
  unreachable

page_is_file_lru.exit:                            ; preds = %_compound_head.exit.i632
  %254 = ptrtoint ptr %249 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load volatile i32, ptr %249, align 4
  %256 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load volatile i32, ptr %85, align 4
  %and.i.i633 = and i32 %257, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i633)
  %tobool.not.i634 = icmp eq i32 %and.i.i633, 0
  br i1 %tobool.not.i634, label %thp_nr_pages.exit, label %if.then.i635, !prof !434

if.then.i635:                                     ; preds = %page_is_file_lru.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.133) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/huge_mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 347, 0\0A.popsection", ""() #11, !srcloc !462
  unreachable

thp_nr_pages.exit:                                ; preds = %page_is_file_lru.exit
  call void @__sanitizer_cov_trace_pc() #13
  %258 = shl i32 %255, 12
  %259 = ashr i32 %258, 31
  %add224 = add nsw i32 %259, 8
  tail call void @mod_node_page_state(ptr noundef nonnull @contig_page_data, i32 noundef %add224, i32 noundef 1) #11
  br label %isolate_success

isolate_success:                                  ; preds = %thp_nr_pages.exit, %if.end142.isolate_success_crit_edge
  %locked.5 = phi ptr [ %locked.4, %thp_nr_pages.exit ], [ null, %if.end142.isolate_success_crit_edge ]
  %skip_updated.3.off0 = phi i1 [ %skip_updated.2.off0, %thp_nr_pages.exit ], [ %skip_updated.0.off01001, %if.end142.isolate_success_crit_edge ]
  %low_pfn.addr.4 = phi i32 [ %low_pfn.addr.3, %thp_nr_pages.exit ], [ %low_pfn.addr.01007, %if.end142.isolate_success_crit_edge ]
  %260 = ptrtoint ptr %migratepages255 to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %migratepages255, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %85, ptr noundef %migratepages255, ptr noundef %261) #11
  br i1 %call.i.i, label %if.end.i.i636, label %isolate_success.list_add.exit_crit_edge

isolate_success.list_add.exit_crit_edge:          ; preds = %isolate_success
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_add.exit

if.end.i.i636:                                    ; preds = %isolate_success
  call void @__sanitizer_cov_trace_pc() #13
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %261, i32 0, i32 1
  %262 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %262)
  store ptr %85, ptr %prev1.i.i, align 4
  %263 = ptrtoint ptr %85 to i32
  call void @__asan_store4_noabort(i32 %263)
  store ptr %261, ptr %85, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %85, i32 0, i32 1
  %264 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %264)
  store ptr %migratepages255, ptr %prev3.i.i, align 4
  %265 = ptrtoint ptr %migratepages255 to i32
  call void @__asan_store4_noabort(i32 %265)
  store volatile ptr %85, ptr %migratepages255, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i636, %isolate_success.list_add.exit_crit_edge
  %266 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %267)
  %cmp.i.not.i.i637 = icmp eq i32 %267, -1
  br i1 %cmp.i.not.i.i637, label %if.then.i.i638, label %PageHead.exit.i640, !prof !435

if.then.i.i638:                                   ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.124) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !448
  unreachable

PageHead.exit.i640:                               ; preds = %list_add.exit
  %268 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load volatile i32, ptr %add.ptr, align 4
  %270 = and i32 %269, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %270)
  %tobool.not.i639 = icmp eq i32 %270, 0
  br i1 %tobool.not.i639, label %PageHead.exit.i640.compound_nr.exit644_crit_edge, label %if.end.i642

PageHead.exit.i640.compound_nr.exit644_crit_edge: ; preds = %PageHead.exit.i640
  call void @__sanitizer_cov_trace_pc() #13
  br label %compound_nr.exit644

if.end.i642:                                      ; preds = %PageHead.exit.i640
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i641 = getelementptr %struct.page, ptr %add.ptr, i32 1, i32 1, i32 0, i32 2
  %271 = ptrtoint ptr %compound_nr.i641 to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %compound_nr.i641, align 4
  br label %compound_nr.exit644

compound_nr.exit644:                              ; preds = %if.end.i642, %PageHead.exit.i640.compound_nr.exit644_crit_edge
  %retval.0.i643 = phi i32 [ %272, %if.end.i642 ], [ 1, %PageHead.exit.i640.compound_nr.exit644_crit_edge ]
  %273 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %nr_migratepages, align 4
  %add229 = add i32 %274, %retval.0.i643
  store i32 %add229, ptr %nr_migratepages, align 4
  %275 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %276)
  %cmp.i.not.i.i645 = icmp eq i32 %276, -1
  br i1 %cmp.i.not.i.i645, label %if.then.i.i646, label %PageHead.exit.i648, !prof !435

if.then.i.i646:                                   ; preds = %compound_nr.exit644
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.124) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !448
  unreachable

PageHead.exit.i648:                               ; preds = %compound_nr.exit644
  %277 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load volatile i32, ptr %add.ptr, align 4
  %279 = and i32 %278, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %279)
  %tobool.not.i647 = icmp eq i32 %279, 0
  br i1 %tobool.not.i647, label %PageHead.exit.i648.compound_nr.exit652_crit_edge, label %if.end.i650

PageHead.exit.i648.compound_nr.exit652_crit_edge: ; preds = %PageHead.exit.i648
  call void @__sanitizer_cov_trace_pc() #13
  br label %compound_nr.exit652

if.end.i650:                                      ; preds = %PageHead.exit.i648
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i649 = getelementptr %struct.page, ptr %add.ptr, i32 1, i32 1, i32 0, i32 2
  %280 = ptrtoint ptr %compound_nr.i649 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %compound_nr.i649, align 4
  br label %compound_nr.exit652

compound_nr.exit652:                              ; preds = %if.end.i650, %PageHead.exit.i648.compound_nr.exit652_crit_edge
  %retval.0.i651 = phi i32 [ %281, %if.end.i650 ], [ 1, %PageHead.exit.i648.compound_nr.exit652_crit_edge ]
  %add231 = add i32 %retval.0.i651, %nr_isolated.0989
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %add229)
  %cmp233 = icmp ugt i32 %add229, 31
  br i1 %cmp233, label %land.lhs.true234, label %compound_nr.exit652.for.inc_crit_edge

compound_nr.exit652.for.inc_crit_edge:            ; preds = %compound_nr.exit652
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

land.lhs.true234:                                 ; preds = %compound_nr.exit652
  %282 = ptrtoint ptr %rescan to i32
  call void @__asan_load1_noabort(i32 %282)
  %283 = load i8, ptr %rescan, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %283)
  %tobool235.not = icmp eq i8 %283, 0
  br i1 %tobool235.not, label %land.lhs.true236, label %land.lhs.true234.for.inc_crit_edge

land.lhs.true234.for.inc_crit_edge:               ; preds = %land.lhs.true234
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

land.lhs.true236:                                 ; preds = %land.lhs.true234
  %284 = ptrtoint ptr %contended237 to i32
  call void @__asan_load1_noabort(i32 %284)
  %285 = load i8, ptr %contended237, align 2, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %285)
  %tobool238.not = icmp eq i8 %285, 0
  br i1 %tobool238.not, label %if.then239, label %land.lhs.true236.for.inc_crit_edge

land.lhs.true236.for.inc_crit_edge:               ; preds = %land.lhs.true236
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.then239:                                       ; preds = %land.lhs.true236
  call void @__sanitizer_cov_trace_pc() #13
  %inc240 = add i32 %low_pfn.addr.4, 1
  br label %for.end

isolate_fail_put:                                 ; preds = %SetPageLRU.exit, %TestClearPageLRU.exit.isolate_fail_put_crit_edge, %if.end174.isolate_fail_put_crit_edge
  %locked.7 = phi ptr [ %call183, %SetPageLRU.exit ], [ %locked.2, %TestClearPageLRU.exit.isolate_fail_put_crit_edge ], [ %locked.2, %if.end174.isolate_fail_put_crit_edge ]
  %skip_updated.5.off0 = phi i1 [ true, %SetPageLRU.exit ], [ %skip_updated.0.off01001, %TestClearPageLRU.exit.isolate_fail_put_crit_edge ], [ %skip_updated.0.off01001, %if.end174.isolate_fail_put_crit_edge ]
  %low_pfn.addr.6 = phi i32 [ %add212, %SetPageLRU.exit ], [ %low_pfn.addr.01007, %TestClearPageLRU.exit.isolate_fail_put_crit_edge ], [ %low_pfn.addr.01007, %if.end174.isolate_fail_put_crit_edge ]
  %tobool242.not = icmp eq ptr %locked.7, null
  br i1 %tobool242.not, label %isolate_fail_put.if.end244_crit_edge, label %if.then243

isolate_fail_put.if.end244_crit_edge:             ; preds = %isolate_fail_put
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end244

if.then243:                                       ; preds = %isolate_fail_put
  call void @__sanitizer_cov_trace_pc() #13
  %286 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %flags, align 4
  %lru_lock.i653 = getelementptr inbounds %struct.lruvec, ptr %locked.7, i32 0, i32 1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lru_lock.i653, i32 noundef %287) #11
  br label %if.end244

if.end244:                                        ; preds = %if.then243, %isolate_fail_put.if.end244_crit_edge
  %288 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load volatile i32, ptr %85, align 4
  %and.i.i654 = and i32 %289, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i654)
  %tobool.not.i.i655 = icmp eq i32 %and.i.i654, 0
  br i1 %tobool.not.i.i655, label %if.end.i.i658, label %if.then.i.i657, !prof !434

if.then.i.i657:                                   ; preds = %if.end244
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i656 = add i32 %289, -1
  br label %_compound_head.exit.i661

if.end.i.i658:                                    ; preds = %if.end244
  call void @__sanitizer_cov_trace_pc() #13
  %290 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i661

_compound_head.exit.i661:                         ; preds = %if.end.i.i658, %if.then.i.i657
  %retval.0.i.i659 = phi i32 [ %sub.i.i656, %if.then.i.i657 ], [ %290, %if.end.i.i658 ]
  %291 = inttoptr i32 %retval.0.i.i659 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %291, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #11
  %292 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %293)
  %cmp.i.i.i.i660 = icmp eq i32 %293, 0
  br i1 %cmp.i.i.i.i660, label %if.then.i.i.i.i662, label %do.end5.i.i.i.i, !prof !435

if.then.i.i.i.i662:                               ; preds = %_compound_head.exit.i661
  call void @__sanitizer_cov_trace_pc() #13
  %294 = inttoptr i32 %retval.0.i.i659 to ptr
  tail call void @dump_page(ptr noundef %294, ptr noundef nonnull @.str.137) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !463
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i661
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !464
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #11
  %295 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #11, !srcloc !465
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %295, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !466
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@isolate_migratepages_block, %if.then.i.i.i.i.i663)) #11
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i663], !srcloc !442

if.then.i.i.i.i.i663:                             ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %291, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #11
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i663, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.isolate_fail_crit_edge

folio_put_testzero.exit.i.i.isolate_fail_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_fail

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef %291) #11
  br label %isolate_fail

isolate_fail:                                     ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.isolate_fail_crit_edge, %get_page_unless_zero.exit.isolate_fail_crit_edge, %land.lhs.true159.isolate_fail_crit_edge, %page_mapcount.exit.isolate_fail_crit_edge, %if.end142.isolate_fail_crit_edge, %PageIsolated.exit.isolate_fail_crit_edge, %if.then127.isolate_fail_crit_edge, %compound_order.exit.thread, %compound_order.exit.isolate_fail_crit_edge
  %locked.9 = phi ptr [ %locked.2, %get_page_unless_zero.exit.isolate_fail_crit_edge ], [ %locked.2, %land.lhs.true159.isolate_fail_crit_edge ], [ %locked.2, %page_mapcount.exit.isolate_fail_crit_edge ], [ %locked.2, %PageIsolated.exit.isolate_fail_crit_edge ], [ null, %if.end142.isolate_fail_crit_edge ], [ %locked.2, %if.then127.isolate_fail_crit_edge ], [ %locked.2, %compound_order.exit.isolate_fail_crit_edge ], [ %locked.2, %compound_order.exit.thread ], [ null, %folio_put_testzero.exit.i.i.isolate_fail_crit_edge ], [ null, %if.then.i4.i ]
  %skip_updated.6.off0 = phi i1 [ %skip_updated.0.off01001, %get_page_unless_zero.exit.isolate_fail_crit_edge ], [ %skip_updated.0.off01001, %land.lhs.true159.isolate_fail_crit_edge ], [ %skip_updated.0.off01001, %page_mapcount.exit.isolate_fail_crit_edge ], [ %skip_updated.0.off01001, %PageIsolated.exit.isolate_fail_crit_edge ], [ %skip_updated.0.off01001, %if.end142.isolate_fail_crit_edge ], [ %skip_updated.0.off01001, %if.then127.isolate_fail_crit_edge ], [ %skip_updated.0.off01001, %compound_order.exit.isolate_fail_crit_edge ], [ %skip_updated.0.off01001, %compound_order.exit.thread ], [ %skip_updated.5.off0, %folio_put_testzero.exit.i.i.isolate_fail_crit_edge ], [ %skip_updated.5.off0, %if.then.i4.i ]
  %low_pfn.addr.7 = phi i32 [ %low_pfn.addr.01007, %get_page_unless_zero.exit.isolate_fail_crit_edge ], [ %low_pfn.addr.01007, %land.lhs.true159.isolate_fail_crit_edge ], [ %low_pfn.addr.01007, %page_mapcount.exit.isolate_fail_crit_edge ], [ %low_pfn.addr.01007, %PageIsolated.exit.isolate_fail_crit_edge ], [ %low_pfn.addr.01007, %if.end142.isolate_fail_crit_edge ], [ %low_pfn.addr.01007, %if.then127.isolate_fail_crit_edge ], [ %low_pfn.addr.01007, %compound_order.exit.isolate_fail_crit_edge ], [ %add122702, %compound_order.exit.thread ], [ %low_pfn.addr.6, %folio_put_testzero.exit.i.i.isolate_fail_crit_edge ], [ %low_pfn.addr.6, %if.then.i4.i ]
  br i1 %skip_on_failure.0.off0, label %if.end249, label %isolate_fail.for.inc_crit_edge

isolate_fail.for.inc_crit_edge:                   ; preds = %isolate_fail
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.end249:                                        ; preds = %isolate_fail
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_isolated.0989)
  %tobool250.not = icmp eq i32 %nr_isolated.0989, 0
  br i1 %tobool250.not, label %if.end249.if.end257_crit_edge, label %if.then251

if.end249.if.end257_crit_edge:                    ; preds = %if.end249
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end257

if.then251:                                       ; preds = %if.end249
  %tobool252.not = icmp eq ptr %locked.9, null
  br i1 %tobool252.not, label %if.then251.if.end254_crit_edge, label %if.then253

if.then251.if.end254_crit_edge:                   ; preds = %if.then251
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end254

if.then253:                                       ; preds = %if.then251
  call void @__sanitizer_cov_trace_pc() #13
  %296 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %flags, align 4
  %lru_lock.i664 = getelementptr inbounds %struct.lruvec, ptr %locked.9, i32 0, i32 1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lru_lock.i664, i32 noundef %297) #11
  br label %if.end254

if.end254:                                        ; preds = %if.then253, %if.then251.if.end254_crit_edge
  tail call void @putback_movable_pages(ptr noundef %migratepages255) #11
  %298 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_store4_noabort(i32 %298)
  store i32 0, ptr %nr_migratepages, align 4
  br label %if.end257

if.end257:                                        ; preds = %if.end254, %if.end249.if.end257_crit_edge
  %locked.11 = phi ptr [ null, %if.end254 ], [ %locked.9, %if.end249.if.end257_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %low_pfn.addr.7, i32 %next_skip_pfn.2)
  %cmp258 = icmp ult i32 %low_pfn.addr.7, %next_skip_pfn.2
  br i1 %cmp258, label %if.then259, label %if.end257.for.inc_crit_edge

if.end257.for.inc_crit_edge:                      ; preds = %if.end257
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.then259:                                       ; preds = %if.end257
  call void @__sanitizer_cov_trace_pc() #13
  %sub260 = add i32 %next_skip_pfn.2, -1
  %299 = ptrtoint ptr %order29 to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load i32, ptr %order29, align 4
  %shl262 = shl nuw i32 1, %300
  %add263 = add i32 %shl262, %next_skip_pfn.2
  br label %for.inc

for.inc:                                          ; preds = %if.then259, %if.end257.for.inc_crit_edge, %isolate_fail.for.inc_crit_edge, %land.lhs.true236.for.inc_crit_edge, %land.lhs.true234.for.inc_crit_edge, %compound_nr.exit652.for.inc_crit_edge, %if.then93
  %nr_isolated.2 = phi i32 [ %add231, %land.lhs.true234.for.inc_crit_edge ], [ %add231, %land.lhs.true236.for.inc_crit_edge ], [ %add231, %compound_nr.exit652.for.inc_crit_edge ], [ %nr_isolated.0989, %if.then93 ], [ %nr_isolated.0989, %isolate_fail.for.inc_crit_edge ], [ 0, %if.then259 ], [ 0, %if.end257.for.inc_crit_edge ]
  %locked.12 = phi ptr [ %locked.5, %land.lhs.true234.for.inc_crit_edge ], [ %locked.5, %land.lhs.true236.for.inc_crit_edge ], [ %locked.5, %compound_nr.exit652.for.inc_crit_edge ], [ %locked.2, %if.then93 ], [ %locked.9, %isolate_fail.for.inc_crit_edge ], [ %locked.11, %if.then259 ], [ %locked.11, %if.end257.for.inc_crit_edge ]
  %next_skip_pfn.4 = phi i32 [ %next_skip_pfn.2, %land.lhs.true234.for.inc_crit_edge ], [ %next_skip_pfn.2, %land.lhs.true236.for.inc_crit_edge ], [ %next_skip_pfn.2, %compound_nr.exit652.for.inc_crit_edge ], [ %next_skip_pfn.2, %if.then93 ], [ %next_skip_pfn.2, %isolate_fail.for.inc_crit_edge ], [ %add263, %if.then259 ], [ %next_skip_pfn.2, %if.end257.for.inc_crit_edge ]
  %skip_updated.7.off0 = phi i1 [ %skip_updated.3.off0, %land.lhs.true234.for.inc_crit_edge ], [ %skip_updated.3.off0, %land.lhs.true236.for.inc_crit_edge ], [ %skip_updated.3.off0, %compound_nr.exit652.for.inc_crit_edge ], [ %skip_updated.0.off01001, %if.then93 ], [ %skip_updated.6.off0, %isolate_fail.for.inc_crit_edge ], [ %skip_updated.6.off0, %if.then259 ], [ %skip_updated.6.off0, %if.end257.for.inc_crit_edge ]
  %low_pfn.addr.9 = phi i32 [ %low_pfn.addr.4, %land.lhs.true234.for.inc_crit_edge ], [ %low_pfn.addr.4, %land.lhs.true236.for.inc_crit_edge ], [ %low_pfn.addr.4, %compound_nr.exit652.for.inc_crit_edge ], [ %low_pfn.addr.1, %if.then93 ], [ %low_pfn.addr.7, %isolate_fail.for.inc_crit_edge ], [ %sub260, %if.then259 ], [ %low_pfn.addr.7, %if.end257.for.inc_crit_edge ]
  %inc268 = add i32 %low_pfn.addr.9, 1
  %cmp20 = icmp ult i32 %inc268, %end_pfn
  br i1 %cmp20, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.then239, %if.then24.for.end_crit_edge, %if.end19.for.end_crit_edge
  %nr_scanned.1 = phi i32 [ %inc, %if.then239 ], [ 0, %if.end19.for.end_crit_edge ], [ %inc, %for.inc.for.end_crit_edge ], [ %nr_scanned.0985, %if.then24.for.end_crit_edge ]
  %nr_isolated.3 = phi i32 [ %add231, %if.then239 ], [ 0, %if.end19.for.end_crit_edge ], [ %nr_isolated.2, %for.inc.for.end_crit_edge ], [ %nr_isolated.0989, %if.then24.for.end_crit_edge ]
  %locked.13 = phi ptr [ %locked.5, %if.then239 ], [ null, %if.end19.for.end_crit_edge ], [ %locked.12, %for.inc.for.end_crit_edge ], [ %locked.0996, %if.then24.for.end_crit_edge ]
  %valid_page.2 = phi ptr [ %valid_page.1, %if.then239 ], [ null, %if.end19.for.end_crit_edge ], [ %valid_page.1, %for.inc.for.end_crit_edge ], [ %valid_page.0998, %if.then24.for.end_crit_edge ]
  %skip_updated.8.off0 = phi i1 [ %skip_updated.3.off0, %if.then239 ], [ false, %if.end19.for.end_crit_edge ], [ %skip_updated.7.off0, %for.inc.for.end_crit_edge ], [ %skip_updated.0.off01001, %if.then24.for.end_crit_edge ]
  %low_pfn.addr.10 = phi i32 [ %inc240, %if.then239 ], [ %low_pfn, %if.end19.for.end_crit_edge ], [ %inc268, %for.inc.for.end_crit_edge ], [ %low_pfn.addr.01007, %if.then24.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %low_pfn.addr.10, i32 %end_pfn)
  %cmp269 = icmp ugt i32 %low_pfn.addr.10, %end_pfn
  br i1 %cmp269, label %if.then276, label %for.end.isolate_abort_crit_edge, !prof !435

for.end.isolate_abort_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_abort

if.then276:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_abort

isolate_abort:                                    ; preds = %if.then276, %for.end.isolate_abort_crit_edge, %if.end2.i.isolate_abort_crit_edge, %land.lhs.true60.isolate_abort_crit_edge
  %nr_scanned.2 = phi i32 [ %nr_scanned.1, %if.then276 ], [ %nr_scanned.1, %for.end.isolate_abort_crit_edge ], [ %inc, %land.lhs.true60.isolate_abort_crit_edge ], [ %inc, %if.end2.i.isolate_abort_crit_edge ]
  %nr_isolated.4 = phi i32 [ %nr_isolated.3, %if.then276 ], [ %nr_isolated.3, %for.end.isolate_abort_crit_edge ], [ %nr_isolated.0989, %land.lhs.true60.isolate_abort_crit_edge ], [ %nr_isolated.0989, %if.end2.i.isolate_abort_crit_edge ]
  %locked.14 = phi ptr [ %locked.13, %if.then276 ], [ %locked.13, %for.end.isolate_abort_crit_edge ], [ %call183, %if.end2.i.isolate_abort_crit_edge ], [ %locked.2, %land.lhs.true60.isolate_abort_crit_edge ]
  %page.0 = phi ptr [ null, %if.then276 ], [ null, %for.end.isolate_abort_crit_edge ], [ %add.ptr, %if.end2.i.isolate_abort_crit_edge ], [ null, %land.lhs.true60.isolate_abort_crit_edge ]
  %valid_page.3 = phi ptr [ %valid_page.2, %if.then276 ], [ %valid_page.2, %for.end.isolate_abort_crit_edge ], [ %valid_page.1, %if.end2.i.isolate_abort_crit_edge ], [ null, %land.lhs.true60.isolate_abort_crit_edge ]
  %skip_updated.9.off0 = phi i1 [ %skip_updated.8.off0, %if.then276 ], [ %skip_updated.8.off0, %for.end.isolate_abort_crit_edge ], [ true, %if.end2.i.isolate_abort_crit_edge ], [ %skip_updated.0.off01001, %land.lhs.true60.isolate_abort_crit_edge ]
  %low_pfn.addr.12 = phi i32 [ %end_pfn, %if.then276 ], [ %low_pfn.addr.10, %for.end.isolate_abort_crit_edge ], [ %low_pfn.addr.01007, %if.end2.i.isolate_abort_crit_edge ], [ %end_pfn, %land.lhs.true60.isolate_abort_crit_edge ]
  %tobool278.not = icmp eq ptr %locked.14, null
  br i1 %tobool278.not, label %isolate_abort.if.end280_crit_edge, label %if.then279

isolate_abort.if.end280_crit_edge:                ; preds = %isolate_abort
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end280

if.then279:                                       ; preds = %isolate_abort
  call void @__sanitizer_cov_trace_pc() #13
  %301 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %flags, align 4
  %lru_lock.i665 = getelementptr inbounds %struct.lruvec, ptr %locked.14, i32 0, i32 1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lru_lock.i665, i32 noundef %302) #11
  br label %if.end280

if.end280:                                        ; preds = %if.then279, %isolate_abort.if.end280_crit_edge
  %tobool281.not = icmp eq ptr %page.0, null
  br i1 %tobool281.not, label %if.end280.if.end283_crit_edge, label %if.then282

if.end280.if.end283_crit_edge:                    ; preds = %if.end280
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end283

if.then282:                                       ; preds = %if.end280
  %303 = getelementptr inbounds %struct.page, ptr %page.0, i32 0, i32 1
  %304 = ptrtoint ptr %303 to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load volatile i32, ptr %303, align 4
  %and.i.i542 = and i32 %305, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i542)
  %tobool.not.i.i543 = icmp eq i32 %and.i.i542, 0
  br i1 %tobool.not.i.i543, label %if.end.i.i546, label %if.then.i.i545, !prof !434

if.then.i.i545:                                   ; preds = %if.then282
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i544 = add i32 %305, -1
  br label %_compound_head.exit.i551

if.end.i.i546:                                    ; preds = %if.then282
  call void @__sanitizer_cov_trace_pc() #13
  %306 = ptrtoint ptr %page.0 to i32
  br label %_compound_head.exit.i551

_compound_head.exit.i551:                         ; preds = %if.end.i.i546, %if.then.i.i545
  %retval.0.i.i547 = phi i32 [ %sub.i.i544, %if.then.i.i545 ], [ %306, %if.end.i.i546 ]
  %307 = inttoptr i32 %retval.0.i.i547 to ptr
  %308 = ptrtoint ptr %307 to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load volatile i32, ptr %307, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %309)
  %cmp.i.not.i548 = icmp eq i32 %309, -1
  %310 = ptrtoint ptr %303 to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load volatile i32, ptr %303, align 4
  %and.i12.i549 = and i32 %311, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i549)
  %tobool.not.i13.i550 = icmp eq i32 %and.i12.i549, 0
  br i1 %cmp.i.not.i548, label %if.then.i552, label %do.end8.i558, !prof !435

if.then.i552:                                     ; preds = %_compound_head.exit.i551
  br i1 %tobool.not.i13.i550, label %if.end.i16.i555, label %if.then.i15.i554, !prof !434

if.then.i15.i554:                                 ; preds = %if.then.i552
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i14.i553 = add i32 %311, -1
  br label %_compound_head.exit18.i557

if.end.i16.i555:                                  ; preds = %if.then.i552
  call void @__sanitizer_cov_trace_pc() #13
  %312 = ptrtoint ptr %page.0 to i32
  br label %_compound_head.exit18.i557

_compound_head.exit18.i557:                       ; preds = %if.end.i16.i555, %if.then.i15.i554
  %retval.0.i17.i556 = phi i32 [ %sub.i14.i553, %if.then.i15.i554 ], [ %312, %if.end.i16.i555 ]
  %313 = inttoptr i32 %retval.0.i17.i556 to ptr
  tail call void @dump_page(ptr noundef %313, ptr noundef nonnull @.str.119) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #11, !srcloc !458
  unreachable

do.end8.i558:                                     ; preds = %_compound_head.exit.i551
  br i1 %tobool.not.i13.i550, label %if.end.i23.i561, label %if.then.i22.i560, !prof !434

if.then.i22.i560:                                 ; preds = %do.end8.i558
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i21.i559 = add i32 %311, -1
  br label %SetPageLRU.exit563

if.end.i23.i561:                                  ; preds = %do.end8.i558
  call void @__sanitizer_cov_trace_pc() #13
  %314 = ptrtoint ptr %page.0 to i32
  br label %SetPageLRU.exit563

SetPageLRU.exit563:                               ; preds = %if.end.i23.i561, %if.then.i22.i560
  %retval.0.i24.i562 = phi i32 [ %sub.i21.i559, %if.then.i22.i560 ], [ %314, %if.end.i23.i561 ]
  %315 = inttoptr i32 %retval.0.i24.i562 to ptr
  tail call void @_set_bit(i32 noundef 4, ptr noundef %315) #11
  %316 = ptrtoint ptr %303 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load volatile i32, ptr %303, align 4
  %and.i.i666 = and i32 %317, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i666)
  %tobool.not.i.i667 = icmp eq i32 %and.i.i666, 0
  br i1 %tobool.not.i.i667, label %if.end.i.i670, label %if.then.i.i669, !prof !434

if.then.i.i669:                                   ; preds = %SetPageLRU.exit563
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i668 = add i32 %317, -1
  br label %_compound_head.exit.i675

if.end.i.i670:                                    ; preds = %SetPageLRU.exit563
  call void @__sanitizer_cov_trace_pc() #13
  %318 = ptrtoint ptr %page.0 to i32
  br label %_compound_head.exit.i675

_compound_head.exit.i675:                         ; preds = %if.end.i.i670, %if.then.i.i669
  %retval.0.i.i671 = phi i32 [ %sub.i.i668, %if.then.i.i669 ], [ %318, %if.end.i.i670 ]
  %319 = inttoptr i32 %retval.0.i.i671 to ptr
  %_refcount.i.i.i.i.i672 = getelementptr inbounds %struct.page, ptr %319, i32 0, i32 3
  %call.i.i.i.i.i.i.i673 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i672, i32 noundef 4) #11
  %320 = ptrtoint ptr %_refcount.i.i.i.i.i672 to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load volatile i32, ptr %_refcount.i.i.i.i.i672, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %321)
  %cmp.i.i.i.i674 = icmp eq i32 %321, 0
  br i1 %cmp.i.i.i.i674, label %if.then.i.i.i.i676, label %do.end5.i.i.i.i680, !prof !435

if.then.i.i.i.i676:                               ; preds = %_compound_head.exit.i675
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %319, ptr noundef nonnull @.str.137) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !463
  unreachable

do.end5.i.i.i.i680:                               ; preds = %_compound_head.exit.i675
  %call.i.i.i10.i.i.i.i677 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i672, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !464
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i672, i32 1, i32 3, i32 1) #11
  %322 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i672, ptr %_refcount.i.i.i.i.i672, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i672) #11, !srcloc !465
  %asmresult.i.i.i.i.i.i.i.i.i.i678 = extractvalue { i32, i32 } %322, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !466
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i678)
  %cmp.i.i.i.i.i.i.i679 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i678, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@isolate_migratepages_block, %if.then.i.i.i.i.i682)) #11
          to label %folio_put_testzero.exit.i.i683 [label %if.then.i.i.i.i.i682], !srcloc !442

if.then.i.i.i.i.i682:                             ; preds = %do.end5.i.i.i.i680
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i.i681 = zext i1 %cmp.i.i.i.i.i.i.i679 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %319, i32 noundef -1, i32 noundef %conv.i.i.i.i.i681) #11
  br label %folio_put_testzero.exit.i.i683

folio_put_testzero.exit.i.i683:                   ; preds = %if.then.i.i.i.i.i682, %do.end5.i.i.i.i680
  br i1 %cmp.i.i.i.i.i.i.i679, label %if.then.i4.i684, label %folio_put_testzero.exit.i.i683.if.end283_crit_edge

folio_put_testzero.exit.i.i683.if.end283_crit_edge: ; preds = %folio_put_testzero.exit.i.i683
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end283

if.then.i4.i684:                                  ; preds = %folio_put_testzero.exit.i.i683
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef %319) #11
  br label %if.end283

if.end283:                                        ; preds = %if.then.i4.i684, %folio_put_testzero.exit.i.i683.if.end283_crit_edge, %if.end280.if.end283_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %low_pfn.addr.12, i32 %end_pfn)
  %cmp284 = icmp eq i32 %low_pfn.addr.12, %end_pfn
  br i1 %cmp284, label %land.lhs.true285, label %if.end283.if.end300_crit_edge

if.end283.if.end300_crit_edge:                    ; preds = %if.end283
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end300

land.lhs.true285:                                 ; preds = %if.end283
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_isolated.4)
  %tobool286.not = icmp eq i32 %nr_isolated.4, 0
  br i1 %tobool286.not, label %land.lhs.true285.if.then289_crit_edge, label %lor.lhs.false

land.lhs.true285.if.then289_crit_edge:            ; preds = %land.lhs.true285
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then289

lor.lhs.false:                                    ; preds = %land.lhs.true285
  %rescan287 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 25
  %323 = ptrtoint ptr %rescan287 to i32
  call void @__asan_load1_noabort(i32 %323)
  %324 = load i8, ptr %rescan287, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %324)
  %tobool288.not = icmp eq i8 %324, 0
  br i1 %tobool288.not, label %lor.lhs.false.if.end300_crit_edge, label %lor.lhs.false.if.then289_crit_edge

lor.lhs.false.if.then289_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then289

lor.lhs.false.if.end300_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end300

if.then289:                                       ; preds = %lor.lhs.false.if.then289_crit_edge, %land.lhs.true285.if.then289_crit_edge
  %tobool290.not = icmp eq ptr %valid_page.3, null
  %brmerge = select i1 %tobool290.not, i1 true, i1 %skip_updated.9.off0
  br i1 %brmerge, label %if.then289.if.end299_crit_edge, label %if.then293

if.then289.if.end299_crit_edge:                   ; preds = %if.then289
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end299

if.then293:                                       ; preds = %if.then289
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %325 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast294 = ptrtoint ptr %valid_page.3 to i32
  %sub.ptr.rhs.cast295 = ptrtoint ptr %325 to i32
  %sub.ptr.sub296 = sub i32 %sub.ptr.lhs.cast294, %sub.ptr.rhs.cast295
  %sub.ptr.div297 = sdiv exact i32 %sub.ptr.sub296, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %326 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add298 = add i32 %sub.ptr.div297, %326
  tail call void @set_pfnblock_flags_mask(ptr noundef nonnull %valid_page.3, i32 noundef 8, i32 noundef %add298, i32 noundef 8) #11
  br label %if.end299

if.end299:                                        ; preds = %if.then293, %if.then289.if.end299_crit_edge
  %add2.i = add i32 %end_pfn, 2048
  %and.i686 = and i32 %add2.i, -2048
  %no_set_skip_hint.i687 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 19
  %327 = ptrtoint ptr %no_set_skip_hint.i687 to i32
  call void @__asan_load1_noabort(i32 %327)
  %328 = load i8, ptr %no_set_skip_hint.i687, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %328)
  %tobool.not.i688 = icmp eq i8 %328, 0
  br i1 %tobool.not.i688, label %if.end.i690, label %if.end299.if.end300_crit_edge

if.end299.if.end300_crit_edge:                    ; preds = %if.end299
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end300

if.end.i690:                                      ; preds = %if.end299
  %329 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load ptr, ptr %zone, align 4
  %compact_cached_migrate_pfn.i = getelementptr inbounds %struct.zone, ptr %330, i32 0, i32 27
  %331 = ptrtoint ptr %compact_cached_migrate_pfn.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load i32, ptr %compact_cached_migrate_pfn.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i686, i32 %332)
  %cmp.i689 = icmp ugt i32 %and.i686, %332
  br i1 %cmp.i689, label %if.then3.i, label %if.end.i690.if.end6.i_crit_edge

if.end.i690.if.end6.i_crit_edge:                  ; preds = %if.end.i690
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end6.i

if.then3.i:                                       ; preds = %if.end.i690
  call void @__sanitizer_cov_trace_pc() #13
  %333 = ptrtoint ptr %compact_cached_migrate_pfn.i to i32
  call void @__asan_store4_noabort(i32 %333)
  store i32 %and.i686, ptr %compact_cached_migrate_pfn.i, align 8
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then3.i, %if.end.i690.if.end6.i_crit_edge
  %334 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %335)
  %cmp7.not.i = icmp eq i32 %335, 0
  br i1 %cmp7.not.i, label %if.end6.i.if.end300_crit_edge, label %land.lhs.true.i691

if.end6.i.if.end300_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end300

land.lhs.true.i691:                               ; preds = %if.end6.i
  %arrayidx9.i = getelementptr %struct.zone, ptr %330, i32 0, i32 27, i32 1
  %336 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load i32, ptr %arrayidx9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i686, i32 %337)
  %cmp10.i = icmp ugt i32 %and.i686, %337
  br i1 %cmp10.i, label %if.then11.i, label %land.lhs.true.i691.if.end300_crit_edge

land.lhs.true.i691.if.end300_crit_edge:           ; preds = %land.lhs.true.i691
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end300

if.then11.i:                                      ; preds = %land.lhs.true.i691
  call void @__sanitizer_cov_trace_pc() #13
  %338 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_store4_noabort(i32 %338)
  store i32 %and.i686, ptr %arrayidx9.i, align 4
  br label %if.end300

if.end300:                                        ; preds = %if.then11.i, %land.lhs.true.i691.if.end300_crit_edge, %if.end6.i.if.end300_crit_edge, %if.end299.if.end300_crit_edge, %lor.lhs.false.if.end300_crit_edge, %if.end283.if.end300_crit_edge
  tail call fastcc void @trace_mm_compaction_isolate_migratepages(i32 noundef %low_pfn, i32 noundef %low_pfn.addr.12, i32 noundef %nr_scanned.2, i32 noundef %nr_isolated.4)
  br label %fatal_pending

fatal_pending:                                    ; preds = %if.end300, %if.then48
  %nr_scanned.3 = phi i32 [ %nr_scanned.2, %if.end300 ], [ %nr_scanned.0985, %if.then48 ]
  %nr_isolated.5 = phi i32 [ %nr_isolated.4, %if.end300 ], [ %nr_isolated.0989, %if.then48 ]
  %ret.7 = phi i32 [ 0, %if.end300 ], [ -4, %if.then48 ]
  %low_pfn.addr.13 = phi i32 [ %low_pfn.addr.12, %if.end300 ], [ %low_pfn.addr.01007, %if.then48 ]
  %total_migrate_scanned = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 8
  %339 = ptrtoint ptr %total_migrate_scanned to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load i32, ptr %total_migrate_scanned, align 4
  %add301 = add i32 %340, %nr_scanned.3
  store i32 %add301, ptr %total_migrate_scanned, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_isolated.5)
  %tobool302.not = icmp eq i32 %nr_isolated.5, 0
  br i1 %tobool302.not, label %fatal_pending.if.end304_crit_edge, label %if.then303

fatal_pending.if.end304_crit_edge:                ; preds = %fatal_pending
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end304

if.then303:                                       ; preds = %fatal_pending
  %341 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !449
  %342 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i692 = and i32 %342, -16384
  %343 = inttoptr i32 %and.i.i.i692 to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %343, i32 0, i32 3
  %344 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %cpu.i.i, align 4
  %arrayidx13.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %345
  %346 = ptrtoint ptr %arrayidx13.i.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load i32, ptr %arrayidx13.i.i, align 4
  %add.i.i = add i32 %347, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 53) to i32)
  %348 = inttoptr i32 %add.i.i to ptr
  %349 = ptrtoint ptr %348 to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load i32, ptr %348, align 4
  %add14.i.i = add i32 %350, %nr_isolated.5
  store i32 %add14.i.i, ptr %348, align 4
  %351 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !450
  %and.i.i.i.i = and i32 %351, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i693 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i693, label %if.then.i.i694, label %if.then303.count_compact_events.exit_crit_edge, !prof !435

if.then303.count_compact_events.exit_crit_edge:   ; preds = %if.then303
  call void @__sanitizer_cov_trace_pc() #13
  br label %count_compact_events.exit

if.then.i.i694:                                   ; preds = %if.then303
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @warn_bogus_irq_restore() #11
  br label %count_compact_events.exit

count_compact_events.exit:                        ; preds = %if.then.i.i694, %if.then303.count_compact_events.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %341) #11, !srcloc !451
  br label %if.end304

if.end304:                                        ; preds = %count_compact_events.exit, %fatal_pending.if.end304_crit_edge
  %352 = ptrtoint ptr %migrate_pfn to i32
  call void @__asan_store4_noabort(i32 %352)
  store i32 %low_pfn.addr.13, ptr %migrate_pfn, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end304, %fatal_signal_pending.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %while.body.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.7, %if.end304 ], [ -4, %fatal_signal_pending.exit.cleanup_crit_edge ], [ -11, %if.end.cleanup_crit_edge ], [ -11, %while.body.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags) #11
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @compaction_suitable(ptr noundef %zone, i32 noundef %order, i32 noundef %alloc_flags, i32 noundef %highest_zoneidx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_stat.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 37
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %vm_stat.i, i32 noundef 4) #11
  %0 = ptrtoint ptr %vm_stat.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %vm_stat.i, align 4
  %2 = tail call i32 @llvm.smax.i32(i32 %1, i32 0) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %order)
  %cmp.i.i = icmp eq i32 %order, -1
  br i1 %cmp.i.i, label %entry.if.end8.thread_crit_edge, label %if.end.i

entry.if.end8.thread_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end8.thread

if.end.i:                                         ; preds = %entry
  %and.i = and i32 %alloc_flags, 3
  %arrayidx.i = getelementptr [3 x i32], ptr %zone, i32 0, i32 %and.i
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx.i, align 4
  %watermark_boost.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 1
  %5 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %watermark_boost.i, align 4
  %add.i = add i32 %6, %4
  %call1.i = tail call zeroext i1 @zone_watermark_ok(ptr noundef %zone, i32 noundef %order, i32 noundef %add.i, i32 noundef %highest_zoneidx, i32 noundef %alloc_flags) #11
  br i1 %call1.i, label %if.end.i.if.end8.thread_crit_edge, label %if.end3.i

if.end.i.if.end8.thread_crit_edge:                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end8.thread

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %order)
  %cmp.i = icmp sgt i32 %order, 3
  %arrayidx5.i = getelementptr [3 x i32], ptr %zone, i32 0, i32 1
  %spec.select = select i1 %cmp.i, ptr %arrayidx5.i, ptr %zone
  %7 = ptrtoint ptr %spec.select to i32
  call void @__asan_load4_noabort(i32 %7)
  %.sink31.i = load i32, ptr %spec.select, align 4
  %8 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %watermark_boost.i, align 4
  %shl.i.i = shl i32 2, %order
  %add11.i = add i32 %.sink31.i, %shl.i.i
  %add13.i = add i32 %add11.i, %9
  %call14.i = tail call zeroext i1 @__zone_watermark_ok(ptr noundef %zone, i32 noundef 0, i32 noundef %add13.i, i32 noundef %highest_zoneidx, i32 noundef 128, i32 noundef %2) #11
  %10 = and i1 %call14.i, %cmp.i
  %.mux = select i1 %call14.i, i32 4, i32 1
  br i1 %10, label %if.then, label %if.end3.i.if.end8.thread_crit_edge

if.end3.i.if.end8.thread_crit_edge:               ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end8.thread

if.then:                                          ; preds = %if.end3.i
  %call3 = tail call i32 @fragmentation_index(ptr noundef %zone, i32 noundef %order) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call3)
  %cmp4 = icmp sgt i32 %call3, -1
  br i1 %cmp4, label %land.lhs.true5, label %if.then.if.end8.thread_crit_edge

if.then.if.end8.thread_crit_edge:                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end8.thread

land.lhs.true5:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  %11 = load i32, ptr @sysctl_extfrag_threshold, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call3, i32 %11)
  %cmp6.not = icmp sgt i32 %call3, %11
  %spec.select28 = select i1 %cmp6.not, i32 4, i32 0
  %spec.select29 = select i1 %cmp6.not, i32 4, i32 1
  br label %if.end8.thread

if.end8.thread:                                   ; preds = %land.lhs.true5, %if.then.if.end8.thread_crit_edge, %if.end3.i.if.end8.thread_crit_edge, %if.end.i.if.end8.thread_crit_edge, %entry.if.end8.thread_crit_edge
  %ret.0.ph.sink = phi i32 [ %.mux, %if.end3.i.if.end8.thread_crit_edge ], [ 8, %if.end.i.if.end8.thread_crit_edge ], [ 4, %if.then.if.end8.thread_crit_edge ], [ 4, %entry.if.end8.thread_crit_edge ], [ %spec.select28, %land.lhs.true5 ]
  %12 = phi i32 [ %.mux, %if.end3.i.if.end8.thread_crit_edge ], [ 8, %if.end.i.if.end8.thread_crit_edge ], [ 4, %if.then.if.end8.thread_crit_edge ], [ 4, %entry.if.end8.thread_crit_edge ], [ %spec.select29, %land.lhs.true5 ]
  tail call fastcc void @trace_mm_compaction_suitable(ptr noundef %zone, i32 noundef %order, i32 noundef %ret.0.ph.sink)
  ret i32 %12
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fragmentation_index(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_suitable(ptr noundef %zone, i32 noundef %order, i32 noundef %ret) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_suitable, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_suitable, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !467
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_suitable, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %zone, i32 noundef %order, i32 noundef %ret) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !468
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !468
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_suitable, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_suitable.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_suitable.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 226, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @compaction_zonelist_suitable(ptr nocapture noundef readonly %ac, i32 noundef %order, i32 noundef %alloc_flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ac, align 4
  %highest_zoneidx = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 4
  %2 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %highest_zoneidx, align 4
  %nodemask = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 1
  %4 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %entry.if.end.i.i_crit_edge, !prof !434

entry.if.end.i.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %entry
  %zone_idx.i.i.i = getelementptr inbounds %struct.zoneref, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %zone_idx.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %3)
  %cmp.not.i.i = icmp ugt i32 %7, %3
  br i1 %cmp.not.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, label %land.rhs.i.i.first_zones_zonelist.exit_crit_edge, !prof !435

land.rhs.i.i.first_zones_zonelist.exit_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %first_zones_zonelist.exit

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.rhs.i.i.if.end.i.i_crit_edge, %entry.if.end.i.i_crit_edge
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %1, i32 noundef %3, ptr noundef %5) #11
  br label %first_zones_zonelist.exit

first_zones_zonelist.exit:                        ; preds = %if.end.i.i, %land.rhs.i.i.first_zones_zonelist.exit_crit_edge
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ %1, %land.rhs.i.i.first_zones_zonelist.exit_crit_edge ]
  %8 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %zone.033 = load ptr, ptr %retval.0.i.i, align 4
  %tobool.not34 = icmp eq ptr %zone.033, null
  br i1 %tobool.not34, label %first_zones_zonelist.exit.cleanup11_crit_edge, label %for.body.lr.ph

first_zones_zonelist.exit.cleanup11_crit_edge:    ; preds = %first_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup11

for.body.lr.ph:                                   ; preds = %first_zones_zonelist.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %order)
  %cmp.i.i = icmp eq i32 %order, -1
  %and.i = and i32 %alloc_flags, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %order)
  %cmp.i28 = icmp sgt i32 %order, 3
  %shl.i.i = shl i32 2, %order
  br label %for.body

for.body:                                         ; preds = %next_zones_zonelist.exit.for.body_crit_edge, %for.body.lr.ph
  %zone.036 = phi ptr [ %zone.033, %for.body.lr.ph ], [ %zone.0, %next_zones_zonelist.exit.for.body_crit_edge ]
  %z.035 = phi ptr [ %retval.0.i.i, %for.body.lr.ph ], [ %retval.0.i, %next_zones_zonelist.exit.for.body_crit_edge ]
  %call2 = tail call i32 @zone_reclaimable_pages(ptr noundef nonnull %zone.036) #11
  %div = udiv i32 %call2, %order
  %vm_stat.i = getelementptr inbounds %struct.zone, ptr %zone.036, i32 0, i32 37
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %vm_stat.i, i32 noundef 4) #11
  %9 = ptrtoint ptr %vm_stat.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %vm_stat.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %call11.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #14
  call void @__sanitizer_cov_trace_cmp4(i32 %call11.i, i32 %11)
  %cmp2.i = icmp ult i32 %call11.i, %11
  br i1 %cmp2.i, label %do.body.lr.ph.i, label %for.body.zone_page_state_snapshot.exit_crit_edge

for.body.zone_page_state_snapshot.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %zone_page_state_snapshot.exit

do.body.lr.ph.i:                                  ; preds = %for.body
  %per_cpu_zonestats.i = getelementptr inbounds %struct.zone, ptr %zone.036, i32 0, i32 6
  %12 = ptrtoint ptr %per_cpu_zonestats.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %per_cpu_zonestats.i, align 4
  %14 = ptrtoint ptr %13 to i32
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body.lr.ph.i
  %call14.i = phi i32 [ %call11.i, %do.body.lr.ph.i ], [ %call1.i, %do.body.i.do.body.i_crit_edge ]
  %x.03.i = phi i32 [ %10, %do.body.lr.ph.i ], [ %add5.i, %do.body.i.do.body.i_crit_edge ]
  %arrayidx3.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call14.i
  %15 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx3.i, align 4
  %add.i = add i32 %16, %14
  %17 = inttoptr i32 %add.i to ptr
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %17, align 1
  %conv.i = sext i8 %19 to i32
  %add5.i = add i32 %x.03.i, %conv.i
  %call1.i = tail call i32 @cpumask_next(i32 noundef %call14.i, ptr noundef nonnull @__cpu_online_mask) #14
  %cmp.i = icmp ult i32 %call1.i, %11
  br i1 %cmp.i, label %do.body.i.do.body.i_crit_edge, label %do.body.i.zone_page_state_snapshot.exit_crit_edge

do.body.i.zone_page_state_snapshot.exit_crit_edge: ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %zone_page_state_snapshot.exit

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body.i

zone_page_state_snapshot.exit:                    ; preds = %do.body.i.zone_page_state_snapshot.exit_crit_edge, %for.body.zone_page_state_snapshot.exit_crit_edge
  %x.0.lcssa.i = phi i32 [ %10, %for.body.zone_page_state_snapshot.exit_crit_edge ], [ %add5.i, %do.body.i.zone_page_state_snapshot.exit_crit_edge ]
  %20 = tail call i32 @llvm.smax.i32(i32 %x.0.lcssa.i, i32 0) #11
  %add = add i32 %20, %div
  %21 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %highest_zoneidx, align 4
  br i1 %cmp.i.i, label %zone_page_state_snapshot.exit.cleanup11_crit_edge, label %if.end.i27

zone_page_state_snapshot.exit.cleanup11_crit_edge: ; preds = %zone_page_state_snapshot.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup11

if.end.i27:                                       ; preds = %zone_page_state_snapshot.exit
  %arrayidx.i = getelementptr [3 x i32], ptr %zone.036, i32 0, i32 %and.i
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx.i, align 4
  %watermark_boost.i = getelementptr inbounds %struct.zone, ptr %zone.036, i32 0, i32 1
  %25 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %watermark_boost.i, align 4
  %add.i25 = add i32 %26, %24
  %call1.i26 = tail call zeroext i1 @zone_watermark_ok(ptr noundef nonnull %zone.036, i32 noundef %order, i32 noundef %add.i25, i32 noundef %22, i32 noundef %alloc_flags) #11
  br i1 %call1.i26, label %if.end.i27.cleanup11_crit_edge, label %if.end3.i

if.end.i27.cleanup11_crit_edge:                   ; preds = %if.end.i27
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup11

if.end3.i:                                        ; preds = %if.end.i27
  %arrayidx5.i = getelementptr [3 x i32], ptr %zone.036, i32 0, i32 1
  %spec.select = select i1 %cmp.i28, ptr %arrayidx5.i, ptr %zone.036
  %27 = ptrtoint ptr %spec.select to i32
  call void @__asan_load4_noabort(i32 %27)
  %.sink31.i = load i32, ptr %spec.select, align 4
  %28 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %watermark_boost.i, align 4
  %add11.i = add i32 %.sink31.i, %shl.i.i
  %add13.i = add i32 %add11.i, %29
  %call14.i29 = tail call zeroext i1 @__zone_watermark_ok(ptr noundef nonnull %zone.036, i32 noundef 0, i32 noundef %add13.i, i32 noundef %22, i32 noundef 128, i32 noundef %add) #11
  br i1 %call14.i29, label %if.end3.i.cleanup11_crit_edge, label %for.inc

if.end3.i.cleanup11_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup11

for.inc:                                          ; preds = %if.end3.i
  %incdec.ptr = getelementptr %struct.zoneref, ptr %z.035, i32 1
  %30 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %highest_zoneidx, align 4
  %32 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %nodemask, align 4
  %tobool.not.i = icmp eq ptr %33, null
  br i1 %tobool.not.i, label %land.rhs.i, label %for.inc.if.end.i_crit_edge, !prof !434

for.inc.if.end.i_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i

land.rhs.i:                                       ; preds = %for.inc
  %zone_idx.i.i = getelementptr %struct.zoneref, ptr %z.035, i32 1, i32 1
  %34 = ptrtoint ptr %zone_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %zone_idx.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %31)
  %cmp.not.i = icmp ugt i32 %35, %31
  br i1 %cmp.not.i, label %land.rhs.i.if.end.i_crit_edge, label %land.rhs.i.next_zones_zonelist.exit_crit_edge, !prof !435

land.rhs.i.next_zones_zonelist.exit_crit_edge:    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %next_zones_zonelist.exit

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i

if.end.i:                                         ; preds = %land.rhs.i.if.end.i_crit_edge, %for.inc.if.end.i_crit_edge
  %call3.i = tail call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr, i32 noundef %31, ptr noundef %33) #11
  br label %next_zones_zonelist.exit

next_zones_zonelist.exit:                         ; preds = %if.end.i, %land.rhs.i.next_zones_zonelist.exit_crit_edge
  %retval.0.i = phi ptr [ %call3.i, %if.end.i ], [ %incdec.ptr, %land.rhs.i.next_zones_zonelist.exit_crit_edge ]
  %36 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %zone.0 = load ptr, ptr %retval.0.i, align 4
  %tobool.not = icmp eq ptr %zone.0, null
  br i1 %tobool.not, label %next_zones_zonelist.exit.cleanup11_crit_edge, label %next_zones_zonelist.exit.for.body_crit_edge

next_zones_zonelist.exit.for.body_crit_edge:      ; preds = %next_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

next_zones_zonelist.exit.cleanup11_crit_edge:     ; preds = %next_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup11

cleanup11:                                        ; preds = %next_zones_zonelist.exit.cleanup11_crit_edge, %if.end3.i.cleanup11_crit_edge, %if.end.i27.cleanup11_crit_edge, %zone_page_state_snapshot.exit.cleanup11_crit_edge, %first_zones_zonelist.exit.cleanup11_crit_edge
  %tobool.not.lcssa = phi i1 [ false, %first_zones_zonelist.exit.cleanup11_crit_edge ], [ true, %if.end3.i.cleanup11_crit_edge ], [ true, %if.end.i27.cleanup11_crit_edge ], [ true, %zone_page_state_snapshot.exit.cleanup11_crit_edge ], [ false, %next_zones_zonelist.exit.cleanup11_crit_edge ]
  ret i1 %tobool.not.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @zone_reclaimable_pages(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @try_to_compact_pages(i32 noundef %gfp_mask, i32 noundef %order, i32 noundef %alloc_flags, ptr nocapture noundef readonly %ac, i32 noundef %prio, ptr nocapture noundef writeonly %capture) local_unnamed_addr #0 align 64 {
entry:
  %cc.i = alloca %struct.compact_control, align 8
  %capc.i = alloca %struct.capture_control, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %gfp_mask, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup37_crit_edge, label %if.end

entry.cleanup37_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup37

if.end:                                           ; preds = %entry
  tail call fastcc void @trace_mm_compaction_try_to_compact_pages(i32 noundef %order, i32 noundef %gfp_mask, i32 noundef %prio)
  %0 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ac, align 4
  %highest_zoneidx = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 4
  %2 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %highest_zoneidx, align 4
  %nodemask = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 1
  %4 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end.if.end.i.i_crit_edge, !prof !434

if.end.if.end.i.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %if.end
  %zone_idx.i.i.i = getelementptr inbounds %struct.zoneref, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %zone_idx.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %3)
  %cmp.not.i.i = icmp ugt i32 %7, %3
  br i1 %cmp.not.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, label %land.rhs.i.i.first_zones_zonelist.exit_crit_edge, !prof !435

land.rhs.i.i.first_zones_zonelist.exit_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %first_zones_zonelist.exit

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.rhs.i.i.if.end.i.i_crit_edge, %if.end.if.end.i.i_crit_edge
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %1, i32 noundef %3, ptr noundef %5) #11
  br label %first_zones_zonelist.exit

first_zones_zonelist.exit:                        ; preds = %if.end.i.i, %land.rhs.i.i.first_zones_zonelist.exit_crit_edge
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ %1, %land.rhs.i.i.first_zones_zonelist.exit_crit_edge ]
  %8 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %zone.096 = load ptr, ptr %retval.0.i.i, align 4
  %tobool2.not97 = icmp eq ptr %zone.096, null
  br i1 %tobool2.not97, label %first_zones_zonelist.exit.cleanup37_crit_edge, label %for.body.lr.ph

first_zones_zonelist.exit.cleanup37_crit_edge:    ; preds = %first_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup37

for.body.lr.ph:                                   ; preds = %first_zones_zonelist.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %prio)
  %cmp.not = icmp eq i32 %prio, 0
  %9 = getelementptr inbounds i8, ptr %cc.i, i32 80
  %zone1.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 7
  %total_migrate_scanned.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 8
  %total_free_scanned.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 9
  %fast_search_fail.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 10
  %search_order.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 11
  %conv.i = trunc i32 %order to i16
  %gfp_mask2.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 12
  %order3.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 13
  %migratetype.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 14
  %alloc_flags4.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 15
  %highest_zoneidx5.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 16
  %mode.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %prio)
  %cmp.i74 = icmp ne i32 %prio, 2
  %cond.i = zext i1 %cmp.i74 to i32
  %ignore_skip_hint.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 18
  %frombool.i = zext i1 %cmp.not to i8
  %no_set_skip_hint.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 19
  %ignore_block_suitable.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 20
  %direct_compaction.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 21
  %whole_zone.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 23
  %10 = getelementptr inbounds %struct.capture_control, ptr %capc.i, i32 0, i32 1
  %migratepages.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %prio)
  %cond = icmp eq i32 %prio, 2
  br label %for.body

for.body:                                         ; preds = %next_zones_zonelist.exit.for.body_crit_edge, %for.body.lr.ph
  %zone.0101 = phi ptr [ %zone.096, %for.body.lr.ph ], [ %zone.0, %next_zones_zonelist.exit.for.body_crit_edge ]
  %z.0100 = phi ptr [ %retval.0.i.i, %for.body.lr.ph ], [ %retval.0.i, %next_zones_zonelist.exit.for.body_crit_edge ]
  %rc.098 = phi i32 [ 1, %for.body.lr.ph ], [ %rc.1, %next_zones_zonelist.exit.for.body_crit_edge ]
  br i1 %cmp.not, label %for.body.if.end6_crit_edge, label %land.lhs.true

for.body.if.end6_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end6

land.lhs.true:                                    ; preds = %for.body
  %compact_defer_shift.i = getelementptr inbounds %struct.zone, ptr %zone.0101, i32 0, i32 31
  %11 = ptrtoint ptr %compact_defer_shift.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %compact_defer_shift.i, align 4
  %shl.i = shl nuw i32 1, %12
  %compact_order_failed.i = getelementptr inbounds %struct.zone, ptr %zone.0101, i32 0, i32 32
  %13 = ptrtoint ptr %compact_order_failed.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %compact_order_failed.i, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %order)
  %cmp.i = icmp sgt i32 %14, %order
  br i1 %cmp.i, label %land.lhs.true.if.end6_crit_edge, label %if.end.i72

land.lhs.true.if.end6_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end6

if.end.i72:                                       ; preds = %land.lhs.true
  %compact_considered.i = getelementptr inbounds %struct.zone, ptr %zone.0101, i32 0, i32 30
  %15 = ptrtoint ptr %compact_considered.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %compact_considered.i, align 8
  %inc.i = add i32 %16, 1
  store i32 %inc.i, ptr %compact_considered.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %shl.i)
  %cmp1.not.i = icmp ult i32 %inc.i, %shl.i
  br i1 %cmp1.not.i, label %if.then4, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i72
  call void @__sanitizer_cov_trace_pc() #13
  %17 = ptrtoint ptr %compact_considered.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %shl.i, ptr %compact_considered.i, align 8
  br label %if.end6

if.then4:                                         ; preds = %if.end.i72
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @trace_mm_compaction_deferred(ptr noundef nonnull %zone.0101, i32 noundef %order) #11
  %18 = call i32 @llvm.umax.i32(i32 %rc.098, i32 2)
  br label %for.inc

if.end6:                                          ; preds = %if.then2.i, %land.lhs.true.if.end6_crit_edge, %for.body.if.end6_crit_edge
  %19 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %highest_zoneidx, align 4
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %cc.i) #11
  %21 = ptrtoint ptr %9 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 71776119077994495, ptr %9, align 8, !annotation !436
  %22 = call ptr @memset(ptr %cc.i, i32 0, i32 36)
  %23 = ptrtoint ptr %zone1.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %zone.0101, ptr %zone1.i, align 4
  %24 = ptrtoint ptr %total_migrate_scanned.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %total_migrate_scanned.i, align 8
  %25 = ptrtoint ptr %total_free_scanned.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %total_free_scanned.i, align 4
  %26 = ptrtoint ptr %fast_search_fail.i to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 0, ptr %fast_search_fail.i, align 8
  %27 = ptrtoint ptr %search_order.i to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %conv.i, ptr %search_order.i, align 2
  %28 = ptrtoint ptr %gfp_mask2.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gfp_mask, ptr %gfp_mask2.i, align 4
  %29 = ptrtoint ptr %order3.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %order, ptr %order3.i, align 8
  %30 = ptrtoint ptr %migratetype.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %migratetype.i, align 4
  %31 = ptrtoint ptr %alloc_flags4.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %alloc_flags, ptr %alloc_flags4.i, align 8
  %32 = ptrtoint ptr %highest_zoneidx5.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %20, ptr %highest_zoneidx5.i, align 4
  %33 = ptrtoint ptr %mode.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %cond.i, ptr %mode.i, align 8
  %34 = ptrtoint ptr %ignore_skip_hint.i to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %frombool.i, ptr %ignore_skip_hint.i, align 4
  %35 = ptrtoint ptr %no_set_skip_hint.i to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 0, ptr %no_set_skip_hint.i, align 1
  %36 = ptrtoint ptr %ignore_block_suitable.i to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %frombool.i, ptr %ignore_block_suitable.i, align 2
  %37 = ptrtoint ptr %direct_compaction.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 1, ptr %direct_compaction.i, align 1
  %38 = ptrtoint ptr %whole_zone.i to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %frombool.i, ptr %whole_zone.i, align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %capc.i) #11
  %39 = ptrtoint ptr %capc.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %cc.i, ptr %capc.i, align 4
  %40 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %10, align 4
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !469
  %41 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i75 = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i75 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %task.i, align 8
  %capture_control.i = getelementptr inbounds %struct.task_struct, ptr %44, i32 0, i32 152
  %45 = ptrtoint ptr %capture_control.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %capc.i, ptr %capture_control.i, align 4
  %call22.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i, ptr noundef nonnull %capc.i) #11
  %46 = ptrtoint ptr %cc.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile ptr, ptr %cc.i, align 8
  %cmp.i.not.i = icmp eq ptr %47, %cc.i
  br i1 %cmp.i.not.i, label %do.body37.i, label %do.body29.i, !prof !434

do.body29.i:                                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2522, 0\0A.popsection", ""() #11, !srcloc !470
  unreachable

do.body37.i:                                      ; preds = %if.end6
  %48 = ptrtoint ptr %migratepages.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile ptr, ptr %migratepages.i, align 8
  %cmp.i83.not.i = icmp eq ptr %49, %migratepages.i
  br i1 %cmp.i83.not.i, label %compact_zone_order.exit, label %do.body50.i, !prof !434

do.body50.i:                                      ; preds = %do.body37.i
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2523, 0\0A.popsection", ""() #11, !srcloc !471
  unreachable

compact_zone_order.exit:                          ; preds = %do.body37.i
  %50 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %task.i, align 8
  %capture_control66.i = getelementptr inbounds %struct.task_struct, ptr %51, i32 0, i32 152
  %52 = ptrtoint ptr %capture_control66.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile ptr null, ptr %capture_control66.i, align 4
  %53 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile ptr, ptr %10, align 4
  %55 = ptrtoint ptr %capture to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %54, ptr %capture, align 4
  %tobool75.not.i = icmp eq ptr %54, null
  %spec.select.i = select i1 %tobool75.not.i, i32 %call22.i, i32 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %capc.i) #11
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %cc.i) #11
  %56 = call i32 @llvm.umax.i32(i32 %spec.select.i, i32 %rc.098)
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %spec.select.i)
  %cmp15 = icmp eq i32 %spec.select.i, 8
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %compact_zone_order.exit
  %compact_order_failed.i76 = getelementptr inbounds %struct.zone, ptr %zone.0101, i32 0, i32 32
  %57 = ptrtoint ptr %compact_order_failed.i76 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %compact_order_failed.i76, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %58, i32 %order)
  %cmp.not.i77 = icmp sgt i32 %58, %order
  br i1 %cmp.not.i77, label %if.then16.compaction_defer_reset.exit_crit_edge, label %if.then1.i

if.then16.compaction_defer_reset.exit_crit_edge:  ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #13
  br label %compaction_defer_reset.exit

if.then1.i:                                       ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #13
  %add.i = add i32 %order, 1
  %59 = ptrtoint ptr %compact_order_failed.i76 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %add.i, ptr %compact_order_failed.i76, align 32
  br label %compaction_defer_reset.exit

compaction_defer_reset.exit:                      ; preds = %if.then1.i, %if.then16.compaction_defer_reset.exit_crit_edge
  call fastcc void @trace_mm_compaction_defer_reset(ptr noundef nonnull %zone.0101, i32 noundef %order) #11
  br label %cleanup37

if.end17:                                         ; preds = %compact_zone_order.exit
  br i1 %cond, label %land.lhs.true25, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %if.end17
  %call8.off = add i32 %spec.select.i, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call8.off)
  %switch71 = icmp ult i32 %call8.off, 2
  br i1 %switch71, label %if.then22, label %land.lhs.true19.lor.lhs.false27_crit_edge

land.lhs.true19.lor.lhs.false27_crit_edge:        ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #13
  br label %lor.lhs.false27

if.then22:                                        ; preds = %land.lhs.true19
  %compact_considered.i79 = getelementptr inbounds %struct.zone, ptr %zone.0101, i32 0, i32 30
  %60 = ptrtoint ptr %compact_considered.i79 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 0, ptr %compact_considered.i79, align 8
  %compact_defer_shift.i80 = getelementptr inbounds %struct.zone, ptr %zone.0101, i32 0, i32 31
  %61 = ptrtoint ptr %compact_defer_shift.i80 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %compact_defer_shift.i80, align 4
  %inc.i81 = add i32 %62, 1
  store i32 %inc.i81, ptr %compact_defer_shift.i80, align 4
  %compact_order_failed.i82 = getelementptr inbounds %struct.zone, ptr %zone.0101, i32 0, i32 32
  %63 = ptrtoint ptr %compact_order_failed.i82 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %compact_order_failed.i82, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %order)
  %cmp.i83 = icmp sgt i32 %64, %order
  br i1 %cmp.i83, label %if.then.i, label %if.then22.if.end.i84_crit_edge

if.then22.if.end.i84_crit_edge:                   ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i84

if.then.i:                                        ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #13
  %65 = ptrtoint ptr %compact_order_failed.i82 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %order, ptr %compact_order_failed.i82, align 32
  br label %if.end.i84

if.end.i84:                                       ; preds = %if.then.i, %if.then22.if.end.i84_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %inc.i81)
  %cmp3.i = icmp ugt i32 %inc.i81, 6
  br i1 %cmp3.i, label %if.then4.i, label %if.end.i84.defer_compaction.exit_crit_edge

if.end.i84.defer_compaction.exit_crit_edge:       ; preds = %if.end.i84
  call void @__sanitizer_cov_trace_pc() #13
  br label %defer_compaction.exit

if.then4.i:                                       ; preds = %if.end.i84
  call void @__sanitizer_cov_trace_pc() #13
  %66 = ptrtoint ptr %compact_defer_shift.i80 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 6, ptr %compact_defer_shift.i80, align 4
  br label %defer_compaction.exit

defer_compaction.exit:                            ; preds = %if.then4.i, %if.end.i84.defer_compaction.exit_crit_edge
  call fastcc void @trace_mm_compaction_defer_compaction(ptr noundef nonnull %zone.0101, i32 noundef %order) #11
  br label %lor.lhs.false27

land.lhs.true25:                                  ; preds = %if.end17
  %67 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i = and i32 %67, -16384
  %68 = inttoptr i32 %and.i.i to ptr
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %68, align 16384
  %71 = and i32 %70, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool.i.not = icmp eq i32 %71, 0
  br i1 %tobool.i.not, label %land.lhs.true25.lor.lhs.false27_crit_edge, label %land.lhs.true25.cleanup37_crit_edge

land.lhs.true25.cleanup37_crit_edge:              ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup37

land.lhs.true25.lor.lhs.false27_crit_edge:        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #13
  br label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %land.lhs.true25.lor.lhs.false27_crit_edge, %defer_compaction.exit, %land.lhs.true19.lor.lhs.false27_crit_edge
  %72 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %72, -16384
  %73 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %task, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %stack.i.i.i, align 4
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %77, align 4
  %and1.i.i.i.i.i = and i32 %79, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i85 = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i85, label %lor.lhs.false27.for.inc_crit_edge, label %fatal_signal_pending.exit

lor.lhs.false27.for.inc_crit_edge:                ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

fatal_signal_pending.exit:                        ; preds = %lor.lhs.false27
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %75, i32 0, i32 116, i32 1
  %80 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %signal.i.i, align 4
  %82 = and i32 %81, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %82)
  %tobool30.not = icmp eq i32 %82, 0
  br i1 %tobool30.not, label %fatal_signal_pending.exit.for.inc_crit_edge, label %fatal_signal_pending.exit.cleanup37_crit_edge

fatal_signal_pending.exit.cleanup37_crit_edge:    ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup37

fatal_signal_pending.exit.for.inc_crit_edge:      ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

for.inc:                                          ; preds = %fatal_signal_pending.exit.for.inc_crit_edge, %lor.lhs.false27.for.inc_crit_edge, %if.then4
  %rc.1 = phi i32 [ %18, %if.then4 ], [ %56, %lor.lhs.false27.for.inc_crit_edge ], [ %56, %fatal_signal_pending.exit.for.inc_crit_edge ]
  %incdec.ptr = getelementptr %struct.zoneref, ptr %z.0100, i32 1
  %83 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %highest_zoneidx, align 4
  %85 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %nodemask, align 4
  %tobool.not.i = icmp eq ptr %86, null
  br i1 %tobool.not.i, label %land.rhs.i, label %for.inc.if.end.i_crit_edge, !prof !434

for.inc.if.end.i_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i

land.rhs.i:                                       ; preds = %for.inc
  %zone_idx.i.i = getelementptr %struct.zoneref, ptr %z.0100, i32 1, i32 1
  %87 = ptrtoint ptr %zone_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %zone_idx.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %88, i32 %84)
  %cmp.not.i = icmp ugt i32 %88, %84
  br i1 %cmp.not.i, label %land.rhs.i.if.end.i_crit_edge, label %land.rhs.i.next_zones_zonelist.exit_crit_edge, !prof !435

land.rhs.i.next_zones_zonelist.exit_crit_edge:    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %next_zones_zonelist.exit

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i

if.end.i:                                         ; preds = %land.rhs.i.if.end.i_crit_edge, %for.inc.if.end.i_crit_edge
  %call3.i = call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr, i32 noundef %84, ptr noundef %86) #11
  br label %next_zones_zonelist.exit

next_zones_zonelist.exit:                         ; preds = %if.end.i, %land.rhs.i.next_zones_zonelist.exit_crit_edge
  %retval.0.i = phi ptr [ %call3.i, %if.end.i ], [ %incdec.ptr, %land.rhs.i.next_zones_zonelist.exit_crit_edge ]
  %89 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %zone.0 = load ptr, ptr %retval.0.i, align 4
  %tobool2.not = icmp eq ptr %zone.0, null
  br i1 %tobool2.not, label %next_zones_zonelist.exit.cleanup37_crit_edge, label %next_zones_zonelist.exit.for.body_crit_edge

next_zones_zonelist.exit.for.body_crit_edge:      ; preds = %next_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

next_zones_zonelist.exit.cleanup37_crit_edge:     ; preds = %next_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup37

cleanup37:                                        ; preds = %next_zones_zonelist.exit.cleanup37_crit_edge, %fatal_signal_pending.exit.cleanup37_crit_edge, %land.lhs.true25.cleanup37_crit_edge, %compaction_defer_reset.exit, %first_zones_zonelist.exit.cleanup37_crit_edge, %entry.cleanup37_crit_edge
  %retval.0 = phi i32 [ 1, %entry.cleanup37_crit_edge ], [ %56, %compaction_defer_reset.exit ], [ 1, %first_zones_zonelist.exit.cleanup37_crit_edge ], [ %rc.1, %next_zones_zonelist.exit.cleanup37_crit_edge ], [ %56, %land.lhs.true25.cleanup37_crit_edge ], [ %56, %fatal_signal_pending.exit.cleanup37_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_try_to_compact_pages(i32 noundef %order, i32 noundef %gfp_mask, i32 noundef %prio) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_try_to_compact_pages, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_try_to_compact_pages, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !472
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_try_to_compact_pages, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %order, i32 noundef %gfp_mask, i32 noundef %prio) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !473
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !473
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_try_to_compact_pages, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_try_to_compact_pages.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_try_to_compact_pages.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 179, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @compaction_proactiveness_sysctl_handler(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @proc_dointvec_minmax(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp ne i32 %call, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %write)
  %tobool1.not = icmp eq i32 %write, 0
  %or.cond = or i1 %tobool1.not, %tobool.not
  br i1 %or.cond, label %entry.cleanup10_crit_edge, label %land.lhs.true

entry.cleanup10_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup10

land.lhs.true:                                    ; preds = %entry
  %0 = load i32, ptr @sysctl_compaction_proactiveness, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool2.not = icmp eq i32 %0, 0
  br i1 %tobool2.not, label %land.lhs.true.cleanup10_crit_edge, label %for.body

land.lhs.true.cleanup10_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup10

for.body:                                         ; preds = %land.lhs.true
  call void @__asan_load1_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 22) to i32))
  %1 = load i8, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 22), align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool5.not = icmp eq i8 %1, 0
  br i1 %tobool5.not, label %if.end7, label %for.body.cleanup10_crit_edge

for.body.cleanup10_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup10

if.end7:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_store1_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 22) to i32))
  store i8 1, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 22), align 4
  tail call void @__wake_up(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 20), i32 noundef 1, i32 noundef 1, ptr noundef null) #11
  br label %cleanup10

cleanup10:                                        ; preds = %if.end7, %for.body.cleanup10_crit_edge, %land.lhs.true.cleanup10_crit_edge, %entry.cleanup10_crit_edge
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proc_dointvec_minmax(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sysctl_compaction_handler(ptr nocapture noundef readnone %table, i32 noundef %write, ptr nocapture noundef readnone %buffer, ptr nocapture noundef readnone %length, ptr nocapture noundef readnone %ppos) local_unnamed_addr #0 align 64 {
entry:
  %cc.i.i = alloca %struct.compact_control, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %write)
  %tobool.not = icmp eq i32 %write, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then:                                          ; preds = %entry
  tail call void @lru_add_drain_all() #11
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %cc.i.i) #11
  %0 = call ptr @memset(ptr %cc.i.i, i32 0, i32 88)
  %1 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i.i, i32 0, i32 12
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 3264, ptr %1, align 4
  %3 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i.i, i32 0, i32 13
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %3, align 4
  %5 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i.i, i32 0, i32 17
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 2, ptr %5, align 4
  %7 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i.i, i32 0, i32 18
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %7, align 4
  %9 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i.i, i32 0, i32 23
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 1, ptr %9, align 1
  %zone2.i.i = getelementptr inbounds %struct.compact_control, ptr %cc.i.i, i32 0, i32 7
  %migratepages.i.i = getelementptr inbounds %struct.compact_control, ptr %cc.i.i, i32 0, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 0, i32 13) to i32))
  %11 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 0, i32 13), align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.i.not.i.i = icmp eq i32 %11, 0
  br i1 %tobool.i.not.i.i, label %if.then.for.inc.i.i_crit_edge, label %if.end.i.i

if.then.for.inc.i.i_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %if.then
  %12 = ptrtoint ptr %zone2.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @contig_page_data, ptr %zone2.i.i, align 4
  %call3.i.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i.i, ptr noundef null) #11
  %13 = ptrtoint ptr %cc.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %cc.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %14, %cc.i.i
  br i1 %cmp.i.not.i.i, label %do.body16.i.i, label %if.end.i.i.do.body9.i.i_crit_edge, !prof !434

if.end.i.i.do.body9.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body9.i.i

do.body9.i.i:                                     ; preds = %if.end.3.i.i.do.body9.i.i_crit_edge, %if.end.2.i.i.do.body9.i.i_crit_edge, %if.end.1.i.i.do.body9.i.i_crit_edge, %if.end.i.i.do.body9.i.i_crit_edge
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2686, 0\0A.popsection", ""() #11, !srcloc !474
  unreachable

do.body16.i.i:                                    ; preds = %if.end.i.i
  %15 = ptrtoint ptr %migratepages.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %migratepages.i.i, align 4
  %cmp.i1.not.i.i = icmp eq ptr %16, %migratepages.i.i
  br i1 %cmp.i1.not.i.i, label %do.body16.i.i.for.inc.i.i_crit_edge, label %do.body16.i.i.do.body28.i.i_crit_edge, !prof !434

do.body16.i.i.do.body28.i.i_crit_edge:            ; preds = %do.body16.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body28.i.i

do.body16.i.i.for.inc.i.i_crit_edge:              ; preds = %do.body16.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i.i

do.body28.i.i:                                    ; preds = %do.body16.3.i.i.do.body28.i.i_crit_edge, %do.body16.2.i.i.do.body28.i.i_crit_edge, %do.body16.1.i.i.do.body28.i.i_crit_edge, %do.body16.i.i.do.body28.i.i_crit_edge
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2687, 0\0A.popsection", ""() #11, !srcloc !475
  unreachable

for.inc.i.i:                                      ; preds = %do.body16.i.i.for.inc.i.i_crit_edge, %if.then.for.inc.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 1, i32 13) to i32))
  %17 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 1, i32 13), align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i.not.1.i.i = icmp eq i32 %17, 0
  br i1 %tobool.i.not.1.i.i, label %for.inc.i.i.for.inc.1.i.i_crit_edge, label %if.end.1.i.i

for.inc.i.i.for.inc.1.i.i_crit_edge:              ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.1.i.i

if.end.1.i.i:                                     ; preds = %for.inc.i.i
  %18 = ptrtoint ptr %zone2.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 1), ptr %zone2.i.i, align 4
  %call3.1.i.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i.i, ptr noundef null) #11
  %19 = ptrtoint ptr %cc.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %cc.i.i, align 4
  %cmp.i.not.1.i.i = icmp eq ptr %20, %cc.i.i
  br i1 %cmp.i.not.1.i.i, label %do.body16.1.i.i, label %if.end.1.i.i.do.body9.i.i_crit_edge, !prof !434

if.end.1.i.i.do.body9.i.i_crit_edge:              ; preds = %if.end.1.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body9.i.i

do.body16.1.i.i:                                  ; preds = %if.end.1.i.i
  %21 = ptrtoint ptr %migratepages.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %migratepages.i.i, align 4
  %cmp.i1.not.1.i.i = icmp eq ptr %22, %migratepages.i.i
  br i1 %cmp.i1.not.1.i.i, label %do.body16.1.i.i.for.inc.1.i.i_crit_edge, label %do.body16.1.i.i.do.body28.i.i_crit_edge, !prof !434

do.body16.1.i.i.do.body28.i.i_crit_edge:          ; preds = %do.body16.1.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body28.i.i

do.body16.1.i.i.for.inc.1.i.i_crit_edge:          ; preds = %do.body16.1.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.1.i.i

for.inc.1.i.i:                                    ; preds = %do.body16.1.i.i.for.inc.1.i.i_crit_edge, %for.inc.i.i.for.inc.1.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 2, i32 13) to i32))
  %23 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 2, i32 13), align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.i.not.2.i.i = icmp eq i32 %23, 0
  br i1 %tobool.i.not.2.i.i, label %for.inc.1.i.i.for.inc.2.i.i_crit_edge, label %if.end.2.i.i

for.inc.1.i.i.for.inc.2.i.i_crit_edge:            ; preds = %for.inc.1.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.2.i.i

if.end.2.i.i:                                     ; preds = %for.inc.1.i.i
  %24 = ptrtoint ptr %zone2.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 2), ptr %zone2.i.i, align 4
  %call3.2.i.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i.i, ptr noundef null) #11
  %25 = ptrtoint ptr %cc.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %cc.i.i, align 4
  %cmp.i.not.2.i.i = icmp eq ptr %26, %cc.i.i
  br i1 %cmp.i.not.2.i.i, label %do.body16.2.i.i, label %if.end.2.i.i.do.body9.i.i_crit_edge, !prof !434

if.end.2.i.i.do.body9.i.i_crit_edge:              ; preds = %if.end.2.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body9.i.i

do.body16.2.i.i:                                  ; preds = %if.end.2.i.i
  %27 = ptrtoint ptr %migratepages.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %migratepages.i.i, align 4
  %cmp.i1.not.2.i.i = icmp eq ptr %28, %migratepages.i.i
  br i1 %cmp.i1.not.2.i.i, label %do.body16.2.i.i.for.inc.2.i.i_crit_edge, label %do.body16.2.i.i.do.body28.i.i_crit_edge, !prof !434

do.body16.2.i.i.do.body28.i.i_crit_edge:          ; preds = %do.body16.2.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body28.i.i

do.body16.2.i.i.for.inc.2.i.i_crit_edge:          ; preds = %do.body16.2.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.2.i.i

for.inc.2.i.i:                                    ; preds = %do.body16.2.i.i.for.inc.2.i.i_crit_edge, %for.inc.1.i.i.for.inc.2.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 3, i32 13) to i32))
  %29 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 3, i32 13), align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.i.not.3.i.i = icmp eq i32 %29, 0
  br i1 %tobool.i.not.3.i.i, label %for.inc.2.i.i.compact_nodes.exit_crit_edge, label %if.end.3.i.i

for.inc.2.i.i.compact_nodes.exit_crit_edge:       ; preds = %for.inc.2.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compact_nodes.exit

if.end.3.i.i:                                     ; preds = %for.inc.2.i.i
  %30 = ptrtoint ptr %zone2.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 0, i32 3), ptr %zone2.i.i, align 4
  %call3.3.i.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i.i, ptr noundef null) #11
  %31 = ptrtoint ptr %cc.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %cc.i.i, align 4
  %cmp.i.not.3.i.i = icmp eq ptr %32, %cc.i.i
  br i1 %cmp.i.not.3.i.i, label %do.body16.3.i.i, label %if.end.3.i.i.do.body9.i.i_crit_edge, !prof !434

if.end.3.i.i.do.body9.i.i_crit_edge:              ; preds = %if.end.3.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body9.i.i

do.body16.3.i.i:                                  ; preds = %if.end.3.i.i
  %33 = ptrtoint ptr %migratepages.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %migratepages.i.i, align 4
  %cmp.i1.not.3.i.i = icmp eq ptr %34, %migratepages.i.i
  br i1 %cmp.i1.not.3.i.i, label %do.body16.3.i.i.compact_nodes.exit_crit_edge, label %do.body16.3.i.i.do.body28.i.i_crit_edge, !prof !434

do.body16.3.i.i.do.body28.i.i_crit_edge:          ; preds = %do.body16.3.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body28.i.i

do.body16.3.i.i.compact_nodes.exit_crit_edge:     ; preds = %do.body16.3.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compact_nodes.exit

compact_nodes.exit:                               ; preds = %do.body16.3.i.i.compact_nodes.exit_crit_edge, %for.inc.2.i.i.compact_nodes.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %cc.i.i) #11
  br label %if.end

if.end:                                           ; preds = %compact_nodes.exit, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wakeup_kcompactd(ptr noundef %pgdat, i32 noundef %order, i32 noundef %highest_zoneidx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %order)
  %tobool.not = icmp eq i32 %order, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end:                                           ; preds = %entry
  %kcompactd_max_order = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 18
  %0 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %kcompactd_max_order, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %order)
  %cmp = icmp slt i32 %1, %order
  br i1 %cmp, label %if.then1, label %if.end.if.end3_crit_edge

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end3

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %2 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %order, ptr %kcompactd_max_order, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.end.if.end3_crit_edge
  %kcompactd_highest_zoneidx = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 19
  %3 = ptrtoint ptr %kcompactd_highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %kcompactd_highest_zoneidx, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %highest_zoneidx)
  %cmp4 = icmp ugt i32 %4, %highest_zoneidx
  br i1 %cmp4, label %if.then5, label %if.end3.if.end7_crit_edge

if.end3.if.end7_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end7

if.then5:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #13
  %5 = ptrtoint ptr %kcompactd_highest_zoneidx to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %highest_zoneidx, ptr %kcompactd_highest_zoneidx, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end3.if.end7_crit_edge
  %kcompactd_wait = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !476
  %head.i.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 20, i32 1
  %6 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %head.i.i, align 4
  %cmp.i.i.i.not = icmp eq ptr %7, %head.i.i
  br i1 %cmp.i.i.i.not, label %if.end7.return_crit_edge, label %if.end9

if.end7.return_crit_edge:                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end9:                                          ; preds = %if.end7
  %8 = ptrtoint ptr %kcompactd_highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %kcompactd_highest_zoneidx, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end9
  %zoneid.013.i = phi i32 [ 0, %if.end9 ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %present_pages.i.i = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 %zoneid.013.i, i32 13
  %10 = ptrtoint ptr %present_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %present_pages.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.i.not.i = icmp eq i32 %11, 0
  br i1 %tobool.i.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 %zoneid.013.i
  %12 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %kcompactd_max_order, align 4
  %call1.i = tail call i32 @compaction_suitable(ptr noundef %arrayidx.i, i32 noundef %13, i32 noundef 0, i32 noundef %9) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %call1.i)
  %cmp2.i = icmp eq i32 %call1.i, 4
  br i1 %cmp2.i, label %if.end12, label %if.end.i.for.inc.i_crit_edge

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add i32 %zoneid.013.i, 1
  %cmp.not.i = icmp ugt i32 %inc.i, %9
  br i1 %cmp.not.i, label %for.inc.i.return_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i

for.inc.i.return_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end12:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %14 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %node_id, align 64
  tail call fastcc void @trace_mm_compaction_wakeup_kcompactd(i32 noundef %15, i32 noundef %order, i32 noundef %highest_zoneidx)
  tail call void @__wake_up(ptr noundef %kcompactd_wait, i32 noundef 1, i32 noundef 1, ptr noundef null) #11
  br label %return

return:                                           ; preds = %if.end12, %for.inc.i.return_crit_edge, %if.end7.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_wakeup_kcompactd(i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_wakeup_kcompactd, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_wakeup_kcompactd, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !477
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_wakeup_kcompactd, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !478
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !478
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_wakeup_kcompactd, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_wakeup_kcompactd.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_wakeup_kcompactd.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 332, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @kcompactd_run(i32 noundef %nid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21) to i32))
  %0 = load ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21), align 16
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @kcompactd, ptr noundef nonnull @contig_page_data, i32 noundef -1, ptr noundef nonnull @.str.24, i32 noundef %nid) #11
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %do.end, label %if.end5

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %call4 = tail call i32 @wake_up_process(ptr noundef %call1) #11
  br label %cleanup.sink.split

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21) to i32))
  store ptr %call1, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21), align 16
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.25, i32 noundef %nid) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21) to i32))
  %1 = load ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21), align 16
  %2 = ptrtoint ptr %1 to i32
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %do.end, %if.end5
  %call1.sink = phi ptr [ %call1, %if.end5 ], [ null, %do.end ]
  %retval.0.ph = phi i32 [ 0, %if.end5 ], [ %2, %do.end ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21) to i32))
  store ptr %call1.sink, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21), align 16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @kcompactd(ptr noundef %p) #0 align 64 {
entry:
  %cc.i148 = alloca %struct.compact_control, align 4
  %cc.i = alloca %struct.compact_control, align 4
  %pflags = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %call.i.i = tail call i32 @_find_first_bit_be(ptr noundef nonnull @__cpu_online_mask, i32 noundef %4) #11
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %4)
  %cmp4.i.i = icmp eq i32 %call.i.i, %4
  br i1 %cmp4.i.i, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %call3 = tail call i32 @set_cpus_allowed_ptr(ptr noundef %3, ptr noundef nonnull @__cpu_online_mask) #11
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %call4 = tail call zeroext i1 @set_freezable() #11
  %kcompactd_max_order = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 18
  %5 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %kcompactd_max_order, align 4
  %nr_zones = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 2
  %6 = ptrtoint ptr %nr_zones to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_zones, align 8
  %sub = add i32 %7, -1
  %kcompactd_highest_zoneidx = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 19
  %8 = ptrtoint ptr %kcompactd_highest_zoneidx to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %sub, ptr %kcompactd_highest_zoneidx, align 8
  %call5306 = call zeroext i1 @kthread_should_stop() #11
  br i1 %call5306, label %if.end.while.end_crit_edge, label %while.body.lr.ph

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end
  %proactive_compact_trigger.i = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 22
  %kcompactd_wait = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 20
  %kswapd.i.i = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 14
  %9 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i148, i32 0, i32 12
  %10 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i148, i32 0, i32 13
  %11 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i148, i32 0, i32 17
  %12 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i148, i32 0, i32 18
  %13 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i148, i32 0, i32 22
  %14 = getelementptr inbounds { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }, ptr %cc.i148, i32 0, i32 23
  %zone1.i = getelementptr inbounds %struct.compact_control, ptr %cc.i148, i32 0, i32 7
  %migratepages.i149 = getelementptr inbounds %struct.compact_control, ptr %cc.i148, i32 0, i32 1
  %present_pages.i.i150 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 0, i32 13
  %present_pages.i.1.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1, i32 13
  %arrayidx.1.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1
  %present_pages.i.2.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2, i32 13
  %arrayidx.2.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2
  %present_pages.i.3.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3, i32 13
  %arrayidx.3.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3
  %search_order.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 11
  %gfp_mask.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 12
  %order.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 13
  %highest_zoneidx.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 16
  %mode.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 17
  %zone20.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 7
  %total_migrate_scanned.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 8
  %total_free_scanned.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 9
  %migratepages.i = getelementptr inbounds %struct.compact_control, ptr %cc.i, i32 0, i32 1
  %present_pages.i.i.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 0, i32 13
  %zone_pgdat.i.i.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 0, i32 4
  %arrayidx.i.i.1 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1
  %present_pages.i.i.i.1 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1, i32 13
  %zone_pgdat.i.i.i.1 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1, i32 4
  %arrayidx.i.i.2 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2
  %present_pages.i.i.i.2 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2, i32 13
  %zone_pgdat.i.i.i.2 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2, i32 4
  %arrayidx.i.i.3 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3
  %present_pages.i.i.i.3 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3, i32 13
  %zone_pgdat.i.i.i.3 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3, i32 4
  %present_pages.i.i142 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 0, i32 13
  %zone_pgdat.i.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 0, i32 4
  %arrayidx.i141.1 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1
  %present_pages.i.i142.1 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1, i32 13
  %zone_pgdat.i.i.1 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1, i32 4
  %arrayidx.i141.2 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2
  %present_pages.i.i142.2 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2, i32 13
  %zone_pgdat.i.i.2 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2, i32 4
  %arrayidx.i141.3 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3
  %present_pages.i.i142.3 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3, i32 13
  %zone_pgdat.i.i.3 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3, i32 4
  %present_pages.i.i157 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 0, i32 13
  %zone_pgdat.i.i161 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 0, i32 4
  %arrayidx.i156.1 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1
  %present_pages.i.i157.1 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1, i32 13
  %zone_pgdat.i.i161.1 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 1, i32 4
  %arrayidx.i156.2 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2
  %present_pages.i.i157.2 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2, i32 13
  %zone_pgdat.i.i161.2 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 2, i32 4
  %arrayidx.i156.3 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3
  %present_pages.i.i157.3 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3, i32 13
  %zone_pgdat.i.i161.3 = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 3, i32 4
  br label %while.body

while.body:                                       ; preds = %cleanup76.while.body_crit_edge, %while.body.lr.ph
  %timeout.0307 = phi i32 [ 50, %while.body.lr.ph ], [ %timeout.4, %cleanup76.while.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pflags) #11
  %15 = ptrtoint ptr %pflags to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 -1, ptr %pflags, align 4, !annotation !436
  %16 = load i32, ptr @sysctl_compaction_proactiveness, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not = icmp eq i32 %16, 0
  %spec.select = select i1 %tobool.not, i32 2147483647, i32 %timeout.0307
  %17 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %node_id, align 64
  call fastcc void @trace_mm_compaction_kcompactd_sleep(i32 noundef %18)
  call void @__might_sleep(ptr noundef nonnull @.str.27, i32 noundef 2938) #11
  %19 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %kcompactd_max_order, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.i = icmp sgt i32 %20, 0
  br i1 %cmp.i, label %while.body.land.lhs.true51_crit_edge, label %lor.lhs.false.i

while.body.land.lhs.true51_crit_edge:             ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true51

lor.lhs.false.i:                                  ; preds = %while.body
  %call.i = call zeroext i1 @kthread_should_stop() #11
  br i1 %call.i, label %lor.lhs.false.i.land.lhs.true51_crit_edge, label %kcompactd_work_requested.exit

lor.lhs.false.i.land.lhs.true51_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true51

kcompactd_work_requested.exit:                    ; preds = %lor.lhs.false.i
  %21 = ptrtoint ptr %proactive_compact_trigger.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %proactive_compact_trigger.i, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.i.not = icmp eq i8 %22, 0
  br i1 %tobool.i.not, label %if.then21, label %kcompactd_work_requested.exit.if.end54_crit_edge

kcompactd_work_requested.exit.if.end54_crit_edge: ; preds = %kcompactd_work_requested.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end54

if.then21:                                        ; preds = %kcompactd_work_requested.exit
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #11
  %23 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #11
  %call23300 = call i32 @prepare_to_wait_event(ptr noundef %kcompactd_wait, ptr noundef nonnull %__wq_entry, i32 noundef 1) #11
  %24 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %kcompactd_max_order, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i115301 = icmp sgt i32 %25, 0
  br i1 %cmp.i115301, label %if.then21.if.end48.thread294_crit_edge, label %if.then21.lor.lhs.false.i117_crit_edge

if.then21.lor.lhs.false.i117_crit_edge:           ; preds = %if.then21
  br label %lor.lhs.false.i117

if.then21.if.end48.thread294_crit_edge:           ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end48.thread294

lor.lhs.false.i117:                               ; preds = %cleanup.lor.lhs.false.i117_crit_edge, %if.then21.lor.lhs.false.i117_crit_edge
  %call23303 = phi i32 [ %call23, %cleanup.lor.lhs.false.i117_crit_edge ], [ %call23300, %if.then21.lor.lhs.false.i117_crit_edge ]
  %__ret22.0302 = phi i32 [ %call.i122, %cleanup.lor.lhs.false.i117_crit_edge ], [ %spec.select, %if.then21.lor.lhs.false.i117_crit_edge ]
  %call.i116 = call zeroext i1 @kthread_should_stop() #11
  br i1 %call.i116, label %lor.lhs.false.i117.if.end48.thread294_crit_edge, label %kcompactd_work_requested.exit121

lor.lhs.false.i117.if.end48.thread294_crit_edge:  ; preds = %lor.lhs.false.i117
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end48.thread294

kcompactd_work_requested.exit121:                 ; preds = %lor.lhs.false.i117
  %26 = ptrtoint ptr %proactive_compact_trigger.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %proactive_compact_trigger.i, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool.i119.not = icmp eq i8 %27, 0
  br i1 %tobool.i119.not, label %28, label %kcompactd_work_requested.exit121.if.end48.thread294_crit_edge

kcompactd_work_requested.exit121.if.end48.thread294_crit_edge: ; preds = %kcompactd_work_requested.exit121
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end48.thread294

if.end48.thread294:                               ; preds = %cleanup.if.end48.thread294_crit_edge, %kcompactd_work_requested.exit121.if.end48.thread294_crit_edge, %lor.lhs.false.i117.if.end48.thread294_crit_edge, %if.then21.if.end48.thread294_crit_edge
  call void @finish_wait(ptr noundef %kcompactd_wait, ptr noundef nonnull %__wq_entry) #11
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #11
  br label %land.lhs.true51

28:                                               ; preds = %kcompactd_work_requested.exit121
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %__ret22.0302)
  %tobool35.not = icmp eq i32 %__ret22.0302, 0
  br i1 %tobool35.not, label %if.end48, label %if.end41

if.end41:                                         ; preds = %28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23303)
  %tobool42.not = icmp eq i32 %call23303, 0
  br i1 %tobool42.not, label %if.end44, label %if.end48.thread291

if.end48.thread291:                               ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #11
  br label %land.lhs.true51

if.end44:                                         ; preds = %if.end41
  %29 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %task.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %32, i32 0, i32 3
  %33 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags.i.i, align 4
  %or.i.i = or i32 %34, 1073741824
  store i32 %or.i.i, ptr %flags.i.i, align 4
  %call.i122 = call i32 @schedule_timeout(i32 noundef %__ret22.0302) #11
  %35 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i1.i = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i1.i to ptr
  %task.i2.i = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 2
  %37 = ptrtoint ptr %task.i2.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %task.i2.i, align 8
  %flags.i3.i = getelementptr inbounds %struct.task_struct, ptr %38, i32 0, i32 3
  %39 = ptrtoint ptr %flags.i3.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %flags.i3.i, align 4
  %and.i.i123 = and i32 %40, -1073741825
  store i32 %and.i.i123, ptr %flags.i3.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !479
  %41 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %task.i.i.i, align 8
  %flags.i.i.i = getelementptr inbounds %struct.task_struct, ptr %44, i32 0, i32 3
  %45 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %flags.i.i.i, align 4
  %and.i4.i.i = and i32 %46, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i4.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i4.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end44.if.end.i.i.i_crit_edge

if.end44.if.end.i.i.i_crit_edge:                  ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #13
  call void @debug_check_no_locks_held() #11
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %if.end44.if.end.i.i.i_crit_edge
  call void @__might_sleep(ptr noundef nonnull @.str.139, i32 noundef 57) #11
  %47 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i.i = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i.i.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 2
  %49 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %task.i.i.i.i, align 8
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %51 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.not.i.i.i.i.i = icmp eq i32 %51, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.end.i.i.i.cleanup_crit_edge, label %freezing.exit.i.i.i.i, !prof !434

if.end.i.i.i.cleanup_crit_edge:                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

freezing.exit.i.i.i.i:                            ; preds = %if.end.i.i.i
  %call4.i.i.i.i.i = call zeroext i1 @freezing_slow_path(ptr noundef %50) #11
  br i1 %call4.i.i.i.i.i, label %if.end.i.i.i.i, label %freezing.exit.i.i.i.i.cleanup_crit_edge, !prof !435

freezing.exit.i.i.i.i.cleanup_crit_edge:          ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end.i.i.i.i:                                   ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %call6.i.i.i.i = call zeroext i1 @__refrigerator(i1 noundef zeroext false) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i.i.i, %freezing.exit.i.i.i.i.cleanup_crit_edge, %if.end.i.i.i.cleanup_crit_edge
  %call23 = call i32 @prepare_to_wait_event(ptr noundef %kcompactd_wait, ptr noundef nonnull %__wq_entry, i32 noundef 1) #11
  %52 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %kcompactd_max_order, align 4
  %cmp.i115 = icmp sgt i32 %53, 0
  br i1 %cmp.i115, label %cleanup.if.end48.thread294_crit_edge, label %cleanup.lor.lhs.false.i117_crit_edge

cleanup.lor.lhs.false.i117_crit_edge:             ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #13
  br label %lor.lhs.false.i117

cleanup.if.end48.thread294_crit_edge:             ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end48.thread294

if.end48:                                         ; preds = %28
  call void @__sanitizer_cov_trace_pc() #13
  call void @finish_wait(ptr noundef %kcompactd_wait, ptr noundef nonnull %__wq_entry) #11
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #11
  br label %if.end54

land.lhs.true51:                                  ; preds = %if.end48.thread291, %if.end48.thread294, %lor.lhs.false.i.land.lhs.true51_crit_edge, %while.body.land.lhs.true51_crit_edge
  %54 = ptrtoint ptr %proactive_compact_trigger.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %.pr = load i8, ptr %proactive_compact_trigger.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool52.not = icmp eq i8 %.pr, 0
  br i1 %tobool52.not, label %if.then53, label %land.lhs.true51.if.end54_crit_edge

land.lhs.true51.if.end54_crit_edge:               ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end54

if.then53:                                        ; preds = %land.lhs.true51
  call void @psi_memstall_enter(ptr noundef nonnull %pflags) #11
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %cc.i) #11
  %55 = call ptr @memset(ptr %cc.i, i32 0, i32 88)
  %56 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %kcompactd_max_order, align 4
  %conv.i = trunc i32 %57 to i16
  %58 = ptrtoint ptr %search_order.i to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %conv.i, ptr %search_order.i, align 2
  %59 = ptrtoint ptr %gfp_mask.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 3264, ptr %gfp_mask.i, align 4
  %60 = ptrtoint ptr %order.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %57, ptr %order.i, align 4
  %61 = ptrtoint ptr %kcompactd_highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %kcompactd_highest_zoneidx, align 8
  %63 = ptrtoint ptr %highest_zoneidx.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %62, ptr %highest_zoneidx.i, align 4
  %64 = ptrtoint ptr %mode.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 1, ptr %mode.i, align 4
  %65 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %node_id, align 64
  call fastcc void @trace_mm_compaction_kcompactd_wake(i32 noundef %66, i32 noundef %57, i32 noundef %62) #11
  %67 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !449
  %68 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i125 = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i.i125 to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 3
  %70 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx13.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %71
  %72 = ptrtoint ptr %arrayidx13.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %arrayidx13.i.i.i, align 4
  %add.i.i.i = add i32 %73, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 57) to i32)
  %74 = inttoptr i32 %add.i.i.i to ptr
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %74, align 4
  %add14.i.i.i = add i32 %76, 1
  store i32 %add14.i.i.i, ptr %74, align 4
  %77 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !450
  %and.i.i.i.i.i126 = and i32 %77, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i126)
  %tobool.not.i.i.i127 = icmp eq i32 %and.i.i.i.i.i126, 0
  br i1 %tobool.not.i.i.i127, label %if.then.i.i.i128, label %if.then53.count_compact_event.exit.i_crit_edge, !prof !435

if.then53.count_compact_event.exit.i_crit_edge:   ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #13
  br label %count_compact_event.exit.i

if.then.i.i.i128:                                 ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #13
  call void @warn_bogus_irq_restore() #11
  br label %count_compact_event.exit.i

count_compact_event.exit.i:                       ; preds = %if.then.i.i.i128, %if.then53.count_compact_event.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %67) #11, !srcloc !451
  %78 = ptrtoint ptr %highest_zoneidx.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %highest_zoneidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %cmp.not139.i = icmp slt i32 %79, 0
  br i1 %cmp.not139.i, label %count_compact_event.exit.i.for.end.i_crit_edge, label %count_compact_event.exit.i.for.body.i_crit_edge

count_compact_event.exit.i.for.body.i_crit_edge:  ; preds = %count_compact_event.exit.i
  br label %for.body.i

count_compact_event.exit.i.for.end.i_crit_edge:   ; preds = %count_compact_event.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %count_compact_event.exit.i.for.body.i_crit_edge
  %zoneid.0140.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %count_compact_event.exit.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 %zoneid.0140.i
  %present_pages.i.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 %zoneid.0140.i, i32 13
  %80 = ptrtoint ptr %present_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %present_pages.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool.i.not.i = icmp eq i32 %81, 0
  br i1 %tobool.i.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %82 = ptrtoint ptr %order.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %order.i, align 4
  %compact_defer_shift.i.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 %zoneid.0140.i, i32 31
  %84 = ptrtoint ptr %compact_defer_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %compact_defer_shift.i.i, align 4
  %shl.i.i = shl nuw i32 1, %85
  %compact_order_failed.i.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 %zoneid.0140.i, i32 32
  %86 = ptrtoint ptr %compact_order_failed.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %compact_order_failed.i.i, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %87, i32 %83)
  %cmp.i.i = icmp sgt i32 %87, %83
  br i1 %cmp.i.i, label %if.end.i.if.end10.i_crit_edge, label %if.end.i.i129

if.end.i.if.end10.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end10.i

if.end.i.i129:                                    ; preds = %if.end.i
  %compact_considered.i.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 %zoneid.0140.i, i32 30
  %88 = ptrtoint ptr %compact_considered.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %compact_considered.i.i, align 8
  %inc.i.i = add i32 %89, 1
  store i32 %inc.i.i, ptr %compact_considered.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i.i, i32 %shl.i.i)
  %cmp1.not.i.i = icmp ult i32 %inc.i.i, %shl.i.i
  br i1 %cmp1.not.i.i, label %compaction_deferred.exit.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i129
  call void @__sanitizer_cov_trace_pc() #13
  %90 = ptrtoint ptr %compact_considered.i.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %shl.i.i, ptr %compact_considered.i.i, align 8
  br label %if.end10.i

compaction_deferred.exit.i:                       ; preds = %if.end.i.i129
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @trace_mm_compaction_deferred(ptr noundef %arrayidx.i, i32 noundef %83) #11
  br label %for.inc.i

if.end10.i:                                       ; preds = %if.then2.i.i, %if.end.i.if.end10.i_crit_edge
  %call12.i = call i32 @compaction_suitable(ptr noundef %arrayidx.i, i32 noundef %83, i32 noundef 0, i32 noundef %zoneid.0140.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %call12.i)
  %cmp13.not.i = icmp eq i32 %call12.i, 4
  br i1 %cmp13.not.i, label %if.end16.i, label %if.end10.i.for.inc.i_crit_edge

if.end10.i.for.inc.i_crit_edge:                   ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end16.i:                                       ; preds = %if.end10.i
  %call17.i = call zeroext i1 @kthread_should_stop() #11
  br i1 %call17.i, label %if.end16.i.kcompactd_do_work.exit_crit_edge, label %if.end19.i

if.end16.i.kcompactd_do_work.exit_crit_edge:      ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %kcompactd_do_work.exit

if.end19.i:                                       ; preds = %if.end16.i
  %91 = ptrtoint ptr %zone20.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %arrayidx.i, ptr %zone20.i, align 4
  %call21.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i, ptr noundef null) #11
  %92 = zext i32 %call21.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %92, ptr @__sancov_gen_cov_switch_values)
  switch i32 %call21.i, label %if.end19.i.if.end33.i_crit_edge [
    i32 8, label %if.then24.i
    i32 6, label %if.end19.i.if.then30.i_crit_edge
    i32 5, label %if.end19.i.if.then30.i_crit_edge309
  ]

if.end19.i.if.then30.i_crit_edge309:              ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then30.i

if.end19.i.if.then30.i_crit_edge:                 ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then30.i

if.end19.i.if.end33.i_crit_edge:                  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end33.i

if.then24.i:                                      ; preds = %if.end19.i
  %93 = ptrtoint ptr %order.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %order.i, align 4
  %95 = ptrtoint ptr %compact_order_failed.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %compact_order_failed.i.i, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %96, i32 %94)
  %cmp.not.i.i = icmp sgt i32 %96, %94
  br i1 %cmp.not.i.i, label %if.then24.i.compaction_defer_reset.exit.i_crit_edge, label %if.then1.i.i

if.then24.i.compaction_defer_reset.exit.i_crit_edge: ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compaction_defer_reset.exit.i

if.then1.i.i:                                     ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #13
  %add.i.i = add i32 %94, 1
  %97 = ptrtoint ptr %compact_order_failed.i.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %add.i.i, ptr %compact_order_failed.i.i, align 32
  br label %compaction_defer_reset.exit.i

compaction_defer_reset.exit.i:                    ; preds = %if.then1.i.i, %if.then24.i.compaction_defer_reset.exit.i_crit_edge
  call fastcc void @trace_mm_compaction_defer_reset(ptr noundef %arrayidx.i, i32 noundef %94) #11
  br label %if.end33.i

if.then30.i:                                      ; preds = %if.end19.i.if.then30.i_crit_edge, %if.end19.i.if.then30.i_crit_edge309
  call void @drain_all_pages(ptr noundef %arrayidx.i) #11
  %98 = ptrtoint ptr %order.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %order.i, align 4
  %compact_considered.i108.i = getelementptr [4 x %struct.zone], ptr %p, i32 0, i32 %zoneid.0140.i, i32 30
  %100 = ptrtoint ptr %compact_considered.i108.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 0, ptr %compact_considered.i108.i, align 8
  %101 = ptrtoint ptr %compact_defer_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %compact_defer_shift.i.i, align 4
  %inc.i110.i = add i32 %102, 1
  store i32 %inc.i110.i, ptr %compact_defer_shift.i.i, align 4
  %103 = ptrtoint ptr %compact_order_failed.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %compact_order_failed.i.i, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %104, i32 %99)
  %cmp.i112.i = icmp sgt i32 %104, %99
  br i1 %cmp.i112.i, label %if.then.i.i130, label %if.then30.i.if.end.i113.i_crit_edge

if.then30.i.if.end.i113.i_crit_edge:              ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i113.i

if.then.i.i130:                                   ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #13
  %105 = ptrtoint ptr %compact_order_failed.i.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %99, ptr %compact_order_failed.i.i, align 32
  br label %if.end.i113.i

if.end.i113.i:                                    ; preds = %if.then.i.i130, %if.then30.i.if.end.i113.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %inc.i110.i)
  %cmp3.i.i = icmp ugt i32 %inc.i110.i, 6
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end.i113.i.defer_compaction.exit.i_crit_edge

if.end.i113.i.defer_compaction.exit.i_crit_edge:  ; preds = %if.end.i113.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %defer_compaction.exit.i

if.then4.i.i:                                     ; preds = %if.end.i113.i
  call void @__sanitizer_cov_trace_pc() #13
  %106 = ptrtoint ptr %compact_defer_shift.i.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 6, ptr %compact_defer_shift.i.i, align 4
  br label %defer_compaction.exit.i

defer_compaction.exit.i:                          ; preds = %if.then4.i.i, %if.end.i113.i.defer_compaction.exit.i_crit_edge
  call fastcc void @trace_mm_compaction_defer_compaction(ptr noundef %arrayidx.i, i32 noundef %99) #11
  br label %if.end33.i

if.end33.i:                                       ; preds = %defer_compaction.exit.i, %compaction_defer_reset.exit.i, %if.end19.i.if.end33.i_crit_edge
  %107 = ptrtoint ptr %total_migrate_scanned.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %total_migrate_scanned.i, align 4
  %109 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !449
  %110 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i114.i = and i32 %110, -16384
  %111 = inttoptr i32 %and.i.i.i114.i to ptr
  %cpu.i.i115.i = getelementptr inbounds %struct.thread_info, ptr %111, i32 0, i32 3
  %112 = ptrtoint ptr %cpu.i.i115.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %cpu.i.i115.i, align 4
  %arrayidx13.i.i116.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %113
  %114 = ptrtoint ptr %arrayidx13.i.i116.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %arrayidx13.i.i116.i, align 4
  %add.i.i117.i = add i32 %115, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 58) to i32)
  %116 = inttoptr i32 %add.i.i117.i to ptr
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %116, align 4
  %add14.i.i118.i = add i32 %118, %108
  store i32 %add14.i.i118.i, ptr %116, align 4
  %119 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !450
  %and.i.i.i.i119.i = and i32 %119, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i119.i)
  %tobool.not.i.i120.i = icmp eq i32 %and.i.i.i.i119.i, 0
  br i1 %tobool.not.i.i120.i, label %if.then.i.i121.i, label %if.end33.i.count_compact_events.exit.i_crit_edge, !prof !435

if.end33.i.count_compact_events.exit.i_crit_edge: ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %count_compact_events.exit.i

if.then.i.i121.i:                                 ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @warn_bogus_irq_restore() #11
  br label %count_compact_events.exit.i

count_compact_events.exit.i:                      ; preds = %if.then.i.i121.i, %if.end33.i.count_compact_events.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %109) #11, !srcloc !451
  %120 = ptrtoint ptr %total_free_scanned.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %total_free_scanned.i, align 4
  %122 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !449
  %123 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i122.i = and i32 %123, -16384
  %124 = inttoptr i32 %and.i.i.i122.i to ptr
  %cpu.i.i123.i = getelementptr inbounds %struct.thread_info, ptr %124, i32 0, i32 3
  %125 = ptrtoint ptr %cpu.i.i123.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %cpu.i.i123.i, align 4
  %arrayidx13.i.i124.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %126
  %127 = ptrtoint ptr %arrayidx13.i.i124.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %arrayidx13.i.i124.i, align 4
  %add.i.i125.i = add i32 %128, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 59) to i32)
  %129 = inttoptr i32 %add.i.i125.i to ptr
  %130 = ptrtoint ptr %129 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %129, align 4
  %add14.i.i126.i = add i32 %131, %121
  store i32 %add14.i.i126.i, ptr %129, align 4
  %132 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !450
  %and.i.i.i.i127.i = and i32 %132, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i127.i)
  %tobool.not.i.i128.i = icmp eq i32 %and.i.i.i.i127.i, 0
  br i1 %tobool.not.i.i128.i, label %if.then.i.i129.i, label %count_compact_events.exit.i.count_compact_events.exit130.i_crit_edge, !prof !435

count_compact_events.exit.i.count_compact_events.exit130.i_crit_edge: ; preds = %count_compact_events.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %count_compact_events.exit130.i

if.then.i.i129.i:                                 ; preds = %count_compact_events.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @warn_bogus_irq_restore() #11
  br label %count_compact_events.exit130.i

count_compact_events.exit130.i:                   ; preds = %if.then.i.i129.i, %count_compact_events.exit.i.count_compact_events.exit130.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %122) #11, !srcloc !451
  %133 = ptrtoint ptr %cc.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load volatile ptr, ptr %cc.i, align 4
  %cmp.i131.not.i = icmp eq ptr %134, %cc.i
  br i1 %cmp.i131.not.i, label %do.body46.i, label %do.body39.i, !prof !434

do.body39.i:                                      ; preds = %count_compact_events.exit130.i
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2865, 0\0A.popsection", ""() #11, !srcloc !480
  unreachable

do.body46.i:                                      ; preds = %count_compact_events.exit130.i
  %135 = ptrtoint ptr %migratepages.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load volatile ptr, ptr %migratepages.i, align 4
  %cmp.i132.not.i = icmp eq ptr %136, %migratepages.i
  br i1 %cmp.i132.not.i, label %do.body46.i.for.inc.i_crit_edge, label %do.body58.i, !prof !434

do.body46.i.for.inc.i_crit_edge:                  ; preds = %do.body46.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

do.body58.i:                                      ; preds = %do.body46.i
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2866, 0\0A.popsection", ""() #11, !srcloc !481
  unreachable

for.inc.i:                                        ; preds = %do.body46.i.for.inc.i_crit_edge, %if.end10.i.for.inc.i_crit_edge, %compaction_deferred.exit.i, %for.body.i.for.inc.i_crit_edge
  %inc.i = add i32 %zoneid.0140.i, 1
  %137 = ptrtoint ptr %highest_zoneidx.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %highest_zoneidx.i, align 4
  %cmp.not.i = icmp sgt i32 %inc.i, %138
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %count_compact_event.exit.i.for.end.i_crit_edge
  %.lcssa.i = phi i32 [ %79, %count_compact_event.exit.i.for.end.i_crit_edge ], [ %138, %for.inc.i.for.end.i_crit_edge ]
  %139 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %kcompactd_max_order, align 4
  %141 = ptrtoint ptr %order.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %order.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %140, i32 %142)
  %cmp69.not.i = icmp sgt i32 %140, %142
  br i1 %cmp69.not.i, label %for.end.i.if.end73.i_crit_edge, label %if.then71.i

for.end.i.if.end73.i_crit_edge:                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end73.i

if.then71.i:                                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #13
  %143 = ptrtoint ptr %kcompactd_max_order to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 0, ptr %kcompactd_max_order, align 4
  br label %if.end73.i

if.end73.i:                                       ; preds = %if.then71.i, %for.end.i.if.end73.i_crit_edge
  %144 = ptrtoint ptr %kcompactd_highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %kcompactd_highest_zoneidx, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %145, i32 %.lcssa.i)
  %cmp76.not.i = icmp ult i32 %145, %.lcssa.i
  br i1 %cmp76.not.i, label %if.end73.i.kcompactd_do_work.exit_crit_edge, label %if.then78.i

if.end73.i.kcompactd_do_work.exit_crit_edge:      ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %kcompactd_do_work.exit

if.then78.i:                                      ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #13
  %146 = ptrtoint ptr %nr_zones to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %nr_zones, align 8
  %sub.i = add i32 %147, -1
  %148 = ptrtoint ptr %kcompactd_highest_zoneidx to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 %sub.i, ptr %kcompactd_highest_zoneidx, align 8
  br label %kcompactd_do_work.exit

kcompactd_do_work.exit:                           ; preds = %if.then78.i, %if.end73.i.kcompactd_do_work.exit_crit_edge, %if.end16.i.kcompactd_do_work.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %cc.i) #11
  call void @psi_memstall_leave(ptr noundef nonnull %pflags) #11
  br label %cleanup76

if.end54:                                         ; preds = %land.lhs.true51.if.end54_crit_edge, %if.end48, %kcompactd_work_requested.exit.if.end54_crit_edge
  %149 = load i32, ptr @sysctl_compaction_proactiveness, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %149)
  %tobool.not.i = icmp eq i32 %149, 0
  br i1 %tobool.not.i, label %if.end54.if.end64_crit_edge, label %lor.lhs.false.i132

if.end54.if.end64_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end64

lor.lhs.false.i132:                               ; preds = %if.end54
  %150 = ptrtoint ptr %kswapd.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %kswapd.i.i, align 4
  %tobool.not.i.i131 = icmp eq ptr %151, null
  br i1 %tobool.not.i.i131, label %lor.lhs.false.i132.for.body.i.i_crit_edge, label %kswapd_is_running.exit.i

lor.lhs.false.i132.for.body.i.i_crit_edge:        ; preds = %lor.lhs.false.i132
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i.i

kswapd_is_running.exit.i:                         ; preds = %lor.lhs.false.i132
  %152 = ptrtoint ptr %151 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load volatile i32, ptr %151, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %153)
  %cmp.i.i133 = icmp eq i32 %153, 0
  br i1 %cmp.i.i133, label %kswapd_is_running.exit.i.if.end64_crit_edge, label %kswapd_is_running.exit.i.for.body.i.i_crit_edge

kswapd_is_running.exit.i.for.body.i.i_crit_edge:  ; preds = %kswapd_is_running.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i.i

kswapd_is_running.exit.i.if.end64_crit_edge:      ; preds = %kswapd_is_running.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end64

for.body.i.i:                                     ; preds = %kswapd_is_running.exit.i.for.body.i.i_crit_edge, %lor.lhs.false.i132.for.body.i.i_crit_edge
  %sub.i.i134 = sub i32 100, %149
  %154 = call i32 @llvm.umax.i32(i32 %sub.i.i134, i32 5) #11
  %155 = ptrtoint ptr %present_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %present_pages.i.i.i, align 8
  %call.i.i.i.i = call i32 @extfrag_for_order(ptr noundef %p, i32 noundef 9) #11
  %mul.i.i.i = mul i32 %call.i.i.i.i, %156
  %157 = ptrtoint ptr %zone_pgdat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %zone_pgdat.i.i.i, align 4
  %node_present_pages.i.i.i = getelementptr inbounds %struct.pglist_data, ptr %158, i32 0, i32 6
  %159 = ptrtoint ptr %node_present_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %node_present_pages.i.i.i, align 8
  %add.i.i.i137 = add i32 %160, 1
  %div172.i.i.i.i.i = udiv i32 %mul.i.i.i, %add.i.i.i137
  %161 = ptrtoint ptr %present_pages.i.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %present_pages.i.i.i.1, align 8
  %call.i.i.i.i.1 = call i32 @extfrag_for_order(ptr noundef %arrayidx.i.i.1, i32 noundef 9) #11
  %mul.i.i.i.1 = mul i32 %call.i.i.i.i.1, %162
  %163 = ptrtoint ptr %zone_pgdat.i.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %zone_pgdat.i.i.i.1, align 4
  %node_present_pages.i.i.i.1 = getelementptr inbounds %struct.pglist_data, ptr %164, i32 0, i32 6
  %165 = ptrtoint ptr %node_present_pages.i.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %node_present_pages.i.i.i.1, align 8
  %add.i.i.i137.1 = add i32 %166, 1
  %div172.i.i.i.i.i.1 = udiv i32 %mul.i.i.i.1, %add.i.i.i137.1
  %add.i5.i.1 = add i32 %div172.i.i.i.i.i.1, %div172.i.i.i.i.i
  %167 = ptrtoint ptr %present_pages.i.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %present_pages.i.i.i.2, align 8
  %call.i.i.i.i.2 = call i32 @extfrag_for_order(ptr noundef %arrayidx.i.i.2, i32 noundef 9) #11
  %mul.i.i.i.2 = mul i32 %call.i.i.i.i.2, %168
  %169 = ptrtoint ptr %zone_pgdat.i.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %zone_pgdat.i.i.i.2, align 4
  %node_present_pages.i.i.i.2 = getelementptr inbounds %struct.pglist_data, ptr %170, i32 0, i32 6
  %171 = ptrtoint ptr %node_present_pages.i.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %node_present_pages.i.i.i.2, align 8
  %add.i.i.i137.2 = add i32 %172, 1
  %div172.i.i.i.i.i.2 = udiv i32 %mul.i.i.i.2, %add.i.i.i137.2
  %add.i5.i.2 = add i32 %div172.i.i.i.i.i.2, %add.i5.i.1
  %173 = ptrtoint ptr %present_pages.i.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %present_pages.i.i.i.3, align 8
  %call.i.i.i.i.3 = call i32 @extfrag_for_order(ptr noundef %arrayidx.i.i.3, i32 noundef 9) #11
  %mul.i.i.i.3 = mul i32 %call.i.i.i.i.3, %174
  %175 = ptrtoint ptr %zone_pgdat.i.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %zone_pgdat.i.i.i.3, align 4
  %node_present_pages.i.i.i.3 = getelementptr inbounds %struct.pglist_data, ptr %176, i32 0, i32 6
  %177 = ptrtoint ptr %node_present_pages.i.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %node_present_pages.i.i.i.3, align 8
  %add.i.i.i137.3 = add i32 %178, 1
  %div172.i.i.i.i.i.3 = udiv i32 %mul.i.i.i.3, %add.i.i.i137.3
  %add.i5.i.3 = add i32 %div172.i.i.i.i.i.3, %add.i5.i.2
  %add.i.i135 = add i32 %154, 10
  %179 = call i32 @llvm.umin.i32(i32 %add.i.i135, i32 100) #11
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i5.i.3, i32 %179)
  %cmp.i140 = icmp ugt i32 %add.i5.i.3, %179
  br i1 %cmp.i140, label %for.body.i144, label %for.body.i.i.if.end64_crit_edge

for.body.i.i.if.end64_crit_edge:                  ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end64

for.body.i144:                                    ; preds = %for.body.i.i
  %180 = ptrtoint ptr %present_pages.i.i142 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %present_pages.i.i142, align 8
  %call.i.i.i = call i32 @extfrag_for_order(ptr noundef %p, i32 noundef 9) #11
  %mul.i.i = mul i32 %call.i.i.i, %181
  %182 = ptrtoint ptr %zone_pgdat.i.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %zone_pgdat.i.i, align 4
  %node_present_pages.i.i = getelementptr inbounds %struct.pglist_data, ptr %183, i32 0, i32 6
  %184 = ptrtoint ptr %node_present_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %node_present_pages.i.i, align 8
  %add.i.i143 = add i32 %185, 1
  %div172.i.i.i.i = udiv i32 %mul.i.i, %add.i.i143
  %186 = ptrtoint ptr %present_pages.i.i142.1 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %present_pages.i.i142.1, align 8
  %call.i.i.i.1 = call i32 @extfrag_for_order(ptr noundef %arrayidx.i141.1, i32 noundef 9) #11
  %mul.i.i.1 = mul i32 %call.i.i.i.1, %187
  %188 = ptrtoint ptr %zone_pgdat.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %zone_pgdat.i.i.1, align 4
  %node_present_pages.i.i.1 = getelementptr inbounds %struct.pglist_data, ptr %189, i32 0, i32 6
  %190 = ptrtoint ptr %node_present_pages.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %node_present_pages.i.i.1, align 8
  %add.i.i143.1 = add i32 %191, 1
  %div172.i.i.i.i.1 = udiv i32 %mul.i.i.1, %add.i.i143.1
  %add.i.1 = add i32 %div172.i.i.i.i.1, %div172.i.i.i.i
  %192 = ptrtoint ptr %present_pages.i.i142.2 to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %present_pages.i.i142.2, align 8
  %call.i.i.i.2 = call i32 @extfrag_for_order(ptr noundef %arrayidx.i141.2, i32 noundef 9) #11
  %mul.i.i.2 = mul i32 %call.i.i.i.2, %193
  %194 = ptrtoint ptr %zone_pgdat.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %zone_pgdat.i.i.2, align 4
  %node_present_pages.i.i.2 = getelementptr inbounds %struct.pglist_data, ptr %195, i32 0, i32 6
  %196 = ptrtoint ptr %node_present_pages.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %node_present_pages.i.i.2, align 8
  %add.i.i143.2 = add i32 %197, 1
  %div172.i.i.i.i.2 = udiv i32 %mul.i.i.2, %add.i.i143.2
  %add.i.2 = add i32 %div172.i.i.i.i.2, %add.i.1
  %198 = ptrtoint ptr %present_pages.i.i142.3 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %present_pages.i.i142.3, align 8
  %call.i.i.i.3 = call i32 @extfrag_for_order(ptr noundef %arrayidx.i141.3, i32 noundef 9) #11
  %mul.i.i.3 = mul i32 %call.i.i.i.3, %199
  %200 = ptrtoint ptr %zone_pgdat.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %zone_pgdat.i.i.3, align 4
  %node_present_pages.i.i.3 = getelementptr inbounds %struct.pglist_data, ptr %201, i32 0, i32 6
  %202 = ptrtoint ptr %node_present_pages.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %node_present_pages.i.i.3, align 8
  %add.i.i143.3 = add i32 %203, 1
  %div172.i.i.i.i.3 = udiv i32 %mul.i.i.3, %add.i.i143.3
  %add.i.3 = add i32 %div172.i.i.i.i.3, %add.i.2
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %cc.i148) #11
  %204 = call ptr @memset(ptr %cc.i148, i32 0, i32 88)
  %205 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 3264, ptr %9, align 4
  %206 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 -1, ptr %10, align 4
  %207 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %207)
  store i32 1, ptr %11, align 4
  %208 = ptrtoint ptr %12 to i32
  call void @__asan_store1_noabort(i32 %208)
  store i8 1, ptr %12, align 4
  %209 = ptrtoint ptr %13 to i32
  call void @__asan_store1_noabort(i32 %209)
  store i8 1, ptr %13, align 4
  %210 = ptrtoint ptr %14 to i32
  call void @__asan_store1_noabort(i32 %210)
  store i8 1, ptr %14, align 1
  %211 = ptrtoint ptr %present_pages.i.i150 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %present_pages.i.i150, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %212)
  %tobool.i.not.i151 = icmp eq i32 %212, 0
  br i1 %tobool.i.not.i151, label %for.body.i144.for.inc.i153_crit_edge, label %if.end.i152

for.body.i144.for.inc.i153_crit_edge:             ; preds = %for.body.i144
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i153

if.end.i152:                                      ; preds = %for.body.i144
  %213 = ptrtoint ptr %zone1.i to i32
  call void @__asan_store4_noabort(i32 %213)
  store ptr %p, ptr %zone1.i, align 4
  %call2.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i148, ptr noundef null) #11
  %214 = ptrtoint ptr %cc.i148 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load volatile ptr, ptr %cc.i148, align 4
  %cmp.i.not.i = icmp eq ptr %215, %cc.i148
  br i1 %cmp.i.not.i, label %do.body15.i, label %if.end.i152.do.body8.i_crit_edge, !prof !434

if.end.i152.do.body8.i_crit_edge:                 ; preds = %if.end.i152
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body8.i

do.body8.i:                                       ; preds = %if.end.3.i.do.body8.i_crit_edge, %if.end.2.i.do.body8.i_crit_edge, %if.end.1.i.do.body8.i_crit_edge, %if.end.i152.do.body8.i_crit_edge
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2656, 0\0A.popsection", ""() #11, !srcloc !482
  unreachable

do.body15.i:                                      ; preds = %if.end.i152
  %216 = ptrtoint ptr %migratepages.i149 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load volatile ptr, ptr %migratepages.i149, align 4
  %cmp.i39.not.i = icmp eq ptr %217, %migratepages.i149
  br i1 %cmp.i39.not.i, label %do.body15.i.for.inc.i153_crit_edge, label %do.body15.i.do.body27.i_crit_edge, !prof !434

do.body15.i.do.body27.i_crit_edge:                ; preds = %do.body15.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body27.i

do.body15.i.for.inc.i153_crit_edge:               ; preds = %do.body15.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i153

do.body27.i:                                      ; preds = %do.body15.3.i.do.body27.i_crit_edge, %do.body15.2.i.do.body27.i_crit_edge, %do.body15.1.i.do.body27.i_crit_edge, %do.body15.i.do.body27.i_crit_edge
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2657, 0\0A.popsection", ""() #11, !srcloc !483
  unreachable

for.inc.i153:                                     ; preds = %do.body15.i.for.inc.i153_crit_edge, %for.body.i144.for.inc.i153_crit_edge
  %218 = ptrtoint ptr %present_pages.i.1.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %present_pages.i.1.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %219)
  %tobool.i.not.1.i = icmp eq i32 %219, 0
  br i1 %tobool.i.not.1.i, label %for.inc.i153.for.inc.1.i_crit_edge, label %if.end.1.i

for.inc.i153.for.inc.1.i_crit_edge:               ; preds = %for.inc.i153
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.1.i

if.end.1.i:                                       ; preds = %for.inc.i153
  %220 = ptrtoint ptr %zone1.i to i32
  call void @__asan_store4_noabort(i32 %220)
  store ptr %arrayidx.1.i, ptr %zone1.i, align 4
  %call2.1.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i148, ptr noundef null) #11
  %221 = ptrtoint ptr %cc.i148 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load volatile ptr, ptr %cc.i148, align 4
  %cmp.i.not.1.i = icmp eq ptr %222, %cc.i148
  br i1 %cmp.i.not.1.i, label %do.body15.1.i, label %if.end.1.i.do.body8.i_crit_edge, !prof !434

if.end.1.i.do.body8.i_crit_edge:                  ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body8.i

do.body15.1.i:                                    ; preds = %if.end.1.i
  %223 = ptrtoint ptr %migratepages.i149 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load volatile ptr, ptr %migratepages.i149, align 4
  %cmp.i39.not.1.i = icmp eq ptr %224, %migratepages.i149
  br i1 %cmp.i39.not.1.i, label %do.body15.1.i.for.inc.1.i_crit_edge, label %do.body15.1.i.do.body27.i_crit_edge, !prof !434

do.body15.1.i.do.body27.i_crit_edge:              ; preds = %do.body15.1.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body27.i

do.body15.1.i.for.inc.1.i_crit_edge:              ; preds = %do.body15.1.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %do.body15.1.i.for.inc.1.i_crit_edge, %for.inc.i153.for.inc.1.i_crit_edge
  %225 = ptrtoint ptr %present_pages.i.2.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %present_pages.i.2.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %226)
  %tobool.i.not.2.i = icmp eq i32 %226, 0
  br i1 %tobool.i.not.2.i, label %for.inc.1.i.for.inc.2.i_crit_edge, label %if.end.2.i

for.inc.1.i.for.inc.2.i_crit_edge:                ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.2.i

if.end.2.i:                                       ; preds = %for.inc.1.i
  %227 = ptrtoint ptr %zone1.i to i32
  call void @__asan_store4_noabort(i32 %227)
  store ptr %arrayidx.2.i, ptr %zone1.i, align 4
  %call2.2.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i148, ptr noundef null) #11
  %228 = ptrtoint ptr %cc.i148 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load volatile ptr, ptr %cc.i148, align 4
  %cmp.i.not.2.i = icmp eq ptr %229, %cc.i148
  br i1 %cmp.i.not.2.i, label %do.body15.2.i, label %if.end.2.i.do.body8.i_crit_edge, !prof !434

if.end.2.i.do.body8.i_crit_edge:                  ; preds = %if.end.2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body8.i

do.body15.2.i:                                    ; preds = %if.end.2.i
  %230 = ptrtoint ptr %migratepages.i149 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load volatile ptr, ptr %migratepages.i149, align 4
  %cmp.i39.not.2.i = icmp eq ptr %231, %migratepages.i149
  br i1 %cmp.i39.not.2.i, label %do.body15.2.i.for.inc.2.i_crit_edge, label %do.body15.2.i.do.body27.i_crit_edge, !prof !434

do.body15.2.i.do.body27.i_crit_edge:              ; preds = %do.body15.2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body27.i

do.body15.2.i.for.inc.2.i_crit_edge:              ; preds = %do.body15.2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.2.i

for.inc.2.i:                                      ; preds = %do.body15.2.i.for.inc.2.i_crit_edge, %for.inc.1.i.for.inc.2.i_crit_edge
  %232 = ptrtoint ptr %present_pages.i.3.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %present_pages.i.3.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %233)
  %tobool.i.not.3.i = icmp eq i32 %233, 0
  br i1 %tobool.i.not.3.i, label %for.inc.2.i.proactive_compact_node.exit_crit_edge, label %if.end.3.i

for.inc.2.i.proactive_compact_node.exit_crit_edge: ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %proactive_compact_node.exit

if.end.3.i:                                       ; preds = %for.inc.2.i
  %234 = ptrtoint ptr %zone1.i to i32
  call void @__asan_store4_noabort(i32 %234)
  store ptr %arrayidx.3.i, ptr %zone1.i, align 4
  %call2.3.i = call fastcc i32 @compact_zone(ptr noundef nonnull %cc.i148, ptr noundef null) #11
  %235 = ptrtoint ptr %cc.i148 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load volatile ptr, ptr %cc.i148, align 4
  %cmp.i.not.3.i = icmp eq ptr %236, %cc.i148
  br i1 %cmp.i.not.3.i, label %do.body15.3.i, label %if.end.3.i.do.body8.i_crit_edge, !prof !434

if.end.3.i.do.body8.i_crit_edge:                  ; preds = %if.end.3.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body8.i

do.body15.3.i:                                    ; preds = %if.end.3.i
  %237 = ptrtoint ptr %migratepages.i149 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load volatile ptr, ptr %migratepages.i149, align 4
  %cmp.i39.not.3.i = icmp eq ptr %238, %migratepages.i149
  br i1 %cmp.i39.not.3.i, label %do.body15.3.i.proactive_compact_node.exit_crit_edge, label %do.body15.3.i.do.body27.i_crit_edge, !prof !434

do.body15.3.i.do.body27.i_crit_edge:              ; preds = %do.body15.3.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body27.i

do.body15.3.i.proactive_compact_node.exit_crit_edge: ; preds = %do.body15.3.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %proactive_compact_node.exit

proactive_compact_node.exit:                      ; preds = %do.body15.3.i.proactive_compact_node.exit_crit_edge, %for.inc.2.i.proactive_compact_node.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %cc.i148) #11
  %239 = ptrtoint ptr %present_pages.i.i157 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %present_pages.i.i157, align 8
  %call.i.i.i158 = call i32 @extfrag_for_order(ptr noundef %p, i32 noundef 9) #11
  %mul.i.i159 = mul i32 %call.i.i.i158, %240
  %241 = ptrtoint ptr %zone_pgdat.i.i161 to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %zone_pgdat.i.i161, align 4
  %node_present_pages.i.i162 = getelementptr inbounds %struct.pglist_data, ptr %242, i32 0, i32 6
  %243 = ptrtoint ptr %node_present_pages.i.i162 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %node_present_pages.i.i162, align 8
  %add.i.i163 = add i32 %244, 1
  %div172.i.i.i.i269 = udiv i32 %mul.i.i159, %add.i.i163
  %245 = ptrtoint ptr %present_pages.i.i157.1 to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %present_pages.i.i157.1, align 8
  %call.i.i.i158.1 = call i32 @extfrag_for_order(ptr noundef %arrayidx.i156.1, i32 noundef 9) #11
  %mul.i.i159.1 = mul i32 %call.i.i.i158.1, %246
  %247 = ptrtoint ptr %zone_pgdat.i.i161.1 to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %zone_pgdat.i.i161.1, align 4
  %node_present_pages.i.i162.1 = getelementptr inbounds %struct.pglist_data, ptr %248, i32 0, i32 6
  %249 = ptrtoint ptr %node_present_pages.i.i162.1 to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load i32, ptr %node_present_pages.i.i162.1, align 8
  %add.i.i163.1 = add i32 %250, 1
  %div172.i.i.i.i269.1 = udiv i32 %mul.i.i159.1, %add.i.i163.1
  %add.i272.1 = add i32 %div172.i.i.i.i269.1, %div172.i.i.i.i269
  %251 = ptrtoint ptr %present_pages.i.i157.2 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %present_pages.i.i157.2, align 8
  %call.i.i.i158.2 = call i32 @extfrag_for_order(ptr noundef %arrayidx.i156.2, i32 noundef 9) #11
  %mul.i.i159.2 = mul i32 %call.i.i.i158.2, %252
  %253 = ptrtoint ptr %zone_pgdat.i.i161.2 to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load ptr, ptr %zone_pgdat.i.i161.2, align 4
  %node_present_pages.i.i162.2 = getelementptr inbounds %struct.pglist_data, ptr %254, i32 0, i32 6
  %255 = ptrtoint ptr %node_present_pages.i.i162.2 to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load i32, ptr %node_present_pages.i.i162.2, align 8
  %add.i.i163.2 = add i32 %256, 1
  %div172.i.i.i.i269.2 = udiv i32 %mul.i.i159.2, %add.i.i163.2
  %add.i272.2 = add i32 %div172.i.i.i.i269.2, %add.i272.1
  %257 = ptrtoint ptr %present_pages.i.i157.3 to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %present_pages.i.i157.3, align 8
  %call.i.i.i158.3 = call i32 @extfrag_for_order(ptr noundef %arrayidx.i156.3, i32 noundef 9) #11
  %mul.i.i159.3 = mul i32 %call.i.i.i158.3, %258
  %259 = ptrtoint ptr %zone_pgdat.i.i161.3 to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load ptr, ptr %zone_pgdat.i.i161.3, align 4
  %node_present_pages.i.i162.3 = getelementptr inbounds %struct.pglist_data, ptr %260, i32 0, i32 6
  %261 = ptrtoint ptr %node_present_pages.i.i162.3 to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load i32, ptr %node_present_pages.i.i162.3, align 8
  %add.i.i163.3 = add i32 %262, 1
  %div172.i.i.i.i269.3 = udiv i32 %mul.i.i159.3, %add.i.i163.3
  %add.i272.3 = add i32 %div172.i.i.i.i269.3, %add.i272.2
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i272.3, i32 %add.i.3)
  %cmp.not = icmp ult i32 %add.i272.3, %add.i.3
  br i1 %cmp.not, label %proactive_compact_node.exit.if.end64_crit_edge, label %if.then62, !prof !434

proactive_compact_node.exit.if.end64_crit_edge:   ; preds = %proactive_compact_node.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end64

if.then62:                                        ; preds = %proactive_compact_node.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end64

if.end64:                                         ; preds = %if.then62, %proactive_compact_node.exit.if.end64_crit_edge, %for.body.i.i.if.end64_crit_edge, %kswapd_is_running.exit.i.if.end64_crit_edge, %if.end54.if.end64_crit_edge
  %timeout.3 = phi i32 [ 50, %for.body.i.i.if.end64_crit_edge ], [ 3200, %if.then62 ], [ 50, %proactive_compact_node.exit.if.end64_crit_edge ], [ 50, %kswapd_is_running.exit.i.if.end64_crit_edge ], [ 50, %if.end54.if.end64_crit_edge ]
  %263 = ptrtoint ptr %proactive_compact_trigger.i to i32
  call void @__asan_load1_noabort(i32 %263)
  %264 = load i8, ptr %proactive_compact_trigger.i, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %264)
  %tobool66.not = icmp eq i8 %264, 0
  br i1 %tobool66.not, label %if.end64.cleanup76_crit_edge, label %if.then73, !prof !434

if.end64.cleanup76_crit_edge:                     ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup76

if.then73:                                        ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #13
  %265 = ptrtoint ptr %proactive_compact_trigger.i to i32
  call void @__asan_store1_noabort(i32 %265)
  store i8 0, ptr %proactive_compact_trigger.i, align 4
  br label %cleanup76

cleanup76:                                        ; preds = %if.then73, %if.end64.cleanup76_crit_edge, %kcompactd_do_work.exit
  %timeout.4 = phi i32 [ 50, %kcompactd_do_work.exit ], [ %timeout.3, %if.then73 ], [ %timeout.3, %if.end64.cleanup76_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pflags) #11
  %call5 = call zeroext i1 @kthread_should_stop() #11
  br i1 %call5, label %cleanup76.while.end_crit_edge, label %cleanup76.while.body_crit_edge

cleanup76.while.body_crit_edge:                   ; preds = %cleanup76
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.body

cleanup76.while.end_crit_edge:                    ; preds = %cleanup76
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.end:                                        ; preds = %cleanup76.while.end_crit_edge, %if.end.while.end_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kcompactd_stop(i32 noundef %nid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21) to i32))
  %0 = load ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21), align 16
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %call2 = tail call i32 @kthread_stop(ptr noundef nonnull %0) #11
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21) to i32))
  store ptr null, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21), align 16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kthread_stop(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @kcompactd_init() #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @__cpuhp_setup_state(i32 noundef 194, ptr noundef nonnull @.str.140, i1 noundef zeroext false, ptr noundef nonnull @kcompactd_cpu_online, ptr noundef null, i1 noundef zeroext false) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %do.end, label %for.body

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.141) #15
  br label %cleanup

for.body:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %call3 = tail call i32 @kcompactd_run(i32 noundef 0)
  br label %cleanup

cleanup:                                          ; preds = %for.body, %do.end
  %retval.0 = phi i32 [ %call.i, %do.end ], [ 0, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_compaction_isolate_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %start_pfn = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %start_pfn, align 4
  %end_pfn = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %end_pfn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %end_pfn, align 4
  %nr_scanned = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_scanned, align 4
  %nr_taken = getelementptr inbounds %struct.trace_event_raw_mm_compaction_isolate_template, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %nr_taken to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_taken, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.33, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #11
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_compaction_migratepages(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nr_migrated = getelementptr inbounds %struct.trace_event_raw_mm_compaction_migratepages, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nr_migrated to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_migrated, align 4
  %nr_failed = getelementptr inbounds %struct.trace_event_raw_mm_compaction_migratepages, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nr_failed to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_failed, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.36, i32 noundef %3, i32 noundef %5) #11
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_compaction_begin(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %zone_start = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %zone_start to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %zone_start, align 4
  %migrate_pfn = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %migrate_pfn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %migrate_pfn, align 4
  %free_pfn = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %free_pfn to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %free_pfn, align 4
  %zone_end = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %zone_end to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %zone_end, align 4
  %sync = getelementptr inbounds %struct.trace_event_raw_mm_compaction_begin, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %sync to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %sync, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not = icmp eq i8 %11, 0
  %cond = select i1 %tobool.not, ptr @.str.44, ptr @.str.42
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.43, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, ptr noundef nonnull %cond) #11
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_compaction_end(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %zone_start = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %zone_start to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %zone_start, align 4
  %migrate_pfn = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %migrate_pfn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %migrate_pfn, align 4
  %free_pfn = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %free_pfn to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %free_pfn, align 4
  %zone_end = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %zone_end to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %zone_end, align 4
  %sync = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %sync to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %sync, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not = icmp eq i8 %11, 0
  %cond = select i1 %tobool.not, ptr @.str.44, ptr @.str.42
  %status = getelementptr inbounds %struct.trace_event_raw_mm_compaction_end, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %status, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %13, ptr noundef nonnull @trace_raw_output_mm_compaction_end.symbols) #11
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.47, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, ptr noundef nonnull %cond, ptr noundef %call1) #11
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_compaction_try_to_compact_pages(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %order = getelementptr inbounds %struct.trace_event_raw_mm_compaction_try_to_compact_pages, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %order, align 4
  %gfp_mask = getelementptr inbounds %struct.trace_event_raw_mm_compaction_try_to_compact_pages, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gfp_mask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.99, i32 noundef %5, ptr noundef nonnull @trace_raw_output_mm_compaction_try_to_compact_pages.__flags) #11
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call2, %cond.true ], [ @.str.100, %if.end.cond.end_crit_edge ]
  %prio = getelementptr inbounds %struct.trace_event_raw_mm_compaction_try_to_compact_pages, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %prio to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %prio, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.61, i32 noundef %3, ptr noundef %cond, i32 noundef %7) #11
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_compaction_suitable_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  %idx = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %idx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %idx, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_mm_compaction_suitable_template.symbols) #11
  %order = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %order, align 4
  %ret3 = getelementptr inbounds %struct.trace_event_raw_mm_compaction_suitable_template, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %ret3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ret3, align 4
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_mm_compaction_suitable_template.symbols.110) #11
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.105, i32 noundef %3, ptr noundef %call1, i32 noundef %7, ptr noundef %call4) #11
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_compaction_defer_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  %idx = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %idx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %idx, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_mm_compaction_defer_template.symbols) #11
  %order = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %order, align 4
  %order_failed = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %1, i32 0, i32 6
  %8 = ptrtoint ptr %order_failed to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %order_failed, align 4
  %considered = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %considered to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %considered, align 4
  %defer_shift = getelementptr inbounds %struct.trace_event_raw_mm_compaction_defer_template, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %defer_shift to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %defer_shift, align 4
  %shl = shl nuw i32 1, %13
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.115, i32 noundef %3, ptr noundef %call1, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %shl) #11
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_compaction_kcompactd_sleep(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_compaction_kcompactd_sleep, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.116, i32 noundef %3) #11
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_kcompactd_wake_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nid = getelementptr inbounds %struct.trace_event_raw_kcompactd_wake_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  %order = getelementptr inbounds %struct.trace_event_raw_kcompactd_wake_template, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %order, align 4
  %highest_zoneidx = getelementptr inbounds %struct.trace_event_raw_kcompactd_wake_template, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %highest_zoneidx, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_kcompactd_wake_template.symbols) #11
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.118, i32 noundef %3, i32 noundef %5, ptr noundef %call1) #11
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #6

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #6

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run6(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__reset_isolation_pfn(ptr noundef readonly %zone, i32 noundef %pfn, i1 noundef zeroext %check_source, i1 noundef zeroext %check_target) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pfn_valid(i32 noundef %pfn) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub = sub i32 %pfn, %1
  %add.ptr = getelementptr %struct.page, ptr %0, i32 %sub
  %tobool2.not = icmp eq ptr %add.ptr, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp.i.not.i.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i134, label %page_zone.exit, !prof !435

if.then.i.i134:                                   ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %add.ptr, ptr noundef nonnull @.str.123) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #11, !srcloc !461
  unreachable

page_zone.exit:                                   ; preds = %if.end4
  %shr.i.i135 = lshr i32 %3, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i135
  %cmp.not = icmp eq ptr %arrayidx.i, %zone
  br i1 %cmp.not, label %if.end7, label %page_zone.exit.cleanup_crit_edge

page_zone.exit.cleanup_crit_edge:                 ; preds = %page_zone.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end7:                                          ; preds = %page_zone.exit
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %add.ptr, align 4
  %6 = and i32 %5, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i.i136 = icmp eq i32 %6, 0
  br i1 %tobool.not.i.i136, label %PageCompound.exit.i, label %if.end7.if.end.i_crit_edge

if.end7.if.end.i_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i

PageCompound.exit.i:                              ; preds = %if.end7
  %7 = getelementptr %struct.page, ptr %0, i32 %sub, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 4
  %and.i.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %PageCompound.exit.i.if.end10_crit_edge, label %PageCompound.exit.i.if.end.i_crit_edge

PageCompound.exit.i.if.end.i_crit_edge:           ; preds = %PageCompound.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i

PageCompound.exit.i.if.end10_crit_edge:           ; preds = %PageCompound.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end10

if.end.i:                                         ; preds = %PageCompound.exit.i.if.end.i_crit_edge, %if.end7.if.end.i_crit_edge
  %10 = getelementptr %struct.page, ptr %0, i32 %sub, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  %and.i.i137 = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i137)
  %tobool.not.i7.i = icmp eq i32 %and.i.i137, 0
  br i1 %tobool.not.i7.i, label %if.end.i.i140, label %if.then.i.i139, !prof !434

if.then.i.i139:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i138 = add i32 %12, -1
  br label %_compound_head.exit.i142

if.end.i.i140:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  %13 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i142

_compound_head.exit.i142:                         ; preds = %if.end.i.i140, %if.then.i.i139
  %retval.0.i.i141 = phi i32 [ %sub.i.i138, %if.then.i.i139 ], [ %13, %if.end.i.i140 ]
  %14 = inttoptr i32 %retval.0.i.i141 to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %16)
  %cmp.i.not.i.i.i = icmp eq i32 %16, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %PageHead.exit.i.i, !prof !435

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i142
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %14, ptr noundef nonnull @.str.124) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !448
  unreachable

PageHead.exit.i.i:                                ; preds = %_compound_head.exit.i142
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %14, align 4
  %19 = and i32 %18, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i8.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i8.i, label %PageHead.exit.i.i.if.end10_crit_edge, label %pageblock_skip_persistent.exit

PageHead.exit.i.i.if.end10_crit_edge:             ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end10

pageblock_skip_persistent.exit:                   ; preds = %PageHead.exit.i.i
  %20 = getelementptr %struct.page, ptr %14, i32 1, i32 1
  %compound_order.i.i = getelementptr inbounds %struct.anon.69, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %compound_order.i.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %compound_order.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %22)
  %phi.cmp.i = icmp ugt i8 %22, 10
  br i1 %phi.cmp.i, label %pageblock_skip_persistent.exit.cleanup_crit_edge, label %pageblock_skip_persistent.exit.if.end10_crit_edge

pageblock_skip_persistent.exit.if.end10_crit_edge: ; preds = %pageblock_skip_persistent.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end10

pageblock_skip_persistent.exit.cleanup_crit_edge: ; preds = %pageblock_skip_persistent.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end10:                                         ; preds = %pageblock_skip_persistent.exit.if.end10_crit_edge, %PageHead.exit.i.i.if.end10_crit_edge, %PageCompound.exit.i.if.end10_crit_edge
  %check_target.not = xor i1 %check_target, true
  %23 = and i1 %check_source, %check_target
  br i1 %23, label %land.lhs.true13, label %if.end10.if.end17_crit_edge

if.end10.if.end17_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end17

land.lhs.true13:                                  ; preds = %if.end10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %24 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %add.ptr to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %24 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %25 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %25
  %call14 = tail call i32 @get_pfnblock_flags_mask(ptr noundef nonnull %add.ptr, i32 noundef %add, i32 noundef 8) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %land.lhs.true13.cleanup_crit_edge, label %land.lhs.true13.if.end17_crit_edge

land.lhs.true13.if.end17_crit_edge:               ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end17

land.lhs.true13.cleanup_crit_edge:                ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end17:                                         ; preds = %land.lhs.true13.if.end17_crit_edge, %if.end10.if.end17_crit_edge
  %brmerge132 = or i1 %check_target.not, %check_source
  br i1 %brmerge132, label %if.end17.if.end30_crit_edge, label %land.lhs.true21

if.end17.if.end30_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end30

land.lhs.true21:                                  ; preds = %if.end17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %26 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast22 = ptrtoint ptr %add.ptr to i32
  %sub.ptr.rhs.cast23 = ptrtoint ptr %26 to i32
  %sub.ptr.sub24 = sub i32 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23
  %sub.ptr.div25 = sdiv exact i32 %sub.ptr.sub24, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %27 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add26 = add i32 %sub.ptr.div25, %27
  %call27 = tail call i32 @get_pfnblock_flags_mask(ptr noundef nonnull %add.ptr, i32 noundef %add26, i32 noundef 7) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call27)
  %cmp28.not = icmp eq i32 %call27, 1
  br i1 %cmp28.not, label %land.lhs.true21.if.end30_crit_edge, label %land.lhs.true21.cleanup_crit_edge

land.lhs.true21.cleanup_crit_edge:                ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

land.lhs.true21.if.end30_crit_edge:               ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end30

if.end30:                                         ; preds = %land.lhs.true21.if.end30_crit_edge, %if.end17.if.end30_crit_edge
  %and = and i32 %pfn, -2048
  %zone_start_pfn = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %28 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %zone_start_pfn, align 4
  %30 = tail call i32 @llvm.umax.i32(i32 %and, i32 %29)
  %call34 = tail call i32 @pfn_valid(i32 noundef %30) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.end30.if.end39_crit_edge, label %if.then36

if.end30.if.end39_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end39

if.then36:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %31 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %32 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub37 = sub i32 %30, %32
  %add.ptr38 = getelementptr %struct.page, ptr %31, i32 %sub37
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %if.end30.if.end39_crit_edge
  %___page33.0 = phi ptr [ %add.ptr38, %if.then36 ], [ null, %if.end30.if.end39_crit_edge ]
  %tobool41.not = icmp eq ptr %___page33.0, null
  %spec.select133 = select i1 %tobool41.not, i32 %pfn, i32 %30
  %add45 = add i32 %spec.select133, 2048
  %and46 = and i32 %add45, -2048
  %sub47 = add i32 %and46, -1
  %33 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %zone_start_pfn, align 4
  %spanned_pages.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %35 = ptrtoint ptr %spanned_pages.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %spanned_pages.i, align 4
  %add.i = add i32 %34, -1
  %sub49 = add i32 %add.i, %36
  %37 = tail call i32 @llvm.umin.i32(i32 %sub47, i32 %sub49)
  %call57 = tail call i32 @pfn_valid(i32 noundef %37) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57)
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %if.end39.cleanup_crit_edge, label %if.end62

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end62:                                         ; preds = %if.end39
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %38 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %39 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub60 = sub i32 %37, %39
  %add.ptr61 = getelementptr %struct.page, ptr %38, i32 %sub60
  %tobool64.not = icmp eq ptr %add.ptr61, null
  br i1 %tobool64.not, label %if.end62.cleanup_crit_edge, label %do.body.preheader

if.end62.cleanup_crit_edge:                       ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

do.body.preheader:                                ; preds = %if.end62
  %spec.select = select i1 %tobool41.not, ptr %add.ptr, ptr %___page33.0
  br label %do.body

do.body:                                          ; preds = %if.end88.do.body_crit_edge, %do.body.preheader
  %page.1 = phi ptr [ %add.ptr89, %if.end88.do.body_crit_edge ], [ %spec.select, %do.body.preheader ]
  br i1 %check_source, label %land.lhs.true68, label %do.body.if.end77_crit_edge

do.body.if.end77_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end77

land.lhs.true68:                                  ; preds = %do.body
  %40 = getelementptr inbounds %struct.page, ptr %page.1, i32 0, i32 1
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  %and.i.i = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !434

if.then.i.i:                                      ; preds = %land.lhs.true68
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i = add i32 %42, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %land.lhs.true68
  call void @__sanitizer_cov_trace_pc() #13
  %43 = ptrtoint ptr %page.1 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %43, %if.end.i.i ]
  %44 = inttoptr i32 %retval.0.i.i to ptr
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %44, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %46)
  %cmp.i.not.i = icmp eq i32 %46, -1
  %47 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %40, align 4
  %and.i13.i = and i32 %48, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !435

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !434

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i15.i = add i32 %48, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %49 = ptrtoint ptr %page.1 to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %49, %if.end.i17.i ]
  %50 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %50, ptr noundef nonnull @.str.119) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #11, !srcloc !452
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !434

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i22.i = add i32 %48, -1
  br label %PageLRU.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #13
  %51 = ptrtoint ptr %page.1 to i32
  br label %PageLRU.exit

PageLRU.exit:                                     ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %51, %if.end.i24.i ]
  %52 = inttoptr i32 %retval.0.i25.i to ptr
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %52, align 4
  %55 = and i32 %54, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool70.not = icmp eq i32 %55, 0
  br i1 %tobool70.not, label %PageLRU.exit.if.end77_crit_edge, label %PageLRU.exit.cleanup.sink.split_crit_edge

PageLRU.exit.cleanup.sink.split_crit_edge:        ; preds = %PageLRU.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

PageLRU.exit.if.end77_crit_edge:                  ; preds = %PageLRU.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end77

if.end77:                                         ; preds = %PageLRU.exit.if.end77_crit_edge, %do.body.if.end77_crit_edge
  br i1 %check_target, label %land.lhs.true79, label %if.end77.if.end88_crit_edge

if.end77.if.end88_crit_edge:                      ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end88

land.lhs.true79:                                  ; preds = %if.end77
  %56 = getelementptr inbounds %struct.page, ptr %page.1, i32 0, i32 2
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %56, align 4
  %and.i = and i32 %58, -268435328
  call void @__sanitizer_cov_trace_const_cmp4(i32 -268435456, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, -268435456
  br i1 %cmp.i.not, label %land.lhs.true79.cleanup.sink.split_crit_edge, label %land.lhs.true79.if.end88_crit_edge

land.lhs.true79.if.end88_crit_edge:               ; preds = %land.lhs.true79
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end88

land.lhs.true79.cleanup.sink.split_crit_edge:     ; preds = %land.lhs.true79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

if.end88:                                         ; preds = %land.lhs.true79.if.end88_crit_edge, %if.end77.if.end88_crit_edge
  %add.ptr89 = getelementptr %struct.page, ptr %page.1, i32 8
  %cmp91.not = icmp ugt ptr %add.ptr89, %add.ptr61
  br i1 %cmp91.not, label %if.end88.cleanup_crit_edge, label %if.end88.do.body_crit_edge

if.end88.do.body_crit_edge:                       ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

if.end88.cleanup_crit_edge:                       ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

cleanup.sink.split:                               ; preds = %land.lhs.true79.cleanup.sink.split_crit_edge, %PageLRU.exit.cleanup.sink.split_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %59 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast83 = ptrtoint ptr %page.1 to i32
  %sub.ptr.rhs.cast84 = ptrtoint ptr %59 to i32
  %sub.ptr.sub85 = sub i32 %sub.ptr.lhs.cast83, %sub.ptr.rhs.cast84
  %sub.ptr.div86 = sdiv exact i32 %sub.ptr.sub85, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %60 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add87 = add i32 %sub.ptr.div86, %60
  tail call void @set_pfnblock_flags_mask(ptr noundef %page.1, i32 noundef 0, i32 noundef %add87, i32 noundef 8) #11
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end88.cleanup_crit_edge, %if.end62.cleanup_crit_edge, %if.end39.cleanup_crit_edge, %land.lhs.true21.cleanup_crit_edge, %land.lhs.true13.cleanup_crit_edge, %pageblock_skip_persistent.exit.cleanup_crit_edge, %page_zone.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %if.end.cleanup_crit_edge ], [ false, %page_zone.exit.cleanup_crit_edge ], [ false, %pageblock_skip_persistent.exit.cleanup_crit_edge ], [ true, %land.lhs.true13.cleanup_crit_edge ], [ false, %land.lhs.true21.cleanup_crit_edge ], [ false, %if.end62.cleanup_crit_edge ], [ false, %entry.cleanup_crit_edge ], [ false, %if.end39.cleanup_crit_edge ], [ true, %cleanup.sink.split ], [ false, %if.end88.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pfn_valid(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_pfnblock_flags_mask(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_pfnblock_flags_mask(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__pageblock_pfn_to_page(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @compact_lock_irqsave(ptr noundef %lock, ptr nocapture noundef %flags, ptr nocapture noundef %cc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %mode = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 17
  %0 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %land.lhs.true, label %entry.do.body53_crit_edge

entry.do.body53_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body53

land.lhs.true:                                    ; preds = %entry
  %contended = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 24
  %2 = ptrtoint ptr %contended to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %contended, align 2, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %do.body1, label %land.lhs.true.do.body53_crit_edge

land.lhs.true.do.body53_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body53

do.body1:                                         ; preds = %land.lhs.true
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !449
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %flags, align 4
  %and.i = and i32 %4, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool11.not = icmp eq i32 %and.i, 0
  br i1 %tobool11.not, label %if.then12, label %do.body1.do.end13_crit_edge

do.body1.do.end13_crit_edge:                      ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end13

if.then12:                                        ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @trace_hardirqs_off() #11
  br label %do.end13

do.end13:                                         ; preds = %if.then12, %do.body1.do.end13_crit_edge
  %call16 = tail call i32 @_raw_spin_trylock(ptr noundef %lock) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %do.body18, label %do.end13.return_crit_edge

do.end13.return_crit_edge:                        ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

do.body18:                                        ; preds = %do.end13
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and.i1 = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1)
  %tobool26.not = icmp eq i32 %and.i1, 0
  br i1 %tobool26.not, label %if.then27, label %do.body18.do.body29_crit_edge

do.body18.do.body29_crit_edge:                    ; preds = %do.body18
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body29

if.then27:                                        ; preds = %do.body18
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @trace_hardirqs_on() #11
  br label %do.body29

do.body29:                                        ; preds = %if.then27, %do.body18.do.body29_crit_edge
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !450
  %and.i.i = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool37.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool37.not, label %if.then41, label %do.body29.do.end43_crit_edge, !prof !435

do.body29.do.end43_crit_edge:                     ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end43

if.then41:                                        ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @warn_bogus_irq_restore() #11
  br label %do.end43

do.end43:                                         ; preds = %if.then41, %do.body29.do.end43_crit_edge
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #11, !srcloc !451
  %11 = ptrtoint ptr %contended to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 1, ptr %contended, align 2
  br label %do.body53

do.body53:                                        ; preds = %do.end43, %land.lhs.true.do.body53_crit_edge, %entry.do.body53_crit_edge
  %call60 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #11
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %call60, ptr %flags, align 4
  br label %return

return:                                           ; preds = %do.body53, %do.end13.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__isolate_free_page(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_isolate_freepages(i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_isolate_freepages, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_isolate_freepages, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !484
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_isolate_freepages, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !485
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !485
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_isolate_freepages, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_isolate_freepages.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_isolate_freepages.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 65, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @post_alloc_hook(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @split_page(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__free_pages(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @reclaim_throttle(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @compound_nr(ptr noundef %page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp.i.not.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PageHead.exit, !prof !435

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.124) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !448
  unreachable

PageHead.exit:                                    ; preds = %entry
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  %4 = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %PageHead.exit.return_crit_edge, label %if.end

PageHead.exit.return_crit_edge:                   ; preds = %PageHead.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end:                                           ; preds = %PageHead.exit
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr = getelementptr %struct.page, ptr %page, i32 1, i32 1, i32 0, i32 2
  %5 = ptrtoint ptr %compound_nr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %compound_nr, align 4
  br label %return

return:                                           ; preds = %if.end, %PageHead.exit.return_crit_edge
  %retval.0 = phi i32 [ %6, %if.end ], [ 1, %PageHead.exit.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @isolate_movable_page(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__isolate_lru_page_prepare(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @folio_lruvec(ptr noundef %folio) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %do.body7.i.i, label %if.then.i.i, !prof !434

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.128) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 537, 0\0A.popsection", ""() #11, !srcloc !486
  unreachable

do.body7.i.i:                                     ; preds = %entry
  %memcg_data.i.i = getelementptr inbounds %struct.anon.81, ptr %folio, i32 0, i32 7
  %3 = ptrtoint ptr %memcg_data.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %memcg_data.i.i, align 4
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool8.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool8.not.i.i, label %folio_memcg_kmem.exit.i, label %if.then15.i.i, !prof !434

if.then15.i.i:                                    ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.129) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 538, 0\0A.popsection", ""() #11, !srcloc !487
  unreachable

folio_memcg_kmem.exit.i:                          ; preds = %do.body7.i.i
  %and23.i.i = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i.i)
  %tobool24.i.not.i = icmp eq i32 %and23.i.i, 0
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %0, align 4
  %and.i.i.i.i9.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i9.i)
  %tobool.not.i.i.i10.i = icmp eq i32 %and.i.i.i.i9.i, 0
  br i1 %tobool24.i.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %folio_memcg_kmem.exit.i
  br i1 %tobool.not.i.i.i10.i, label %folio_test_slab.exit.i.i, label %if.then.i.i.i.i, !prof !434

if.then.i.i.i.i:                                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.133) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !459
  unreachable

folio_test_slab.exit.i.i:                         ; preds = %if.then.i
  %7 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %folio, align 4
  %9 = and i32 %8, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i.not.i.i = icmp eq i32 %9, 0
  br i1 %tobool.i.not.i.i, label %__folio_objcg.exit.i, label %if.then.i6.i, !prof !434

if.then.i6.i:                                     ; preds = %folio_test_slab.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.130) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 417, 0\0A.popsection", ""() #11, !srcloc !488
  unreachable

__folio_objcg.exit.i:                             ; preds = %folio_test_slab.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %and48.i.i = and i32 %4, -4
  %10 = inttoptr i32 %and48.i.i to ptr
  %memcg.i.i = getelementptr inbounds %struct.obj_cgroup, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %memcg.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %memcg.i.i, align 4
  br label %folio_memcg.exit

if.end.i:                                         ; preds = %folio_memcg_kmem.exit.i
  br i1 %tobool.not.i.i.i10.i, label %folio_test_slab.exit.i13.i, label %if.then.i.i.i11.i, !prof !434

if.then.i.i.i11.i:                                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.133) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !459
  unreachable

folio_test_slab.exit.i13.i:                       ; preds = %if.end.i
  %13 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %folio, align 4
  %15 = and i32 %14, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i.not.i12.i = icmp eq i32 %15, 0
  br i1 %tobool.i.not.i12.i, label %__folio_memcg.exit.i, label %if.then.i14.i, !prof !434

if.then.i14.i:                                    ; preds = %folio_test_slab.exit.i13.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.130) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 396, 0\0A.popsection", ""() #11, !srcloc !489
  unreachable

__folio_memcg.exit.i:                             ; preds = %folio_test_slab.exit.i13.i
  call void @__sanitizer_cov_trace_pc() #13
  %and46.i.i = and i32 %4, -4
  %16 = inttoptr i32 %and46.i.i to ptr
  br label %folio_memcg.exit

folio_memcg.exit:                                 ; preds = %__folio_memcg.exit.i, %__folio_objcg.exit.i
  %retval.0.i = phi ptr [ %12, %__folio_objcg.exit.i ], [ %16, %__folio_memcg.exit.i ]
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %land.rhs, label %folio_memcg.exit.if.end35_crit_edge

folio_memcg.exit.if.end35_crit_edge:              ; preds = %folio_memcg.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end35

land.rhs:                                         ; preds = %folio_memcg.exit
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@folio_lruvec, %if.end35)) #11
          to label %land.rhs5 [label %if.end35], !srcloc !442

land.rhs5:                                        ; preds = %land.rhs
  %.b50 = load i1, ptr @folio_lruvec.__warned, align 1
  br i1 %.b50, label %land.rhs5.if.end35_crit_edge, label %if.then, !prof !434

land.rhs5.if.end35_crit_edge:                     ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end35

if.then:                                          ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.126) #11
  store i1 true, ptr @folio_lruvec.__warned, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.127, i32 noundef 746, i32 noundef 9, ptr noundef null) #11
  br label %if.end35

if.end35:                                         ; preds = %if.then, %land.rhs5.if.end35_crit_edge, %land.rhs, %folio_memcg.exit.if.end35_crit_edge
  %17 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %cmp.i.not.i.i.i = icmp eq i32 %18, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %folio_pgdat.exit, !prof !435

if.then.i.i.i:                                    ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.123) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #11, !srcloc !461
  unreachable

folio_pgdat.exit:                                 ; preds = %if.end35
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@folio_lruvec, %out.i)) #11
          to label %if.end.i52 [label %out.i], !srcloc !442

if.end.i52:                                       ; preds = %folio_pgdat.exit
  br i1 %tobool.not, label %if.then1.i, label %if.end.i52.if.end2.i_crit_edge

if.end.i52.if.end2.i_crit_edge:                   ; preds = %if.end.i52
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end2.i

if.then1.i:                                       ; preds = %if.end.i52
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %19 = load ptr, ptr @root_mem_cgroup, align 4
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.then1.i, %if.end.i52.if.end2.i_crit_edge
  %memcg.addr.0.i = phi ptr [ %retval.0.i, %if.end.i52.if.end2.i_crit_edge ], [ %19, %if.then1.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8) to i32))
  %20 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8), align 64
  %arrayidx.i = getelementptr %struct.mem_cgroup, ptr %memcg.addr.0.i, i32 0, i32 45, i32 %20
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx.i, align 4
  br label %out.i

out.i:                                            ; preds = %if.end2.i, %folio_pgdat.exit
  %lruvec.0.i = phi ptr [ %22, %if.end2.i ], [ getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 26), %folio_pgdat.exit ]
  %pgdat4.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 7
  %23 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pgdat4.i, align 4
  %cmp.not.i = icmp eq ptr %24, @contig_page_data
  br i1 %cmp.not.i, label %out.i.mem_cgroup_lruvec.exit_crit_edge, label %if.then7.i, !prof !434

out.i.mem_cgroup_lruvec.exit_crit_edge:           ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %mem_cgroup_lruvec.exit

if.then7.i:                                       ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #13
  %25 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @contig_page_data, ptr %pgdat4.i, align 4
  br label %mem_cgroup_lruvec.exit

mem_cgroup_lruvec.exit:                           ; preds = %if.then7.i, %out.i.mem_cgroup_lruvec.exit_crit_edge
  ret ptr %lruvec.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lruvec_memcg_debug(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mod_node_page_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @putback_movable_pages(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_isolate_migratepages(i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_isolate_migratepages, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_isolate_migratepages, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !490
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_isolate_migratepages, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %start_pfn, i32 noundef %end_pfn, i32 noundef %nr_scanned, i32 noundef %nr_taken) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !491
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !491
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_isolate_migratepages, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_isolate_migratepages.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_isolate_migratepages.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 54, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__page_mapcount(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_unless(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mod_lruvec_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mod_zone_page_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_update_lru_size(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @zone_watermark_ok(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__zone_watermark_ok(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__next_zones_zonelist(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_deferred(ptr noundef %zone, i32 noundef %order) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_deferred, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_deferred, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !492
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_deferred, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %zone, i32 noundef %order) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !493
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !493
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_deferred, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_deferred.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_deferred.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 266, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @compact_zone(ptr noundef %cc, ptr noundef readonly %capc) unnamed_addr #0 align 64 {
entry:
  %sublist.i159.i.i = alloca %struct.list_head, align 4
  %sublist.i.i.i = alloca %struct.list_head, align 4
  %can_steal.i.i = alloca i8, align 1
  %nr_succeeded = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %zone = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 7
  %0 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %zone, align 4
  %zone_start_pfn = getelementptr inbounds %struct.zone, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %zone_start_pfn, align 4
  %spanned_pages.i = getelementptr inbounds %struct.zone, ptr %1, i32 0, i32 12
  %4 = ptrtoint ptr %spanned_pages.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %spanned_pages.i, align 4
  %add.i = add i32 %5, %3
  %mode = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 17
  %6 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp = icmp ne i32 %7, 0
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr_succeeded) #11
  %8 = ptrtoint ptr %nr_succeeded to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %nr_succeeded, align 4
  %total_migrate_scanned = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 8
  %9 = ptrtoint ptr %total_migrate_scanned to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %total_migrate_scanned, align 4
  %total_free_scanned = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 9
  %10 = ptrtoint ptr %total_free_scanned to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %total_free_scanned, align 4
  %nr_migratepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 3
  %11 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %nr_migratepages, align 4
  %nr_freepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 2
  %12 = ptrtoint ptr %nr_freepages to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %nr_freepages, align 4
  %13 = ptrtoint ptr %cc to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %cc, ptr %cc, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %cc, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %cc, ptr %prev.i, align 4
  %migratepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 1
  %15 = ptrtoint ptr %migratepages to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %migratepages, ptr %migratepages, align 4
  %prev.i319 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %prev.i319 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %migratepages, ptr %prev.i319, align 4
  %gfp_mask = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 12
  %17 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %gfp_mask, align 4
  %and.i = and i32 %18, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %and.i)
  %cmp.i = icmp eq i32 %and.i, 24
  br i1 %cmp.i, label %do.end.i, label %entry.gfp_migratetype.exit_crit_edge, !prof !435

entry.gfp_migratetype.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %gfp_migratetype.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.138, i32 noundef 347, i32 noundef 9, ptr noundef null) #11
  br label %gfp_migratetype.exit

gfp_migratetype.exit:                             ; preds = %do.end.i, %entry.gfp_migratetype.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @page_group_by_mobility_disabled to i32))
  %19 = load i32, ptr @page_group_by_mobility_disabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool25.not.i = icmp eq i32 %19, 0
  %shr.i = lshr exact i32 %and.i, 3
  %retval.0.i = select i1 %tobool25.not.i, i32 %shr.i, i32 0, !prof !434
  %migratetype = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 14
  %20 = ptrtoint ptr %migratetype to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %retval.0.i, ptr %migratetype, align 4
  %21 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %zone, align 4
  %order = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 13
  %23 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %order, align 4
  %alloc_flags = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 15
  %25 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %alloc_flags, align 4
  %highest_zoneidx = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 16
  %27 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %highest_zoneidx, align 4
  %call4 = tail call i32 @compaction_suitable(ptr noundef %22, i32 noundef %24, i32 noundef %26, i32 noundef %28)
  %29 = zext i32 %call4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.143)
  switch i32 %call4, label %do.body10 [
    i32 8, label %gfp_migratetype.exit.cleanup191_crit_edge
    i32 1, label %gfp_migratetype.exit.cleanup191_crit_edge458
    i32 4, label %do.end16
  ], !prof !494

gfp_migratetype.exit.cleanup191_crit_edge458:     ; preds = %gfp_migratetype.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup191

gfp_migratetype.exit.cleanup191_crit_edge:        ; preds = %gfp_migratetype.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup191

do.body10:                                        ; preds = %gfp_migratetype.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2304, 0\0A.popsection", ""() #11, !srcloc !495
  unreachable

do.end16:                                         ; preds = %gfp_migratetype.exit
  %30 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %zone, align 4
  %32 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %order, align 4
  %compact_order_failed.i = getelementptr inbounds %struct.zone, ptr %31, i32 0, i32 32
  %34 = ptrtoint ptr %compact_order_failed.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %compact_order_failed.i, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %33)
  %cmp.i320 = icmp sgt i32 %35, %33
  br i1 %cmp.i320, label %do.end16.if.end22_crit_edge, label %if.end.i

do.end16.if.end22_crit_edge:                      ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end22

if.end.i:                                         ; preds = %do.end16
  %compact_defer_shift.i = getelementptr inbounds %struct.zone, ptr %31, i32 0, i32 31
  %36 = ptrtoint ptr %compact_defer_shift.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %compact_defer_shift.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %37)
  %cmp1.i = icmp eq i32 %37, 6
  br i1 %cmp1.i, label %compaction_restarting.exit, label %if.end.i.if.end22_crit_edge

if.end.i.if.end22_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end22

compaction_restarting.exit:                       ; preds = %if.end.i
  %compact_considered.i = getelementptr inbounds %struct.zone, ptr %31, i32 0, i32 30
  %38 = ptrtoint ptr %compact_considered.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %compact_considered.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %39)
  %cmp3.i = icmp ugt i32 %39, 63
  br i1 %cmp3.i, label %if.then20, label %compaction_restarting.exit.if.end22_crit_edge

compaction_restarting.exit.if.end22_crit_edge:    ; preds = %compaction_restarting.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end22

if.then20:                                        ; preds = %compaction_restarting.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call fastcc void @__reset_isolation_suitable(ptr noundef %31)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %compaction_restarting.exit.if.end22_crit_edge, %if.end.i.if.end22_crit_edge, %do.end16.if.end22_crit_edge
  %fast_start_pfn = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 6
  %40 = ptrtoint ptr %fast_start_pfn to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 0, ptr %fast_start_pfn, align 4
  %whole_zone = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 23
  %41 = ptrtoint ptr %whole_zone to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %whole_zone, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool23.not = icmp eq i8 %42, 0
  br i1 %tobool23.not, label %if.else, label %if.then24

if.then24:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #13
  %migrate_pfn = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 5
  %43 = ptrtoint ptr %migrate_pfn to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %3, ptr %migrate_pfn, align 4
  %sub = add i32 %add.i, -1
  %and = and i32 %sub, -2048
  %free_pfn = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 4
  %44 = ptrtoint ptr %free_pfn to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %and, ptr %free_pfn, align 4
  br label %if.end65

if.else:                                          ; preds = %if.end22
  %45 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %zone, align 4
  %idxprom = zext i1 %cmp to i32
  %arrayidx = getelementptr %struct.zone, ptr %46, i32 0, i32 27, i32 %idxprom
  %47 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx, align 4
  %migrate_pfn27 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 5
  %49 = ptrtoint ptr %migrate_pfn27 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %migrate_pfn27, align 4
  %compact_cached_free_pfn = getelementptr inbounds %struct.zone, ptr %46, i32 0, i32 26
  %50 = ptrtoint ptr %compact_cached_free_pfn to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %compact_cached_free_pfn, align 4
  %free_pfn29 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 4
  %52 = ptrtoint ptr %free_pfn29 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %free_pfn29, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %51, i32 %3)
  %cmp31 = icmp uge i32 %51, %3
  call void @__sanitizer_cov_trace_cmp4(i32 %51, i32 %add.i)
  %cmp34.not = icmp ult i32 %51, %add.i
  %or.cond = select i1 %cmp31, i1 %cmp34.not, i1 false
  br i1 %or.cond, label %if.else.if.end42_crit_edge, label %if.then35

if.else.if.end42_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end42

if.then35:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  %sub36 = add i32 %add.i, -1
  %and37 = and i32 %sub36, -2048
  %53 = ptrtoint ptr %free_pfn29 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %and37, ptr %free_pfn29, align 4
  %54 = ptrtoint ptr %compact_cached_free_pfn to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %and37, ptr %compact_cached_free_pfn, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then35, %if.else.if.end42_crit_edge
  %55 = ptrtoint ptr %migrate_pfn27 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %migrate_pfn27, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %3)
  %cmp44 = icmp uge i32 %56, %3
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %add.i)
  %cmp47.not = icmp ult i32 %56, %add.i
  %or.cond318 = select i1 %cmp44, i1 %cmp47.not, i1 false
  br i1 %or.cond318, label %if.end42.if.end58_crit_edge, label %if.then48

if.end42.if.end58_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end58

if.then48:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #13
  %57 = ptrtoint ptr %migrate_pfn27 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %3, ptr %migrate_pfn27, align 4
  %58 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %zone, align 4
  %compact_cached_migrate_pfn52 = getelementptr inbounds %struct.zone, ptr %59, i32 0, i32 27
  %60 = ptrtoint ptr %compact_cached_migrate_pfn52 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %3, ptr %compact_cached_migrate_pfn52, align 8
  %61 = load i32, ptr %migrate_pfn27, align 4
  %62 = load ptr, ptr %zone, align 4
  %arrayidx57 = getelementptr %struct.zone, ptr %62, i32 0, i32 27, i32 1
  %63 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %61, ptr %arrayidx57, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then48, %if.end42.if.end58_crit_edge
  %64 = ptrtoint ptr %migrate_pfn27 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %migrate_pfn27, align 4
  %66 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %zone, align 4
  %compact_init_migrate_pfn = getelementptr inbounds %struct.zone, ptr %67, i32 0, i32 28
  %68 = ptrtoint ptr %compact_init_migrate_pfn to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %compact_init_migrate_pfn, align 16
  call void @__sanitizer_cov_trace_cmp4(i32 %65, i32 %69)
  %cmp61.not = icmp ugt i32 %65, %69
  br i1 %cmp61.not, label %if.end58.if.end65_crit_edge, label %if.then62

if.end58.if.end65_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end65

if.then62:                                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #13
  %70 = ptrtoint ptr %whole_zone to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 1, ptr %whole_zone, align 1
  br label %if.end65

if.end65:                                         ; preds = %if.then62, %if.end58.if.end65_crit_edge, %if.then24
  br i1 %cmp, label %if.end65.land.end_crit_edge, label %land.rhs

if.end65.land.end_crit_edge:                      ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.end

land.rhs:                                         ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #13
  %71 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %zone, align 4
  %compact_cached_migrate_pfn68 = getelementptr inbounds %struct.zone, ptr %72, i32 0, i32 27
  %73 = ptrtoint ptr %compact_cached_migrate_pfn68 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %compact_cached_migrate_pfn68, align 8
  %arrayidx72 = getelementptr %struct.zone, ptr %72, i32 0, i32 27, i32 1
  %75 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx72, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %74, i32 %76)
  %cmp73 = icmp eq i32 %74, %76
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end65.land.end_crit_edge
  %77 = phi i1 [ false, %if.end65.land.end_crit_edge ], [ %cmp73, %land.rhs ]
  %migrate_pfn75 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 5
  %78 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %migrate_pfn75, align 4
  %free_pfn76 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 4
  %80 = ptrtoint ptr %free_pfn76 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %free_pfn76, align 4
  tail call fastcc void @trace_mm_compaction_begin(i32 noundef %3, i32 noundef %79, i32 noundef %81, i32 noundef %add.i, i1 noundef zeroext %cmp)
  tail call void @lru_add_drain() #11
  %direct_compaction.i.i = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 21
  %proactive_compaction.i.i = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 22
  %contended.i.i = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 24
  %rescan = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 25
  %fast_search_fail.i.i.i = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 10
  %ignore_skip_hint.i.i = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 18
  %sublist.sroa.gep.i160.i.i = getelementptr inbounds %struct.list_head, ptr %sublist.i159.i.i, i32 0, i32 1
  %sublist.sroa.gep.i.i.i = getelementptr inbounds %struct.list_head, ptr %sublist.i.i.i, i32 0, i32 1
  %no_set_skip_hint.i.i = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 19
  %82 = ptrtoint ptr %cc to i32
  %tobool146.not = icmp eq ptr %capc, null
  %page = getelementptr inbounds %struct.capture_control, ptr %capc, i32 0, i32 1
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %land.end
  %last_migrated_pfn.0 = phi i32 [ 0, %land.end ], [ %last_migrated_pfn.4, %while.cond.backedge ]
  %update_cached.0.off0 = phi i1 [ %77, %land.end ], [ %update_cached.2.off0377, %while.cond.backedge ]
  %83 = ptrtoint ptr %migratetype to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %migratetype, align 4
  %85 = ptrtoint ptr %free_pfn76 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %free_pfn76, align 4
  %shr.i.i.i = lshr i32 %86, 11
  %87 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %migrate_pfn75, align 4
  %shr1.i.i.i = lshr i32 %88, 11
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i.i.i, i32 %shr1.i.i.i)
  %cmp.i.not.i.i = icmp ugt i32 %shr.i.i.i, %shr1.i.i.i
  br i1 %cmp.i.not.i.i, label %if.end6.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.cond
  %89 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %zone, align 4
  %zone_start_pfn.i.i.i = getelementptr inbounds %struct.zone, ptr %90, i32 0, i32 10
  %91 = ptrtoint ptr %zone_start_pfn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %zone_start_pfn.i.i.i, align 4
  %compact_cached_migrate_pfn.i.i.i = getelementptr inbounds %struct.zone, ptr %90, i32 0, i32 27
  %93 = ptrtoint ptr %compact_cached_migrate_pfn.i.i.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %92, ptr %compact_cached_migrate_pfn.i.i.i, align 8
  %arrayidx3.i.i.i = getelementptr %struct.zone, ptr %90, i32 0, i32 27, i32 1
  %94 = ptrtoint ptr %arrayidx3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %92, ptr %arrayidx3.i.i.i, align 4
  %spanned_pages.i.i.i.i = getelementptr inbounds %struct.zone, ptr %90, i32 0, i32 12
  %95 = ptrtoint ptr %spanned_pages.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %spanned_pages.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %92, -1
  %sub.i.i.i = add i32 %add.i.i.i.i, %96
  %and.i.i.i = and i32 %sub.i.i.i, -2048
  %compact_cached_free_pfn.i.i.i = getelementptr inbounds %struct.zone, ptr %90, i32 0, i32 26
  %97 = ptrtoint ptr %compact_cached_free_pfn.i.i.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %and.i.i.i, ptr %compact_cached_free_pfn.i.i.i, align 4
  %98 = ptrtoint ptr %direct_compaction.i.i to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %direct_compaction.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %99)
  %tobool.not.i.i = icmp eq i8 %99, 0
  br i1 %tobool.not.i.i, label %if.then.i.i.if.end.i.i_crit_edge, label %if.then2.i.i

if.then.i.i.if.end.i.i_crit_edge:                 ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %100 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %zone, align 4
  %compact_blockskip_flush.i.i = getelementptr inbounds %struct.zone, ptr %101, i32 0, i32 33
  %102 = ptrtoint ptr %compact_blockskip_flush.i.i to i32
  call void @__asan_store1_noabort(i32 %102)
  store i8 1, ptr %compact_blockskip_flush.i.i, align 4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then2.i.i, %if.then.i.i.if.end.i.i_crit_edge
  %103 = ptrtoint ptr %whole_zone to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %whole_zone, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %104)
  %tobool4.not.i.i = icmp eq i8 %104, 0
  %..i.i = select i1 %tobool4.not.i.i, i32 6, i32 5
  br label %compact_finished.exit

if.end6.i.i:                                      ; preds = %while.cond
  %105 = ptrtoint ptr %proactive_compaction.i.i to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %proactive_compaction.i.i, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %106)
  %tobool7.not.i.i = icmp eq i8 %106, 0
  br i1 %tobool7.not.i.i, label %if.end21.i.i, label %if.then8.i.i

if.then8.i.i:                                     ; preds = %if.end6.i.i
  %107 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %zone, align 4
  %zone_pgdat.i.i = getelementptr inbounds %struct.zone, ptr %108, i32 0, i32 4
  %109 = ptrtoint ptr %zone_pgdat.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %zone_pgdat.i.i, align 4
  %kswapd.i.i.i = getelementptr inbounds %struct.pglist_data, ptr %110, i32 0, i32 14
  %111 = ptrtoint ptr %kswapd.i.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %kswapd.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %112, null
  br i1 %tobool.not.i.i.i, label %if.then8.i.i.cleanup.i.i_crit_edge, label %kswapd_is_running.exit.i.i

if.then8.i.i.cleanup.i.i_crit_edge:               ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.i.i

kswapd_is_running.exit.i.i:                       ; preds = %if.then8.i.i
  %113 = ptrtoint ptr %112 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %112, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %114)
  %cmp.i92.i.i = icmp eq i32 %114, 0
  br i1 %cmp.i92.i.i, label %kswapd_is_running.exit.i.i.compact_finished.exit_crit_edge, label %kswapd_is_running.exit.i.i.cleanup.i.i_crit_edge

kswapd_is_running.exit.i.i.cleanup.i.i_crit_edge: ; preds = %kswapd_is_running.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.i.i

kswapd_is_running.exit.i.i.compact_finished.exit_crit_edge: ; preds = %kswapd_is_running.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compact_finished.exit

cleanup.i.i:                                      ; preds = %kswapd_is_running.exit.i.i.cleanup.i.i_crit_edge, %if.then8.i.i.cleanup.i.i_crit_edge
  %call.i.i.i = call i32 @extfrag_for_order(ptr noundef %108, i32 noundef 9) #11
  %115 = load i32, ptr @sysctl_compaction_proactiveness, align 4
  %sub.i93.i.i = sub i32 100, %115
  %116 = call i32 @llvm.umax.i32(i32 %sub.i93.i.i, i32 5) #11
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i.i, i32 %116)
  %cmp.i.i = icmp sgt i32 %call.i.i.i, %116
  %.90.i.i = select i1 %cmp.i.i, i32 4, i32 8
  br label %out.i.i

if.end21.i.i:                                     ; preds = %if.end6.i.i
  %117 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %order, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %118)
  %cmp.i94.i.i = icmp ne i32 %118, -1
  %and.i.i = and i32 %88, 2047
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp26.i.i = icmp eq i32 %and.i.i, 0
  %or.cond.i.i = select i1 %cmp.i94.i.i, i1 %cmp26.i.i, i1 false
  br i1 %or.cond.i.i, label %for.cond.preheader.i.i, label %if.end21.i.i.compact_finished.exit_crit_edge

if.end21.i.i.compact_finished.exit_crit_edge:     ; preds = %if.end21.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compact_finished.exit

for.cond.preheader.i.i:                           ; preds = %if.end21.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %118)
  %cmp30106.i.i = icmp ult i32 %118, 12
  br i1 %cmp30106.i.i, label %for.body.lr.ph.i.i, label %for.cond.preheader.i.i.out.i.i_crit_edge

for.cond.preheader.i.i.out.i.i_crit_edge:         ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %out.i.i

for.body.lr.ph.i.i:                               ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %84)
  %cmp35.i.i = icmp eq i32 %84, 1
  br label %for.body.i.i

for.cond.i.i:                                     ; preds = %cleanup52.i.i, %if.end38.thread.i.i.for.cond.i.i_crit_edge
  %inc.i.i = add i32 %order.0107.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, 12
  br i1 %exitcond.not.i.i, label %for.cond.i.i.out.i.i_crit_edge, label %for.cond.i.i.for.body.i.i_crit_edge

for.cond.i.i.for.body.i.i_crit_edge:              ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i.i

for.cond.i.i.out.i.i_crit_edge:                   ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %out.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %order.0107.i.i = phi i32 [ %118, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.cond.i.i.for.body.i.i_crit_edge ]
  %119 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %zone, align 4
  %arrayidx.i.i = getelementptr %struct.zone, ptr %120, i32 0, i32 20, i32 %order.0107.i.i
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %can_steal.i.i) #11
  %121 = ptrtoint ptr %can_steal.i.i to i32
  call void @__asan_store1_noabort(i32 %121)
  store i8 -1, ptr %can_steal.i.i, align 1, !annotation !436
  %arrayidx.i.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i.i, i32 0, i32 %84
  %122 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile ptr, ptr %arrayidx.i.i.i, align 4
  %cmp.i.i.i.i = icmp eq ptr %123, %arrayidx.i.i.i
  br i1 %cmp.i.i.i.i, label %if.end34.i.i, label %for.body.i.i.cleanup52.thread.i.i_crit_edge

for.body.i.i.cleanup52.thread.i.i_crit_edge:      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup52.thread.i.i

if.end34.i.i:                                     ; preds = %for.body.i.i
  br i1 %cmp35.i.i, label %land.lhs.true.i.i, label %if.end38.i.i

land.lhs.true.i.i:                                ; preds = %if.end34.i.i
  %arrayidx.i95.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i.i, i32 0, i32 4
  %124 = ptrtoint ptr %arrayidx.i95.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile ptr, ptr %arrayidx.i95.i.i, align 4
  %cmp.i.i96.i.i = icmp eq ptr %125, %arrayidx.i95.i.i
  br i1 %cmp.i.i96.i.i, label %if.end38.thread.i.i, label %land.lhs.true.i.i.cleanup52.thread.i.i_crit_edge

land.lhs.true.i.i.cleanup52.thread.i.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup52.thread.i.i

if.end38.thread.i.i:                              ; preds = %land.lhs.true.i.i
  %call39108.i.i = call i32 @find_suitable_fallback(ptr noundef %arrayidx.i.i, i32 noundef %order.0107.i.i, i32 noundef 1, i1 noundef zeroext true, ptr noundef nonnull %can_steal.i.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call39108.i.i)
  %cmp40.not109.i.i = icmp eq i32 %call39108.i.i, -1
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %can_steal.i.i) #11
  br i1 %cmp40.not109.i.i, label %if.end38.thread.i.i.for.cond.i.i_crit_edge, label %if.end38.thread.i.i.compact_finished.exit_crit_edge

if.end38.thread.i.i.compact_finished.exit_crit_edge: ; preds = %if.end38.thread.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compact_finished.exit

if.end38.thread.i.i.for.cond.i.i_crit_edge:       ; preds = %if.end38.thread.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.i.i

if.end38.i.i:                                     ; preds = %if.end34.i.i
  %call39.i.i = call i32 @find_suitable_fallback(ptr noundef %arrayidx.i.i, i32 noundef %order.0107.i.i, i32 noundef %84, i1 noundef zeroext true, ptr noundef nonnull %can_steal.i.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call39.i.i)
  %cmp40.not.i.i = icmp eq i32 %call39.i.i, -1
  br i1 %cmp40.not.i.i, label %cleanup52.i.i, label %if.end44.i.i

if.end44.i.i:                                     ; preds = %if.end38.i.i
  %126 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %127)
  %cmp45.i.i = icmp eq i32 %127, 0
  br i1 %cmp45.i.i, label %if.end44.i.i.cleanup52.thread.i.i_crit_edge, label %lor.lhs.false.i.i

if.end44.i.i.cleanup52.thread.i.i_crit_edge:      ; preds = %if.end44.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup52.thread.i.i

lor.lhs.false.i.i:                                ; preds = %if.end44.i.i
  %128 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %migrate_pfn75, align 4
  %and47.i.i = and i32 %129, 2047
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47.i.i)
  %cmp48.i.i = icmp eq i32 %and47.i.i, 0
  br i1 %cmp48.i.i, label %lor.lhs.false.i.i.cleanup52.thread.i.i_crit_edge, label %cleanup52.thread102.i.i

lor.lhs.false.i.i.cleanup52.thread.i.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup52.thread.i.i

cleanup52.thread102.i.i:                          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %can_steal.i.i) #11
  br label %out.i.i

cleanup52.thread.i.i:                             ; preds = %lor.lhs.false.i.i.cleanup52.thread.i.i_crit_edge, %if.end44.i.i.cleanup52.thread.i.i_crit_edge, %land.lhs.true.i.i.cleanup52.thread.i.i_crit_edge, %for.body.i.i.cleanup52.thread.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %can_steal.i.i) #11
  br label %compact_finished.exit

cleanup52.i.i:                                    ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %can_steal.i.i) #11
  br label %for.cond.i.i

out.i.i:                                          ; preds = %cleanup52.thread102.i.i, %for.cond.i.i.out.i.i_crit_edge, %for.cond.preheader.i.i.out.i.i_crit_edge, %cleanup.i.i
  %ret.4.i.i = phi i32 [ %.90.i.i, %cleanup.i.i ], [ 4, %cleanup52.thread102.i.i ], [ 3, %for.cond.preheader.i.i.out.i.i_crit_edge ], [ 3, %for.cond.i.i.out.i.i_crit_edge ]
  %130 = ptrtoint ptr %contended.i.i to i32
  call void @__asan_load1_noabort(i32 %130)
  %131 = load i8, ptr %contended.i.i, align 2, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %131)
  %tobool55.not.i.i = icmp eq i8 %131, 0
  br i1 %tobool55.not.i.i, label %lor.lhs.false56.i.i, label %out.i.i.if.then60.i.i_crit_edge

out.i.i.if.then60.i.i_crit_edge:                  ; preds = %out.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then60.i.i

lor.lhs.false56.i.i:                              ; preds = %out.i.i
  %132 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i97.i.i = and i32 %132, -16384
  %133 = inttoptr i32 %and.i97.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %133, i32 0, i32 2
  %134 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %task.i.i, align 8
  %stack.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %135, i32 0, i32 1
  %136 = ptrtoint ptr %stack.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %stack.i.i.i.i.i, align 4
  %138 = ptrtoint ptr %137 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile i32, ptr %137, align 4
  %and1.i.i.i.i.i.i.i = and i32 %139, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i.i)
  %tobool.not.i98.i.i = icmp eq i32 %and1.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i98.i.i, label %lor.lhs.false56.i.i.compact_finished.exit_crit_edge, label %fatal_signal_pending.exit.i.i

lor.lhs.false56.i.i.compact_finished.exit_crit_edge: ; preds = %lor.lhs.false56.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compact_finished.exit

fatal_signal_pending.exit.i.i:                    ; preds = %lor.lhs.false56.i.i
  %signal.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %135, i32 0, i32 116, i32 1
  %140 = ptrtoint ptr %signal.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %signal.i.i.i.i, align 4
  %142 = and i32 %141, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %142)
  %tobool59.not.i.i = icmp eq i32 %142, 0
  br i1 %tobool59.not.i.i, label %fatal_signal_pending.exit.i.i.compact_finished.exit_crit_edge, label %fatal_signal_pending.exit.i.i.if.then60.i.i_crit_edge

fatal_signal_pending.exit.i.i.if.then60.i.i_crit_edge: ; preds = %fatal_signal_pending.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then60.i.i

fatal_signal_pending.exit.i.i.compact_finished.exit_crit_edge: ; preds = %fatal_signal_pending.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %compact_finished.exit

if.then60.i.i:                                    ; preds = %fatal_signal_pending.exit.i.i.if.then60.i.i_crit_edge, %out.i.i.if.then60.i.i_crit_edge
  br label %compact_finished.exit

compact_finished.exit:                            ; preds = %if.then60.i.i, %fatal_signal_pending.exit.i.i.compact_finished.exit_crit_edge, %lor.lhs.false56.i.i.compact_finished.exit_crit_edge, %cleanup52.thread.i.i, %if.end38.thread.i.i.compact_finished.exit_crit_edge, %if.end21.i.i.compact_finished.exit_crit_edge, %kswapd_is_running.exit.i.i.compact_finished.exit_crit_edge, %if.end.i.i
  %retval.3.i.i = phi i32 [ %..i.i, %if.end.i.i ], [ 4, %if.end21.i.i.compact_finished.exit_crit_edge ], [ 7, %if.then60.i.i ], [ %ret.4.i.i, %fatal_signal_pending.exit.i.i.compact_finished.exit_crit_edge ], [ 8, %cleanup52.thread.i.i ], [ 6, %kswapd_is_running.exit.i.i.compact_finished.exit_crit_edge ], [ %ret.4.i.i, %lor.lhs.false56.i.i.compact_finished.exit_crit_edge ], [ 8, %if.end38.thread.i.i.compact_finished.exit_crit_edge ]
  %143 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %zone, align 4
  %145 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %order, align 4
  call fastcc void @trace_mm_compaction_finished(ptr noundef %144, i32 noundef %146, i32 noundef %retval.3.i.i) #11
  %retval.3.i.i.off = add nsw i32 %retval.3.i.i, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %retval.3.i.i.off)
  %switch = icmp ult i32 %retval.3.i.i.off, 2
  br i1 %switch, label %while.body, label %compact_finished.exit.out_crit_edge

compact_finished.exit.out_crit_edge:              ; preds = %compact_finished.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

while.body:                                       ; preds = %compact_finished.exit
  %147 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %migrate_pfn75, align 4
  %149 = xor i32 %148, %last_migrated_pfn.0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %149)
  %cmp83 = icmp ult i32 %149, 2048
  %spec.select = zext i1 %cmp83 to i8
  %150 = ptrtoint ptr %rescan to i32
  call void @__asan_store1_noabort(i32 %150)
  store i8 %spec.select, ptr %rescan, align 1
  %151 = load i32, ptr @sysctl_compact_unevictable_allowed, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %151)
  %tobool.not.i = icmp eq i32 %151, 0
  %cond.i = select i1 %tobool.not.i, i32 0, i32 8
  %152 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %153)
  %cmp.not.i = icmp eq i32 %153, 2
  %cond1.i = select i1 %cmp.not.i, i32 0, i32 4
  %or.i = or i32 %cond1.i, %cond.i
  %154 = ptrtoint ptr %fast_search_fail.i.i.i to i32
  call void @__asan_load2_noabort(i32 %154)
  %155 = load i16, ptr %fast_search_fail.i.i.i, align 4
  %156 = call i16 @llvm.umin.i16(i16 %155, i16 31) #11
  %cond.i.i.i = zext i16 %156 to i32
  %shr.i.i.i323 = lshr i32 32, %cond.i.i.i
  %157 = ptrtoint ptr %ignore_skip_hint.i.i to i32
  call void @__asan_load1_noabort(i32 %157)
  %158 = load i8, ptr %ignore_skip_hint.i.i, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %158)
  %tobool.not.i.i324 = icmp eq i8 %158, 0
  br i1 %tobool.not.i.i324, label %if.end.i.i328, label %while.body.fast_find_migrateblock.exit.i_crit_edge

while.body.fast_find_migrateblock.exit.i_crit_edge: ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_find_migrateblock.exit.i

if.end.i.i328:                                    ; preds = %while.body
  %159 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %zone, align 4
  %zone_start_pfn.i.i = getelementptr inbounds %struct.zone, ptr %160, i32 0, i32 10
  %161 = ptrtoint ptr %zone_start_pfn.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %zone_start_pfn.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %148, i32 %162)
  %cmp.not.i.i = icmp eq i32 %148, %162
  %and.i.i326 = and i32 %148, -2048
  call void @__sanitizer_cov_trace_cmp4(i32 %148, i32 %and.i.i326)
  %cmp1.not.i.i = icmp eq i32 %148, %and.i.i326
  %or.cond.i.i327 = or i1 %cmp1.not.i.i, %cmp.not.i.i
  br i1 %or.cond.i.i327, label %if.end3.i.i, label %if.end.i.i328.fast_find_migrateblock.exit.i_crit_edge

if.end.i.i328.fast_find_migrateblock.exit.i_crit_edge: ; preds = %if.end.i.i328
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_find_migrateblock.exit.i

if.end3.i.i:                                      ; preds = %if.end.i.i328
  %163 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %order, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %164)
  %cmp5.i.i = icmp slt i32 %164, 4
  br i1 %cmp5.i.i, label %if.end3.i.i.fast_find_migrateblock.exit.i_crit_edge, label %if.end7.i.i

if.end3.i.i.fast_find_migrateblock.exit.i_crit_edge: ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_find_migrateblock.exit.i

if.end7.i.i:                                      ; preds = %if.end3.i.i
  %165 = ptrtoint ptr %direct_compaction.i.i to i32
  call void @__asan_load1_noabort(i32 %165)
  %166 = load i8, ptr %direct_compaction.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %166)
  %tobool8.not.i.i = icmp eq i8 %166, 0
  br i1 %tobool8.not.i.i, label %if.end7.i.i.for.body.lr.ph.i.i330_crit_edge, label %land.lhs.true9.i.i

if.end7.i.i.for.body.lr.ph.i.i330_crit_edge:      ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.lr.ph.i.i330

land.lhs.true9.i.i:                               ; preds = %if.end7.i.i
  %167 = ptrtoint ptr %migratetype to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %migratetype, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %168)
  %cmp10.not.i.i = icmp eq i32 %168, 1
  br i1 %cmp10.not.i.i, label %land.lhs.true9.i.i.for.body.lr.ph.i.i330_crit_edge, label %land.lhs.true9.i.i.fast_find_migrateblock.exit.i_crit_edge

land.lhs.true9.i.i.fast_find_migrateblock.exit.i_crit_edge: ; preds = %land.lhs.true9.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_find_migrateblock.exit.i

land.lhs.true9.i.i.for.body.lr.ph.i.i330_crit_edge: ; preds = %land.lhs.true9.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.lr.ph.i.i330

for.body.lr.ph.i.i330:                            ; preds = %land.lhs.true9.i.i.for.body.lr.ph.i.i330_crit_edge, %if.end7.i.i.for.body.lr.ph.i.i330_crit_edge
  %169 = ptrtoint ptr %free_pfn76 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %free_pfn76, align 4
  %sub.i.i = sub i32 %170, %148
  %spec.select.v.i.i = select i1 %cmp.not.i.i, i32 1, i32 3
  %spec.select.i.i = lshr i32 %sub.i.i, %spec.select.v.i.i
  %add.i.i = add i32 %spec.select.i.i, %148
  %and22.i.i = and i32 %add.i.i, -2048
  %order.0205.i.i = add nsw i32 %164, -1
  %171 = add nuw nsw i32 %shr.i.i.i323, 1
  br label %for.body.i.i331

for.body.i.i331:                                  ; preds = %cleanup78.i.i.for.body.i.i331_crit_edge, %for.body.lr.ph.i.i330
  %order.0211.i.i = phi i32 [ %order.0205.i.i, %for.body.lr.ph.i.i330 ], [ %order.0.i.i, %cleanup78.i.i.for.body.i.i331_crit_edge ]
  %nr_scanned.0210.i.i = phi i32 [ 0, %for.body.lr.ph.i.i330 ], [ %nr_scanned.3.i.i, %cleanup78.i.i.for.body.i.i331_crit_edge ]
  %pfn.0209.i.i = phi i32 [ %148, %for.body.lr.ph.i.i330 ], [ %pfn.4.i.i, %cleanup78.i.i.for.body.i.i331_crit_edge ]
  %found_block.0.off0208.i.i = phi i1 [ false, %for.body.lr.ph.i.i330 ], [ %found_block.4.off0.i.i, %cleanup78.i.i.for.body.i.i331_crit_edge ]
  %172 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %zone, align 4
  %nr_free.i.i = getelementptr %struct.zone, ptr %173, i32 0, i32 20, i32 %order.0211.i.i, i32 1
  %174 = ptrtoint ptr %nr_free.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %nr_free.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %175)
  %tobool30.not.i.i = icmp eq i32 %175, 0
  br i1 %tobool30.not.i.i, label %for.body.i.i331.cleanup78.i.i_crit_edge, label %do.body33.i.i

for.body.i.i331.cleanup78.i.i_crit_edge:          ; preds = %for.body.i.i331
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup78.i.i

do.body33.i.i:                                    ; preds = %for.body.i.i331
  %lock.i.i = getelementptr inbounds %struct.zone, ptr %173, i32 0, i32 22
  %call37.i.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i.i) #11
  %arrayidx40.i.i = getelementptr %struct.zone, ptr %173, i32 0, i32 20, i32 %order.0211.i.i, i32 0, i32 1
  %176 = ptrtoint ptr %arrayidx40.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %.pn199.i.i = load ptr, ptr %arrayidx40.i.i, align 4
  %cmp43.not201.i.i = icmp eq ptr %.pn199.i.i, %arrayidx40.i.i
  br i1 %cmp43.not201.i.i, label %do.body33.i.i.for.end.i.i_crit_edge, label %for.body45.preheader.i.i

do.body33.i.i.for.end.i.i_crit_edge:              ; preds = %do.body33.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i.i

for.body45.preheader.i.i:                         ; preds = %do.body33.i.i
  %umax.i.i = call i32 @llvm.umax.i32(i32 %nr_scanned.0210.i.i, i32 %171) #11
  %177 = add i32 %umax.i.i, 1
  br label %for.body45.i.i

for.body45.i.i:                                   ; preds = %cleanup.i.i333.for.body45.i.i_crit_edge, %for.body45.preheader.i.i
  %.pn203.i.i = phi ptr [ %.pn.i.i, %cleanup.i.i333.for.body45.i.i_crit_edge ], [ %.pn199.i.i, %for.body45.preheader.i.i ]
  %nr_scanned.1202.i.i = phi i32 [ %inc.i.i332, %cleanup.i.i333.for.body45.i.i_crit_edge ], [ %nr_scanned.0210.i.i, %for.body45.preheader.i.i ]
  %freepage.0204.i.i = getelementptr i8, ptr %.pn203.i.i, i32 -4
  %inc.i.i332 = add i32 %nr_scanned.1202.i.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %nr_scanned.1202.i.i, i32 %shr.i.i.i323)
  %cmp47.not.not.i.i = icmp ugt i32 %nr_scanned.1202.i.i, %shr.i.i.i323
  br i1 %cmp47.not.not.i.i, label %if.then49.i.i, label %if.end50.i.i

if.then49.i.i:                                    ; preds = %for.body45.i.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sublist.i.i.i) #11
  %178 = ptrtoint ptr %sublist.i.i.i to i32
  call void @__asan_store4_noabort(i32 %178)
  store ptr %sublist.i.i.i, ptr %sublist.i.i.i, align 4
  %179 = ptrtoint ptr %sublist.sroa.gep.i.i.i to i32
  call void @__asan_store4_noabort(i32 %179)
  store ptr %sublist.i.i.i, ptr %sublist.sroa.gep.i.i.i, align 4
  %prev.i.i.i.i = getelementptr %struct.zone, ptr %173, i32 0, i32 20, i32 %order.0211.i.i, i32 0, i32 1, i32 1
  %180 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %prev.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %181, %.pn203.i.i
  br i1 %cmp.i.not.i.i.i, label %if.then49.i.i.move_freelist_tail.exit.i.i_crit_edge, label %if.then.i.i.i

if.then49.i.i.move_freelist_tail.exit.i.i_crit_edge: ; preds = %if.then49.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %move_freelist_tail.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then49.i.i
  %182 = ptrtoint ptr %arrayidx40.i.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load volatile ptr, ptr %arrayidx40.i.i, align 4
  %cmp.i.not.i.i.i.i = icmp eq ptr %183, %arrayidx40.i.i
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.list_cut_position.exit.i.i.i_crit_edge, label %if.end.i.i.i.i

if.then.i.i.i.list_cut_position.exit.i.i.i_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_cut_position.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.then.i.i.i
  %184 = ptrtoint ptr %arrayidx40.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load volatile ptr, ptr %arrayidx40.i.i, align 4
  %cmp.i.not.i.i.i.i.i = icmp eq ptr %185, %arrayidx40.i.i
  %cmp.i22.not.i.i.i.i = icmp ne ptr %185, %181
  %or.cond.i.i.i = select i1 %cmp.i.not.i.i.i.i.i, i1 true, i1 %cmp.i22.not.i.i.i.i
  %cmp.i23.i.i.i.i = icmp eq ptr %.pn203.i.i, %arrayidx40.i.i
  %or.cond8.i.i.i = select i1 %or.cond.i.i.i, i1 true, i1 %cmp.i23.i.i.i.i
  br i1 %or.cond8.i.i.i, label %if.end8.i.i.i.i, label %if.end.i.i.i.i.list_cut_position.exit.i.i.i_crit_edge

if.end.i.i.i.i.list_cut_position.exit.i.i.i_crit_edge: ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_cut_position.exit.i.i.i

if.end8.i.i.i.i:                                  ; preds = %if.end.i.i.i.i
  br i1 %cmp.i23.i.i.i.i, label %if.then11.i.i.i.i, label %if.else.i.i.i.i

if.then11.i.i.i.i:                                ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %186 = ptrtoint ptr %sublist.i.i.i to i32
  call void @__asan_store4_noabort(i32 %186)
  store volatile ptr %sublist.i.i.i, ptr %sublist.i.i.i, align 4
  br label %if.end12.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %187 = ptrtoint ptr %.pn203.i.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %.pn203.i.i, align 4
  %.sroa.gep.i.i.i = getelementptr inbounds %struct.list_head, ptr %188, i32 0, i32 1
  %189 = ptrtoint ptr %sublist.i.i.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store ptr %185, ptr %sublist.i.i.i, align 4
  %prev.i28.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %185, i32 0, i32 1
  %190 = ptrtoint ptr %prev.i28.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store ptr %sublist.i.i.i, ptr %prev.i28.i.i.i.i, align 4
  %191 = ptrtoint ptr %sublist.sroa.gep.i.i.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store ptr %.pn203.i.i, ptr %sublist.sroa.gep.i.i.i, align 4
  store ptr %sublist.i.i.i, ptr %.pn203.i.i, align 4
  %192 = ptrtoint ptr %arrayidx40.i.i to i32
  call void @__asan_store4_noabort(i32 %192)
  store ptr %188, ptr %arrayidx40.i.i, align 4
  br label %if.end12.sink.split.i.i.i.i

if.end12.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i, %if.then11.i.i.i.i
  %head.sink.i.i.i.i = phi ptr [ %arrayidx40.i.i, %if.else.i.i.i.i ], [ %sublist.i.i.i, %if.then11.i.i.i.i ]
  %.sink.i.sroa.phi.i.i.i = phi ptr [ %.sroa.gep.i.i.i, %if.else.i.i.i.i ], [ %sublist.sroa.gep.i.i.i, %if.then11.i.i.i.i ]
  %193 = ptrtoint ptr %.sink.i.sroa.phi.i.i.i to i32
  call void @__asan_store4_noabort(i32 %193)
  store ptr %head.sink.i.i.i.i, ptr %.sink.i.sroa.phi.i.i.i, align 4
  br label %list_cut_position.exit.i.i.i

list_cut_position.exit.i.i.i:                     ; preds = %if.end12.sink.split.i.i.i.i, %if.end.i.i.i.i.list_cut_position.exit.i.i.i_crit_edge, %if.then.i.i.i.list_cut_position.exit.i.i.i_crit_edge
  %194 = ptrtoint ptr %sublist.i.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load volatile ptr, ptr %sublist.i.i.i, align 4
  %cmp.i.not.i5.i.i.i = icmp eq ptr %195, %sublist.i.i.i
  br i1 %cmp.i.not.i5.i.i.i, label %list_cut_position.exit.i.i.i.move_freelist_tail.exit.i.i_crit_edge, label %if.then.i.i.i.i

list_cut_position.exit.i.i.i.move_freelist_tail.exit.i.i_crit_edge: ; preds = %list_cut_position.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %move_freelist_tail.exit.i.i

if.then.i.i.i.i:                                  ; preds = %list_cut_position.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %196 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %prev.i.i.i.i, align 4
  %198 = ptrtoint ptr %sublist.sroa.gep.i.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %sublist.sroa.gep.i.i.i, align 4
  %prev3.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %195, i32 0, i32 1
  %200 = ptrtoint ptr %prev3.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store ptr %197, ptr %prev3.i.i.i.i.i, align 4
  %201 = ptrtoint ptr %197 to i32
  call void @__asan_store4_noabort(i32 %201)
  store ptr %195, ptr %197, align 4
  %202 = ptrtoint ptr %199 to i32
  call void @__asan_store4_noabort(i32 %202)
  store ptr %arrayidx40.i.i, ptr %199, align 4
  store ptr %199, ptr %prev.i.i.i.i, align 4
  br label %move_freelist_tail.exit.i.i

move_freelist_tail.exit.i.i:                      ; preds = %if.then.i.i.i.i, %list_cut_position.exit.i.i.i.move_freelist_tail.exit.i.i_crit_edge, %if.then49.i.i.move_freelist_tail.exit.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sublist.i.i.i) #11
  br label %for.end.i.i

if.end50.i.i:                                     ; preds = %for.body45.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %203 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %freepage.0204.i.i to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %203 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %204 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add51.i.i = add i32 %sub.ptr.div.i.i, %204
  call void @__sanitizer_cov_trace_cmp4(i32 %add51.i.i, i32 %and22.i.i)
  %cmp52.i.i = icmp ult i32 %add51.i.i, %and22.i.i
  br i1 %cmp52.i.i, label %if.then54.i.i, label %if.end50.i.i.cleanup.i.i333_crit_edge

if.end50.i.i.cleanup.i.i333_crit_edge:            ; preds = %if.end50.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.i.i333

if.then54.i.i:                                    ; preds = %if.end50.i.i
  %call60.i.i = call i32 @get_pfnblock_flags_mask(ptr noundef %freepage.0204.i.i, i32 noundef %add51.i.i, i32 noundef 8) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60.i.i)
  %tobool61.not.i.i = icmp eq i32 %call60.i.i, 0
  br i1 %tobool61.not.i.i, label %if.end63.i.i, label %if.then54.i.i.cleanup.i.i333_crit_edge

if.then54.i.i.cleanup.i.i333_crit_edge:           ; preds = %if.then54.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.i.i333

if.end63.i.i:                                     ; preds = %if.then54.i.i
  %sub.ptr.lhs.cast.i.i.le = ptrtoint ptr %freepage.0204.i.i to i32
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sublist.i159.i.i) #11
  %205 = ptrtoint ptr %sublist.i159.i.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store ptr %sublist.i159.i.i, ptr %sublist.i159.i.i, align 4
  %206 = ptrtoint ptr %sublist.sroa.gep.i160.i.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store ptr %sublist.i159.i.i, ptr %sublist.sroa.gep.i160.i.i, align 4
  %prev.i.i161.i.i = getelementptr %struct.zone, ptr %173, i32 0, i32 20, i32 %order.0211.i.i, i32 0, i32 1, i32 1
  %207 = ptrtoint ptr %prev.i.i161.i.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %prev.i.i161.i.i, align 4
  %cmp.i.not.i162.i.i = icmp eq ptr %208, %.pn203.i.i
  br i1 %cmp.i.not.i162.i.i, label %if.end63.i.i.move_freelist_tail.exit184.i.i_crit_edge, label %if.then.i164.i.i

if.end63.i.i.move_freelist_tail.exit184.i.i_crit_edge: ; preds = %if.end63.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %move_freelist_tail.exit184.i.i

if.then.i164.i.i:                                 ; preds = %if.end63.i.i
  %209 = ptrtoint ptr %arrayidx40.i.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load volatile ptr, ptr %arrayidx40.i.i, align 4
  %cmp.i.not.i.i163.i.i = icmp eq ptr %210, %arrayidx40.i.i
  br i1 %cmp.i.not.i.i163.i.i, label %if.then.i164.i.i.list_cut_position.exit.i181.i.i_crit_edge, label %if.end.i.i170.i.i

if.then.i164.i.i.list_cut_position.exit.i181.i.i_crit_edge: ; preds = %if.then.i164.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_cut_position.exit.i181.i.i

if.end.i.i170.i.i:                                ; preds = %if.then.i164.i.i
  %211 = ptrtoint ptr %arrayidx40.i.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load volatile ptr, ptr %arrayidx40.i.i, align 4
  %cmp.i.not.i.i.i165.i.i = icmp eq ptr %212, %arrayidx40.i.i
  %cmp.i22.not.i.i166.i.i = icmp ne ptr %212, %208
  %or.cond.i167.i.i = select i1 %cmp.i.not.i.i.i165.i.i, i1 true, i1 %cmp.i22.not.i.i166.i.i
  %cmp.i23.i.i168.i.i = icmp eq ptr %.pn203.i.i, %arrayidx40.i.i
  %or.cond8.i169.i.i = select i1 %or.cond.i167.i.i, i1 true, i1 %cmp.i23.i.i168.i.i
  br i1 %or.cond8.i169.i.i, label %if.end8.i.i172.i.i, label %if.end.i.i170.i.i.list_cut_position.exit.i181.i.i_crit_edge

if.end.i.i170.i.i.list_cut_position.exit.i181.i.i_crit_edge: ; preds = %if.end.i.i170.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_cut_position.exit.i181.i.i

if.end8.i.i172.i.i:                               ; preds = %if.end.i.i170.i.i
  br i1 %cmp.i23.i.i168.i.i, label %if.then11.i.i173.i.i, label %if.else.i.i176.i.i

if.then11.i.i173.i.i:                             ; preds = %if.end8.i.i172.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %213 = ptrtoint ptr %sublist.i159.i.i to i32
  call void @__asan_store4_noabort(i32 %213)
  store volatile ptr %sublist.i159.i.i, ptr %sublist.i159.i.i, align 4
  br label %if.end12.sink.split.i.i179.i.i

if.else.i.i176.i.i:                               ; preds = %if.end8.i.i172.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %214 = ptrtoint ptr %.pn203.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %.pn203.i.i, align 4
  %.sroa.gep.i174.i.i = getelementptr inbounds %struct.list_head, ptr %215, i32 0, i32 1
  %216 = ptrtoint ptr %sublist.i159.i.i to i32
  call void @__asan_store4_noabort(i32 %216)
  store ptr %212, ptr %sublist.i159.i.i, align 4
  %prev.i28.i.i175.i.i = getelementptr inbounds %struct.list_head, ptr %212, i32 0, i32 1
  %217 = ptrtoint ptr %prev.i28.i.i175.i.i to i32
  call void @__asan_store4_noabort(i32 %217)
  store ptr %sublist.i159.i.i, ptr %prev.i28.i.i175.i.i, align 4
  %218 = ptrtoint ptr %sublist.sroa.gep.i160.i.i to i32
  call void @__asan_store4_noabort(i32 %218)
  store ptr %.pn203.i.i, ptr %sublist.sroa.gep.i160.i.i, align 4
  store ptr %sublist.i159.i.i, ptr %.pn203.i.i, align 4
  %219 = ptrtoint ptr %arrayidx40.i.i to i32
  call void @__asan_store4_noabort(i32 %219)
  store ptr %215, ptr %arrayidx40.i.i, align 4
  br label %if.end12.sink.split.i.i179.i.i

if.end12.sink.split.i.i179.i.i:                   ; preds = %if.else.i.i176.i.i, %if.then11.i.i173.i.i
  %head.sink.i.i177.i.i = phi ptr [ %arrayidx40.i.i, %if.else.i.i176.i.i ], [ %sublist.i159.i.i, %if.then11.i.i173.i.i ]
  %.sink.i.sroa.phi.i178.i.i = phi ptr [ %.sroa.gep.i174.i.i, %if.else.i.i176.i.i ], [ %sublist.sroa.gep.i160.i.i, %if.then11.i.i173.i.i ]
  %220 = ptrtoint ptr %.sink.i.sroa.phi.i178.i.i to i32
  call void @__asan_store4_noabort(i32 %220)
  store ptr %head.sink.i.i177.i.i, ptr %.sink.i.sroa.phi.i178.i.i, align 4
  br label %list_cut_position.exit.i181.i.i

list_cut_position.exit.i181.i.i:                  ; preds = %if.end12.sink.split.i.i179.i.i, %if.end.i.i170.i.i.list_cut_position.exit.i181.i.i_crit_edge, %if.then.i164.i.i.list_cut_position.exit.i181.i.i_crit_edge
  %221 = ptrtoint ptr %sublist.i159.i.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load volatile ptr, ptr %sublist.i159.i.i, align 4
  %cmp.i.not.i5.i180.i.i = icmp eq ptr %222, %sublist.i159.i.i
  br i1 %cmp.i.not.i5.i180.i.i, label %list_cut_position.exit.i181.i.i.move_freelist_tail.exit184.i.i_crit_edge, label %if.then.i.i183.i.i

list_cut_position.exit.i181.i.i.move_freelist_tail.exit184.i.i_crit_edge: ; preds = %list_cut_position.exit.i181.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %move_freelist_tail.exit184.i.i

if.then.i.i183.i.i:                               ; preds = %list_cut_position.exit.i181.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %223 = ptrtoint ptr %prev.i.i161.i.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %prev.i.i161.i.i, align 4
  %225 = ptrtoint ptr %sublist.sroa.gep.i160.i.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %sublist.sroa.gep.i160.i.i, align 4
  %prev3.i.i.i182.i.i = getelementptr inbounds %struct.list_head, ptr %222, i32 0, i32 1
  %227 = ptrtoint ptr %prev3.i.i.i182.i.i to i32
  call void @__asan_store4_noabort(i32 %227)
  store ptr %224, ptr %prev3.i.i.i182.i.i, align 4
  %228 = ptrtoint ptr %224 to i32
  call void @__asan_store4_noabort(i32 %228)
  store ptr %222, ptr %224, align 4
  %229 = ptrtoint ptr %226 to i32
  call void @__asan_store4_noabort(i32 %229)
  store ptr %arrayidx40.i.i, ptr %226, align 4
  store ptr %226, ptr %prev.i.i161.i.i, align 4
  br label %move_freelist_tail.exit184.i.i

move_freelist_tail.exit184.i.i:                   ; preds = %if.then.i.i183.i.i, %list_cut_position.exit.i181.i.i.move_freelist_tail.exit184.i.i_crit_edge, %if.end63.i.i.move_freelist_tail.exit184.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sublist.i159.i.i) #11
  %230 = ptrtoint ptr %fast_start_pfn to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %fast_start_pfn, align 4
  %232 = zext i32 %231 to i64
  call void @__sanitizer_cov_trace_switch(i64 %232, ptr @__sancov_gen_cov_switch_values.144)
  switch i32 %231, label %move_freelist_tail.exit184.i.i.if.end4.i.i.i_crit_edge [
    i32 -1, label %move_freelist_tail.exit184.i.i.update_fast_start_pfn.exit.i.i_crit_edge
    i32 0, label %if.then2.i.i.i
  ]

move_freelist_tail.exit184.i.i.update_fast_start_pfn.exit.i.i_crit_edge: ; preds = %move_freelist_tail.exit184.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %update_fast_start_pfn.exit.i.i

move_freelist_tail.exit184.i.i.if.end4.i.i.i_crit_edge: ; preds = %move_freelist_tail.exit184.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end4.i.i.i

if.then2.i.i.i:                                   ; preds = %move_freelist_tail.exit184.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %233 = ptrtoint ptr %fast_start_pfn to i32
  call void @__asan_store4_noabort(i32 %233)
  store i32 %add51.i.i, ptr %fast_start_pfn, align 4
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %if.then2.i.i.i, %move_freelist_tail.exit184.i.i.if.end4.i.i.i_crit_edge
  %234 = ptrtoint ptr %fast_start_pfn to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %fast_start_pfn, align 4
  %236 = call i32 @llvm.umin.i32(i32 %235, i32 %add51.i.i) #11
  %237 = ptrtoint ptr %fast_start_pfn to i32
  call void @__asan_store4_noabort(i32 %237)
  store i32 %236, ptr %fast_start_pfn, align 4
  br label %update_fast_start_pfn.exit.i.i

update_fast_start_pfn.exit.i.i:                   ; preds = %if.end4.i.i.i, %move_freelist_tail.exit184.i.i.update_fast_start_pfn.exit.i.i_crit_edge
  %and64.i.i = and i32 %add51.i.i, -2048
  %238 = ptrtoint ptr %fast_search_fail.i.i.i to i32
  call void @__asan_store2_noabort(i32 %238)
  store i16 0, ptr %fast_search_fail.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %239 = load ptr, ptr @mem_map, align 4
  %sub.ptr.rhs.cast66.i.i = ptrtoint ptr %239 to i32
  %sub.ptr.sub67.i.i = sub i32 %sub.ptr.lhs.cast.i.i.le, %sub.ptr.rhs.cast66.i.i
  %sub.ptr.div68.i.i = sdiv exact i32 %sub.ptr.sub67.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %240 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add69.i.i = add i32 %sub.ptr.div68.i.i, %240
  call void @set_pfnblock_flags_mask(ptr noundef %freepage.0204.i.i, i32 noundef 8, i32 noundef %add69.i.i, i32 noundef 8) #11
  br label %for.end.i.i

cleanup.i.i333:                                   ; preds = %if.then54.i.i.cleanup.i.i333_crit_edge, %if.end50.i.i.cleanup.i.i333_crit_edge
  %241 = ptrtoint ptr %.pn203.i.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %.pn.i.i = load ptr, ptr %.pn203.i.i, align 4
  %cmp43.not.i.i = icmp eq ptr %.pn.i.i, %arrayidx40.i.i
  br i1 %cmp43.not.i.i, label %cleanup.i.i333.for.end.i.i_crit_edge, label %cleanup.i.i333.for.body45.i.i_crit_edge

cleanup.i.i333.for.body45.i.i_crit_edge:          ; preds = %cleanup.i.i333
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body45.i.i

cleanup.i.i333.for.end.i.i_crit_edge:             ; preds = %cleanup.i.i333
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %cleanup.i.i333.for.end.i.i_crit_edge, %update_fast_start_pfn.exit.i.i, %move_freelist_tail.exit.i.i, %do.body33.i.i.for.end.i.i_crit_edge
  %found_block.3.off0.i.i = phi i1 [ true, %update_fast_start_pfn.exit.i.i ], [ %found_block.0.off0208.i.i, %move_freelist_tail.exit.i.i ], [ %found_block.0.off0208.i.i, %do.body33.i.i.for.end.i.i_crit_edge ], [ %found_block.0.off0208.i.i, %cleanup.i.i333.for.end.i.i_crit_edge ]
  %pfn.3.i.i = phi i32 [ %and64.i.i, %update_fast_start_pfn.exit.i.i ], [ %pfn.0209.i.i, %move_freelist_tail.exit.i.i ], [ %pfn.0209.i.i, %do.body33.i.i.for.end.i.i_crit_edge ], [ %pfn.0209.i.i, %cleanup.i.i333.for.end.i.i_crit_edge ]
  %nr_scanned.2.i.i = phi i32 [ %inc.i.i332, %update_fast_start_pfn.exit.i.i ], [ %177, %move_freelist_tail.exit.i.i ], [ %nr_scanned.0210.i.i, %do.body33.i.i.for.end.i.i_crit_edge ], [ %inc.i.i332, %cleanup.i.i333.for.end.i.i_crit_edge ]
  %242 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %zone, align 4
  %lock77.i.i = getelementptr inbounds %struct.zone, ptr %243, i32 0, i32 22
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock77.i.i, i32 noundef %call37.i.i) #11
  br label %cleanup78.i.i

cleanup78.i.i:                                    ; preds = %for.end.i.i, %for.body.i.i331.cleanup78.i.i_crit_edge
  %found_block.4.off0.i.i = phi i1 [ %found_block.3.off0.i.i, %for.end.i.i ], [ %found_block.0.off0208.i.i, %for.body.i.i331.cleanup78.i.i_crit_edge ]
  %pfn.4.i.i = phi i32 [ %pfn.3.i.i, %for.end.i.i ], [ %pfn.0209.i.i, %for.body.i.i331.cleanup78.i.i_crit_edge ]
  %nr_scanned.3.i.i = phi i32 [ %nr_scanned.2.i.i, %for.end.i.i ], [ %nr_scanned.0210.i.i, %for.body.i.i331.cleanup78.i.i_crit_edge ]
  %order.0.i.i = add i32 %order.0211.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %order.0.i.i)
  %cmp25.i.i = icmp slt i32 %order.0.i.i, 3
  %brmerge.i.i = select i1 %cmp25.i.i, i1 true, i1 %found_block.4.off0.i.i
  %brmerge.not.i.i = xor i1 %brmerge.i.i, true
  call void @__sanitizer_cov_trace_cmp4(i32 %nr_scanned.3.i.i, i32 %shr.i.i.i323)
  %cmp28.i.i = icmp ule i32 %nr_scanned.3.i.i, %shr.i.i.i323
  %or.cond158.i.i = select i1 %brmerge.not.i.i, i1 %cmp28.i.i, i1 false
  br i1 %or.cond158.i.i, label %cleanup78.i.i.for.body.i.i331_crit_edge, label %for.end85.i.i

cleanup78.i.i.for.body.i.i331_crit_edge:          ; preds = %cleanup78.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i.i331

for.end85.i.i:                                    ; preds = %cleanup78.i.i
  %244 = ptrtoint ptr %total_migrate_scanned to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %total_migrate_scanned, align 4
  %add86.i.i = add i32 %245, %nr_scanned.3.i.i
  store i32 %add86.i.i, ptr %total_migrate_scanned, align 4
  br i1 %found_block.4.off0.i.i, label %for.end85.i.i.fast_find_migrateblock.exit.i_crit_edge, label %if.then88.i.i

for.end85.i.i.fast_find_migrateblock.exit.i_crit_edge: ; preds = %for.end85.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_find_migrateblock.exit.i

if.then88.i.i:                                    ; preds = %for.end85.i.i
  %246 = ptrtoint ptr %fast_search_fail.i.i.i to i32
  call void @__asan_load2_noabort(i32 %246)
  %247 = load i16, ptr %fast_search_fail.i.i.i, align 4
  %inc90.i.i = add i16 %247, 1
  store i16 %inc90.i.i, ptr %fast_search_fail.i.i.i, align 4
  %248 = ptrtoint ptr %fast_start_pfn to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %fast_start_pfn, align 4
  %250 = zext i32 %249 to i64
  call void @__sanitizer_cov_trace_switch(i64 %250, ptr @__sancov_gen_cov_switch_values.145)
  switch i32 %249, label %if.end.i.i.i [
    i32 0, label %if.then88.i.i.reinit_migrate_pfn.exit.i.i_crit_edge
    i32 -1, label %if.then88.i.i.reinit_migrate_pfn.exit.i.i_crit_edge459
  ]

if.then88.i.i.reinit_migrate_pfn.exit.i.i_crit_edge459: ; preds = %if.then88.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %reinit_migrate_pfn.exit.i.i

if.then88.i.i.reinit_migrate_pfn.exit.i.i_crit_edge: ; preds = %if.then88.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %reinit_migrate_pfn.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then88.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %251 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_store4_noabort(i32 %251)
  store i32 %249, ptr %migrate_pfn75, align 4
  %252 = ptrtoint ptr %fast_start_pfn to i32
  call void @__asan_store4_noabort(i32 %252)
  store i32 -1, ptr %fast_start_pfn, align 4
  br label %reinit_migrate_pfn.exit.i.i

reinit_migrate_pfn.exit.i.i:                      ; preds = %if.end.i.i.i, %if.then88.i.i.reinit_migrate_pfn.exit.i.i_crit_edge, %if.then88.i.i.reinit_migrate_pfn.exit.i.i_crit_edge459
  %253 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %253)
  %retval.0.i.i.i = load i32, ptr %migrate_pfn75, align 4
  br label %fast_find_migrateblock.exit.i

fast_find_migrateblock.exit.i:                    ; preds = %reinit_migrate_pfn.exit.i.i, %for.end85.i.i.fast_find_migrateblock.exit.i_crit_edge, %land.lhs.true9.i.i.fast_find_migrateblock.exit.i_crit_edge, %if.end3.i.i.fast_find_migrateblock.exit.i_crit_edge, %if.end.i.i328.fast_find_migrateblock.exit.i_crit_edge, %while.body.fast_find_migrateblock.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %148, %while.body.fast_find_migrateblock.exit.i_crit_edge ], [ %148, %if.end.i.i328.fast_find_migrateblock.exit.i_crit_edge ], [ %148, %if.end3.i.i.fast_find_migrateblock.exit.i_crit_edge ], [ %148, %land.lhs.true9.i.i.fast_find_migrateblock.exit.i_crit_edge ], [ %pfn.4.i.i, %for.end85.i.i.fast_find_migrateblock.exit.i_crit_edge ], [ %retval.0.i.i.i, %reinit_migrate_pfn.exit.i.i ]
  %and.i334 = and i32 %retval.0.i.i, -2048
  %254 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %zone, align 4
  %zone_start_pfn.i336 = getelementptr inbounds %struct.zone, ptr %255, i32 0, i32 10
  %256 = ptrtoint ptr %zone_start_pfn.i336 to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load i32, ptr %zone_start_pfn.i336, align 4
  %258 = call i32 @llvm.umax.i32(i32 %and.i334, i32 %257) #11
  %259 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %migrate_pfn75, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i.i, i32 %260)
  %cmp5.not.i = icmp eq i32 %retval.0.i.i, %260
  br i1 %cmp5.not.i, label %fast_find_migrateblock.exit.i.land.end.i_crit_edge, label %land.rhs.i337

fast_find_migrateblock.exit.i.land.end.i_crit_edge: ; preds = %fast_find_migrateblock.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.end.i

land.rhs.i337:                                    ; preds = %fast_find_migrateblock.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  %261 = ptrtoint ptr %fast_search_fail.i.i.i to i32
  call void @__asan_load2_noabort(i32 %261)
  %262 = load i16, ptr %fast_search_fail.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %262)
  %tobool6.not.i = icmp eq i16 %262, 0
  br label %land.end.i

land.end.i:                                       ; preds = %land.rhs.i337, %fast_find_migrateblock.exit.i.land.end.i_crit_edge
  %263 = phi i1 [ false, %fast_find_migrateblock.exit.i.land.end.i_crit_edge ], [ %tobool6.not.i, %land.rhs.i337 ]
  %add7.i = add i32 %retval.0.i.i, 2048
  %and8.i = and i32 %add7.i, -2048
  %264 = ptrtoint ptr %free_pfn76 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %free_pfn76, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %and8.i, i32 %265)
  %cmp9.not121.i = icmp ugt i32 %and8.i, %265
  br i1 %cmp9.not121.i, label %land.end.i.for.end.i_crit_edge, label %land.end.i.for.body.i_crit_edge

land.end.i.for.body.i_crit_edge:                  ; preds = %land.end.i
  br label %for.body.i

land.end.i.for.end.i_crit_edge:                   ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %land.end.i.for.body.i_crit_edge
  %fast_find_block.0.off0125.i = phi i1 [ false, %for.inc.i.for.body.i_crit_edge ], [ %263, %land.end.i.for.body.i_crit_edge ]
  %low_pfn.0124.i = phi i32 [ %block_end_pfn.0123.i, %for.inc.i.for.body.i_crit_edge ], [ %retval.0.i.i, %land.end.i.for.body.i_crit_edge ]
  %block_end_pfn.0123.i = phi i32 [ %add34.i, %for.inc.i.for.body.i_crit_edge ], [ %and8.i, %land.end.i.for.body.i_crit_edge ]
  %block_start_pfn.1122.i = phi i32 [ %block_end_pfn.0123.i, %for.inc.i.for.body.i_crit_edge ], [ %258, %land.end.i.for.body.i_crit_edge ]
  %rem.i = and i32 %low_pfn.0124.i, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %tobool10.not.i = icmp eq i32 %rem.i, 0
  br i1 %tobool10.not.i, label %if.then11.i, label %for.body.i.if.end13.i_crit_edge

for.body.i.if.end13.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end13.i

if.then11.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__might_resched(ptr noundef nonnull @.str.27, i32 noundef 1898, i32 noundef 0) #11
  %call.i.i = call i32 @__cond_resched() #11
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then11.i, %for.body.i.if.end13.i_crit_edge
  %266 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %zone, align 4
  %contiguous.i.i = getelementptr inbounds %struct.zone, ptr %267, i32 0, i32 34
  %268 = ptrtoint ptr %contiguous.i.i to i32
  call void @__asan_load1_noabort(i32 %268)
  %269 = load i8, ptr %contiguous.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %269)
  %tobool.not.i69.i = icmp eq i8 %269, 0
  br i1 %tobool.not.i69.i, label %if.end.i72.i, label %if.then.i.i338

if.then.i.i338:                                   ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %270 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %271 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i70.i = sub i32 %block_start_pfn.1122.i, %271
  %add.ptr.i.i = getelementptr %struct.page, ptr %270, i32 %sub.i70.i
  br label %pageblock_pfn_to_page.exit.i

if.end.i72.i:                                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #13
  %call.i71.i = call ptr @__pageblock_pfn_to_page(i32 noundef %block_start_pfn.1122.i, i32 noundef %block_end_pfn.0123.i, ptr noundef %267) #11
  br label %pageblock_pfn_to_page.exit.i

pageblock_pfn_to_page.exit.i:                     ; preds = %if.end.i72.i, %if.then.i.i338
  %retval.0.i73.i = phi ptr [ %add.ptr.i.i, %if.then.i.i338 ], [ %call.i71.i, %if.end.i72.i ]
  %tobool16.not.i = icmp eq ptr %retval.0.i73.i, null
  br i1 %tobool16.not.i, label %pageblock_pfn_to_page.exit.i.for.inc.i_crit_edge, label %if.end18.i

pageblock_pfn_to_page.exit.i.for.inc.i_crit_edge: ; preds = %pageblock_pfn_to_page.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end18.i:                                       ; preds = %pageblock_pfn_to_page.exit.i
  %and19.i = and i32 %low_pfn.0124.i, 2047
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i)
  %cmp20.i = icmp ne i32 %and19.i, 0
  %brmerge.i = select i1 %cmp20.i, i1 true, i1 %fast_find_block.0.off0125.i
  br i1 %brmerge.i, label %if.end18.i.if.end25.i_crit_edge, label %land.lhs.true22.i

if.end18.i.if.end25.i_crit_edge:                  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end25.i

land.lhs.true22.i:                                ; preds = %if.end18.i
  %272 = ptrtoint ptr %ignore_skip_hint.i.i to i32
  call void @__asan_load1_noabort(i32 %272)
  %273 = load i8, ptr %ignore_skip_hint.i.i, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %273)
  %tobool.not.i75.i = icmp eq i8 %273, 0
  br i1 %tobool.not.i75.i, label %isolation_suitable.exit.i, label %land.lhs.true22.i.if.end25.i_crit_edge

land.lhs.true22.i.if.end25.i_crit_edge:           ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end25.i

isolation_suitable.exit.i:                        ; preds = %land.lhs.true22.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %274 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i76.i = ptrtoint ptr %retval.0.i73.i to i32
  %sub.ptr.rhs.cast.i77.i = ptrtoint ptr %274 to i32
  %sub.ptr.sub.i78.i = sub i32 %sub.ptr.lhs.cast.i76.i, %sub.ptr.rhs.cast.i77.i
  %sub.ptr.div.i79.i = sdiv exact i32 %sub.ptr.sub.i78.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %275 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i80.i = add i32 %sub.ptr.div.i79.i, %275
  %call.i81.i = call i32 @get_pfnblock_flags_mask(ptr noundef nonnull %retval.0.i73.i, i32 noundef %add.i80.i, i32 noundef 8) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i81.i)
  %tobool1.not.i.i = icmp eq i32 %call.i81.i, 0
  br i1 %tobool1.not.i.i, label %isolation_suitable.exit.i.if.end25.i_crit_edge, label %isolation_suitable.exit.i.for.inc.i_crit_edge

isolation_suitable.exit.i.for.inc.i_crit_edge:    ; preds = %isolation_suitable.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

isolation_suitable.exit.i.if.end25.i_crit_edge:   ; preds = %isolation_suitable.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end25.i

if.end25.i:                                       ; preds = %isolation_suitable.exit.i.if.end25.i_crit_edge, %land.lhs.true22.i.if.end25.i_crit_edge, %if.end18.i.if.end25.i_crit_edge
  %276 = ptrtoint ptr %retval.0.i73.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load volatile i32, ptr %retval.0.i73.i, align 4
  %278 = and i32 %277, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %278)
  %tobool.not.i.i.i.i = icmp eq i32 %278, 0
  br i1 %tobool.not.i.i.i.i, label %PageCompound.exit.i.i.i, label %if.end25.i.if.end.i.i84.i_crit_edge

if.end25.i.if.end.i.i84.i_crit_edge:              ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i84.i

PageCompound.exit.i.i.i:                          ; preds = %if.end25.i
  %279 = getelementptr inbounds %struct.page, ptr %retval.0.i73.i, i32 0, i32 1
  %280 = ptrtoint ptr %279 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load volatile i32, ptr %279, align 4
  %and.i.i.i.i.i = and i32 %281, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i339 = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i339, label %PageCompound.exit.i.i.i.if.end.i89.i_crit_edge, label %PageCompound.exit.i.i.i.if.end.i.i84.i_crit_edge

PageCompound.exit.i.i.i.if.end.i.i84.i_crit_edge: ; preds = %PageCompound.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i84.i

PageCompound.exit.i.i.i.if.end.i89.i_crit_edge:   ; preds = %PageCompound.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i89.i

if.end.i.i84.i:                                   ; preds = %PageCompound.exit.i.i.i.if.end.i.i84.i_crit_edge, %if.end25.i.if.end.i.i84.i_crit_edge
  %282 = getelementptr inbounds %struct.page, ptr %retval.0.i73.i, i32 0, i32 1
  %283 = ptrtoint ptr %282 to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load volatile i32, ptr %282, align 4
  %and.i.i.i.i = and i32 %284, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i7.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i7.i.i.i, label %if.end.i.i.i86.i, label %if.then.i.i.i85.i, !prof !434

if.then.i.i.i85.i:                                ; preds = %if.end.i.i84.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i.i.i = add i32 %284, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i86.i:                                 ; preds = %if.end.i.i84.i
  call void @__sanitizer_cov_trace_pc() #13
  %285 = ptrtoint ptr %retval.0.i73.i to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i86.i, %if.then.i.i.i85.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i85.i ], [ %285, %if.end.i.i.i86.i ]
  %286 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %287 = ptrtoint ptr %286 to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load volatile i32, ptr %286, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %288)
  %cmp.i.not.i.i.i.i87.i = icmp eq i32 %288, -1
  br i1 %cmp.i.not.i.i.i.i87.i, label %if.then.i.i.i.i.i, label %PageHead.exit.i.i.i.i, !prof !435

if.then.i.i.i.i.i:                                ; preds = %_compound_head.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %289 = inttoptr i32 %retval.0.i.i.i.i to ptr
  call void @dump_page(ptr noundef %289, ptr noundef nonnull @.str.124) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !448
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %_compound_head.exit.i.i.i
  %290 = ptrtoint ptr %286 to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load volatile i32, ptr %286, align 4
  %292 = and i32 %291, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %292)
  %tobool.not.i8.i.i.i = icmp eq i32 %292, 0
  br i1 %tobool.not.i8.i.i.i, label %PageHead.exit.i.i.i.i.if.end.i89.i_crit_edge, label %pageblock_skip_persistent.exit.i.i

PageHead.exit.i.i.i.i.if.end.i89.i_crit_edge:     ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i89.i

pageblock_skip_persistent.exit.i.i:               ; preds = %PageHead.exit.i.i.i.i
  %293 = getelementptr %struct.page, ptr %286, i32 1, i32 1
  %compound_order.i.i.i.i = getelementptr inbounds %struct.anon.69, ptr %293, i32 0, i32 2
  %294 = ptrtoint ptr %compound_order.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %294)
  %295 = load i8, ptr %compound_order.i.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %295)
  %phi.cmp.i.i.i = icmp ugt i8 %295, 10
  br i1 %phi.cmp.i.i.i, label %pageblock_skip_persistent.exit.i.i.if.then27.i_crit_edge, label %pageblock_skip_persistent.exit.i.i.if.end.i89.i_crit_edge

pageblock_skip_persistent.exit.i.i.if.end.i89.i_crit_edge: ; preds = %pageblock_skip_persistent.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i89.i

pageblock_skip_persistent.exit.i.i.if.then27.i_crit_edge: ; preds = %pageblock_skip_persistent.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then27.i

if.end.i89.i:                                     ; preds = %pageblock_skip_persistent.exit.i.i.if.end.i89.i_crit_edge, %PageHead.exit.i.i.i.i.if.end.i89.i_crit_edge, %PageCompound.exit.i.i.i.if.end.i89.i_crit_edge
  %296 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %297)
  %cmp.not.i88.i = icmp eq i32 %297, 0
  br i1 %cmp.not.i88.i, label %lor.lhs.false.i.i340, label %if.end.i89.i.if.end28.i_crit_edge

if.end.i89.i.if.end28.i_crit_edge:                ; preds = %if.end.i89.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end28.i

lor.lhs.false.i.i340:                             ; preds = %if.end.i89.i
  %298 = ptrtoint ptr %direct_compaction.i.i to i32
  call void @__asan_load1_noabort(i32 %298)
  %299 = load i8, ptr %direct_compaction.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %299)
  %tobool.not.i91.i = icmp eq i8 %299, 0
  br i1 %tobool.not.i91.i, label %lor.lhs.false.i.i340.if.end28.i_crit_edge, label %if.end2.i.i

lor.lhs.false.i.i340.if.end28.i_crit_edge:        ; preds = %lor.lhs.false.i.i340
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end28.i

if.end2.i.i:                                      ; preds = %lor.lhs.false.i.i340
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %300 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i92.i = ptrtoint ptr %retval.0.i73.i to i32
  %sub.ptr.rhs.cast.i93.i = ptrtoint ptr %300 to i32
  %sub.ptr.sub.i94.i = sub i32 %sub.ptr.lhs.cast.i92.i, %sub.ptr.rhs.cast.i93.i
  %sub.ptr.div.i95.i = sdiv exact i32 %sub.ptr.sub.i94.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %301 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i96.i = add i32 %sub.ptr.div.i95.i, %301
  %call3.i.i = call i32 @get_pfnblock_flags_mask(ptr noundef nonnull %retval.0.i73.i, i32 noundef %add.i96.i, i32 noundef 7) #11
  %302 = ptrtoint ptr %migratetype to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %migratetype, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %303)
  %cmp4.i.i = icmp eq i32 %303, 1
  br i1 %cmp4.i.i, label %if.then5.i.i, label %suitable_migration_source.exit.i

if.then5.i.i:                                     ; preds = %if.end2.i.i
  %304 = zext i32 %call3.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %304, ptr @__sancov_gen_cov_switch_values.146)
  switch i32 %call3.i.i, label %if.then5.i.i.if.then27.i_crit_edge [
    i32 4, label %if.then5.i.i.if.end28.i_crit_edge
    i32 1, label %if.then5.i.i.if.end28.i_crit_edge460
  ]

if.then5.i.i.if.end28.i_crit_edge460:             ; preds = %if.then5.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end28.i

if.then5.i.i.if.end28.i_crit_edge:                ; preds = %if.then5.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end28.i

if.then5.i.i.if.then27.i_crit_edge:               ; preds = %if.then5.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then27.i

suitable_migration_source.exit.i:                 ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %call3.i.i, i32 %303)
  %cmp8.i.i = icmp eq i32 %call3.i.i, %303
  br i1 %cmp8.i.i, label %suitable_migration_source.exit.i.if.end28.i_crit_edge, label %suitable_migration_source.exit.i.if.then27.i_crit_edge

suitable_migration_source.exit.i.if.then27.i_crit_edge: ; preds = %suitable_migration_source.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then27.i

suitable_migration_source.exit.i.if.end28.i_crit_edge: ; preds = %suitable_migration_source.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end28.i

if.then27.i:                                      ; preds = %suitable_migration_source.exit.i.if.then27.i_crit_edge, %if.then5.i.i.if.then27.i_crit_edge, %pageblock_skip_persistent.exit.i.i.if.then27.i_crit_edge
  %add2.i.i = add i32 %block_end_pfn.0123.i, 2048
  %305 = ptrtoint ptr %no_set_skip_hint.i.i to i32
  call void @__asan_load1_noabort(i32 %305)
  %306 = load i8, ptr %no_set_skip_hint.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %306)
  %tobool.not.i101.i = icmp eq i8 %306, 0
  br i1 %tobool.not.i101.i, label %if.end.i102.i, label %if.then27.i.for.inc.i_crit_edge

if.then27.i.for.inc.i_crit_edge:                  ; preds = %if.then27.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end.i102.i:                                    ; preds = %if.then27.i
  %307 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load ptr, ptr %zone, align 4
  %compact_cached_migrate_pfn.i.i = getelementptr inbounds %struct.zone, ptr %308, i32 0, i32 27
  %309 = ptrtoint ptr %compact_cached_migrate_pfn.i.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load i32, ptr %compact_cached_migrate_pfn.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %add2.i.i, i32 %310)
  %cmp.i.i341 = icmp ugt i32 %add2.i.i, %310
  br i1 %cmp.i.i341, label %if.then3.i.i, label %if.end.i102.i.if.end6.i.i342_crit_edge

if.end.i102.i.if.end6.i.i342_crit_edge:           ; preds = %if.end.i102.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end6.i.i342

if.then3.i.i:                                     ; preds = %if.end.i102.i
  call void @__sanitizer_cov_trace_pc() #13
  %311 = ptrtoint ptr %compact_cached_migrate_pfn.i.i to i32
  call void @__asan_store4_noabort(i32 %311)
  store i32 %add2.i.i, ptr %compact_cached_migrate_pfn.i.i, align 8
  br label %if.end6.i.i342

if.end6.i.i342:                                   ; preds = %if.then3.i.i, %if.end.i102.i.if.end6.i.i342_crit_edge
  %312 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %313)
  %cmp7.not.i.i = icmp eq i32 %313, 0
  br i1 %cmp7.not.i.i, label %if.end6.i.i342.for.inc.i_crit_edge, label %land.lhs.true.i.i343

if.end6.i.i342.for.inc.i_crit_edge:               ; preds = %if.end6.i.i342
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

land.lhs.true.i.i343:                             ; preds = %if.end6.i.i342
  %arrayidx9.i.i = getelementptr %struct.zone, ptr %308, i32 0, i32 27, i32 1
  %314 = ptrtoint ptr %arrayidx9.i.i to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %arrayidx9.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add2.i.i, i32 %315)
  %cmp10.i.i = icmp ugt i32 %add2.i.i, %315
  br i1 %cmp10.i.i, label %if.then11.i.i, label %land.lhs.true.i.i343.for.inc.i_crit_edge

land.lhs.true.i.i343.for.inc.i_crit_edge:         ; preds = %land.lhs.true.i.i343
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.then11.i.i:                                    ; preds = %land.lhs.true.i.i343
  call void @__sanitizer_cov_trace_pc() #13
  %316 = ptrtoint ptr %arrayidx9.i.i to i32
  call void @__asan_store4_noabort(i32 %316)
  store i32 %add2.i.i, ptr %arrayidx9.i.i, align 4
  br label %for.inc.i

if.end28.i:                                       ; preds = %suitable_migration_source.exit.i.if.end28.i_crit_edge, %if.then5.i.i.if.end28.i_crit_edge, %if.then5.i.i.if.end28.i_crit_edge460, %lor.lhs.false.i.i340.if.end28.i_crit_edge, %if.end.i89.i.if.end28.i_crit_edge
  %call29.i = call fastcc i32 @isolate_migratepages_block(ptr noundef %cc, i32 noundef %low_pfn.0124.i, i32 noundef %block_end_pfn.0123.i, i32 noundef %or.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i)
  %tobool30.not.i = icmp eq i32 %call29.i, 0
  br i1 %tobool30.not.i, label %if.end28.i.for.end.i_crit_edge, label %sw.bb

if.end28.i.for.end.i_crit_edge:                   ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i

for.inc.i:                                        ; preds = %if.then11.i.i, %land.lhs.true.i.i343.for.inc.i_crit_edge, %if.end6.i.i342.for.inc.i_crit_edge, %if.then27.i.for.inc.i_crit_edge, %isolation_suitable.exit.i.for.inc.i_crit_edge, %pageblock_pfn_to_page.exit.i.for.inc.i_crit_edge
  %317 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_store4_noabort(i32 %317)
  store i32 %block_end_pfn.0123.i, ptr %migrate_pfn75, align 4
  %add34.i = add i32 %block_end_pfn.0123.i, 2048
  %318 = ptrtoint ptr %free_pfn76 to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load i32, ptr %free_pfn76, align 4
  %cmp9.not.i = icmp ugt i32 %add34.i, %319
  br i1 %cmp9.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end28.i.for.end.i_crit_edge, %land.end.i.for.end.i_crit_edge
  %320 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load i32, ptr %nr_migratepages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %321)
  %tobool35.not.i = icmp eq i32 %321, 0
  br i1 %tobool35.not.i, label %sw.bb90, label %sw.epilog

sw.bb:                                            ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @putback_movable_pages(ptr noundef %migratepages) #11
  %322 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_store4_noabort(i32 %322)
  store i32 0, ptr %nr_migratepages, align 4
  br label %out

sw.bb90:                                          ; preds = %for.end.i
  br i1 %update_cached.0.off0, label %if.then92, label %sw.bb90.check_drain_crit_edge

sw.bb90.check_drain_crit_edge:                    ; preds = %sw.bb90
  call void @__sanitizer_cov_trace_pc() #13
  br label %check_drain

if.then92:                                        ; preds = %sw.bb90
  call void @__sanitizer_cov_trace_pc() #13
  %323 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load ptr, ptr %zone, align 4
  %compact_cached_migrate_pfn94 = getelementptr inbounds %struct.zone, ptr %324, i32 0, i32 27
  %325 = ptrtoint ptr %compact_cached_migrate_pfn94 to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load i32, ptr %compact_cached_migrate_pfn94, align 8
  %arrayidx98 = getelementptr %struct.zone, ptr %324, i32 0, i32 27, i32 1
  %327 = ptrtoint ptr %arrayidx98 to i32
  call void @__asan_store4_noabort(i32 %327)
  store i32 %326, ptr %arrayidx98, align 4
  br label %check_drain

sw.epilog:                                        ; preds = %for.end.i
  %328 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load i32, ptr %mode, align 4
  %call103 = call i32 @migrate_pages(ptr noundef %migratepages, ptr noundef nonnull @compaction_alloc, ptr noundef nonnull @compaction_free, i32 noundef %82, i32 noundef %329, i32 noundef 0, ptr noundef nonnull %nr_succeeded) #11
  %330 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load i32, ptr %nr_migratepages, align 4
  %332 = ptrtoint ptr %nr_succeeded to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %nr_succeeded, align 4
  call fastcc void @trace_mm_compaction_migratepages(i32 noundef %331, i32 noundef %333)
  %334 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_store4_noabort(i32 %334)
  store i32 0, ptr %nr_migratepages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call103)
  %tobool106.not = icmp eq i32 %call103, 0
  br i1 %tobool106.not, label %sw.epilog.check_drain_crit_edge, label %if.then107

sw.epilog.check_drain_crit_edge:                  ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #13
  br label %check_drain

if.then107:                                       ; preds = %sw.epilog
  call void @putback_movable_pages(ptr noundef %migratepages) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -12, i32 %call103)
  %cmp109 = icmp eq i32 %call103, -12
  br i1 %cmp109, label %land.lhs.true, label %if.then107.if.end112_crit_edge

if.then107.if.end112_crit_edge:                   ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end112

land.lhs.true:                                    ; preds = %if.then107
  %335 = ptrtoint ptr %free_pfn76 to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load i32, ptr %free_pfn76, align 4
  %shr.i346 = lshr i32 %336, 11
  %337 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load i32, ptr %migrate_pfn75, align 4
  %shr1.i = lshr i32 %338, 11
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i346, i32 %shr1.i)
  %cmp.i347.not = icmp ugt i32 %shr.i346, %shr1.i
  br i1 %cmp.i347.not, label %land.lhs.true.out_crit_edge, label %land.lhs.true.if.end112_crit_edge

land.lhs.true.if.end112_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end112

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.end112:                                        ; preds = %land.lhs.true.if.end112_crit_edge, %if.then107.if.end112_crit_edge
  %339 = ptrtoint ptr %direct_compaction.i.i to i32
  call void @__asan_load1_noabort(i32 %339)
  %340 = load i8, ptr %direct_compaction.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %340)
  %tobool113.not = icmp eq i8 %340, 0
  br i1 %tobool113.not, label %if.end112.check_drain_crit_edge, label %land.lhs.true114

if.end112.check_drain_crit_edge:                  ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #13
  br label %check_drain

land.lhs.true114:                                 ; preds = %if.end112
  %341 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load i32, ptr %mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %342)
  %cmp116 = icmp eq i32 %342, 0
  br i1 %cmp116, label %check_drain.thread, label %land.lhs.true114.check_drain_crit_edge

land.lhs.true114.check_drain_crit_edge:           ; preds = %land.lhs.true114
  call void @__sanitizer_cov_trace_pc() #13
  br label %check_drain

check_drain:                                      ; preds = %land.lhs.true114.check_drain_crit_edge, %if.end112.check_drain_crit_edge, %sw.epilog.check_drain_crit_edge, %if.then92, %sw.bb90.check_drain_crit_edge
  %last_migrated_pfn.2 = phi i32 [ %148, %land.lhs.true114.check_drain_crit_edge ], [ %148, %if.end112.check_drain_crit_edge ], [ %148, %sw.epilog.check_drain_crit_edge ], [ %last_migrated_pfn.0, %if.then92 ], [ %last_migrated_pfn.0, %sw.bb90.check_drain_crit_edge ]
  %update_cached.2.off0 = phi i1 [ false, %land.lhs.true114.check_drain_crit_edge ], [ false, %if.end112.check_drain_crit_edge ], [ false, %sw.epilog.check_drain_crit_edge ], [ true, %if.then92 ], [ false, %sw.bb90.check_drain_crit_edge ]
  %343 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load i32, ptr %order, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %344)
  %cmp131 = icmp sgt i32 %344, 0
  br i1 %cmp131, label %land.lhs.true132, label %check_drain.if.end145_crit_edge

check_drain.if.end145_crit_edge:                  ; preds = %check_drain
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end145

check_drain.thread:                               ; preds = %land.lhs.true114
  call void @__sanitizer_cov_trace_pc() #13
  %345 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load i32, ptr %migrate_pfn75, align 4
  %347 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load i32, ptr %order, align 4
  %notmask317 = shl nsw i32 -1, %348
  %sub121 = xor i32 %notmask317, -1
  %add122 = add i32 %346, %sub121
  %and126 = and i32 %add122, %notmask317
  store i32 %and126, ptr %migrate_pfn75, align 4
  br label %if.end145

land.lhs.true132:                                 ; preds = %check_drain
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %last_migrated_pfn.2)
  %tobool133.not = icmp eq i32 %last_migrated_pfn.2, 0
  br i1 %tobool133.not, label %land.lhs.true132.if.end145_crit_edge, label %if.then134

land.lhs.true132.if.end145_crit_edge:             ; preds = %land.lhs.true132
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end145

if.then134:                                       ; preds = %land.lhs.true132
  %349 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load i32, ptr %migrate_pfn75, align 4
  %notmask = shl nsw i32 -1, %344
  %and140 = and i32 %350, %notmask
  call void @__sanitizer_cov_trace_cmp4(i32 %last_migrated_pfn.2, i32 %and140)
  %cmp141 = icmp ult i32 %last_migrated_pfn.2, %and140
  br i1 %cmp141, label %if.then142, label %if.then134.if.end145_crit_edge

if.then134.if.end145_crit_edge:                   ; preds = %if.then134
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end145

if.then142:                                       ; preds = %if.then134
  call void @__sanitizer_cov_trace_pc() #13
  %351 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load ptr, ptr %zone, align 4
  call void @lru_add_drain_cpu_zone(ptr noundef %352) #11
  br label %if.end145

if.end145:                                        ; preds = %if.then142, %if.then134.if.end145_crit_edge, %land.lhs.true132.if.end145_crit_edge, %check_drain.thread, %check_drain.if.end145_crit_edge
  %update_cached.2.off0377 = phi i1 [ %update_cached.2.off0, %land.lhs.true132.if.end145_crit_edge ], [ %update_cached.2.off0, %check_drain.if.end145_crit_edge ], [ %update_cached.2.off0, %if.then142 ], [ %update_cached.2.off0, %if.then134.if.end145_crit_edge ], [ false, %check_drain.thread ]
  %last_migrated_pfn.4 = phi i32 [ 0, %land.lhs.true132.if.end145_crit_edge ], [ %last_migrated_pfn.2, %check_drain.if.end145_crit_edge ], [ 0, %if.then142 ], [ %last_migrated_pfn.2, %if.then134.if.end145_crit_edge ], [ 0, %check_drain.thread ]
  br i1 %tobool146.not, label %if.end145.while.cond.backedge_crit_edge, label %land.lhs.true147

if.end145.while.cond.backedge_crit_edge:          ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %land.lhs.true147.while.cond.backedge_crit_edge, %if.end145.while.cond.backedge_crit_edge
  br label %while.cond

land.lhs.true147:                                 ; preds = %if.end145
  %353 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load ptr, ptr %page, align 4
  %tobool148.not = icmp eq ptr %354, null
  br i1 %tobool148.not, label %land.lhs.true147.while.cond.backedge_crit_edge, label %land.lhs.true147.out_crit_edge

land.lhs.true147.out_crit_edge:                   ; preds = %land.lhs.true147
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

land.lhs.true147.while.cond.backedge_crit_edge:   ; preds = %land.lhs.true147
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.backedge

out:                                              ; preds = %land.lhs.true147.out_crit_edge, %land.lhs.true.out_crit_edge, %sw.bb, %compact_finished.exit.out_crit_edge
  %ret.1 = phi i32 [ 7, %sw.bb ], [ %retval.3.i.i, %compact_finished.exit.out_crit_edge ], [ 7, %land.lhs.true.out_crit_edge ], [ 8, %land.lhs.true147.out_crit_edge ]
  %355 = ptrtoint ptr %nr_freepages to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load i32, ptr %nr_freepages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %356)
  %cmp153.not = icmp eq i32 %356, 0
  br i1 %cmp153.not, label %out.if.end185_crit_edge, label %if.then154

out.if.end185_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end185

if.then154:                                       ; preds = %out
  %357 = ptrtoint ptr %cc to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load ptr, ptr %cc, align 4
  %cmp.not24.i = icmp eq ptr %358, %cc
  br i1 %cmp.not24.i, label %release_freepages.exit.thread, label %if.then154.for.body.i350_crit_edge

if.then154.for.body.i350_crit_edge:               ; preds = %if.then154
  br label %for.body.i350

release_freepages.exit.thread:                    ; preds = %if.then154
  call void @__sanitizer_cov_trace_pc() #13
  %359 = ptrtoint ptr %nr_freepages to i32
  call void @__asan_store4_noabort(i32 %359)
  store i32 0, ptr %nr_freepages, align 4
  br label %do.body168

for.body.i350:                                    ; preds = %list_del.exit.i.for.body.i350_crit_edge, %if.then154.for.body.i350_crit_edge
  %.pn.in26.i = phi ptr [ %.pn28.i, %list_del.exit.i.for.body.i350_crit_edge ], [ %358, %if.then154.for.body.i350_crit_edge ]
  %high_pfn.025.i = phi i32 [ %371, %list_del.exit.i.for.body.i350_crit_edge ], [ 0, %if.then154.for.body.i350_crit_edge ]
  %360 = ptrtoint ptr %.pn.in26.i to i32
  call void @__asan_load4_noabort(i32 %360)
  %.pn28.i = load ptr, ptr %.pn.in26.i, align 4
  %page.0.i = getelementptr i8, ptr %.pn.in26.i, i32 -4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %361 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %page.0.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %361 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %362 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i348 = add i32 %sub.ptr.div.i, %362
  %call.i.i.i349 = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in26.i) #11
  br i1 %call.i.i.i349, label %if.end.i.i.i351, label %for.body.i350.list_del.exit.i_crit_edge

for.body.i350.list_del.exit.i_crit_edge:          ; preds = %for.body.i350
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_del.exit.i

if.end.i.i.i351:                                  ; preds = %for.body.i350
  call void @__sanitizer_cov_trace_pc() #13
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in26.i, i32 0, i32 1
  %363 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load ptr, ptr %prev.i.i.i, align 4
  %365 = ptrtoint ptr %.pn.in26.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load ptr, ptr %.pn.in26.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %366, i32 0, i32 1
  %367 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %367)
  store ptr %364, ptr %prev1.i.i.i.i, align 4
  %368 = ptrtoint ptr %364 to i32
  call void @__asan_store4_noabort(i32 %368)
  store volatile ptr %366, ptr %364, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i351, %for.body.i350.list_del.exit.i_crit_edge
  %369 = ptrtoint ptr %.pn.in26.i to i32
  call void @__asan_store4_noabort(i32 %369)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in26.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in26.i, i32 0, i32 1
  %370 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %370)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  call void @__free_pages(ptr noundef %page.0.i, i32 noundef 0) #11
  %371 = call i32 @llvm.umax.i32(i32 %add.i348, i32 %high_pfn.025.i) #11
  %cmp.not.i352 = icmp eq ptr %.pn28.i, %cc
  br i1 %cmp.not.i352, label %release_freepages.exit, label %list_del.exit.i.for.body.i350_crit_edge

list_del.exit.i.for.body.i350_crit_edge:          ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i350

release_freepages.exit:                           ; preds = %list_del.exit.i
  %372 = ptrtoint ptr %nr_freepages to i32
  call void @__asan_store4_noabort(i32 %372)
  store i32 0, ptr %nr_freepages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %371)
  %cmp160 = icmp eq i32 %371, 0
  br i1 %cmp160, label %release_freepages.exit.do.body168_crit_edge, label %do.end176, !prof !435

release_freepages.exit.do.body168_crit_edge:      ; preds = %release_freepages.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body168

do.body168:                                       ; preds = %release_freepages.exit.do.body168_crit_edge, %release_freepages.exit.thread
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/compaction.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2467, 0\0A.popsection", ""() #11, !srcloc !496
  unreachable

do.end176:                                        ; preds = %release_freepages.exit
  %and177 = and i32 %371, -2048
  %373 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load ptr, ptr %zone, align 4
  %compact_cached_free_pfn179 = getelementptr inbounds %struct.zone, ptr %374, i32 0, i32 26
  %375 = ptrtoint ptr %compact_cached_free_pfn179 to i32
  call void @__asan_load4_noabort(i32 %375)
  %376 = load i32, ptr %compact_cached_free_pfn179, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %and177, i32 %376)
  %cmp180 = icmp ugt i32 %and177, %376
  br i1 %cmp180, label %if.then181, label %do.end176.if.end185_crit_edge

do.end176.if.end185_crit_edge:                    ; preds = %do.end176
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end185

if.then181:                                       ; preds = %do.end176
  call void @__sanitizer_cov_trace_pc() #13
  %377 = ptrtoint ptr %compact_cached_free_pfn179 to i32
  call void @__asan_store4_noabort(i32 %377)
  store i32 %and177, ptr %compact_cached_free_pfn179, align 4
  br label %if.end185

if.end185:                                        ; preds = %if.then181, %do.end176.if.end185_crit_edge, %out.if.end185_crit_edge
  %378 = ptrtoint ptr %total_migrate_scanned to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load i32, ptr %total_migrate_scanned, align 4
  %380 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !449
  %381 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i354 = and i32 %381, -16384
  %382 = inttoptr i32 %and.i.i.i354 to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %382, i32 0, i32 3
  %383 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load i32, ptr %cpu.i.i, align 4
  %arrayidx13.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %384
  %385 = ptrtoint ptr %arrayidx13.i.i to i32
  call void @__asan_load4_noabort(i32 %385)
  %386 = load i32, ptr %arrayidx13.i.i, align 4
  %add.i.i355 = add i32 %386, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 51) to i32)
  %387 = inttoptr i32 %add.i.i355 to ptr
  %388 = ptrtoint ptr %387 to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load i32, ptr %387, align 4
  %add14.i.i = add i32 %389, %379
  store i32 %add14.i.i, ptr %387, align 4
  %390 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !450
  %and.i.i.i.i356 = and i32 %390, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i356)
  %tobool.not.i.i357 = icmp eq i32 %and.i.i.i.i356, 0
  br i1 %tobool.not.i.i357, label %if.then.i.i358, label %if.end185.count_compact_events.exit_crit_edge, !prof !435

if.end185.count_compact_events.exit_crit_edge:    ; preds = %if.end185
  call void @__sanitizer_cov_trace_pc() #13
  br label %count_compact_events.exit

if.then.i.i358:                                   ; preds = %if.end185
  call void @__sanitizer_cov_trace_pc() #13
  call void @warn_bogus_irq_restore() #11
  br label %count_compact_events.exit

count_compact_events.exit:                        ; preds = %if.then.i.i358, %if.end185.count_compact_events.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %380) #11, !srcloc !451
  %391 = ptrtoint ptr %total_free_scanned to i32
  call void @__asan_load4_noabort(i32 %391)
  %392 = load i32, ptr %total_free_scanned, align 4
  %393 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !449
  %394 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i359 = and i32 %394, -16384
  %395 = inttoptr i32 %and.i.i.i359 to ptr
  %cpu.i.i360 = getelementptr inbounds %struct.thread_info, ptr %395, i32 0, i32 3
  %396 = ptrtoint ptr %cpu.i.i360 to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load i32, ptr %cpu.i.i360, align 4
  %arrayidx13.i.i361 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %397
  %398 = ptrtoint ptr %arrayidx13.i.i361 to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load i32, ptr %arrayidx13.i.i361, align 4
  %add.i.i362 = add i32 %399, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 52) to i32)
  %400 = inttoptr i32 %add.i.i362 to ptr
  %401 = ptrtoint ptr %400 to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load i32, ptr %400, align 4
  %add14.i.i363 = add i32 %402, %392
  store i32 %add14.i.i363, ptr %400, align 4
  %403 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !450
  %and.i.i.i.i364 = and i32 %403, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i364)
  %tobool.not.i.i365 = icmp eq i32 %and.i.i.i.i364, 0
  br i1 %tobool.not.i.i365, label %if.then.i.i366, label %count_compact_events.exit.count_compact_events.exit367_crit_edge, !prof !435

count_compact_events.exit.count_compact_events.exit367_crit_edge: ; preds = %count_compact_events.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %count_compact_events.exit367

if.then.i.i366:                                   ; preds = %count_compact_events.exit
  call void @__sanitizer_cov_trace_pc() #13
  call void @warn_bogus_irq_restore() #11
  br label %count_compact_events.exit367

count_compact_events.exit367:                     ; preds = %if.then.i.i366, %count_compact_events.exit.count_compact_events.exit367_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %393) #11, !srcloc !451
  %404 = ptrtoint ptr %migrate_pfn75 to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %migrate_pfn75, align 4
  %406 = ptrtoint ptr %free_pfn76 to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load i32, ptr %free_pfn76, align 4
  call fastcc void @trace_mm_compaction_end(i32 noundef %3, i32 noundef %405, i32 noundef %407, i32 noundef %add.i, i1 noundef zeroext %cmp, i32 noundef %ret.1)
  br label %cleanup191

cleanup191:                                       ; preds = %count_compact_events.exit367, %gfp_migratetype.exit.cleanup191_crit_edge, %gfp_migratetype.exit.cleanup191_crit_edge458
  %retval.0 = phi i32 [ %ret.1, %count_compact_events.exit367 ], [ %call4, %gfp_migratetype.exit.cleanup191_crit_edge ], [ %call4, %gfp_migratetype.exit.cleanup191_crit_edge458 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr_succeeded) #11
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_begin(i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_begin, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_begin, %do.body)) #11
          to label %if.end49 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i76 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i76
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end70_crit_edge, label %if.end31

cpu_online.exit.if.end70_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end70

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !497
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_begin, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end49.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool10.not.i = icmp eq ptr %19, null
  br i1 %tobool10.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !498
  br label %if.end49.sink.split

if.end49.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !498
  br label %if.end49.sink.split

if.end49.sink.split:                              ; preds = %if.end49.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i74.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i74.c to ptr
  %preempt_count.i.i75.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i75.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i75.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i75.c, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.end49.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i77 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i77 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i78 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i78, label %if.end49.cpu_online.exit86_crit_edge, label %land.rhs.i.i.i.i80

if.end49.cpu_online.exit86_crit_edge:             ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit86

land.rhs.i.i.i.i80:                               ; preds = %if.end49
  %.b37.i.i.i.i79 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i79, label %land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge, label %if.then.i.i.i.i81, !prof !434

land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge:   ; preds = %land.rhs.i.i.i.i80
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit86

if.then.i.i.i.i81:                                ; preds = %land.rhs.i.i.i.i80
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit86

cpu_online.exit86:                                ; preds = %if.then.i.i.i.i81, %land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge, %if.end49.cpu_online.exit86_crit_edge
  %div3.i.i.i82 = lshr i32 %27, 5
  %arrayidx.i.i.i83 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i82
  %29 = ptrtoint ptr %arrayidx.i.i.i83 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i83, align 4
  %and.i.i.i84 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i84
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i85.not = icmp eq i32 %32, 0
  br i1 %tobool.i85.not, label %cpu_online.exit86.if.end70_crit_edge, label %if.then53

cpu_online.exit86.if.end70_crit_edge:             ; preds = %cpu_online.exit86
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end70

if.then53:                                        ; preds = %cpu_online.exit86
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_begin, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %if.then53.do.end68_crit_edge

if.then53.do.end68_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %land.lhs.true.do.end68_crit_edge, label %land.lhs.true63

land.lhs.true.do.end68_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end68

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @trace_mm_compaction_begin.__warned, align 1
  br i1 %.b73, label %land.lhs.true63.do.end68_crit_edge, label %if.then65

land.lhs.true63.do.end68_crit_edge:               ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end68

if.then65:                                        ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_begin.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 118, ptr noundef nonnull @.str.121) #11
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63.do.end68_crit_edge, %land.lhs.true.do.end68_crit_edge, %if.then53.do.end68_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i87 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i88 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i88 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i88, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i88, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit86.if.end70_crit_edge, %cpu_online.exit.if.end70_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_add_drain() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @migrate_pages(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @compaction_alloc(ptr nocapture noundef readnone %migratepage, i32 noundef %data) #0 align 64 {
entry:
  %start_pfn.i.i.i = alloca i32, align 4
  %sublist.i.i.i = alloca %struct.list_head, align 4
  %isolate_start_pfn.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %data to ptr
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %0, align 4
  %cmp.i.not = icmp eq ptr %2, %0
  br i1 %cmp.i.not, label %if.then, label %entry.if.end5_crit_edge

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end5

if.then:                                          ; preds = %entry
  %zone1.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 7
  %3 = ptrtoint ptr %zone1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %zone1.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %isolate_start_pfn.i) #11
  %fast_search_fail.i.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 10
  %order1.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 13
  %5 = ptrtoint ptr %order1.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %order1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp2.i.i = icmp slt i32 %6, 1
  br i1 %cmp2.i.i, label %if.then.fast_isolate_freepages.exit.i_crit_edge, label %if.end.i.i

if.then.fast_isolate_freepages.exit.i_crit_edge:  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_isolate_freepages.exit.i

if.end.i.i:                                       ; preds = %if.then
  %7 = ptrtoint ptr %fast_search_fail.i.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %fast_search_fail.i.i.i, align 4
  %9 = tail call i16 @llvm.umin.i16(i16 %8, i16 31) #11
  call void @__sanitizer_cov_trace_const_cmp2(i16 5, i16 %9)
  %cmp.i.i = icmp ugt i16 %9, 5
  %cond.i.i.i = zext i16 %9 to i32
  %shr.i.i.i = lshr i32 32, %cond.i.i.i
  %add.i.i.i = add nuw nsw i32 %shr.i.i.i, 1
  %shr.i.i = lshr i32 %add.i.i.i, 1
  %cond.i.i = select i1 %cmp.i.i, i32 1, i32 %shr.i.i
  %free_pfn3.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 4
  %10 = ptrtoint ptr %free_pfn3.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %free_pfn3.i.i, align 4
  %compact_init_free_pfn.i.i = getelementptr inbounds %struct.zone, ptr %4, i32 0, i32 29
  %12 = ptrtoint ptr %compact_init_free_pfn.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %compact_init_free_pfn.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %13)
  %cmp4.not.i.i = icmp ult i32 %11, %13
  %spec.select.i.i = select i1 %cmp4.not.i.i, i32 %cond.i.i, i32 1024
  %migrate_pfn.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 5
  %14 = ptrtoint ptr %migrate_pfn.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %migrate_pfn.i.i, align 4
  %sub.i.i = sub i32 %11, %15
  %shr9.i.i = lshr i32 %sub.i.i, 2
  %sub10.i.i = sub i32 %11, %shr9.i.i
  %and.i.i = and i32 %sub10.i.i, -2048
  %shr12.i.i = lshr i32 %sub.i.i, 1
  %sub13.i.i = sub i32 %11, %shr12.i.i
  %and14.i.i = and i32 %sub13.i.i, -2048
  call void @__sanitizer_cov_trace_cmp4(i32 %and14.i.i, i32 %and.i.i)
  %cmp15.i.i = icmp ugt i32 %and14.i.i, %and.i.i
  br i1 %cmp15.i.i, label %land.rhs.i.i, label %if.end.i.i.if.end45.i.i_crit_edge

if.end.i.i.if.end45.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end45.i.i

land.rhs.i.i:                                     ; preds = %if.end.i.i
  %.b344.i.i = load i1, ptr @fast_isolate_freepages.__already_done, align 1
  br i1 %.b344.i.i, label %land.rhs.i.i.if.end45.i.i_crit_edge, label %if.then22.i.i, !prof !434

land.rhs.i.i.if.end45.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end45.i.i

if.then22.i.i:                                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @fast_isolate_freepages.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.27, i32 noundef 1411, i32 noundef 9, ptr noundef null) #11
  br label %if.end45.i.i

if.end45.i.i:                                     ; preds = %if.then22.i.i, %land.rhs.i.i.if.end45.i.i_crit_edge, %if.end.i.i.if.end45.i.i_crit_edge
  %16 = tail call i32 @llvm.umax.i32(i32 %and14.i.i, i32 %and.i.i) #11
  %17 = ptrtoint ptr %order1.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %order1.i.i, align 4
  %sub57.i.i = add i32 %18, -1
  %search_order.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 11
  %19 = ptrtoint ptr %search_order.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %search_order.i.i, align 2
  %conv.i.i = sext i16 %20 to i32
  %21 = tail call i32 @llvm.umin.i32(i32 %sub57.i.i, i32 %conv.i.i) #11
  %conv65.i.i = trunc i32 %21 to i16
  %22 = ptrtoint ptr %search_order.i.i to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %conv65.i.i, ptr %search_order.i.i, align 2
  %sext.i.i = shl i32 %21, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -65536, i32 %sext.i.i)
  %cmp71424.i.i = icmp sgt i32 %sext.i.i, -65536
  br i1 %cmp71424.i.i, label %for.body.lr.ph.i.i, label %if.then179.thread.i.i

for.body.lr.ph.i.i:                               ; preds = %if.end45.i.i
  %conv68499.i.i = and i32 %21, 65535
  %23 = getelementptr inbounds %struct.list_head, ptr %sublist.i.i.i, i32 0, i32 1
  %nr_freepages.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 2
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %next_search_order.exit.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %limit.1430.i.i = phi i32 [ %spec.select.i.i, %for.body.lr.ph.i.i ], [ %limit.7.i.i, %next_search_order.exit.i.i.for.body.i.i_crit_edge ]
  %nr_scanned.0429.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %nr_scanned.3.i.i, %next_search_order.exit.i.i.for.body.i.i_crit_edge ]
  %highest.0428.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %highest.4.i.i, %next_search_order.exit.i.i.for.body.i.i_crit_edge ]
  %nr_isolated.0427.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %nr_isolated.2.i.i, %next_search_order.exit.i.i.for.body.i.i_crit_edge ]
  %order.0425.i.i = phi i32 [ %conv68499.i.i, %for.body.lr.ph.i.i ], [ %order.addr.0.i.i.i, %next_search_order.exit.i.i.for.body.i.i_crit_edge ]
  %24 = ptrtoint ptr %zone1.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %zone1.i, align 4
  %nr_free.i.i = getelementptr %struct.zone, ptr %25, i32 0, i32 20, i32 %order.0425.i.i, i32 1
  %26 = ptrtoint ptr %nr_free.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %nr_free.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool75.not.i.i = icmp eq i32 %27, 0
  br i1 %tobool75.not.i.i, label %for.body.i.i.cleanup167.i.i_crit_edge, label %do.body79.i.i

for.body.i.i.cleanup167.i.i_crit_edge:            ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup167.i.i

do.body79.i.i:                                    ; preds = %for.body.i.i
  %lock.i.i = getelementptr inbounds %struct.zone, ptr %25, i32 0, i32 22
  %call85.i.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i.i) #11
  %arrayidx90.i.i = getelementptr %struct.zone, ptr %25, i32 0, i32 20, i32 %order.0425.i.i, i32 0, i32 1
  %prev.i.i = getelementptr %struct.zone, ptr %25, i32 0, i32 20, i32 %order.0425.i.i, i32 0, i32 1, i32 1
  %28 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %.pn403.i.i = load ptr, ptr %prev.i.i, align 4
  %freepage.0404.i.i = getelementptr i8, ptr %.pn403.i.i, i32 -4
  %cmp93.not405.i.i = icmp eq ptr %.pn403.i.i, %arrayidx90.i.i
  br i1 %cmp93.not405.i.i, label %do.body79.i.i.if.end140.i.i_crit_edge, label %for.body97.lr.ph.i.i

do.body79.i.i.if.end140.i.i_crit_edge:            ; preds = %do.body79.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end140.i.i

for.body97.lr.ph.i.i:                             ; preds = %do.body79.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %29 = load ptr, ptr @mem_map, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %30 = load i32, ptr @__pv_phys_pfn_offset, align 4
  br label %for.body97.i.i

for.cond92.i.i:                                   ; preds = %if.end117.i.i
  %prev131.i.i = getelementptr inbounds %struct.list_head, ptr %.pn411.i.i, i32 0, i32 1
  %31 = ptrtoint ptr %prev131.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pn.i.i = load ptr, ptr %prev131.i.i, align 4
  %freepage.0.i.i = getelementptr i8, ptr %.pn.i.i, i32 -4
  %cmp93.not.i.i = icmp eq ptr %.pn.i.i, %arrayidx90.i.i
  br i1 %cmp93.not.i.i, label %for.cond92.i.i.land.lhs.true135.i.i_crit_edge, label %for.cond92.i.i.for.body97.i.i_crit_edge

for.cond92.i.i.for.body97.i.i_crit_edge:          ; preds = %for.cond92.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body97.i.i

for.cond92.i.i.land.lhs.true135.i.i_crit_edge:    ; preds = %for.cond92.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true135.i.i

for.body97.i.i:                                   ; preds = %for.cond92.i.i.for.body97.i.i_crit_edge, %for.body97.lr.ph.i.i
  %freepage.0412.i.i = phi ptr [ %freepage.0404.i.i, %for.body97.lr.ph.i.i ], [ %freepage.0.i.i, %for.cond92.i.i.for.body97.i.i_crit_edge ]
  %.pn411.i.i = phi ptr [ %.pn403.i.i, %for.body97.lr.ph.i.i ], [ %.pn.i.i, %for.cond92.i.i.for.body97.i.i_crit_edge ]
  %limit.2410.i.i = phi i32 [ %limit.1430.i.i, %for.body97.lr.ph.i.i ], [ %limit.3.i.i, %for.cond92.i.i.for.body97.i.i_crit_edge ]
  %nr_scanned.1409.i.i = phi i32 [ %nr_scanned.0429.i.i, %for.body97.lr.ph.i.i ], [ %inc98.i.i, %for.cond92.i.i.for.body97.i.i_crit_edge ]
  %highest.1408.i.i = phi i32 [ %highest.0428.i.i, %for.body97.lr.ph.i.i ], [ %highest.2.i.i, %for.cond92.i.i.for.body97.i.i_crit_edge ]
  %high_pfn.0407.i.i = phi i32 [ 0, %for.body97.lr.ph.i.i ], [ %high_pfn.1.i.i, %for.cond92.i.i.for.body97.i.i_crit_edge ]
  %order_scanned.0406.i.i = phi i32 [ 0, %for.body97.lr.ph.i.i ], [ %inc.i.i, %for.cond92.i.i.for.body97.i.i_crit_edge ]
  %inc.i.i = add nuw i32 %order_scanned.0406.i.i, 1
  %inc98.i.i = add i32 %nr_scanned.1409.i.i, 1
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %freepage.0412.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 36
  %add.i.i = add i32 %sub.ptr.div.i.i, %30
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %highest.1408.i.i)
  %cmp99.not.i.i = icmp ult i32 %add.i.i, %highest.1408.i.i
  br i1 %cmp99.not.i.i, label %for.body97.i.i.if.end111.i.i_crit_edge, label %if.then101.i.i

for.body97.i.i.if.end111.i.i_crit_edge:           ; preds = %for.body97.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end111.i.i

if.then101.i.i:                                   ; preds = %for.body97.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %and102.i.i = and i32 %add.i.i, -2048
  %32 = ptrtoint ptr %zone1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %zone1.i, align 4
  %zone_start_pfn.i.i = getelementptr inbounds %struct.zone, ptr %33, i32 0, i32 10
  %34 = ptrtoint ptr %zone_start_pfn.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %zone_start_pfn.i.i, align 4
  %36 = call i32 @llvm.umax.i32(i32 %and102.i.i, i32 %35) #11
  br label %if.end111.i.i

if.end111.i.i:                                    ; preds = %if.then101.i.i, %for.body97.i.i.if.end111.i.i_crit_edge
  %highest.2.i.i = phi i32 [ %36, %if.then101.i.i ], [ %highest.1408.i.i, %for.body97.i.i.if.end111.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %16)
  %cmp112.not.i.i = icmp ult i32 %add.i.i, %16
  br i1 %cmp112.not.i.i, label %if.end117.i.i, label %for.end.i.i

if.end117.i.i:                                    ; preds = %if.end111.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %and14.i.i)
  %cmp118.not.i.i = icmp uge i32 %add.i.i, %and14.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %high_pfn.0407.i.i)
  %cmp120.i.i = icmp ugt i32 %add.i.i, %high_pfn.0407.i.i
  %or.cond346.i.i = select i1 %cmp118.not.i.i, i1 %cmp120.i.i, i1 false
  %high_pfn.1.i.i = select i1 %or.cond346.i.i, i32 %add.i.i, i32 %high_pfn.0407.i.i
  %shr123.i.i = zext i1 %or.cond346.i.i to i32
  %limit.3.i.i = lshr i32 %limit.2410.i.i, %shr123.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i.i, i32 %limit.3.i.i)
  %cmp125.not.i.i = icmp ult i32 %inc.i.i, %limit.3.i.i
  br i1 %cmp125.not.i.i, label %for.cond92.i.i, label %if.end117.i.i.land.lhs.true135.i.i_crit_edge

if.end117.i.i.land.lhs.true135.i.i_crit_edge:     ; preds = %if.end117.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true135.i.i

for.end.i.i:                                      ; preds = %if.end111.i.i
  %37 = ptrtoint ptr %fast_search_fail.i.i.i to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 0, ptr %fast_search_fail.i.i.i, align 4
  %conv115.i.i = trunc i32 %order.0425.i.i to i16
  %38 = ptrtoint ptr %search_order.i.i to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %conv115.i.i, ptr %search_order.i.i, align 2
  %tobool134.not.i.i = icmp eq ptr %freepage.0412.i.i, null
  br i1 %tobool134.not.i.i, label %for.end.i.i.land.lhs.true135.i.i_crit_edge, label %for.end.i.i.if.end140.i.i_crit_edge

for.end.i.i.if.end140.i.i_crit_edge:              ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end140.i.i

for.end.i.i.land.lhs.true135.i.i_crit_edge:       ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true135.i.i

land.lhs.true135.i.i:                             ; preds = %for.end.i.i.land.lhs.true135.i.i_crit_edge, %if.end117.i.i.land.lhs.true135.i.i_crit_edge, %for.cond92.i.i.land.lhs.true135.i.i_crit_edge
  %freepage.0400.i.i = phi ptr [ null, %for.end.i.i.land.lhs.true135.i.i_crit_edge ], [ %freepage.0.i.i, %for.cond92.i.i.land.lhs.true135.i.i_crit_edge ], [ %freepage.0412.i.i, %if.end117.i.i.land.lhs.true135.i.i_crit_edge ]
  %limit.5382.i.i = phi i32 [ %limit.2410.i.i, %for.end.i.i.land.lhs.true135.i.i_crit_edge ], [ %limit.3.i.i, %for.cond92.i.i.land.lhs.true135.i.i_crit_edge ], [ %limit.3.i.i, %if.end117.i.i.land.lhs.true135.i.i_crit_edge ]
  %high_pfn.3376.i.i = phi i32 [ %high_pfn.0407.i.i, %for.end.i.i.land.lhs.true135.i.i_crit_edge ], [ %high_pfn.1.i.i, %for.cond92.i.i.land.lhs.true135.i.i_crit_edge ], [ %high_pfn.1.i.i, %if.end117.i.i.land.lhs.true135.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %high_pfn.3376.i.i)
  %tobool136.not.i.i = icmp eq i32 %high_pfn.3376.i.i, 0
  br i1 %tobool136.not.i.i, label %land.lhs.true135.i.i.if.end140.i.i_crit_edge, label %if.then137.i.i

land.lhs.true135.i.i.if.end140.i.i_crit_edge:     ; preds = %land.lhs.true135.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end140.i.i

if.then137.i.i:                                   ; preds = %land.lhs.true135.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub138.i.i = sub i32 %high_pfn.3376.i.i, %30
  %add.ptr139.i.i = getelementptr %struct.page, ptr %29, i32 %sub138.i.i
  br label %if.end140.i.i

if.end140.i.i:                                    ; preds = %if.then137.i.i, %land.lhs.true135.i.i.if.end140.i.i_crit_edge, %for.end.i.i.if.end140.i.i_crit_edge, %do.body79.i.i.if.end140.i.i_crit_edge
  %limit.5381.i.i = phi i32 [ %limit.2410.i.i, %for.end.i.i.if.end140.i.i_crit_edge ], [ %limit.5382.i.i, %if.then137.i.i ], [ %limit.5382.i.i, %land.lhs.true135.i.i.if.end140.i.i_crit_edge ], [ %limit.1430.i.i, %do.body79.i.i.if.end140.i.i_crit_edge ]
  %nr_scanned.2379.i.i = phi i32 [ %inc98.i.i, %for.end.i.i.if.end140.i.i_crit_edge ], [ %inc98.i.i, %if.then137.i.i ], [ %inc98.i.i, %land.lhs.true135.i.i.if.end140.i.i_crit_edge ], [ %nr_scanned.0429.i.i, %do.body79.i.i.if.end140.i.i_crit_edge ]
  %highest.3377.i.i = phi i32 [ %highest.2.i.i, %for.end.i.i.if.end140.i.i_crit_edge ], [ %highest.2.i.i, %if.then137.i.i ], [ %highest.2.i.i, %land.lhs.true135.i.i.if.end140.i.i_crit_edge ], [ %highest.0428.i.i, %do.body79.i.i.if.end140.i.i_crit_edge ]
  %order_scanned.1374.i.i = phi i32 [ %inc.i.i, %for.end.i.i.if.end140.i.i_crit_edge ], [ %inc.i.i, %if.then137.i.i ], [ %inc.i.i, %land.lhs.true135.i.i.if.end140.i.i_crit_edge ], [ 0, %do.body79.i.i.if.end140.i.i_crit_edge ]
  %page.4.i.i = phi ptr [ %freepage.0412.i.i, %for.end.i.i.if.end140.i.i_crit_edge ], [ %add.ptr139.i.i, %if.then137.i.i ], [ null, %land.lhs.true135.i.i.if.end140.i.i_crit_edge ], [ null, %do.body79.i.i.if.end140.i.i_crit_edge ]
  %freepage.1.i.i = phi ptr [ %freepage.0412.i.i, %for.end.i.i.if.end140.i.i_crit_edge ], [ %add.ptr139.i.i, %if.then137.i.i ], [ %freepage.0400.i.i, %land.lhs.true135.i.i.if.end140.i.i_crit_edge ], [ %freepage.0404.i.i, %do.body79.i.i.if.end140.i.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sublist.i.i.i) #11
  %39 = getelementptr inbounds %struct.page, ptr %freepage.1.i.i, i32 0, i32 1
  %40 = ptrtoint ptr %arrayidx90.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx90.i.i, align 4
  %cmp.i.i.i.i = icmp eq ptr %41, %39
  br i1 %cmp.i.i.i.i, label %if.end140.i.i.move_freelist_head.exit.i.i_crit_edge, label %if.end.i.i.i.i

if.end140.i.i.move_freelist_head.exit.i.i_crit_edge: ; preds = %if.end140.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %move_freelist_head.exit.i.i

if.end.i.i.i.i:                                   ; preds = %if.end140.i.i
  %42 = ptrtoint ptr %sublist.i.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %41, ptr %sublist.i.i.i, align 4
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %41, i32 0, i32 1
  %43 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %sublist.i.i.i, ptr %prev.i.i.i.i, align 4
  %prev5.i.i.i.i = getelementptr inbounds %struct.page, ptr %freepage.1.i.i, i32 0, i32 1, i32 0, i32 0, i32 1
  %44 = ptrtoint ptr %prev5.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %prev5.i.i.i.i, align 4
  %46 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %45, ptr %23, align 4
  %47 = ptrtoint ptr %45 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %sublist.i.i.i, ptr %45, align 4
  %48 = ptrtoint ptr %arrayidx90.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %39, ptr %arrayidx90.i.i, align 4
  store ptr %arrayidx90.i.i, ptr %prev5.i.i.i.i, align 4
  %49 = load volatile ptr, ptr %sublist.i.i.i, align 4
  %cmp.i.not.i.i.i.i = icmp eq ptr %49, %sublist.i.i.i
  br i1 %cmp.i.not.i.i.i.i, label %if.end.i.i.i.i.move_freelist_head.exit.i.i_crit_edge, label %if.then.i7.i.i.i

if.end.i.i.i.i.move_freelist_head.exit.i.i_crit_edge: ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %move_freelist_head.exit.i.i

if.then.i7.i.i.i:                                 ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %50 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %prev.i.i, align 4
  %52 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %23, align 4
  %prev3.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %54 = ptrtoint ptr %prev3.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %51, ptr %prev3.i.i.i.i.i, align 4
  %55 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %49, ptr %51, align 4
  %56 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %arrayidx90.i.i, ptr %53, align 4
  store ptr %53, ptr %prev.i.i, align 4
  br label %move_freelist_head.exit.i.i

move_freelist_head.exit.i.i:                      ; preds = %if.then.i7.i.i.i, %if.end.i.i.i.i.move_freelist_head.exit.i.i_crit_edge, %if.end140.i.i.move_freelist_head.exit.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sublist.i.i.i) #11
  %tobool141.not.i.i = icmp eq ptr %page.4.i.i, null
  br i1 %tobool141.not.i.i, label %move_freelist_head.exit.i.i.if.end152.i.i_crit_edge, label %if.then142.i.i

move_freelist_head.exit.i.i.if.end152.i.i_crit_edge: ; preds = %move_freelist_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end152.i.i

if.then142.i.i:                                   ; preds = %move_freelist_head.exit.i.i
  %call143.i.i = call i32 @__isolate_free_page(ptr noundef nonnull %page.4.i.i, i32 noundef %order.0425.i.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call143.i.i)
  %tobool144.not.i.i = icmp eq i32 %call143.i.i, 0
  br i1 %tobool144.not.i.i, label %if.else.i.i, label %if.then145.i.i

if.then145.i.i:                                   ; preds = %if.then142.i.i
  %private1.i.i.i = getelementptr inbounds %struct.page, ptr %page.4.i.i, i32 0, i32 1, i32 0, i32 3
  %57 = ptrtoint ptr %private1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %order.0425.i.i, ptr %private1.i.i.i, align 4
  %shl.i.i = shl nuw i32 1, %order.0425.i.i
  %58 = ptrtoint ptr %nr_freepages.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %nr_freepages.i.i, align 4
  %add146.i.i = add i32 %59, %shl.i.i
  store i32 %add146.i.i, ptr %nr_freepages.i.i, align 4
  %60 = getelementptr inbounds %struct.page, ptr %page.4.i.i, i32 0, i32 1
  %61 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %prev.i.i.i, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %60, ptr noundef %62, ptr noundef %0) #11
  br i1 %call.i.i.i.i, label %if.end.i.i348.i.i, label %if.then145.i.i.list_add_tail.exit.i.i_crit_edge

if.then145.i.i.list_add_tail.exit.i.i_crit_edge:  ; preds = %if.then145.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_add_tail.exit.i.i

if.end.i.i348.i.i:                                ; preds = %if.then145.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %63 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %60, ptr %prev.i.i.i, align 4
  %64 = ptrtoint ptr %60 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %0, ptr %60, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.page, ptr %page.4.i.i, i32 0, i32 1, i32 0, i32 0, i32 1
  %65 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %62, ptr %prev3.i.i.i.i, align 4
  %66 = ptrtoint ptr %62 to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile ptr %60, ptr %62, align 4
  br label %list_add_tail.exit.i.i

list_add_tail.exit.i.i:                           ; preds = %if.end.i.i348.i.i, %if.then145.i.i.list_add_tail.exit.i.i_crit_edge
  %67 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !449
  %68 = call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i.i = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 3
  %70 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx13.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %71
  %72 = ptrtoint ptr %arrayidx13.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %arrayidx13.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %73, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 53) to i32)
  %74 = inttoptr i32 %add.i.i.i.i to ptr
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %74, align 4
  %add14.i.i.i.i = add i32 %76, %shl.i.i
  store i32 %add14.i.i.i.i, ptr %74, align 4
  %77 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !450
  %and.i.i.i.i.i.i = and i32 %77, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then.i.i.i.i, label %list_add_tail.exit.i.i.count_compact_events.exit.i.i_crit_edge, !prof !435

list_add_tail.exit.i.i.count_compact_events.exit.i.i_crit_edge: ; preds = %list_add_tail.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %count_compact_events.exit.i.i

if.then.i.i.i.i:                                  ; preds = %list_add_tail.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @warn_bogus_irq_restore() #11
  br label %count_compact_events.exit.i.i

count_compact_events.exit.i.i:                    ; preds = %if.then.i.i.i.i, %list_add_tail.exit.i.i.count_compact_events.exit.i.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %67) #11, !srcloc !451
  br label %if.end152.i.i

if.else.i.i:                                      ; preds = %if.then142.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %78 = ptrtoint ptr %search_order.i.i to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %search_order.i.i, align 2
  %conv149.i.i = sext i16 %79 to i32
  %add150.i.i = add nsw i32 %conv149.i.i, 1
  br label %if.end152.i.i

if.end152.i.i:                                    ; preds = %if.else.i.i, %count_compact_events.exit.i.i, %move_freelist_head.exit.i.i.if.end152.i.i_crit_edge
  %order.1.i.i = phi i32 [ %order.0425.i.i, %count_compact_events.exit.i.i ], [ %add150.i.i, %if.else.i.i ], [ %order.0425.i.i, %move_freelist_head.exit.i.i.if.end152.i.i_crit_edge ]
  %page.5.i.i = phi ptr [ %page.4.i.i, %count_compact_events.exit.i.i ], [ null, %if.else.i.i ], [ null, %move_freelist_head.exit.i.i.if.end152.i.i_crit_edge ]
  %nr_isolated.1.i.i = phi i32 [ %shl.i.i, %count_compact_events.exit.i.i ], [ %nr_isolated.0427.i.i, %if.else.i.i ], [ %nr_isolated.0427.i.i, %move_freelist_head.exit.i.i.if.end152.i.i_crit_edge ]
  %80 = ptrtoint ptr %zone1.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %zone1.i, align 4
  %lock154.i.i = getelementptr inbounds %struct.zone, ptr %81, i32 0, i32 22
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock154.i.i, i32 noundef %call85.i.i) #11
  call void @__sanitizer_cov_trace_cmp4(i32 %order_scanned.1374.i.i, i32 %limit.5381.i.i)
  %cmp155.not.i.i = icmp ult i32 %order_scanned.1374.i.i, %limit.5381.i.i
  br i1 %cmp155.not.i.i, label %if.end152.i.i.cleanup167.i.i_crit_edge, label %if.then157.i.i

if.end152.i.i.cleanup167.i.i_crit_edge:           ; preds = %if.end152.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup167.i.i

if.then157.i.i:                                   ; preds = %if.end152.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %shr158.i.i = lshr i32 %limit.5381.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %limit.5381.i.i)
  %cmp160.inv.i.i = icmp ugt i32 %limit.5381.i.i, 1
  %cond165.i.i = select i1 %cmp160.inv.i.i, i32 %shr158.i.i, i32 1
  br label %cleanup167.i.i

cleanup167.i.i:                                   ; preds = %if.then157.i.i, %if.end152.i.i.cleanup167.i.i_crit_edge, %for.body.i.i.cleanup167.i.i_crit_edge
  %order.2.i.i = phi i32 [ %order.0425.i.i, %for.body.i.i.cleanup167.i.i_crit_edge ], [ %order.1.i.i, %if.then157.i.i ], [ %order.1.i.i, %if.end152.i.i.cleanup167.i.i_crit_edge ]
  %page.6.i.i = phi ptr [ null, %for.body.i.i.cleanup167.i.i_crit_edge ], [ %page.5.i.i, %if.then157.i.i ], [ %page.5.i.i, %if.end152.i.i.cleanup167.i.i_crit_edge ]
  %nr_isolated.2.i.i = phi i32 [ %nr_isolated.0427.i.i, %for.body.i.i.cleanup167.i.i_crit_edge ], [ %nr_isolated.1.i.i, %if.then157.i.i ], [ %nr_isolated.1.i.i, %if.end152.i.i.cleanup167.i.i_crit_edge ]
  %highest.4.i.i = phi i32 [ %highest.0428.i.i, %for.body.i.i.cleanup167.i.i_crit_edge ], [ %highest.3377.i.i, %if.then157.i.i ], [ %highest.3377.i.i, %if.end152.i.i.cleanup167.i.i_crit_edge ]
  %nr_scanned.3.i.i = phi i32 [ %nr_scanned.0429.i.i, %for.body.i.i.cleanup167.i.i_crit_edge ], [ %nr_scanned.2379.i.i, %if.then157.i.i ], [ %nr_scanned.2379.i.i, %if.end152.i.i.cleanup167.i.i_crit_edge ]
  %limit.7.i.i = phi i32 [ %limit.1430.i.i, %for.body.i.i.cleanup167.i.i_crit_edge ], [ %cond165.i.i, %if.then157.i.i ], [ %limit.5381.i.i, %if.end152.i.i.cleanup167.i.i_crit_edge ]
  %dec.i.i.i = add i32 %order.2.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i.i)
  %cmp.i.i.i = icmp slt i32 %dec.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %cleanup167.i.i.if.end.i.i.i_crit_edge

cleanup167.i.i.if.end.i.i.i_crit_edge:            ; preds = %cleanup167.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %cleanup167.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %82 = ptrtoint ptr %order1.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %order1.i.i, align 4
  %sub.i.i.i = add i32 %83, -1
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %cleanup167.i.i.if.end.i.i.i_crit_edge
  %order.addr.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %dec.i.i.i, %cleanup167.i.i.if.end.i.i.i_crit_edge ]
  %84 = ptrtoint ptr %search_order.i.i to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %search_order.i.i, align 2
  %conv.i.i.i = sext i16 %85 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %order.addr.0.i.i.i, i32 %conv.i.i.i)
  %cmp2.i.i.i = icmp eq i32 %order.addr.0.i.i.i, %conv.i.i.i
  br i1 %cmp2.i.i.i, label %if.then4.i.i.i, label %next_search_order.exit.i.i

if.then4.i.i.i:                                   ; preds = %if.end.i.i.i
  %dec6.i.i.i = add i16 %85, -1
  %86 = ptrtoint ptr %search_order.i.i to i32
  call void @__asan_store2_noabort(i32 %86)
  store i16 %dec6.i.i.i, ptr %search_order.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %dec6.i.i.i)
  %cmp9.i.i.i = icmp slt i16 %dec6.i.i.i, 0
  br i1 %cmp9.i.i.i, label %if.then11.i.i.i, label %if.then4.i.i.i.next_search_order.exit.thread.i.i_crit_edge

if.then4.i.i.i.next_search_order.exit.thread.i.i_crit_edge: ; preds = %if.then4.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %next_search_order.exit.thread.i.i

if.then11.i.i.i:                                  ; preds = %if.then4.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %87 = ptrtoint ptr %order1.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %order1.i.i, align 4
  %89 = trunc i32 %88 to i16
  %conv14.i.i.i = add i16 %89, -1
  %90 = ptrtoint ptr %search_order.i.i to i32
  call void @__asan_store2_noabort(i32 %90)
  store i16 %conv14.i.i.i, ptr %search_order.i.i, align 2
  br label %next_search_order.exit.thread.i.i

next_search_order.exit.thread.i.i:                ; preds = %if.then11.i.i.i, %if.then4.i.i.i.next_search_order.exit.thread.i.i_crit_edge
  %tobool69.not451.i.i = icmp eq ptr %page.6.i.i, null
  br i1 %tobool69.not451.i.i, label %next_search_order.exit.thread.i.i.if.then179.i.i_crit_edge, label %next_search_order.exit.thread.i.i.if.end214.i.i_crit_edge

next_search_order.exit.thread.i.i.if.end214.i.i_crit_edge: ; preds = %next_search_order.exit.thread.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end214.i.i

next_search_order.exit.thread.i.i.if.then179.i.i_crit_edge: ; preds = %next_search_order.exit.thread.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then179.i.i

next_search_order.exit.i.i:                       ; preds = %if.end.i.i.i
  %tobool69.not.i.i = icmp eq ptr %page.6.i.i, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %order.addr.0.i.i.i)
  %cmp71.i.i = icmp sgt i32 %order.addr.0.i.i.i, -1
  %or.cond.i.i = select i1 %tobool69.not.i.i, i1 %cmp71.i.i, i1 false
  br i1 %or.cond.i.i, label %next_search_order.exit.i.i.for.body.i.i_crit_edge, label %for.end177.i.i

next_search_order.exit.i.i.for.body.i.i_crit_edge: ; preds = %next_search_order.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i.i

for.end177.i.i:                                   ; preds = %next_search_order.exit.i.i
  br i1 %tobool69.not.i.i, label %for.end177.i.i.if.then179.i.i_crit_edge, label %for.end177.i.i.if.end214.i.i_crit_edge

for.end177.i.i.if.end214.i.i_crit_edge:           ; preds = %for.end177.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end214.i.i

for.end177.i.i.if.then179.i.i_crit_edge:          ; preds = %for.end177.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then179.i.i

if.then179.i.i:                                   ; preds = %for.end177.i.i.if.then179.i.i_crit_edge, %next_search_order.exit.thread.i.i.if.then179.i.i_crit_edge
  %91 = ptrtoint ptr %fast_search_fail.i.i.i to i32
  call void @__asan_load2_noabort(i32 %91)
  %92 = load i16, ptr %fast_search_fail.i.i.i, align 4
  %inc181.i.i = add i16 %92, 1
  store i16 %inc181.i.i, ptr %fast_search_fail.i.i.i, align 4
  br i1 %cmp4.not.i.i, label %if.then179.i.i.if.end214.i.i_crit_edge, label %if.then183.i.i

if.then179.i.i.if.end214.i.i_crit_edge:           ; preds = %if.then179.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end214.i.i

if.then179.thread.i.i:                            ; preds = %if.end45.i.i
  %93 = ptrtoint ptr %fast_search_fail.i.i.i to i32
  call void @__asan_load2_noabort(i32 %93)
  %94 = load i16, ptr %fast_search_fail.i.i.i, align 4
  %inc181477.i.i = add i16 %94, 1
  store i16 %inc181477.i.i, ptr %fast_search_fail.i.i.i, align 4
  br i1 %cmp4.not.i.i, label %if.then179.thread.i.i.fast_isolate_freepages.exit.i_crit_edge, label %if.then179.thread.i.i.if.else189.i.i_crit_edge

if.then179.thread.i.i.if.else189.i.i_crit_edge:   ; preds = %if.then179.thread.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.else189.i.i

if.then179.thread.i.i.fast_isolate_freepages.exit.i_crit_edge: ; preds = %if.then179.thread.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_isolate_freepages.exit.i

if.then183.i.i:                                   ; preds = %if.then179.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %highest.4.i.i)
  %tobool184.not.i.i = icmp eq i32 %highest.4.i.i, 0
  br i1 %tobool184.not.i.i, label %if.then183.i.i.if.else189.i.i_crit_edge, label %if.end214.thread391.i.i

if.then183.i.i.if.else189.i.i_crit_edge:          ; preds = %if.then183.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.else189.i.i

if.end214.thread391.i.i:                          ; preds = %if.then183.i.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %95 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %96 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub186.i.i = sub i32 %highest.4.i.i, %96
  %add.ptr187.i.i = getelementptr %struct.page, ptr %95, i32 %sub186.i.i
  %97 = ptrtoint ptr %free_pfn3.i.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %highest.4.i.i, ptr %free_pfn3.i.i, align 4
  br label %land.lhs.true216.i.i

if.else189.i.i:                                   ; preds = %if.then183.i.i.if.else189.i.i_crit_edge, %if.then179.thread.i.i.if.else189.i.i_crit_edge
  %nr_scanned.0.lcssa469478486.i.i = phi i32 [ %nr_scanned.3.i.i, %if.then183.i.i.if.else189.i.i_crit_edge ], [ 0, %if.then179.thread.i.i.if.else189.i.i_crit_edge ]
  %nr_isolated.0.lcssa465480485.i.i = phi i32 [ %nr_isolated.2.i.i, %if.then183.i.i.if.else189.i.i_crit_edge ], [ 0, %if.then179.thread.i.i.if.else189.i.i_crit_edge ]
  %direct_compaction.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 21
  %98 = ptrtoint ptr %direct_compaction.i.i to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %direct_compaction.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %99)
  %tobool190.not.i.i = icmp eq i8 %99, 0
  br i1 %tobool190.not.i.i, label %if.else189.i.i.if.end224.thread.i.i_crit_edge, label %land.lhs.true192.i.i

if.else189.i.i.if.end224.thread.i.i_crit_edge:    ; preds = %if.else189.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end224.thread.i.i

land.lhs.true192.i.i:                             ; preds = %if.else189.i.i
  %call193.i.i = call i32 @pfn_valid(i32 noundef %and14.i.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call193.i.i)
  %tobool194.not.i.i = icmp eq i32 %call193.i.i, 0
  br i1 %tobool194.not.i.i, label %land.lhs.true192.i.i.if.end224.thread.i.i_crit_edge, label %if.then195.i.i

land.lhs.true192.i.i.if.end224.thread.i.i_crit_edge: ; preds = %land.lhs.true192.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end224.thread.i.i

if.then195.i.i:                                   ; preds = %land.lhs.true192.i.i
  %100 = ptrtoint ptr %zone1.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %zone1.i, align 4
  %contiguous.i.i.i = getelementptr inbounds %struct.zone, ptr %101, i32 0, i32 34
  %102 = ptrtoint ptr %contiguous.i.i.i to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %contiguous.i.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %103)
  %tobool.not.i.i.i = icmp eq i8 %103, 0
  br i1 %tobool.not.i.i.i, label %if.end.i352.i.i, label %if.then.i351.i.i

if.then.i351.i.i:                                 ; preds = %if.then195.i.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %104 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %105 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i350.i.i = sub i32 %and14.i.i, %105
  %add.ptr.i.i.i = getelementptr %struct.page, ptr %104, i32 %sub.i350.i.i
  br label %pageblock_pfn_to_page.exit.i.i

if.end.i352.i.i:                                  ; preds = %if.then195.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %add197.i.i = add i32 %and14.i.i, 2048
  %spanned_pages.i.i.i = getelementptr inbounds %struct.zone, ptr %101, i32 0, i32 12
  %106 = ptrtoint ptr %spanned_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %spanned_pages.i.i.i, align 4
  %zone_start_pfn.i.i.i = getelementptr inbounds %struct.zone, ptr %101, i32 0, i32 10
  %108 = ptrtoint ptr %zone_start_pfn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %zone_start_pfn.i.i.i, align 4
  %add.i349.i.i = add i32 %109, %107
  %110 = call i32 @llvm.umin.i32(i32 %add197.i.i, i32 %add.i349.i.i) #11
  %call.i.i.i = call ptr @__pageblock_pfn_to_page(i32 noundef %and14.i.i, i32 noundef %110, ptr noundef %101) #11
  br label %pageblock_pfn_to_page.exit.i.i

pageblock_pfn_to_page.exit.i.i:                   ; preds = %if.end.i352.i.i, %if.then.i351.i.i
  %retval.0.i353.i.i = phi ptr [ %add.ptr.i.i.i, %if.then.i351.i.i ], [ %call.i.i.i, %if.end.i352.i.i ]
  %111 = ptrtoint ptr %free_pfn3.i.i to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 %and14.i.i, ptr %free_pfn3.i.i, align 4
  br label %if.end224.i.i

if.end214.i.i:                                    ; preds = %if.then179.i.i.if.end214.i.i_crit_edge, %for.end177.i.i.if.end214.i.i_crit_edge, %next_search_order.exit.thread.i.i.if.end214.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %highest.4.i.i)
  %tobool215.not.i.i = icmp eq i32 %highest.4.i.i, 0
  br i1 %tobool215.not.i.i, label %if.end214.i.i.if.end224.i.i_crit_edge, label %if.end214.i.i.land.lhs.true216.i.i_crit_edge

if.end214.i.i.land.lhs.true216.i.i_crit_edge:     ; preds = %if.end214.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true216.i.i

if.end214.i.i.if.end224.i.i_crit_edge:            ; preds = %if.end214.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end224.i.i

land.lhs.true216.i.i:                             ; preds = %if.end214.i.i.land.lhs.true216.i.i_crit_edge, %if.end214.thread391.i.i
  %page.7394.i.i = phi ptr [ %add.ptr187.i.i, %if.end214.thread391.i.i ], [ %page.6.i.i, %if.end214.i.i.land.lhs.true216.i.i_crit_edge ]
  %112 = ptrtoint ptr %zone1.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %zone1.i, align 4
  %compact_cached_free_pfn.i.i = getelementptr inbounds %struct.zone, ptr %113, i32 0, i32 26
  %114 = ptrtoint ptr %compact_cached_free_pfn.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %compact_cached_free_pfn.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %highest.4.i.i, i32 %115)
  %cmp218.not.i.i = icmp ult i32 %highest.4.i.i, %115
  br i1 %cmp218.not.i.i, label %land.lhs.true216.i.i.if.end224.i.i_crit_edge, label %if.then220.i.i

land.lhs.true216.i.i.if.end224.i.i_crit_edge:     ; preds = %land.lhs.true216.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end224.i.i

if.then220.i.i:                                   ; preds = %land.lhs.true216.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub221.i.i = add i32 %highest.4.i.i, -2048
  %116 = ptrtoint ptr %compact_cached_free_pfn.i.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %sub221.i.i, ptr %compact_cached_free_pfn.i.i, align 4
  br label %if.end224.i.i

if.end224.thread.i.i:                             ; preds = %land.lhs.true192.i.i.if.end224.thread.i.i_crit_edge, %if.else189.i.i.if.end224.thread.i.i_crit_edge
  %total_free_scanned396.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 9
  %117 = ptrtoint ptr %total_free_scanned396.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %total_free_scanned396.i.i, align 4
  %add225397.i.i = add i32 %118, %nr_scanned.0.lcssa469478486.i.i
  store i32 %add225397.i.i, ptr %total_free_scanned396.i.i, align 4
  br label %fast_isolate_freepages.exit.i

if.end224.i.i:                                    ; preds = %if.then220.i.i, %land.lhs.true216.i.i.if.end224.i.i_crit_edge, %if.end214.i.i.if.end224.i.i_crit_edge, %pageblock_pfn_to_page.exit.i.i
  %nr_scanned.0.lcssa470.i.i = phi i32 [ %nr_scanned.3.i.i, %if.then220.i.i ], [ %nr_scanned.3.i.i, %land.lhs.true216.i.i.if.end224.i.i_crit_edge ], [ %nr_scanned.3.i.i, %if.end214.i.i.if.end224.i.i_crit_edge ], [ %nr_scanned.0.lcssa469478486.i.i, %pageblock_pfn_to_page.exit.i.i ]
  %nr_isolated.0.lcssa462.i.i = phi i32 [ %nr_isolated.2.i.i, %if.then220.i.i ], [ %nr_isolated.2.i.i, %land.lhs.true216.i.i.if.end224.i.i_crit_edge ], [ %nr_isolated.2.i.i, %if.end214.i.i.if.end224.i.i_crit_edge ], [ %nr_isolated.0.lcssa465480485.i.i, %pageblock_pfn_to_page.exit.i.i ]
  %page.7390.i.i = phi ptr [ %page.7394.i.i, %if.then220.i.i ], [ %page.7394.i.i, %land.lhs.true216.i.i.if.end224.i.i_crit_edge ], [ %page.6.i.i, %if.end214.i.i.if.end224.i.i_crit_edge ], [ %retval.0.i353.i.i, %pageblock_pfn_to_page.exit.i.i ]
  %total_free_scanned.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 9
  %119 = ptrtoint ptr %total_free_scanned.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %total_free_scanned.i.i, align 4
  %add225.i.i = add i32 %120, %nr_scanned.0.lcssa470.i.i
  store i32 %add225.i.i, ptr %total_free_scanned.i.i, align 4
  %tobool226.not.i.i = icmp eq ptr %page.7390.i.i, null
  br i1 %tobool226.not.i.i, label %if.end224.i.i.fast_isolate_freepages.exit.i_crit_edge, label %if.end229.i.i

if.end224.i.i.fast_isolate_freepages.exit.i_crit_edge: ; preds = %if.end224.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_isolate_freepages.exit.i

if.end229.i.i:                                    ; preds = %if.end224.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %121 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast230.i.i = ptrtoint ptr %page.7390.i.i to i32
  %sub.ptr.rhs.cast231.i.i = ptrtoint ptr %121 to i32
  %sub.ptr.sub232.i.i = sub i32 %sub.ptr.lhs.cast230.i.i, %sub.ptr.rhs.cast231.i.i
  %sub.ptr.div233.i.i = sdiv exact i32 %sub.ptr.sub232.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %122 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add234.i.i = add i32 %sub.ptr.div233.i.i, %122
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %start_pfn.i.i.i) #11
  %nr_freepages.i.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 2
  %123 = ptrtoint ptr %nr_freepages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %nr_freepages.i.i.i, align 4
  %nr_migratepages.i.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 3
  %125 = ptrtoint ptr %nr_migratepages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %nr_migratepages.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %124, i32 %126)
  %cmp.not.i.i.i = icmp ult i32 %124, %126
  br i1 %cmp.not.i.i.i, label %if.end.i355.i.i, label %if.end229.i.i.fast_isolate_around.exit.i.i_crit_edge

if.end229.i.i.fast_isolate_around.exit.i.i_crit_edge: ; preds = %if.end229.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_isolate_around.exit.i.i

if.end.i355.i.i:                                  ; preds = %if.end229.i.i
  %direct_compaction.i.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 21
  %127 = ptrtoint ptr %direct_compaction.i.i.i to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load i8, ptr %direct_compaction.i.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %128)
  %tobool.not.i354.i.i = icmp eq i8 %128, 0
  br i1 %tobool.not.i354.i.i, label %if.end.i355.i.i.if.end3.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end.i355.i.i.if.end3.i.i.i_crit_edge:          ; preds = %if.end.i355.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end3.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end.i355.i.i
  %mode.i.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 17
  %129 = ptrtoint ptr %mode.i.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %mode.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %130)
  %cmp1.i.i.i = icmp eq i32 %130, 0
  br i1 %cmp1.i.i.i, label %land.lhs.true.i.i.i.fast_isolate_around.exit.i.i_crit_edge, label %land.lhs.true.i.i.i.if.end3.i.i.i_crit_edge

land.lhs.true.i.i.i.if.end3.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end3.i.i.i

land.lhs.true.i.i.i.fast_isolate_around.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_isolate_around.exit.i.i

if.end3.i.i.i:                                    ; preds = %land.lhs.true.i.i.i.if.end3.i.i.i_crit_edge, %if.end.i355.i.i.if.end3.i.i.i_crit_edge
  %and.i.i.i = and i32 %add234.i.i, -2048
  %131 = ptrtoint ptr %zone1.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %zone1.i, align 4
  %zone_start_pfn.i356.i.i = getelementptr inbounds %struct.zone, ptr %132, i32 0, i32 10
  %133 = ptrtoint ptr %zone_start_pfn.i356.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %zone_start_pfn.i356.i.i, align 4
  %135 = call i32 @llvm.umax.i32(i32 %and.i.i.i, i32 %134) #11
  %136 = ptrtoint ptr %start_pfn.i.i.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store i32 %135, ptr %start_pfn.i.i.i, align 4
  %add5.i.i.i = add i32 %add234.i.i, 2048
  %and6.i.i.i = and i32 %add5.i.i.i, -2048
  %spanned_pages.i.i.i.i = getelementptr inbounds %struct.zone, ptr %132, i32 0, i32 12
  %137 = ptrtoint ptr %spanned_pages.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %spanned_pages.i.i.i.i, align 4
  %add.i.i357.i.i = add i32 %138, %134
  %139 = call i32 @llvm.umin.i32(i32 %and6.i.i.i, i32 %add.i.i357.i.i) #11
  %contiguous.i.i.i.i = getelementptr inbounds %struct.zone, ptr %132, i32 0, i32 34
  %140 = ptrtoint ptr %contiguous.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %140)
  %141 = load i8, ptr %contiguous.i.i.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %141)
  %tobool.not.i.i358.i.i = icmp eq i8 %141, 0
  br i1 %tobool.not.i.i358.i.i, label %if.end.i.i361.i.i, label %if.then.i.i359.i.i

if.then.i.i359.i.i:                               ; preds = %if.end3.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i.i.i = sub i32 %135, %122
  %add.ptr.i.i.i.i = getelementptr %struct.page, ptr %121, i32 %sub.i.i.i.i
  br label %pageblock_pfn_to_page.exit.i.i.i

if.end.i.i361.i.i:                                ; preds = %if.end3.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %call.i.i360.i.i = call ptr @__pageblock_pfn_to_page(i32 noundef %135, i32 noundef %139, ptr noundef %132) #11
  br label %pageblock_pfn_to_page.exit.i.i.i

pageblock_pfn_to_page.exit.i.i.i:                 ; preds = %if.end.i.i361.i.i, %if.then.i.i359.i.i
  %retval.0.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i, %if.then.i.i359.i.i ], [ %call.i.i360.i.i, %if.end.i.i361.i.i ]
  %tobool16.not.i.i.i = icmp eq ptr %retval.0.i.i.i.i, null
  br i1 %tobool16.not.i.i.i, label %pageblock_pfn_to_page.exit.i.i.i.fast_isolate_around.exit.i.i_crit_edge, label %if.end18.i.i.i

pageblock_pfn_to_page.exit.i.i.i.fast_isolate_around.exit.i.i_crit_edge: ; preds = %pageblock_pfn_to_page.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_isolate_around.exit.i.i

if.end18.i.i.i:                                   ; preds = %pageblock_pfn_to_page.exit.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %135, i32 %add234.i.i)
  %cmp19.not.i.i.i = icmp eq i32 %135, %add234.i.i
  br i1 %cmp19.not.i.i.i, label %if.end18.i.i.i.if.end27.i.i.i_crit_edge, label %if.then20.i.i.i

if.end18.i.i.i.if.end27.i.i.i_crit_edge:          ; preds = %if.end18.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end27.i.i.i

if.then20.i.i.i:                                  ; preds = %if.end18.i.i.i
  %call21.i.i.i = call fastcc i32 @isolate_freepages_block(ptr noundef %0, ptr noundef nonnull %start_pfn.i.i.i, i32 noundef %add234.i.i, ptr noundef %0, i32 noundef 1, i1 noundef zeroext false) #11
  %142 = ptrtoint ptr %nr_freepages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %nr_freepages.i.i.i, align 4
  %144 = ptrtoint ptr %nr_migratepages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %nr_migratepages.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %143, i32 %145)
  %cmp24.not.i.i.i = icmp ult i32 %143, %145
  br i1 %cmp24.not.i.i.i, label %if.then20.i.i.i.if.end27.i.i.i_crit_edge, label %if.then20.i.i.i.fast_isolate_around.exit.i.i_crit_edge

if.then20.i.i.i.fast_isolate_around.exit.i.i_crit_edge: ; preds = %if.then20.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_isolate_around.exit.i.i

if.then20.i.i.i.if.end27.i.i.i_crit_edge:         ; preds = %if.then20.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end27.i.i.i

if.end27.i.i.i:                                   ; preds = %if.then20.i.i.i.if.end27.i.i.i_crit_edge, %if.end18.i.i.i.if.end27.i.i.i_crit_edge
  %add28.i.i.i = add i32 %add234.i.i, %nr_isolated.0.lcssa462.i.i
  %146 = ptrtoint ptr %start_pfn.i.i.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 %add28.i.i.i, ptr %start_pfn.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add28.i.i.i, i32 %139)
  %cmp29.i.i.i = icmp ult i32 %add28.i.i.i, %139
  br i1 %cmp29.i.i.i, label %if.then30.i.i.i, label %if.end27.i.i.i.if.end33.i.i.i_crit_edge

if.end27.i.i.i.if.end33.i.i.i_crit_edge:          ; preds = %if.end27.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end33.i.i.i

if.then30.i.i.i:                                  ; preds = %if.end27.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %call32.i.i.i = call fastcc i32 @isolate_freepages_block(ptr noundef %0, ptr noundef nonnull %start_pfn.i.i.i, i32 noundef %139, ptr noundef %0, i32 noundef 1, i1 noundef zeroext false) #11
  br label %if.end33.i.i.i

if.end33.i.i.i:                                   ; preds = %if.then30.i.i.i, %if.end27.i.i.i.if.end33.i.i.i_crit_edge
  %147 = ptrtoint ptr %nr_freepages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %nr_freepages.i.i.i, align 4
  %149 = ptrtoint ptr %nr_migratepages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %nr_migratepages.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %148, i32 %150)
  %cmp36.i.i.i = icmp ult i32 %148, %150
  br i1 %cmp36.i.i.i, label %if.then37.i.i.i, label %if.end33.i.i.i.fast_isolate_around.exit.i.i_crit_edge

if.end33.i.i.i.fast_isolate_around.exit.i.i_crit_edge: ; preds = %if.end33.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %fast_isolate_around.exit.i.i

if.then37.i.i.i:                                  ; preds = %if.end33.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %151 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %retval.0.i.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %151 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %sub.ptr.div.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %152 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add38.i.i.i = add i32 %sub.ptr.div.i.i.i, %152
  call void @set_pfnblock_flags_mask(ptr noundef nonnull %retval.0.i.i.i.i, i32 noundef 8, i32 noundef %add38.i.i.i, i32 noundef 8) #11
  br label %fast_isolate_around.exit.i.i

fast_isolate_around.exit.i.i:                     ; preds = %if.then37.i.i.i, %if.end33.i.i.i.fast_isolate_around.exit.i.i_crit_edge, %if.then20.i.i.i.fast_isolate_around.exit.i.i_crit_edge, %pageblock_pfn_to_page.exit.i.i.i.fast_isolate_around.exit.i.i_crit_edge, %land.lhs.true.i.i.i.fast_isolate_around.exit.i.i_crit_edge, %if.end229.i.i.fast_isolate_around.exit.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %start_pfn.i.i.i) #11
  br label %fast_isolate_freepages.exit.i

fast_isolate_freepages.exit.i:                    ; preds = %fast_isolate_around.exit.i.i, %if.end224.i.i.fast_isolate_freepages.exit.i_crit_edge, %if.end224.thread.i.i, %if.then179.thread.i.i.fast_isolate_freepages.exit.i_crit_edge, %if.then.fast_isolate_freepages.exit.i_crit_edge
  %nr_freepages.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 2
  %153 = ptrtoint ptr %nr_freepages.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %nr_freepages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %154)
  %tobool.not.i = icmp eq i32 %154, 0
  br i1 %tobool.not.i, label %if.end.i, label %fast_isolate_freepages.exit.i.isolate_freepages.exit_crit_edge

fast_isolate_freepages.exit.i.isolate_freepages.exit_crit_edge: ; preds = %fast_isolate_freepages.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %isolate_freepages.exit

if.end.i:                                         ; preds = %fast_isolate_freepages.exit.i
  %free_pfn.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 4
  %155 = ptrtoint ptr %free_pfn.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %free_pfn.i, align 4
  %157 = ptrtoint ptr %isolate_start_pfn.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 %156, ptr %isolate_start_pfn.i, align 4
  %and.i = and i32 %156, -2048
  %migrate_pfn.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 5
  %158 = ptrtoint ptr %migrate_pfn.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %migrate_pfn.i, align 4
  %add4.i = add i32 %159, 2048
  %and5.i = and i32 %add4.i, -2048
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i, i32 %and5.i)
  %cmp8.not155.i = icmp ult i32 %and.i, %and5.i
  br i1 %cmp8.not155.i, label %if.end.i.for.end.i_crit_edge, label %for.body.lr.ph.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %mode.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 17
  %160 = ptrtoint ptr %mode.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %161)
  %cmp6.i = icmp eq i32 %161, 0
  %cond7.i = select i1 %cmp6.i, i32 32, i32 1
  %add.i = add i32 %and.i, 2048
  %spanned_pages.i.i = getelementptr inbounds %struct.zone, ptr %4, i32 0, i32 12
  %162 = ptrtoint ptr %spanned_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %spanned_pages.i.i, align 4
  %zone_start_pfn.i84.i = getelementptr inbounds %struct.zone, ptr %4, i32 0, i32 10
  %164 = ptrtoint ptr %zone_start_pfn.i84.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %zone_start_pfn.i84.i, align 4
  %add.i85.i = add i32 %165, %163
  %166 = call i32 @llvm.umin.i32(i32 %add.i, i32 %add.i85.i) #11
  %contiguous.i.i = getelementptr inbounds %struct.zone, ptr %4, i32 0, i32 34
  %ignore_block_suitable.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 20
  %ignore_skip_hint.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 18
  %no_set_skip_hint.i.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 19
  %nr_migratepages.i = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %block_start_pfn.0161.i = phi i32 [ %and.i, %for.body.lr.ph.i ], [ %sub47.i, %for.inc.i.for.body.i_crit_edge ]
  %stride.0157.i = phi i32 [ %cond7.i, %for.body.lr.ph.i ], [ %stride.1.ph.i, %for.inc.i.for.body.i_crit_edge ]
  %block_end_pfn.0156.i = phi i32 [ %166, %for.body.lr.ph.i ], [ %block_start_pfn.0161.i, %for.inc.i.for.body.i_crit_edge ]
  %rem.i = and i32 %block_start_pfn.0161.i, 63488
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %tobool9.not.i = icmp eq i32 %rem.i, 0
  br i1 %tobool9.not.i, label %if.then10.i, label %for.body.i.if.end13.i_crit_edge

for.body.i.if.end13.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end13.i

if.then10.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__might_resched(ptr noundef nonnull @.str.27, i32 noundef 1591, i32 noundef 0) #11
  %call.i.i = call i32 @__cond_resched() #11
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then10.i, %for.body.i.if.end13.i_crit_edge
  %167 = ptrtoint ptr %contiguous.i.i to i32
  call void @__asan_load1_noabort(i32 %167)
  %168 = load i8, ptr %contiguous.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %168)
  %tobool.not.i.i = icmp eq i8 %168, 0
  br i1 %tobool.not.i.i, label %if.end.i89.i, label %if.then.i87.i

if.then.i87.i:                                    ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %169 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %170 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i86.i = sub i32 %block_start_pfn.0161.i, %170
  %add.ptr.i.i = getelementptr %struct.page, ptr %169, i32 %sub.i86.i
  br label %pageblock_pfn_to_page.exit.i

if.end.i89.i:                                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #13
  %call.i88.i = call ptr @__pageblock_pfn_to_page(i32 noundef %block_start_pfn.0161.i, i32 noundef %block_end_pfn.0156.i, ptr noundef %4) #11
  br label %pageblock_pfn_to_page.exit.i

pageblock_pfn_to_page.exit.i:                     ; preds = %if.end.i89.i, %if.then.i87.i
  %retval.0.i90.i = phi ptr [ %add.ptr.i.i, %if.then.i87.i ], [ %call.i88.i, %if.end.i89.i ]
  %tobool15.not.i = icmp eq ptr %retval.0.i90.i, null
  br i1 %tobool15.not.i, label %pageblock_pfn_to_page.exit.i.for.inc.i_crit_edge, label %if.end17.i

pageblock_pfn_to_page.exit.i.for.inc.i_crit_edge: ; preds = %pageblock_pfn_to_page.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end17.i:                                       ; preds = %pageblock_pfn_to_page.exit.i
  %171 = getelementptr inbounds %struct.page, ptr %retval.0.i90.i, i32 0, i32 2
  %172 = ptrtoint ptr %171 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %171, align 4
  %and.i.i91.i = and i32 %173, -268435328
  call void @__sanitizer_cov_trace_const_cmp4(i32 -268435456, i32 %and.i.i91.i)
  %cmp.i.not.i.i = icmp eq i32 %and.i.i91.i, -268435456
  br i1 %cmp.i.not.i.i, label %do.end.i.i, label %if.end17.i.if.end2.i.i_crit_edge

if.end17.i.if.end2.i.i_crit_edge:                 ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end2.i.i

do.end.i.i:                                       ; preds = %if.end17.i
  %private.i.i = getelementptr inbounds %struct.page, ptr %retval.0.i90.i, i32 0, i32 1, i32 0, i32 3
  %174 = ptrtoint ptr %private.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load volatile i32, ptr %private.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %175)
  %cmp.i92.i = icmp ugt i32 %175, 10
  br i1 %cmp.i92.i, label %do.end.i.i.for.inc.i_crit_edge, label %do.end.i.i.if.end2.i.i_crit_edge

do.end.i.i.if.end2.i.i_crit_edge:                 ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end2.i.i

do.end.i.i.for.inc.i_crit_edge:                   ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end2.i.i:                                      ; preds = %do.end.i.i.if.end2.i.i_crit_edge, %if.end17.i.if.end2.i.i_crit_edge
  %176 = ptrtoint ptr %ignore_block_suitable.i.i to i32
  call void @__asan_load1_noabort(i32 %176)
  %177 = load i8, ptr %ignore_block_suitable.i.i, align 2, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %177)
  %tobool3.not.i.i = icmp eq i8 %177, 0
  br i1 %tobool3.not.i.i, label %suitable_migration_target.exit.i, label %if.end2.i.i.if.end20.i_crit_edge

if.end2.i.i.if.end20.i_crit_edge:                 ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end20.i

suitable_migration_target.exit.i:                 ; preds = %if.end2.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %178 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i93.i = ptrtoint ptr %retval.0.i90.i to i32
  %sub.ptr.rhs.cast.i94.i = ptrtoint ptr %178 to i32
  %sub.ptr.sub.i95.i = sub i32 %sub.ptr.lhs.cast.i93.i, %sub.ptr.rhs.cast.i94.i
  %sub.ptr.div.i96.i = sdiv exact i32 %sub.ptr.sub.i95.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %179 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i97.i = add i32 %sub.ptr.div.i96.i, %179
  %call6.i.i = call i32 @get_pfnblock_flags_mask(ptr noundef nonnull %retval.0.i90.i, i32 noundef %add.i97.i, i32 noundef 7) #11
  %180 = zext i32 %call6.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %180, ptr @__sancov_gen_cov_switch_values.147)
  switch i32 %call6.i.i, label %suitable_migration_target.exit.i.for.inc.i_crit_edge [
    i32 4, label %suitable_migration_target.exit.i.if.end20.i_crit_edge
    i32 1, label %suitable_migration_target.exit.i.if.end20.i_crit_edge182
  ]

suitable_migration_target.exit.i.if.end20.i_crit_edge182: ; preds = %suitable_migration_target.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end20.i

suitable_migration_target.exit.i.if.end20.i_crit_edge: ; preds = %suitable_migration_target.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end20.i

suitable_migration_target.exit.i.for.inc.i_crit_edge: ; preds = %suitable_migration_target.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end20.i:                                       ; preds = %suitable_migration_target.exit.i.if.end20.i_crit_edge, %suitable_migration_target.exit.i.if.end20.i_crit_edge182, %if.end2.i.i.if.end20.i_crit_edge
  %181 = ptrtoint ptr %ignore_skip_hint.i.i to i32
  call void @__asan_load1_noabort(i32 %181)
  %182 = load i8, ptr %ignore_skip_hint.i.i, align 4, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %182)
  %tobool.not.i100.i = icmp eq i8 %182, 0
  br i1 %tobool.not.i100.i, label %isolation_suitable.exit.i, label %if.end20.i.if.end23.i_crit_edge

if.end20.i.if.end23.i_crit_edge:                  ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end23.i

isolation_suitable.exit.i:                        ; preds = %if.end20.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %183 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i101.i = ptrtoint ptr %retval.0.i90.i to i32
  %sub.ptr.rhs.cast.i102.i = ptrtoint ptr %183 to i32
  %sub.ptr.sub.i103.i = sub i32 %sub.ptr.lhs.cast.i101.i, %sub.ptr.rhs.cast.i102.i
  %sub.ptr.div.i104.i = sdiv exact i32 %sub.ptr.sub.i103.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %184 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i105.i = add i32 %sub.ptr.div.i104.i, %184
  %call.i106.i = call i32 @get_pfnblock_flags_mask(ptr noundef nonnull %retval.0.i90.i, i32 noundef %add.i105.i, i32 noundef 8) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i106.i)
  %tobool1.not.i.i = icmp eq i32 %call.i106.i, 0
  br i1 %tobool1.not.i.i, label %isolation_suitable.exit.i.if.end23.i_crit_edge, label %isolation_suitable.exit.i.for.inc.i_crit_edge

isolation_suitable.exit.i.for.inc.i_crit_edge:    ; preds = %isolation_suitable.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

isolation_suitable.exit.i.if.end23.i_crit_edge:   ; preds = %isolation_suitable.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end23.i

if.end23.i:                                       ; preds = %isolation_suitable.exit.i.if.end23.i_crit_edge, %if.end20.i.if.end23.i_crit_edge
  %call24.i = call fastcc i32 @isolate_freepages_block(ptr noundef %0, ptr noundef nonnull %isolate_start_pfn.i, i32 noundef %block_end_pfn.0156.i, ptr noundef %0, i32 noundef %stride.0157.i, i1 noundef zeroext false) #11
  %185 = ptrtoint ptr %isolate_start_pfn.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %isolate_start_pfn.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %186, i32 %block_end_pfn.0156.i)
  %cmp25.i = icmp eq i32 %186, %block_end_pfn.0156.i
  br i1 %cmp25.i, label %if.then26.i, label %if.end23.i.if.end27.i_crit_edge

if.end23.i.if.end27.i_crit_edge:                  ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end27.i

if.then26.i:                                      ; preds = %if.end23.i
  %187 = ptrtoint ptr %no_set_skip_hint.i.i to i32
  call void @__asan_load1_noabort(i32 %187)
  %188 = load i8, ptr %no_set_skip_hint.i.i, align 1, !range !447
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %188)
  %tobool.not.i109.not.i = icmp eq i8 %188, 0
  br i1 %tobool.not.i109.not.i, label %if.end4.i.i, label %if.then26.i.if.end27.i_crit_edge

if.then26.i.if.end27.i_crit_edge:                 ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end27.i

if.end4.i.i:                                      ; preds = %if.then26.i
  %189 = ptrtoint ptr %zone1.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %zone1.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %191 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i111.i = ptrtoint ptr %retval.0.i90.i to i32
  %sub.ptr.rhs.cast.i112.i = ptrtoint ptr %191 to i32
  %sub.ptr.sub.i113.i = sub i32 %sub.ptr.lhs.cast.i111.i, %sub.ptr.rhs.cast.i112.i
  %sub.ptr.div.i114.i = sdiv exact i32 %sub.ptr.sub.i113.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %192 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i115.i = add i32 %sub.ptr.div.i114.i, %192
  call void @set_pfnblock_flags_mask(ptr noundef nonnull %retval.0.i90.i, i32 noundef 8, i32 noundef %add.i115.i, i32 noundef 8) #11
  %compact_cached_free_pfn.i116.i = getelementptr inbounds %struct.zone, ptr %190, i32 0, i32 26
  %193 = ptrtoint ptr %compact_cached_free_pfn.i116.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %compact_cached_free_pfn.i116.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %194, i32 %block_start_pfn.0161.i)
  %cmp.i117.i = icmp ugt i32 %194, %block_start_pfn.0161.i
  br i1 %cmp.i117.i, label %if.then5.i.i, label %if.end4.i.i.if.end27.i_crit_edge

if.end4.i.i.if.end27.i_crit_edge:                 ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end27.i

if.then5.i.i:                                     ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %195 = ptrtoint ptr %compact_cached_free_pfn.i116.i to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 %block_start_pfn.0161.i, ptr %compact_cached_free_pfn.i116.i, align 4
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then5.i.i, %if.end4.i.i.if.end27.i_crit_edge, %if.then26.i.if.end27.i_crit_edge, %if.end23.i.if.end27.i_crit_edge
  %196 = ptrtoint ptr %nr_freepages.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %nr_freepages.i, align 4
  %198 = ptrtoint ptr %nr_migratepages.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %nr_migratepages.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %197, i32 %199)
  %cmp29.not.i = icmp ult i32 %197, %199
  call void @__sanitizer_cov_trace_cmp4(i32 %186, i32 %block_end_pfn.0156.i)
  %cmp34.i = icmp ult i32 %186, %block_end_pfn.0156.i
  br i1 %cmp29.not.i, label %if.else.i, label %if.then30.i

if.then30.i:                                      ; preds = %if.end27.i
  br i1 %cmp34.i, label %if.then30.i.for.end.i_crit_edge, label %if.then32.i

if.then30.i.for.end.i_crit_edge:                  ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i

if.then32.i:                                      ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i = add i32 %block_start_pfn.0161.i, -2048
  %200 = ptrtoint ptr %isolate_start_pfn.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 %sub.i, ptr %isolate_start_pfn.i, align 4
  br label %for.end.i

if.else.i:                                        ; preds = %if.end27.i
  br i1 %cmp34.i, label %if.else.i.for.end.i_crit_edge, label %if.end37.i

if.else.i.for.end.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i

if.end37.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24.i)
  %tobool38.not.i = icmp eq i32 %call24.i, 0
  br i1 %tobool38.not.i, label %if.end40.i, label %if.end37.i.for.inc.i_crit_edge

if.end37.i.for.inc.i_crit_edge:                   ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end40.i:                                       ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #13
  %shl.i = shl i32 %stride.0157.i, 1
  %201 = call i32 @llvm.umin.i32(i32 %shl.i, i32 32) #11
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end40.i, %if.end37.i.for.inc.i_crit_edge, %isolation_suitable.exit.i.for.inc.i_crit_edge, %suitable_migration_target.exit.i.for.inc.i_crit_edge, %do.end.i.i.for.inc.i_crit_edge, %pageblock_pfn_to_page.exit.i.for.inc.i_crit_edge
  %stride.1.ph.i = phi i32 [ 1, %if.end37.i.for.inc.i_crit_edge ], [ %stride.0157.i, %isolation_suitable.exit.i.for.inc.i_crit_edge ], [ %stride.0157.i, %suitable_migration_target.exit.i.for.inc.i_crit_edge ], [ %stride.0157.i, %pageblock_pfn_to_page.exit.i.for.inc.i_crit_edge ], [ %201, %if.end40.i ], [ %stride.0157.i, %do.end.i.i.for.inc.i_crit_edge ]
  %sub47.i = add i32 %block_start_pfn.0161.i, -2048
  %202 = ptrtoint ptr %isolate_start_pfn.i to i32
  call void @__asan_store4_noabort(i32 %202)
  store i32 %sub47.i, ptr %isolate_start_pfn.i, align 4
  %cmp8.not.i = icmp ult i32 %sub47.i, %and5.i
  br i1 %cmp8.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.else.i.for.end.i_crit_edge, %if.then32.i, %if.then30.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  %203 = ptrtoint ptr %isolate_start_pfn.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %isolate_start_pfn.i, align 4
  %205 = ptrtoint ptr %free_pfn.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %204, ptr %free_pfn.i, align 4
  br label %isolate_freepages.exit

isolate_freepages.exit:                           ; preds = %for.end.i, %fast_isolate_freepages.exit.i.isolate_freepages.exit_crit_edge
  call fastcc void @split_map_pages(ptr noundef %0) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %isolate_start_pfn.i) #11
  %206 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load volatile ptr, ptr %0, align 4
  %cmp.i13.not = icmp eq ptr %207, %0
  br i1 %cmp.i13.not, label %isolate_freepages.exit.cleanup_crit_edge, label %isolate_freepages.exit.if.end5_crit_edge

isolate_freepages.exit.if.end5_crit_edge:         ; preds = %isolate_freepages.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end5

isolate_freepages.exit.cleanup_crit_edge:         ; preds = %isolate_freepages.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %isolate_freepages.exit.if.end5_crit_edge, %entry.if.end5_crit_edge
  %208 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %0, align 4
  %add.ptr = getelementptr i8, ptr %209, i32 -4
  %call.i.i15 = call zeroext i1 @__list_del_entry_valid(ptr noundef %209) #11
  br i1 %call.i.i15, label %if.end.i.i17, label %if.end5.list_del.exit_crit_edge

if.end5.list_del.exit_crit_edge:                  ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_del.exit

if.end.i.i17:                                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #13
  %prev.i.i16 = getelementptr inbounds %struct.list_head, ptr %209, i32 0, i32 1
  %210 = ptrtoint ptr %prev.i.i16 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %prev.i.i16, align 4
  %212 = ptrtoint ptr %209 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %209, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %213, i32 0, i32 1
  %214 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %214)
  store ptr %211, ptr %prev1.i.i.i, align 4
  %215 = ptrtoint ptr %211 to i32
  call void @__asan_store4_noabort(i32 %215)
  store volatile ptr %213, ptr %211, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i17, %if.end5.list_del.exit_crit_edge
  %216 = ptrtoint ptr %209 to i32
  call void @__asan_store4_noabort(i32 %216)
  store ptr inttoptr (i32 256 to ptr), ptr %209, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %209, i32 0, i32 1
  %217 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %217)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %nr_freepages = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 2
  %218 = ptrtoint ptr %nr_freepages to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %nr_freepages, align 4
  %dec = add i32 %219, -1
  store i32 %dec, ptr %nr_freepages, align 4
  br label %cleanup

cleanup:                                          ; preds = %list_del.exit, %isolate_freepages.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %add.ptr, %list_del.exit ], [ null, %isolate_freepages.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @compaction_free(ptr noundef %page, i32 noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %data to ptr
  %1 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %0, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %1, ptr noundef %0, ptr noundef %3) #11
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_add.exit_crit_edge

entry.list_add.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_add.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev1.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %3, ptr %1, align 4
  %prev3.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 0, i32 1
  %6 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %0, ptr %prev3.i.i, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %1, ptr %0, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %entry.list_add.exit_crit_edge
  %nr_freepages = getelementptr inbounds %struct.compact_control, ptr %0, i32 0, i32 2
  %8 = ptrtoint ptr %nr_freepages to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_freepages, align 4
  %inc = add i32 %9, 1
  store i32 %inc, ptr %nr_freepages, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_migratepages(i32 noundef %nr_all, i32 noundef %nr_succeeded) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_migratepages, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_migratepages, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !499
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_migratepages, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nr_all, i32 noundef %nr_succeeded) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !500
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !500
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_migratepages, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_migratepages.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_migratepages.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 88, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_add_drain_cpu_zone(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_end(i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync, i32 noundef %status) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_end, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_end, %do.body)) #11
          to label %if.end49 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i76 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i76
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end70_crit_edge, label %if.end31

cpu_online.exit.if.end70_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end70

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !501
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_end, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end49.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %zone_start, i32 noundef %migrate_pfn, i32 noundef %free_pfn, i32 noundef %zone_end, i1 noundef zeroext %sync, i32 noundef %status) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool10.not.i = icmp eq ptr %19, null
  br i1 %tobool10.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !502
  br label %if.end49.sink.split

if.end49.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !502
  br label %if.end49.sink.split

if.end49.sink.split:                              ; preds = %if.end49.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i74.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i74.c to ptr
  %preempt_count.i.i75.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i75.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i75.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i75.c, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.end49.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i77 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i77 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i78 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i78, label %if.end49.cpu_online.exit86_crit_edge, label %land.rhs.i.i.i.i80

if.end49.cpu_online.exit86_crit_edge:             ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit86

land.rhs.i.i.i.i80:                               ; preds = %if.end49
  %.b37.i.i.i.i79 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i79, label %land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge, label %if.then.i.i.i.i81, !prof !434

land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge:   ; preds = %land.rhs.i.i.i.i80
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit86

if.then.i.i.i.i81:                                ; preds = %land.rhs.i.i.i.i80
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit86

cpu_online.exit86:                                ; preds = %if.then.i.i.i.i81, %land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge, %if.end49.cpu_online.exit86_crit_edge
  %div3.i.i.i82 = lshr i32 %27, 5
  %arrayidx.i.i.i83 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i82
  %29 = ptrtoint ptr %arrayidx.i.i.i83 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i83, align 4
  %and.i.i.i84 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i84
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i85.not = icmp eq i32 %32, 0
  br i1 %tobool.i85.not, label %cpu_online.exit86.if.end70_crit_edge, label %if.then53

cpu_online.exit86.if.end70_crit_edge:             ; preds = %cpu_online.exit86
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end70

if.then53:                                        ; preds = %cpu_online.exit86
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_end, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %if.then53.do.end68_crit_edge

if.then53.do.end68_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %land.lhs.true.do.end68_crit_edge, label %land.lhs.true63

land.lhs.true.do.end68_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end68

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @trace_mm_compaction_end.__warned, align 1
  br i1 %.b73, label %land.lhs.true63.do.end68_crit_edge, label %if.then65

land.lhs.true63.do.end68_crit_edge:               ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end68

if.then65:                                        ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_end.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 152, ptr noundef nonnull @.str.121) #11
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63.do.end68_crit_edge, %land.lhs.true.do.end68_crit_edge, %if.then53.do.end68_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i87 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i88 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i88 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i88, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i88, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit86.if.end70_crit_edge, %cpu_online.exit.if.end70_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_finished(ptr noundef %zone, i32 noundef %order, i32 noundef %ret) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_finished, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_finished, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !503
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_finished, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %zone, i32 noundef %order, i32 noundef %ret) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !504
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !504
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_finished, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_finished.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_finished.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 217, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @find_suitable_fallback(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @extfrag_for_order(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_defer_compaction(ptr noundef %zone, i32 noundef %order) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_defer_compaction, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_defer_compaction, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !505
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_defer_compaction, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %zone, i32 noundef %order) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !506
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !506
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_defer_compaction, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_defer_compaction.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_defer_compaction.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 273, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_add_drain_all() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_cpus_allowed_ptr(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @set_freezable() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kthread_should_stop() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_kcompactd_sleep(i32 noundef %nid) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_kcompactd_sleep, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_kcompactd_sleep, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !507
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_kcompactd_sleep, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nid) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !508
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !508
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_kcompactd_sleep, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_kcompactd_sleep.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_kcompactd_sleep.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 297, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_memstall_enter(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_memstall_leave(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_check_no_locks_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__refrigerator(i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @freezing_slow_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_compaction_kcompactd_wake(i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_kcompactd_wake, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_compaction_kcompactd_wake, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !442

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !434

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !509
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_kcompactd_wake, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nid, i32 noundef %order, i32 noundef %highest_zoneidx) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !510
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !510
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !434

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !445
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_compaction_kcompactd_wake, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_compaction_kcompactd_wake.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_compaction_kcompactd_wake.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 339, ptr noundef nonnull @.str.121) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !446
  %38 = tail call i32 @llvm.read_register.i32(metadata !424) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @drain_all_pages(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @kcompactd_cpu_online(i32 noundef %cpu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i.i = tail call i32 @_find_first_and_bit(ptr noundef nonnull @__cpu_online_mask, ptr noundef nonnull @__cpu_online_mask, i32 noundef %0) #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i, i32 %1)
  %cmp2 = icmp ult i32 %call6.i.i, %1
  br i1 %cmp2, label %if.then, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21) to i32))
  %2 = load ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 21), align 16
  %call3 = tail call i32 @set_cpus_allowed_ptr(ptr noundef %2, ptr noundef nonnull @__cpu_online_mask) #11
  br label %for.end

for.end:                                          ; preds = %if.then, %entry.for.end_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_setup_state(i32 noundef, ptr noundef, i1 noundef zeroext, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_and_bit(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umin.i16(i16, i16) #10

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #11

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #12 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 188)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #12 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 188)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #9 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #11 = { nounwind }
attributes #12 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #13 = { nomerge }
attributes #14 = { nounwind readonly willreturn }
attributes #15 = { cold nounwind }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !86, !87, !88, !89, !90, !91, !92, !93, !94, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !143, !144, !145, !146, !147, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !180, !182, !184, !186, !188, !190, !192, !194, !196, !198, !200, !201, !202, !203, !204, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !347, !348, !349, !350, !351, !353, !354, !356, !358, !359, !360, !362, !363, !365, !366, !367, !369, !371, !373, !375, !377, !379, !381, !383, !385, !387, !388, !389, !390, !391, !392, !393, !394, !395, !397, !398, !399, !400, !401, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !415, !416, !417, !419, !421, !422, !423}
!llvm.named.register.sp = !{!424}
!llvm.module.flags = !{!425, !426, !427, !428, !429, !430, !431, !432}
!llvm.ident = !{!433}

!0 = !{ptr @__tracepoint_mm_compaction_isolate_migratepages, !1, !"__tracepoint_mm_compaction_isolate_migratepages", i1 false, i1 false}
!1 = !{!"../include/trace/events/compaction.h", i32 45, i32 1}
!2 = !{ptr @__tracepoint_ptr_mm_compaction_isolate_migratepages, !1, !"__tracepoint_ptr_mm_compaction_isolate_migratepages", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_mm_compaction_isolate_migratepages, !1, !"__SCK__tp_func_mm_compaction_isolate_migratepages", i1 false, i1 false}
!4 = !{ptr @__tracepoint_mm_compaction_isolate_freepages, !5, !"__tracepoint_mm_compaction_isolate_freepages", i1 false, i1 false}
!5 = !{!"../include/trace/events/compaction.h", i32 56, i32 1}
!6 = !{ptr @__tracepoint_ptr_mm_compaction_isolate_freepages, !5, !"__tracepoint_ptr_mm_compaction_isolate_freepages", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_mm_compaction_isolate_freepages, !5, !"__SCK__tp_func_mm_compaction_isolate_freepages", i1 false, i1 false}
!8 = !{ptr @__tracepoint_mm_compaction_migratepages, !9, !"__tracepoint_mm_compaction_migratepages", i1 false, i1 false}
!9 = !{!"../include/trace/events/compaction.h", i32 68, i32 1}
!10 = !{ptr @__tracepoint_ptr_mm_compaction_migratepages, !9, !"__tracepoint_ptr_mm_compaction_migratepages", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_mm_compaction_migratepages, !9, !"__SCK__tp_func_mm_compaction_migratepages", i1 false, i1 false}
!12 = !{ptr @__tracepoint_mm_compaction_begin, !13, !"__tracepoint_mm_compaction_begin", i1 false, i1 false}
!13 = !{!"../include/trace/events/compaction.h", i32 90, i32 1}
!14 = !{ptr @__tracepoint_ptr_mm_compaction_begin, !13, !"__tracepoint_ptr_mm_compaction_begin", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_mm_compaction_begin, !13, !"__SCK__tp_func_mm_compaction_begin", i1 false, i1 false}
!16 = !{ptr @__tracepoint_mm_compaction_end, !17, !"__tracepoint_mm_compaction_end", i1 false, i1 false}
!17 = !{!"../include/trace/events/compaction.h", i32 120, i32 1}
!18 = !{ptr @__tracepoint_ptr_mm_compaction_end, !17, !"__tracepoint_ptr_mm_compaction_end", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_mm_compaction_end, !17, !"__SCK__tp_func_mm_compaction_end", i1 false, i1 false}
!20 = !{ptr @__tracepoint_mm_compaction_try_to_compact_pages, !21, !"__tracepoint_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!21 = !{!"../include/trace/events/compaction.h", i32 154, i32 1}
!22 = !{ptr @__tracepoint_ptr_mm_compaction_try_to_compact_pages, !21, !"__tracepoint_ptr_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_mm_compaction_try_to_compact_pages, !21, !"__SCK__tp_func_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!24 = !{ptr @__tracepoint_mm_compaction_finished, !25, !"__tracepoint_mm_compaction_finished", i1 false, i1 false}
!25 = !{!"../include/trace/events/compaction.h", i32 210, i32 1}
!26 = !{ptr @__tracepoint_ptr_mm_compaction_finished, !25, !"__tracepoint_ptr_mm_compaction_finished", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_mm_compaction_finished, !25, !"__SCK__tp_func_mm_compaction_finished", i1 false, i1 false}
!28 = !{ptr @__tracepoint_mm_compaction_suitable, !29, !"__tracepoint_mm_compaction_suitable", i1 false, i1 false}
!29 = !{!"../include/trace/events/compaction.h", i32 219, i32 1}
!30 = !{ptr @__tracepoint_ptr_mm_compaction_suitable, !29, !"__tracepoint_ptr_mm_compaction_suitable", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_mm_compaction_suitable, !29, !"__SCK__tp_func_mm_compaction_suitable", i1 false, i1 false}
!32 = !{ptr @__tracepoint_mm_compaction_deferred, !33, !"__tracepoint_mm_compaction_deferred", i1 false, i1 false}
!33 = !{!"../include/trace/events/compaction.h", i32 261, i32 1}
!34 = !{ptr @__tracepoint_ptr_mm_compaction_deferred, !33, !"__tracepoint_ptr_mm_compaction_deferred", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_mm_compaction_deferred, !33, !"__SCK__tp_func_mm_compaction_deferred", i1 false, i1 false}
!36 = !{ptr @__tracepoint_mm_compaction_defer_compaction, !37, !"__tracepoint_mm_compaction_defer_compaction", i1 false, i1 false}
!37 = !{!"../include/trace/events/compaction.h", i32 268, i32 1}
!38 = !{ptr @__tracepoint_ptr_mm_compaction_defer_compaction, !37, !"__tracepoint_ptr_mm_compaction_defer_compaction", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_mm_compaction_defer_compaction, !37, !"__SCK__tp_func_mm_compaction_defer_compaction", i1 false, i1 false}
!40 = !{ptr @__tracepoint_mm_compaction_defer_reset, !41, !"__tracepoint_mm_compaction_defer_reset", i1 false, i1 false}
!41 = !{!"../include/trace/events/compaction.h", i32 275, i32 1}
!42 = !{ptr @__tracepoint_ptr_mm_compaction_defer_reset, !41, !"__tracepoint_ptr_mm_compaction_defer_reset", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_mm_compaction_defer_reset, !41, !"__SCK__tp_func_mm_compaction_defer_reset", i1 false, i1 false}
!44 = !{ptr @__tracepoint_mm_compaction_kcompactd_sleep, !45, !"__tracepoint_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!45 = !{!"../include/trace/events/compaction.h", i32 282, i32 1}
!46 = !{ptr @__tracepoint_ptr_mm_compaction_kcompactd_sleep, !45, !"__tracepoint_ptr_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_mm_compaction_kcompactd_sleep, !45, !"__SCK__tp_func_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!48 = !{ptr @__tracepoint_mm_compaction_wakeup_kcompactd, !49, !"__tracepoint_mm_compaction_wakeup_kcompactd", i1 false, i1 false}
!49 = !{!"../include/trace/events/compaction.h", i32 327, i32 1}
!50 = !{ptr @__tracepoint_ptr_mm_compaction_wakeup_kcompactd, !49, !"__tracepoint_ptr_mm_compaction_wakeup_kcompactd", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_mm_compaction_wakeup_kcompactd, !49, !"__SCK__tp_func_mm_compaction_wakeup_kcompactd", i1 false, i1 false}
!52 = !{ptr @__tracepoint_mm_compaction_kcompactd_wake, !53, !"__tracepoint_mm_compaction_kcompactd_wake", i1 false, i1 false}
!53 = !{!"../include/trace/events/compaction.h", i32 334, i32 1}
!54 = !{ptr @__tracepoint_ptr_mm_compaction_kcompactd_wake, !53, !"__tracepoint_ptr_mm_compaction_kcompactd_wake", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_mm_compaction_kcompactd_wake, !53, !"__SCK__tp_func_mm_compaction_kcompactd_wake", i1 false, i1 false}
!56 = !{ptr @.str, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../include/trace/events/mmflags.h", i32 274, i32 1}
!58 = !{ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, !57, !"__TRACE_SYSTEM_COMPACT_SKIPPED", i1 false, i1 false}
!59 = !{ptr @TRACE_SYSTEM_COMPACT_SKIPPED, !57, !"TRACE_SYSTEM_COMPACT_SKIPPED", i1 false, i1 false}
!60 = !{ptr @.str.1, !57, !"<string literal>", i1 false, i1 false}
!61 = !{ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, !57, !"__TRACE_SYSTEM_COMPACT_DEFERRED", i1 false, i1 false}
!62 = !{ptr @TRACE_SYSTEM_COMPACT_DEFERRED, !57, !"TRACE_SYSTEM_COMPACT_DEFERRED", i1 false, i1 false}
!63 = !{ptr @.str.2, !57, !"<string literal>", i1 false, i1 false}
!64 = !{ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, !57, !"__TRACE_SYSTEM_COMPACT_CONTINUE", i1 false, i1 false}
!65 = !{ptr @TRACE_SYSTEM_COMPACT_CONTINUE, !57, !"TRACE_SYSTEM_COMPACT_CONTINUE", i1 false, i1 false}
!66 = !{ptr @.str.3, !57, !"<string literal>", i1 false, i1 false}
!67 = !{ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, !57, !"__TRACE_SYSTEM_COMPACT_SUCCESS", i1 false, i1 false}
!68 = !{ptr @TRACE_SYSTEM_COMPACT_SUCCESS, !57, !"TRACE_SYSTEM_COMPACT_SUCCESS", i1 false, i1 false}
!69 = !{ptr @.str.4, !57, !"<string literal>", i1 false, i1 false}
!70 = !{ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, !57, !"__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED", i1 false, i1 false}
!71 = !{ptr @TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, !57, !"TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED", i1 false, i1 false}
!72 = !{ptr @.str.5, !57, !"<string literal>", i1 false, i1 false}
!73 = !{ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, !57, !"__TRACE_SYSTEM_COMPACT_COMPLETE", i1 false, i1 false}
!74 = !{ptr @TRACE_SYSTEM_COMPACT_COMPLETE, !57, !"TRACE_SYSTEM_COMPACT_COMPLETE", i1 false, i1 false}
!75 = !{ptr @.str.6, !57, !"<string literal>", i1 false, i1 false}
!76 = !{ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, !57, !"__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE", i1 false, i1 false}
!77 = !{ptr @TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, !57, !"TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE", i1 false, i1 false}
!78 = !{ptr @.str.7, !57, !"<string literal>", i1 false, i1 false}
!79 = !{ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, !57, !"__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE", i1 false, i1 false}
!80 = !{ptr @TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, !57, !"TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE", i1 false, i1 false}
!81 = !{ptr @.str.8, !57, !"<string literal>", i1 false, i1 false}
!82 = !{ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, !57, !"__TRACE_SYSTEM_COMPACT_CONTENDED", i1 false, i1 false}
!83 = !{ptr @TRACE_SYSTEM_COMPACT_CONTENDED, !57, !"TRACE_SYSTEM_COMPACT_CONTENDED", i1 false, i1 false}
!84 = !{ptr @.str.9, !85, !"<string literal>", i1 false, i1 false}
!85 = !{!"../include/trace/events/mmflags.h", i32 275, i32 1}
!86 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, !85, !"__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL", i1 false, i1 false}
!87 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, !85, !"TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL", i1 false, i1 false}
!88 = !{ptr @.str.10, !85, !"<string literal>", i1 false, i1 false}
!89 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, !85, !"__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT", i1 false, i1 false}
!90 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, !85, !"TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT", i1 false, i1 false}
!91 = !{ptr @.str.11, !85, !"<string literal>", i1 false, i1 false}
!92 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, !85, !"__TRACE_SYSTEM_COMPACT_PRIO_ASYNC", i1 false, i1 false}
!93 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_ASYNC, !85, !"TRACE_SYSTEM_COMPACT_PRIO_ASYNC", i1 false, i1 false}
!94 = !{ptr @.str.12, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../include/trace/events/mmflags.h", i32 277, i32 1}
!96 = !{ptr @__TRACE_SYSTEM_ZONE_DMA, !95, !"__TRACE_SYSTEM_ZONE_DMA", i1 false, i1 false}
!97 = !{ptr @TRACE_SYSTEM_ZONE_DMA, !95, !"TRACE_SYSTEM_ZONE_DMA", i1 false, i1 false}
!98 = !{ptr @.str.13, !95, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @__TRACE_SYSTEM_ZONE_NORMAL, !95, !"__TRACE_SYSTEM_ZONE_NORMAL", i1 false, i1 false}
!100 = !{ptr @TRACE_SYSTEM_ZONE_NORMAL, !95, !"TRACE_SYSTEM_ZONE_NORMAL", i1 false, i1 false}
!101 = !{ptr @.str.14, !95, !"<string literal>", i1 false, i1 false}
!102 = !{ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, !95, !"__TRACE_SYSTEM_ZONE_HIGHMEM", i1 false, i1 false}
!103 = !{ptr @TRACE_SYSTEM_ZONE_HIGHMEM, !95, !"TRACE_SYSTEM_ZONE_HIGHMEM", i1 false, i1 false}
!104 = !{ptr @.str.15, !95, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @__TRACE_SYSTEM_ZONE_MOVABLE, !95, !"__TRACE_SYSTEM_ZONE_MOVABLE", i1 false, i1 false}
!106 = !{ptr @TRACE_SYSTEM_ZONE_MOVABLE, !95, !"TRACE_SYSTEM_ZONE_MOVABLE", i1 false, i1 false}
!107 = !{ptr @.str.16, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../include/trace/events/mmflags.h", i32 278, i32 1}
!109 = !{ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, !108, !"__TRACE_SYSTEM_LRU_INACTIVE_ANON", i1 false, i1 false}
!110 = !{ptr @TRACE_SYSTEM_LRU_INACTIVE_ANON, !108, !"TRACE_SYSTEM_LRU_INACTIVE_ANON", i1 false, i1 false}
!111 = !{ptr @.str.17, !108, !"<string literal>", i1 false, i1 false}
!112 = !{ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, !108, !"__TRACE_SYSTEM_LRU_ACTIVE_ANON", i1 false, i1 false}
!113 = !{ptr @TRACE_SYSTEM_LRU_ACTIVE_ANON, !108, !"TRACE_SYSTEM_LRU_ACTIVE_ANON", i1 false, i1 false}
!114 = !{ptr @.str.18, !108, !"<string literal>", i1 false, i1 false}
!115 = !{ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, !108, !"__TRACE_SYSTEM_LRU_INACTIVE_FILE", i1 false, i1 false}
!116 = !{ptr @TRACE_SYSTEM_LRU_INACTIVE_FILE, !108, !"TRACE_SYSTEM_LRU_INACTIVE_FILE", i1 false, i1 false}
!117 = !{ptr @.str.19, !108, !"<string literal>", i1 false, i1 false}
!118 = !{ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, !108, !"__TRACE_SYSTEM_LRU_ACTIVE_FILE", i1 false, i1 false}
!119 = !{ptr @TRACE_SYSTEM_LRU_ACTIVE_FILE, !108, !"TRACE_SYSTEM_LRU_ACTIVE_FILE", i1 false, i1 false}
!120 = !{ptr @.str.20, !108, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, !108, !"__TRACE_SYSTEM_LRU_UNEVICTABLE", i1 false, i1 false}
!122 = !{ptr @TRACE_SYSTEM_LRU_UNEVICTABLE, !108, !"TRACE_SYSTEM_LRU_UNEVICTABLE", i1 false, i1 false}
!123 = !{ptr @event_class_mm_compaction_isolate_template, !124, !"event_class_mm_compaction_isolate_template", i1 false, i1 false}
!124 = !{!"../include/trace/events/compaction.h", i32 14, i32 1}
!125 = !{ptr @event_mm_compaction_isolate_migratepages, !1, !"event_mm_compaction_isolate_migratepages", i1 false, i1 false}
!126 = !{ptr @__event_mm_compaction_isolate_migratepages, !1, !"__event_mm_compaction_isolate_migratepages", i1 false, i1 false}
!127 = !{ptr @event_mm_compaction_isolate_freepages, !5, !"event_mm_compaction_isolate_freepages", i1 false, i1 false}
!128 = !{ptr @__event_mm_compaction_isolate_freepages, !5, !"__event_mm_compaction_isolate_freepages", i1 false, i1 false}
!129 = !{ptr @event_class_mm_compaction_migratepages, !9, !"event_class_mm_compaction_migratepages", i1 false, i1 false}
!130 = !{ptr @event_mm_compaction_migratepages, !9, !"event_mm_compaction_migratepages", i1 false, i1 false}
!131 = !{ptr @__event_mm_compaction_migratepages, !9, !"__event_mm_compaction_migratepages", i1 false, i1 false}
!132 = !{ptr @event_class_mm_compaction_begin, !13, !"event_class_mm_compaction_begin", i1 false, i1 false}
!133 = !{ptr @event_mm_compaction_begin, !13, !"event_mm_compaction_begin", i1 false, i1 false}
!134 = !{ptr @__event_mm_compaction_begin, !13, !"__event_mm_compaction_begin", i1 false, i1 false}
!135 = !{ptr @event_class_mm_compaction_end, !17, !"event_class_mm_compaction_end", i1 false, i1 false}
!136 = !{ptr @event_mm_compaction_end, !17, !"event_mm_compaction_end", i1 false, i1 false}
!137 = !{ptr @__event_mm_compaction_end, !17, !"__event_mm_compaction_end", i1 false, i1 false}
!138 = !{ptr @event_class_mm_compaction_try_to_compact_pages, !21, !"event_class_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!139 = !{ptr @event_mm_compaction_try_to_compact_pages, !21, !"event_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!140 = !{ptr @__event_mm_compaction_try_to_compact_pages, !21, !"__event_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!141 = !{ptr @event_class_mm_compaction_suitable_template, !142, !"event_class_mm_compaction_suitable_template", i1 false, i1 false}
!142 = !{!"../include/trace/events/compaction.h", i32 181, i32 1}
!143 = !{ptr @event_mm_compaction_finished, !25, !"event_mm_compaction_finished", i1 false, i1 false}
!144 = !{ptr @__event_mm_compaction_finished, !25, !"__event_mm_compaction_finished", i1 false, i1 false}
!145 = !{ptr @event_mm_compaction_suitable, !29, !"event_mm_compaction_suitable", i1 false, i1 false}
!146 = !{ptr @__event_mm_compaction_suitable, !29, !"__event_mm_compaction_suitable", i1 false, i1 false}
!147 = !{ptr @event_class_mm_compaction_defer_template, !148, !"event_class_mm_compaction_defer_template", i1 false, i1 false}
!148 = !{!"../include/trace/events/compaction.h", i32 228, i32 1}
!149 = !{ptr @event_mm_compaction_deferred, !33, !"event_mm_compaction_deferred", i1 false, i1 false}
!150 = !{ptr @__event_mm_compaction_deferred, !33, !"__event_mm_compaction_deferred", i1 false, i1 false}
!151 = !{ptr @event_mm_compaction_defer_compaction, !37, !"event_mm_compaction_defer_compaction", i1 false, i1 false}
!152 = !{ptr @__event_mm_compaction_defer_compaction, !37, !"__event_mm_compaction_defer_compaction", i1 false, i1 false}
!153 = !{ptr @event_mm_compaction_defer_reset, !41, !"event_mm_compaction_defer_reset", i1 false, i1 false}
!154 = !{ptr @__event_mm_compaction_defer_reset, !41, !"__event_mm_compaction_defer_reset", i1 false, i1 false}
!155 = !{ptr @event_class_mm_compaction_kcompactd_sleep, !45, !"event_class_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!156 = !{ptr @event_mm_compaction_kcompactd_sleep, !45, !"event_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!157 = !{ptr @__event_mm_compaction_kcompactd_sleep, !45, !"__event_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!158 = !{ptr @event_class_kcompactd_wake_template, !159, !"event_class_kcompactd_wake_template", i1 false, i1 false}
!159 = !{!"../include/trace/events/compaction.h", i32 299, i32 1}
!160 = !{ptr @event_mm_compaction_wakeup_kcompactd, !49, !"event_mm_compaction_wakeup_kcompactd", i1 false, i1 false}
!161 = !{ptr @__event_mm_compaction_wakeup_kcompactd, !49, !"__event_mm_compaction_wakeup_kcompactd", i1 false, i1 false}
!162 = !{ptr @event_mm_compaction_kcompactd_wake, !53, !"event_mm_compaction_kcompactd_wake", i1 false, i1 false}
!163 = !{ptr @__event_mm_compaction_kcompactd_wake, !53, !"__event_mm_compaction_kcompactd_wake", i1 false, i1 false}
!164 = !{ptr @__bpf_trace_tp_map_mm_compaction_isolate_migratepages, !1, !"__bpf_trace_tp_map_mm_compaction_isolate_migratepages", i1 false, i1 false}
!165 = !{ptr @__bpf_trace_tp_map_mm_compaction_isolate_freepages, !5, !"__bpf_trace_tp_map_mm_compaction_isolate_freepages", i1 false, i1 false}
!166 = !{ptr @__bpf_trace_tp_map_mm_compaction_migratepages, !9, !"__bpf_trace_tp_map_mm_compaction_migratepages", i1 false, i1 false}
!167 = !{ptr @__bpf_trace_tp_map_mm_compaction_begin, !13, !"__bpf_trace_tp_map_mm_compaction_begin", i1 false, i1 false}
!168 = !{ptr @__bpf_trace_tp_map_mm_compaction_end, !17, !"__bpf_trace_tp_map_mm_compaction_end", i1 false, i1 false}
!169 = !{ptr @__bpf_trace_tp_map_mm_compaction_try_to_compact_pages, !21, !"__bpf_trace_tp_map_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!170 = !{ptr @__bpf_trace_tp_map_mm_compaction_finished, !25, !"__bpf_trace_tp_map_mm_compaction_finished", i1 false, i1 false}
!171 = !{ptr @__bpf_trace_tp_map_mm_compaction_suitable, !29, !"__bpf_trace_tp_map_mm_compaction_suitable", i1 false, i1 false}
!172 = !{ptr @__bpf_trace_tp_map_mm_compaction_deferred, !33, !"__bpf_trace_tp_map_mm_compaction_deferred", i1 false, i1 false}
!173 = !{ptr @__bpf_trace_tp_map_mm_compaction_defer_compaction, !37, !"__bpf_trace_tp_map_mm_compaction_defer_compaction", i1 false, i1 false}
!174 = !{ptr @__bpf_trace_tp_map_mm_compaction_defer_reset, !41, !"__bpf_trace_tp_map_mm_compaction_defer_reset", i1 false, i1 false}
!175 = !{ptr @__bpf_trace_tp_map_mm_compaction_kcompactd_sleep, !45, !"__bpf_trace_tp_map_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!176 = !{ptr @__bpf_trace_tp_map_mm_compaction_wakeup_kcompactd, !49, !"__bpf_trace_tp_map_mm_compaction_wakeup_kcompactd", i1 false, i1 false}
!177 = !{ptr @__bpf_trace_tp_map_mm_compaction_kcompactd_wake, !53, !"__bpf_trace_tp_map_mm_compaction_kcompactd_wake", i1 false, i1 false}
!178 = !{ptr @.str.21, !179, !"<string literal>", i1 false, i1 false}
!179 = !{!"../mm/compaction.c", i32 118, i32 2}
!180 = !{ptr @__ksymtab_PageMovable, !181, !"__ksymtab_PageMovable", i1 false, i1 false}
!181 = !{!"../mm/compaction.c", i32 128, i32 1}
!182 = !{ptr @.str.22, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../mm/compaction.c", i32 133, i32 2}
!184 = !{ptr @__ksymtab___SetPageMovable, !185, !"__ksymtab___SetPageMovable", i1 false, i1 false}
!185 = !{!"../mm/compaction.c", i32 136, i32 1}
!186 = !{ptr @.str.23, !187, !"<string literal>", i1 false, i1 false}
!187 = !{!"../mm/compaction.c", i32 140, i32 2}
!188 = !{ptr @__ksymtab___ClearPageMovable, !189, !"__ksymtab___ClearPageMovable", i1 false, i1 false}
!189 = !{!"../mm/compaction.c", i32 149, i32 1}
!190 = !{ptr @sysctl_compact_unevictable_allowed, !191, !"sysctl_compact_unevictable_allowed", i1 false, i1 false}
!191 = !{!"../mm/compaction.c", i32 1705, i32 5}
!192 = !{ptr @sysctl_extfrag_threshold, !193, !"sysctl_extfrag_threshold", i1 false, i1 false}
!193 = !{!"../mm/compaction.c", i32 2544, i32 5}
!194 = !{ptr @sysctl_compaction_proactiveness, !195, !"sysctl_compaction_proactiveness", i1 false, i1 false}
!195 = !{!"../mm/compaction.c", i32 2708, i32 28}
!196 = !{ptr @.str.24, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../mm/compaction.c", i32 2993, i32 21}
!198 = !{ptr @.str.25, !199, !"<string literal>", i1 false, i1 false}
!199 = !{!"../mm/compaction.c", i32 2995, i32 3}
!200 = !{ptr @.str.26, !199, !"<string literal>", i1 false, i1 false}
!201 = !{ptr @.str.27, !199, !"<string literal>", i1 false, i1 false}
!202 = !{ptr @kcompactd_run._entry, !199, !"_entry", i1 false, i1 false}
!203 = !{ptr @kcompactd_run._entry_ptr, !199, !"_entry_ptr", i1 false, i1 false}
!204 = !{ptr @__initcall__kmod_compaction__417_3056_kcompactd_init4, !205, !"__initcall__kmod_compaction__417_3056_kcompactd_init4", i1 false, i1 false}
!205 = !{!"../mm/compaction.c", i32 3056, i32 1}
!206 = !{ptr @__tpstrtab_mm_compaction_isolate_migratepages, !1, !"__tpstrtab_mm_compaction_isolate_migratepages", i1 false, i1 false}
!207 = !{ptr @__tpstrtab_mm_compaction_isolate_freepages, !5, !"__tpstrtab_mm_compaction_isolate_freepages", i1 false, i1 false}
!208 = !{ptr @__tpstrtab_mm_compaction_migratepages, !9, !"__tpstrtab_mm_compaction_migratepages", i1 false, i1 false}
!209 = !{ptr @__tpstrtab_mm_compaction_begin, !13, !"__tpstrtab_mm_compaction_begin", i1 false, i1 false}
!210 = !{ptr @__tpstrtab_mm_compaction_end, !17, !"__tpstrtab_mm_compaction_end", i1 false, i1 false}
!211 = !{ptr @__tpstrtab_mm_compaction_try_to_compact_pages, !21, !"__tpstrtab_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!212 = !{ptr @__tpstrtab_mm_compaction_finished, !25, !"__tpstrtab_mm_compaction_finished", i1 false, i1 false}
!213 = !{ptr @__tpstrtab_mm_compaction_suitable, !29, !"__tpstrtab_mm_compaction_suitable", i1 false, i1 false}
!214 = !{ptr @__tpstrtab_mm_compaction_deferred, !33, !"__tpstrtab_mm_compaction_deferred", i1 false, i1 false}
!215 = !{ptr @__tpstrtab_mm_compaction_defer_compaction, !37, !"__tpstrtab_mm_compaction_defer_compaction", i1 false, i1 false}
!216 = !{ptr @__tpstrtab_mm_compaction_defer_reset, !41, !"__tpstrtab_mm_compaction_defer_reset", i1 false, i1 false}
!217 = !{ptr @__tpstrtab_mm_compaction_kcompactd_sleep, !45, !"__tpstrtab_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!218 = !{ptr @__tpstrtab_mm_compaction_wakeup_kcompactd, !49, !"__tpstrtab_mm_compaction_wakeup_kcompactd", i1 false, i1 false}
!219 = !{ptr @__tpstrtab_mm_compaction_kcompactd_wake, !53, !"__tpstrtab_mm_compaction_kcompactd_wake", i1 false, i1 false}
!220 = !{ptr @str__compaction__trace_system_name, !221, !"str__compaction__trace_system_name", i1 false, i1 false}
!221 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!222 = !{ptr @.str.28, !124, !"<string literal>", i1 false, i1 false}
!223 = !{ptr @.str.29, !124, !"<string literal>", i1 false, i1 false}
!224 = !{ptr @.str.30, !124, !"<string literal>", i1 false, i1 false}
!225 = !{ptr @.str.31, !124, !"<string literal>", i1 false, i1 false}
!226 = !{ptr @.str.32, !124, !"<string literal>", i1 false, i1 false}
!227 = !{ptr @trace_event_fields_mm_compaction_isolate_template, !124, !"trace_event_fields_mm_compaction_isolate_template", i1 false, i1 false}
!228 = !{ptr @trace_event_type_funcs_mm_compaction_isolate_template, !124, !"trace_event_type_funcs_mm_compaction_isolate_template", i1 false, i1 false}
!229 = !{ptr @.str.33, !124, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @print_fmt_mm_compaction_isolate_template, !124, !"print_fmt_mm_compaction_isolate_template", i1 false, i1 false}
!231 = !{ptr @.str.34, !9, !"<string literal>", i1 false, i1 false}
!232 = !{ptr @.str.35, !9, !"<string literal>", i1 false, i1 false}
!233 = !{ptr @trace_event_fields_mm_compaction_migratepages, !9, !"trace_event_fields_mm_compaction_migratepages", i1 false, i1 false}
!234 = !{ptr @trace_event_type_funcs_mm_compaction_migratepages, !9, !"trace_event_type_funcs_mm_compaction_migratepages", i1 false, i1 false}
!235 = !{ptr @.str.36, !9, !"<string literal>", i1 false, i1 false}
!236 = !{ptr @print_fmt_mm_compaction_migratepages, !9, !"print_fmt_mm_compaction_migratepages", i1 false, i1 false}
!237 = !{ptr @.str.37, !13, !"<string literal>", i1 false, i1 false}
!238 = !{ptr @.str.38, !13, !"<string literal>", i1 false, i1 false}
!239 = !{ptr @.str.39, !13, !"<string literal>", i1 false, i1 false}
!240 = !{ptr @.str.40, !13, !"<string literal>", i1 false, i1 false}
!241 = !{ptr @.str.41, !13, !"<string literal>", i1 false, i1 false}
!242 = !{ptr @.str.42, !13, !"<string literal>", i1 false, i1 false}
!243 = !{ptr @trace_event_fields_mm_compaction_begin, !13, !"trace_event_fields_mm_compaction_begin", i1 false, i1 false}
!244 = !{ptr @trace_event_type_funcs_mm_compaction_begin, !13, !"trace_event_type_funcs_mm_compaction_begin", i1 false, i1 false}
!245 = !{ptr @.str.43, !13, !"<string literal>", i1 false, i1 false}
!246 = !{ptr @.str.44, !13, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @print_fmt_mm_compaction_begin, !13, !"print_fmt_mm_compaction_begin", i1 false, i1 false}
!248 = !{ptr @.str.45, !17, !"<string literal>", i1 false, i1 false}
!249 = !{ptr @.str.46, !17, !"<string literal>", i1 false, i1 false}
!250 = !{ptr @trace_event_fields_mm_compaction_end, !17, !"trace_event_fields_mm_compaction_end", i1 false, i1 false}
!251 = !{ptr @trace_event_type_funcs_mm_compaction_end, !17, !"trace_event_type_funcs_mm_compaction_end", i1 false, i1 false}
!252 = !{ptr @.str.47, !17, !"<string literal>", i1 false, i1 false}
!253 = !{ptr @.str.48, !17, !"<string literal>", i1 false, i1 false}
!254 = !{ptr @.str.49, !17, !"<string literal>", i1 false, i1 false}
!255 = !{ptr @.str.50, !17, !"<string literal>", i1 false, i1 false}
!256 = !{ptr @.str.51, !17, !"<string literal>", i1 false, i1 false}
!257 = !{ptr @.str.52, !17, !"<string literal>", i1 false, i1 false}
!258 = !{ptr @.str.53, !17, !"<string literal>", i1 false, i1 false}
!259 = !{ptr @.str.54, !17, !"<string literal>", i1 false, i1 false}
!260 = !{ptr @.str.55, !17, !"<string literal>", i1 false, i1 false}
!261 = !{ptr @.str.56, !17, !"<string literal>", i1 false, i1 false}
!262 = !{ptr @trace_raw_output_mm_compaction_end.symbols, !17, !"symbols", i1 false, i1 false}
!263 = !{ptr @print_fmt_mm_compaction_end, !17, !"print_fmt_mm_compaction_end", i1 false, i1 false}
!264 = !{ptr @.str.57, !21, !"<string literal>", i1 false, i1 false}
!265 = !{ptr @.str.58, !21, !"<string literal>", i1 false, i1 false}
!266 = !{ptr @.str.59, !21, !"<string literal>", i1 false, i1 false}
!267 = !{ptr @.str.60, !21, !"<string literal>", i1 false, i1 false}
!268 = !{ptr @trace_event_fields_mm_compaction_try_to_compact_pages, !21, !"trace_event_fields_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!269 = !{ptr @trace_event_type_funcs_mm_compaction_try_to_compact_pages, !21, !"trace_event_type_funcs_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!270 = !{ptr @.str.61, !21, !"<string literal>", i1 false, i1 false}
!271 = !{ptr @.str.62, !21, !"<string literal>", i1 false, i1 false}
!272 = !{ptr @.str.63, !21, !"<string literal>", i1 false, i1 false}
!273 = !{ptr @.str.64, !21, !"<string literal>", i1 false, i1 false}
!274 = !{ptr @.str.65, !21, !"<string literal>", i1 false, i1 false}
!275 = !{ptr @.str.66, !21, !"<string literal>", i1 false, i1 false}
!276 = !{ptr @.str.67, !21, !"<string literal>", i1 false, i1 false}
!277 = !{ptr @.str.68, !21, !"<string literal>", i1 false, i1 false}
!278 = !{ptr @.str.69, !21, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @.str.70, !21, !"<string literal>", i1 false, i1 false}
!280 = !{ptr @.str.71, !21, !"<string literal>", i1 false, i1 false}
!281 = !{ptr @.str.72, !21, !"<string literal>", i1 false, i1 false}
!282 = !{ptr @.str.73, !21, !"<string literal>", i1 false, i1 false}
!283 = !{ptr @.str.74, !21, !"<string literal>", i1 false, i1 false}
!284 = !{ptr @.str.75, !21, !"<string literal>", i1 false, i1 false}
!285 = !{ptr @.str.76, !21, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @.str.77, !21, !"<string literal>", i1 false, i1 false}
!287 = !{ptr @.str.78, !21, !"<string literal>", i1 false, i1 false}
!288 = !{ptr @.str.79, !21, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @.str.80, !21, !"<string literal>", i1 false, i1 false}
!290 = !{ptr @.str.81, !21, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @.str.82, !21, !"<string literal>", i1 false, i1 false}
!292 = !{ptr @.str.83, !21, !"<string literal>", i1 false, i1 false}
!293 = !{ptr @.str.84, !21, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @.str.85, !21, !"<string literal>", i1 false, i1 false}
!295 = !{ptr @.str.86, !21, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @.str.87, !21, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @.str.88, !21, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @.str.89, !21, !"<string literal>", i1 false, i1 false}
!299 = !{ptr @.str.90, !21, !"<string literal>", i1 false, i1 false}
!300 = !{ptr @.str.91, !21, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @.str.92, !21, !"<string literal>", i1 false, i1 false}
!302 = !{ptr @.str.93, !21, !"<string literal>", i1 false, i1 false}
!303 = !{ptr @.str.94, !21, !"<string literal>", i1 false, i1 false}
!304 = !{ptr @.str.95, !21, !"<string literal>", i1 false, i1 false}
!305 = !{ptr @.str.96, !21, !"<string literal>", i1 false, i1 false}
!306 = !{ptr @.str.97, !21, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @.str.98, !21, !"<string literal>", i1 false, i1 false}
!308 = !{ptr @trace_raw_output_mm_compaction_try_to_compact_pages.__flags, !21, !"__flags", i1 false, i1 false}
!309 = !{ptr @.str.99, !21, !"<string literal>", i1 false, i1 false}
!310 = !{ptr @.str.100, !21, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @print_fmt_mm_compaction_try_to_compact_pages, !21, !"print_fmt_mm_compaction_try_to_compact_pages", i1 false, i1 false}
!312 = !{ptr @.str.101, !142, !"<string literal>", i1 false, i1 false}
!313 = !{ptr @.str.102, !142, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @.str.103, !142, !"<string literal>", i1 false, i1 false}
!315 = !{ptr @.str.104, !142, !"<string literal>", i1 false, i1 false}
!316 = !{ptr @trace_event_fields_mm_compaction_suitable_template, !142, !"trace_event_fields_mm_compaction_suitable_template", i1 false, i1 false}
!317 = !{ptr @trace_event_type_funcs_mm_compaction_suitable_template, !142, !"trace_event_type_funcs_mm_compaction_suitable_template", i1 false, i1 false}
!318 = !{ptr @.str.105, !142, !"<string literal>", i1 false, i1 false}
!319 = !{ptr @.str.106, !142, !"<string literal>", i1 false, i1 false}
!320 = !{ptr @.str.107, !142, !"<string literal>", i1 false, i1 false}
!321 = !{ptr @.str.108, !142, !"<string literal>", i1 false, i1 false}
!322 = !{ptr @.str.109, !142, !"<string literal>", i1 false, i1 false}
!323 = !{ptr @trace_raw_output_mm_compaction_suitable_template.symbols, !142, !"symbols", i1 false, i1 false}
!324 = !{ptr @trace_raw_output_mm_compaction_suitable_template.symbols.110, !142, !"symbols", i1 false, i1 false}
!325 = !{ptr @print_fmt_mm_compaction_suitable_template, !142, !"print_fmt_mm_compaction_suitable_template", i1 false, i1 false}
!326 = !{ptr @.str.111, !148, !"<string literal>", i1 false, i1 false}
!327 = !{ptr @.str.112, !148, !"<string literal>", i1 false, i1 false}
!328 = !{ptr @.str.113, !148, !"<string literal>", i1 false, i1 false}
!329 = !{ptr @.str.114, !148, !"<string literal>", i1 false, i1 false}
!330 = !{ptr @trace_event_fields_mm_compaction_defer_template, !148, !"trace_event_fields_mm_compaction_defer_template", i1 false, i1 false}
!331 = !{ptr @trace_event_type_funcs_mm_compaction_defer_template, !148, !"trace_event_type_funcs_mm_compaction_defer_template", i1 false, i1 false}
!332 = !{ptr @.str.115, !148, !"<string literal>", i1 false, i1 false}
!333 = !{ptr @trace_raw_output_mm_compaction_defer_template.symbols, !148, !"symbols", i1 false, i1 false}
!334 = !{ptr @print_fmt_mm_compaction_defer_template, !148, !"print_fmt_mm_compaction_defer_template", i1 false, i1 false}
!335 = !{ptr @trace_event_fields_mm_compaction_kcompactd_sleep, !45, !"trace_event_fields_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!336 = !{ptr @trace_event_type_funcs_mm_compaction_kcompactd_sleep, !45, !"trace_event_type_funcs_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!337 = !{ptr @.str.116, !45, !"<string literal>", i1 false, i1 false}
!338 = !{ptr @print_fmt_mm_compaction_kcompactd_sleep, !45, !"print_fmt_mm_compaction_kcompactd_sleep", i1 false, i1 false}
!339 = !{ptr @.str.117, !159, !"<string literal>", i1 false, i1 false}
!340 = !{ptr @trace_event_fields_kcompactd_wake_template, !159, !"trace_event_fields_kcompactd_wake_template", i1 false, i1 false}
!341 = !{ptr @trace_event_type_funcs_kcompactd_wake_template, !159, !"trace_event_type_funcs_kcompactd_wake_template", i1 false, i1 false}
!342 = !{ptr @.str.118, !159, !"<string literal>", i1 false, i1 false}
!343 = !{ptr @trace_raw_output_kcompactd_wake_template.symbols, !159, !"symbols", i1 false, i1 false}
!344 = !{ptr @print_fmt_kcompactd_wake_template, !159, !"print_fmt_kcompactd_wake_template", i1 false, i1 false}
!345 = !{ptr @.str.119, !346, !"<string literal>", i1 false, i1 false}
!346 = !{!"../include/linux/page-flags.h", i32 414, i32 1}
!347 = distinct !{null, !41, !"__already_done", i1 false, i1 false}
!348 = !{ptr @.str.120, !41, !"<string literal>", i1 false, i1 false}
!349 = distinct !{null, !41, !"__warned", i1 false, i1 false}
!350 = !{ptr @.str.121, !41, !"<string literal>", i1 false, i1 false}
!351 = distinct !{null, !352, !"__already_done", i1 false, i1 false}
!352 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!353 = !{ptr @.str.122, !352, !"<string literal>", i1 false, i1 false}
!354 = !{ptr @.str.123, !355, !"<string literal>", i1 false, i1 false}
!355 = !{!"../include/linux/mm.h", i32 1368, i32 10}
!356 = !{ptr @.str.124, !357, !"<string literal>", i1 false, i1 false}
!357 = !{!"../include/linux/page-flags.h", i32 698, i32 1}
!358 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!359 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!360 = distinct !{null, !361, !"__already_done", i1 false, i1 false}
!361 = !{!"../include/linux/vmstat.h", i32 202, i32 2}
!362 = distinct !{null, !361, !"<string literal>", i1 false, i1 false}
!363 = distinct !{null, !364, !"__warned", i1 false, i1 false}
!364 = !{!"../include/linux/memcontrol.h", i32 746, i32 2}
!365 = !{ptr @.str.126, !364, !"<string literal>", i1 false, i1 false}
!366 = !{ptr @.str.127, !364, !"<string literal>", i1 false, i1 false}
!367 = !{ptr @.str.128, !368, !"<string literal>", i1 false, i1 false}
!368 = !{!"../include/linux/memcontrol.h", i32 537, i32 2}
!369 = !{ptr @.str.129, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../include/linux/memcontrol.h", i32 538, i32 2}
!371 = !{ptr @.str.130, !372, !"<string literal>", i1 false, i1 false}
!372 = !{!"../include/linux/memcontrol.h", i32 417, i32 2}
!373 = distinct !{null, !374, !"<string literal>", i1 false, i1 false}
!374 = !{!"../include/linux/memcontrol.h", i32 418, i32 2}
!375 = distinct !{null, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../include/linux/memcontrol.h", i32 419, i32 2}
!377 = !{ptr @.str.133, !378, !"<string literal>", i1 false, i1 false}
!378 = !{!"../include/linux/page-flags.h", i32 260, i32 2}
!379 = distinct !{null, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../include/linux/page-flags.h", i32 261, i32 2}
!381 = distinct !{null, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../include/linux/memcontrol.h", i32 398, i32 2}
!383 = !{ptr @.str.136, !384, !"<string literal>", i1 false, i1 false}
!384 = !{!"../include/linux/mm_inline.h", i32 83, i32 2}
!385 = !{ptr @.str.137, !386, !"<string literal>", i1 false, i1 false}
!386 = !{!"../include/linux/mm.h", i32 717, i32 2}
!387 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!388 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!389 = distinct !{null, !29, !"__already_done", i1 false, i1 false}
!390 = distinct !{null, !29, !"__warned", i1 false, i1 false}
!391 = distinct !{null, !21, !"__already_done", i1 false, i1 false}
!392 = distinct !{null, !21, !"__warned", i1 false, i1 false}
!393 = distinct !{null, !33, !"__already_done", i1 false, i1 false}
!394 = distinct !{null, !33, !"__warned", i1 false, i1 false}
!395 = !{ptr @.str.138, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../include/linux/gfp.h", i32 347, i32 2}
!397 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!398 = distinct !{null, !13, !"__warned", i1 false, i1 false}
!399 = distinct !{null, !25, !"__already_done", i1 false, i1 false}
!400 = distinct !{null, !25, !"__warned", i1 false, i1 false}
!401 = distinct !{null, !402, !"__already_done", i1 false, i1 false}
!402 = !{!"../mm/compaction.c", i32 1411, i32 6}
!403 = distinct !{null, !9, !"__already_done", i1 false, i1 false}
!404 = distinct !{null, !9, !"__warned", i1 false, i1 false}
!405 = distinct !{null, !17, !"__already_done", i1 false, i1 false}
!406 = distinct !{null, !17, !"__warned", i1 false, i1 false}
!407 = distinct !{null, !37, !"__already_done", i1 false, i1 false}
!408 = distinct !{null, !37, !"__warned", i1 false, i1 false}
!409 = distinct !{null, !49, !"__already_done", i1 false, i1 false}
!410 = distinct !{null, !49, !"__warned", i1 false, i1 false}
!411 = distinct !{null, !45, !"__already_done", i1 false, i1 false}
!412 = distinct !{null, !45, !"__warned", i1 false, i1 false}
!413 = !{ptr @.str.139, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../include/linux/freezer.h", i32 57, i32 2}
!415 = distinct !{null, !53, !"__already_done", i1 false, i1 false}
!416 = distinct !{null, !53, !"__warned", i1 false, i1 false}
!417 = !{ptr @.str.140, !418, !"<string literal>", i1 false, i1 false}
!418 = !{!"../mm/compaction.c", i32 3045, i32 6}
!419 = !{ptr @.str.141, !420, !"<string literal>", i1 false, i1 false}
!420 = !{!"../mm/compaction.c", i32 3048, i32 3}
!421 = !{ptr @.str.142, !420, !"<string literal>", i1 false, i1 false}
!422 = !{ptr @kcompactd_init._entry, !420, !"_entry", i1 false, i1 false}
!423 = !{ptr @kcompactd_init._entry_ptr, !420, !"_entry_ptr", i1 false, i1 false}
!424 = !{!"sp"}
!425 = !{i32 1, !"wchar_size", i32 2}
!426 = !{i32 1, !"min_enum_size", i32 4}
!427 = !{i32 8, !"branch-target-enforcement", i32 0}
!428 = !{i32 8, !"sign-return-address", i32 0}
!429 = !{i32 8, !"sign-return-address-all", i32 0}
!430 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!431 = !{i32 7, !"uwtable", i32 1}
!432 = !{i32 7, !"frame-pointer", i32 2}
!433 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!434 = !{!"branch_weights", i32 2000, i32 1}
!435 = !{!"branch_weights", i32 1, i32 2000}
!436 = !{!"auto-init"}
!437 = !{i64 2150912791, i64 2150913282, i64 2150912828, i64 2150912884, i64 2150912918, i64 2150912942, i64 2150912983, i64 2150913004, i64 2150913032, i64 2150913066}
!438 = !{i64 2157093839, i64 2157094319, i64 2157093876, i64 2157093932, i64 2157093966, i64 2157093990, i64 2157094031, i64 2157094052, i64 2157094080, i64 2157094114}
!439 = !{i64 2157096913, i64 2157097393, i64 2157096950, i64 2157097006, i64 2157097040, i64 2157097064, i64 2157097105, i64 2157097126, i64 2157097154, i64 2157097188}
!440 = !{i64 2157098729, i64 2157099209, i64 2157098766, i64 2157098822, i64 2157098856, i64 2157098880, i64 2157098921, i64 2157098942, i64 2157098970, i64 2157099004}
!441 = !{i64 2157105998, i64 2157106478, i64 2157106035, i64 2157106091, i64 2157106125, i64 2157106149, i64 2157106190, i64 2157106211, i64 2157106239, i64 2157106273}
!442 = !{i64 2148373407, i64 2148373412, i64 2148373425, i64 2148373469, i64 2148373503, i64 2148373524}
!443 = !{i64 2155383893}
!444 = !{i64 2155384128}
!445 = !{i64 2149396087}
!446 = !{i64 2149397123}
!447 = !{i8 0, i8 2}
!448 = !{i64 2151668083, i64 2151668574, i64 2151668120, i64 2151668176, i64 2151668210, i64 2151668234, i64 2151668275, i64 2151668296, i64 2151668324, i64 2151668358}
!449 = !{i64 954272, i64 954333}
!450 = !{i64 957004}
!451 = !{i64 957289}
!452 = !{i64 2151047424, i64 2151047915, i64 2151047461, i64 2151047517, i64 2151047551, i64 2151047575, i64 2151047616, i64 2151047637, i64 2151047665, i64 2151047699}
!453 = !{i64 2151721300, i64 2151721791, i64 2151721337, i64 2151721393, i64 2151721427, i64 2151721451, i64 2151721492, i64 2151721513, i64 2151721541, i64 2151721575}
!454 = !{i64 2148559433}
!455 = !{i64 1046033, i64 1046058, i64 1046080, i64 1046096, i64 1046108, i64 1046128, i64 1046152, i64 1046168, i64 1046180}
!456 = !{i64 2148559621}
!457 = !{i64 2151067207, i64 2151067380, i64 2151067395, i64 2151067447, i64 2151067506, i64 2151067530, i64 2151067571, i64 2151067592, i64 2151067620, i64 2151067652}
!458 = !{i64 2151053328, i64 2151053501, i64 2151053516, i64 2151053568, i64 2151053627, i64 2151053651, i64 2151053692, i64 2151053713, i64 2151053741, i64 2151053773}
!459 = !{i64 2150905358, i64 2150905849, i64 2150905395, i64 2150905451, i64 2150905485, i64 2150905509, i64 2150905550, i64 2150905571, i64 2150905599, i64 2150905633}
!460 = !{i64 2155017031, i64 2155017520, i64 2155017068, i64 2155017124, i64 2155017158, i64 2155017182, i64 2155017223, i64 2155017244, i64 2155017272, i64 2155017306}
!461 = !{i64 2154346749, i64 2154347233, i64 2154346786, i64 2154346842, i64 2154346876, i64 2154346900, i64 2154346941, i64 2154346962, i64 2154346990, i64 2154347024}
!462 = !{i64 2154312045, i64 2154312533, i64 2154312082, i64 2154312138, i64 2154312172, i64 2154312196, i64 2154312237, i64 2154312258, i64 2154312286, i64 2154312320}
!463 = !{i64 2154321055, i64 2154321538, i64 2154321092, i64 2154321148, i64 2154321182, i64 2154321206, i64 2154321247, i64 2154321268, i64 2154321296, i64 2154321330}
!464 = !{i64 2148648466}
!465 = !{i64 2148563199, i64 2148563231, i64 2148563260, i64 2148563294, i64 2148563325, i64 2148563348}
!466 = !{i64 2148648695}
!467 = !{i64 2155328138}
!468 = !{i64 2155328377}
!469 = !{i64 2157189145}
!470 = !{i64 2157192512, i64 2157192993, i64 2157192549, i64 2157192605, i64 2157192639, i64 2157192663, i64 2157192704, i64 2157192725, i64 2157192753, i64 2157192787}
!471 = !{i64 2157198221, i64 2157198702, i64 2157198258, i64 2157198314, i64 2157198348, i64 2157198372, i64 2157198413, i64 2157198434, i64 2157198462, i64 2157198496}
!472 = !{i64 2155288955}
!473 = !{i64 2155289228}
!474 = !{i64 2157213073, i64 2157213554, i64 2157213110, i64 2157213166, i64 2157213200, i64 2157213224, i64 2157213265, i64 2157213286, i64 2157213314, i64 2157213348}
!475 = !{i64 2157214721, i64 2157215202, i64 2157214758, i64 2157214814, i64 2157214848, i64 2157214872, i64 2157214913, i64 2157214934, i64 2157214962, i64 2157214996}
!476 = !{i64 2149672488}
!477 = !{i64 2155418835}
!478 = !{i64 2155419112}
!479 = !{i64 2155062069}
!480 = !{i64 2157217087, i64 2157217568, i64 2157217124, i64 2157217180, i64 2157217214, i64 2157217238, i64 2157217279, i64 2157217300, i64 2157217328, i64 2157217362}
!481 = !{i64 2157218735, i64 2157219216, i64 2157218772, i64 2157218828, i64 2157218862, i64 2157218886, i64 2157218927, i64 2157218948, i64 2157218976, i64 2157219010}
!482 = !{i64 2157209591, i64 2157210072, i64 2157209628, i64 2157209684, i64 2157209718, i64 2157209742, i64 2157209783, i64 2157209804, i64 2157209832, i64 2157209866}
!483 = !{i64 2157211239, i64 2157211720, i64 2157211276, i64 2157211332, i64 2157211366, i64 2157211390, i64 2157211431, i64 2157211452, i64 2157211480, i64 2157211514}
!484 = !{i64 2155211168}
!485 = !{i64 2155211473}
!486 = !{i64 2154737179, i64 2154737670, i64 2154737216, i64 2154737272, i64 2154737306, i64 2154737330, i64 2154737371, i64 2154737392, i64 2154737420, i64 2154737454}
!487 = !{i64 2154743140, i64 2154743631, i64 2154743177, i64 2154743233, i64 2154743267, i64 2154743291, i64 2154743332, i64 2154743353, i64 2154743381, i64 2154743415}
!488 = !{i64 2154721679, i64 2154722170, i64 2154721716, i64 2154721772, i64 2154721806, i64 2154721830, i64 2154721871, i64 2154721892, i64 2154721920, i64 2154721954}
!489 = !{i64 2154715937, i64 2154716428, i64 2154715974, i64 2154716030, i64 2154716064, i64 2154716088, i64 2154716129, i64 2154716150, i64 2154716178, i64 2154716212}
!490 = !{i64 2155191578}
!491 = !{i64 2155191889}
!492 = !{i64 2155345130}
!493 = !{i64 2155345359}
!494 = !{!"branch_weights", i32 1, i32 2001, i32 2001, i32 2000}
!495 = !{i64 2157184089, i64 2157184570, i64 2157184126, i64 2157184182, i64 2157184216, i64 2157184240, i64 2157184281, i64 2157184302, i64 2157184330, i64 2157184364}
!496 = !{i64 2157187547, i64 2157188028, i64 2157187584, i64 2157187640, i64 2157187674, i64 2157187698, i64 2157187739, i64 2157187760, i64 2157187788, i64 2157187822}
!497 = !{i64 2155252203}
!498 = !{i64 2155252502}
!499 = !{i64 2155229484}
!500 = !{i64 2155229739}
!501 = !{i64 2155271035}
!502 = !{i64 2155271346}
!503 = !{i64 2155310919}
!504 = !{i64 2155311158}
!505 = !{i64 2155362360}
!506 = !{i64 2155362605}
!507 = !{i64 2155400881}
!508 = !{i64 2155401108}
!509 = !{i64 2155441106}
!510 = !{i64 2155441379}
