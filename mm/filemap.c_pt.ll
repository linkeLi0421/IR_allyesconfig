; ModuleID = '/llk/IR_all_yes/mm/filemap.c_pt.bc'
source_filename = "../mm/filemap.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+filemap_check_errors\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_check_errors\09\09\09\09"
module asm "\09.long\09__crc_filemap_check_errors\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_check_errors:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_check_errors\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_check_errors:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_fdatawrite_wbc\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_fdatawrite_wbc\09\09\09\09"
module asm "\09.long\09__crc_filemap_fdatawrite_wbc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_fdatawrite_wbc:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_fdatawrite_wbc\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_fdatawrite_wbc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_fdatawrite\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_fdatawrite\09\09\09\09"
module asm "\09.long\09__crc_filemap_fdatawrite\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_fdatawrite:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_fdatawrite\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_fdatawrite:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_fdatawrite_range\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_fdatawrite_range\09\09\09\09"
module asm "\09.long\09__crc_filemap_fdatawrite_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_fdatawrite_range:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_fdatawrite_range\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_fdatawrite_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_flush\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_flush\09\09\09\09"
module asm "\09.long\09__crc_filemap_flush\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_flush:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_flush\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_flush:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_range_has_page\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_range_has_page\09\09\09\09"
module asm "\09.long\09__crc_filemap_range_has_page\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_range_has_page:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_range_has_page\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_range_has_page:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_fdatawait_range\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_fdatawait_range\09\09\09\09"
module asm "\09.long\09__crc_filemap_fdatawait_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_fdatawait_range:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_fdatawait_range\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_fdatawait_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_fdatawait_range_keep_errors\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_fdatawait_range_keep_errors\09\09\09\09"
module asm "\09.long\09__crc_filemap_fdatawait_range_keep_errors\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_fdatawait_range_keep_errors:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_fdatawait_range_keep_errors\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_fdatawait_range_keep_errors:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+file_fdatawait_range\22, \22a\22\09"
module asm "\09.weak\09__crc_file_fdatawait_range\09\09\09\09"
module asm "\09.long\09__crc_file_fdatawait_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_file_fdatawait_range:\09\09\09\09\09"
module asm "\09.asciz \09\22file_fdatawait_range\22\09\09\09\09\09"
module asm "__kstrtabns_file_fdatawait_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_fdatawait_keep_errors\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_fdatawait_keep_errors\09\09\09\09"
module asm "\09.long\09__crc_filemap_fdatawait_keep_errors\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_fdatawait_keep_errors:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_fdatawait_keep_errors\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_fdatawait_keep_errors:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+filemap_range_has_writeback\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_range_has_writeback\09\09\09\09"
module asm "\09.long\09__crc_filemap_range_has_writeback\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_range_has_writeback:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_range_has_writeback\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_range_has_writeback:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_write_and_wait_range\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_write_and_wait_range\09\09\09\09"
module asm "\09.long\09__crc_filemap_write_and_wait_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_write_and_wait_range:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_write_and_wait_range\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_write_and_wait_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__filemap_set_wb_err\22, \22a\22\09"
module asm "\09.weak\09__crc___filemap_set_wb_err\09\09\09\09"
module asm "\09.long\09__crc___filemap_set_wb_err\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___filemap_set_wb_err:\09\09\09\09\09"
module asm "\09.asciz \09\22__filemap_set_wb_err\22\09\09\09\09\09"
module asm "__kstrtabns___filemap_set_wb_err:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+file_check_and_advance_wb_err\22, \22a\22\09"
module asm "\09.weak\09__crc_file_check_and_advance_wb_err\09\09\09\09"
module asm "\09.long\09__crc_file_check_and_advance_wb_err\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_file_check_and_advance_wb_err:\09\09\09\09\09"
module asm "\09.asciz \09\22file_check_and_advance_wb_err\22\09\09\09\09\09"
module asm "__kstrtabns_file_check_and_advance_wb_err:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+file_write_and_wait_range\22, \22a\22\09"
module asm "\09.weak\09__crc_file_write_and_wait_range\09\09\09\09"
module asm "\09.long\09__crc_file_write_and_wait_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_file_write_and_wait_range:\09\09\09\09\09"
module asm "\09.asciz \09\22file_write_and_wait_range\22\09\09\09\09\09"
module asm "__kstrtabns_file_write_and_wait_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+replace_page_cache_page\22, \22a\22\09"
module asm "\09.weak\09__crc_replace_page_cache_page\09\09\09\09"
module asm "\09.long\09__crc_replace_page_cache_page\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_replace_page_cache_page:\09\09\09\09\09"
module asm "\09.asciz \09\22replace_page_cache_page\22\09\09\09\09\09"
module asm "__kstrtabns_replace_page_cache_page:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+add_to_page_cache_locked\22, \22a\22\09"
module asm "\09.weak\09__crc_add_to_page_cache_locked\09\09\09\09"
module asm "\09.long\09__crc_add_to_page_cache_locked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_add_to_page_cache_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22add_to_page_cache_locked\22\09\09\09\09\09"
module asm "__kstrtabns_add_to_page_cache_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+filemap_add_folio\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_add_folio\09\09\09\09"
module asm "\09.long\09__crc_filemap_add_folio\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_add_folio:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_add_folio\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_add_folio:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_invalidate_lock_two\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_invalidate_lock_two\09\09\09\09"
module asm "\09.long\09__crc_filemap_invalidate_lock_two\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_invalidate_lock_two:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_invalidate_lock_two\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_invalidate_lock_two:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_invalidate_unlock_two\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_invalidate_unlock_two\09\09\09\09"
module asm "\09.long\09__crc_filemap_invalidate_unlock_two\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_invalidate_unlock_two:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_invalidate_unlock_two\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_invalidate_unlock_two:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+folio_wait_bit\22, \22a\22\09"
module asm "\09.weak\09__crc_folio_wait_bit\09\09\09\09"
module asm "\09.long\09__crc_folio_wait_bit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_folio_wait_bit:\09\09\09\09\09"
module asm "\09.asciz \09\22folio_wait_bit\22\09\09\09\09\09"
module asm "__kstrtabns_folio_wait_bit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+folio_wait_bit_killable\22, \22a\22\09"
module asm "\09.weak\09__crc_folio_wait_bit_killable\09\09\09\09"
module asm "\09.long\09__crc_folio_wait_bit_killable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_folio_wait_bit_killable:\09\09\09\09\09"
module asm "\09.asciz \09\22folio_wait_bit_killable\22\09\09\09\09\09"
module asm "__kstrtabns_folio_wait_bit_killable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+folio_add_wait_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_folio_add_wait_queue\09\09\09\09"
module asm "\09.long\09__crc_folio_add_wait_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_folio_add_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22folio_add_wait_queue\22\09\09\09\09\09"
module asm "__kstrtabns_folio_add_wait_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+folio_unlock\22, \22a\22\09"
module asm "\09.weak\09__crc_folio_unlock\09\09\09\09"
module asm "\09.long\09__crc_folio_unlock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_folio_unlock:\09\09\09\09\09"
module asm "\09.asciz \09\22folio_unlock\22\09\09\09\09\09"
module asm "__kstrtabns_folio_unlock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+folio_end_private_2\22, \22a\22\09"
module asm "\09.weak\09__crc_folio_end_private_2\09\09\09\09"
module asm "\09.long\09__crc_folio_end_private_2\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_folio_end_private_2:\09\09\09\09\09"
module asm "\09.asciz \09\22folio_end_private_2\22\09\09\09\09\09"
module asm "__kstrtabns_folio_end_private_2:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+folio_wait_private_2\22, \22a\22\09"
module asm "\09.weak\09__crc_folio_wait_private_2\09\09\09\09"
module asm "\09.long\09__crc_folio_wait_private_2\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_folio_wait_private_2:\09\09\09\09\09"
module asm "\09.asciz \09\22folio_wait_private_2\22\09\09\09\09\09"
module asm "__kstrtabns_folio_wait_private_2:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+folio_wait_private_2_killable\22, \22a\22\09"
module asm "\09.weak\09__crc_folio_wait_private_2_killable\09\09\09\09"
module asm "\09.long\09__crc_folio_wait_private_2_killable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_folio_wait_private_2_killable:\09\09\09\09\09"
module asm "\09.asciz \09\22folio_wait_private_2_killable\22\09\09\09\09\09"
module asm "__kstrtabns_folio_wait_private_2_killable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+folio_end_writeback\22, \22a\22\09"
module asm "\09.weak\09__crc_folio_end_writeback\09\09\09\09"
module asm "\09.long\09__crc_folio_end_writeback\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_folio_end_writeback:\09\09\09\09\09"
module asm "\09.asciz \09\22folio_end_writeback\22\09\09\09\09\09"
module asm "__kstrtabns_folio_end_writeback:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+page_endio\22, \22a\22\09"
module asm "\09.weak\09__crc_page_endio\09\09\09\09"
module asm "\09.long\09__crc_page_endio\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_endio:\09\09\09\09\09"
module asm "\09.asciz \09\22page_endio\22\09\09\09\09\09"
module asm "__kstrtabns_page_endio:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__folio_lock\22, \22a\22\09"
module asm "\09.weak\09__crc___folio_lock\09\09\09\09"
module asm "\09.long\09__crc___folio_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___folio_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22__folio_lock\22\09\09\09\09\09"
module asm "__kstrtabns___folio_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__folio_lock_killable\22, \22a\22\09"
module asm "\09.weak\09__crc___folio_lock_killable\09\09\09\09"
module asm "\09.long\09__crc___folio_lock_killable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___folio_lock_killable:\09\09\09\09\09"
module asm "\09.asciz \09\22__folio_lock_killable\22\09\09\09\09\09"
module asm "__kstrtabns___folio_lock_killable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+page_cache_next_miss\22, \22a\22\09"
module asm "\09.weak\09__crc_page_cache_next_miss\09\09\09\09"
module asm "\09.long\09__crc_page_cache_next_miss\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_cache_next_miss:\09\09\09\09\09"
module asm "\09.asciz \09\22page_cache_next_miss\22\09\09\09\09\09"
module asm "__kstrtabns_page_cache_next_miss:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+page_cache_prev_miss\22, \22a\22\09"
module asm "\09.weak\09__crc_page_cache_prev_miss\09\09\09\09"
module asm "\09.long\09__crc_page_cache_prev_miss\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_cache_prev_miss:\09\09\09\09\09"
module asm "\09.asciz \09\22page_cache_prev_miss\22\09\09\09\09\09"
module asm "__kstrtabns_page_cache_prev_miss:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__filemap_get_folio\22, \22a\22\09"
module asm "\09.weak\09__crc___filemap_get_folio\09\09\09\09"
module asm "\09.long\09__crc___filemap_get_folio\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___filemap_get_folio:\09\09\09\09\09"
module asm "\09.asciz \09\22__filemap_get_folio\22\09\09\09\09\09"
module asm "__kstrtabns___filemap_get_folio:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+find_get_pages_contig\22, \22a\22\09"
module asm "\09.weak\09__crc_find_get_pages_contig\09\09\09\09"
module asm "\09.long\09__crc_find_get_pages_contig\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_find_get_pages_contig:\09\09\09\09\09"
module asm "\09.asciz \09\22find_get_pages_contig\22\09\09\09\09\09"
module asm "__kstrtabns_find_get_pages_contig:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+find_get_pages_range_tag\22, \22a\22\09"
module asm "\09.weak\09__crc_find_get_pages_range_tag\09\09\09\09"
module asm "\09.long\09__crc_find_get_pages_range_tag\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_find_get_pages_range_tag:\09\09\09\09\09"
module asm "\09.asciz \09\22find_get_pages_range_tag\22\09\09\09\09\09"
module asm "__kstrtabns_find_get_pages_range_tag:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+filemap_read\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_read\09\09\09\09"
module asm "\09.long\09__crc_filemap_read\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_read:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_read\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_read:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+generic_file_read_iter\22, \22a\22\09"
module asm "\09.weak\09__crc_generic_file_read_iter\09\09\09\09"
module asm "\09.long\09__crc_generic_file_read_iter\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_generic_file_read_iter:\09\09\09\09\09"
module asm "\09.asciz \09\22generic_file_read_iter\22\09\09\09\09\09"
module asm "__kstrtabns_generic_file_read_iter:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_fault\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_fault\09\09\09\09"
module asm "\09.long\09__crc_filemap_fault\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_fault\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_map_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_map_pages\09\09\09\09"
module asm "\09.long\09__crc_filemap_map_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_map_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_map_pages\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_map_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_page_mkwrite\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_page_mkwrite\09\09\09\09"
module asm "\09.long\09__crc_filemap_page_mkwrite\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_page_mkwrite:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_page_mkwrite\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_page_mkwrite:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+generic_file_mmap\22, \22a\22\09"
module asm "\09.weak\09__crc_generic_file_mmap\09\09\09\09"
module asm "\09.long\09__crc_generic_file_mmap\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_generic_file_mmap:\09\09\09\09\09"
module asm "\09.asciz \09\22generic_file_mmap\22\09\09\09\09\09"
module asm "__kstrtabns_generic_file_mmap:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+generic_file_readonly_mmap\22, \22a\22\09"
module asm "\09.weak\09__crc_generic_file_readonly_mmap\09\09\09\09"
module asm "\09.long\09__crc_generic_file_readonly_mmap\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_generic_file_readonly_mmap:\09\09\09\09\09"
module asm "\09.asciz \09\22generic_file_readonly_mmap\22\09\09\09\09\09"
module asm "__kstrtabns_generic_file_readonly_mmap:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+read_cache_folio\22, \22a\22\09"
module asm "\09.weak\09__crc_read_cache_folio\09\09\09\09"
module asm "\09.long\09__crc_read_cache_folio\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_read_cache_folio:\09\09\09\09\09"
module asm "\09.asciz \09\22read_cache_folio\22\09\09\09\09\09"
module asm "__kstrtabns_read_cache_folio:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+read_cache_page\22, \22a\22\09"
module asm "\09.weak\09__crc_read_cache_page\09\09\09\09"
module asm "\09.long\09__crc_read_cache_page\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_read_cache_page:\09\09\09\09\09"
module asm "\09.asciz \09\22read_cache_page\22\09\09\09\09\09"
module asm "__kstrtabns_read_cache_page:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+read_cache_page_gfp\22, \22a\22\09"
module asm "\09.weak\09__crc_read_cache_page_gfp\09\09\09\09"
module asm "\09.long\09__crc_read_cache_page_gfp\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_read_cache_page_gfp:\09\09\09\09\09"
module asm "\09.asciz \09\22read_cache_page_gfp\22\09\09\09\09\09"
module asm "__kstrtabns_read_cache_page_gfp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pagecache_write_begin\22, \22a\22\09"
module asm "\09.weak\09__crc_pagecache_write_begin\09\09\09\09"
module asm "\09.long\09__crc_pagecache_write_begin\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pagecache_write_begin:\09\09\09\09\09"
module asm "\09.asciz \09\22pagecache_write_begin\22\09\09\09\09\09"
module asm "__kstrtabns_pagecache_write_begin:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pagecache_write_end\22, \22a\22\09"
module asm "\09.weak\09__crc_pagecache_write_end\09\09\09\09"
module asm "\09.long\09__crc_pagecache_write_end\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pagecache_write_end:\09\09\09\09\09"
module asm "\09.asciz \09\22pagecache_write_end\22\09\09\09\09\09"
module asm "__kstrtabns_pagecache_write_end:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+generic_file_direct_write\22, \22a\22\09"
module asm "\09.weak\09__crc_generic_file_direct_write\09\09\09\09"
module asm "\09.long\09__crc_generic_file_direct_write\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_generic_file_direct_write:\09\09\09\09\09"
module asm "\09.asciz \09\22generic_file_direct_write\22\09\09\09\09\09"
module asm "__kstrtabns_generic_file_direct_write:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+generic_perform_write\22, \22a\22\09"
module asm "\09.weak\09__crc_generic_perform_write\09\09\09\09"
module asm "\09.long\09__crc_generic_perform_write\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_generic_perform_write:\09\09\09\09\09"
module asm "\09.asciz \09\22generic_perform_write\22\09\09\09\09\09"
module asm "__kstrtabns_generic_perform_write:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__generic_file_write_iter\22, \22a\22\09"
module asm "\09.weak\09__crc___generic_file_write_iter\09\09\09\09"
module asm "\09.long\09__crc___generic_file_write_iter\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___generic_file_write_iter:\09\09\09\09\09"
module asm "\09.asciz \09\22__generic_file_write_iter\22\09\09\09\09\09"
module asm "__kstrtabns___generic_file_write_iter:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+generic_file_write_iter\22, \22a\22\09"
module asm "\09.weak\09__crc_generic_file_write_iter\09\09\09\09"
module asm "\09.long\09__crc_generic_file_write_iter\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_generic_file_write_iter:\09\09\09\09\09"
module asm "\09.asciz \09\22generic_file_write_iter\22\09\09\09\09\09"
module asm "__kstrtabns_generic_file_write_iter:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+filemap_release_folio\22, \22a\22\09"
module asm "\09.weak\09__crc_filemap_release_folio\09\09\09\09"
module asm "\09.long\09__crc_filemap_release_folio\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_filemap_release_folio:\09\09\09\09\09"
module asm "\09.asciz \09\22filemap_release_folio\22\09\09\09\09\09"
module asm "__kstrtabns_filemap_release_folio:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.106 }
%union.anon.106 = type { %struct.anon.107 }
%struct.anon.107 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.108, %struct.trace_event, ptr, ptr, %union.anon.109, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.108 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.109 = type { ptr }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.111 = type { %struct.bpf_raw_event_map }
%union.anon.112 = type { %struct.bpf_raw_event_map }
%union.anon.113 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.lock_class_key = type { %union.anon.3 }
%union.anon.3 = type { %struct.hlist_node }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.vm_operations_struct = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon }
%union.anon = type { i32 }
%struct.address_space_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key_true = type { %struct.static_key }
%struct.static_key_false = type { %struct.static_key }
%struct.pglist_data = type { [4 x %struct.zone], [1 x %struct.zonelist], i32, ptr, ptr, i32, i32, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, [4 x %struct.wait_queue_head], %struct.atomic_t, i32, ptr, i32, i32, i32, i32, i32, %struct.wait_queue_head, ptr, i8, i32, [36 x i8], %struct.zone_padding, %struct.lruvec, i32, [12 x i8], %struct.zone_padding, ptr, [40 x %struct.atomic_t], [92 x i8] }
%struct.zone = type { [3 x i32], i32, i32, [4 x i32], ptr, ptr, ptr, i32, i32, ptr, i32, %struct.atomic_t, i32, i32, i32, ptr, i32, i32, [36 x i8], %struct.zone_padding, [12 x %struct.free_area], i32, %struct.spinlock, [96 x i8], %struct.zone_padding, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i8, i8, [90 x i8], %struct.zone_padding, [11 x %struct.atomic_t], [0 x %struct.atomic_t], [84 x i8] }
%struct.free_area = type { [6 x %struct.list_head], i32 }
%struct.zonelist = type { [5 x %struct.zoneref] }
%struct.zoneref = type { ptr, i32 }
%struct.lruvec = type { [5 x %struct.list_head], %struct.spinlock, i32, i32, %struct.atomic_t, [2 x i32], i32, ptr }
%struct.zone_padding = type { [0 x i8] }
%struct.vm_event_state = type { [76 x i32] }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_mm_filemap_op_page_cache = type { %struct.trace_entry, i32, i32, i32, i32, i8, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.anon = type { i32, %struct.list_head, ptr, i32, ptr, %struct.atomic_t, %struct.atomic_t, i32 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.82, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.83, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.84, ptr, %struct.address_space, %struct.list_head, %union.anon.85, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.82 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%union.anon.83 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.atomic64_t = type { i64 }
%union.anon.84 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%union.anon.85 = type { ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.page = type { i32, %union.anon.5, %union.anon.81, %struct.atomic_t, i32 }
%union.anon.5 = type { %struct.anon.6 }
%struct.anon.6 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.81 = type { %struct.atomic_t }
%struct.anon.9 = type { i32, i8, i8, %struct.atomic_t, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_filemap_set_wb_err = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_file_check_and_advance_wb_err = type { %struct.trace_entry, ptr, i32, i32, i32, i32, [0 x i8] }
%struct.file = type { %union.anon.18, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.18 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.xa_state = type { ptr, i32, i8, i8, i8, i8, ptr, ptr, ptr }
%struct.bdi_writeback = type { ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.atomic_t, [4 x %struct.percpu_counter], i32, i32, i32, i32, i32, i32, i32, i32, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, %struct.delayed_work, i32, %struct.list_head, %struct.percpu_ref, %struct.fprop_local_percpu, ptr, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.68 }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.percpu_ref = type { i32, ptr }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%union.anon.68 = type { %struct.work_struct }
%struct.folio_batch = type { i8, i8, [15 x ptr] }
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i32, i32, %struct.kref, i32, i32, i32, i32, %struct.atomic_t, %struct.bdi_writeback, %struct.list_head, %struct.xarray, %struct.mutex, %struct.rw_semaphore, %struct.wait_queue_head, ptr, [64 x i8], ptr, %struct.timer_list, ptr }
%struct.rb_node = type { i32, ptr, ptr }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.writeback_control = type { i32, i32, i64, i64, i32, i16, ptr, ptr, i32, i32, i32, i32, i32, i32 }
%struct.pagevec = type { i8, i8, [15 x ptr] }
%struct.xa_node = type { i8, i8, i8, i8, ptr, ptr, %union.anon.114, [64 x ptr], %union.anon.115 }
%union.anon.114 = type { %struct.list_head }
%union.anon.115 = type { [3 x [2 x i32]] }
%struct.anon.4 = type { [16 x i8], %struct.lockdep_map }
%struct.wait_page_queue = type { ptr, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.64, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.40 }
%struct.llist_node = type { ptr }
%union.anon.40 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.42 }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.tlbflush_unmap_batch = type {}
%union.anon.64 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.wait_page_key = type { ptr, i32, i32 }
%struct.anon.13 = type { ptr, %struct.rb_root, i64, ptr, i32, i32, i32, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i32, i32, i32, i32, %struct.atomic64_t, i32, i32, i32, i32, %struct.seqcount, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [42 x i32], %struct.mm_rss_stat, ptr, %struct.mm_context_t, i32, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.mm_rss_stat = type { [4 x %struct.atomic_t] }
%struct.mm_context_t = type { %struct.atomic64_t, i32, i32, i32, i32, i32 }
%struct.uprobes_state = type { ptr }
%struct.kiocb = type { ptr, i64, ptr, ptr, i32, i16, i16, ptr }
%struct.iov_iter = type { i8, i8, i8, i32, i32, %union.anon.74, %union.anon.75 }
%union.anon.74 = type { ptr }
%union.anon.75 = type { i64 }
%struct.readahead_control = type { ptr, ptr, ptr, i32, i32, i32 }
%struct.vm_area_struct = type { i32, i32, ptr, ptr, %struct.rb_node, i32, ptr, i32, i32, %union.anon.14, %struct.list_head, ptr, ptr, i32, ptr, ptr, %struct.atomic_t, %struct.vm_userfaultfd_ctx }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { %struct.rb_node, i32 }
%struct.vm_userfaultfd_ctx = type { ptr }
%struct.anon.16 = type { ptr, i32, i32, i32 }
%struct.vm_fault = type { %struct.anon.16, i32, ptr, ptr, %union.anon.17, ptr, ptr, ptr, ptr, ptr }
%union.anon.17 = type { i32 }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_mm_filemap_delete_from_page_cache = internal constant [34 x i8] c"mm_filemap_delete_from_page_cache\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_filemap_delete_from_page_cache = dso_local global %struct.static_call_key { ptr @__traceiter_mm_filemap_delete_from_page_cache }, align 4
@__tracepoint_mm_filemap_delete_from_page_cache = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_filemap_delete_from_page_cache, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_filemap_delete_from_page_cache, ptr null, ptr @__traceiter_mm_filemap_delete_from_page_cache, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_filemap_delete_from_page_cache = internal constant ptr @__tracepoint_mm_filemap_delete_from_page_cache, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_filemap_add_to_page_cache = internal constant [29 x i8] c"mm_filemap_add_to_page_cache\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_filemap_add_to_page_cache = dso_local global %struct.static_call_key { ptr @__traceiter_mm_filemap_add_to_page_cache }, align 4
@__tracepoint_mm_filemap_add_to_page_cache = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_filemap_add_to_page_cache, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_filemap_add_to_page_cache, ptr null, ptr @__traceiter_mm_filemap_add_to_page_cache, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_filemap_add_to_page_cache = internal constant ptr @__tracepoint_mm_filemap_add_to_page_cache, section "__tracepoints_ptrs", align 4
@__tpstrtab_filemap_set_wb_err = internal constant [19 x i8] c"filemap_set_wb_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_filemap_set_wb_err = dso_local global %struct.static_call_key { ptr @__traceiter_filemap_set_wb_err }, align 4
@__tracepoint_filemap_set_wb_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_filemap_set_wb_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_filemap_set_wb_err, ptr null, ptr @__traceiter_filemap_set_wb_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_filemap_set_wb_err = internal constant ptr @__tracepoint_filemap_set_wb_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_file_check_and_advance_wb_err = internal constant [30 x i8] c"file_check_and_advance_wb_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_file_check_and_advance_wb_err = dso_local global %struct.static_call_key { ptr @__traceiter_file_check_and_advance_wb_err }, align 4
@__tracepoint_file_check_and_advance_wb_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_file_check_and_advance_wb_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_file_check_and_advance_wb_err, ptr null, ptr @__traceiter_file_check_and_advance_wb_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_file_check_and_advance_wb_err = internal constant ptr @__tracepoint_file_check_and_advance_wb_err, section "__tracepoints_ptrs", align 4
@str__filemap__trace_system_name = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"filemap\00", [24 x i8] zeroinitializer }, align 32
@trace_event_fields_mm_filemap_op_page_cache = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.17, %union.anon.106 { %struct.anon.107 { ptr @.str.18, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.17, %union.anon.106 { %struct.anon.107 { ptr @.str.19, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.17, %union.anon.106 { %struct.anon.107 { ptr @.str.20, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.21, %union.anon.106 { %struct.anon.107 { ptr @.str.22, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.23, %union.anon.106 { %struct.anon.107 { ptr @.str.24, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_mm_filemap_op_page_cache = internal global %struct.trace_event_class { ptr @str__filemap__trace_system_name, ptr @trace_event_raw_event_mm_filemap_op_page_cache, ptr @perf_trace_mm_filemap_op_page_cache, ptr @trace_event_reg, ptr @trace_event_fields_mm_filemap_op_page_cache, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_filemap_op_page_cache, i64 24), ptr getelementptr (i8, ptr @event_class_mm_filemap_op_page_cache, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_filemap_op_page_cache = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_filemap_op_page_cache, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_filemap_op_page_cache = internal global { [190 x i8], [34 x i8] } { [190 x i8] c"\22dev %d:%d ino %lx pfn=0x%lx ofs=%lu order=%u\22, ((unsigned int) ((REC->s_dev) >> 20)), ((unsigned int) ((REC->s_dev) & ((1U << 20) - 1))), REC->i_ino, REC->pfn, REC->index << 12, REC->order\00", [34 x i8] zeroinitializer }, align 32
@event_mm_filemap_delete_from_page_cache = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_filemap_op_page_cache, %union.anon.108 { ptr @__tracepoint_mm_filemap_delete_from_page_cache }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_filemap_op_page_cache }, ptr @print_fmt_mm_filemap_op_page_cache, ptr null, %union.anon.109 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_filemap_delete_from_page_cache = internal global ptr @event_mm_filemap_delete_from_page_cache, section "_ftrace_events", align 4
@event_mm_filemap_add_to_page_cache = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_filemap_op_page_cache, %union.anon.108 { ptr @__tracepoint_mm_filemap_add_to_page_cache }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_filemap_op_page_cache }, ptr @print_fmt_mm_filemap_op_page_cache, ptr null, %union.anon.109 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_filemap_add_to_page_cache = internal global ptr @event_mm_filemap_add_to_page_cache, section "_ftrace_events", align 4
@trace_event_fields_filemap_set_wb_err = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.17, %union.anon.106 { %struct.anon.107 { ptr @.str.19, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.21, %union.anon.106 { %struct.anon.107 { ptr @.str.22, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.26, %union.anon.106 { %struct.anon.107 { ptr @.str.27, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_filemap_set_wb_err = internal global %struct.trace_event_class { ptr @str__filemap__trace_system_name, ptr @trace_event_raw_event_filemap_set_wb_err, ptr @perf_trace_filemap_set_wb_err, ptr @trace_event_reg, ptr @trace_event_fields_filemap_set_wb_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_filemap_set_wb_err, i64 24), ptr getelementptr (i8, ptr @event_class_filemap_set_wb_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_filemap_set_wb_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_filemap_set_wb_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_filemap_set_wb_err = internal global { [150 x i8], [42 x i8] } { [150 x i8] c"\22dev=%d:%d ino=0x%lx errseq=0x%x\22, ((unsigned int) ((REC->s_dev) >> 20)), ((unsigned int) ((REC->s_dev) & ((1U << 20) - 1))), REC->i_ino, REC->errseq\00", [42 x i8] zeroinitializer }, align 32
@event_filemap_set_wb_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_filemap_set_wb_err, %union.anon.108 { ptr @__tracepoint_filemap_set_wb_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_filemap_set_wb_err }, ptr @print_fmt_filemap_set_wb_err, ptr null, %union.anon.109 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_filemap_set_wb_err = internal global ptr @event_filemap_set_wb_err, section "_ftrace_events", align 4
@trace_event_fields_file_check_and_advance_wb_err = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.106 { %struct.anon.107 { ptr @.str.30, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.17, %union.anon.106 { %struct.anon.107 { ptr @.str.19, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.21, %union.anon.106 { %struct.anon.107 { ptr @.str.22, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.26, %union.anon.106 { %struct.anon.107 { ptr @.str.31, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.26, %union.anon.106 { %struct.anon.107 { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_file_check_and_advance_wb_err = internal global %struct.trace_event_class { ptr @str__filemap__trace_system_name, ptr @trace_event_raw_event_file_check_and_advance_wb_err, ptr @perf_trace_file_check_and_advance_wb_err, ptr @trace_event_reg, ptr @trace_event_fields_file_check_and_advance_wb_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_file_check_and_advance_wb_err, i64 24), ptr getelementptr (i8, ptr @event_class_file_check_and_advance_wb_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_file_check_and_advance_wb_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_file_check_and_advance_wb_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_file_check_and_advance_wb_err = internal global { [182 x i8], [42 x i8] } { [182 x i8] c"\22file=%p dev=%d:%d ino=0x%lx old=0x%x new=0x%x\22, REC->file, ((unsigned int) ((REC->s_dev) >> 20)), ((unsigned int) ((REC->s_dev) & ((1U << 20) - 1))), REC->i_ino, REC->old, REC->new\00", [42 x i8] zeroinitializer }, align 32
@event_file_check_and_advance_wb_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_file_check_and_advance_wb_err, %union.anon.108 { ptr @__tracepoint_file_check_and_advance_wb_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_file_check_and_advance_wb_err }, ptr @print_fmt_file_check_and_advance_wb_err, ptr null, %union.anon.109 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_file_check_and_advance_wb_err = internal global ptr @event_file_check_and_advance_wb_err, section "_ftrace_events", align 4
@__bpf_trace_tp_map_mm_filemap_delete_from_page_cache = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_filemap_delete_from_page_cache, ptr @__bpf_trace_mm_filemap_op_page_cache, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_filemap_add_to_page_cache = internal global %union.anon.111 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_filemap_add_to_page_cache, ptr @__bpf_trace_mm_filemap_op_page_cache, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_filemap_set_wb_err = internal global %union.anon.112 { %struct.bpf_raw_event_map { ptr @__tracepoint_filemap_set_wb_err, ptr @__bpf_trace_filemap_set_wb_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_file_check_and_advance_wb_err = internal global %union.anon.113 { %struct.bpf_raw_event_map { ptr @__tracepoint_file_check_and_advance_wb_err, ptr @__bpf_trace_file_check_and_advance_wb_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__kstrtab_filemap_check_errors = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_check_errors = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_check_errors = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_check_errors to i32), ptr @__kstrtab_filemap_check_errors, ptr @__kstrtabns_filemap_check_errors }, section "___ksymtab+filemap_check_errors", align 4
@__kstrtab_filemap_fdatawrite_wbc = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_fdatawrite_wbc = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_fdatawrite_wbc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_fdatawrite_wbc to i32), ptr @__kstrtab_filemap_fdatawrite_wbc, ptr @__kstrtabns_filemap_fdatawrite_wbc }, section "___ksymtab+filemap_fdatawrite_wbc", align 4
@__kstrtab_filemap_fdatawrite = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_fdatawrite = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_fdatawrite = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_fdatawrite to i32), ptr @__kstrtab_filemap_fdatawrite, ptr @__kstrtabns_filemap_fdatawrite }, section "___ksymtab+filemap_fdatawrite", align 4
@__kstrtab_filemap_fdatawrite_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_fdatawrite_range = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_fdatawrite_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_fdatawrite_range to i32), ptr @__kstrtab_filemap_fdatawrite_range, ptr @__kstrtabns_filemap_fdatawrite_range }, section "___ksymtab+filemap_fdatawrite_range", align 4
@__kstrtab_filemap_flush = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_flush = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_flush = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_flush to i32), ptr @__kstrtab_filemap_flush, ptr @__kstrtabns_filemap_flush }, section "___ksymtab+filemap_flush", align 4
@__kstrtab_filemap_range_has_page = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_range_has_page = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_range_has_page = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_range_has_page to i32), ptr @__kstrtab_filemap_range_has_page, ptr @__kstrtabns_filemap_range_has_page }, section "___ksymtab+filemap_range_has_page", align 4
@__kstrtab_filemap_fdatawait_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_fdatawait_range = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_fdatawait_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_fdatawait_range to i32), ptr @__kstrtab_filemap_fdatawait_range, ptr @__kstrtabns_filemap_fdatawait_range }, section "___ksymtab+filemap_fdatawait_range", align 4
@__kstrtab_filemap_fdatawait_range_keep_errors = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_fdatawait_range_keep_errors = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_fdatawait_range_keep_errors = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_fdatawait_range_keep_errors to i32), ptr @__kstrtab_filemap_fdatawait_range_keep_errors, ptr @__kstrtabns_filemap_fdatawait_range_keep_errors }, section "___ksymtab+filemap_fdatawait_range_keep_errors", align 4
@__kstrtab_file_fdatawait_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_file_fdatawait_range = external dso_local constant [0 x i8], align 1
@__ksymtab_file_fdatawait_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @file_fdatawait_range to i32), ptr @__kstrtab_file_fdatawait_range, ptr @__kstrtabns_file_fdatawait_range }, section "___ksymtab+file_fdatawait_range", align 4
@__kstrtab_filemap_fdatawait_keep_errors = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_fdatawait_keep_errors = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_fdatawait_keep_errors = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_fdatawait_keep_errors to i32), ptr @__kstrtab_filemap_fdatawait_keep_errors, ptr @__kstrtabns_filemap_fdatawait_keep_errors }, section "___ksymtab+filemap_fdatawait_keep_errors", align 4
@__kstrtab_filemap_range_has_writeback = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_range_has_writeback = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_range_has_writeback = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_range_has_writeback to i32), ptr @__kstrtab_filemap_range_has_writeback, ptr @__kstrtabns_filemap_range_has_writeback }, section "___ksymtab_gpl+filemap_range_has_writeback", align 4
@__kstrtab_filemap_write_and_wait_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_write_and_wait_range = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_write_and_wait_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_write_and_wait_range to i32), ptr @__kstrtab_filemap_write_and_wait_range, ptr @__kstrtabns_filemap_write_and_wait_range }, section "___ksymtab+filemap_write_and_wait_range", align 4
@__kstrtab___filemap_set_wb_err = external dso_local constant [0 x i8], align 1
@__kstrtabns___filemap_set_wb_err = external dso_local constant [0 x i8], align 1
@__ksymtab___filemap_set_wb_err = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__filemap_set_wb_err to i32), ptr @__kstrtab___filemap_set_wb_err, ptr @__kstrtabns___filemap_set_wb_err }, section "___ksymtab+__filemap_set_wb_err", align 4
@__kstrtab_file_check_and_advance_wb_err = external dso_local constant [0 x i8], align 1
@__kstrtabns_file_check_and_advance_wb_err = external dso_local constant [0 x i8], align 1
@__ksymtab_file_check_and_advance_wb_err = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @file_check_and_advance_wb_err to i32), ptr @__kstrtab_file_check_and_advance_wb_err, ptr @__kstrtabns_file_check_and_advance_wb_err }, section "___ksymtab+file_check_and_advance_wb_err", align 4
@__kstrtab_file_write_and_wait_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_file_write_and_wait_range = external dso_local constant [0 x i8], align 1
@__ksymtab_file_write_and_wait_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @file_write_and_wait_range to i32), ptr @__kstrtab_file_write_and_wait_range, ptr @__kstrtabns_file_write_and_wait_range }, section "___ksymtab+file_write_and_wait_range", align 4
@.str = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"VM_BUG_ON_PAGE(!PageLocked(old))\00", [63 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"VM_BUG_ON_PAGE(!PageLocked(new))\00", [63 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"VM_BUG_ON_PAGE(new->mapping)\00", [35 x i8] zeroinitializer }, align 32
@__kstrtab_replace_page_cache_page = external dso_local constant [0 x i8], align 1
@__kstrtabns_replace_page_cache_page = external dso_local constant [0 x i8], align 1
@__ksymtab_replace_page_cache_page = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @replace_page_cache_page to i32), ptr @__kstrtab_replace_page_cache_page, ptr @__kstrtabns_replace_page_cache_page }, section "___ksymtab_gpl+replace_page_cache_page", align 4
@.str.3 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"VM_BUG_ON_FOLIO(!folio_test_locked(folio))\00", [53 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"VM_BUG_ON_FOLIO(folio_test_swapbacked(folio))\00", [50 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"VM_BUG_ON_FOLIO(index & (folio_nr_pages(folio) - 1))\00", [43 x i8] zeroinitializer }, align 32
@__kstrtab_add_to_page_cache_locked = external dso_local constant [0 x i8], align 1
@__kstrtabns_add_to_page_cache_locked = external dso_local constant [0 x i8], align 1
@__ksymtab_add_to_page_cache_locked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @add_to_page_cache_locked to i32), ptr @__kstrtab_add_to_page_cache_locked, ptr @__kstrtabns_add_to_page_cache_locked }, section "___ksymtab+add_to_page_cache_locked", align 4
@filemap_add_folio.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.6 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mm/filemap.c\00", [19 x i8] zeroinitializer }, align 32
@__kstrtab_filemap_add_folio = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_add_folio = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_add_folio = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_add_folio to i32), ptr @__kstrtab_filemap_add_folio, ptr @__kstrtabns_filemap_add_folio }, section "___ksymtab_gpl+filemap_add_folio", align 4
@__kstrtab_filemap_invalidate_lock_two = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_invalidate_lock_two = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_invalidate_lock_two = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_invalidate_lock_two to i32), ptr @__kstrtab_filemap_invalidate_lock_two, ptr @__kstrtabns_filemap_invalidate_lock_two }, section "___ksymtab+filemap_invalidate_lock_two", align 4
@__kstrtab_filemap_invalidate_unlock_two = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_invalidate_unlock_two = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_invalidate_unlock_two = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_invalidate_unlock_two to i32), ptr @__kstrtab_filemap_invalidate_unlock_two, ptr @__kstrtabns_filemap_invalidate_unlock_two }, section "___ksymtab+filemap_invalidate_unlock_two", align 4
@pagecache_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@folio_wait_table = internal global [256 x %struct.wait_queue_head] zeroinitializer, section ".data..cacheline_aligned", align 128
@.str.7 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&folio_wait_table[i]\00", [43 x i8] zeroinitializer }, align 32
@sysctl_page_lock_unfairness = dso_local global { i32, [28 x i8] } { i32 5, [28 x i8] zeroinitializer }, align 32
@__kstrtab_folio_wait_bit = external dso_local constant [0 x i8], align 1
@__kstrtabns_folio_wait_bit = external dso_local constant [0 x i8], align 1
@__ksymtab_folio_wait_bit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @folio_wait_bit to i32), ptr @__kstrtab_folio_wait_bit, ptr @__kstrtabns_folio_wait_bit }, section "___ksymtab+folio_wait_bit", align 4
@__kstrtab_folio_wait_bit_killable = external dso_local constant [0 x i8], align 1
@__kstrtabns_folio_wait_bit_killable = external dso_local constant [0 x i8], align 1
@__ksymtab_folio_wait_bit_killable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @folio_wait_bit_killable to i32), ptr @__kstrtab_folio_wait_bit_killable, ptr @__kstrtabns_folio_wait_bit_killable }, section "___ksymtab+folio_wait_bit_killable", align 4
@__kstrtab_folio_add_wait_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_folio_add_wait_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_folio_add_wait_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @folio_add_wait_queue to i32), ptr @__kstrtab_folio_add_wait_queue, ptr @__kstrtabns_folio_add_wait_queue }, section "___ksymtab_gpl+folio_add_wait_queue", align 4
@__kstrtab_folio_unlock = external dso_local constant [0 x i8], align 1
@__kstrtabns_folio_unlock = external dso_local constant [0 x i8], align 1
@__ksymtab_folio_unlock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @folio_unlock to i32), ptr @__kstrtab_folio_unlock, ptr @__kstrtabns_folio_unlock }, section "___ksymtab+folio_unlock", align 4
@.str.8 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"VM_BUG_ON_FOLIO(!folio_test_private_2(folio))\00", [50 x i8] zeroinitializer }, align 32
@__kstrtab_folio_end_private_2 = external dso_local constant [0 x i8], align 1
@__kstrtabns_folio_end_private_2 = external dso_local constant [0 x i8], align 1
@__ksymtab_folio_end_private_2 = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @folio_end_private_2 to i32), ptr @__kstrtab_folio_end_private_2, ptr @__kstrtabns_folio_end_private_2 }, section "___ksymtab+folio_end_private_2", align 4
@__kstrtab_folio_wait_private_2 = external dso_local constant [0 x i8], align 1
@__kstrtabns_folio_wait_private_2 = external dso_local constant [0 x i8], align 1
@__ksymtab_folio_wait_private_2 = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @folio_wait_private_2 to i32), ptr @__kstrtab_folio_wait_private_2, ptr @__kstrtabns_folio_wait_private_2 }, section "___ksymtab+folio_wait_private_2", align 4
@__kstrtab_folio_wait_private_2_killable = external dso_local constant [0 x i8], align 1
@__kstrtabns_folio_wait_private_2_killable = external dso_local constant [0 x i8], align 1
@__ksymtab_folio_wait_private_2_killable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @folio_wait_private_2_killable to i32), ptr @__kstrtab_folio_wait_private_2_killable, ptr @__kstrtabns_folio_wait_private_2_killable }, section "___ksymtab+folio_wait_private_2_killable", align 4
@__kstrtab_folio_end_writeback = external dso_local constant [0 x i8], align 1
@__kstrtabns_folio_end_writeback = external dso_local constant [0 x i8], align 1
@__ksymtab_folio_end_writeback = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @folio_end_writeback to i32), ptr @__kstrtab_folio_end_writeback, ptr @__kstrtabns_folio_end_writeback }, section "___ksymtab+folio_end_writeback", align 4
@__kstrtab_page_endio = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_endio = external dso_local constant [0 x i8], align 1
@__ksymtab_page_endio = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_endio to i32), ptr @__kstrtab_page_endio, ptr @__kstrtabns_page_endio }, section "___ksymtab_gpl+page_endio", align 4
@__kstrtab___folio_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns___folio_lock = external dso_local constant [0 x i8], align 1
@__ksymtab___folio_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__folio_lock to i32), ptr @__kstrtab___folio_lock, ptr @__kstrtabns___folio_lock }, section "___ksymtab+__folio_lock", align 4
@__kstrtab___folio_lock_killable = external dso_local constant [0 x i8], align 1
@__kstrtabns___folio_lock_killable = external dso_local constant [0 x i8], align 1
@__ksymtab___folio_lock_killable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__folio_lock_killable to i32), ptr @__kstrtab___folio_lock_killable, ptr @__kstrtabns___folio_lock_killable }, section "___ksymtab_gpl+__folio_lock_killable", align 4
@__kstrtab_page_cache_next_miss = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_cache_next_miss = external dso_local constant [0 x i8], align 1
@__ksymtab_page_cache_next_miss = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_cache_next_miss to i32), ptr @__kstrtab_page_cache_next_miss, ptr @__kstrtabns_page_cache_next_miss }, section "___ksymtab+page_cache_next_miss", align 4
@__kstrtab_page_cache_prev_miss = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_cache_prev_miss = external dso_local constant [0 x i8], align 1
@__ksymtab_page_cache_prev_miss = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_cache_prev_miss to i32), ptr @__kstrtab_page_cache_prev_miss, ptr @__kstrtabns_page_cache_prev_miss }, section "___ksymtab+page_cache_prev_miss", align 4
@.str.9 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"VM_BUG_ON_FOLIO(!folio_contains(folio, index))\00", [49 x i8] zeroinitializer }, align 32
@__filemap_get_folio.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab___filemap_get_folio = external dso_local constant [0 x i8], align 1
@__kstrtabns___filemap_get_folio = external dso_local constant [0 x i8], align 1
@__ksymtab___filemap_get_folio = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__filemap_get_folio to i32), ptr @__kstrtab___filemap_get_folio, ptr @__kstrtabns___filemap_get_folio }, section "___ksymtab+__filemap_get_folio", align 4
@.str.10 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"VM_BUG_ON_FOLIO(!folio_contains(folio, xas.xa_index))\00", [42 x i8] zeroinitializer }, align 32
@__kstrtab_find_get_pages_contig = external dso_local constant [0 x i8], align 1
@__kstrtabns_find_get_pages_contig = external dso_local constant [0 x i8], align 1
@__ksymtab_find_get_pages_contig = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @find_get_pages_contig to i32), ptr @__kstrtab_find_get_pages_contig, ptr @__kstrtabns_find_get_pages_contig }, section "___ksymtab+find_get_pages_contig", align 4
@__kstrtab_find_get_pages_range_tag = external dso_local constant [0 x i8], align 1
@__kstrtabns_find_get_pages_range_tag = external dso_local constant [0 x i8], align 1
@__ksymtab_find_get_pages_range_tag = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @find_get_pages_range_tag to i32), ptr @__kstrtab_find_get_pages_range_tag, ptr @__kstrtabns_find_get_pages_range_tag }, section "___ksymtab+find_get_pages_range_tag", align 4
@__kstrtab_filemap_read = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_read = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_read = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_read to i32), ptr @__kstrtab_filemap_read, ptr @__kstrtabns_filemap_read }, section "___ksymtab_gpl+filemap_read", align 4
@__kstrtab_generic_file_read_iter = external dso_local constant [0 x i8], align 1
@__kstrtabns_generic_file_read_iter = external dso_local constant [0 x i8], align 1
@__ksymtab_generic_file_read_iter = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @generic_file_read_iter to i32), ptr @__kstrtab_generic_file_read_iter, ptr @__kstrtabns_generic_file_read_iter }, section "___ksymtab+generic_file_read_iter", align 4
@__kstrtab_filemap_fault = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_fault = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_fault = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_fault to i32), ptr @__kstrtab_filemap_fault, ptr @__kstrtabns_filemap_fault }, section "___ksymtab+filemap_fault", align 4
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@__kstrtab_filemap_map_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_map_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_map_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_map_pages to i32), ptr @__kstrtab_filemap_map_pages, ptr @__kstrtabns_filemap_map_pages }, section "___ksymtab+filemap_map_pages", align 4
@generic_file_vm_ops = dso_local constant { %struct.vm_operations_struct, [40 x i8] } { %struct.vm_operations_struct { ptr null, ptr null, ptr null, ptr null, ptr null, ptr @filemap_fault, ptr null, ptr @filemap_map_pages, ptr null, ptr @filemap_page_mkwrite, ptr null, ptr null, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@__kstrtab_filemap_page_mkwrite = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_page_mkwrite = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_page_mkwrite = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_page_mkwrite to i32), ptr @__kstrtab_filemap_page_mkwrite, ptr @__kstrtabns_filemap_page_mkwrite }, section "___ksymtab+filemap_page_mkwrite", align 4
@__kstrtab_generic_file_mmap = external dso_local constant [0 x i8], align 1
@__kstrtabns_generic_file_mmap = external dso_local constant [0 x i8], align 1
@__ksymtab_generic_file_mmap = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @generic_file_mmap to i32), ptr @__kstrtab_generic_file_mmap, ptr @__kstrtabns_generic_file_mmap }, section "___ksymtab+generic_file_mmap", align 4
@__kstrtab_generic_file_readonly_mmap = external dso_local constant [0 x i8], align 1
@__kstrtabns_generic_file_readonly_mmap = external dso_local constant [0 x i8], align 1
@__ksymtab_generic_file_readonly_mmap = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @generic_file_readonly_mmap to i32), ptr @__kstrtab_generic_file_readonly_mmap, ptr @__kstrtabns_generic_file_readonly_mmap }, section "___ksymtab+generic_file_readonly_mmap", align 4
@__kstrtab_read_cache_folio = external dso_local constant [0 x i8], align 1
@__kstrtabns_read_cache_folio = external dso_local constant [0 x i8], align 1
@__ksymtab_read_cache_folio = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @read_cache_folio to i32), ptr @__kstrtab_read_cache_folio, ptr @__kstrtabns_read_cache_folio }, section "___ksymtab+read_cache_folio", align 4
@__kstrtab_read_cache_page = external dso_local constant [0 x i8], align 1
@__kstrtabns_read_cache_page = external dso_local constant [0 x i8], align 1
@__ksymtab_read_cache_page = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @read_cache_page to i32), ptr @__kstrtab_read_cache_page, ptr @__kstrtabns_read_cache_page }, section "___ksymtab+read_cache_page", align 4
@__kstrtab_read_cache_page_gfp = external dso_local constant [0 x i8], align 1
@__kstrtabns_read_cache_page_gfp = external dso_local constant [0 x i8], align 1
@__ksymtab_read_cache_page_gfp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @read_cache_page_gfp to i32), ptr @__kstrtab_read_cache_page_gfp, ptr @__kstrtabns_read_cache_page_gfp }, section "___ksymtab+read_cache_page_gfp", align 4
@__kstrtab_pagecache_write_begin = external dso_local constant [0 x i8], align 1
@__kstrtabns_pagecache_write_begin = external dso_local constant [0 x i8], align 1
@__ksymtab_pagecache_write_begin = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pagecache_write_begin to i32), ptr @__kstrtab_pagecache_write_begin, ptr @__kstrtabns_pagecache_write_begin }, section "___ksymtab+pagecache_write_begin", align 4
@__kstrtab_pagecache_write_end = external dso_local constant [0 x i8], align 1
@__kstrtabns_pagecache_write_end = external dso_local constant [0 x i8], align 1
@__ksymtab_pagecache_write_end = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pagecache_write_end to i32), ptr @__kstrtab_pagecache_write_end, ptr @__kstrtabns_pagecache_write_end }, section "___ksymtab+pagecache_write_end", align 4
@dio_warn_stale_pagecache._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.11, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 8640000, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.dio_warn_stale_pagecache = private unnamed_addr constant [25 x i8] c"dio_warn_stale_pagecache\00", align 1
@.str.12 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"(unknown)\00", [22 x i8] zeroinitializer }, align 32
@dio_warn_stale_pagecache._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @__func__.dio_warn_stale_pagecache, ptr @.str.6, i32 3639, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [112 x i8], [48 x i8] } { [112 x i8] c"\012Page cache invalidation failure on direct I/O.  Possible data corruption due to collision with buffered I/O!\0A\00", [48 x i8] zeroinitializer }, align 32
@dio_warn_stale_pagecache._entry_ptr = internal global ptr @dio_warn_stale_pagecache._entry, section ".printk_index", align 4
@dio_warn_stale_pagecache._entry.14 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @__func__.dio_warn_stale_pagecache, ptr @.str.6, i32 3641, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\012File: %s PID: %d Comm: %.20s\0A\00", [32 x i8] zeroinitializer }, align 32
@dio_warn_stale_pagecache._entry_ptr.16 = internal global ptr @dio_warn_stale_pagecache._entry.14, section ".printk_index", align 4
@__kstrtab_generic_file_direct_write = external dso_local constant [0 x i8], align 1
@__kstrtabns_generic_file_direct_write = external dso_local constant [0 x i8], align 1
@__ksymtab_generic_file_direct_write = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @generic_file_direct_write to i32), ptr @__kstrtab_generic_file_direct_write, ptr @__kstrtabns_generic_file_direct_write }, section "___ksymtab+generic_file_direct_write", align 4
@__kstrtab_generic_perform_write = external dso_local constant [0 x i8], align 1
@__kstrtabns_generic_perform_write = external dso_local constant [0 x i8], align 1
@__ksymtab_generic_perform_write = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @generic_perform_write to i32), ptr @__kstrtab_generic_perform_write, ptr @__kstrtabns_generic_perform_write }, section "___ksymtab+generic_perform_write", align 4
@__kstrtab___generic_file_write_iter = external dso_local constant [0 x i8], align 1
@__kstrtabns___generic_file_write_iter = external dso_local constant [0 x i8], align 1
@__ksymtab___generic_file_write_iter = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__generic_file_write_iter to i32), ptr @__kstrtab___generic_file_write_iter, ptr @__kstrtabns___generic_file_write_iter }, section "___ksymtab+__generic_file_write_iter", align 4
@__kstrtab_generic_file_write_iter = external dso_local constant [0 x i8], align 1
@__kstrtabns_generic_file_write_iter = external dso_local constant [0 x i8], align 1
@__ksymtab_generic_file_write_iter = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @generic_file_write_iter to i32), ptr @__kstrtab_generic_file_write_iter, ptr @__kstrtabns_generic_file_write_iter }, section "___ksymtab+generic_file_write_iter", align 4
@__kstrtab_filemap_release_folio = external dso_local constant [0 x i8], align 1
@__kstrtabns_filemap_release_folio = external dso_local constant [0 x i8], align 1
@__ksymtab_filemap_release_folio = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @filemap_release_folio to i32), ptr @__kstrtab_filemap_release_folio, ptr @__kstrtabns_filemap_release_folio }, section "___ksymtab+filemap_release_folio", align 4
@.str.17 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pfn\00", [28 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"i_ino\00", [26 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"index\00", [26 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dev_t\00", [26 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"s_dev\00", [26 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned char\00", [18 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"order\00", [26 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"dev %d:%d ino %lx pfn=0x%lx ofs=%lu order=%u\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"errseq_t\00", [23 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"errseq\00", [25 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"dev=%d:%d ino=0x%lx errseq=0x%x\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"struct file *\00", [18 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"file\00", [27 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"old\00", [28 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"new\00", [28 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"file=%p dev=%d:%d ino=0x%lx old=0x%x new=0x%x\0A\00", [49 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str.34 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"include/trace/events/filemap.h\00", [33 x i8] zeroinitializer }, align 32
@trace_mm_filemap_delete_from_page_cache.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.35 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.36 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"VM_BUG_ON_FOLIO(folio_mapped(folio))\00", [59 x i8] zeroinitializer }, align 32
@filemap_unaccount_folio.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.38 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/pagemap.h\00", [40 x i8] zeroinitializer }, align 32
@inode_to_wb.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.39 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/backing-dev.h\00", [36 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(page))\00", [61 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@.str.41 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"VM_BUG_ON_FOLIO(folio->index > fbatch->folios[i]->index)\00", [39 x i8] zeroinitializer }, align 32
@page_cache_delete_batch.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.42 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.44 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"VM_BUG_ON_PAGE(1 && PageTail(page))\00", [60 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(((typeof(page))_compound_head(page))))\00", [61 x i8] zeroinitializer }, align 32
@xa_entry.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.47 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/xarray.h\00", [41 x i8] zeroinitializer }, align 32
@trace_filemap_set_wb_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_file_check_and_advance_wb_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@shmem_aops = external dso_local constant %struct.address_space_operations, align 4
@.str.48 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"VM_BUG_ON_FOLIO(((unsigned int) folio_ref_count(folio) + 127u <= 127u))\00", [56 x i8] zeroinitializer }, align 32
@memory_cgrp_subsys_enabled_key = external dso_local global %struct.static_key_true, align 4
@trace_mm_filemap_add_to_page_cache.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.49 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@delayacct_key = external dso_local global %struct.static_key_false, align 4
@folio_wait_bit_common.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.50 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@contig_page_data = external dso_local global %struct.pglist_data, align 128
@.str.52 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(p))\00", [32 x i8] zeroinitializer }, align 32
@__tracepoint_mmap_lock_released = external dso_local global %struct.tracepoint, align 4
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@__tracepoint_page_ref_mod_unless = external dso_local global %struct.tracepoint, align 4
@xa_head.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@vm_event_states = external dso_local global %struct.vm_event_state, section ".data..percpu", align 4
@count_memcg_event_mm.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.54 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/linux/memcontrol.h\00", [37 x i8] zeroinitializer }, align 32
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@.str.55 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/linux/percpu-rwsem.h\00", [35 x i8] zeroinitializer }, align 32
@rcu_sync_is_idle.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.56 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcu_sync.h\00", [39 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"suspicious rcu_sync_is_idle() usage\00", [60 x i8] zeroinitializer }, align 32
@__seqprop_assert.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@.str.58 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/seqlock.h\00", [40 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.59 = internal global [4 x i64] [i64 2, i64 32, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.60 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.61 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.62 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.63 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.64 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.65 = internal global [4 x i64] [i64 2, i64 32, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.66 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.67 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 524289]
@__sancov_gen_cov_switch_values.68 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967280]
@__sancov_gen_cov_switch_values.69 = internal global [4 x i64] [i64 2, i64 32, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.70 = internal global [4 x i64] [i64 2, i64 32, i64 1026, i64 1030]
@___asan_gen_.71 = private unnamed_addr constant [32 x i8] c"str__filemap__trace_system_name\00", align 1
@___asan_gen_.72 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.73 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.72, i32 36, i32 1 }
@___asan_gen_.74 = private unnamed_addr constant [44 x i8] c"trace_event_fields_mm_filemap_op_page_cache\00", align 1
@___asan_gen_.77 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_mm_filemap_op_page_cache\00", align 1
@___asan_gen_.80 = private unnamed_addr constant [35 x i8] c"print_fmt_mm_filemap_op_page_cache\00", align 1
@___asan_gen_.83 = private unnamed_addr constant [40 x i8] c"event_mm_filemap_delete_from_page_cache\00", align 1
@___asan_gen_.86 = private unnamed_addr constant [35 x i8] c"event_mm_filemap_add_to_page_cache\00", align 1
@___asan_gen_.88 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.231, i32 54, i32 1 }
@___asan_gen_.89 = private unnamed_addr constant [38 x i8] c"trace_event_fields_filemap_set_wb_err\00", align 1
@___asan_gen_.92 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_filemap_set_wb_err\00", align 1
@___asan_gen_.95 = private unnamed_addr constant [29 x i8] c"print_fmt_filemap_set_wb_err\00", align 1
@___asan_gen_.98 = private unnamed_addr constant [25 x i8] c"event_filemap_set_wb_err\00", align 1
@___asan_gen_.101 = private unnamed_addr constant [49 x i8] c"trace_event_fields_file_check_and_advance_wb_err\00", align 1
@___asan_gen_.104 = private unnamed_addr constant [53 x i8] c"trace_event_type_funcs_file_check_and_advance_wb_err\00", align 1
@___asan_gen_.107 = private unnamed_addr constant [40 x i8] c"print_fmt_file_check_and_advance_wb_err\00", align 1
@___asan_gen_.110 = private unnamed_addr constant [36 x i8] c"event_file_check_and_advance_wb_err\00", align 1
@___asan_gen_.115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 810, i32 2 }
@___asan_gen_.118 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 811, i32 2 }
@___asan_gen_.121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 812, i32 2 }
@___asan_gen_.124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 848, i32 2 }
@___asan_gen_.127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 849, i32 2 }
@___asan_gen_.130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 858, i32 3 }
@___asan_gen_.133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 962, i32 3 }
@___asan_gen_.134 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 1054, i32 3 }
@___asan_gen_.140 = private unnamed_addr constant [28 x i8] c"sysctl_page_lock_unfairness\00", align 1
@___asan_gen_.142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 1238, i32 5 }
@___asan_gen_.145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 1574, i32 2 }
@___asan_gen_.148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 1969, i32 3 }
@___asan_gen_.151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 2131, i32 4 }
@___asan_gen_.152 = private unnamed_addr constant [20 x i8] c"generic_file_vm_ops\00", align 1
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 3417, i32 35 }
@___asan_gen_.155 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 3630, i32 9 }
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 3638, i32 11 }
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 3639, i32 3 }
@___asan_gen_.170 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 3640, i32 3 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.231, i32 16, i32 1 }
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.231, i32 59, i32 1 }
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.231, i32 84, i32 1 }
@___asan_gen_.231 = private unnamed_addr constant [34 x i8] c"../include/trace/events/filemap.h\00", align 1
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.231, i32 49, i32 1 }
@___asan_gen_.234 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.234, i32 108, i32 2 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 153, i32 2 }
@___asan_gen_.240 = private unnamed_addr constant [27 x i8] c"../include/linux/pagemap.h\00", align 1
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.240, i32 225, i32 2 }
@___asan_gen_.243 = private unnamed_addr constant [31 x i8] c"../include/linux/backing-dev.h\00", align 1
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.243, i32 269, i32 2 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.276, i32 698, i32 1 }
@___asan_gen_.249 = private constant [16 x i8] c"../mm/filemap.c\00", align 1
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.249, i32 297, i32 4 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.258, i32 695, i32 2 }
@___asan_gen_.258 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.258, i32 723, i32 2 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.276, i32 416, i32 1 }
@___asan_gen_.267 = private unnamed_addr constant [26 x i8] c"../include/linux/xarray.h\00", align 1
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.267, i32 1182, i32 9 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.279, i32 1160, i32 2 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.279, i32 717, i32 2 }
@___asan_gen_.276 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.276, i32 260, i32 2 }
@___asan_gen_.279 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.279, i32 1368, i32 10 }
@___asan_gen_.282 = private unnamed_addr constant [30 x i8] c"../include/linux/memcontrol.h\00", align 1
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.282, i32 1059, i32 31 }
@___asan_gen_.285 = private unnamed_addr constant [32 x i8] c"../include/linux/percpu-rwsem.h\00", align 1
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.285, i32 49, i32 2 }
@___asan_gen_.291 = private unnamed_addr constant [28 x i8] c"../include/linux/rcu_sync.h\00", align 1
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.291, i32 34, i32 2 }
@___asan_gen_.293 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.294 = private unnamed_addr constant [27 x i8] c"../include/linux/seqlock.h\00", align 1
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.294, i32 271, i32 2 }
@llvm.compiler.used = appending global [149 x ptr] [ptr @__bpf_trace_tp_map_file_check_and_advance_wb_err, ptr @__bpf_trace_tp_map_filemap_set_wb_err, ptr @__bpf_trace_tp_map_mm_filemap_add_to_page_cache, ptr @__bpf_trace_tp_map_mm_filemap_delete_from_page_cache, ptr @__event_file_check_and_advance_wb_err, ptr @__event_filemap_set_wb_err, ptr @__event_mm_filemap_add_to_page_cache, ptr @__event_mm_filemap_delete_from_page_cache, ptr @__ksymtab___filemap_get_folio, ptr @__ksymtab___filemap_set_wb_err, ptr @__ksymtab___folio_lock, ptr @__ksymtab___folio_lock_killable, ptr @__ksymtab___generic_file_write_iter, ptr @__ksymtab_add_to_page_cache_locked, ptr @__ksymtab_file_check_and_advance_wb_err, ptr @__ksymtab_file_fdatawait_range, ptr @__ksymtab_file_write_and_wait_range, ptr @__ksymtab_filemap_add_folio, ptr @__ksymtab_filemap_check_errors, ptr @__ksymtab_filemap_fault, ptr @__ksymtab_filemap_fdatawait_keep_errors, ptr @__ksymtab_filemap_fdatawait_range, ptr @__ksymtab_filemap_fdatawait_range_keep_errors, ptr @__ksymtab_filemap_fdatawrite, ptr @__ksymtab_filemap_fdatawrite_range, ptr @__ksymtab_filemap_fdatawrite_wbc, ptr @__ksymtab_filemap_flush, ptr @__ksymtab_filemap_invalidate_lock_two, ptr @__ksymtab_filemap_invalidate_unlock_two, ptr @__ksymtab_filemap_map_pages, ptr @__ksymtab_filemap_page_mkwrite, ptr @__ksymtab_filemap_range_has_page, ptr @__ksymtab_filemap_range_has_writeback, ptr @__ksymtab_filemap_read, ptr @__ksymtab_filemap_release_folio, ptr @__ksymtab_filemap_write_and_wait_range, ptr @__ksymtab_find_get_pages_contig, ptr @__ksymtab_find_get_pages_range_tag, ptr @__ksymtab_folio_add_wait_queue, ptr @__ksymtab_folio_end_private_2, ptr @__ksymtab_folio_end_writeback, ptr @__ksymtab_folio_unlock, ptr @__ksymtab_folio_wait_bit, ptr @__ksymtab_folio_wait_bit_killable, ptr @__ksymtab_folio_wait_private_2, ptr @__ksymtab_folio_wait_private_2_killable, ptr @__ksymtab_generic_file_direct_write, ptr @__ksymtab_generic_file_mmap, ptr @__ksymtab_generic_file_read_iter, ptr @__ksymtab_generic_file_readonly_mmap, ptr @__ksymtab_generic_file_write_iter, ptr @__ksymtab_generic_perform_write, ptr @__ksymtab_page_cache_next_miss, ptr @__ksymtab_page_cache_prev_miss, ptr @__ksymtab_page_endio, ptr @__ksymtab_pagecache_write_begin, ptr @__ksymtab_pagecache_write_end, ptr @__ksymtab_read_cache_folio, ptr @__ksymtab_read_cache_page, ptr @__ksymtab_read_cache_page_gfp, ptr @__ksymtab_replace_page_cache_page, ptr @__tracepoint_file_check_and_advance_wb_err, ptr @__tracepoint_filemap_set_wb_err, ptr @__tracepoint_mm_filemap_add_to_page_cache, ptr @__tracepoint_mm_filemap_delete_from_page_cache, ptr @__tracepoint_ptr_file_check_and_advance_wb_err, ptr @__tracepoint_ptr_filemap_set_wb_err, ptr @__tracepoint_ptr_mm_filemap_add_to_page_cache, ptr @__tracepoint_ptr_mm_filemap_delete_from_page_cache, ptr @dio_warn_stale_pagecache._entry, ptr @dio_warn_stale_pagecache._entry.14, ptr @dio_warn_stale_pagecache._entry_ptr, ptr @dio_warn_stale_pagecache._entry_ptr.16, ptr @event_class_file_check_and_advance_wb_err, ptr @event_class_filemap_set_wb_err, ptr @event_class_mm_filemap_op_page_cache, ptr @event_file_check_and_advance_wb_err, ptr @event_filemap_set_wb_err, ptr @event_mm_filemap_add_to_page_cache, ptr @event_mm_filemap_delete_from_page_cache, ptr @str__filemap__trace_system_name, ptr @trace_event_fields_mm_filemap_op_page_cache, ptr @trace_event_type_funcs_mm_filemap_op_page_cache, ptr @print_fmt_mm_filemap_op_page_cache, ptr @trace_event_fields_filemap_set_wb_err, ptr @trace_event_type_funcs_filemap_set_wb_err, ptr @print_fmt_filemap_set_wb_err, ptr @trace_event_fields_file_check_and_advance_wb_err, ptr @trace_event_type_funcs_file_check_and_advance_wb_err, ptr @print_fmt_file_check_and_advance_wb_err, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @pagecache_init.__key, ptr @.str.7, ptr @sysctl_page_lock_unfairness, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @generic_file_vm_ops, ptr @dio_warn_stale_pagecache._rs, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.15, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.52, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58], section "llvm.metadata"
@0 = internal global [75 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__filemap__trace_system_name to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.71 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.73 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_filemap_op_page_cache to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.74 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_filemap_op_page_cache to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.77 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_filemap_op_page_cache to i32), i32 190, i32 224, i32 ptrtoint (ptr @___asan_gen_.80 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_filemap_delete_from_page_cache to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.83 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_filemap_add_to_page_cache to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.86 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.88 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_filemap_set_wb_err to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.89 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_filemap_set_wb_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.92 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_filemap_set_wb_err to i32), i32 150, i32 192, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_filemap_set_wb_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.98 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_file_check_and_advance_wb_err to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.101 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_file_check_and_advance_wb_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.104 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_file_check_and_advance_wb_err to i32), i32 182, i32 224, i32 ptrtoint (ptr @___asan_gen_.107 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_file_check_and_advance_wb_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.110 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pagecache_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sysctl_page_lock_unfairness to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.140 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.142 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @generic_file_vm_ops to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dio_warn_stale_pagecache._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.155 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dio_warn_stale_pagecache._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dio_warn_stale_pagecache._entry.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_filemap_delete_from_page_cache(ptr nocapture readnone %__data, ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_filemap_delete_from_page_cache, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %folio) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_filemap_add_to_page_cache(ptr nocapture readnone %__data, ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_filemap_add_to_page_cache, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %folio) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_filemap_set_wb_err(ptr nocapture readnone %__data, ptr noundef %mapping, i32 noundef %eseq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_filemap_set_wb_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mapping, i32 noundef %eseq) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_file_check_and_advance_wb_err(ptr nocapture readnone %__data, ptr noundef %file, i32 noundef %old) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_file_check_and_advance_wb_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %file, i32 noundef %old) #11
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_filemap_op_page_cache(ptr noundef %__data, ptr noundef %folio) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !299

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !300

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %3 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %folio to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %4 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i = add i32 %sub.ptr.div.i, %4
  %pfn = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %add.i, ptr %pfn, align 4
  %mapping = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 2
  %6 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mapping, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 11
  %10 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %i_ino, align 8
  %i_ino7 = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %i_ino7 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %i_ino7, align 4
  %index = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 3
  %13 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %index, align 4
  %index8 = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %index8 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %index8, align 4
  %16 = load ptr, ptr %mapping, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 8
  %19 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %i_sb, align 4
  %tobool11.not = icmp eq ptr %20, null
  %i_rdev = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 13
  %s_dev = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %.sink.in = select i1 %tobool11.not, ptr %i_rdev, ptr %s_dev
  %21 = ptrtoint ptr %.sink.in to i32
  call void @__asan_load4_noabort(i32 %21)
  %.sink = load i32, ptr %.sink.in, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call3, i32 0, i32 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %.sink, ptr %22, align 4
  %24 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %cmp.i.not.i.i.i = icmp eq i32 %25, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %PageHead.exit.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i:                                ; preds = %if.end5
  %26 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %folio, align 4
  %28 = and i32 %27, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i.i = icmp eq i32 %28, 0
  br i1 %tobool.not.i.i, label %PageHead.exit.i.i.folio_order.exit_crit_edge, label %if.end.i.i

PageHead.exit.i.i.folio_order.exit_crit_edge:     ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_order.exit

if.end.i.i:                                       ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %29 = getelementptr %struct.page, ptr %folio, i32 1, i32 1
  %compound_order.i.i = getelementptr inbounds %struct.anon.9, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %compound_order.i.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %compound_order.i.i, align 1
  br label %folio_order.exit

folio_order.exit:                                 ; preds = %if.end.i.i, %PageHead.exit.i.i.folio_order.exit_crit_edge
  %retval.0.i.i = phi i8 [ %31, %if.end.i.i ], [ 0, %PageHead.exit.i.i.folio_order.exit_crit_edge ]
  %order = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call3, i32 0, i32 5
  %32 = ptrtoint ptr %order to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %retval.0.i.i, ptr %order, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %folio_order.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_filemap_op_page_cache(ptr noundef %__data, ptr noundef %folio) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !302
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !302
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !289) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %27 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %folio to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %27 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %28 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i = add i32 %sub.ptr.div.i, %28
  %pfn = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %add.i, ptr %pfn, align 4
  %mapping = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 2
  %30 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mapping, align 4
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %33, i32 0, i32 11
  %34 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %i_ino, align 8
  %i_ino18 = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %i_ino18 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %i_ino18, align 4
  %index = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 3
  %37 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %index, align 4
  %index19 = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %index19 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %index19, align 4
  %40 = load ptr, ptr %mapping, align 4
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %40, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %42, i32 0, i32 8
  %43 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %i_sb, align 4
  %tobool22.not = icmp eq ptr %44, null
  %i_rdev = getelementptr inbounds %struct.inode, ptr %42, i32 0, i32 13
  %s_dev = getelementptr inbounds %struct.super_block, ptr %44, i32 0, i32 1
  %.sink.in = select i1 %tobool22.not, ptr %i_rdev, ptr %s_dev
  %45 = ptrtoint ptr %.sink.in to i32
  call void @__asan_load4_noabort(i32 %45)
  %.sink = load i32, ptr %.sink.in, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call13, i32 0, i32 4
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %.sink, ptr %46, align 4
  %48 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %49)
  %cmp.i.not.i.i.i = icmp eq i32 %49, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %PageHead.exit.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i:                                ; preds = %if.end16
  %50 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %folio, align 4
  %52 = and i32 %51, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.not.i.i = icmp eq i32 %52, 0
  br i1 %tobool.not.i.i, label %PageHead.exit.i.i.folio_order.exit_crit_edge, label %if.end.i.i

PageHead.exit.i.i.folio_order.exit_crit_edge:     ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_order.exit

if.end.i.i:                                       ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %53 = getelementptr %struct.page, ptr %folio, i32 1, i32 1
  %compound_order.i.i = getelementptr inbounds %struct.anon.9, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %compound_order.i.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %compound_order.i.i, align 1
  br label %folio_order.exit

folio_order.exit:                                 ; preds = %if.end.i.i, %PageHead.exit.i.i.folio_order.exit_crit_edge
  %retval.0.i.i = phi i8 [ %55, %if.end.i.i ], [ 0, %PageHead.exit.i.i.folio_order.exit_crit_edge ]
  %order = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %call13, i32 0, i32 5
  %56 = ptrtoint ptr %order to i32
  call void @__asan_store1_noabort(i32 %56)
  store i8 %retval.0.i.i, ptr %order, align 4
  %57 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %rctx, align 4
  %59 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %58, ptr noundef %__data, i64 noundef 1, ptr noundef %60, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %folio_order.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_filemap_set_wb_err(ptr noundef %__data, ptr nocapture noundef readonly %mapping, i32 noundef %eseq) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !299

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !300

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %3 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mapping, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %4, i32 0, i32 11
  %5 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %i_ino, align 8
  %i_ino6 = getelementptr inbounds %struct.trace_event_raw_filemap_set_wb_err, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %i_ino6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %i_ino6, align 4
  %errseq = getelementptr inbounds %struct.trace_event_raw_filemap_set_wb_err, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %errseq to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %eseq, ptr %errseq, align 4
  %9 = load ptr, ptr %mapping, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 8
  %10 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_sb, align 4
  %tobool8.not = icmp eq ptr %11, null
  %i_rdev = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 13
  %s_dev = getelementptr inbounds %struct.super_block, ptr %11, i32 0, i32 1
  %.sink.in = select i1 %tobool8.not, ptr %i_rdev, ptr %s_dev
  %12 = ptrtoint ptr %.sink.in to i32
  call void @__asan_load4_noabort(i32 %12)
  %.sink = load i32, ptr %.sink.in, align 8
  %13 = getelementptr inbounds %struct.trace_event_raw_filemap_set_wb_err, ptr %call3, i32 0, i32 2
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %.sink, ptr %13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_filemap_set_wb_err(ptr noundef %__data, ptr nocapture noundef readonly %mapping, i32 noundef %eseq) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !302
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !302
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !289) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mapping, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %28, i32 0, i32 11
  %29 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %i_ino, align 8
  %i_ino17 = getelementptr inbounds %struct.trace_event_raw_filemap_set_wb_err, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %i_ino17 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %i_ino17, align 4
  %errseq = getelementptr inbounds %struct.trace_event_raw_filemap_set_wb_err, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %errseq to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %eseq, ptr %errseq, align 4
  %33 = load ptr, ptr %mapping, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %33, i32 0, i32 8
  %34 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %i_sb, align 4
  %tobool19.not = icmp eq ptr %35, null
  %i_rdev = getelementptr inbounds %struct.inode, ptr %33, i32 0, i32 13
  %s_dev = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %.sink.in = select i1 %tobool19.not, ptr %i_rdev, ptr %s_dev
  %36 = ptrtoint ptr %.sink.in to i32
  call void @__asan_load4_noabort(i32 %36)
  %.sink = load i32, ptr %.sink.in, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_filemap_set_wb_err, ptr %call13, i32 0, i32 2
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %.sink, ptr %37, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_file_check_and_advance_wb_err(ptr noundef %__data, ptr noundef %file, i32 noundef %old) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #11
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !299

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !300

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #11
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #11
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %file6 = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %file6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %file, ptr %file6, align 4
  %f_mapping = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 18
  %4 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %f_mapping, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %i_ino, align 8
  %i_ino7 = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %i_ino7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %i_ino7, align 4
  %11 = load ptr, ptr %f_mapping, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %13, i32 0, i32 8
  %14 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %i_sb, align 4
  %tobool10.not = icmp eq ptr %15, null
  %i_rdev = getelementptr inbounds %struct.inode, ptr %13, i32 0, i32 13
  %s_dev = getelementptr inbounds %struct.super_block, ptr %15, i32 0, i32 1
  %.sink.in = select i1 %tobool10.not, ptr %i_rdev, ptr %s_dev
  %16 = ptrtoint ptr %.sink.in to i32
  call void @__asan_load4_noabort(i32 %16)
  %.sink = load i32, ptr %.sink.in, align 8
  %17 = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call3, i32 0, i32 3
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %.sink, ptr %17, align 4
  %old20 = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call3, i32 0, i32 4
  %19 = ptrtoint ptr %old20 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %old, ptr %old20, align 4
  %f_wb_err = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 19
  %20 = ptrtoint ptr %f_wb_err to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %f_wb_err, align 8
  %new = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call3, i32 0, i32 5
  %22 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %new, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_file_check_and_advance_wb_err(ptr noundef %__data, ptr noundef %file, i32 noundef %old) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #11
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !302
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #11
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !302
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #11
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #11
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #11
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !289) #11
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %file17 = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %file17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %file, ptr %file17, align 4
  %f_mapping = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 18
  %28 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %f_mapping, align 4
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %29, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %31, i32 0, i32 11
  %32 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %i_ino, align 8
  %i_ino18 = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %i_ino18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %i_ino18, align 4
  %35 = load ptr, ptr %f_mapping, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %37, i32 0, i32 8
  %38 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %i_sb, align 4
  %tobool21.not = icmp eq ptr %39, null
  %i_rdev = getelementptr inbounds %struct.inode, ptr %37, i32 0, i32 13
  %s_dev = getelementptr inbounds %struct.super_block, ptr %39, i32 0, i32 1
  %.sink.in = select i1 %tobool21.not, ptr %i_rdev, ptr %s_dev
  %40 = ptrtoint ptr %.sink.in to i32
  call void @__asan_load4_noabort(i32 %40)
  %.sink = load i32, ptr %.sink.in, align 8
  %41 = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call13, i32 0, i32 3
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %.sink, ptr %41, align 4
  %old31 = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call13, i32 0, i32 4
  %43 = ptrtoint ptr %old31 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %old, ptr %old31, align 4
  %f_wb_err = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 19
  %44 = ptrtoint ptr %f_wb_err to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %f_wb_err, align 8
  %new = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %call13, i32 0, i32 5
  %46 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %new, align 4
  %47 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rctx, align 4
  %49 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %48, ptr noundef %__data, i64 noundef 1, ptr noundef %50, ptr noundef %11, ptr noundef null) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_filemap_op_page_cache(ptr noundef %__data, ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %0 = ptrtoint ptr %folio to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_filemap_set_wb_err(ptr noundef %__data, ptr noundef %mapping, i32 noundef %eseq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %0 = ptrtoint ptr %mapping to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %eseq to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_file_check_and_advance_wb_err(ptr noundef %__data, ptr noundef %file, i32 noundef %old) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %0 = ptrtoint ptr %file to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %old to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__filemap_remove_folio(ptr noundef %folio, ptr noundef %shadow) local_unnamed_addr #0 align 64 {
entry:
  %xas.i = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping1 = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 2
  %0 = ptrtoint ptr %mapping1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping1, align 4
  tail call fastcc void @trace_mm_filemap_delete_from_page_cache(ptr noundef %folio)
  tail call fastcc void @filemap_unaccount_folio(ptr noundef %1, ptr noundef %folio)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas.i) #11
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 1
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 2
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 6
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 7
  %6 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 8
  %i_pages.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %xas.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %i_pages.i, ptr %xas.i, align 4
  %index.i = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 3
  %8 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index.i, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %3, align 4
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %5, align 4
  %a_ops.i.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 9
  %12 = ptrtoint ptr %a_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %a_ops.i.i, align 4
  %cmp.i.i = icmp eq ptr %13, @shmem_aops
  %spec.store.select.i = select i1 %cmp.i.i, ptr null, ptr @workingset_update_node
  %14 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %spec.store.select.i, ptr %6, align 4
  %15 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %16)
  %cmp.i.not.i.i.i.i = icmp eq i32 %16, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %PageHead.exit.i.i.i, !prof !300

if.then.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %entry
  %17 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %folio, align 4
  %19 = and i32 %18, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i.i34.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i.i34.i, label %PageHead.exit.i.i.i.xas_set_order.exit.i_crit_edge, label %folio_order.exit.i

PageHead.exit.i.i.i.xas_set_order.exit.i_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_set_order.exit.i

folio_order.exit.i:                               ; preds = %PageHead.exit.i.i.i
  %20 = getelementptr %struct.page, ptr %folio, i32 1, i32 1
  %compound_order.i.i.i = getelementptr inbounds %struct.anon.9, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %compound_order.i.i.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %compound_order.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %cmp.not.i.i = icmp eq i8 %22, 0
  br i1 %cmp.not.i.i, label %folio_order.exit.i.xas_set_order.exit.i_crit_edge, label %do.body2.i.i, !prof !299

folio_order.exit.i.xas_set_order.exit.i_crit_edge: ; preds = %folio_order.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_set_order.exit.i

do.body2.i.i:                                     ; preds = %folio_order.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/xarray.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1616, 0\0A.popsection", ""() #11, !srcloc !303
  unreachable

xas_set_order.exit.i:                             ; preds = %folio_order.exit.i.xas_set_order.exit.i_crit_edge, %PageHead.exit.i.i.i.xas_set_order.exit.i_crit_edge
  %23 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %9, ptr %2, align 4
  %24 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr inttoptr (i32 3 to ptr), ptr %4, align 4
  %25 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %26)
  %cmp.i.not.i.i.i35.i = icmp eq i32 %26, -1
  br i1 %cmp.i.not.i.i.i35.i, label %if.then.i.i.i36.i, label %PageHead.exit.i.i38.i, !prof !300

if.then.i.i.i36.i:                                ; preds = %xas_set_order.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i38.i:                            ; preds = %xas_set_order.exit.i
  %27 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %folio, align 4
  %29 = and i32 %28, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i.i37.i = icmp eq i32 %29, 0
  br i1 %tobool.not.i.i37.i, label %PageHead.exit.i.i38.i.folio_nr_pages.exit.i_crit_edge, label %if.end.i.i39.i

PageHead.exit.i.i38.i.folio_nr_pages.exit.i_crit_edge: ; preds = %PageHead.exit.i.i38.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_nr_pages.exit.i

if.end.i.i39.i:                                   ; preds = %PageHead.exit.i.i38.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %folio, i32 1, i32 1, i32 0, i32 2
  %30 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_nr_pages.exit.i

folio_nr_pages.exit.i:                            ; preds = %if.end.i.i39.i, %PageHead.exit.i.i38.i.folio_nr_pages.exit.i_crit_edge
  %retval.0.i.i40.i = phi i32 [ %31, %if.end.i.i39.i ], [ 1, %PageHead.exit.i.i38.i.folio_nr_pages.exit.i_crit_edge ]
  %32 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %32, align 4
  %and.i.i.i.i = and i32 %34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_test_locked.exit.i, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %folio_nr_pages.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit.i:                         ; preds = %folio_nr_pages.exit.i
  %35 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %folio, align 4
  %and1.i.i.i = and i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %if.then12.i, label %page_cache_delete.exit, !prof !300

if.then12.i:                                      ; preds = %folio_test_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.3) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 138, 0\0A.popsection", ""() #11, !srcloc !305
  unreachable

page_cache_delete.exit:                           ; preds = %folio_test_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  %call22.i = call ptr @xas_store(ptr noundef nonnull %xas.i, ptr noundef %shadow) #11
  call void @xas_init_marks(ptr noundef nonnull %xas.i) #11
  %37 = ptrtoint ptr %mapping1 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %mapping1, align 4
  %nrpages.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 7
  %38 = ptrtoint ptr %nrpages.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %nrpages.i, align 4
  %sub.i = sub i32 %39, %retval.0.i.i40.i
  store i32 %sub.i, ptr %nrpages.i, align 4
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas.i) #11
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_filemap_delete_from_page_cache(ptr noundef %folio) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_filemap_delete_from_page_cache, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_filemap_delete_from_page_cache, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !306

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !299

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.36, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !307
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_filemap_delete_from_page_cache, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %folio) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !308
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !308
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !299

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.36, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !309
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_filemap_delete_from_page_cache, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_filemap_delete_from_page_cache.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_filemap_delete_from_page_cache.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 52, ptr noundef nonnull @.str.35) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !310
  %38 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @filemap_unaccount_folio(ptr noundef %mapping, ptr noundef %folio) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @folio_mapped(ptr noundef %folio) #11
  br i1 %call, label %if.then, label %do.end7, !prof !300

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.37) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 153, 0\0A.popsection", ""() #11, !srcloc !311
  unreachable

do.end7:                                          ; preds = %entry
  %0 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp.i.not.i.i.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %PageHead.exit.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i:                                ; preds = %do.end7
  %2 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %folio, align 4
  %4 = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i.i101 = icmp eq i32 %4, 0
  br i1 %tobool.not.i.i101, label %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge, label %if.end.i.i

PageHead.exit.i.i.folio_nr_pages.exit_crit_edge:  ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_nr_pages.exit

if.end.i.i:                                       ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i = getelementptr %struct.page, ptr %folio, i32 1, i32 1, i32 0, i32 2
  %5 = ptrtoint ptr %compound_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %compound_nr.i.i, align 4
  br label %folio_nr_pages.exit

folio_nr_pages.exit:                              ; preds = %if.end.i.i, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge
  %retval.0.i.i = phi i32 [ %6, %if.end.i.i ], [ 1, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge ]
  %sub = sub i32 0, %retval.0.i.i
  tail call void @__mod_lruvec_page_state(ptr noundef %folio, i32 noundef 19, i32 noundef %sub) #11
  %7 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 4
  %and.i.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_swapbacked.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %folio_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapbacked.exit:                       ; preds = %folio_nr_pages.exit
  %10 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %folio, align 4
  %12 = and i32 %11, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.i.not = icmp eq i32 %12, 0
  br i1 %tobool.i.not, label %folio_test_swapbacked.exit.if.end23_crit_edge, label %if.then13

folio_test_swapbacked.exit.if.end23_crit_edge:    ; preds = %folio_test_swapbacked.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end23

if.then13:                                        ; preds = %folio_test_swapbacked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__mod_lruvec_page_state(ptr noundef %folio, i32 noundef 23, i32 noundef %sub) #11
  br label %if.end23

if.end23:                                         ; preds = %if.then13, %folio_test_swapbacked.exit.if.end23_crit_edge
  %13 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %7, align 4
  %and.i.i.i97 = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i97)
  %tobool.not.i.i98 = icmp eq i32 %and.i.i.i97, 0
  br i1 %tobool.not.i.i98, label %folio_test_dirty.exit, label %if.then.i.i99, !prof !299

if.then.i.i99:                                    ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_dirty.exit:                            ; preds = %if.end23
  %15 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %folio, align 4
  %17 = and i32 %16, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i100.not = icmp eq i32 %17, 0
  br i1 %tobool.i100.not, label %folio_test_dirty.exit.cleanup_crit_edge, label %land.rhs

folio_test_dirty.exit.cleanup_crit_edge:          ; preds = %folio_test_dirty.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

land.rhs:                                         ; preds = %folio_test_dirty.exit
  %.b95 = load i1, ptr @filemap_unaccount_folio.__already_done, align 1
  br i1 %.b95, label %land.rhs.if.then73_crit_edge, label %if.then39, !prof !299

land.rhs.if.then73_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then73

if.then39:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @filemap_unaccount_folio.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 203, i32 noundef 9, ptr noundef null) #11
  br label %if.then73

if.then73:                                        ; preds = %if.then39, %land.rhs.if.then73_crit_edge
  %18 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mapping, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %20 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i, label %if.then73.inode_to_wb.exit_crit_edge, label %land.rhs.i

if.then73.inode_to_wb.exit_crit_edge:             ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #13
  br label %inode_to_wb.exit

land.rhs.i:                                       ; preds = %if.then73
  %dep_map.i = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 18, i32 0, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i, label %land.rhs.i.inode_to_wb.exit_crit_edge

land.rhs.i.inode_to_wb.exit_crit_edge:            ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %inode_to_wb.exit

land.lhs.true.i:                                  ; preds = %land.rhs.i
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 9
  %21 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %i_mapping.i, align 8
  %dep_map2.i = getelementptr inbounds %struct.address_space, ptr %22, i32 0, i32 1, i32 0, i32 0, i32 0, i32 4
  %call.i60.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i60.i)
  %tobool4.not.i = icmp eq i32 %call.i60.i, 0
  br i1 %tobool4.not.i, label %land.rhs5.i, label %land.lhs.true.i.inode_to_wb.exit_crit_edge

land.lhs.true.i.inode_to_wb.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %inode_to_wb.exit

land.rhs5.i:                                      ; preds = %land.lhs.true.i
  %i_wb.i = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 30
  %23 = ptrtoint ptr %i_wb.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %i_wb.i, align 4
  %dep_map6.i = getelementptr inbounds %struct.bdi_writeback, ptr %24, i32 0, i32 7, i32 0, i32 0, i32 4
  %call.i61.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map6.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i61.i)
  %tobool8.not.i = icmp eq i32 %call.i61.i, 0
  br i1 %tobool8.not.i, label %land.rhs13.i, label %land.rhs5.i.inode_to_wb.exit_crit_edge

land.rhs5.i.inode_to_wb.exit_crit_edge:           ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %inode_to_wb.exit

land.rhs13.i:                                     ; preds = %land.rhs5.i
  %.b54.i = load i1, ptr @inode_to_wb.__already_done, align 1
  br i1 %.b54.i, label %land.rhs13.i.inode_to_wb.exit_crit_edge, label %if.then.i, !prof !299

land.rhs13.i.inode_to_wb.exit_crit_edge:          ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %inode_to_wb.exit

if.then.i:                                        ; preds = %land.rhs13.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @inode_to_wb.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.39, i32 noundef 272, i32 noundef 9, ptr noundef null) #11
  br label %inode_to_wb.exit

inode_to_wb.exit:                                 ; preds = %if.then.i, %land.rhs13.i.inode_to_wb.exit_crit_edge, %land.rhs5.i.inode_to_wb.exit_crit_edge, %land.lhs.true.i.inode_to_wb.exit_crit_edge, %land.rhs.i.inode_to_wb.exit_crit_edge, %if.then73.inode_to_wb.exit_crit_edge
  %i_wb48.i = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 30
  %25 = ptrtoint ptr %i_wb48.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %i_wb48.i, align 4
  tail call void @folio_account_cleaned(ptr noundef %folio, ptr noundef %mapping, ptr noundef %26) #11
  br label %cleanup

cleanup:                                          ; preds = %inode_to_wb.exit, %folio_test_dirty.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @filemap_free_folio(ptr nocapture noundef readonly %mapping, ptr noundef %folio) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %a_ops = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %0 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %a_ops, align 4
  %freepage1 = getelementptr inbounds %struct.address_space_operations, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %freepage1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %freepage1, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void %3(ptr noundef %folio) #11
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %4 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  %and.i.i.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_test_large.exit, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_large.exit:                            ; preds = %if.end
  %7 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %folio, align 4
  %9 = and i32 %8, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i.i.not = icmp eq i32 %9, 0
  br i1 %tobool.i.i.not, label %folio_test_large.exit.if.end5_crit_edge, label %land.lhs.true

folio_test_large.exit.if.end5_crit_edge:          ; preds = %folio_test_large.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end5

land.lhs.true:                                    ; preds = %folio_test_large.exit
  %10 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %cmp.i.not.i.i.i = icmp eq i32 %11, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i11, label %PageHead.exit.i.i, !prof !300

if.then.i.i.i11:                                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i:                                ; preds = %land.lhs.true
  %12 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %folio, align 4
  %14 = and i32 %13, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.i.i = icmp eq i32 %14, 0
  br i1 %tobool.not.i.i, label %PageHead.exit.i.i.if.end5_crit_edge, label %if.end.i.i

PageHead.exit.i.i.if.end5_crit_edge:              ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end5

if.end.i.i:                                       ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i = getelementptr %struct.page, ptr %folio, i32 1, i32 1, i32 0, i32 2
  %15 = ptrtoint ptr %compound_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %compound_nr.i.i, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.end.i.i, %PageHead.exit.i.i.if.end5_crit_edge, %folio_test_large.exit.if.end5_crit_edge
  %refs.0 = phi i32 [ 1, %folio_test_large.exit.if.end5_crit_edge ], [ %16, %if.end.i.i ], [ 1, %PageHead.exit.i.i.if.end5_crit_edge ]
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i, i32 1, i32 3, i32 1) #11
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i, ptr %_refcount.i.i.i, i32 %refs.0, ptr elementtype(i32) %_refcount.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %17, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@filemap_free_folio, %if.then.i.i.i12)) #11
          to label %folio_ref_sub_and_test.exit.i [label %if.then.i.i.i12], !srcloc !306

if.then.i.i.i12:                                  ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i = zext i1 %cmp.i.i.i.i.i to i32
  %sub.i.i.i = sub i32 0, %refs.0
  tail call void @__page_ref_mod_and_test(ptr noundef %folio, i32 noundef %sub.i.i.i, i32 noundef %conv.i.i.i) #11
  br label %folio_ref_sub_and_test.exit.i

folio_ref_sub_and_test.exit.i:                    ; preds = %if.then.i.i.i12, %if.end5
  br i1 %cmp.i.i.i.i.i, label %if.then.i, label %folio_ref_sub_and_test.exit.i.folio_put_refs.exit_crit_edge

folio_ref_sub_and_test.exit.i.folio_put_refs.exit_crit_edge: ; preds = %folio_ref_sub_and_test.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_put_refs.exit

if.then.i:                                        ; preds = %folio_ref_sub_and_test.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef %folio) #11
  br label %folio_put_refs.exit

folio_put_refs.exit:                              ; preds = %if.then.i, %folio_ref_sub_and_test.exit.i.folio_put_refs.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @filemap_remove_folio(ptr noundef %folio) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping1 = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 2
  %0 = ptrtoint ptr %mapping1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping1, align 4
  %2 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_locked.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit:                           ; preds = %entry
  %5 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %folio, align 4
  %and1.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %do.body4, label %do.end9, !prof !300

do.body4:                                         ; preds = %folio_test_locked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 248, 0\0A.popsection", ""() #11, !srcloc !315
  unreachable

do.end9:                                          ; preds = %folio_test_locked.exit
  call void @__sanitizer_cov_trace_pc() #13
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %8, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #11
  %i_pages = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %i_pages) #11
  tail call void @__filemap_remove_folio(ptr noundef %folio, ptr noundef null)
  tail call void @_raw_spin_unlock_irq(ptr noundef %i_pages) #11
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %1, align 4
  tail call void @inode_add_lru(ptr noundef %10) #11
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %1, align 4
  %i_lock17 = getelementptr inbounds %struct.inode, ptr %12, i32 0, i32 18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock17) #11
  tail call void @filemap_free_folio(ptr noundef %1, ptr noundef %folio)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @inode_add_lru(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @delete_from_page_cache_batch(ptr noundef %mapping, ptr nocapture noundef readonly %fbatch) local_unnamed_addr #0 align 64 {
entry:
  %xas.i = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %fbatch, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mapping, align 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #11
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %i_pages) #11
  %4 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %fbatch, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp44.not = icmp eq i8 %5, 0
  br i1 %cmp44.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.045 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %i.045
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @trace_mm_filemap_delete_from_page_cache(ptr noundef %7)
  tail call fastcc void @filemap_unaccount_folio(ptr noundef %mapping, ptr noundef %7)
  %inc = add nuw nsw i32 %i.045, 1
  %8 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %fbatch, align 4
  %conv.i38 = zext i8 %9 to i32
  %cmp = icmp ult i32 %inc, %conv.i38
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas.i) #11
  %10 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 1
  %11 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 2
  %12 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 6
  %13 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 7
  %14 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 8
  %15 = ptrtoint ptr %xas.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %i_pages, ptr %xas.i, align 4
  %folios.i = getelementptr inbounds %struct.folio_batch, ptr %fbatch, i32 0, i32 2
  %16 = ptrtoint ptr %folios.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %folios.i, align 4
  %index.i = getelementptr inbounds %struct.anon, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %index.i, align 4
  %20 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %10, align 4
  %21 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %11, align 4
  %22 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 3 to ptr), ptr %12, align 4
  %23 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %13, align 4
  %a_ops.i.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %24 = ptrtoint ptr %a_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %a_ops.i.i, align 4
  %cmp.i.i = icmp eq ptr %25, @shmem_aops
  %spec.store.select.i = select i1 %cmp.i.i, ptr null, ptr @workingset_update_node
  %26 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %spec.store.select.i, ptr %14, align 4
  %call2.i = call ptr @xas_find(ptr noundef nonnull %xas.i, i32 noundef -1) #11
  %tobool.not114.i = icmp eq ptr %call2.i, null
  br i1 %tobool.not114.i, label %for.end.page_cache_delete_batch.exit_crit_edge, label %for.end.for.body.i_crit_edge

for.end.for.body.i_crit_edge:                     ; preds = %for.end
  br label %for.body.i

for.end.page_cache_delete_batch.exit_crit_edge:   ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %page_cache_delete_batch.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.end.for.body.i_crit_edge
  %total_pages.0117.i = phi i32 [ %total_pages.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.end.for.body.i_crit_edge ]
  %i.0116.i = phi i32 [ %i.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.end.for.body.i_crit_edge ]
  %folio.0115.i = phi ptr [ %call85.i, %for.inc.i.for.body.i_crit_edge ], [ %call2.i, %for.end.for.body.i_crit_edge ]
  %27 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %fbatch, align 4
  %conv.i.i = zext i8 %28 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0116.i, i32 %conv.i.i)
  %cmp.not.i = icmp ult i32 %i.0116.i, %conv.i.i
  br i1 %cmp.not.i, label %if.end5.i, label %for.body.i.page_cache_delete_batch.exit_crit_edge

for.body.i.page_cache_delete_batch.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %page_cache_delete_batch.exit

if.end5.i:                                        ; preds = %for.body.i
  %29 = ptrtoint ptr %folio.0115.i to i32
  %and.i.i = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i106.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i106.not.i, label %if.end8.i, label %if.end5.i.for.inc.i_crit_edge

if.end5.i.for.inc.i_crit_edge:                    ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.end8.i:                                        ; preds = %if.end5.i
  %arrayidx10.i = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %i.0116.i
  %30 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx10.i, align 4
  %cmp11.not.i = icmp eq ptr %folio.0115.i, %31
  br i1 %cmp11.not.i, label %if.end31.i, label %do.body13.i

do.body13.i:                                      ; preds = %if.end8.i
  %index14.i = getelementptr inbounds %struct.anon, ptr %folio.0115.i, i32 0, i32 3
  %32 = ptrtoint ptr %index14.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %index14.i, align 4
  %index17.i = getelementptr inbounds %struct.anon, ptr %31, i32 0, i32 3
  %34 = ptrtoint ptr %index17.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %index17.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %35)
  %cmp18.i = icmp ugt i32 %33, %35
  br i1 %cmp18.i, label %if.then21.i, label %do.body13.i.for.inc.i_crit_edge, !prof !300

do.body13.i.for.inc.i_crit_edge:                  ; preds = %do.body13.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.i

if.then21.i:                                      ; preds = %do.body13.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %folio.0115.i, ptr noundef nonnull @.str.41) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 298, 0\0A.popsection", ""() #11, !srcloc !316
  unreachable

if.end31.i:                                       ; preds = %if.end8.i
  %36 = getelementptr inbounds %struct.page, ptr %folio.0115.i, i32 0, i32 1
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %36, align 4
  %and.i.i.i.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_test_locked.exit.i, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %folio.0115.i, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit.i:                         ; preds = %if.end31.i
  %39 = ptrtoint ptr %folio.0115.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %folio.0115.i, align 4
  %and1.i.i.i = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %land.rhs.i, label %folio_test_locked.exit.i.if.end74.i_crit_edge

folio_test_locked.exit.i.if.end74.i_crit_edge:    ; preds = %folio_test_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end74.i

land.rhs.i:                                       ; preds = %folio_test_locked.exit.i
  %.b105.i = load i1, ptr @page_cache_delete_batch.__already_done, align 1
  br i1 %.b105.i, label %land.rhs.i.if.end74.i_crit_edge, label %if.then49.i, !prof !299

land.rhs.i.if.end74.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end74.i

if.then49.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @page_cache_delete_batch.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 302, i32 noundef 9, ptr noundef null) #11
  br label %if.end74.i

if.end74.i:                                       ; preds = %if.then49.i, %land.rhs.i.if.end74.i_crit_edge, %folio_test_locked.exit.i.if.end74.i_crit_edge
  %mapping82.i = getelementptr inbounds %struct.anon, ptr %folio.0115.i, i32 0, i32 2
  %41 = ptrtoint ptr %mapping82.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %mapping82.i, align 4
  %inc.i = add nuw i32 %i.0116.i, 1
  %call83.i = call ptr @xas_store(ptr noundef nonnull %xas.i, ptr noundef null) #11
  %42 = ptrtoint ptr %folio.0115.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %folio.0115.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %43)
  %cmp.i.not.i.i.i.i = icmp eq i32 %43, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %PageHead.exit.i.i.i, !prof !300

if.then.i.i.i.i:                                  ; preds = %if.end74.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %folio.0115.i, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %if.end74.i
  %44 = ptrtoint ptr %folio.0115.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %folio.0115.i, align 4
  %46 = and i32 %45, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i.i107.i = icmp eq i32 %46, 0
  br i1 %tobool.not.i.i107.i, label %PageHead.exit.i.i.i.folio_nr_pages.exit.i_crit_edge, label %if.end.i.i.i

PageHead.exit.i.i.i.folio_nr_pages.exit.i_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_nr_pages.exit.i

if.end.i.i.i:                                     ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %folio.0115.i, i32 1, i32 1, i32 0, i32 2
  %47 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_nr_pages.exit.i

folio_nr_pages.exit.i:                            ; preds = %if.end.i.i.i, %PageHead.exit.i.i.i.folio_nr_pages.exit.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %48, %if.end.i.i.i ], [ 1, %PageHead.exit.i.i.i.folio_nr_pages.exit.i_crit_edge ]
  %add.i = add i32 %retval.0.i.i.i, %total_pages.0117.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %folio_nr_pages.exit.i, %do.body13.i.for.inc.i_crit_edge, %if.end5.i.for.inc.i_crit_edge
  %i.1.i = phi i32 [ %i.0116.i, %if.end5.i.for.inc.i_crit_edge ], [ %i.0116.i, %do.body13.i.for.inc.i_crit_edge ], [ %inc.i, %folio_nr_pages.exit.i ]
  %total_pages.1.i = phi i32 [ %total_pages.0117.i, %if.end5.i.for.inc.i_crit_edge ], [ %total_pages.0117.i, %do.body13.i.for.inc.i_crit_edge ], [ %add.i, %folio_nr_pages.exit.i ]
  %call85.i = call fastcc ptr @xas_next_entry(ptr noundef nonnull %xas.i, i32 noundef -1) #11
  %tobool.not.i = icmp eq ptr %call85.i, null
  br i1 %tobool.not.i, label %for.inc.i.page_cache_delete_batch.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body.i

for.inc.i.page_cache_delete_batch.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %page_cache_delete_batch.exit

page_cache_delete_batch.exit:                     ; preds = %for.inc.i.page_cache_delete_batch.exit_crit_edge, %for.body.i.page_cache_delete_batch.exit_crit_edge, %for.end.page_cache_delete_batch.exit_crit_edge
  %total_pages.0.lcssa.i = phi i32 [ 0, %for.end.page_cache_delete_batch.exit_crit_edge ], [ %total_pages.1.i, %for.inc.i.page_cache_delete_batch.exit_crit_edge ], [ %total_pages.0117.i, %for.body.i.page_cache_delete_batch.exit_crit_edge ]
  %nrpages.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 7
  %49 = ptrtoint ptr %nrpages.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %nrpages.i, align 4
  %sub.i = sub i32 %50, %total_pages.0.lcssa.i
  store i32 %sub.i, ptr %nrpages.i, align 4
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas.i) #11
  call void @_raw_spin_unlock_irq(ptr noundef %i_pages) #11
  %51 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %mapping, align 4
  call void @inode_add_lru(ptr noundef %52) #11
  %53 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %mapping, align 4
  %i_lock9 = getelementptr inbounds %struct.inode, ptr %54, i32 0, i32 18
  call void @_raw_spin_unlock(ptr noundef %i_lock9) #11
  %55 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %fbatch, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %cmp1247.not = icmp eq i8 %56, 0
  br i1 %cmp1247.not, label %page_cache_delete_batch.exit.cleanup_crit_edge, label %page_cache_delete_batch.exit.for.body13_crit_edge

page_cache_delete_batch.exit.for.body13_crit_edge: ; preds = %page_cache_delete_batch.exit
  br label %for.body13

page_cache_delete_batch.exit.cleanup_crit_edge:   ; preds = %page_cache_delete_batch.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

for.body13:                                       ; preds = %for.body13.for.body13_crit_edge, %page_cache_delete_batch.exit.for.body13_crit_edge
  %i.148 = phi i32 [ %inc17, %for.body13.for.body13_crit_edge ], [ 0, %page_cache_delete_batch.exit.for.body13_crit_edge ]
  %arrayidx15 = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %i.148
  %57 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx15, align 4
  call void @filemap_free_folio(ptr noundef %mapping, ptr noundef %58)
  %inc17 = add nuw nsw i32 %i.148, 1
  %59 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %fbatch, align 4
  %conv.i39 = zext i8 %60 to i32
  %cmp12 = icmp ult i32 %inc17, %conv.i39
  br i1 %cmp12, label %for.body13.for.body13_crit_edge, label %for.body13.cleanup_crit_edge

for.body13.cleanup_crit_edge:                     ; preds = %for.body13
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

for.body13.for.body13_crit_edge:                  ; preds = %for.body13
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body13

cleanup:                                          ; preds = %for.body13.cleanup_crit_edge, %page_cache_delete_batch.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_check_errors(ptr noundef %mapping) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %call2 = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %flags) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  %spec.select = select i1 %tobool3.not, i32 0, i32 -28
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ 0, %entry.if.end_crit_edge ], [ %spec.select, %land.lhs.true ]
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %flags, align 4
  %and1.i17 = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i17)
  %tobool6.not = icmp eq i32 %and1.i17, 0
  br i1 %tobool6.not, label %if.end.if.end12_crit_edge, label %land.lhs.true7

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end12

land.lhs.true7:                                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %call9 = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %flags) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  %spec.select16 = select i1 %tobool10.not, i32 %ret.0, i32 -5
  br label %if.end12

if.end12:                                         ; preds = %land.lhs.true7, %if.end.if.end12_crit_edge
  %ret.1 = phi i32 [ %ret.0, %if.end.if.end12_crit_edge ], [ %spec.select16, %land.lhs.true7 ]
  ret i32 %ret.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_fdatawrite_wbc(ptr noundef %mapping, ptr noundef %wbc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %call.i = tail call ptr @inode_to_bdi(ptr noundef %1) #11
  %capabilities.i = getelementptr inbounds %struct.backing_dev_info, ptr %call.i, i32 0, i32 6
  %2 = ptrtoint ptr %capabilities.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %capabilities.i, align 8
  %and.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %xa_flags.i.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1, i32 1
  %4 = ptrtoint ptr %xa_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xa_flags.i.i, align 4
  %and.i.i = and i32 %5, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.i.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %6 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mapping, align 4
  %i_lock.i = getelementptr inbounds %struct.inode, ptr %7, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock.i) #11
  %i_wb.i.i = getelementptr inbounds %struct.inode, ptr %7, i32 0, i32 30
  %8 = ptrtoint ptr %i_wb.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %i_wb.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end.wbc_attach_fdatawrite_inode.exit_crit_edge

if.end.wbc_attach_fdatawrite_inode.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %wbc_attach_fdatawrite_inode.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__inode_attach_wb(ptr noundef %7, ptr noundef null) #11
  br label %wbc_attach_fdatawrite_inode.exit

wbc_attach_fdatawrite_inode.exit:                 ; preds = %if.then.i.i, %if.end.wbc_attach_fdatawrite_inode.exit_crit_edge
  tail call void @wbc_attach_and_unlock_inode(ptr noundef %wbc, ptr noundef %7) #11
  %call2 = tail call i32 @do_writepages(ptr noundef %mapping, ptr noundef %wbc) #11
  tail call void @wbc_detach_inode(ptr noundef %wbc) #11
  br label %cleanup

cleanup:                                          ; preds = %wbc_attach_fdatawrite_inode.exit, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %wbc_attach_fdatawrite_inode.exit ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_writepages(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wbc_detach_inode(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__filemap_fdatawrite_range(ptr noundef %mapping, i64 noundef %start, i64 noundef %end, i32 noundef %sync_mode) local_unnamed_addr #0 align 64 {
entry:
  %wbc = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc) #11
  %0 = getelementptr inbounds i8, ptr %wbc, i32 24
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 -1, ptr %0, align 8, !annotation !302
  %2 = ptrtoint ptr %wbc to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 2147483647, ptr %wbc, align 8
  %pages_skipped = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 1
  %3 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %pages_skipped, align 4
  %range_start = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 2
  %4 = ptrtoint ptr %range_start to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %start, ptr %range_start, align 8
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %5 = ptrtoint ptr %range_end to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %end, ptr %range_end, align 8
  %sync_mode1 = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %6 = ptrtoint ptr %sync_mode1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sync_mode, ptr %sync_mode1, align 8
  %for_kupdate = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %7 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 127, ptr %for_kupdate, align 4
  %wb = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %8 = call ptr @memset(ptr %wb, i32 0, i32 32)
  %call = call i32 @filemap_fdatawrite_wbc(ptr noundef %mapping, ptr noundef nonnull %wbc)
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc) #11
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_fdatawrite(ptr noundef %mapping) #0 align 64 {
entry:
  %wbc.i.i = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc.i.i) #11
  %0 = getelementptr inbounds i8, ptr %wbc.i.i, i32 24
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 4303355903, ptr %0, align 8, !annotation !302
  %2 = ptrtoint ptr %wbc.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 2147483647, ptr %wbc.i.i, align 8
  %pages_skipped.i.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %pages_skipped.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %pages_skipped.i.i, align 4
  %range_start.i.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i.i, i32 0, i32 2
  %4 = ptrtoint ptr %range_start.i.i to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 0, ptr %range_start.i.i, align 8
  %range_end.i.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i.i, i32 0, i32 3
  %5 = ptrtoint ptr %range_end.i.i to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 9223372036854775807, ptr %range_end.i.i, align 8
  %wb.i.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i.i, i32 0, i32 6
  %6 = call ptr @memset(ptr %wb.i.i, i32 0, i32 32)
  %call.i.i = call i32 @filemap_fdatawrite_wbc(ptr noundef %mapping, ptr noundef nonnull %wbc.i.i) #11
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc.i.i) #11
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_fdatawrite_range(ptr noundef %mapping, i64 noundef %start, i64 noundef %end) #0 align 64 {
entry:
  %wbc.i = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc.i) #11
  %0 = getelementptr inbounds i8, ptr %wbc.i, i32 24
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 4303355903, ptr %0, align 8, !annotation !302
  %2 = ptrtoint ptr %wbc.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 2147483647, ptr %wbc.i, align 8
  %pages_skipped.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 1
  %3 = ptrtoint ptr %pages_skipped.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %pages_skipped.i, align 4
  %range_start.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 2
  %4 = ptrtoint ptr %range_start.i to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %start, ptr %range_start.i, align 8
  %range_end.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 3
  %5 = ptrtoint ptr %range_end.i to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %end, ptr %range_end.i, align 8
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 6
  %6 = call ptr @memset(ptr %wb.i, i32 0, i32 32)
  %call.i = call i32 @filemap_fdatawrite_wbc(ptr noundef %mapping, ptr noundef nonnull %wbc.i) #11
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc.i) #11
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_flush(ptr noundef %mapping) #0 align 64 {
entry:
  %wbc.i.i = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc.i.i) #11
  %0 = getelementptr inbounds i8, ptr %wbc.i.i, i32 24
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 8388607, ptr %0, align 8, !annotation !302
  %2 = ptrtoint ptr %wbc.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 2147483647, ptr %wbc.i.i, align 8
  %pages_skipped.i.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %pages_skipped.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %pages_skipped.i.i, align 4
  %range_start.i.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i.i, i32 0, i32 2
  %4 = ptrtoint ptr %range_start.i.i to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 0, ptr %range_start.i.i, align 8
  %range_end.i.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i.i, i32 0, i32 3
  %5 = ptrtoint ptr %range_end.i.i to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 9223372036854775807, ptr %range_end.i.i, align 8
  %wb.i.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i.i, i32 0, i32 6
  %6 = call ptr @memset(ptr %wb.i.i, i32 0, i32 32)
  %call.i.i = call i32 @filemap_fdatawrite_wbc(ptr noundef %mapping, ptr noundef nonnull %wbc.i.i) #11
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc.i.i) #11
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @filemap_range_has_page(ptr noundef %mapping, i64 noundef %start_byte, i64 noundef %end_byte) #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %5 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %i_pages, ptr %xas, align 4
  %6 = lshr i64 %start_byte, 12
  %conv = trunc i64 %6 to i32
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 3 to ptr), ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %3, align 4
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %4, align 4
  %12 = lshr i64 %end_byte, 12
  %conv2 = trunc i64 %12 to i32
  call void @__sanitizer_cov_trace_cmp8(i64 %end_byte, i64 %start_byte)
  %cmp = icmp slt i64 %end_byte, %start_byte
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %13 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %16, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %if.end.for.cond.preheader_crit_edge, label %land.lhs.true.i

if.end.for.cond.preheader_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.preheader

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.for.cond.preheader_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.for.cond.preheader_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.preheader

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.for.cond.preheader_crit_edge, label %if.then.i

land.lhs.true2.i.for.cond.preheader_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.preheader

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then.i, %land.lhs.true2.i.for.cond.preheader_crit_edge, %land.lhs.true.i.for.cond.preheader_crit_edge, %if.end.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %for.cond.preheader
  %call = call ptr @xas_find(ptr noundef nonnull %xas, i32 noundef %conv2) #11
  %magicptr.i = ptrtoint ptr %call to i32
  %17 = zext i32 %magicptr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values)
  switch i32 %magicptr.i, label %if.end6 [
    i32 1030, label %for.cond.for.cond.backedge_crit_edge
    i32 1026, label %if.end4.i
  ]

for.cond.for.cond.backedge_crit_edge:             ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.backedge

if.end4.i:                                        ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #13
  %18 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 3 to ptr), ptr %2, align 4
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.end6.for.cond.backedge_crit_edge, %if.end4.i, %for.cond.for.cond.backedge_crit_edge
  br label %for.cond

if.end6:                                          ; preds = %for.cond
  %and.i = and i32 %magicptr.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %for.end, label %if.end6.for.cond.backedge_crit_edge

if.end6.for.cond.backedge_crit_edge:              ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.backedge

for.end:                                          ; preds = %if.end6
  %call.i18 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i18, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i21

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i21:                                ; preds = %for.end
  %call1.i19 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i19)
  %tobool.not.i20 = icmp eq i32 %call1.i19, 0
  br i1 %tobool.not.i20, label %land.lhs.true.i21.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i23

land.lhs.true.i21.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i21
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i23:                               ; preds = %land.lhs.true.i21
  %.b4.i22 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i22, label %land.lhs.true2.i23.rcu_read_unlock.exit_crit_edge, label %if.then.i24

land.lhs.true2.i23.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i23
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i24:                                      ; preds = %land.lhs.true2.i23
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i24, %land.lhs.true2.i23.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i21.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %19 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i25 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i.i25 to ptr
  %preempt_count.i.i.i.i26 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i.i.i26 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i.i.i26, align 4
  %sub.i.i.i = add i32 %22, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i26, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  %cmp10 = icmp ne ptr %call, null
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %cmp10, %rcu_read_unlock.exit ], [ false, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xas_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_fdatawait_range(ptr noundef %mapping, i64 noundef %start_byte, i64 noundef %end_byte) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__filemap_fdatawait_range(ptr noundef %mapping, i64 noundef %start_byte, i64 noundef %end_byte)
  %flags.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags.i, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.lhs.true.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %call2.i = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %flags.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  %spec.select.i = select i1 %tobool3.not.i, i32 0, i32 -28
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i, %entry.if.end.i_crit_edge
  %ret.0.i = phi i32 [ 0, %entry.if.end.i_crit_edge ], [ %spec.select.i, %land.lhs.true.i ]
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %flags.i, align 4
  %and1.i17.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i17.i)
  %tobool6.not.i = icmp eq i32 %and1.i17.i, 0
  br i1 %tobool6.not.i, label %if.end.i.filemap_check_errors.exit_crit_edge, label %land.lhs.true7.i

if.end.i.filemap_check_errors.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %filemap_check_errors.exit

land.lhs.true7.i:                                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  %call9.i = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %flags.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  %spec.select16.i = select i1 %tobool10.not.i, i32 %ret.0.i, i32 -5
  br label %filemap_check_errors.exit

filemap_check_errors.exit:                        ; preds = %land.lhs.true7.i, %if.end.i.filemap_check_errors.exit_crit_edge
  %ret.1.i = phi i32 [ %ret.0.i, %if.end.i.filemap_check_errors.exit_crit_edge ], [ %spec.select16.i, %land.lhs.true7.i ]
  ret i32 %ret.1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__filemap_fdatawait_range(ptr noundef %mapping, i64 noundef %start_byte, i64 noundef %end_byte) unnamed_addr #0 align 64 {
entry:
  %index = alloca i32, align 4
  %pvec = alloca %struct.pagevec, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #11
  %0 = lshr i64 %start_byte, 12
  %conv = trunc i64 %0 to i32
  %1 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %conv, ptr %index, align 4
  %2 = lshr i64 %end_byte, 12
  %conv2 = trunc i64 %2 to i32
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %pvec) #11
  %3 = call ptr @memset(ptr %pvec, i32 255, i32 64)
  call void @__sanitizer_cov_trace_cmp8(i64 %end_byte, i64 %start_byte)
  %cmp = icmp slt i64 %end_byte, %start_byte
  br i1 %cmp, label %entry.cleanup11_crit_edge, label %if.end

entry.cleanup11_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup11

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %pvec to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %pvec, align 4
  %percpu_pvec_drained.i = getelementptr inbounds %struct.pagevec, ptr %pvec, i32 0, i32 1
  %5 = ptrtoint ptr %percpu_pvec_drained.i to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %percpu_pvec_drained.i, align 1
  %6 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %conv2)
  %cmp4.not32 = icmp ugt i32 %7, %conv2
  br i1 %cmp4.not32, label %if.end.cleanup11_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  br label %while.body

if.end.cleanup11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup11

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %if.end.while.body_crit_edge
  %call = call i32 @pagevec_lookup_range_tag(ptr noundef nonnull %pvec, ptr noundef %mapping, ptr noundef nonnull %index, i32 noundef %conv2, i32 noundef 1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %while.body.cleanup11_crit_edge, label %while.body.for.body_crit_edge

while.body.for.body_crit_edge:                    ; preds = %while.body
  br label %for.body

while.body.cleanup11_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup11

for.body:                                         ; preds = %ClearPageError.exit.for.body_crit_edge, %while.body.for.body_crit_edge
  %i.031 = phi i32 [ %inc, %ClearPageError.exit.for.body_crit_edge ], [ 0, %while.body.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.pagevec, ptr %pvec, i32 0, i32 2, i32 %i.031
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  call void @wait_on_page_writeback(ptr noundef %9) #11
  %10 = getelementptr inbounds %struct.page, ptr %9, i32 0, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  %and.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !299

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %9, ptr noundef nonnull @.str.45) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #11, !srcloc !319
  unreachable

do.body7.i:                                       ; preds = %for.body
  %13 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %10, align 4
  %and.i31.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i)
  %tobool.not.i.i = icmp eq i32 %and.i31.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i = add i32 %14, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #13
  %15 = ptrtoint ptr %9 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %15, %if.end.i.i ]
  %16 = inttoptr i32 %retval.0.i.i to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %cmp.i.not.i = icmp eq i32 %18, -1
  %19 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %10, align 4
  %and.i32.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i)
  %tobool.not.i33.i = icmp eq i32 %and.i32.i, 0
  br i1 %cmp.i.not.i, label %if.then17.i, label %do.end24.i, !prof !300

if.then17.i:                                      ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i36.i, label %if.then.i35.i, !prof !299

if.then.i35.i:                                    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i34.i = add i32 %20, -1
  br label %_compound_head.exit38.i

if.end.i36.i:                                     ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #13
  %21 = ptrtoint ptr %9 to i32
  br label %_compound_head.exit38.i

_compound_head.exit38.i:                          ; preds = %if.end.i36.i, %if.then.i35.i
  %retval.0.i37.i = phi i32 [ %sub.i34.i, %if.then.i35.i ], [ %21, %if.end.i36.i ]
  %22 = inttoptr i32 %retval.0.i37.i to ptr
  call void @dump_page(ptr noundef %22, ptr noundef nonnull @.str.46) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #11, !srcloc !320
  unreachable

do.end24.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i43.i, label %if.then.i42.i, !prof !299

if.then.i42.i:                                    ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i41.i = add i32 %20, -1
  br label %ClearPageError.exit

if.end.i43.i:                                     ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #13
  %23 = ptrtoint ptr %9 to i32
  br label %ClearPageError.exit

ClearPageError.exit:                              ; preds = %if.end.i43.i, %if.then.i42.i
  %retval.0.i44.i = phi i32 [ %sub.i41.i, %if.then.i42.i ], [ %23, %if.end.i43.i ]
  %24 = inttoptr i32 %retval.0.i44.i to ptr
  call void @_clear_bit(i32 noundef 8, ptr noundef %24) #11
  %inc = add nuw i32 %i.031, 1
  %exitcond.not = icmp eq i32 %inc, %call
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %ClearPageError.exit.for.body_crit_edge

ClearPageError.exit.for.body_crit_edge:           ; preds = %ClearPageError.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %ClearPageError.exit
  %25 = ptrtoint ptr %pvec to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %pvec, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.not.i24 = icmp eq i8 %26, 0
  br i1 %tobool.not.i24, label %for.cond.for.end_crit_edge.cleanup_crit_edge, label %if.then.i25

for.cond.for.end_crit_edge.cleanup_crit_edge:     ; preds = %for.cond.for.end_crit_edge
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then.i25:                                      ; preds = %for.cond.for.end_crit_edge
  call void @__sanitizer_cov_trace_pc() #13
  call void @__pagevec_release(ptr noundef nonnull %pvec) #11
  br label %cleanup

cleanup:                                          ; preds = %if.then.i25, %for.cond.for.end_crit_edge.cleanup_crit_edge
  call void @__might_resched(ptr noundef nonnull @.str.6, i32 noundef 524, i32 noundef 0) #11
  %call.i = call i32 @__cond_resched() #11
  %27 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %index, align 4
  %cmp4.not = icmp ugt i32 %28, %conv2
  br i1 %cmp4.not, label %cleanup.cleanup11_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.body

cleanup.cleanup11_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup11

cleanup11:                                        ; preds = %cleanup.cleanup11_crit_edge, %while.body.cleanup11_crit_edge, %if.end.cleanup11_crit_edge, %entry.cleanup11_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %pvec) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_fdatawait_range_keep_errors(ptr noundef %mapping, i64 noundef %start_byte, i64 noundef %end_byte) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__filemap_fdatawait_range(ptr noundef %mapping, i64 noundef %start_byte, i64 noundef %end_byte)
  %flags.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.filemap_check_and_keep_errors.exit_crit_edge

entry.filemap_check_and_keep_errors.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %filemap_check_and_keep_errors.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool3.not.i = icmp eq i32 %4, 0
  %..i = select i1 %tobool3.not.i, i32 0, i32 -28
  br label %filemap_check_and_keep_errors.exit

filemap_check_and_keep_errors.exit:               ; preds = %if.end.i, %entry.filemap_check_and_keep_errors.exit_crit_edge
  %retval.0.i = phi i32 [ -5, %entry.filemap_check_and_keep_errors.exit_crit_edge ], [ %..i, %if.end.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @file_fdatawait_range(ptr noundef %file, i64 noundef %start_byte, i64 noundef %end_byte) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %f_mapping = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 18
  %0 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_mapping, align 4
  tail call fastcc void @__filemap_fdatawait_range(ptr noundef %1, i64 noundef %start_byte, i64 noundef %end_byte)
  %call = tail call i32 @file_check_and_advance_wb_err(ptr noundef %file)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @file_check_and_advance_wb_err(ptr noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %f_wb_err = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 19
  %0 = ptrtoint ptr %f_wb_err to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %f_wb_err, align 8
  %f_mapping = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 18
  %2 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_mapping, align 4
  %wb_err = getelementptr inbounds %struct.address_space, ptr %3, i32 0, i32 11
  %call = tail call i32 @errseq_check(ptr noundef %wb_err, i32 noundef %1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %f_lock = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 4
  tail call void @_raw_spin_lock(ptr noundef %f_lock) #11
  %4 = ptrtoint ptr %f_wb_err to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %f_wb_err, align 8
  %call4 = tail call i32 @errseq_check_and_advance(ptr noundef %wb_err, ptr noundef %f_wb_err) #11
  tail call fastcc void @trace_file_check_and_advance_wb_err(ptr noundef %file, i32 noundef %5)
  tail call void @_raw_spin_unlock(ptr noundef %f_lock) #11
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %err.0 = phi i32 [ %call4, %if.then ], [ 0, %entry.if.end_crit_edge ]
  %flags = getelementptr inbounds %struct.address_space, ptr %3, i32 0, i32 10
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %flags) #11
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %flags) #11
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_fdatawait_keep_errors(ptr noundef %mapping) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__filemap_fdatawait_range(ptr noundef %mapping, i64 noundef 0, i64 noundef 9223372036854775807)
  %flags.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.filemap_check_and_keep_errors.exit_crit_edge

entry.filemap_check_and_keep_errors.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %filemap_check_and_keep_errors.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool3.not.i = icmp eq i32 %4, 0
  %..i = select i1 %tobool3.not.i, i32 0, i32 -28
  br label %filemap_check_and_keep_errors.exit

filemap_check_and_keep_errors.exit:               ; preds = %if.end.i, %entry.filemap_check_and_keep_errors.exit_crit_edge
  %retval.0.i = phi i32 [ -5, %entry.filemap_check_and_keep_errors.exit_crit_edge ], [ %..i, %if.end.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @filemap_range_has_writeback(ptr noundef %mapping, i64 noundef %start_byte, i64 noundef %end_byte) #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %5 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %i_pages, ptr %xas, align 4
  %6 = lshr i64 %start_byte, 12
  %conv = trunc i64 %6 to i32
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 3 to ptr), ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %3, align 4
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %4, align 4
  %12 = lshr i64 %end_byte, 12
  %conv2 = trunc i64 %12 to i32
  call void @__sanitizer_cov_trace_cmp8(i64 %end_byte, i64 %start_byte)
  %cmp = icmp slt i64 %end_byte, %start_byte
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %13 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %16, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %call = call ptr @xas_find(ptr noundef nonnull %xas, i32 noundef %conv2) #11
  %tobool94.not = icmp eq ptr %call, null
  br i1 %tobool94.not, label %rcu_read_lock.exit.for.end_crit_edge, label %rcu_read_lock.exit.for.body_crit_edge

rcu_read_lock.exit.for.body_crit_edge:            ; preds = %rcu_read_lock.exit
  br label %for.body

rcu_read_lock.exit.for.end_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %rcu_read_lock.exit.for.body_crit_edge
  %page.095 = phi ptr [ %call19, %for.inc.for.body_crit_edge ], [ %call, %rcu_read_lock.exit.for.body_crit_edge ]
  %magicptr.i = ptrtoint ptr %page.095 to i32
  %17 = zext i32 %magicptr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.59)
  switch i32 %magicptr.i, label %if.end6 [
    i32 1030, label %for.body.for.inc_crit_edge
    i32 1026, label %if.end4.i
  ]

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.end4.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  %18 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 3 to ptr), ptr %2, align 4
  br label %for.inc

if.end6:                                          ; preds = %for.body
  %and.i = and i32 %magicptr.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end9, label %if.end6.for.inc_crit_edge

if.end6.for.inc_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.end9:                                          ; preds = %if.end6
  %19 = getelementptr inbounds %struct.page, ptr %page.095, i32 0, i32 1
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  %and.i.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end9._compound_head.exit.i_crit_edge, label %if.then.i.i, !prof !299

if.end9._compound_head.exit.i_crit_edge:          ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #13
  br label %_compound_head.exit.i

if.then.i.i:                                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i = add i32 %21, -1
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.then.i.i, %if.end9._compound_head.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %magicptr.i, %if.end9._compound_head.exit.i_crit_edge ]
  %22 = inttoptr i32 %retval.0.i.i to ptr
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %22, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %24)
  %cmp.i.not.i = icmp eq i32 %24, -1
  %25 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %19, align 4
  %and.i13.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i33, label %do.end8.i, !prof !300

if.then.i33:                                      ; preds = %_compound_head.exit.i
  %magicptr.i.le124 = ptrtoint ptr %page.095 to i32
  br i1 %tobool.not.i14.i, label %if.then.i33._compound_head.exit19.i_crit_edge, label %if.then.i16.i, !prof !299

if.then.i33._compound_head.exit19.i_crit_edge:    ; preds = %if.then.i33
  call void @__sanitizer_cov_trace_pc() #13
  br label %_compound_head.exit19.i

if.then.i16.i:                                    ; preds = %if.then.i33
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i15.i = add i32 %26, -1
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.then.i16.i, %if.then.i33._compound_head.exit19.i_crit_edge
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %magicptr.i.le124, %if.then.i33._compound_head.exit19.i_crit_edge ]
  %27 = inttoptr i32 %retval.0.i18.i to ptr
  call void @dump_page(ptr noundef %27, ptr noundef nonnull @.str.46) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #11, !srcloc !321
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %do.end8.i.PageDirty.exit_crit_edge, label %if.then.i23.i, !prof !299

do.end8.i.PageDirty.exit_crit_edge:               ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %PageDirty.exit

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i22.i = add i32 %26, -1
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.then.i23.i, %do.end8.i.PageDirty.exit_crit_edge
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %magicptr.i, %do.end8.i.PageDirty.exit_crit_edge ]
  %28 = inttoptr i32 %retval.0.i25.i to ptr
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %28, align 4
  %31 = and i32 %30, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool11.not = icmp eq i32 %31, 0
  br i1 %tobool11.not, label %lor.lhs.false, label %PageDirty.exit.for.end_crit_edge

PageDirty.exit.for.end_crit_edge:                 ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

lor.lhs.false:                                    ; preds = %PageDirty.exit
  %32 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %19, align 4
  %and.i.i34 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i34)
  %tobool.not.i.i35 = icmp eq i32 %and.i.i34, 0
  br i1 %tobool.not.i.i35, label %lor.lhs.false._compound_head.exit.i41_crit_edge, label %if.then.i.i37, !prof !299

lor.lhs.false._compound_head.exit.i41_crit_edge:  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %_compound_head.exit.i41

if.then.i.i37:                                    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i36 = add i32 %33, -1
  br label %_compound_head.exit.i41

_compound_head.exit.i41:                          ; preds = %if.then.i.i37, %lor.lhs.false._compound_head.exit.i41_crit_edge
  %retval.0.i.i39 = phi i32 [ %sub.i.i36, %if.then.i.i37 ], [ %magicptr.i, %lor.lhs.false._compound_head.exit.i41_crit_edge ]
  %34 = inttoptr i32 %retval.0.i.i39 to ptr
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %36)
  %cmp.i.not.i40 = icmp eq i32 %36, -1
  %37 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %19, align 4
  %and.i16.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i40, label %if.then.i42, label %do.end10.i, !prof !300

if.then.i42:                                      ; preds = %_compound_head.exit.i41
  %magicptr.i.le122 = ptrtoint ptr %page.095 to i32
  br i1 %tobool.not.i17.i, label %if.then.i42._compound_head.exit22.i_crit_edge, label %if.then.i19.i, !prof !299

if.then.i42._compound_head.exit22.i_crit_edge:    ; preds = %if.then.i42
  call void @__sanitizer_cov_trace_pc() #13
  br label %_compound_head.exit22.i

if.then.i19.i:                                    ; preds = %if.then.i42
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i18.i = add i32 %38, -1
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.then.i19.i, %if.then.i42._compound_head.exit22.i_crit_edge
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %magicptr.i.le122, %if.then.i42._compound_head.exit22.i_crit_edge ]
  %39 = inttoptr i32 %retval.0.i21.i to ptr
  call void @dump_page(ptr noundef %39, ptr noundef nonnull @.str.46) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #11, !srcloc !322
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i41
  br i1 %tobool.not.i17.i, label %do.end10.i.PageLocked.exit_crit_edge, label %if.then.i26.i, !prof !299

do.end10.i.PageLocked.exit_crit_edge:             ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %PageLocked.exit

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i25.i = add i32 %38, -1
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.then.i26.i, %do.end10.i.PageLocked.exit_crit_edge
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %magicptr.i, %do.end10.i.PageLocked.exit_crit_edge ]
  %40 = inttoptr i32 %retval.0.i28.i to ptr
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  %and1.i.i43 = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i43)
  %tobool13.not = icmp eq i32 %and1.i.i43, 0
  br i1 %tobool13.not, label %lor.lhs.false14, label %PageLocked.exit.for.end_crit_edge

PageLocked.exit.for.end_crit_edge:                ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

lor.lhs.false14:                                  ; preds = %PageLocked.exit
  %43 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %19, align 4
  %and.i.i44 = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i44)
  %tobool.not.i.i45 = icmp eq i32 %and.i.i44, 0
  br i1 %tobool.not.i.i45, label %lor.lhs.false14._compound_head.exit.i53_crit_edge, label %if.then.i.i47, !prof !299

lor.lhs.false14._compound_head.exit.i53_crit_edge: ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #13
  br label %_compound_head.exit.i53

if.then.i.i47:                                    ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i46 = add i32 %44, -1
  br label %_compound_head.exit.i53

_compound_head.exit.i53:                          ; preds = %if.then.i.i47, %lor.lhs.false14._compound_head.exit.i53_crit_edge
  %retval.0.i.i49 = phi i32 [ %sub.i.i46, %if.then.i.i47 ], [ %magicptr.i, %lor.lhs.false14._compound_head.exit.i53_crit_edge ]
  %45 = inttoptr i32 %retval.0.i.i49 to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %45, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %47)
  %cmp.i.not.i50 = icmp eq i32 %47, -1
  %48 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %19, align 4
  %and.i16.i51 = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i51)
  %tobool.not.i17.i52 = icmp eq i32 %and.i16.i51, 0
  br i1 %cmp.i.not.i50, label %if.then.i54, label %do.end10.i60, !prof !300

if.then.i54:                                      ; preds = %_compound_head.exit.i53
  %magicptr.i.le = ptrtoint ptr %page.095 to i32
  br i1 %tobool.not.i17.i52, label %if.then.i54._compound_head.exit22.i59_crit_edge, label %if.then.i19.i56, !prof !299

if.then.i54._compound_head.exit22.i59_crit_edge:  ; preds = %if.then.i54
  call void @__sanitizer_cov_trace_pc() #13
  br label %_compound_head.exit22.i59

if.then.i19.i56:                                  ; preds = %if.then.i54
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i18.i55 = add i32 %49, -1
  br label %_compound_head.exit22.i59

_compound_head.exit22.i59:                        ; preds = %if.then.i19.i56, %if.then.i54._compound_head.exit22.i59_crit_edge
  %retval.0.i21.i58 = phi i32 [ %sub.i18.i55, %if.then.i19.i56 ], [ %magicptr.i.le, %if.then.i54._compound_head.exit22.i59_crit_edge ]
  %50 = inttoptr i32 %retval.0.i21.i58 to ptr
  call void @dump_page(ptr noundef %50, ptr noundef nonnull @.str.46) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #11, !srcloc !323
  unreachable

do.end10.i60:                                     ; preds = %_compound_head.exit.i53
  br i1 %tobool.not.i17.i52, label %do.end10.i60.PageWriteback.exit_crit_edge, label %if.then.i26.i62, !prof !299

do.end10.i60.PageWriteback.exit_crit_edge:        ; preds = %do.end10.i60
  call void @__sanitizer_cov_trace_pc() #13
  br label %PageWriteback.exit

if.then.i26.i62:                                  ; preds = %do.end10.i60
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i25.i61 = add i32 %49, -1
  br label %PageWriteback.exit

PageWriteback.exit:                               ; preds = %if.then.i26.i62, %do.end10.i60.PageWriteback.exit_crit_edge
  %retval.0.i28.i64 = phi i32 [ %sub.i25.i61, %if.then.i26.i62 ], [ %magicptr.i, %do.end10.i60.PageWriteback.exit_crit_edge ]
  %51 = inttoptr i32 %retval.0.i28.i64 to ptr
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  %54 = and i32 %53, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool16.not = icmp eq i32 %54, 0
  br i1 %tobool16.not, label %PageWriteback.exit.for.inc_crit_edge, label %PageWriteback.exit.for.end_crit_edge

PageWriteback.exit.for.end_crit_edge:             ; preds = %PageWriteback.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

PageWriteback.exit.for.inc_crit_edge:             ; preds = %PageWriteback.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

for.inc:                                          ; preds = %PageWriteback.exit.for.inc_crit_edge, %if.end6.for.inc_crit_edge, %if.end4.i, %for.body.for.inc_crit_edge
  %call19 = call fastcc ptr @xas_next_entry(ptr noundef nonnull %xas, i32 noundef %conv2)
  %tobool.not = icmp eq ptr %call19, null
  br i1 %tobool.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %PageWriteback.exit.for.end_crit_edge, %PageLocked.exit.for.end_crit_edge, %PageDirty.exit.for.end_crit_edge, %rcu_read_lock.exit.for.end_crit_edge
  %tobool.lcssa = phi i1 [ false, %rcu_read_lock.exit.for.end_crit_edge ], [ true, %PageDirty.exit.for.end_crit_edge ], [ true, %PageLocked.exit.for.end_crit_edge ], [ true, %PageWriteback.exit.for.end_crit_edge ], [ false, %for.inc.for.end_crit_edge ]
  %call.i67 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i67, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i70

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i70:                                ; preds = %for.end
  %call1.i68 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i68)
  %tobool.not.i69 = icmp eq i32 %call1.i68, 0
  br i1 %tobool.not.i69, label %land.lhs.true.i70.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i72

land.lhs.true.i70.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i70
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i72:                               ; preds = %land.lhs.true.i70
  %.b4.i71 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i71, label %land.lhs.true2.i72.rcu_read_unlock.exit_crit_edge, label %if.then.i73

land.lhs.true2.i72.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i72
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i73:                                      ; preds = %land.lhs.true2.i72
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i73, %land.lhs.true2.i72.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i70.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %55 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i74 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i.i.i.i74 to ptr
  %preempt_count.i.i.i.i75 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 1
  %57 = ptrtoint ptr %preempt_count.i.i.i.i75 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %preempt_count.i.i.i.i75, align 4
  %sub.i.i.i = add i32 %58, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i75, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %tobool.lcssa, %rcu_read_unlock.exit ], [ false, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i1 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @xas_next_entry(ptr noundef %xas, i32 noundef %max) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %xa_node = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %0 = ptrtoint ptr %xa_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %xa_node, align 4
  %2 = ptrtoint ptr %1 to i32
  %and.i = and i32 %2, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp ne i32 %and.i, 0
  %tobool1.not.i = icmp eq ptr %1, null
  %spec.select.i = or i1 %tobool1.not.i, %tobool.not.i
  br i1 %spec.select.i, label %entry.cleanup.sink.split_crit_edge, label %lor.lhs.false, !prof !300

entry.cleanup.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

lor.lhs.false:                                    ; preds = %entry
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %lor.rhs, label %lor.lhs.false.cleanup.sink.split_crit_edge, !prof !299

lor.lhs.false.cleanup.sink.split_crit_edge:       ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

lor.rhs:                                          ; preds = %lor.lhs.false
  %xa_offset = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %5 = ptrtoint ptr %xa_offset to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %xa_offset, align 2
  %conv2 = zext i8 %6 to i32
  %xa_index = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %7 = ptrtoint ptr %xa_index to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %xa_index, align 4
  %and = and i32 %8, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %conv2)
  %cmp.not = icmp eq i32 %and, %conv2
  br i1 %cmp.not, label %lor.rhs.do.body_crit_edge, label %lor.rhs.cleanup.sink.split_crit_edge, !prof !299

lor.rhs.cleanup.sink.split_crit_edge:             ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

lor.rhs.do.body_crit_edge:                        ; preds = %lor.rhs
  br label %do.body

do.body:                                          ; preds = %if.end44.do.body_crit_edge, %lor.rhs.do.body_crit_edge
  %9 = ptrtoint ptr %xa_index to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %xa_index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %max)
  %cmp8.not = icmp ult i32 %10, %max
  br i1 %cmp8.not, label %if.end18, label %do.body.cleanup.sink.split_crit_edge, !prof !299

do.body.cleanup.sink.split_crit_edge:             ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

if.end18:                                         ; preds = %do.body
  %11 = ptrtoint ptr %xa_offset to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %xa_offset, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 63, i8 %12)
  %cmp21 = icmp eq i8 %12, 63
  br i1 %cmp21, label %if.end18.cleanup.sink.split_crit_edge, label %if.end31, !prof !300

if.end18.cleanup.sink.split_crit_edge:            ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

if.end31:                                         ; preds = %if.end18
  %conv20 = zext i8 %12 to i32
  %13 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %xas, align 4
  %add = add nuw nsw i32 %conv20, 1
  %arrayidx.i = getelementptr %struct.xa_node, ptr %1, i32 0, i32 7, i32 %add
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %arrayidx.i, align 4
  %dep_map.i = getelementptr inbounds %struct.anon.4, ptr %14, i32 0, i32 1
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i73 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i73, label %lor.lhs.false.i, label %if.end31.xa_entry.exit_crit_edge

if.end31.xa_entry.exit_crit_edge:                 ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  br label %xa_entry.exit

lor.lhs.false.i:                                  ; preds = %if.end31
  %call4.i = tail call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.xa_entry.exit_crit_edge

lor.lhs.false.i.xa_entry.exit_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xa_entry.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call6.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %land.lhs.true.i.xa_entry.exit_crit_edge, label %land.lhs.true8.i

land.lhs.true.i.xa_entry.exit_crit_edge:          ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xa_entry.exit

land.lhs.true8.i:                                 ; preds = %land.lhs.true.i
  %.b13.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i, label %land.lhs.true8.i.xa_entry.exit_crit_edge, label %if.then.i

land.lhs.true8.i.xa_entry.exit_crit_edge:         ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xa_entry.exit

if.then.i:                                        ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @xa_entry.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 1183, ptr noundef nonnull @.str.35) #11
  br label %xa_entry.exit

xa_entry.exit:                                    ; preds = %if.then.i, %land.lhs.true8.i.xa_entry.exit_crit_edge, %land.lhs.true.i.xa_entry.exit_crit_edge, %lor.lhs.false.i.xa_entry.exit_crit_edge, %if.end31.xa_entry.exit_crit_edge
  %17 = ptrtoint ptr %16 to i32
  %and.i74 = and i32 %17, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i74)
  %cmp.i = icmp eq i32 %and.i74, 2
  br i1 %cmp.i, label %xa_entry.exit.cleanup.sink.split_crit_edge, label %if.end44, !prof !300

xa_entry.exit.cleanup.sink.split_crit_edge:       ; preds = %xa_entry.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

if.end44:                                         ; preds = %xa_entry.exit
  %18 = ptrtoint ptr %xa_offset to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %xa_offset, align 2
  %inc = add i8 %19, 1
  store i8 %inc, ptr %xa_offset, align 2
  %20 = ptrtoint ptr %xa_index to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %xa_index, align 4
  %inc47 = add i32 %21, 1
  store i32 %inc47, ptr %xa_index, align 4
  %tobool48.not = icmp eq ptr %16, null
  br i1 %tobool48.not, label %if.end44.do.body_crit_edge, label %if.end44.cleanup_crit_edge

if.end44.cleanup_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end44.do.body_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

cleanup.sink.split:                               ; preds = %xa_entry.exit.cleanup.sink.split_crit_edge, %if.end18.cleanup.sink.split_crit_edge, %do.body.cleanup.sink.split_crit_edge, %lor.rhs.cleanup.sink.split_crit_edge, %lor.lhs.false.cleanup.sink.split_crit_edge, %entry.cleanup.sink.split_crit_edge
  %call43 = tail call ptr @xas_find(ptr noundef %xas, i32 noundef %max) #11
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end44.cleanup_crit_edge
  %retval.0 = phi ptr [ %call43, %cleanup.sink.split ], [ %16, %if.end44.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_write_and_wait_range(ptr noundef %mapping, i64 noundef %lstart, i64 noundef %lend) #0 align 64 {
entry:
  %wbc.i = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %nrpages.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 7
  %0 = ptrtoint ptr %nrpages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nrpages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %if.else7, label %if.then

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc.i) #11
  %2 = getelementptr inbounds i8, ptr %wbc.i, i32 24
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 4303355903, ptr %2, align 8, !annotation !302
  %4 = ptrtoint ptr %wbc.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 2147483647, ptr %wbc.i, align 8
  %pages_skipped.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 1
  %5 = ptrtoint ptr %pages_skipped.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %pages_skipped.i, align 4
  %range_start.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 2
  %6 = ptrtoint ptr %range_start.i to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %lstart, ptr %range_start.i, align 8
  %range_end.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 3
  %7 = ptrtoint ptr %range_end.i to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %lend, ptr %range_end.i, align 8
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 6
  %8 = call ptr @memset(ptr %wb.i, i32 0, i32 32)
  %call.i = call i32 @filemap_fdatawrite_wbc(ptr noundef %mapping, ptr noundef nonnull %wbc.i) #11
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -5, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, -5
  br i1 %cmp.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  call fastcc void @__filemap_fdatawait_range(ptr noundef %mapping, i64 noundef %lstart, i64 noundef %lend) #11
  %flags.i.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  %9 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %flags.i.i, align 4
  %11 = and i32 %10, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i.i = icmp eq i32 %11, 0
  br i1 %tobool.not.i.i, label %if.then2.if.end.i.i_crit_edge, label %land.lhs.true.i.i

if.then2.if.end.i.i_crit_edge:                    ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #13
  %call2.i.i = call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %flags.i.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  %spec.select.i.i = select i1 %tobool3.not.i.i, i32 0, i32 -28
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i, %if.then2.if.end.i.i_crit_edge
  %ret.0.i.i = phi i32 [ 0, %if.then2.if.end.i.i_crit_edge ], [ %spec.select.i.i, %land.lhs.true.i.i ]
  %12 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %flags.i.i, align 4
  %and1.i17.i.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i17.i.i)
  %tobool6.not.i.i = icmp eq i32 %and1.i17.i.i, 0
  br i1 %tobool6.not.i.i, label %if.end.i.i.filemap_fdatawait_range.exit_crit_edge, label %land.lhs.true7.i.i

if.end.i.i.filemap_fdatawait_range.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %filemap_fdatawait_range.exit

land.lhs.true7.i.i:                               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %call9.i.i = call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %flags.i.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %tobool10.not.i.i = icmp eq i32 %call9.i.i, 0
  %spec.select16.i.i = select i1 %tobool10.not.i.i, i32 %ret.0.i.i, i32 -5
  br label %filemap_fdatawait_range.exit

filemap_fdatawait_range.exit:                     ; preds = %land.lhs.true7.i.i, %if.end.i.i.filemap_fdatawait_range.exit_crit_edge
  %ret.1.i.i = phi i32 [ %ret.0.i.i, %if.end.i.i.filemap_fdatawait_range.exit_crit_edge ], [ %spec.select16.i.i, %land.lhs.true7.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  %spec.select = select i1 %tobool.not, i32 %ret.1.i.i, i32 %call.i
  br label %if.end9

if.else:                                          ; preds = %if.then
  %flags.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  %14 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %flags.i, align 4
  %16 = and i32 %15, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i, label %if.else.if.end.i_crit_edge, label %land.lhs.true.i

if.else.if.end.i_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  %call2.i = call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %flags.i) #11
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i, %if.else.if.end.i_crit_edge
  %17 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %flags.i, align 4
  %and1.i17.i = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i17.i)
  %tobool6.not.i = icmp eq i32 %and1.i17.i, 0
  br i1 %tobool6.not.i, label %if.end.i.if.end9_crit_edge, label %land.lhs.true7.i

if.end.i.if.end9_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end9

land.lhs.true7.i:                                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  %call9.i = call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %flags.i) #11
  br label %if.end9

if.else7:                                         ; preds = %entry
  %flags.i18 = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  %19 = ptrtoint ptr %flags.i18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %flags.i18, align 4
  %21 = and i32 %20, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i19 = icmp eq i32 %21, 0
  br i1 %tobool.not.i19, label %if.else7.if.end.i27_crit_edge, label %land.lhs.true.i23

if.else7.if.end.i27_crit_edge:                    ; preds = %if.else7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i27

land.lhs.true.i23:                                ; preds = %if.else7
  call void @__sanitizer_cov_trace_pc() #13
  %call2.i20 = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %flags.i18) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i20)
  %tobool3.not.i21 = icmp eq i32 %call2.i20, 0
  %spec.select.i22 = select i1 %tobool3.not.i21, i32 0, i32 -28
  br label %if.end.i27

if.end.i27:                                       ; preds = %land.lhs.true.i23, %if.else7.if.end.i27_crit_edge
  %ret.0.i24 = phi i32 [ 0, %if.else7.if.end.i27_crit_edge ], [ %spec.select.i22, %land.lhs.true.i23 ]
  %22 = ptrtoint ptr %flags.i18 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %flags.i18, align 4
  %and1.i17.i25 = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i17.i25)
  %tobool6.not.i26 = icmp eq i32 %and1.i17.i25, 0
  br i1 %tobool6.not.i26, label %if.end.i27.if.end9_crit_edge, label %land.lhs.true7.i31

if.end.i27.if.end9_crit_edge:                     ; preds = %if.end.i27
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end9

land.lhs.true7.i31:                               ; preds = %if.end.i27
  call void @__sanitizer_cov_trace_pc() #13
  %call9.i28 = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %flags.i18) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i28)
  %tobool10.not.i29 = icmp eq i32 %call9.i28, 0
  %spec.select16.i30 = select i1 %tobool10.not.i29, i32 %ret.0.i24, i32 -5
  br label %if.end9

if.end9:                                          ; preds = %land.lhs.true7.i31, %if.end.i27.if.end9_crit_edge, %land.lhs.true7.i, %if.end.i.if.end9_crit_edge, %filemap_fdatawait_range.exit
  %err.1 = phi i32 [ %spec.select, %filemap_fdatawait_range.exit ], [ -5, %if.end.i.if.end9_crit_edge ], [ -5, %land.lhs.true7.i ], [ %ret.0.i24, %if.end.i27.if.end9_crit_edge ], [ %spec.select16.i30, %land.lhs.true7.i31 ]
  ret i32 %err.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__filemap_set_wb_err(ptr noundef %mapping, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %wb_err = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 11
  %call = tail call i32 @errseq_set(ptr noundef %wb_err, i32 noundef %err) #11
  tail call fastcc void @trace_filemap_set_wb_err(ptr noundef %mapping, i32 noundef %call)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @errseq_set(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_filemap_set_wb_err(ptr noundef %mapping, i32 noundef %eseq) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_filemap_set_wb_err, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_filemap_set_wb_err, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !306

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !299

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.36, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !324
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_filemap_set_wb_err, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %mapping, i32 noundef %eseq) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !325
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !325
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !299

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.36, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !309
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_filemap_set_wb_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_filemap_set_wb_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_filemap_set_wb_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 82, ptr noundef nonnull @.str.35) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !310
  %38 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @errseq_check(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @errseq_check_and_advance(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_file_check_and_advance_wb_err(ptr noundef %file, i32 noundef %old) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_file_check_and_advance_wb_err, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_file_check_and_advance_wb_err, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !306

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !299

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.36, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !326
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_file_check_and_advance_wb_err, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %file, i32 noundef %old) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !327
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !327
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !299

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.36, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !309
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_file_check_and_advance_wb_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_file_check_and_advance_wb_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_file_check_and_advance_wb_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 114, ptr noundef nonnull @.str.35) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !310
  %38 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @file_write_and_wait_range(ptr noundef %file, i64 noundef %lstart, i64 noundef %lend) #0 align 64 {
entry:
  %wbc.i = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %f_mapping = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 18
  %0 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_mapping, align 4
  %nrpages.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %nrpages.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nrpages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not = icmp eq i32 %3, 0
  br i1 %tobool.i.not, label %if.end3.thread, label %if.then

if.end3.thread:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %call415 = tail call i32 @file_check_and_advance_wb_err(ptr noundef %file)
  br label %11

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc.i) #11
  %4 = getelementptr inbounds i8, ptr %wbc.i, i32 24
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 4303355903, ptr %4, align 8, !annotation !302
  %6 = ptrtoint ptr %wbc.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 2147483647, ptr %wbc.i, align 8
  %pages_skipped.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 1
  %7 = ptrtoint ptr %pages_skipped.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %pages_skipped.i, align 4
  %range_start.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 2
  %8 = ptrtoint ptr %range_start.i to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %lstart, ptr %range_start.i, align 8
  %range_end.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 3
  %9 = ptrtoint ptr %range_end.i to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %lend, ptr %range_end.i, align 8
  %wb.i = getelementptr inbounds %struct.writeback_control, ptr %wbc.i, i32 0, i32 6
  %10 = call ptr @memset(ptr %wb.i, i32 0, i32 32)
  %call.i = call i32 @filemap_fdatawrite_wbc(ptr noundef %1, ptr noundef nonnull %wbc.i) #11
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -5, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, -5
  br i1 %cmp.not, label %if.end3.thread18, label %if.end3

if.end3.thread18:                                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  %call420 = call i32 @file_check_and_advance_wb_err(ptr noundef %file)
  br label %12

if.end3:                                          ; preds = %if.then
  call fastcc void @__filemap_fdatawait_range(ptr noundef %1, i64 noundef %lstart, i64 noundef %lend)
  %call4 = call i32 @file_check_and_advance_wb_err(ptr noundef %file)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end3._crit_edge, label %if.end3._crit_edge22

if.end3._crit_edge22:                             ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #13
  br label %12

if.end3._crit_edge:                               ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #13
  br label %11

11:                                               ; preds = %if.end3._crit_edge, %if.end3.thread
  %call417 = phi i32 [ %call415, %if.end3.thread ], [ %call4, %if.end3._crit_edge ]
  br label %12

12:                                               ; preds = %11, %if.end3._crit_edge22, %if.end3.thread18
  %13 = phi i32 [ %call417, %11 ], [ %call.i, %if.end3._crit_edge22 ], [ -5, %if.end3.thread18 ]
  ret i32 %13
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @replace_page_cache_page(ptr noundef %old, ptr noundef %new) #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %old, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i176, !prof !299

if.then.i176:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %3 = ptrtoint ptr %old to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i176
  %retval.0.i = phi i32 [ %sub.i, %if.then.i176 ], [ %3, %if.end.i ]
  %4 = inttoptr i32 %retval.0.i to ptr
  %5 = getelementptr inbounds %struct.page, ptr %new, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %and.i177 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i177)
  %tobool.not.i178 = icmp eq i32 %and.i177, 0
  br i1 %tobool.not.i178, label %if.end.i181, label %if.then.i180, !prof !299

if.then.i180:                                     ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i179 = add i32 %7, -1
  br label %_compound_head.exit183

if.end.i181:                                      ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #13
  %8 = ptrtoint ptr %new to i32
  br label %_compound_head.exit183

_compound_head.exit183:                           ; preds = %if.end.i181, %if.then.i180
  %retval.0.i182 = phi i32 [ %sub.i179, %if.then.i180 ], [ %8, %if.end.i181 ]
  %9 = inttoptr i32 %retval.0.i182 to ptr
  %mapping2 = getelementptr inbounds %struct.page, ptr %old, i32 0, i32 1, i32 0, i32 1
  %10 = ptrtoint ptr %mapping2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mapping2, align 4
  %a_ops = getelementptr inbounds %struct.address_space, ptr %11, i32 0, i32 9
  %12 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %a_ops, align 4
  %freepage3 = getelementptr inbounds %struct.address_space_operations, ptr %13, i32 0, i32 11
  %14 = ptrtoint ptr %freepage3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %freepage3, align 4
  %index = getelementptr inbounds %struct.page, ptr %old, i32 0, i32 1, i32 0, i32 2
  %16 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %index, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %18 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %19 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %20 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %21 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %22 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %11, i32 0, i32 1
  %23 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %i_pages, ptr %xas, align 4
  %24 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %17, ptr %18, align 4
  %25 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %19, align 4
  %26 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr inttoptr (i32 3 to ptr), ptr %20, align 4
  %27 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %21, align 4
  %28 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %22, align 4
  %29 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %30, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %_compound_head.exit183
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i = add i32 %30, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %_compound_head.exit183
  call void @__sanitizer_cov_trace_pc() #13
  %31 = ptrtoint ptr %old to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %31, %if.end.i.i ]
  %32 = inttoptr i32 %retval.0.i.i to ptr
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %32, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %34)
  %cmp.i.not.i = icmp eq i32 %34, -1
  %35 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %0, align 4
  %and.i16.i = and i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !300

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !299

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i18.i = add i32 %36, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %37 = ptrtoint ptr %old to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %37, %if.end.i20.i ]
  %38 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %38, ptr noundef nonnull @.str.46) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #11, !srcloc !322
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !299

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i25.i = add i32 %36, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #13
  %39 = ptrtoint ptr %old to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %39, %if.end.i27.i ]
  %40 = inttoptr i32 %retval.0.i28.i to ptr
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  %and1.i.i = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not, label %if.then, label %do.body14, !prof !300

if.then:                                          ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %old, ptr noundef nonnull @.str) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 810, 0\0A.popsection", ""() #11, !srcloc !328
  unreachable

do.body14:                                        ; preds = %PageLocked.exit
  %43 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %5, align 4
  %and.i.i107 = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i107)
  %tobool.not.i.i108 = icmp eq i32 %and.i.i107, 0
  br i1 %tobool.not.i.i108, label %if.end.i.i111, label %if.then.i.i110, !prof !299

if.then.i.i110:                                   ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i109 = add i32 %44, -1
  br label %_compound_head.exit.i116

if.end.i.i111:                                    ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #13
  %45 = ptrtoint ptr %new to i32
  br label %_compound_head.exit.i116

_compound_head.exit.i116:                         ; preds = %if.end.i.i111, %if.then.i.i110
  %retval.0.i.i112 = phi i32 [ %sub.i.i109, %if.then.i.i110 ], [ %45, %if.end.i.i111 ]
  %46 = inttoptr i32 %retval.0.i.i112 to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %46, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %48)
  %cmp.i.not.i113 = icmp eq i32 %48, -1
  %49 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %5, align 4
  %and.i16.i114 = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i114)
  %tobool.not.i17.i115 = icmp eq i32 %and.i16.i114, 0
  br i1 %cmp.i.not.i113, label %if.then.i117, label %do.end10.i123, !prof !300

if.then.i117:                                     ; preds = %_compound_head.exit.i116
  br i1 %tobool.not.i17.i115, label %if.end.i20.i120, label %if.then.i19.i119, !prof !299

if.then.i19.i119:                                 ; preds = %if.then.i117
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i18.i118 = add i32 %50, -1
  br label %_compound_head.exit22.i122

if.end.i20.i120:                                  ; preds = %if.then.i117
  call void @__sanitizer_cov_trace_pc() #13
  %51 = ptrtoint ptr %new to i32
  br label %_compound_head.exit22.i122

_compound_head.exit22.i122:                       ; preds = %if.end.i20.i120, %if.then.i19.i119
  %retval.0.i21.i121 = phi i32 [ %sub.i18.i118, %if.then.i19.i119 ], [ %51, %if.end.i20.i120 ]
  %52 = inttoptr i32 %retval.0.i21.i121 to ptr
  tail call void @dump_page(ptr noundef %52, ptr noundef nonnull @.str.46) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #11, !srcloc !322
  unreachable

do.end10.i123:                                    ; preds = %_compound_head.exit.i116
  br i1 %tobool.not.i17.i115, label %if.end.i27.i126, label %if.then.i26.i125, !prof !299

if.then.i26.i125:                                 ; preds = %do.end10.i123
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i25.i124 = add i32 %50, -1
  br label %PageLocked.exit129

if.end.i27.i126:                                  ; preds = %do.end10.i123
  call void @__sanitizer_cov_trace_pc() #13
  %53 = ptrtoint ptr %new to i32
  br label %PageLocked.exit129

PageLocked.exit129:                               ; preds = %if.end.i27.i126, %if.then.i26.i125
  %retval.0.i28.i127 = phi i32 [ %sub.i25.i124, %if.then.i26.i125 ], [ %53, %if.end.i27.i126 ]
  %54 = inttoptr i32 %retval.0.i28.i127 to ptr
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %54, align 4
  %and1.i.i128 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i128)
  %tobool16.not = icmp eq i32 %and1.i.i128, 0
  br i1 %tobool16.not, label %if.then25, label %do.body35, !prof !300

if.then25:                                        ; preds = %PageLocked.exit129
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %new, ptr noundef nonnull @.str.1) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 811, 0\0A.popsection", ""() #11, !srcloc !329
  unreachable

do.body35:                                        ; preds = %PageLocked.exit129
  %mapping36 = getelementptr inbounds %struct.page, ptr %new, i32 0, i32 1, i32 0, i32 1
  %57 = ptrtoint ptr %mapping36 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %mapping36, align 4
  %tobool37.not = icmp eq ptr %58, null
  br i1 %tobool37.not, label %do.end53, label %if.then44, !prof !299

if.then44:                                        ; preds = %do.body35
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %new, ptr noundef nonnull @.str.2) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 812, 0\0A.popsection", ""() #11, !srcloc !330
  unreachable

do.end53:                                         ; preds = %do.body35
  %59 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %5, align 4
  %and.i.i184 = and i32 %60, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i184)
  %tobool.not.i.i185 = icmp eq i32 %and.i.i184, 0
  br i1 %tobool.not.i.i185, label %if.end.i.i188, label %if.then.i.i187, !prof !299

if.then.i.i187:                                   ; preds = %do.end53
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i186 = add i32 %60, -1
  br label %_compound_head.exit.i190

if.end.i.i188:                                    ; preds = %do.end53
  call void @__sanitizer_cov_trace_pc() #13
  %61 = ptrtoint ptr %new to i32
  br label %_compound_head.exit.i190

_compound_head.exit.i190:                         ; preds = %if.end.i.i188, %if.then.i.i187
  %retval.0.i.i189 = phi i32 [ %sub.i.i186, %if.then.i.i187 ], [ %61, %if.end.i.i188 ]
  %62 = inttoptr i32 %retval.0.i.i189 to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %62, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %63 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %64, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !300

if.then.i1.i:                                     ; preds = %_compound_head.exit.i190
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %62, ptr noundef nonnull @.str.48) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #11, !srcloc !331
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i190
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %65 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !332
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@replace_page_cache_page, %if.then.i.i.i.i)) #11
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__page_ref_mod(ptr noundef %62, i32 noundef 1) #11
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %66 = ptrtoint ptr %mapping36 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %11, ptr %mapping36, align 4
  %index55 = getelementptr inbounds %struct.page, ptr %new, i32 0, i32 1, i32 0, i32 2
  %67 = ptrtoint ptr %index55 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %17, ptr %index55, align 4
  tail call void @mem_cgroup_migrate(ptr noundef %4, ptr noundef %9) #11
  %68 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %xas, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %69) #11
  %call57 = call ptr @xas_store(ptr noundef nonnull %xas, ptr noundef %new) #11
  %70 = ptrtoint ptr %mapping2 to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr null, ptr %mapping2, align 4
  call void @__mod_lruvec_page_state(ptr noundef %old, i32 noundef 19, i32 noundef -1) #11
  call void @__mod_lruvec_page_state(ptr noundef %new, i32 noundef 19, i32 noundef 1) #11
  %71 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %0, align 4
  %and.i.i130 = and i32 %72, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i130)
  %tobool.not.i.i131 = icmp eq i32 %and.i.i130, 0
  br i1 %tobool.not.i.i131, label %if.end.i.i134, label %if.then.i.i133, !prof !299

if.then.i.i133:                                   ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i132 = add i32 %72, -1
  br label %_compound_head.exit.i139

if.end.i.i134:                                    ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #13
  %73 = ptrtoint ptr %old to i32
  br label %_compound_head.exit.i139

_compound_head.exit.i139:                         ; preds = %if.end.i.i134, %if.then.i.i133
  %retval.0.i.i135 = phi i32 [ %sub.i.i132, %if.then.i.i133 ], [ %73, %if.end.i.i134 ]
  %74 = inttoptr i32 %retval.0.i.i135 to ptr
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %74, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %76)
  %cmp.i.not.i136 = icmp eq i32 %76, -1
  %77 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %0, align 4
  %and.i16.i137 = and i32 %78, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i137)
  %tobool.not.i17.i138 = icmp eq i32 %and.i16.i137, 0
  br i1 %cmp.i.not.i136, label %if.then.i140, label %do.end10.i146, !prof !300

if.then.i140:                                     ; preds = %_compound_head.exit.i139
  br i1 %tobool.not.i17.i138, label %if.end.i20.i143, label %if.then.i19.i142, !prof !299

if.then.i19.i142:                                 ; preds = %if.then.i140
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i18.i141 = add i32 %78, -1
  br label %_compound_head.exit22.i145

if.end.i20.i143:                                  ; preds = %if.then.i140
  call void @__sanitizer_cov_trace_pc() #13
  %79 = ptrtoint ptr %old to i32
  br label %_compound_head.exit22.i145

_compound_head.exit22.i145:                       ; preds = %if.end.i20.i143, %if.then.i19.i142
  %retval.0.i21.i144 = phi i32 [ %sub.i18.i141, %if.then.i19.i142 ], [ %79, %if.end.i20.i143 ]
  %80 = inttoptr i32 %retval.0.i21.i144 to ptr
  call void @dump_page(ptr noundef %80, ptr noundef nonnull @.str.46) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #11, !srcloc !333
  unreachable

do.end10.i146:                                    ; preds = %_compound_head.exit.i139
  br i1 %tobool.not.i17.i138, label %if.end.i27.i149, label %if.then.i26.i148, !prof !299

if.then.i26.i148:                                 ; preds = %do.end10.i146
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i25.i147 = add i32 %78, -1
  br label %PageSwapBacked.exit

if.end.i27.i149:                                  ; preds = %do.end10.i146
  call void @__sanitizer_cov_trace_pc() #13
  %81 = ptrtoint ptr %old to i32
  br label %PageSwapBacked.exit

PageSwapBacked.exit:                              ; preds = %if.end.i27.i149, %if.then.i26.i148
  %retval.0.i28.i150 = phi i32 [ %sub.i25.i147, %if.then.i26.i148 ], [ %81, %if.end.i27.i149 ]
  %82 = inttoptr i32 %retval.0.i28.i150 to ptr
  %83 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %82, align 4
  %85 = and i32 %84, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool68.not = icmp eq i32 %85, 0
  br i1 %tobool68.not, label %PageSwapBacked.exit.if.end70_crit_edge, label %if.then69

PageSwapBacked.exit.if.end70_crit_edge:           ; preds = %PageSwapBacked.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end70

if.then69:                                        ; preds = %PageSwapBacked.exit
  call void @__sanitizer_cov_trace_pc() #13
  call void @__mod_lruvec_page_state(ptr noundef %old, i32 noundef 23, i32 noundef -1) #11
  br label %if.end70

if.end70:                                         ; preds = %if.then69, %PageSwapBacked.exit.if.end70_crit_edge
  %86 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %5, align 4
  %and.i.i152 = and i32 %87, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i152)
  %tobool.not.i.i153 = icmp eq i32 %and.i.i152, 0
  br i1 %tobool.not.i.i153, label %if.end.i.i156, label %if.then.i.i155, !prof !299

if.then.i.i155:                                   ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i154 = add i32 %87, -1
  br label %_compound_head.exit.i161

if.end.i.i156:                                    ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #13
  %88 = ptrtoint ptr %new to i32
  br label %_compound_head.exit.i161

_compound_head.exit.i161:                         ; preds = %if.end.i.i156, %if.then.i.i155
  %retval.0.i.i157 = phi i32 [ %sub.i.i154, %if.then.i.i155 ], [ %88, %if.end.i.i156 ]
  %89 = inttoptr i32 %retval.0.i.i157 to ptr
  %90 = ptrtoint ptr %89 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %89, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %91)
  %cmp.i.not.i158 = icmp eq i32 %91, -1
  %92 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %5, align 4
  %and.i16.i159 = and i32 %93, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i159)
  %tobool.not.i17.i160 = icmp eq i32 %and.i16.i159, 0
  br i1 %cmp.i.not.i158, label %if.then.i162, label %do.end10.i168, !prof !300

if.then.i162:                                     ; preds = %_compound_head.exit.i161
  br i1 %tobool.not.i17.i160, label %if.end.i20.i165, label %if.then.i19.i164, !prof !299

if.then.i19.i164:                                 ; preds = %if.then.i162
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i18.i163 = add i32 %93, -1
  br label %_compound_head.exit22.i167

if.end.i20.i165:                                  ; preds = %if.then.i162
  call void @__sanitizer_cov_trace_pc() #13
  %94 = ptrtoint ptr %new to i32
  br label %_compound_head.exit22.i167

_compound_head.exit22.i167:                       ; preds = %if.end.i20.i165, %if.then.i19.i164
  %retval.0.i21.i166 = phi i32 [ %sub.i18.i163, %if.then.i19.i164 ], [ %94, %if.end.i20.i165 ]
  %95 = inttoptr i32 %retval.0.i21.i166 to ptr
  call void @dump_page(ptr noundef %95, ptr noundef nonnull @.str.46) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #11, !srcloc !333
  unreachable

do.end10.i168:                                    ; preds = %_compound_head.exit.i161
  br i1 %tobool.not.i17.i160, label %if.end.i27.i171, label %if.then.i26.i170, !prof !299

if.then.i26.i170:                                 ; preds = %do.end10.i168
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i25.i169 = add i32 %93, -1
  br label %PageSwapBacked.exit175

if.end.i27.i171:                                  ; preds = %do.end10.i168
  call void @__sanitizer_cov_trace_pc() #13
  %96 = ptrtoint ptr %new to i32
  br label %PageSwapBacked.exit175

PageSwapBacked.exit175:                           ; preds = %if.end.i27.i171, %if.then.i26.i170
  %retval.0.i28.i172 = phi i32 [ %sub.i25.i169, %if.then.i26.i170 ], [ %96, %if.end.i27.i171 ]
  %97 = inttoptr i32 %retval.0.i28.i172 to ptr
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load volatile i32, ptr %97, align 4
  %100 = and i32 %99, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %100)
  %tobool72.not = icmp eq i32 %100, 0
  br i1 %tobool72.not, label %PageSwapBacked.exit175.if.end74_crit_edge, label %if.then73

PageSwapBacked.exit175.if.end74_crit_edge:        ; preds = %PageSwapBacked.exit175
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end74

if.then73:                                        ; preds = %PageSwapBacked.exit175
  call void @__sanitizer_cov_trace_pc() #13
  call void @__mod_lruvec_page_state(ptr noundef %new, i32 noundef 23, i32 noundef 1) #11
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %PageSwapBacked.exit175.if.end74_crit_edge
  %101 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %xas, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %102) #11
  %tobool77.not = icmp eq ptr %15, null
  br i1 %tobool77.not, label %if.end74.if.end79_crit_edge, label %if.then78

if.end74.if.end79_crit_edge:                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end79

if.then78:                                        ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #13
  call void %15(ptr noundef %old) #11
  br label %if.end79

if.end79:                                         ; preds = %if.then78, %if.end74.if.end79_crit_edge
  %103 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile i32, ptr %0, align 4
  %and.i.i191 = and i32 %104, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i191)
  %tobool.not.i.i192 = icmp eq i32 %and.i.i191, 0
  br i1 %tobool.not.i.i192, label %if.end.i.i195, label %if.then.i.i194, !prof !299

if.then.i.i194:                                   ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i193 = add i32 %104, -1
  br label %_compound_head.exit.i197

if.end.i.i195:                                    ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #13
  %105 = ptrtoint ptr %old to i32
  br label %_compound_head.exit.i197

_compound_head.exit.i197:                         ; preds = %if.end.i.i195, %if.then.i.i194
  %retval.0.i.i196 = phi i32 [ %sub.i.i193, %if.then.i.i194 ], [ %105, %if.end.i.i195 ]
  %106 = inttoptr i32 %retval.0.i.i196 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %106, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #11
  %107 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %108)
  %cmp.i.i.i.i = icmp eq i32 %108, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i198, label %do.end5.i.i.i.i, !prof !300

if.then.i.i.i.i198:                               ; preds = %_compound_head.exit.i197
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %106, ptr noundef nonnull @.str.49) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i197
  %call.i.i.i10.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #11
  %109 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %109, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@replace_page_cache_page, %if.then.i.i.i.i.i)) #11
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !306

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %106, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #11
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__put_page(ptr noundef %106) #11
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_migrate(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xas_store(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__filemap_add_folio(ptr noundef %mapping, ptr noundef %folio, i32 noundef %index, i32 noundef %gfp, ptr noundef writeonly %shadowp) local_unnamed_addr #4 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %5 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %i_pages, ptr %xas, align 4
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %index, ptr %0, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %1, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 3 to ptr), ptr %2, align 4
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %3, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %4, align 4
  %11 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  %and.i.i.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_locked.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit:                           ; preds = %entry
  %14 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %folio, align 4
  %and1.i.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.then, label %do.body10, !prof !300

if.then:                                          ; preds = %folio_test_locked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.3) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 848, 0\0A.popsection", ""() #11, !srcloc !335
  unreachable

do.body10:                                        ; preds = %folio_test_locked.exit
  %16 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %11, align 4
  %and.i.i.i158 = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i158)
  %tobool.not.i.i159 = icmp eq i32 %and.i.i.i158, 0
  br i1 %tobool.not.i.i159, label %folio_test_swapbacked.exit, label %if.then.i.i160, !prof !299

if.then.i.i160:                                   ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapbacked.exit:                       ; preds = %do.body10
  %18 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %folio, align 4
  %20 = and i32 %19, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.i161.not = icmp eq i32 %20, 0
  br i1 %tobool.i161.not, label %do.body28, label %if.then18, !prof !299

if.then18:                                        ; preds = %folio_test_swapbacked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.4) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 849, 0\0A.popsection", ""() #11, !srcloc !336
  unreachable

do.body28:                                        ; preds = %folio_test_swapbacked.exit
  %a_ops.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %21 = ptrtoint ptr %a_ops.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %a_ops.i, align 4
  %cmp.i = icmp eq ptr %22, @shmem_aops
  br i1 %cmp.i, label %do.body28.do.end34_crit_edge, label %if.then31

do.body28.do.end34_crit_edge:                     ; preds = %do.body28
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end34

if.then31:                                        ; preds = %do.body28
  call void @__sanitizer_cov_trace_pc() #13
  %23 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @workingset_update_node, ptr %4, align 4
  br label %do.end34

do.end34:                                         ; preds = %if.then31, %do.body28.do.end34_crit_edge
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  %24 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %_refcount.i.i.i, align 4
  %add.i = add i32 %25, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i)
  %cmp.i162 = icmp ult i32 %add.i, 128
  br i1 %cmp.i162, label %if.then.i, label %do.end5.i, !prof !300

if.then.i:                                        ; preds = %do.end34
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.48) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #11, !srcloc !331
  unreachable

do.end5.i:                                        ; preds = %do.end34
  %call.i.i.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i, i32 1, i32 3, i32 1) #11
  %26 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i, ptr %_refcount.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i) #11, !srcloc !332
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@__filemap_add_folio, %if.then.i.i.i)) #11
          to label %folio_get.exit [label %if.then.i.i.i], !srcloc !306

if.then.i.i.i:                                    ; preds = %do.end5.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__page_ref_mod(ptr noundef %folio, i32 noundef 1) #11
  br label %folio_get.exit

folio_get.exit:                                   ; preds = %if.then.i.i.i, %do.end5.i
  %mapping35 = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 2
  %27 = ptrtoint ptr %mapping35 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %mapping, ptr %mapping35, align 4
  %index36 = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 3
  %28 = ptrtoint ptr %index36 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %index, ptr %index36, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@__filemap_add_folio, %mem_cgroup_charge.exit)) #11
          to label %if.end.i [label %mem_cgroup_charge.exit], !srcloc !306

if.end.i:                                         ; preds = %folio_get.exit
  call void @__sanitizer_cov_trace_pc() #13
  %call1.i = tail call i32 @__mem_cgroup_charge(ptr noundef %folio, ptr noundef null, i32 noundef %gfp) #11
  br label %mem_cgroup_charge.exit

mem_cgroup_charge.exit:                           ; preds = %if.end.i, %folio_get.exit
  %retval.0.i = phi i32 [ %call1.i, %if.end.i ], [ 0, %folio_get.exit ]
  %29 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %30)
  %cmp.i.not.i.i.i = icmp eq i32 %30, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i163, label %PageHead.exit.i.i, !prof !300

if.then.i.i.i163:                                 ; preds = %mem_cgroup_charge.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i:                                ; preds = %mem_cgroup_charge.exit
  %31 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %folio, align 4
  %33 = and i32 %32, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.not.i.i164 = icmp eq i32 %33, 0
  br i1 %tobool.not.i.i164, label %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge, label %if.end.i.i

PageHead.exit.i.i.folio_nr_pages.exit_crit_edge:  ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_nr_pages.exit

if.end.i.i:                                       ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i = getelementptr %struct.page, ptr %folio, i32 1, i32 1, i32 0, i32 2
  %34 = ptrtoint ptr %compound_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %compound_nr.i.i, align 4
  %phi.bo = add i32 %35, -1
  br label %folio_nr_pages.exit

folio_nr_pages.exit:                              ; preds = %if.end.i.i, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge
  %retval.0.i.i = phi i32 [ %phi.bo, %if.end.i.i ], [ 0, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge ]
  %and = and i32 %retval.0.i.i, %index
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool42.not = icmp eq i32 %and, 0
  br i1 %tobool42.not, label %do.end58, label %if.then49, !prof !299

if.then49:                                        ; preds = %folio_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.5) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 858, 0\0A.popsection", ""() #11, !srcloc !337
  unreachable

do.end58:                                         ; preds = %folio_nr_pages.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool59.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool59.not, label %if.end62, label %do.end58.error117_crit_edge

do.end58.error117_crit_edge:                      ; preds = %do.end58
  call void @__sanitizer_cov_trace_pc() #13
  br label %error117

if.end62:                                         ; preds = %do.end58
  %and63 = and i32 %gfp, 34336480
  %tobool84.not = icmp eq ptr %shadowp, null
  %nrpages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 7
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %folio, i32 1, i32 1, i32 0, i32 2
  br label %do.body64

do.body64:                                        ; preds = %unlock.do.body64_crit_edge, %if.end62
  %36 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %37)
  %cmp.i.not.i.i.i165 = icmp eq i32 %37, -1
  br i1 %cmp.i.not.i.i.i165, label %if.then.i.i.i166, label %PageHead.exit.i.i168, !prof !300

if.then.i.i.i166:                                 ; preds = %do.body64
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i168:                             ; preds = %do.body64
  %38 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %folio, align 4
  %40 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %xas, align 4
  call void @_raw_spin_lock_irq(ptr noundef %41) #11
  %call77205 = call ptr @xas_find_conflict(ptr noundef nonnull %xas) #11
  %tobool78.not206 = icmp eq ptr %call77205, null
  br i1 %tobool78.not206, label %PageHead.exit.i.i168.if.end95_crit_edge, label %PageHead.exit.i.i168.while.body_crit_edge

PageHead.exit.i.i168.while.body_crit_edge:        ; preds = %PageHead.exit.i.i168
  br label %while.body

PageHead.exit.i.i168.if.end95_crit_edge:          ; preds = %PageHead.exit.i.i168
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end95

while.cond:                                       ; preds = %while.body
  %call77 = call ptr @xas_find_conflict(ptr noundef nonnull %xas) #11
  %tobool78.not = icmp eq ptr %call77, null
  br i1 %tobool78.not, label %if.then83, label %while.cond.while.body_crit_edge

while.cond.while.body_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.body

while.body:                                       ; preds = %while.cond.while.body_crit_edge, %PageHead.exit.i.i168.while.body_crit_edge
  %call77207 = phi ptr [ %call77, %while.cond.while.body_crit_edge ], [ %call77205, %PageHead.exit.i.i168.while.body_crit_edge ]
  %42 = ptrtoint ptr %call77207 to i32
  %and.i = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i171.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i171.not, label %if.then80, label %while.cond

if.then80:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  %43 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr inttoptr (i32 -66 to ptr), ptr %2, align 4
  br label %unlock

if.then83:                                        ; preds = %while.cond
  br i1 %tobool84.not, label %if.then83.if.end86_crit_edge, label %if.then85

if.then83.if.end86_crit_edge:                     ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end86

if.then85:                                        ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #13
  %44 = ptrtoint ptr %shadowp to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %call77207, ptr %shadowp, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %if.then83.if.end86_crit_edge
  %45 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %46)
  %cmp.i.not.i.i.i172 = icmp eq i32 %46, -1
  br i1 %cmp.i.not.i.i.i172, label %if.then.i.i.i173, label %PageHead.exit.i.i175, !prof !300

if.then.i.i.i173:                                 ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i175:                             ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #13
  %47 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %folio, align 4
  br label %if.end95

if.end95:                                         ; preds = %PageHead.exit.i.i175, %PageHead.exit.i.i168.if.end95_crit_edge
  %call96 = call ptr @xas_store(ptr noundef nonnull %xas, ptr noundef %folio) #11
  %49 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %2, align 4
  %51 = ptrtoint ptr %50 to i32
  %and.i.i.i.i = and i32 %51, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i.i.i.i)
  %cmp.i.i.i.i = icmp ne i32 %and.i.i.i.i, 2
  %cmp.i.i.i = icmp ult ptr %50, inttoptr (i32 -16378 to ptr)
  %tobool98.not203 = icmp ult ptr %50, inttoptr (i32 4 to ptr)
  %not.spec.select.i.i.i = or i1 %cmp.i.i.i, %cmp.i.i.i.i
  %tobool98.not = or i1 %tobool98.not203, %not.spec.select.i.i.i
  br i1 %tobool98.not, label %if.end100, label %if.end95.unlock_crit_edge

if.end95.unlock_crit_edge:                        ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

if.end100:                                        ; preds = %if.end95
  %52 = ptrtoint ptr %nrpages to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %nrpages, align 4
  %inc = add i32 %53, 1
  store i32 %inc, ptr %nrpages, align 4
  %54 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %55)
  %cmp.i.not.i.i.i.i = icmp eq i32 %55, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %PageHead.exit.i.i.i, !prof !300

if.then.i.i.i.i:                                  ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %if.end100
  %56 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %folio, align 4
  %58 = and i32 %57, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool.not.i.i.i = icmp eq i32 %58, 0
  br i1 %tobool.not.i.i.i, label %PageHead.exit.i.i.i.__lruvec_stat_add_folio.exit_crit_edge, label %if.end.i.i.i

PageHead.exit.i.i.i.__lruvec_stat_add_folio.exit_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %__lruvec_stat_add_folio.exit

if.end.i.i.i:                                     ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %59 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %__lruvec_stat_add_folio.exit

__lruvec_stat_add_folio.exit:                     ; preds = %if.end.i.i.i, %PageHead.exit.i.i.i.__lruvec_stat_add_folio.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %60, %if.end.i.i.i ], [ 1, %PageHead.exit.i.i.i.__lruvec_stat_add_folio.exit_crit_edge ]
  call void @__mod_lruvec_page_state(ptr noundef %folio, i32 noundef 19, i32 noundef %retval.0.i.i.i) #11
  br label %unlock

unlock:                                           ; preds = %__lruvec_stat_add_folio.exit, %if.end95.unlock_crit_edge, %if.then80
  %61 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %xas, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %62) #11
  %call107 = call zeroext i1 @xas_nomem(ptr noundef nonnull %xas, i32 noundef %and63) #11
  br i1 %call107, label %unlock.do.body64_crit_edge, label %do.end108

unlock.do.body64_crit_edge:                       ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body64

do.end108:                                        ; preds = %unlock
  %63 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %2, align 4
  %65 = ptrtoint ptr %64 to i32
  %and.i.i.i.i184 = and i32 %65, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i.i.i.i184)
  %cmp.i.i.i.i185 = icmp eq i32 %and.i.i.i.i184, 2
  %cmp.i.i.i186 = icmp uge ptr %64, inttoptr (i32 -16378 to ptr)
  %spec.select.i.i.i187 = and i1 %cmp.i.i.i186, %cmp.i.i.i.i185
  %shr.i.i188 = ashr i32 %65, 2
  %retval.0.i.i189 = select i1 %spec.select.i.i.i187, i32 %shr.i.i188, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i189)
  %tobool110.not = icmp eq i32 %retval.0.i.i189, 0
  br i1 %tobool110.not, label %if.end116, label %if.then111

if.then111:                                       ; preds = %do.end108
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@__filemap_add_folio, %error117)) #11
          to label %if.end.i197 [label %error117], !srcloc !306

if.end.i197:                                      ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #13
  call void @__mem_cgroup_uncharge(ptr noundef %folio) #11
  br label %error117

if.end116:                                        ; preds = %do.end108
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @trace_mm_filemap_add_to_page_cache(ptr noundef %folio)
  br label %cleanup

error117:                                         ; preds = %if.end.i197, %if.then111, %do.end58.error117_crit_edge
  %error.0 = phi i32 [ %retval.0.i, %do.end58.error117_crit_edge ], [ %retval.0.i.i189, %if.then111 ], [ %retval.0.i.i189, %if.end.i197 ]
  %66 = ptrtoint ptr %mapping35 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr null, ptr %mapping35, align 4
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  %67 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %_refcount.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %cmp.i.i.i198 = icmp eq i32 %68, 0
  br i1 %cmp.i.i.i198, label %if.then.i.i.i199, label %do.end5.i.i.i, !prof !300

if.then.i.i.i199:                                 ; preds = %error117
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.49) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %error117
  %call.i.i.i10.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i, i32 1, i32 3, i32 1) #11
  %69 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i, ptr %_refcount.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %69, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@__filemap_add_folio, %if.then.i.i.i.i200)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i200], !srcloc !306

if.then.i.i.i.i200:                               ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %folio, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i200, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i201, label %folio_put_testzero.exit.i.cleanup_crit_edge

folio_put_testzero.exit.i.cleanup_crit_edge:      ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then.i201:                                     ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__put_page(ptr noundef %folio) #11
  br label %cleanup

cleanup:                                          ; preds = %if.then.i201, %folio_put_testzero.exit.i.cleanup_crit_edge, %if.end116
  %retval.0 = phi i32 [ 0, %if.end116 ], [ %error.0, %folio_put_testzero.exit.i.cleanup_crit_edge ], [ %error.0, %if.then.i201 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @workingset_update_node(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xas_find_conflict(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xas_nomem(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_filemap_add_to_page_cache(ptr noundef %folio) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_filemap_add_to_page_cache, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_filemap_add_to_page_cache, %do.body)) #11
          to label %if.end48 [label %do.body], !srcloc !306

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !299

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.36, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !338
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_filemap_add_to_page_cache, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %folio) #11
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !339
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !339
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !299

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.36, i32 noundef 108, i32 noundef 9, ptr noundef null) #11
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !309
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_filemap_add_to_page_cache, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_filemap_add_to_page_cache.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @trace_mm_filemap_add_to_page_cache.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 57, ptr noundef nonnull @.str.35) #11
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !310
  %38 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @folio_put(ptr noundef %folio) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  %0 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %_refcount.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.i.i = icmp eq i32 %1, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %do.end5.i.i, !prof !300

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i:                                      ; preds = %entry
  %call.i.i.i10.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i, i32 1, i32 3, i32 1) #11
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i, ptr %_refcount.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %2, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@folio_put, %if.then.i.i.i)) #11
          to label %folio_put_testzero.exit [label %if.then.i.i.i], !srcloc !306

if.then.i.i.i:                                    ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i = zext i1 %cmp.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %folio, i32 noundef -1, i32 noundef %conv.i.i.i) #11
  br label %folio_put_testzero.exit

folio_put_testzero.exit:                          ; preds = %if.then.i.i.i, %do.end5.i.i
  br i1 %cmp.i.i.i.i.i, label %if.then, label %folio_put_testzero.exit.if.end_crit_edge

folio_put_testzero.exit.if.end_crit_edge:         ; preds = %folio_put_testzero.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then:                                          ; preds = %folio_put_testzero.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef %folio) #11
  br label %if.end

if.end:                                           ; preds = %if.then, %folio_put_testzero.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @add_to_page_cache_locked(ptr noundef %page, ptr noundef %mapping, i32 noundef %offset, i32 noundef %gfp_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !299

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %3, %if.end.i ]
  %4 = inttoptr i32 %retval.0.i to ptr
  %call1 = tail call i32 @__filemap_add_folio(ptr noundef %mapping, ptr noundef %4, i32 noundef %offset, i32 noundef %gfp_mask, ptr noundef null)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_add_folio(ptr noundef %mapping, ptr noundef %folio, i32 noundef %index, i32 noundef %gfp) #0 align 64 {
entry:
  %shadow = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %shadow) #11
  %0 = ptrtoint ptr %shadow to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %shadow, align 4
  %1 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %1, align 4
  %and.i.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %__folio_set_locked.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

__folio_set_locked.exit:                          ; preds = %entry
  %4 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %folio, align 4
  %or.i.i = or i32 %5, 1
  store i32 %or.i.i, ptr %folio, align 4
  %call = call i32 @__filemap_add_folio(ptr noundef %mapping, ptr noundef %folio, i32 noundef %index, i32 noundef %gfp, ptr noundef nonnull %shadow)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %1, align 4
  %and.i.i.i65 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i65)
  %tobool.not.i.i66 = icmp eq i32 %and.i.i.i65, 0
  br i1 %tobool.not, label %if.else, label %if.then, !prof !299

if.then:                                          ; preds = %__folio_set_locked.exit
  br i1 %tobool.not.i.i66, label %__folio_clear_locked.exit, label %if.then.i.i64, !prof !299

if.then.i.i64:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

__folio_clear_locked.exit:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  %8 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %folio, align 4
  %and.i.i = and i32 %9, -2
  store i32 %and.i.i, ptr %folio, align 4
  br label %if.end51

if.else:                                          ; preds = %__folio_set_locked.exit
  br i1 %tobool.not.i.i66, label %folio_test_active.exit, label %if.then.i.i67, !prof !299

if.then.i.i67:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_active.exit:                           ; preds = %if.else
  %10 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %folio, align 4
  %12 = and i32 %11, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.i.not = icmp eq i32 %12, 0
  br i1 %tobool.i.not, label %folio_test_active.exit.if.end39_crit_edge, label %land.rhs

folio_test_active.exit.if.end39_crit_edge:        ; preds = %folio_test_active.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end39

land.rhs:                                         ; preds = %folio_test_active.exit
  %.b61 = load i1, ptr @filemap_add_folio.__already_done, align 1
  br i1 %.b61, label %land.rhs.if.end39_crit_edge, label %if.then18, !prof !299

land.rhs.if.end39_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end39

if.then18:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @filemap_add_folio.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 962, i32 noundef 9, ptr noundef null) #11
  br label %if.end39

if.end39:                                         ; preds = %if.then18, %land.rhs.if.end39_crit_edge, %folio_test_active.exit.if.end39_crit_edge
  %and = and i32 %gfp, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool47.not = icmp eq i32 %and, 0
  br i1 %tobool47.not, label %land.lhs.true, label %if.end39.if.end50_crit_edge

if.end39.if.end50_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end50

land.lhs.true:                                    ; preds = %if.end39
  %13 = ptrtoint ptr %shadow to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %shadow, align 4
  %tobool48.not = icmp eq ptr %14, null
  br i1 %tobool48.not, label %land.lhs.true.if.end50_crit_edge, label %if.then49

land.lhs.true.if.end50_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end50

if.then49:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  call void @workingset_refault(ptr noundef %folio, ptr noundef nonnull %14) #11
  br label %if.end50

if.end50:                                         ; preds = %if.then49, %land.lhs.true.if.end50_crit_edge, %if.end39.if.end50_crit_edge
  call void @folio_add_lru(ptr noundef %folio) #11
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %__folio_clear_locked.exit
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %shadow) #11
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @workingset_refault(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @folio_add_lru(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @filemap_invalidate_lock_two(ptr noundef %mapping1, ptr noundef %mapping2) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp ugt ptr %mapping1, %mapping2
  %spec.select = select i1 %cmp, ptr %mapping1, ptr %mapping2
  %spec.select16 = select i1 %cmp, ptr %mapping2, ptr %mapping1
  %tobool.not = icmp eq ptr %spec.select16, null
  br i1 %tobool.not, label %entry.if.end2_crit_edge, label %if.then1

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end2

if.then1:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock = getelementptr inbounds %struct.address_space, ptr %spec.select16, i32 0, i32 2
  tail call void @down_write(ptr noundef %invalidate_lock) #11
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %entry.if.end2_crit_edge
  %tobool3.not = icmp eq ptr %spec.select, null
  %cmp4.not = icmp eq ptr %spec.select16, %spec.select
  %or.cond = or i1 %tobool3.not, %cmp4.not
  br i1 %or.cond, label %if.end2.if.end7_crit_edge, label %if.then5

if.end2.if.end7_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end7

if.then5:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock6 = getelementptr inbounds %struct.address_space, ptr %spec.select, i32 0, i32 2
  tail call void @down_write_nested(ptr noundef %invalidate_lock6, i32 noundef 1) #11
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end2.if.end7_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @filemap_invalidate_unlock_two(ptr noundef %mapping1, ptr noundef %mapping2) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %mapping1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock = getelementptr inbounds %struct.address_space, ptr %mapping1, i32 0, i32 2
  tail call void @up_write(ptr noundef %invalidate_lock) #11
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %tobool1.not = icmp eq ptr %mapping2, null
  %cmp.not = icmp eq ptr %mapping1, %mapping2
  %or.cond = or i1 %tobool1.not, %cmp.not
  br i1 %or.cond, label %if.end.if.end4_crit_edge, label %if.then2

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock3 = getelementptr inbounds %struct.address_space, ptr %mapping2, i32 0, i32 2
  tail call void @up_write(ptr noundef %invalidate_lock3) #11
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @pagecache_init() local_unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %entry
  %i.03 = phi i32 [ 0, %entry ], [ %inc, %do.body.do.body_crit_edge ]
  %arrayidx = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %i.03
  tail call void @__init_waitqueue_head(ptr noundef %arrayidx, ptr noundef nonnull @.str.7, ptr noundef nonnull @pagecache_init.__key) #11
  %inc = add nuw nsw i32 %i.03, 1
  %exitcond.not = icmp eq i32 %inc, 256
  br i1 %exitcond.not, label %for.end, label %do.body.do.body_crit_edge

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

for.end:                                          ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @page_writeback_init() #11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_writeback_init() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @migration_entry_wait_on_locked([1 x i32] %entry.coerce, ptr noundef %ptep, ptr noundef %ptl) #0 align 64 {
entry:
  %wait_page = alloca %struct.wait_page_queue, align 4
  %pflags = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %wait_page) #11
  %0 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 1
  %1 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2
  %2 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2, i32 1
  %3 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2, i32 2
  %4 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2, i32 3
  %5 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2, i32 3, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pflags) #11
  %6 = ptrtoint ptr %pflags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %pflags, align 4, !annotation !302
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %7 = load ptr, ptr @mem_map, align 4
  %entry.coerce.fca.0.extract.i.i = extractvalue [1 x i32] %entry.coerce, 0
  %and.i.i = and i32 %entry.coerce.fca.0.extract.i.i, 67108863
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %8 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %and.i.i, %8
  %add.ptr.i = getelementptr %struct.page, ptr %7, i32 %sub.i
  %9 = and i32 %entry.coerce.fca.0.extract.i.i, -134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 2013265920, i32 %9)
  %.not.i = icmp eq i32 %9, 2013265920
  br i1 %.not.i, label %land.rhs.i, label %entry.pfn_swap_entry_to_page.exit_crit_edge

entry.pfn_swap_entry_to_page.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %pfn_swap_entry_to_page.exit

land.rhs.i:                                       ; preds = %entry
  %10 = getelementptr %struct.page, ptr %7, i32 %sub.i, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  %and.i.i.i153 = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i153)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i153, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i.i = add i32 %12, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  %13 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %13, %if.end.i.i.i ]
  %14 = inttoptr i32 %retval.0.i.i.i to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %16)
  %cmp.i.not.i.i = icmp eq i32 %16, -1
  %17 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %10, align 4
  %and.i16.i.i = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i.i154, label %do.end10.i.i, !prof !300

if.then.i.i154:                                   ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i20.i.i, label %if.then.i19.i.i, !prof !299

if.then.i19.i.i:                                  ; preds = %if.then.i.i154
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i18.i.i = add i32 %18, -1
  br label %_compound_head.exit22.i.i

if.end.i20.i.i:                                   ; preds = %if.then.i.i154
  call void @__sanitizer_cov_trace_pc() #13
  %19 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.end.i20.i.i, %if.then.i19.i.i
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %19, %if.end.i20.i.i ]
  %20 = inttoptr i32 %retval.0.i21.i.i to ptr
  tail call void @dump_page(ptr noundef %20, ptr noundef nonnull @.str.46) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #11, !srcloc !322
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i27.i.i, label %if.then.i26.i.i, !prof !299

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i25.i.i = add i32 %18, -1
  br label %PageLocked.exit.i

if.end.i27.i.i:                                   ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %21 = ptrtoint ptr %add.ptr.i to i32
  br label %PageLocked.exit.i

PageLocked.exit.i:                                ; preds = %if.end.i27.i.i, %if.then.i26.i.i
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %21, %if.end.i27.i.i ]
  %22 = inttoptr i32 %retval.0.i28.i.i to ptr
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %22, align 4
  %and1.i.i.i = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool7.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool7.not.i, label %do.body11.i, label %PageLocked.exit.i.pfn_swap_entry_to_page.exit_crit_edge, !prof !300

PageLocked.exit.i.pfn_swap_entry_to_page.exit_crit_edge: ; preds = %PageLocked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %pfn_swap_entry_to_page.exit

do.body11.i:                                      ; preds = %PageLocked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/swapops.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 258, 0\0A.popsection", ""() #11, !srcloc !340
  unreachable

pfn_swap_entry_to_page.exit:                      ; preds = %PageLocked.exit.i.pfn_swap_entry_to_page.exit_crit_edge, %entry.pfn_swap_entry_to_page.exit_crit_edge
  %25 = getelementptr %struct.page, ptr %7, i32 %sub.i, i32 1
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %25, align 4
  %and.i = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !299

if.then.i:                                        ; preds = %pfn_swap_entry_to_page.exit
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i155 = add i32 %27, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %pfn_swap_entry_to_page.exit
  call void @__sanitizer_cov_trace_pc() #13
  %28 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i155, %if.then.i ], [ %28, %if.end.i ]
  %29 = inttoptr i32 %retval.0.i to ptr
  %mul.i.i.i.i = mul i32 %retval.0.i, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i
  %30 = getelementptr inbounds %struct.page, ptr %29, i32 0, i32 1
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  %and.i.i.i156 = and i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i156)
  %tobool.not.i.i157 = icmp eq i32 %and.i.i.i156, 0
  br i1 %tobool.not.i.i157, label %folio_flags.exit.i, label %if.then.i.i158, !prof !299

if.then.i.i158:                                   ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %29, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %_compound_head.exit
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %29, align 4
  %35 = and i32 %34, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool.i159.not = icmp eq i32 %35, 0
  br i1 %tobool.i159.not, label %land.lhs.true, label %folio_test_uptodate.exit.thread

folio_test_uptodate.exit.thread:                  ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  br label %do.body

land.lhs.true:                                    ; preds = %folio_flags.exit.i
  %36 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %30, align 4
  %and.i.i.i = and i32 %37, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_workingset.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %29, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_workingset.exit:                       ; preds = %land.lhs.true
  %38 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %29, align 4
  %40 = and i32 %39, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.i.not = icmp eq i32 %40, 0
  br i1 %tobool.i.not, label %folio_test_workingset.exit.do.body_crit_edge, label %if.then

folio_test_workingset.exit.do.body_crit_edge:     ; preds = %folio_test_workingset.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

if.then:                                          ; preds = %folio_test_workingset.exit
  %41 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %30, align 4
  %and.i.i.i146 = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i146)
  %tobool.not.i.i147 = icmp eq i32 %and.i.i.i146, 0
  br i1 %tobool.not.i.i147, label %folio_test_swapbacked.exit, label %if.then.i.i148, !prof !299

if.then.i.i148:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %29, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapbacked.exit:                       ; preds = %if.then
  %43 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %29, align 4
  %45 = and i32 %44, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool.i149.not = icmp eq i32 %45, 0
  br i1 %tobool.i149.not, label %if.then10, label %folio_test_swapbacked.exit.if.end_crit_edge

folio_test_swapbacked.exit.if.end_crit_edge:      ; preds = %folio_test_swapbacked.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then10:                                        ; preds = %folio_test_swapbacked.exit
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @delayacct_key, ptr blockaddress(@migration_entry_wait_on_locked, %if.end.i162)) #11
          to label %if.end [label %if.end.i162], !srcloc !306

if.end.i162:                                      ; preds = %if.then10
  %46 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i161 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i161 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %task.i, align 8
  %delays.i = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 181
  %50 = ptrtoint ptr %delays.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %delays.i, align 8
  %tobool4.not.i = icmp eq ptr %51, null
  br i1 %tobool4.not.i, label %if.end.i162.if.end_crit_edge, label %if.then5.i

if.end.i162.if.end_crit_edge:                     ; preds = %if.end.i162
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then5.i:                                       ; preds = %if.end.i162
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__delayacct_thrashing_start() #11
  br label %if.end

if.end:                                           ; preds = %if.then5.i, %if.end.i162.if.end_crit_edge, %if.then10, %folio_test_swapbacked.exit.if.end_crit_edge
  call void @psi_memstall_enter(ptr noundef nonnull %pflags) #11
  br label %do.body

do.body:                                          ; preds = %if.end, %folio_test_workingset.exit.do.body_crit_edge, %folio_test_uptodate.exit.thread
  %delayacct.1.off0 = phi i1 [ %tobool.i149.not, %if.end ], [ false, %folio_test_workingset.exit.do.body_crit_edge ], [ false, %folio_test_uptodate.exit.thread ]
  %thrashing.0.off0 = phi i1 [ true, %if.end ], [ false, %folio_test_workingset.exit.do.body_crit_edge ], [ false, %folio_test_uptodate.exit.thread ]
  %52 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i163 = and i32 %52, -16384
  %53 = inttoptr i32 %and.i163 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %task, align 8
  %56 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %55, ptr %2, align 4
  %57 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %4, ptr %4, align 4
  %58 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %4, ptr %5, align 4
  %59 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr @wake_page_function, ptr %3, align 4
  %60 = ptrtoint ptr %wait_page to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %29, ptr %wait_page, align 4
  %61 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 0, ptr %0, align 4
  %62 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %1, align 4
  call void @_raw_spin_lock_irq(ptr noundef %arrayidx.i) #11
  %63 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %30, align 4
  %and.i.i.i150 = and i32 %64, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i150)
  %tobool.not.i.i151 = icmp eq i32 %and.i.i.i150, 0
  br i1 %tobool.not.i.i151, label %folio_set_waiters.exit, label %if.then.i.i152, !prof !299

if.then.i.i152:                                   ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %29, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_set_waiters.exit:                           ; preds = %do.body
  call void @_set_bit(i32 noundef 7, ptr noundef %29) #11
  %65 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %1, align 4
  %and.i164 = and i32 %66, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i164)
  %tobool.not.i165 = icmp eq i32 %and.i164, 0
  br i1 %tobool.not.i165, label %if.else.i, label %if.then.i166

if.then.i166:                                     ; preds = %folio_set_waiters.exit
  %call.i = call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %29) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool2.not.i, label %if.then.i166.folio_trylock_flag.exit_crit_edge, label %if.then.i166.if.then18_crit_edge

if.then.i166.if.then18_crit_edge:                 ; preds = %if.then.i166
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then18

if.then.i166.folio_trylock_flag.exit_crit_edge:   ; preds = %if.then.i166
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_trylock_flag.exit

if.else.i:                                        ; preds = %folio_set_waiters.exit
  %67 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %29, align 4
  %69 = and i32 %68, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool6.not.i = icmp eq i32 %69, 0
  br i1 %tobool6.not.i, label %if.else.i.folio_trylock_flag.exit_crit_edge, label %if.else.i.if.then18_crit_edge

if.else.i.if.then18_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then18

if.else.i.folio_trylock_flag.exit_crit_edge:      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_trylock_flag.exit

folio_trylock_flag.exit:                          ; preds = %if.else.i.folio_trylock_flag.exit_crit_edge, %if.then.i166.folio_trylock_flag.exit_crit_edge
  %70 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %1, align 4
  %or.i = or i32 %71, 18
  store i32 %or.i, ptr %1, align 4
  br label %if.end19

if.then18:                                        ; preds = %if.else.i.if.then18_crit_edge, %if.then.i166.if.then18_crit_edge
  %head.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i, i32 1
  %prev.i.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i, i32 1, i32 1
  %72 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %4, ptr noundef %73, ptr noundef %head.i) #11
  br i1 %call.i.i.i, label %if.end.i.i.i168, label %if.then18.if.end19_crit_edge

if.then18.if.end19_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end19

if.end.i.i.i168:                                  ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #13
  %74 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %4, ptr %prev.i.i, align 4
  %75 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %head.i, ptr %4, align 4
  %76 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %73, ptr %5, align 4
  %77 = ptrtoint ptr %73 to i32
  call void @__asan_store4_noabort(i32 %77)
  store volatile ptr %4, ptr %73, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.end.i.i.i168, %if.then18.if.end19_crit_edge, %folio_trylock_flag.exit
  call void @_raw_spin_unlock_irq(ptr noundef %arrayidx.i) #11
  %tobool.not = icmp eq ptr %ptep, null
  call void @_raw_spin_unlock(ptr noundef %ptl) #11
  br i1 %tobool.not, label %if.end19.__here.preheader_crit_edge, label %do.body22

if.end19.__here.preheader_crit_edge:              ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #13
  br label %__here.preheader

do.body22:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #13
  call void @kunmap_local_indexed(ptr noundef nonnull %ptep) #11
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !342
  %78 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i1.i = and i32 %78, -16384
  %79 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %79, i32 0, i32 2
  %80 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %81, i32 0, i32 213
  %82 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %83, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !343
  %84 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i = and i32 %84, -16384
  %85 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %85, i32 0, i32 1
  %86 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %87, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br label %__here.preheader

__here.preheader:                                 ; preds = %do.body22, %if.end19.__here.preheader_crit_edge
  br label %__here

__here:                                           ; preds = %cleanup, %__here.preheader
  %88 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %89, i32 0, i32 212
  %90 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 ptrtoint (ptr blockaddress(@migration_entry_wait_on_locked, %__here) to i32), ptr %task_state_change, align 4
  %91 = load ptr, ptr %task, align 8
  %92 = ptrtoint ptr %91 to i32
  call void @__asan_store4_noabort(i32 %92)
  store volatile i32 2, ptr %91, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !344
  %93 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %1, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !345
  %and = and i32 %94, 2
  %tobool109.not = icmp eq i32 %and, 0
  br i1 %tobool109.not, label %cleanup, label %for.end

cleanup:                                          ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #13
  call void @io_schedule() #11
  br label %__here

for.end:                                          ; preds = %__here
  call void @finish_wait(ptr noundef %arrayidx.i, ptr noundef %1) #11
  br i1 %thrashing.0.off0, label %if.then119, label %for.end.if.end123_crit_edge

for.end.if.end123_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end123

if.then119:                                       ; preds = %for.end
  br i1 %delayacct.1.off0, label %if.then121, label %if.then119.if.end122_crit_edge

if.then119.if.end122_crit_edge:                   ; preds = %if.then119
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end122

if.then121:                                       ; preds = %if.then119
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @delayacct_key, ptr blockaddress(@migration_entry_wait_on_locked, %if.end.i174)) #11
          to label %if.end122 [label %if.end.i174], !srcloc !306

if.end.i174:                                      ; preds = %if.then121
  %95 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i170 = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i170 to ptr
  %task.i171 = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 2
  %97 = ptrtoint ptr %task.i171 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %task.i171, align 8
  %delays.i172 = getelementptr inbounds %struct.task_struct, ptr %98, i32 0, i32 181
  %99 = ptrtoint ptr %delays.i172 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %delays.i172, align 8
  %tobool4.not.i173 = icmp eq ptr %100, null
  br i1 %tobool4.not.i173, label %if.end.i174.if.end122_crit_edge, label %if.then5.i175

if.end.i174.if.end122_crit_edge:                  ; preds = %if.end.i174
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end122

if.then5.i175:                                    ; preds = %if.end.i174
  call void @__sanitizer_cov_trace_pc() #13
  call void @__delayacct_thrashing_end() #11
  br label %if.end122

if.end122:                                        ; preds = %if.then5.i175, %if.end.i174.if.end122_crit_edge, %if.then121, %if.then119.if.end122_crit_edge
  call void @psi_memstall_leave(ptr noundef nonnull %pflags) #11
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %for.end.if.end123_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pflags) #11
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %wait_page) #11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_memstall_enter(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wake_page_function(ptr noundef %wait, i32 noundef %mode, i32 noundef %sync, ptr nocapture noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %wait, i32 -8
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 4
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arg, align 4
  %cmp.not.i = icmp eq ptr %1, %3
  br i1 %cmp.not.i, label %wake_page_match.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

wake_page_match.exit:                             ; preds = %entry
  %page_match.i = getelementptr inbounds %struct.wait_page_key, ptr %arg, i32 0, i32 2
  %4 = ptrtoint ptr %page_match.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %page_match.i, align 4
  %bit_nr.i = getelementptr i8, ptr %wait, i32 -4
  %5 = ptrtoint ptr %bit_nr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %bit_nr.i, align 4
  %bit_nr2.i = getelementptr inbounds %struct.wait_page_key, ptr %arg, i32 0, i32 1
  %7 = ptrtoint ptr %bit_nr2.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %bit_nr2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %8)
  %cmp3.not.i = icmp eq i32 %6, %8
  br i1 %cmp3.not.i, label %if.end, label %wake_page_match.exit.cleanup_crit_edge

wake_page_match.exit.cleanup_crit_edge:           ; preds = %wake_page_match.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %wake_page_match.exit
  %9 = ptrtoint ptr %wait to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %wait, align 4
  %and = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.do.end24_crit_edge, label %if.then2

if.end.do.end24_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end24

if.then2:                                         ; preds = %if.end
  %11 = ptrtoint ptr %bit_nr2.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bit_nr2.i, align 4
  %div3.i = lshr i32 %12, 5
  %arrayidx.i = getelementptr i32, ptr %1, i32 %div3.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %12, 31
  %15 = shl nuw i32 1, %and.i
  %16 = and i32 %15, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool5.not = icmp eq i32 %16, 0
  br i1 %tobool5.not, label %if.end7, label %if.then2.cleanup_crit_edge

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end7:                                          ; preds = %if.then2
  %and8 = and i32 %10, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end7.do.end24_crit_edge, label %if.then10

if.end7.do.end24_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end24

if.then10:                                        ; preds = %if.end7
  %call14 = tail call i32 @_test_and_set_bit(i32 noundef %12, ptr noundef %1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %if.then10.cleanup_crit_edge

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end17:                                         ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #13
  %or = or i32 %10, 16
  br label %do.end24

do.end24:                                         ; preds = %if.end17, %if.end7.do.end24_crit_edge, %if.end.do.end24_crit_edge
  %flags.0 = phi i32 [ %or, %if.end17 ], [ %10, %if.end7.do.end24_crit_edge ], [ %10, %if.end.do.end24_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !346
  %or30 = or i32 %flags.0, 2
  %17 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 %or30, ptr %wait, align 4
  %private = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %18 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %private, align 4
  %call40 = tail call i32 @wake_up_state(ptr noundef %19, i32 noundef %mode) #11
  %entry41 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry41) #11
  br i1 %call.i.i, label %if.end.i.i, label %do.end24.list_del_init_careful.exit_crit_edge

do.end24.list_del_init_careful.exit_crit_edge:    ; preds = %do.end24
  call void @__sanitizer_cov_trace_pc() #13
  br label %list_del_init_careful.exit

if.end.i.i:                                       ; preds = %do.end24
  call void @__sanitizer_cov_trace_pc() #13
  %prev.i.i = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %20 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i, align 4
  %22 = ptrtoint ptr %entry41 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %entry41, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %23, ptr %21, align 4
  br label %list_del_init_careful.exit

list_del_init_careful.exit:                       ; preds = %if.end.i.i, %do.end24.list_del_init_careful.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %26 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %entry41, ptr %prev.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !347
  %27 = ptrtoint ptr %entry41 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %entry41, ptr %entry41, align 4
  %and42 = and i32 %flags.0, 1
  br label %cleanup

cleanup:                                          ; preds = %list_del_init_careful.exit, %if.then10.cleanup_crit_edge, %if.then2.cleanup_crit_edge, %wake_page_match.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %and42, %list_del_init_careful.exit ], [ 0, %wake_page_match.exit.cleanup_crit_edge ], [ -1, %if.then2.cleanup_crit_edge ], [ -1, %if.then10.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @io_schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_memstall_leave(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @folio_wait_bit(ptr noundef %folio, i32 noundef %bit_nr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef %bit_nr, i32 noundef 2, i32 noundef 1)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef %bit_nr, i32 noundef %state, i32 noundef %behavior) #3 align 64 {
entry:
  %wait_page = alloca %struct.wait_page_queue, align 4
  %pflags = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #13
  %0 = ptrtoint ptr %folio to i32
  %mul.i.i.i.i = mul i32 %0, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i
  %1 = load i32, ptr @sysctl_page_lock_unfairness, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %wait_page) #11
  %2 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 1
  %3 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2
  %4 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2, i32 1
  %5 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2, i32 2
  %6 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2, i32 3
  %7 = getelementptr inbounds %struct.wait_page_queue, ptr %wait_page, i32 0, i32 2, i32 3, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pflags) #11
  %8 = ptrtoint ptr %pflags to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %pflags, align 4, !annotation !302
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bit_nr)
  %cmp = icmp eq i32 %bit_nr, 0
  br i1 %cmp, label %land.lhs.true, label %entry.do.body_crit_edge

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

land.lhs.true:                                    ; preds = %entry
  %9 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %9, align 4
  %and.i.i.i205 = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i205)
  %tobool.not.i.i206 = icmp eq i32 %and.i.i.i205, 0
  br i1 %tobool.not.i.i206, label %folio_flags.exit.i, label %if.then.i.i207, !prof !299

if.then.i.i207:                                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %land.lhs.true
  %12 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %folio, align 4
  %14 = and i32 %13, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.i208.not = icmp eq i32 %14, 0
  br i1 %tobool.i208.not, label %land.lhs.true3, label %folio_test_uptodate.exit.thread

folio_test_uptodate.exit.thread:                  ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  br label %do.body

land.lhs.true3:                                   ; preds = %folio_flags.exit.i
  %15 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %9, align 4
  %and.i.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_workingset.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_workingset.exit:                       ; preds = %land.lhs.true3
  %17 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %folio, align 4
  %19 = and i32 %18, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.i.not = icmp eq i32 %19, 0
  br i1 %tobool.i.not, label %folio_test_workingset.exit.do.body_crit_edge, label %if.then

folio_test_workingset.exit.do.body_crit_edge:     ; preds = %folio_test_workingset.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

if.then:                                          ; preds = %folio_test_workingset.exit
  %20 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %9, align 4
  %and.i.i.i198 = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i198)
  %tobool.not.i.i199 = icmp eq i32 %and.i.i.i198, 0
  br i1 %tobool.not.i.i199, label %folio_test_swapbacked.exit, label %if.then.i.i200, !prof !299

if.then.i.i200:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapbacked.exit:                       ; preds = %if.then
  %22 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %folio, align 4
  %24 = and i32 %23, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.i201.not = icmp eq i32 %24, 0
  br i1 %tobool.i201.not, label %if.then6, label %folio_test_swapbacked.exit.if.end_crit_edge

folio_test_swapbacked.exit.if.end_crit_edge:      ; preds = %folio_test_swapbacked.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then6:                                         ; preds = %folio_test_swapbacked.exit
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @delayacct_key, ptr blockaddress(@folio_wait_bit_common, %if.end.i)) #11
          to label %if.end [label %if.end.i], !srcloc !306

if.end.i:                                         ; preds = %if.then6
  %25 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task.i, align 8
  %delays.i = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 181
  %29 = ptrtoint ptr %delays.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %delays.i, align 8
  %tobool4.not.i = icmp eq ptr %30, null
  br i1 %tobool4.not.i, label %if.end.i.if.end_crit_edge, label %if.then5.i

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__delayacct_thrashing_start() #11
  br label %if.end

if.end:                                           ; preds = %if.then5.i, %if.end.i.if.end_crit_edge, %if.then6, %folio_test_swapbacked.exit.if.end_crit_edge
  call void @psi_memstall_enter(ptr noundef nonnull %pflags) #11
  br label %do.body

do.body:                                          ; preds = %if.end, %folio_test_workingset.exit.do.body_crit_edge, %folio_test_uptodate.exit.thread, %entry.do.body_crit_edge
  %delayacct.1.off0 = phi i1 [ %tobool.i201.not, %if.end ], [ false, %folio_test_workingset.exit.do.body_crit_edge ], [ false, %entry.do.body_crit_edge ], [ false, %folio_test_uptodate.exit.thread ]
  %thrashing.0.off0 = phi i1 [ true, %if.end ], [ false, %folio_test_workingset.exit.do.body_crit_edge ], [ false, %entry.do.body_crit_edge ], [ false, %folio_test_uptodate.exit.thread ]
  %31 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task, align 8
  %35 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %34, ptr %4, align 4
  %36 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %6, ptr %6, align 4
  %37 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %6, ptr %7, align 4
  %38 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @wake_page_function, ptr %5, align 4
  %39 = ptrtoint ptr %wait_page to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %folio, ptr %wait_page, align 4
  %40 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %bit_nr, ptr %2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %behavior)
  %cmp14 = icmp eq i32 %behavior, 0
  %41 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %div3.i.i = lshr i32 %bit_nr, 5
  %arrayidx.i.i = getelementptr i32, ptr %folio, i32 %div3.i.i
  %and.i.i210 = and i32 %bit_nr, 31
  %42 = shl nuw i32 1, %and.i.i210
  %head.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i, i32 1
  %prev.i.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i, i32 1, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %behavior)
  %cmp26 = icmp eq i32 %behavior, 2
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 3
  %and = and i32 %state, 204
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %and.i213 = and i32 %state, 257
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i213)
  %tobool.not.i214 = icmp eq i32 %and.i213, 0
  %and4.i = and i32 %state, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br label %repeat

repeat:                                           ; preds = %folio_flags.exit.repeat_crit_edge, %do.body
  %unfairness.0 = phi i32 [ %1, %do.body ], [ %unfairness.1, %folio_flags.exit.repeat_crit_edge ]
  %dec = add i32 %unfairness.0, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp17 = icmp slt i32 %dec, 0
  %spec.store.select = select i1 %cmp17, i32 9, i32 1
  %storemerge = select i1 %cmp14, i32 %spec.store.select, i32 0
  %unfairness.1 = select i1 %cmp14, i32 %dec, i32 %unfairness.0
  %43 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %storemerge, ptr %3, align 4
  call void @_raw_spin_lock_irq(ptr noundef %arrayidx.i) #11
  %44 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %41, align 4
  %and.i.i.i202 = and i32 %45, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i202)
  %tobool.not.i.i203 = icmp eq i32 %and.i.i.i202, 0
  br i1 %tobool.not.i.i203, label %folio_set_waiters.exit, label %if.then.i.i204, !prof !299

if.then.i.i204:                                   ; preds = %repeat
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_set_waiters.exit:                           ; preds = %repeat
  call void @_set_bit(i32 noundef 7, ptr noundef %folio) #11
  %46 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %3, align 4
  %and.i209 = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i209)
  %tobool.not.i = icmp eq i32 %and.i209, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %folio_set_waiters.exit
  %call.i = call i32 @_test_and_set_bit(i32 noundef %bit_nr, ptr noundef %folio) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool2.not.i, label %if.then.i.folio_trylock_flag.exit_crit_edge, label %if.then.i.if.then23_crit_edge

if.then.i.if.then23_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then23

if.then.i.folio_trylock_flag.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_trylock_flag.exit

if.else.i:                                        ; preds = %folio_set_waiters.exit
  %48 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %arrayidx.i.i, align 4
  %50 = and i32 %49, %42
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool6.not.i = icmp eq i32 %50, 0
  br i1 %tobool6.not.i, label %if.else.i.folio_trylock_flag.exit_crit_edge, label %if.else.i.if.then23_crit_edge

if.else.i.if.then23_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then23

if.else.i.folio_trylock_flag.exit_crit_edge:      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_trylock_flag.exit

folio_trylock_flag.exit:                          ; preds = %if.else.i.folio_trylock_flag.exit_crit_edge, %if.then.i.folio_trylock_flag.exit_crit_edge
  %51 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %3, align 4
  %or.i = or i32 %52, 18
  store i32 %or.i, ptr %3, align 4
  br label %if.end24

if.then23:                                        ; preds = %if.else.i.if.then23_crit_edge, %if.then.i.if.then23_crit_edge
  %53 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %6, ptr noundef %54, ptr noundef %head.i) #11
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then23.if.end24_crit_edge

if.then23.if.end24_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end24

if.end.i.i.i:                                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #13
  %55 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %6, ptr %prev.i.i, align 4
  %56 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %head.i, ptr %6, align 4
  %57 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %54, ptr %7, align 4
  %58 = ptrtoint ptr %54 to i32
  call void @__asan_store4_noabort(i32 %58)
  store volatile ptr %6, ptr %54, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.end.i.i.i, %if.then23.if.end24_crit_edge, %folio_trylock_flag.exit
  call void @_raw_spin_unlock_irq(ptr noundef %arrayidx.i) #11
  br i1 %cmp26, label %if.then27, label %if.end24.for.cond.preheader_crit_edge

if.end24.for.cond.preheader_crit_edge:            ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.preheader

if.then27:                                        ; preds = %if.end24
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %59 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %cmp.i.i.i = icmp eq i32 %60, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.49) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %if.then27
  %call.i.i.i10.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %61 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %61, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@folio_wait_bit_common, %if.then.i.i.i.i)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %folio, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i211, label %folio_put_testzero.exit.i.for.cond.preheader_crit_edge

folio_put_testzero.exit.i.for.cond.preheader_crit_edge: ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.preheader

if.then.i211:                                     ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__put_page(ptr noundef %folio) #11
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then.i211, %folio_put_testzero.exit.i.for.cond.preheader_crit_edge, %if.end24.for.cond.preheader_crit_edge
  br label %for.cond

for.cond.backedge:                                ; preds = %signal_pending_state.exit.for.cond.backedge_crit_edge, %signal_pending.exit.i.for.cond.backedge_crit_edge, %if.then110.for.cond.backedge_crit_edge
  call void @io_schedule() #11
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %for.cond.preheader
  br i1 %tobool.not, label %for.cond.__here_crit_edge, label %land.rhs

for.cond.__here_crit_edge:                        ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %__here

land.rhs:                                         ; preds = %for.cond
  %.b197 = load i1, ptr @folio_wait_bit_common.__already_done, align 1
  br i1 %.b197, label %land.rhs.__here_crit_edge, label %if.then39, !prof !299

land.rhs.__here_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #13
  br label %__here

if.then39:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @folio_wait_bit_common.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1314, i32 noundef 9, ptr noundef null) #11
  br label %__here

__here:                                           ; preds = %if.then39, %land.rhs.__here_crit_edge, %for.cond.__here_crit_edge
  %62 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %63, i32 0, i32 212
  %64 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 ptrtoint (ptr blockaddress(@folio_wait_bit_common, %__here) to i32), ptr %task_state_change, align 4
  %65 = load ptr, ptr %task, align 8
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile i32 %state, ptr %65, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !348
  %67 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %3, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !349
  %and108 = and i32 %68, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and108)
  %tobool109.not = icmp eq i32 %and108, 0
  br i1 %tobool109.not, label %if.then110, label %if.end117

if.then110:                                       ; preds = %__here
  %69 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %task, align 8
  br i1 %tobool.not.i214, label %if.then110.for.cond.backedge_crit_edge, label %if.end.i216

if.then110.for.cond.backedge_crit_edge:           ; preds = %if.then110
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.backedge

if.end.i216:                                      ; preds = %if.then110
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %stack.i.i.i, align 4
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %72, align 4
  %75 = and i32 %74, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool.not.i.i215 = icmp eq i32 %75, 0
  br i1 %tobool.not.i.i215, label %signal_pending.exit.i, label %if.end.i216.if.end3.i_crit_edge, !prof !299

if.end.i216.if.end3.i_crit_edge:                  ; preds = %if.end.i216
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end3.i

signal_pending.exit.i:                            ; preds = %if.end.i216
  %76 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %72, align 4
  %and1.i.i.i.i.i.i = and i32 %77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool1.not.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i, label %signal_pending.exit.i.for.cond.backedge_crit_edge, label %signal_pending.exit.i.if.end3.i_crit_edge

signal_pending.exit.i.if.end3.i_crit_edge:        ; preds = %signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end3.i

signal_pending.exit.i.for.cond.backedge_crit_edge: ; preds = %signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.backedge

if.end3.i:                                        ; preds = %signal_pending.exit.i.if.end3.i_crit_edge, %if.end.i216.if.end3.i_crit_edge
  br i1 %tobool5.not.i, label %signal_pending_state.exit, label %if.end3.i.for.end_crit_edge

if.end3.i.for.end_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

signal_pending_state.exit:                        ; preds = %if.end3.i
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %70, i32 0, i32 116, i32 1
  %78 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %signal.i.i, align 4
  %80 = and i32 %79, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool114.not = icmp eq i32 %80, 0
  br i1 %tobool114.not, label %signal_pending_state.exit.for.cond.backedge_crit_edge, label %signal_pending_state.exit.for.end_crit_edge

signal_pending_state.exit.for.end_crit_edge:      ; preds = %signal_pending_state.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

signal_pending_state.exit.for.cond.backedge_crit_edge: ; preds = %signal_pending_state.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.cond.backedge

if.end117:                                        ; preds = %__here
  %and121 = and i32 %68, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and121)
  %tobool122.not = icmp eq i32 %and121, 0
  %or.cond = select i1 %cmp14, i1 %tobool122.not, i1 false
  br i1 %or.cond, label %if.end124, label %if.end117.for.end_crit_edge

if.end117.for.end_crit_edge:                      ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end124:                                        ; preds = %if.end117
  %81 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile i32, ptr %41, align 4
  %and.i.i218 = and i32 %82, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i218)
  %tobool.not.i219 = icmp eq i32 %and.i.i218, 0
  br i1 %tobool.not.i219, label %folio_flags.exit, label %if.then.i220, !prof !299

if.then.i220:                                     ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit:                                 ; preds = %if.end124
  %call126 = call i32 @_test_and_set_bit(i32 noundef %bit_nr, ptr noundef %folio) #11
  %tobool127.not = icmp eq i32 %call126, 0
  br i1 %tobool127.not, label %if.end135, label %folio_flags.exit.repeat_crit_edge, !prof !299

folio_flags.exit.repeat_crit_edge:                ; preds = %folio_flags.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %repeat

if.end135:                                        ; preds = %folio_flags.exit
  call void @__sanitizer_cov_trace_pc() #13
  %83 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %3, align 4
  %or137 = or i32 %84, 16
  store i32 %or137, ptr %3, align 4
  br label %for.end

for.end:                                          ; preds = %if.end135, %if.end117.for.end_crit_edge, %signal_pending_state.exit.for.end_crit_edge, %if.end3.i.for.end_crit_edge
  call void @finish_wait(ptr noundef %arrayidx.i, ptr noundef %3) #11
  br i1 %thrashing.0.off0, label %if.then139, label %for.end.if.end143_crit_edge

for.end.if.end143_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end143

if.then139:                                       ; preds = %for.end
  br i1 %delayacct.1.off0, label %if.then141, label %if.then139.if.end142_crit_edge

if.then139.if.end142_crit_edge:                   ; preds = %if.then139
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end142

if.then141:                                       ; preds = %if.then139
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @delayacct_key, ptr blockaddress(@folio_wait_bit_common, %if.end.i225)) #11
          to label %if.end142 [label %if.end.i225], !srcloc !306

if.end.i225:                                      ; preds = %if.then141
  %85 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i221 = and i32 %85, -16384
  %86 = inttoptr i32 %and.i.i221 to ptr
  %task.i222 = getelementptr inbounds %struct.thread_info, ptr %86, i32 0, i32 2
  %87 = ptrtoint ptr %task.i222 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %task.i222, align 8
  %delays.i223 = getelementptr inbounds %struct.task_struct, ptr %88, i32 0, i32 181
  %89 = ptrtoint ptr %delays.i223 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %delays.i223, align 8
  %tobool4.not.i224 = icmp eq ptr %90, null
  br i1 %tobool4.not.i224, label %if.end.i225.if.end142_crit_edge, label %if.then5.i226

if.end.i225.if.end142_crit_edge:                  ; preds = %if.end.i225
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end142

if.then5.i226:                                    ; preds = %if.end.i225
  call void @__sanitizer_cov_trace_pc() #13
  call void @__delayacct_thrashing_end() #11
  br label %if.end142

if.end142:                                        ; preds = %if.then5.i226, %if.end.i225.if.end142_crit_edge, %if.then141, %if.then139.if.end142_crit_edge
  call void @psi_memstall_leave(ptr noundef nonnull %pflags) #11
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %for.end.if.end143_crit_edge
  %91 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %3, align 4
  %. = select i1 %cmp14, i32 16, i32 2
  %and151 = and i32 %92, %.
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and151)
  %tobool152.not = icmp eq i32 %and151, 0
  %cond153 = select i1 %tobool152.not, i32 -4, i32 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pflags) #11
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %wait_page) #11
  ret i32 %cond153
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @folio_wait_bit_killable(ptr noundef %folio, i32 noundef %bit_nr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef %bit_nr, i32 noundef 258, i32 noundef 1)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @folio_put_wait_locked(ptr noundef %folio, i32 noundef %state) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef %state, i32 noundef 2)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @folio_add_wait_queue(ptr noundef %folio, ptr noundef %waiter) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %folio to i32
  %mul.i.i.i.i = mul i32 %0, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %arrayidx.i) #11
  %entry1.i = getelementptr inbounds %struct.wait_queue_entry, ptr %waiter, i32 0, i32 3
  %head.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i, i32 1
  %prev.i.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i, i32 1, i32 1
  %1 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %entry1.i, ptr noundef %2, ptr noundef %head.i) #11
  br i1 %call.i.i.i, label %if.end.i.i.i, label %entry.__add_wait_queue_entry_tail.exit_crit_edge

entry.__add_wait_queue_entry_tail.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %__add_wait_queue_entry_tail.exit

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %entry1.i, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %entry1.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %head.i, ptr %entry1.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.wait_queue_entry, ptr %waiter, i32 0, i32 3, i32 1
  %5 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %2, ptr %prev3.i.i.i, align 4
  %6 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %entry1.i, ptr %2, align 4
  br label %__add_wait_queue_entry_tail.exit

__add_wait_queue_entry_tail.exit:                 ; preds = %if.end.i.i.i, %entry.__add_wait_queue_entry_tail.exit_crit_edge
  %7 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 4
  %and.i.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_set_waiters.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %__add_wait_queue_entry_tail.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_set_waiters.exit:                           ; preds = %__add_wait_queue_entry_tail.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @_set_bit(i32 noundef 7, ptr noundef %folio) #11
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %arrayidx.i, i32 noundef %call3) #11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @folio_unlock(ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_locked.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit:                           ; preds = %entry
  %3 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %folio, align 4
  %and1.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.then, label %do.end10, !prof !300

if.then:                                          ; preds = %folio_test_locked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.3) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1555, 0\0A.popsection", ""() #11, !srcloc !350
  unreachable

do.end10:                                         ; preds = %folio_test_locked.exit
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %folio_flags.exit, label %if.then.i, !prof !299

if.then.i:                                        ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit:                                 ; preds = %do.end10
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %folio, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !351
  tail call void @llvm.prefetch.p0(ptr %folio, i32 1, i32 3, i32 1) #11
  %7 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %folio, ptr %folio, i32 1, ptr elementtype(i32) %folio) #11, !srcloc !352
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %7, 0
  %and.i.i18 = and i32 %asmresult.i.i.i.i.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i18)
  %tobool.i.i.not = icmp eq i32 %and.i.i18, 0
  br i1 %tobool.i.i.not, label %folio_flags.exit.if.end14_crit_edge, label %if.then13

folio_flags.exit.if.end14_crit_edge:              ; preds = %folio_flags.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end14

if.then13:                                        ; preds = %folio_flags.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call fastcc void @folio_wake_bit(ptr noundef %folio, i32 noundef 0)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %folio_flags.exit.if.end14_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @folio_wake_bit(ptr noundef %folio, i32 noundef %bit_nr) unnamed_addr #0 align 64 {
entry:
  %key = alloca %struct.wait_page_key, align 4
  %bookmark = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %folio to i32
  %mul.i.i.i.i = mul i32 %0, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %key) #11
  %1 = getelementptr inbounds %struct.wait_page_key, ptr %key, i32 0, i32 1
  %2 = getelementptr inbounds %struct.wait_page_key, ptr %key, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %bookmark) #11
  %3 = getelementptr inbounds %struct.wait_queue_entry, ptr %bookmark, i32 0, i32 1
  %4 = getelementptr inbounds %struct.wait_queue_entry, ptr %bookmark, i32 0, i32 2
  %5 = getelementptr inbounds %struct.wait_queue_entry, ptr %bookmark, i32 0, i32 3
  %6 = getelementptr inbounds %struct.wait_queue_entry, ptr %bookmark, i32 0, i32 3, i32 1
  %7 = ptrtoint ptr %key to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %folio, ptr %key, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %bit_nr, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %2, align 4
  %10 = ptrtoint ptr %bookmark to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %bookmark, align 4
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %3, align 4
  %12 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %4, align 4
  %13 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %5, ptr %5, align 4
  %14 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %5, ptr %6, align 4
  %call7 = call i32 @_raw_spin_lock_irqsave(ptr noundef %arrayidx.i) #11
  call void @__wake_up_locked_key_bookmark(ptr noundef %arrayidx.i, i32 noundef 3, ptr noundef nonnull %key, ptr noundef nonnull %bookmark) #11
  %15 = ptrtoint ptr %bookmark to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %bookmark, align 4
  %and49 = and i32 %16, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and49)
  %tobool.not50 = icmp eq i32 %and49, 0
  br i1 %tobool.not50, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  %flags.051 = phi i32 [ %call30, %while.body.while.body_crit_edge ], [ %call7, %entry.while.body_crit_edge ]
  call void @_raw_spin_unlock_irqrestore(ptr noundef %arrayidx.i, i32 noundef %flags.051) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !353
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #11, !srcloc !354
  %call30 = call i32 @_raw_spin_lock_irqsave(ptr noundef %arrayidx.i) #11
  call void @__wake_up_locked_key_bookmark(ptr noundef %arrayidx.i, i32 noundef 3, ptr noundef nonnull %key, ptr noundef nonnull %bookmark) #11
  %17 = ptrtoint ptr %bookmark to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %bookmark, align 4
  %and = and i32 %18, 4
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  %flags.0.lcssa = phi i32 [ %call7, %entry.while.end_crit_edge ], [ %call30, %while.body.while.end_crit_edge ]
  %head.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i, i32 1
  %19 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %head.i, align 4
  %cmp.i.i.not = icmp eq ptr %20, %head.i
  br i1 %cmp.i.i.not, label %while.end.if.then_crit_edge, label %lor.lhs.false

while.end.if.then_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then

lor.lhs.false:                                    ; preds = %while.end
  %21 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool38.not = icmp eq i32 %22, 0
  br i1 %tobool38.not, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false.if.end_crit_edge

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %while.end.if.then_crit_edge
  %23 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %23, align 4
  %and.i.i.i = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_clear_waiters.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_clear_waiters.exit:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  call void @_clear_bit(i32 noundef 7, ptr noundef %folio) #11
  br label %if.end

if.end:                                           ; preds = %folio_clear_waiters.exit, %lor.lhs.false.if.end_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %arrayidx.i, i32 noundef %flags.0.lcssa) #11
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %bookmark) #11
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %key) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @folio_end_private_2(ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_private_2.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_private_2.exit:                        ; preds = %entry
  %3 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %folio, align 4
  %5 = and i32 %4, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not = icmp eq i32 %5, 0
  br i1 %tobool.i.not, label %if.then, label %do.end6, !prof !300

if.then:                                          ; preds = %folio_test_private_2.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.8) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1574, 0\0A.popsection", ""() #11, !srcloc !355
  unreachable

do.end6:                                          ; preds = %folio_test_private_2.exit
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %folio_flags.exit, label %if.then.i, !prof !299

if.then.i:                                        ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit:                                 ; preds = %do.end6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %folio, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !351
  tail call void @llvm.prefetch.p0(ptr %folio, i32 1, i32 3, i32 1) #11
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %folio, ptr %folio, i32 16384, ptr elementtype(i32) %folio) #11, !srcloc !352
  tail call fastcc void @folio_wake_bit(ptr noundef %folio, i32 noundef 14)
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %9 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i.i.i = icmp eq i32 %10, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %folio_flags.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %folio_flags.exit
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %11, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@folio_end_private_2, %if.then.i.i.i.i)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %folio, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i12, label %folio_put_testzero.exit.i.folio_put.exit_crit_edge

folio_put_testzero.exit.i.folio_put.exit_crit_edge: ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_put.exit

if.then.i12:                                      ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef %folio) #11
  br label %folio_put.exit

folio_put.exit:                                   ; preds = %if.then.i12, %folio_put_testzero.exit.i.folio_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @folio_wait_private_2(ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i2 = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i2)
  %tobool.not.i.i3 = icmp eq i32 %and.i.i.i2, 0
  br i1 %tobool.not.i.i3, label %entry.folio_test_private_2.exit_crit_edge, label %entry.if.then.i.i_crit_edge, !prof !299

entry.if.then.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i.i

entry.folio_test_private_2.exit_crit_edge:        ; preds = %entry
  br label %folio_test_private_2.exit

if.then.i.i:                                      ; preds = %while.body.if.then.i.i_crit_edge, %entry.if.then.i.i_crit_edge
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_private_2.exit:                        ; preds = %while.body.folio_test_private_2.exit_crit_edge, %entry.folio_test_private_2.exit_crit_edge
  %3 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %folio, align 4
  %5 = and i32 %4, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not = icmp eq i32 %5, 0
  br i1 %tobool.i.not, label %while.end, label %while.body

while.body:                                       ; preds = %folio_test_private_2.exit
  %call.i = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 14, i32 noundef 2, i32 noundef 1) #11
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %7, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %while.body.folio_test_private_2.exit_crit_edge, label %while.body.if.then.i.i_crit_edge, !prof !299

while.body.if.then.i.i_crit_edge:                 ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i.i

while.body.folio_test_private_2.exit_crit_edge:   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_test_private_2.exit

while.end:                                        ; preds = %folio_test_private_2.exit
  call void @__sanitizer_cov_trace_pc() #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @folio_wait_private_2_killable(ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %entry
  %ret.0 = phi i32 [ 0, %entry ], [ %call.i, %while.body.while.cond_crit_edge ]
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_private_2.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_private_2.exit:                        ; preds = %while.cond
  %3 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %folio, align 4
  %5 = and i32 %4, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not = icmp eq i32 %5, 0
  br i1 %tobool.i.not, label %folio_test_private_2.exit.while.end_crit_edge, label %while.body

folio_test_private_2.exit.while.end_crit_edge:    ; preds = %folio_test_private_2.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.body:                                       ; preds = %folio_test_private_2.exit
  %call.i = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 14, i32 noundef 258, i32 noundef 1) #11
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %while.body.while.end_crit_edge, label %while.body.while.cond_crit_edge

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %folio_test_private_2.exit.while.end_crit_edge
  %ret.1 = phi i32 [ %call.i, %while.body.while.end_crit_edge ], [ %ret.0, %folio_test_private_2.exit.while.end_crit_edge ]
  ret i32 %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @folio_end_writeback(ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_reclaim.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_reclaim.exit:                          ; preds = %entry
  %3 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %folio, align 4
  %5 = and i32 %4, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not = icmp eq i32 %5, 0
  br i1 %tobool.i.not, label %folio_test_reclaim.exit.if.end_crit_edge, label %if.then

folio_test_reclaim.exit.if.end_crit_edge:         ; preds = %folio_test_reclaim.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.then:                                          ; preds = %folio_test_reclaim.exit
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %0, align 4
  %and.i.i.i17 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i17)
  %tobool.not.i.i18 = icmp eq i32 %and.i.i.i17, 0
  br i1 %tobool.not.i.i18, label %folio_clear_reclaim.exit, label %if.then.i.i19, !prof !299

if.then.i.i19:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_clear_reclaim.exit:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @_clear_bit(i32 noundef 18, ptr noundef %folio) #11
  tail call void @folio_rotate_reclaimable(ptr noundef %folio) #11
  br label %if.end

if.end:                                           ; preds = %folio_clear_reclaim.exit, %folio_test_reclaim.exit.if.end_crit_edge
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  %8 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %_refcount.i.i.i, align 4
  %add.i = add i32 %9, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i)
  %cmp.i = icmp ult i32 %add.i, 128
  br i1 %cmp.i, label %if.then.i, label %do.end5.i, !prof !300

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.48) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #11, !srcloc !331
  unreachable

do.end5.i:                                        ; preds = %if.end
  %call.i.i.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i, i32 1, i32 3, i32 1) #11
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i, ptr %_refcount.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i) #11, !srcloc !332
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@folio_end_writeback, %if.then.i.i.i)) #11
          to label %folio_get.exit [label %if.then.i.i.i], !srcloc !306

if.then.i.i.i:                                    ; preds = %do.end5.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__page_ref_mod(ptr noundef %folio, i32 noundef 1) #11
  br label %folio_get.exit

folio_get.exit:                                   ; preds = %if.then.i.i.i, %do.end5.i
  %call1 = tail call zeroext i1 @__folio_end_writeback(ptr noundef %folio) #11
  br i1 %call1, label %do.end8, label %do.body

do.body:                                          ; preds = %folio_get.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1645, 0\0A.popsection", ""() #11, !srcloc !356
  unreachable

do.end8:                                          ; preds = %folio_get.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !357
  %11 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %0, align 4
  %and.i.i.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_test_waiters.exit.i, label %if.then.i.i.i20, !prof !299

if.then.i.i.i20:                                  ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_waiters.exit.i:                        ; preds = %do.end8
  %13 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %folio, align 4
  %15 = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i.not.i = icmp eq i32 %15, 0
  br i1 %tobool.i.not.i, label %folio_test_waiters.exit.i.folio_wake.exit_crit_edge, label %if.end.i

folio_test_waiters.exit.i.folio_wake.exit_crit_edge: ; preds = %folio_test_waiters.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_wake.exit

if.end.i:                                         ; preds = %folio_test_waiters.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call fastcc void @folio_wake_bit(ptr noundef %folio, i32 noundef 15) #11
  br label %folio_wake.exit

folio_wake.exit:                                  ; preds = %if.end.i, %folio_test_waiters.exit.i.folio_wake.exit_crit_edge
  %16 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %17)
  %cmp.i.not.i.i.i.i = icmp eq i32 %17, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %folio_pgdat.exit.i, !prof !300

if.then.i.i.i.i:                                  ; preds = %folio_wake.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.52) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #11, !srcloc !358
  unreachable

folio_pgdat.exit.i:                               ; preds = %folio_wake.exit
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 12), i32 noundef 4) #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 12) to i32))
  %18 = load volatile i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 12), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i, label %folio_pgdat.exit.i.acct_reclaim_writeback.exit_crit_edge, label %if.then.i21

folio_pgdat.exit.i.acct_reclaim_writeback.exit_crit_edge: ; preds = %folio_pgdat.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %acct_reclaim_writeback.exit

if.then.i21:                                      ; preds = %folio_pgdat.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__acct_reclaim_writeback(ptr noundef nonnull @contig_page_data, ptr noundef %folio, i32 noundef %18) #11
  br label %acct_reclaim_writeback.exit

acct_reclaim_writeback.exit:                      ; preds = %if.then.i21, %folio_pgdat.exit.i.acct_reclaim_writeback.exit_crit_edge
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  %19 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %_refcount.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.i.i.i = icmp eq i32 %20, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i23, label %do.end5.i.i.i, !prof !300

if.then.i.i.i23:                                  ; preds = %acct_reclaim_writeback.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %acct_reclaim_writeback.exit
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i, i32 1, i32 3, i32 1) #11
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i, ptr %_refcount.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %21, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@folio_end_writeback, %if.then.i.i.i.i24)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i24], !srcloc !306

if.then.i.i.i.i24:                                ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %folio, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i24, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i25, label %folio_put_testzero.exit.i.folio_put.exit_crit_edge

folio_put_testzero.exit.i.folio_put.exit_crit_edge: ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_put.exit

if.then.i25:                                      ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef %folio) #11
  br label %folio_put.exit

folio_put.exit:                                   ; preds = %if.then.i25, %folio_put_testzero.exit.i.folio_put.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @folio_rotate_reclaimable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__folio_end_writeback(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @page_endio(ptr noundef %page, i1 noundef zeroext %is_write, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err)
  %tobool4.not = icmp eq i32 %err, 0
  br i1 %is_write, label %if.else3, label %if.then

if.then:                                          ; preds = %entry
  br i1 %tobool4.not, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !359
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %SetPageUptodate.exit, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

SetPageUptodate.exit:                             ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @_set_bit(i32 noundef 2, ptr noundef %page) #11
  br label %if.end

if.else:                                          ; preds = %if.then
  %3 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !299

if.then.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.45) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 678, 0\0A.popsection", ""() #11, !srcloc !360
  unreachable

do.body7.i:                                       ; preds = %if.else
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %3, align 4
  %and.i31.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i)
  %tobool.not.i.i = icmp eq i32 %and.i31.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i = add i32 %7, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #13
  %8 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %8, %if.end.i.i ]
  %9 = inttoptr i32 %retval.0.i.i to ptr
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %9, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %cmp.i.not.i = icmp eq i32 %11, -1
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %3, align 4
  %and.i32.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i)
  %tobool.not.i33.i = icmp eq i32 %and.i32.i, 0
  br i1 %cmp.i.not.i, label %if.then17.i, label %do.end24.i, !prof !300

if.then17.i:                                      ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i36.i, label %if.then.i35.i, !prof !299

if.then.i35.i:                                    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i34.i = add i32 %13, -1
  br label %_compound_head.exit38.i

if.end.i36.i:                                     ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #13
  %14 = ptrtoint ptr %page to i32
  br label %_compound_head.exit38.i

_compound_head.exit38.i:                          ; preds = %if.end.i36.i, %if.then.i35.i
  %retval.0.i37.i = phi i32 [ %sub.i34.i, %if.then.i35.i ], [ %14, %if.end.i36.i ]
  %15 = inttoptr i32 %retval.0.i37.i to ptr
  tail call void @dump_page(ptr noundef %15, ptr noundef nonnull @.str.46) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 678, 0\0A.popsection", ""() #11, !srcloc !361
  unreachable

do.end24.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i43.i, label %if.then.i42.i, !prof !299

if.then.i42.i:                                    ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i41.i = add i32 %13, -1
  br label %ClearPageUptodate.exit

if.end.i43.i:                                     ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #13
  %16 = ptrtoint ptr %page to i32
  br label %ClearPageUptodate.exit

ClearPageUptodate.exit:                           ; preds = %if.end.i43.i, %if.then.i42.i
  %retval.0.i44.i = phi i32 [ %sub.i41.i, %if.then.i42.i ], [ %16, %if.end.i43.i ]
  %17 = inttoptr i32 %retval.0.i44.i to ptr
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %17) #11
  %18 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %3, align 4
  %and.i.i20 = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i20)
  %tobool.not.i21 = icmp eq i32 %and.i.i20, 0
  br i1 %tobool.not.i21, label %do.body7.i25, label %if.then.i22, !prof !299

if.then.i22:                                      ; preds = %ClearPageUptodate.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.45) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #11, !srcloc !362
  unreachable

do.body7.i25:                                     ; preds = %ClearPageUptodate.exit
  %20 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %3, align 4
  %and.i31.i23 = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i23)
  %tobool.not.i.i24 = icmp eq i32 %and.i31.i23, 0
  br i1 %tobool.not.i.i24, label %if.end.i.i28, label %if.then.i.i27, !prof !299

if.then.i.i27:                                    ; preds = %do.body7.i25
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i26 = add i32 %21, -1
  br label %_compound_head.exit.i33

if.end.i.i28:                                     ; preds = %do.body7.i25
  call void @__sanitizer_cov_trace_pc() #13
  %22 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i33

_compound_head.exit.i33:                          ; preds = %if.end.i.i28, %if.then.i.i27
  %retval.0.i.i29 = phi i32 [ %sub.i.i26, %if.then.i.i27 ], [ %22, %if.end.i.i28 ]
  %23 = inttoptr i32 %retval.0.i.i29 to ptr
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %23, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %cmp.i.not.i30 = icmp eq i32 %25, -1
  %26 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %3, align 4
  %and.i32.i31 = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i31)
  %tobool.not.i33.i32 = icmp eq i32 %and.i32.i31, 0
  br i1 %cmp.i.not.i30, label %if.then17.i34, label %do.end24.i40, !prof !300

if.then17.i34:                                    ; preds = %_compound_head.exit.i33
  br i1 %tobool.not.i33.i32, label %if.end.i36.i37, label %if.then.i35.i36, !prof !299

if.then.i35.i36:                                  ; preds = %if.then17.i34
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i34.i35 = add i32 %27, -1
  br label %_compound_head.exit38.i39

if.end.i36.i37:                                   ; preds = %if.then17.i34
  call void @__sanitizer_cov_trace_pc() #13
  %28 = ptrtoint ptr %page to i32
  br label %_compound_head.exit38.i39

_compound_head.exit38.i39:                        ; preds = %if.end.i36.i37, %if.then.i35.i36
  %retval.0.i37.i38 = phi i32 [ %sub.i34.i35, %if.then.i35.i36 ], [ %28, %if.end.i36.i37 ]
  %29 = inttoptr i32 %retval.0.i37.i38 to ptr
  tail call void @dump_page(ptr noundef %29, ptr noundef nonnull @.str.46) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #11, !srcloc !363
  unreachable

do.end24.i40:                                     ; preds = %_compound_head.exit.i33
  br i1 %tobool.not.i33.i32, label %if.end.i43.i43, label %if.then.i42.i42, !prof !299

if.then.i42.i42:                                  ; preds = %do.end24.i40
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i41.i41 = add i32 %27, -1
  br label %SetPageError.exit

if.end.i43.i43:                                   ; preds = %do.end24.i40
  call void @__sanitizer_cov_trace_pc() #13
  %30 = ptrtoint ptr %page to i32
  br label %SetPageError.exit

SetPageError.exit:                                ; preds = %if.end.i43.i43, %if.then.i42.i42
  %retval.0.i44.i44 = phi i32 [ %sub.i41.i41, %if.then.i42.i42 ], [ %30, %if.end.i43.i43 ]
  %31 = inttoptr i32 %retval.0.i44.i44 to ptr
  tail call void @_set_bit(i32 noundef 8, ptr noundef %31) #11
  br label %if.end

if.end:                                           ; preds = %SetPageError.exit, %SetPageUptodate.exit
  tail call void @unlock_page(ptr noundef %page) #11
  br label %if.end10

if.else3:                                         ; preds = %entry
  br i1 %tobool4.not, label %if.else3.if.end9_crit_edge, label %if.then5

if.else3.if.end9_crit_edge:                       ; preds = %if.else3
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end9

if.then5:                                         ; preds = %if.else3
  %32 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %32, align 4
  %and.i.i45 = and i32 %34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i45)
  %tobool.not.i46 = icmp eq i32 %and.i.i45, 0
  br i1 %tobool.not.i46, label %do.body7.i50, label %if.then.i47, !prof !299

if.then.i47:                                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.45) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #11, !srcloc !362
  unreachable

do.body7.i50:                                     ; preds = %if.then5
  %35 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %32, align 4
  %and.i31.i48 = and i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i48)
  %tobool.not.i.i49 = icmp eq i32 %and.i31.i48, 0
  br i1 %tobool.not.i.i49, label %if.end.i.i53, label %if.then.i.i52, !prof !299

if.then.i.i52:                                    ; preds = %do.body7.i50
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i.i51 = add i32 %36, -1
  br label %_compound_head.exit.i58

if.end.i.i53:                                     ; preds = %do.body7.i50
  call void @__sanitizer_cov_trace_pc() #13
  %37 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i58

_compound_head.exit.i58:                          ; preds = %if.end.i.i53, %if.then.i.i52
  %retval.0.i.i54 = phi i32 [ %sub.i.i51, %if.then.i.i52 ], [ %37, %if.end.i.i53 ]
  %38 = inttoptr i32 %retval.0.i.i54 to ptr
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %40)
  %cmp.i.not.i55 = icmp eq i32 %40, -1
  %41 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %32, align 4
  %and.i32.i56 = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i56)
  %tobool.not.i33.i57 = icmp eq i32 %and.i32.i56, 0
  br i1 %cmp.i.not.i55, label %if.then17.i59, label %do.end24.i65, !prof !300

if.then17.i59:                                    ; preds = %_compound_head.exit.i58
  br i1 %tobool.not.i33.i57, label %if.end.i36.i62, label %if.then.i35.i61, !prof !299

if.then.i35.i61:                                  ; preds = %if.then17.i59
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i34.i60 = add i32 %42, -1
  br label %_compound_head.exit38.i64

if.end.i36.i62:                                   ; preds = %if.then17.i59
  call void @__sanitizer_cov_trace_pc() #13
  %43 = ptrtoint ptr %page to i32
  br label %_compound_head.exit38.i64

_compound_head.exit38.i64:                        ; preds = %if.end.i36.i62, %if.then.i35.i61
  %retval.0.i37.i63 = phi i32 [ %sub.i34.i60, %if.then.i35.i61 ], [ %43, %if.end.i36.i62 ]
  %44 = inttoptr i32 %retval.0.i37.i63 to ptr
  tail call void @dump_page(ptr noundef %44, ptr noundef nonnull @.str.46) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #11, !srcloc !363
  unreachable

do.end24.i65:                                     ; preds = %_compound_head.exit.i58
  br i1 %tobool.not.i33.i57, label %if.end.i43.i68, label %if.then.i42.i67, !prof !299

if.then.i42.i67:                                  ; preds = %do.end24.i65
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i41.i66 = add i32 %42, -1
  br label %SetPageError.exit70

if.end.i43.i68:                                   ; preds = %do.end24.i65
  call void @__sanitizer_cov_trace_pc() #13
  %45 = ptrtoint ptr %page to i32
  br label %SetPageError.exit70

SetPageError.exit70:                              ; preds = %if.end.i43.i68, %if.then.i42.i67
  %retval.0.i44.i69 = phi i32 [ %sub.i41.i66, %if.then.i42.i67 ], [ %45, %if.end.i43.i68 ]
  %46 = inttoptr i32 %retval.0.i44.i69 to ptr
  tail call void @_set_bit(i32 noundef 8, ptr noundef %46) #11
  %call = tail call ptr @page_mapping(ptr noundef %page) #11
  %tobool6.not = icmp eq ptr %call, null
  br i1 %tobool6.not, label %SetPageError.exit70.if.end9_crit_edge, label %if.then7

SetPageError.exit70.if.end9_crit_edge:            ; preds = %SetPageError.exit70
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end9

if.then7:                                         ; preds = %SetPageError.exit70
  %wb_err.i.i = getelementptr inbounds %struct.address_space, ptr %call, i32 0, i32 11
  %call.i.i = tail call i32 @errseq_set(ptr noundef %wb_err.i.i, i32 noundef %err) #11
  tail call fastcc void @trace_filemap_set_wb_err(ptr noundef nonnull %call, i32 noundef %call.i.i) #11
  %47 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %call, align 4
  %tobool4.not.i = icmp eq ptr %48, null
  br i1 %tobool4.not.i, label %if.then7.mapping_set_error.exit_crit_edge, label %if.then5.i

if.then7.mapping_set_error.exit_crit_edge:        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #13
  br label %mapping_set_error.exit

if.then5.i:                                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #13
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %48, i32 0, i32 8
  %49 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %i_sb.i, align 4
  %s_wb_err.i = getelementptr inbounds %struct.super_block, ptr %50, i32 0, i32 50
  %call.i = tail call i32 @errseq_set(ptr noundef %s_wb_err.i, i32 noundef %err) #11
  br label %mapping_set_error.exit

mapping_set_error.exit:                           ; preds = %if.then5.i, %if.then7.mapping_set_error.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -28, i32 %err)
  %cmp.i = icmp eq i32 %err, -28
  %flags.i = getelementptr inbounds %struct.address_space, ptr %call, i32 0, i32 10
  %..i = zext i1 %cmp.i to i32
  tail call void @_set_bit(i32 noundef %..i, ptr noundef %flags.i) #11
  br label %if.end9

if.end9:                                          ; preds = %mapping_set_error.exit, %SetPageError.exit70.if.end9_crit_edge, %if.else3.if.end9_crit_edge
  tail call void @end_page_writeback(ptr noundef %page) #11
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlock_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_mapping(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @end_page_writeback(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__folio_lock(ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 2, i32 noundef 0)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__folio_lock_killable(ptr noundef %folio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 258, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @__folio_lock_or_retry(ptr noundef %folio, ptr noundef %mm, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = and i32 %flags, 36
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %0)
  %1 = icmp eq i32 %0, 4
  br i1 %1, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %and = and i32 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %if.then.return_crit_edge

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end:                                           ; preds = %if.then
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@__folio_lock_or_retry, %if.then.i.i)) #11
          to label %mmap_read_unlock.exit [label %if.then.i.i], !srcloc !306

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__mmap_lock_do_trace_released(ptr noundef %mm, i1 noundef zeroext false) #11
  br label %mmap_read_unlock.exit

mmap_read_unlock.exit:                            ; preds = %if.then.i.i, %if.end
  %mmap_lock.i = getelementptr inbounds %struct.anon.13, ptr %mm, i32 0, i32 15
  tail call void @up_read(ptr noundef %mmap_lock.i) #11
  %and2 = and i32 %flags, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  %2 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i.i.i25 = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i25)
  %tobool.not.i.i.i26 = icmp eq i32 %and.i.i.i.i25, 0
  br i1 %tobool3.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %mmap_read_unlock.exit
  br i1 %tobool.not.i.i.i26, label %folio_test_locked.exit.i, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit.i:                         ; preds = %if.then4
  %5 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %folio, align 4
  %and1.i.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %folio_test_locked.exit.i.return_crit_edge, label %if.end.i

folio_test_locked.exit.i.return_crit_edge:        ; preds = %folio_test_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end.i:                                         ; preds = %folio_test_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  %call.i.i = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 258, i32 noundef 1) #11
  br label %return

if.else:                                          ; preds = %mmap_read_unlock.exit
  br i1 %tobool.not.i.i.i26, label %folio_test_locked.exit.i30, label %if.then.i.i.i27, !prof !299

if.then.i.i.i27:                                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit.i30:                       ; preds = %if.else
  %7 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %folio, align 4
  %and1.i.i.i28 = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i28)
  %tobool.i.not.i29 = icmp eq i32 %and1.i.i.i28, 0
  br i1 %tobool.i.not.i29, label %folio_test_locked.exit.i30.return_crit_edge, label %if.then.i

folio_test_locked.exit.i30.return_crit_edge:      ; preds = %folio_test_locked.exit.i30
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.then.i:                                        ; preds = %folio_test_locked.exit.i30
  call void @__sanitizer_cov_trace_pc() #13
  %call.i.i31 = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 2, i32 noundef 1) #11
  br label %return

if.end7:                                          ; preds = %entry
  %and8 = and i32 %flags, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.else16, label %if.then10

if.then10:                                        ; preds = %if.end7
  %call.i = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 258, i32 noundef 0) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool12.not = icmp eq i32 %call.i, 0
  br i1 %tobool12.not, label %if.then10.return_crit_edge, label %if.then14

if.then10.return_crit_edge:                       ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.then14:                                        ; preds = %if.then10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@__folio_lock_or_retry, %if.then.i.i33)) #11
          to label %cleanup [label %if.then.i.i33], !srcloc !306

if.then.i.i33:                                    ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__mmap_lock_do_trace_released(ptr noundef %mm, i1 noundef zeroext false) #11
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i33, %if.then14
  %mmap_lock.i34 = getelementptr inbounds %struct.anon.13, ptr %mm, i32 0, i32 15
  tail call void @up_read(ptr noundef %mmap_lock.i34) #11
  br label %return

if.else16:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #13
  %call.i36 = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 2, i32 noundef 0) #11
  br label %return

return:                                           ; preds = %if.else16, %cleanup, %if.then10.return_crit_edge, %if.then.i, %folio_test_locked.exit.i30.return_crit_edge, %if.end.i, %folio_test_locked.exit.i.return_crit_edge, %if.then.return_crit_edge
  %retval.1 = phi i1 [ false, %cleanup ], [ false, %if.then.return_crit_edge ], [ false, %folio_test_locked.exit.i.return_crit_edge ], [ false, %if.end.i ], [ false, %folio_test_locked.exit.i30.return_crit_edge ], [ false, %if.then.i ], [ true, %if.else16 ], [ true, %if.then10.return_crit_edge ]
  ret i1 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @page_cache_next_miss(ptr noundef %mapping, i32 noundef %index, i32 noundef %max_scan) #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %6 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %i_pages, ptr %xas, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %index, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %1, align 4
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %4, align 4
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %5, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.while.cond_crit_edge, %entry
  %max_scan.addr.0 = phi i32 [ %max_scan, %entry ], [ %dec, %if.end.while.cond_crit_edge ]
  %dec = add i32 %max_scan.addr.0, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_scan.addr.0)
  %tobool.not = icmp eq i32 %max_scan.addr.0, 0
  br i1 %tobool.not, label %while.cond.while.end_crit_edge, label %while.body

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.body:                                       ; preds = %while.cond
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %3, align 4
  %14 = ptrtoint ptr %13 to i32
  %and.i.i = and i32 %14, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp ne i32 %and.i.i, 0
  %tobool1.not.i.i = icmp eq ptr %13, null
  %spec.select.i.i = or i1 %tobool1.not.i.i, %tobool.not.i.i
  br i1 %spec.select.i.i, label %while.body.if.then.i_crit_edge, label %lor.lhs.false.i, !prof !300

while.body.if.then.i_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %while.body
  %15 = ptrtoint ptr %13 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %13, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i = icmp eq i8 %16, 0
  br i1 %tobool.not.i, label %lor.rhs.i, label %lor.lhs.false.i.if.then.i_crit_edge, !prof !299

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i

lor.rhs.i:                                        ; preds = %lor.lhs.false.i
  %17 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %2, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 63, i8 %18)
  %cmp.i = icmp eq i8 %18, 63
  br i1 %cmp.i, label %lor.rhs.i.if.then.i_crit_edge, label %if.end.i, !prof !300

lor.rhs.i.if.then.i_crit_edge:                    ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i

if.then.i:                                        ; preds = %lor.rhs.i.if.then.i_crit_edge, %lor.lhs.false.i.if.then.i_crit_edge, %while.body.if.then.i_crit_edge
  %call5.i = call ptr @__xas_next(ptr noundef nonnull %xas) #11
  br label %xas_next.exit

if.end.i:                                         ; preds = %lor.rhs.i
  %19 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %0, align 4
  %inc.i = add i32 %20, 1
  store i32 %inc.i, ptr %0, align 4
  %inc7.i = add i8 %18, 1
  %21 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %inc7.i, ptr %2, align 2
  %22 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %xas, align 4
  %conv9.i = zext i8 %inc7.i to i32
  %arrayidx.i.i = getelementptr %struct.xa_node, ptr %13, i32 0, i32 7, i32 %conv9.i
  %24 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.anon.4, ptr %23, i32 0, i32 1
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i20.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i20.i, label %lor.lhs.false.i.i, label %if.end.i.xas_next.exit_crit_edge

if.end.i.xas_next.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

lor.lhs.false.i.i:                                ; preds = %if.end.i
  %call4.i.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.xas_next.exit_crit_edge

lor.lhs.false.i.i.xas_next.exit_crit_edge:        ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call6.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i.i.xas_next.exit_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i.i.xas_next.exit_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i.i
  %.b13.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i, label %land.lhs.true8.i.i.xas_next.exit_crit_edge, label %if.then.i.i

land.lhs.true8.i.i.xas_next.exit_crit_edge:       ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

if.then.i.i:                                      ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @xa_entry.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 1183, ptr noundef nonnull @.str.35) #11
  br label %xas_next.exit

xas_next.exit:                                    ; preds = %if.then.i.i, %land.lhs.true8.i.i.xas_next.exit_crit_edge, %land.lhs.true.i.i.xas_next.exit_crit_edge, %lor.lhs.false.i.i.xas_next.exit_crit_edge, %if.end.i.xas_next.exit_crit_edge, %if.then.i
  %retval.0.i = phi ptr [ %call5.i, %if.then.i ], [ %25, %if.end.i.xas_next.exit_crit_edge ], [ %25, %lor.lhs.false.i.i.xas_next.exit_crit_edge ], [ %25, %land.lhs.true.i.i.xas_next.exit_crit_edge ], [ %25, %land.lhs.true8.i.i.xas_next.exit_crit_edge ], [ %25, %if.then.i.i ]
  %tobool2.not = icmp eq ptr %retval.0.i, null
  %26 = ptrtoint ptr %retval.0.i to i32
  %and.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i = icmp ne i32 %and.i, 0
  %or.cond = select i1 %tobool2.not, i1 true, i1 %tobool.i
  br i1 %or.cond, label %xas_next.exit.while.end_crit_edge, label %if.end

xas_next.exit.while.end_crit_edge:                ; preds = %xas_next.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

if.end:                                           ; preds = %xas_next.exit
  %27 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %0, align 4
  %cmp = icmp eq i32 %28, 0
  br i1 %cmp, label %if.end.while.end_crit_edge, label %if.end.while.cond_crit_edge

if.end.while.cond_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %xas_next.exit.while.end_crit_edge, %while.cond.while.end_crit_edge
  %29 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %0, align 4
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i32 %30
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @page_cache_prev_miss(ptr noundef %mapping, i32 noundef %index, i32 noundef %max_scan) #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %6 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %i_pages, ptr %xas, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %index, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %1, align 4
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %4, align 4
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %5, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.while.cond_crit_edge, %entry
  %max_scan.addr.0 = phi i32 [ %max_scan, %entry ], [ %dec, %if.end.while.cond_crit_edge ]
  %dec = add i32 %max_scan.addr.0, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_scan.addr.0)
  %tobool.not = icmp eq i32 %max_scan.addr.0, 0
  br i1 %tobool.not, label %while.cond.while.end_crit_edge, label %while.body

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.body:                                       ; preds = %while.cond
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %3, align 4
  %14 = ptrtoint ptr %13 to i32
  %and.i.i = and i32 %14, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp ne i32 %and.i.i, 0
  %tobool1.not.i.i = icmp eq ptr %13, null
  %spec.select.i.i = or i1 %tobool1.not.i.i, %tobool.not.i.i
  br i1 %spec.select.i.i, label %while.body.if.then.i_crit_edge, label %lor.lhs.false.i, !prof !300

while.body.if.then.i_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %while.body
  %15 = ptrtoint ptr %13 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %13, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i = icmp eq i8 %16, 0
  br i1 %tobool.not.i, label %lor.rhs.i, label %lor.lhs.false.i.if.then.i_crit_edge, !prof !299

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i

lor.rhs.i:                                        ; preds = %lor.lhs.false.i
  %17 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %2, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %cmp.i = icmp eq i8 %18, 0
  br i1 %cmp.i, label %lor.rhs.i.if.then.i_crit_edge, label %if.end.i, !prof !300

lor.rhs.i.if.then.i_crit_edge:                    ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i

if.then.i:                                        ; preds = %lor.rhs.i.if.then.i_crit_edge, %lor.lhs.false.i.if.then.i_crit_edge, %while.body.if.then.i_crit_edge
  %call5.i = call ptr @__xas_prev(ptr noundef nonnull %xas) #11
  br label %xas_prev.exit

if.end.i:                                         ; preds = %lor.rhs.i
  %19 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %0, align 4
  %dec.i = add i32 %20, -1
  store i32 %dec.i, ptr %0, align 4
  %dec7.i = add i8 %18, -1
  %21 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %dec7.i, ptr %2, align 2
  %22 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %xas, align 4
  %conv9.i = zext i8 %dec7.i to i32
  %arrayidx.i.i = getelementptr %struct.xa_node, ptr %13, i32 0, i32 7, i32 %conv9.i
  %24 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.anon.4, ptr %23, i32 0, i32 1
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i20.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i20.i, label %lor.lhs.false.i.i, label %if.end.i.xas_prev.exit_crit_edge

if.end.i.xas_prev.exit_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_prev.exit

lor.lhs.false.i.i:                                ; preds = %if.end.i
  %call4.i.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.xas_prev.exit_crit_edge

lor.lhs.false.i.i.xas_prev.exit_crit_edge:        ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_prev.exit

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call6.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i.i.xas_prev.exit_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i.i.xas_prev.exit_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_prev.exit

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i.i
  %.b13.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i, label %land.lhs.true8.i.i.xas_prev.exit_crit_edge, label %if.then.i.i

land.lhs.true8.i.i.xas_prev.exit_crit_edge:       ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_prev.exit

if.then.i.i:                                      ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @xa_entry.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 1183, ptr noundef nonnull @.str.35) #11
  br label %xas_prev.exit

xas_prev.exit:                                    ; preds = %if.then.i.i, %land.lhs.true8.i.i.xas_prev.exit_crit_edge, %land.lhs.true.i.i.xas_prev.exit_crit_edge, %lor.lhs.false.i.i.xas_prev.exit_crit_edge, %if.end.i.xas_prev.exit_crit_edge, %if.then.i
  %retval.0.i = phi ptr [ %call5.i, %if.then.i ], [ %25, %if.end.i.xas_prev.exit_crit_edge ], [ %25, %lor.lhs.false.i.i.xas_prev.exit_crit_edge ], [ %25, %land.lhs.true.i.i.xas_prev.exit_crit_edge ], [ %25, %land.lhs.true8.i.i.xas_prev.exit_crit_edge ], [ %25, %if.then.i.i ]
  %tobool2.not = icmp eq ptr %retval.0.i, null
  %26 = ptrtoint ptr %retval.0.i to i32
  %and.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i = icmp ne i32 %and.i, 0
  %or.cond = select i1 %tobool2.not, i1 true, i1 %tobool.i
  br i1 %or.cond, label %xas_prev.exit.while.end_crit_edge, label %if.end

xas_prev.exit.while.end_crit_edge:                ; preds = %xas_prev.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

if.end:                                           ; preds = %xas_prev.exit
  %27 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %0, align 4
  %cmp = icmp eq i32 %28, -1
  br i1 %cmp, label %if.end.while.end_crit_edge, label %if.end.while.cond_crit_edge

if.end.while.cond_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %xas_prev.exit.while.end_crit_edge, %while.cond.while.end_crit_edge
  %29 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %0, align 4
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i32 %30
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__filemap_get_folio(ptr noundef %mapping, i32 noundef %index, i32 noundef %fgp_flags, i32 noundef %gfp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  br label %repeat.outer

repeat.outer:                                     ; preds = %if.then142.repeat.outer_crit_edge, %entry
  %gfp.addr.0.ph = phi i32 [ %spec.select201, %if.then142.repeat.outer_crit_edge ], [ %gfp, %entry ]
  %fgp_flags.addr.0.ph = phi i32 [ %spec.select202, %if.then142.repeat.outer_crit_edge ], [ %fgp_flags, %entry ]
  %call256 = tail call fastcc ptr @mapping_get_entry(ptr noundef %mapping, i32 noundef %index)
  %0 = ptrtoint ptr %call256 to i32
  %and.i257 = and i32 %0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i257)
  %tobool.i.not258 = icmp eq i32 %and.i257, 0
  br i1 %tobool.i.not258, label %if.end3.lr.ph, label %repeat.outer.if.then_crit_edge

repeat.outer.if.then_crit_edge:                   ; preds = %repeat.outer
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then

if.end3.lr.ph:                                    ; preds = %repeat.outer
  %and7 = and i32 %fgp_flags.addr.0.ph, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  %and10 = and i32 %fgp_flags.addr.0.ph, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br label %if.end3

if.then:                                          ; preds = %if.then20.if.then_crit_edge, %repeat.outer.if.then_crit_edge
  %call.lcssa = phi ptr [ %call256, %repeat.outer.if.then_crit_edge ], [ %call, %if.then20.if.then_crit_edge ]
  %and = and i32 %fgp_flags.addr.0.ph, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then.land.lhs.true_crit_edge, label %if.then.cleanup154_crit_edge

if.then.cleanup154_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup154

if.then.land.lhs.true_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true

if.end3:                                          ; preds = %if.then20.if.end3_crit_edge, %if.end3.lr.ph
  %call259 = phi ptr [ %call256, %if.end3.lr.ph ], [ %call, %if.then20.if.end3_crit_edge ]
  %tobool4.not = icmp eq ptr %call259, null
  br i1 %tobool4.not, label %if.end3.land.lhs.true_crit_edge, label %if.end6

if.end3.land.lhs.true_crit_edge:                  ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #13
  br label %land.lhs.true

if.end6:                                          ; preds = %if.end3
  br i1 %tobool8.not, label %if.end6.if.end39_crit_edge, label %if.then9

if.end6.if.end39_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end39

if.then9:                                         ; preds = %if.end6
  br i1 %tobool11.not, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.then9
  %1 = getelementptr inbounds %struct.page, ptr %call259, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %1, align 4
  %and.i.i.i203 = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i203)
  %tobool.not.i.i204 = icmp eq i32 %and.i.i.i203, 0
  br i1 %tobool.not.i.i204, label %folio_flags.exit.i, label %if.then.i.i205, !prof !299

if.then.i.i205:                                   ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call259, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %if.then12
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call259, i32 noundef 4) #11
  %4 = ptrtoint ptr %call259 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %call259, align 4
  %and.i.i4.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool.not.i.i.i, label %folio_trylock.exit, label %folio_flags.exit.i.if.then14_crit_edge

folio_flags.exit.i.if.then14_crit_edge:           ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then14

folio_trylock.exit:                               ; preds = %folio_flags.exit.i
  tail call void @llvm.prefetch.p0(ptr nonnull %call259, i32 1, i32 3, i32 1) #11
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %call259, ptr nonnull %call259, i32 1, ptr nonnull elementtype(i32) %call259) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i = and i32 %asmresult.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %phi.cmp.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %phi.cmp.i.i, label %folio_trylock.exit.if.end16_crit_edge, label %folio_trylock.exit.if.then14_crit_edge

folio_trylock.exit.if.then14_crit_edge:           ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then14

folio_trylock.exit.if.end16_crit_edge:            ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end16

if.then14:                                        ; preds = %folio_trylock.exit.if.then14_crit_edge, %folio_flags.exit.i.if.then14_crit_edge
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %call259, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %7 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.i.i.i = icmp eq i32 %8, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call259, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %if.then14
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@__filemap_get_folio, %if.then.i.i.i.i)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef nonnull %call259, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i, label %folio_put_testzero.exit.i.cleanup154_crit_edge

folio_put_testzero.exit.i.cleanup154_crit_edge:   ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup154

if.then.i:                                        ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef nonnull %call259) #11
  br label %cleanup154

if.else:                                          ; preds = %if.then9
  tail call void @__might_sleep(ptr noundef nonnull @.str.38, i32 noundef 777) #11
  %10 = getelementptr inbounds %struct.page, ptr %call259, i32 0, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  %and.i.i.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i206 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i206, label %folio_flags.exit.i.i, label %if.then.i.i.i207, !prof !299

if.then.i.i.i207:                                 ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call259, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i.i:                             ; preds = %if.else
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call259, i32 noundef 4) #11
  %13 = ptrtoint ptr %call259 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %call259, align 4
  %and.i.i4.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_trylock.exit.i, label %folio_flags.exit.i.i.if.then.i208_crit_edge

folio_flags.exit.i.i.if.then.i208_crit_edge:      ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i208

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr nonnull %call259, i32 1, i32 3, i32 1) #11
  %15 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %call259, ptr nonnull %call259, i32 1, ptr nonnull elementtype(i32) %call259) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %15, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.if.end16_crit_edge, label %folio_trylock.exit.i.if.then.i208_crit_edge

folio_trylock.exit.i.if.then.i208_crit_edge:      ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i208

folio_trylock.exit.i.if.end16_crit_edge:          ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end16

if.then.i208:                                     ; preds = %folio_trylock.exit.i.if.then.i208_crit_edge, %folio_flags.exit.i.i.if.then.i208_crit_edge
  %call.i.i = tail call fastcc i32 @folio_wait_bit_common(ptr noundef nonnull %call259, i32 noundef 0, i32 noundef 2, i32 noundef 0) #11
  br label %if.end16

if.end16:                                         ; preds = %if.then.i208, %folio_trylock.exit.i.if.end16_crit_edge, %folio_trylock.exit.if.end16_crit_edge
  %mapping17 = getelementptr inbounds %struct.anon, ptr %call259, i32 0, i32 2
  %16 = ptrtoint ptr %mapping17 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mapping17, align 4
  %cmp.not = icmp eq ptr %17, %mapping
  br i1 %cmp.not, label %do.body, label %if.then20, !prof !299

if.then20:                                        ; preds = %if.end16
  tail call void @folio_unlock(ptr noundef nonnull %call259)
  tail call fastcc void @folio_put(ptr noundef nonnull %call259)
  %call = tail call fastcc ptr @mapping_get_entry(ptr noundef %mapping, i32 noundef %index)
  %18 = ptrtoint ptr %call to i32
  %and.i = and i32 %18, 1
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.then20.if.end3_crit_edge, label %if.then20.if.then_crit_edge

if.then20.if.then_crit_edge:                      ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then

if.then20.if.end3_crit_edge:                      ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end3

do.body:                                          ; preds = %if.end16
  %19 = getelementptr inbounds %struct.page, ptr %call259, i32 0, i32 1
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  %and.i.i.i.i.i.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_test_swapbacked.exit.i.i.i, label %if.then.i.i.i.i.i, !prof !299

if.then.i.i.i.i.i:                                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call259, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapbacked.exit.i.i.i:                 ; preds = %do.body
  %22 = ptrtoint ptr %call259 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %call259, align 4
  %24 = and i32 %23, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.i.not.i.i.i = icmp eq i32 %24, 0
  br i1 %tobool.i.not.i.i.i, label %folio_test_swapbacked.exit.i.i.i.if.end.i.i_crit_edge, label %land.rhs.i.i.i

folio_test_swapbacked.exit.i.i.i.if.end.i.i_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

land.rhs.i.i.i:                                   ; preds = %folio_test_swapbacked.exit.i.i.i
  %25 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %19, align 4
  %and.i.i.i.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i209 = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i209, label %folio_test_swapcache.exit.i.i, label %if.then.i.i.i.i210, !prof !299

if.then.i.i.i.i210:                               ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call259, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapcache.exit.i.i:                    ; preds = %land.rhs.i.i.i
  %27 = ptrtoint ptr %call259 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %call259, align 4
  %29 = and i32 %28, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.i.not.i.i = icmp eq i32 %29, 0
  br i1 %tobool.i.not.i.i, label %folio_test_swapcache.exit.i.i.if.end.i.i_crit_edge, label %if.then.i.i211, !prof !299

folio_test_swapcache.exit.i.i.if.end.i.i_crit_edge: ; preds = %folio_test_swapcache.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

if.then.i.i211:                                   ; preds = %folio_test_swapcache.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %call2.i.i = tail call i32 @__page_file_index(ptr noundef nonnull %call259) #11
  br label %folio_index.exit.i

if.end.i.i:                                       ; preds = %folio_test_swapcache.exit.i.i.if.end.i.i_crit_edge, %folio_test_swapbacked.exit.i.i.i.if.end.i.i_crit_edge
  %index.i.i = getelementptr inbounds %struct.anon, ptr %call259, i32 0, i32 3
  %30 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %index.i.i, align 4
  br label %folio_index.exit.i

folio_index.exit.i:                               ; preds = %if.end.i.i, %if.then.i.i211
  %retval.0.i.i = phi i32 [ %call2.i.i, %if.then.i.i211 ], [ %31, %if.end.i.i ]
  %32 = ptrtoint ptr %call259 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %call259, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %33)
  %cmp.i.not.i.i.i.i = icmp eq i32 %33, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i9.i, label %PageHead.exit.i.i.i, !prof !300

if.then.i.i.i9.i:                                 ; preds = %folio_index.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call259, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %folio_index.exit.i
  %34 = ptrtoint ptr %call259 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %call259, align 4
  %36 = and i32 %35, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i.i.i212 = icmp eq i32 %36, 0
  br i1 %tobool.not.i.i.i212, label %PageHead.exit.i.i.i.folio_contains.exit_crit_edge, label %if.end.i.i.i213

PageHead.exit.i.i.i.folio_contains.exit_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_contains.exit

if.end.i.i.i213:                                  ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %call259, i32 1, i32 1, i32 0, i32 2
  %37 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_contains.exit

folio_contains.exit:                              ; preds = %if.end.i.i.i213, %PageHead.exit.i.i.i.folio_contains.exit_crit_edge
  %retval.0.i.i.i214 = phi i32 [ %38, %if.end.i.i.i213 ], [ 1, %PageHead.exit.i.i.i.folio_contains.exit_crit_edge ]
  %sub.i = sub i32 %index, %retval.0.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %retval.0.i.i.i214)
  %cmp4.i = icmp ult i32 %sub.i, %retval.0.i.i.i214
  br i1 %cmp4.i, label %folio_contains.exit.if.end39_crit_edge, label %if.then31, !prof !299

folio_contains.exit.if.end39_crit_edge:           ; preds = %folio_contains.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end39

if.then31:                                        ; preds = %folio_contains.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call259, ptr noundef nonnull @.str.9) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1969, 0\0A.popsection", ""() #11, !srcloc !366
  unreachable

if.end39:                                         ; preds = %folio_contains.exit.if.end39_crit_edge, %if.end6.if.end39_crit_edge
  %call259266 = phi ptr [ %call259, %folio_contains.exit.if.end39_crit_edge ], [ %call256, %if.end6.if.end39_crit_edge ]
  %and40 = and i32 %fgp_flags.addr.0.ph, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  br i1 %tobool41.not, label %if.else43, label %if.then42

if.then42:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @folio_mark_accessed(ptr noundef nonnull %call259266) #11
  br label %if.end51

if.else43:                                        ; preds = %if.end39
  %and44 = and i32 %fgp_flags.addr.0.ph, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44)
  %tobool45.not = icmp eq i32 %and44, 0
  br i1 %tobool45.not, label %if.else43.if.end51_crit_edge, label %if.then46

if.else43.if.end51_crit_edge:                     ; preds = %if.else43
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end51

if.then46:                                        ; preds = %if.else43
  %call.i = tail call ptr @lookup_page_ext(ptr noundef nonnull %call259266) #11
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then46.if.end51_crit_edge, label %folio_test_idle.exit, !prof !300

if.then46.if.end51_crit_edge:                     ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end51

folio_test_idle.exit:                             ; preds = %if.then46
  %39 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %call.i, align 4
  %41 = and i32 %40, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool5.i.not = icmp eq i32 %41, 0
  br i1 %tobool5.i.not, label %folio_test_idle.exit.if.end51_crit_edge, label %if.then48

folio_test_idle.exit.if.end51_crit_edge:          ; preds = %folio_test_idle.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end51

if.then48:                                        ; preds = %folio_test_idle.exit
  %call.i215 = tail call ptr @lookup_page_ext(ptr noundef nonnull %call259266) #11
  %tobool.not.i216 = icmp eq ptr %call.i215, null
  br i1 %tobool.not.i216, label %if.then48.if.end51_crit_edge, label %if.end.i217, !prof !300

if.then48.if.end51_crit_edge:                     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end51

if.end.i217:                                      ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @_clear_bit(i32 noundef 3, ptr noundef nonnull %call.i215) #11
  br label %if.end51

if.end51:                                         ; preds = %if.end.i217, %if.then48.if.end51_crit_edge, %folio_test_idle.exit.if.end51_crit_edge, %if.then46.if.end51_crit_edge, %if.else43.if.end51_crit_edge, %if.then42
  %and52 = and i32 %fgp_flags.addr.0.ph, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %if.end51.cleanup154_crit_edge, label %if.then54

if.end51.cleanup154_crit_edge:                    ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup154

if.then54:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @folio_wait_stable(ptr noundef nonnull %call259266) #11
  br label %cleanup154

land.lhs.true:                                    ; preds = %if.end3.land.lhs.true_crit_edge, %if.then.land.lhs.true_crit_edge
  %and57 = and i32 %fgp_flags.addr.0.ph, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and57)
  %tobool58.not = icmp eq i32 %and57, 0
  br i1 %tobool58.not, label %land.lhs.true.cleanup154_crit_edge, label %if.then59

land.lhs.true.cleanup154_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup154

if.then59:                                        ; preds = %land.lhs.true
  %and60 = and i32 %fgp_flags.addr.0.ph, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and60)
  %tobool61.not = icmp eq i32 %and60, 0
  br i1 %tobool61.not, label %if.then59.if.end65_crit_edge, label %land.lhs.true62

if.then59.if.end65_crit_edge:                     ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end65

land.lhs.true62:                                  ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #13
  %42 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %mapping, align 4
  %call.i218 = tail call ptr @inode_to_bdi(ptr noundef %43) #11
  %capabilities.i = getelementptr inbounds %struct.backing_dev_info, ptr %call.i218, i32 0, i32 6
  %44 = ptrtoint ptr %capabilities.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %capabilities.i, align 8
  %and.i219 = shl i32 %45, 12
  %46 = and i32 %and.i219, 4096
  %47 = or i32 %46, %gfp.addr.0.ph
  br label %if.end65

if.end65:                                         ; preds = %land.lhs.true62, %if.then59.if.end65_crit_edge
  %gfp.addr.1 = phi i32 [ %gfp.addr.0.ph, %if.then59.if.end65_crit_edge ], [ %47, %land.lhs.true62 ]
  %and66 = and i32 %fgp_flags.addr.0.ph, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and66)
  %tobool67.not = icmp eq i32 %and66, 0
  %and69 = and i32 %gfp.addr.1, -129
  %spec.select201 = select i1 %tobool67.not, i32 %gfp.addr.1, i32 %and69
  %call38.i.i.i = tail call ptr @__folio_alloc(i32 noundef %spec.select201, i32 noundef 0, i32 noundef 0, ptr noundef null) #11
  %tobool72.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool72.not, label %if.end65.cleanup154_crit_edge, label %if.end74

if.end65.cleanup154_crit_edge:                    ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup154

if.end74:                                         ; preds = %if.end65
  %and75 = and i32 %fgp_flags.addr.0.ph, 66
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75)
  %tobool76.not = icmp eq i32 %and75, 0
  br i1 %tobool76.not, label %land.rhs, label %if.end74.if.end118_crit_edge

if.end74.if.end118_crit_edge:                     ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end118

land.rhs:                                         ; preds = %if.end74
  %.b200 = load i1, ptr @__filemap_get_folio.__already_done, align 1
  br i1 %.b200, label %land.rhs.if.end118_crit_edge, label %if.then93, !prof !299

land.rhs.if.end118_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end118

if.then93:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @__filemap_get_folio.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1994, i32 noundef 9, ptr noundef null) #11
  br label %if.end118

if.end118:                                        ; preds = %if.then93, %land.rhs.if.end118_crit_edge, %if.end74.if.end118_crit_edge
  %or128 = or i32 %fgp_flags.addr.0.ph, 2
  %spec.select202 = select i1 %tobool76.not, i32 %or128, i32 %fgp_flags.addr.0.ph
  %and130 = and i32 %spec.select202, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and130)
  %tobool131.not = icmp eq i32 %and130, 0
  br i1 %tobool131.not, label %if.end118.if.end133_crit_edge, label %if.then132

if.end118.if.end133_crit_edge:                    ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end133

if.then132:                                       ; preds = %if.end118
  %48 = getelementptr inbounds %struct.page, ptr %call38.i.i.i, i32 0, i32 1
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %48, align 4
  %and.i.i.i = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %__folio_set_referenced.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %if.then132
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call38.i.i.i, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

__folio_set_referenced.exit:                      ; preds = %if.then132
  call void @__sanitizer_cov_trace_pc() #13
  %51 = ptrtoint ptr %call38.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %call38.i.i.i, align 4
  %or.i.i = or i32 %52, 2
  store i32 %or.i.i, ptr %call38.i.i.i, align 4
  br label %if.end133

if.end133:                                        ; preds = %__folio_set_referenced.exit, %if.end118.if.end133_crit_edge
  %call134 = tail call i32 @filemap_add_folio(ptr noundef %mapping, ptr noundef nonnull %call38.i.i.i, i32 noundef %index, i32 noundef %spec.select201)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call134)
  %tobool135.not = icmp eq i32 %call134, 0
  br i1 %tobool135.not, label %if.end146, label %if.then142, !prof !299

if.then142:                                       ; preds = %if.end133
  tail call fastcc void @folio_put(ptr noundef nonnull %call38.i.i.i)
  %cmp143 = icmp eq i32 %call134, -17
  br i1 %cmp143, label %if.then142.repeat.outer_crit_edge, label %if.then142.cleanup154_crit_edge

if.then142.cleanup154_crit_edge:                  ; preds = %if.then142
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup154

if.then142.repeat.outer_crit_edge:                ; preds = %if.then142
  call void @__sanitizer_cov_trace_pc() #13
  br label %repeat.outer

if.end146:                                        ; preds = %if.end133
  %and149 = and i32 %spec.select202, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and149)
  %tobool150.not = icmp eq i32 %and149, 0
  br i1 %tobool150.not, label %if.end146.cleanup154_crit_edge, label %if.then151

if.end146.cleanup154_crit_edge:                   ; preds = %if.end146
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup154

if.then151:                                       ; preds = %if.end146
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @folio_unlock(ptr noundef nonnull %call38.i.i.i)
  br label %cleanup154

cleanup154:                                       ; preds = %if.then151, %if.end146.cleanup154_crit_edge, %if.then142.cleanup154_crit_edge, %if.end65.cleanup154_crit_edge, %land.lhs.true.cleanup154_crit_edge, %if.then54, %if.end51.cleanup154_crit_edge, %if.then.i, %folio_put_testzero.exit.i.cleanup154_crit_edge, %if.then.cleanup154_crit_edge
  %retval.2 = phi ptr [ null, %folio_put_testzero.exit.i.cleanup154_crit_edge ], [ null, %if.then.i ], [ %call259266, %if.end51.cleanup154_crit_edge ], [ %call259266, %if.then54 ], [ %call38.i.i.i, %if.end146.cleanup154_crit_edge ], [ %call38.i.i.i, %if.then151 ], [ null, %if.then142.cleanup154_crit_edge ], [ null, %if.end65.cleanup154_crit_edge ], [ null, %land.lhs.true.cleanup154_crit_edge ], [ %call.lcssa, %if.then.cleanup154_crit_edge ]
  ret ptr %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @mapping_get_entry(ptr noundef %mapping, i32 noundef %index) unnamed_addr #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %6 = getelementptr inbounds i8, ptr %xas, i32 12
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %6, align 4
  %8 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %i_pages, ptr %xas, align 4
  %9 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %index, ptr %0, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %1, align 4
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %4, align 4
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %5, align 4
  %13 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %16, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %entry.repeat.preheader_crit_edge, label %land.lhs.true.i

entry.repeat.preheader_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %repeat.preheader

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.repeat.preheader_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.repeat.preheader_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %repeat.preheader

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.repeat.preheader_crit_edge, label %if.then.i

land.lhs.true2.i.repeat.preheader_crit_edge:      ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %repeat.preheader

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %repeat.preheader

repeat.preheader:                                 ; preds = %if.then.i, %land.lhs.true2.i.repeat.preheader_crit_edge, %land.lhs.true.i.repeat.preheader_crit_edge, %entry.repeat.preheader_crit_edge
  br label %repeat

repeat:                                           ; preds = %repeat.backedge, %repeat.preheader
  %17 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  %call = call ptr @xas_load(ptr noundef nonnull %xas) #11
  %magicptr = ptrtoint ptr %call to i32
  %18 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.60)
  switch i32 %magicptr, label %lor.lhs.false [
    i32 1030, label %repeat.repeat.backedge_crit_edge
    i32 1026, label %if.end4.i
    i32 0, label %repeat.out_crit_edge
  ]

repeat.out_crit_edge:                             ; preds = %repeat
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

repeat.repeat.backedge_crit_edge:                 ; preds = %repeat
  call void @__sanitizer_cov_trace_pc() #13
  br label %repeat.backedge

if.end4.i:                                        ; preds = %repeat
  call void @__sanitizer_cov_trace_pc() #13
  %19 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  br label %repeat.backedge

repeat.backedge:                                  ; preds = %if.then11, %folio_try_get_rcu.exit.repeat.backedge_crit_edge, %if.end4.i, %repeat.repeat.backedge_crit_edge
  br label %repeat

lor.lhs.false:                                    ; preds = %repeat
  %and.i = and i32 %magicptr, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end4, label %lor.lhs.false.out_crit_edge

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.end4:                                          ; preds = %lor.lhs.false
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %call, i32 0, i32 3
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !367
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %20 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !368
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %20, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i, label %if.end4.atomic_add_unless.exit.i.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i

if.end4.atomic_add_unless.exit.i.i.i.i_crit_edge: ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i.i.i

do.end11.i.i.i.i.i.i.i:                           ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !369
  br label %atomic_add_unless.exit.i.i.i.i

atomic_add_unless.exit.i.i.i.i:                   ; preds = %do.end11.i.i.i.i.i.i.i, %if.end4.atomic_add_unless.exit.i.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@mapping_get_entry, %if.then.i.i.i.i)) #11
          to label %folio_try_get_rcu.exit [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %atomic_add_unless.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  call void @__page_ref_mod_unless(ptr noundef nonnull %call, i32 noundef 1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_try_get_rcu.exit

folio_try_get_rcu.exit:                           ; preds = %if.then.i.i.i.i, %atomic_add_unless.exit.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.end7, label %folio_try_get_rcu.exit.repeat.backedge_crit_edge

folio_try_get_rcu.exit.repeat.backedge_crit_edge: ; preds = %folio_try_get_rcu.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %repeat.backedge

if.end7:                                          ; preds = %folio_try_get_rcu.exit
  %21 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %3, align 4
  %tobool.not.i20 = icmp eq ptr %22, null
  br i1 %tobool.not.i20, label %if.then.i21, label %if.end.i

if.then.i21:                                      ; preds = %if.end7
  %23 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %xas, align 4
  %xa_head.i.i = getelementptr inbounds %struct.xarray, ptr %24, i32 0, i32 2
  %25 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %xa_head.i.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.anon.4, ptr %24, i32 0, i32 1
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %if.then.i21.xas_reload.exit_crit_edge

if.then.i21.xas_reload.exit_crit_edge:            ; preds = %if.then.i21
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i.i:                                ; preds = %if.then.i21
  %call2.i.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.xas_reload.exit_crit_edge

lor.lhs.false.i.i.xas_reload.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call4.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i

land.lhs.true.i.i.xas_reload.exit_crit_edge:      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true6.i.i:                               ; preds = %land.lhs.true.i.i
  %.b12.i.i = load i1, ptr @xa_head.__warned, align 1
  br i1 %.b12.i.i, label %land.lhs.true6.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true6.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

if.end.i:                                         ; preds = %if.end7
  %27 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %2, align 2
  %29 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %xas, align 4
  %conv.i = zext i8 %28 to i32
  %arrayidx.i.i = getelementptr %struct.xa_node, ptr %22, i32 0, i32 7, i32 %conv.i
  %31 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %dep_map.i10.i = getelementptr inbounds %struct.anon.4, ptr %30, i32 0, i32 1
  %call.i.i11.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i10.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11.i)
  %tobool.not.i12.i = icmp eq i32 %call.i.i11.i, 0
  br i1 %tobool.not.i12.i, label %lor.lhs.false.i15.i, label %if.end.i.xas_reload.exit_crit_edge

if.end.i.xas_reload.exit_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i15.i:                              ; preds = %if.end.i
  %call4.i13.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i13.i)
  %tobool5.not.i14.i = icmp eq i32 %call4.i13.i, 0
  br i1 %tobool5.not.i14.i, label %land.lhs.true.i16.i, label %lor.lhs.false.i15.i.xas_reload.exit_crit_edge

lor.lhs.false.i15.i.xas_reload.exit_crit_edge:    ; preds = %lor.lhs.false.i15.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i16.i:                              ; preds = %lor.lhs.false.i15.i
  %call6.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i16.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i16.i.xas_reload.exit_crit_edge:    ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i16.i
  %.b13.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i, label %land.lhs.true8.i.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true8.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

cleanup.sink.split.i:                             ; preds = %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge
  %xa_entry.__warned.sink.i = phi ptr [ @xa_head.__warned, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ @xa_entry.__warned, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 1167, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ 1183, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi ptr [ %26, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ %32, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %33 = ptrtoint ptr %xa_entry.__warned.sink.i to i32
  call void @__asan_store1_noabort(i32 %33)
  store i1 true, ptr %xa_entry.__warned.sink.i, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef %.sink.i, ptr noundef nonnull @.str.35) #11
  br label %xas_reload.exit

xas_reload.exit:                                  ; preds = %cleanup.sink.split.i, %land.lhs.true8.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i16.i.xas_reload.exit_crit_edge, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge, %if.end.i.xas_reload.exit_crit_edge, %land.lhs.true6.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i.i.xas_reload.exit_crit_edge, %lor.lhs.false.i.i.xas_reload.exit_crit_edge, %if.then.i21.xas_reload.exit_crit_edge
  %retval.0.i22 = phi ptr [ %26, %if.then.i21.xas_reload.exit_crit_edge ], [ %26, %lor.lhs.false.i.i.xas_reload.exit_crit_edge ], [ %26, %land.lhs.true.i.i.xas_reload.exit_crit_edge ], [ %26, %land.lhs.true6.i.i.xas_reload.exit_crit_edge ], [ %32, %if.end.i.xas_reload.exit_crit_edge ], [ %32, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge ], [ %32, %land.lhs.true.i16.i.xas_reload.exit_crit_edge ], [ %32, %land.lhs.true8.i.i.xas_reload.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp.not = icmp eq ptr %call, %retval.0.i22
  br i1 %cmp.not, label %xas_reload.exit.out_crit_edge, label %if.then11, !prof !299

xas_reload.exit.out_crit_edge:                    ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.then11:                                        ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @folio_put(ptr noundef nonnull %call)
  br label %repeat.backedge

out:                                              ; preds = %xas_reload.exit.out_crit_edge, %lor.lhs.false.out_crit_edge, %repeat.out_crit_edge
  %call.i23 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i23, label %out.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i26

out.rcu_read_unlock.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i26:                                ; preds = %out
  %call1.i24 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i24)
  %tobool.not.i25 = icmp eq i32 %call1.i24, 0
  br i1 %tobool.not.i25, label %land.lhs.true.i26.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i28

land.lhs.true.i26.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i26
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i28:                               ; preds = %land.lhs.true.i26
  %.b4.i27 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i27, label %land.lhs.true2.i28.rcu_read_unlock.exit_crit_edge, label %if.then.i29

land.lhs.true2.i28.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i28
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i29:                                      ; preds = %land.lhs.true2.i28
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i29, %land.lhs.true2.i28.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i26.rcu_read_unlock.exit_crit_edge, %out.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %34 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i30 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i30 to ptr
  %preempt_count.i.i.i.i31 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i31 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i31, align 4
  %sub.i.i.i = add i32 %37, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i31, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @folio_mark_accessed(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @folio_wait_stable(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_get_entries(ptr noundef %mapping, i32 noundef %start, i32 noundef %end, ptr nocapture noundef %fbatch, ptr nocapture noundef writeonly %indices) local_unnamed_addr #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %6 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %i_pages, ptr %xas, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %start, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %1, align 4
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %4, align 4
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %5, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %15, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %entry.retry.i.preheader_crit_edge, label %land.lhs.true.i

entry.retry.i.preheader_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.preheader

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.retry.i.preheader_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.retry.i.preheader_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.preheader

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.retry.i.preheader_crit_edge, label %if.then.i

land.lhs.true2.i.retry.i.preheader_crit_edge:     ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.preheader

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %retry.i.preheader

retry.i.preheader:                                ; preds = %if.then.i, %land.lhs.true2.i.retry.i.preheader_crit_edge, %land.lhs.true.i.retry.i.preheader_crit_edge, %entry.retry.i.preheader_crit_edge
  br label %retry.i

retry.i:                                          ; preds = %retry.i.backedge, %retry.i.preheader
  %call.i6 = call ptr @xas_find(ptr noundef nonnull %xas, i32 noundef %end) #11
  %magicptr = ptrtoint ptr %call.i6 to i32
  %16 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.61)
  switch i32 %magicptr, label %lor.lhs.false.i [
    i32 1030, label %retry.i.retry.i.backedge_crit_edge
    i32 1026, label %retry.i.retry.backedge.sink.split.i_crit_edge
    i32 0, label %retry.i.while.end_crit_edge
  ]

retry.i.while.end_crit_edge:                      ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

retry.i.retry.backedge.sink.split.i_crit_edge:    ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split.i

retry.i.retry.i.backedge_crit_edge:               ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.backedge

lor.lhs.false.i:                                  ; preds = %retry.i
  %and.i.i = and i32 %magicptr, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end7.i, label %lor.lhs.false.i.find_get_entry.exit_crit_edge

lor.lhs.false.i.find_get_entry.exit_crit_edge:    ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %find_get_entry.exit

if.end7.i:                                        ; preds = %lor.lhs.false.i
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %call.i6, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !367
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #11
  %17 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #11, !srcloc !368
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i.i, label %if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i.i

if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge: ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i.i.i.i

do.end11.i.i.i.i.i.i.i.i:                         ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !369
  br label %atomic_add_unless.exit.i.i.i.i.i

atomic_add_unless.exit.i.i.i.i.i:                 ; preds = %do.end11.i.i.i.i.i.i.i.i, %if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@find_get_entries, %if.then.i.i.i.i.i)) #11
          to label %folio_try_get_rcu.exit.i [label %if.then.i.i.i.i.i], !srcloc !306

if.then.i.i.i.i.i:                                ; preds = %atomic_add_unless.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_unless(ptr noundef nonnull %call.i6, i32 noundef 1, i32 noundef %conv.i.i.i.i.i) #11
  br label %folio_try_get_rcu.exit.i

folio_try_get_rcu.exit.i:                         ; preds = %if.then.i.i.i.i.i, %atomic_add_unless.exit.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.end10.i, label %folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge

folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge: ; preds = %folio_try_get_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split.i

if.end10.i:                                       ; preds = %folio_try_get_rcu.exit.i
  %18 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %3, align 4
  %tobool.not.i17 = icmp eq ptr %19, null
  br i1 %tobool.not.i17, label %if.then.i18, label %if.end.i

if.then.i18:                                      ; preds = %if.end10.i
  %20 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %xas, align 4
  %xa_head.i.i = getelementptr inbounds %struct.xarray, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %xa_head.i.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.anon.4, ptr %21, i32 0, i32 1
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %if.then.i18.xas_reload.exit_crit_edge

if.then.i18.xas_reload.exit_crit_edge:            ; preds = %if.then.i18
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i.i:                                ; preds = %if.then.i18
  %call2.i.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.xas_reload.exit_crit_edge

lor.lhs.false.i.i.xas_reload.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call4.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i

land.lhs.true.i.i.xas_reload.exit_crit_edge:      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true6.i.i:                               ; preds = %land.lhs.true.i.i
  %.b12.i.i = load i1, ptr @xa_head.__warned, align 1
  br i1 %.b12.i.i, label %land.lhs.true6.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true6.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

if.end.i:                                         ; preds = %if.end10.i
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %2, align 2
  %26 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %xas, align 4
  %conv.i19 = zext i8 %25 to i32
  %arrayidx.i.i = getelementptr %struct.xa_node, ptr %19, i32 0, i32 7, i32 %conv.i19
  %28 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %dep_map.i10.i = getelementptr inbounds %struct.anon.4, ptr %27, i32 0, i32 1
  %call.i.i11.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i10.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11.i)
  %tobool.not.i12.i = icmp eq i32 %call.i.i11.i, 0
  br i1 %tobool.not.i12.i, label %lor.lhs.false.i15.i, label %if.end.i.xas_reload.exit_crit_edge

if.end.i.xas_reload.exit_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i15.i:                              ; preds = %if.end.i
  %call4.i13.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i13.i)
  %tobool5.not.i14.i = icmp eq i32 %call4.i13.i, 0
  br i1 %tobool5.not.i14.i, label %land.lhs.true.i16.i, label %lor.lhs.false.i15.i.xas_reload.exit_crit_edge

lor.lhs.false.i15.i.xas_reload.exit_crit_edge:    ; preds = %lor.lhs.false.i15.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i16.i:                              ; preds = %lor.lhs.false.i15.i
  %call6.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i16.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i16.i.xas_reload.exit_crit_edge:    ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i16.i
  %.b13.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i, label %land.lhs.true8.i.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true8.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

cleanup.sink.split.i:                             ; preds = %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge
  %xa_entry.__warned.sink.i = phi ptr [ @xa_head.__warned, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ @xa_entry.__warned, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 1167, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ 1183, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi ptr [ %23, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ %29, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %30 = ptrtoint ptr %xa_entry.__warned.sink.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i1 true, ptr %xa_entry.__warned.sink.i, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef %.sink.i, ptr noundef nonnull @.str.35) #11
  br label %xas_reload.exit

xas_reload.exit:                                  ; preds = %cleanup.sink.split.i, %land.lhs.true8.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i16.i.xas_reload.exit_crit_edge, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge, %if.end.i.xas_reload.exit_crit_edge, %land.lhs.true6.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i.i.xas_reload.exit_crit_edge, %lor.lhs.false.i.i.xas_reload.exit_crit_edge, %if.then.i18.xas_reload.exit_crit_edge
  %retval.0.i = phi ptr [ %23, %if.then.i18.xas_reload.exit_crit_edge ], [ %23, %lor.lhs.false.i.i.xas_reload.exit_crit_edge ], [ %23, %land.lhs.true.i.i.xas_reload.exit_crit_edge ], [ %23, %land.lhs.true6.i.i.xas_reload.exit_crit_edge ], [ %29, %if.end.i.xas_reload.exit_crit_edge ], [ %29, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge ], [ %29, %land.lhs.true.i16.i.xas_reload.exit_crit_edge ], [ %29, %land.lhs.true8.i.i.xas_reload.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp12.not.i = icmp eq ptr %call.i6, %retval.0.i
  br i1 %cmp12.not.i, label %xas_reload.exit.find_get_entry.exit_crit_edge, label %if.then15.i, !prof !299

xas_reload.exit.find_get_entry.exit_crit_edge:    ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %find_get_entry.exit

if.then15.i:                                      ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @folio_put(ptr noundef nonnull %call.i6) #11
  br label %retry.backedge.sink.split.i

retry.backedge.sink.split.i:                      ; preds = %if.then15.i, %folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge, %retry.i.retry.backedge.sink.split.i_crit_edge
  %31 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  br label %retry.i.backedge

find_get_entry.exit:                              ; preds = %xas_reload.exit.find_get_entry.exit_crit_edge, %lor.lhs.false.i.find_get_entry.exit_crit_edge
  %cmp.not = icmp eq ptr %call.i6, null
  br i1 %cmp.not, label %find_get_entry.exit.while.end_crit_edge, label %while.body

find_get_entry.exit.while.end_crit_edge:          ; preds = %find_get_entry.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.body:                                       ; preds = %find_get_entry.exit
  %32 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %0, align 4
  %34 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %fbatch, align 4
  %idxprom = zext i8 %35 to i32
  %arrayidx = getelementptr i32, ptr %indices, i32 %idxprom
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %33, ptr %arrayidx, align 4
  %37 = load i8, ptr %fbatch, align 4
  %inc.i = add i8 %37, 1
  store i8 %inc.i, ptr %fbatch, align 4
  %idxprom.i = zext i8 %37 to i32
  %arrayidx.i = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %idxprom.i
  %38 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %call.i6, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 15, i8 %inc.i)
  %tobool.not = icmp eq i8 %inc.i, 15
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.retry.i.backedge_crit_edge

while.body.retry.i.backedge_crit_edge:            ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.backedge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

retry.i.backedge:                                 ; preds = %while.body.retry.i.backedge_crit_edge, %retry.backedge.sink.split.i, %retry.i.retry.i.backedge_crit_edge
  br label %retry.i

while.end:                                        ; preds = %while.body.while.end_crit_edge, %find_get_entry.exit.while.end_crit_edge, %retry.i.while.end_crit_edge
  %call.i8 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i8, label %while.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i11

while.end.rcu_read_unlock.exit_crit_edge:         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i11:                                ; preds = %while.end
  %call1.i9 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i9)
  %tobool.not.i10 = icmp eq i32 %call1.i9, 0
  br i1 %tobool.not.i10, label %land.lhs.true.i11.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i13

land.lhs.true.i11.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i11
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i13:                               ; preds = %land.lhs.true.i11
  %.b4.i12 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i12, label %land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge, label %if.then.i14

land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i13
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i14:                                      ; preds = %land.lhs.true2.i13
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i14, %land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i11.rcu_read_unlock.exit_crit_edge, %while.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %39 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i15 = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i.i.i.i15 to ptr
  %preempt_count.i.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %preempt_count.i.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %preempt_count.i.i.i.i16, align 4
  %sub.i.i.i = add i32 %42, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i16, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  %43 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %fbatch, align 4
  %conv.i = zext i8 %44 to i32
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i32 %conv.i
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_get_entry(ptr noundef %xas, i32 noundef %max, i32 noundef %mark) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %mark)
  %cmp = icmp eq i32 %mark, 8
  %xa_node.i.i = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  br label %retry

retry:                                            ; preds = %retry.backedge, %entry
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #13
  %call = tail call ptr @xas_find(ptr noundef %xas, i32 noundef %max) #11
  br label %if.end

if.else:                                          ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #13
  %call1 = tail call ptr @xas_find_marked(ptr noundef %xas, i32 noundef %max, i32 noundef %mark) #11
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %folio.0 = phi ptr [ %call, %if.then ], [ %call1, %if.else ]
  %magicptr = ptrtoint ptr %folio.0 to i32
  %0 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.62)
  switch i32 %magicptr, label %lor.lhs.false [
    i32 1030, label %if.end.retry.backedge_crit_edge
    i32 1026, label %if.end.retry.backedge.sink.split_crit_edge
    i32 0, label %if.end.cleanup_crit_edge
  ]

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end.retry.backedge.sink.split_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split

if.end.retry.backedge_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge

lor.lhs.false:                                    ; preds = %if.end
  %and.i = and i32 %magicptr, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end7, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end7:                                          ; preds = %lor.lhs.false
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio.0, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !367
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %1 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !368
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i, label %if.end7.atomic_add_unless.exit.i.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i

if.end7.atomic_add_unless.exit.i.i.i.i_crit_edge: ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i.i.i

do.end11.i.i.i.i.i.i.i:                           ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !369
  br label %atomic_add_unless.exit.i.i.i.i

atomic_add_unless.exit.i.i.i.i:                   ; preds = %do.end11.i.i.i.i.i.i.i, %if.end7.atomic_add_unless.exit.i.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@find_get_entry, %if.then.i.i.i.i)) #11
          to label %folio_try_get_rcu.exit [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %atomic_add_unless.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_unless(ptr noundef nonnull %folio.0, i32 noundef 1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_try_get_rcu.exit

folio_try_get_rcu.exit:                           ; preds = %if.then.i.i.i.i, %atomic_add_unless.exit.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.end10, label %folio_try_get_rcu.exit.retry.backedge.sink.split_crit_edge

folio_try_get_rcu.exit.retry.backedge.sink.split_crit_edge: ; preds = %folio_try_get_rcu.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split

if.end10:                                         ; preds = %folio_try_get_rcu.exit
  %call11 = tail call fastcc ptr @xas_reload(ptr noundef %xas)
  %cmp12.not = icmp eq ptr %folio.0, %call11
  br i1 %cmp12.not, label %if.end10.cleanup_crit_edge, label %if.then15, !prof !299

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then15:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #13
  tail call fastcc void @folio_put(ptr noundef nonnull %folio.0)
  br label %retry.backedge.sink.split

retry.backedge.sink.split:                        ; preds = %if.then15, %folio_try_get_rcu.exit.retry.backedge.sink.split_crit_edge, %if.end.retry.backedge.sink.split_crit_edge
  %2 = ptrtoint ptr %xa_node.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 3 to ptr), ptr %xa_node.i.i, align 4
  br label %retry.backedge

retry.backedge:                                   ; preds = %retry.backedge.sink.split, %if.end.retry.backedge_crit_edge
  br label %retry

cleanup:                                          ; preds = %if.end10.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge
  ret ptr %folio.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_lock_entries(ptr noundef %mapping, i32 noundef %start, i32 noundef %end, ptr nocapture noundef %fbatch, ptr nocapture noundef writeonly %indices) local_unnamed_addr #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %6 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %i_pages, ptr %xas, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %start, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %1, align 4
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %4, align 4
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %5, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %15, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %entry.retry.i.preheader_crit_edge, label %land.lhs.true.i

entry.retry.i.preheader_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.preheader

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.retry.i.preheader_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.retry.i.preheader_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.preheader

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.retry.i.preheader_crit_edge, label %if.then.i

land.lhs.true2.i.retry.i.preheader_crit_edge:     ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.preheader

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %retry.i.preheader

retry.i.preheader:                                ; preds = %if.then.i, %land.lhs.true2.i.retry.i.preheader_crit_edge, %land.lhs.true.i.retry.i.preheader_crit_edge, %entry.retry.i.preheader_crit_edge
  br label %retry.i

retry.i:                                          ; preds = %retry.i.backedge, %retry.i.preheader
  %call.i52 = call ptr @xas_find(ptr noundef nonnull %xas, i32 noundef %end) #11
  %magicptr = ptrtoint ptr %call.i52 to i32
  %16 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.63)
  switch i32 %magicptr, label %lor.lhs.false.i [
    i32 1030, label %retry.i.retry.i.backedge_crit_edge
    i32 1026, label %retry.i.retry.backedge.sink.split.i_crit_edge
    i32 0, label %retry.i.while.end_crit_edge
  ]

retry.i.while.end_crit_edge:                      ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

retry.i.retry.backedge.sink.split.i_crit_edge:    ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split.i

retry.i.retry.i.backedge_crit_edge:               ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.backedge

retry.i.backedge:                                 ; preds = %if.then.i69, %folio_put_testzero.exit.i.retry.i.backedge_crit_edge, %if.end29.retry.i.backedge_crit_edge, %retry.backedge.sink.split.i, %retry.i.retry.i.backedge_crit_edge
  br label %retry.i

lor.lhs.false.i:                                  ; preds = %retry.i
  %and.i.i = and i32 %magicptr, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end7.i, label %find_get_entry.exit.thread

if.end7.i:                                        ; preds = %lor.lhs.false.i
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %call.i52, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !367
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #11
  %17 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #11, !srcloc !368
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i.i, label %if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i.i

if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge: ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i.i.i.i

do.end11.i.i.i.i.i.i.i.i:                         ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !369
  br label %atomic_add_unless.exit.i.i.i.i.i

atomic_add_unless.exit.i.i.i.i.i:                 ; preds = %do.end11.i.i.i.i.i.i.i.i, %if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@find_lock_entries, %if.then.i.i.i.i.i)) #11
          to label %folio_try_get_rcu.exit.i [label %if.then.i.i.i.i.i], !srcloc !306

if.then.i.i.i.i.i:                                ; preds = %atomic_add_unless.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_unless(ptr noundef nonnull %call.i52, i32 noundef 1, i32 noundef %conv.i.i.i.i.i) #11
  br label %folio_try_get_rcu.exit.i

folio_try_get_rcu.exit.i:                         ; preds = %if.then.i.i.i.i.i, %atomic_add_unless.exit.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.end10.i, label %folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge

folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge: ; preds = %folio_try_get_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split.i

if.end10.i:                                       ; preds = %folio_try_get_rcu.exit.i
  %18 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %3, align 4
  %tobool.not.i79 = icmp eq ptr %19, null
  br i1 %tobool.not.i79, label %if.then.i82, label %if.end.i

if.then.i82:                                      ; preds = %if.end10.i
  %20 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %xas, align 4
  %xa_head.i.i = getelementptr inbounds %struct.xarray, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %xa_head.i.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.anon.4, ptr %21, i32 0, i32 1
  %call.i.i.i80 = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i80)
  %tobool.not.i.i81 = icmp eq i32 %call.i.i.i80, 0
  br i1 %tobool.not.i.i81, label %lor.lhs.false.i.i, label %if.then.i82.xas_reload.exit_crit_edge

if.then.i82.xas_reload.exit_crit_edge:            ; preds = %if.then.i82
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i.i:                                ; preds = %if.then.i82
  %call2.i.i83 = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i83)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i83, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.xas_reload.exit_crit_edge

lor.lhs.false.i.i.xas_reload.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call4.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i

land.lhs.true.i.i.xas_reload.exit_crit_edge:      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true6.i.i:                               ; preds = %land.lhs.true.i.i
  %.b12.i.i = load i1, ptr @xa_head.__warned, align 1
  br i1 %.b12.i.i, label %land.lhs.true6.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true6.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

if.end.i:                                         ; preds = %if.end10.i
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %2, align 2
  %26 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %xas, align 4
  %conv.i84 = zext i8 %25 to i32
  %arrayidx.i.i = getelementptr %struct.xa_node, ptr %19, i32 0, i32 7, i32 %conv.i84
  %28 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %dep_map.i10.i = getelementptr inbounds %struct.anon.4, ptr %27, i32 0, i32 1
  %call.i.i11.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i10.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11.i)
  %tobool.not.i12.i = icmp eq i32 %call.i.i11.i, 0
  br i1 %tobool.not.i12.i, label %lor.lhs.false.i15.i, label %if.end.i.xas_reload.exit_crit_edge

if.end.i.xas_reload.exit_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i15.i:                              ; preds = %if.end.i
  %call4.i13.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i13.i)
  %tobool5.not.i14.i = icmp eq i32 %call4.i13.i, 0
  br i1 %tobool5.not.i14.i, label %land.lhs.true.i16.i, label %lor.lhs.false.i15.i.xas_reload.exit_crit_edge

lor.lhs.false.i15.i.xas_reload.exit_crit_edge:    ; preds = %lor.lhs.false.i15.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i16.i:                              ; preds = %lor.lhs.false.i15.i
  %call6.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i16.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i16.i.xas_reload.exit_crit_edge:    ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i16.i
  %.b13.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i, label %land.lhs.true8.i.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true8.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

cleanup.sink.split.i:                             ; preds = %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge
  %xa_entry.__warned.sink.i = phi ptr [ @xa_head.__warned, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ @xa_entry.__warned, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 1167, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ 1183, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi ptr [ %23, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ %29, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %30 = ptrtoint ptr %xa_entry.__warned.sink.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i1 true, ptr %xa_entry.__warned.sink.i, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef %.sink.i, ptr noundef nonnull @.str.35) #11
  br label %xas_reload.exit

xas_reload.exit:                                  ; preds = %cleanup.sink.split.i, %land.lhs.true8.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i16.i.xas_reload.exit_crit_edge, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge, %if.end.i.xas_reload.exit_crit_edge, %land.lhs.true6.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i.i.xas_reload.exit_crit_edge, %lor.lhs.false.i.i.xas_reload.exit_crit_edge, %if.then.i82.xas_reload.exit_crit_edge
  %retval.0.i = phi ptr [ %23, %if.then.i82.xas_reload.exit_crit_edge ], [ %23, %lor.lhs.false.i.i.xas_reload.exit_crit_edge ], [ %23, %land.lhs.true.i.i.xas_reload.exit_crit_edge ], [ %23, %land.lhs.true6.i.i.xas_reload.exit_crit_edge ], [ %29, %if.end.i.xas_reload.exit_crit_edge ], [ %29, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge ], [ %29, %land.lhs.true.i16.i.xas_reload.exit_crit_edge ], [ %29, %land.lhs.true8.i.i.xas_reload.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp12.not.i = icmp eq ptr %call.i52, %retval.0.i
  br i1 %cmp12.not.i, label %find_get_entry.exit, label %if.then15.i, !prof !299

if.then15.i:                                      ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @folio_put(ptr noundef nonnull %call.i52) #11
  br label %retry.backedge.sink.split.i

retry.backedge.sink.split.i:                      ; preds = %if.then15.i, %folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge, %retry.i.retry.backedge.sink.split.i_crit_edge
  %31 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  br label %retry.i.backedge

find_get_entry.exit:                              ; preds = %xas_reload.exit
  %tobool.not = icmp eq ptr %call.i52, null
  br i1 %tobool.not, label %find_get_entry.exit.while.end_crit_edge, label %while.body

find_get_entry.exit.while.end_crit_edge:          ; preds = %find_get_entry.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

find_get_entry.exit.thread:                       ; preds = %lor.lhs.false.i
  %tobool.not112 = icmp eq ptr %call.i52, null
  br i1 %tobool.not112, label %find_get_entry.exit.thread.while.end_crit_edge, label %find_get_entry.exit.thread.if.end29_crit_edge

find_get_entry.exit.thread.if.end29_crit_edge:    ; preds = %find_get_entry.exit.thread
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end29

find_get_entry.exit.thread.while.end_crit_edge:   ; preds = %find_get_entry.exit.thread
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.body:                                       ; preds = %find_get_entry.exit
  br i1 %tobool.i.not.i, label %if.then, label %while.body.if.end29_crit_edge

while.body.if.end29_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end29

if.then:                                          ; preds = %while.body
  %index = getelementptr inbounds %struct.anon, ptr %call.i52, i32 0, i32 3
  %32 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %start)
  %cmp = icmp ult i32 %33, %start
  br i1 %cmp, label %if.then.put_crit_edge, label %if.end

if.then.put_crit_edge:                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %put

if.end:                                           ; preds = %if.then
  %34 = ptrtoint ptr %call.i52 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %call.i52, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %35)
  %cmp.i.not.i.i.i = icmp eq i32 %35, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %PageHead.exit.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i52, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i:                                ; preds = %if.end
  %36 = ptrtoint ptr %call.i52 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %call.i52, align 4
  %38 = and i32 %37, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i.i55 = icmp eq i32 %38, 0
  br i1 %tobool.not.i.i55, label %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge, label %if.end.i.i

PageHead.exit.i.i.folio_nr_pages.exit_crit_edge:  ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_nr_pages.exit

if.end.i.i:                                       ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i = getelementptr %struct.page, ptr %call.i52, i32 1, i32 1, i32 0, i32 2
  %39 = ptrtoint ptr %compound_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %compound_nr.i.i, align 4
  br label %folio_nr_pages.exit

folio_nr_pages.exit:                              ; preds = %if.end.i.i, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge
  %retval.0.i.i = phi i32 [ %40, %if.end.i.i ], [ 1, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge ]
  %add = add i32 %33, -1
  %sub = add i32 %add, %retval.0.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %end)
  %cmp5 = icmp ugt i32 %sub, %end
  br i1 %cmp5, label %folio_nr_pages.exit.put_crit_edge, label %if.end7

folio_nr_pages.exit.put_crit_edge:                ; preds = %folio_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %put

if.end7:                                          ; preds = %folio_nr_pages.exit
  %41 = getelementptr inbounds %struct.page, ptr %call.i52, i32 0, i32 1
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %41, align 4
  %and.i.i.i56 = and i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i56)
  %tobool.not.i.i57 = icmp eq i32 %and.i.i.i56, 0
  br i1 %tobool.not.i.i57, label %folio_flags.exit.i, label %if.then.i.i58, !prof !299

if.then.i.i58:                                    ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i52, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %if.end7
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i52, i32 noundef 4) #11
  %44 = ptrtoint ptr %call.i52 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %call.i52, align 4
  %and.i.i4.i = and i32 %45, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool.not.i.i.i, label %folio_trylock.exit, label %folio_flags.exit.i.put_crit_edge

folio_flags.exit.i.put_crit_edge:                 ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %put

folio_trylock.exit:                               ; preds = %folio_flags.exit.i
  call void @llvm.prefetch.p0(ptr nonnull %call.i52, i32 1, i32 3, i32 1) #11
  %46 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %call.i52, ptr nonnull %call.i52, i32 1, ptr nonnull elementtype(i32) %call.i52) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %46, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i = and i32 %asmresult.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %phi.cmp.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %phi.cmp.i.i, label %if.end10, label %folio_trylock.exit.put_crit_edge

folio_trylock.exit.put_crit_edge:                 ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %put

if.end10:                                         ; preds = %folio_trylock.exit
  %mapping11 = getelementptr inbounds %struct.anon, ptr %call.i52, i32 0, i32 2
  %47 = ptrtoint ptr %mapping11 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %mapping11, align 4
  %cmp12.not = icmp eq ptr %48, %mapping
  br i1 %cmp12.not, label %lor.lhs.false, label %if.end10.unlock_crit_edge

if.end10.unlock_crit_edge:                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

lor.lhs.false:                                    ; preds = %if.end10
  %49 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %41, align 4
  %and.i.i.i = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_writeback.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i52, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_writeback.exit:                        ; preds = %lor.lhs.false
  %51 = ptrtoint ptr %call.i52 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %call.i52, align 4
  %53 = and i32 %52, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool.i.not = icmp eq i32 %53, 0
  br i1 %tobool.i.not, label %do.body, label %folio_test_writeback.exit.unlock_crit_edge

folio_test_writeback.exit.unlock_crit_edge:       ; preds = %folio_test_writeback.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

do.body:                                          ; preds = %folio_test_writeback.exit
  %54 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %0, align 4
  %56 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %41, align 4
  %and.i.i.i.i.i.i = and i32 %57, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_test_swapbacked.exit.i.i.i, label %if.then.i.i.i.i.i59, !prof !299

if.then.i.i.i.i.i59:                              ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i52, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapbacked.exit.i.i.i:                 ; preds = %do.body
  %58 = ptrtoint ptr %call.i52 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %call.i52, align 4
  %60 = and i32 %59, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.i.not.i.i.i = icmp eq i32 %60, 0
  br i1 %tobool.i.not.i.i.i, label %folio_test_swapbacked.exit.i.i.i.if.end.i.i62_crit_edge, label %land.rhs.i.i.i

folio_test_swapbacked.exit.i.i.i.if.end.i.i62_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i62

land.rhs.i.i.i:                                   ; preds = %folio_test_swapbacked.exit.i.i.i
  %61 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %41, align 4
  %and.i.i.i.i.i60 = and i32 %62, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i60)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i60, 0
  br i1 %tobool.not.i.i.i.i, label %folio_test_swapcache.exit.i.i, label %if.then.i.i.i.i, !prof !299

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i52, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapcache.exit.i.i:                    ; preds = %land.rhs.i.i.i
  %63 = ptrtoint ptr %call.i52 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %call.i52, align 4
  %65 = and i32 %64, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool.i.not.i.i = icmp eq i32 %65, 0
  br i1 %tobool.i.not.i.i, label %folio_test_swapcache.exit.i.i.if.end.i.i62_crit_edge, label %if.then.i.i61, !prof !299

folio_test_swapcache.exit.i.i.if.end.i.i62_crit_edge: ; preds = %folio_test_swapcache.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i62

if.then.i.i61:                                    ; preds = %folio_test_swapcache.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %call2.i.i = call i32 @__page_file_index(ptr noundef nonnull %call.i52) #11
  br label %folio_index.exit.i

if.end.i.i62:                                     ; preds = %folio_test_swapcache.exit.i.i.if.end.i.i62_crit_edge, %folio_test_swapbacked.exit.i.i.i.if.end.i.i62_crit_edge
  %66 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %index, align 4
  br label %folio_index.exit.i

folio_index.exit.i:                               ; preds = %if.end.i.i62, %if.then.i.i61
  %retval.0.i.i63 = phi i32 [ %call2.i.i, %if.then.i.i61 ], [ %67, %if.end.i.i62 ]
  %68 = ptrtoint ptr %call.i52 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %call.i52, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %69)
  %cmp.i.not.i.i.i.i = icmp eq i32 %69, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i9.i, label %PageHead.exit.i.i.i, !prof !300

if.then.i.i.i9.i:                                 ; preds = %folio_index.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i52, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %folio_index.exit.i
  %70 = ptrtoint ptr %call.i52 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %call.i52, align 4
  %72 = and i32 %71, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool.not.i.i.i64 = icmp eq i32 %72, 0
  br i1 %tobool.not.i.i.i64, label %PageHead.exit.i.i.i.folio_contains.exit_crit_edge, label %if.end.i.i.i65

PageHead.exit.i.i.i.folio_contains.exit_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_contains.exit

if.end.i.i.i65:                                   ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %call.i52, i32 1, i32 1, i32 0, i32 2
  %73 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_contains.exit

folio_contains.exit:                              ; preds = %if.end.i.i.i65, %PageHead.exit.i.i.i.folio_contains.exit_crit_edge
  %retval.0.i.i.i66 = phi i32 [ %74, %if.end.i.i.i65 ], [ 1, %PageHead.exit.i.i.i.folio_contains.exit_crit_edge ]
  %sub.i = sub i32 %55, %retval.0.i.i63
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %retval.0.i.i.i66)
  %cmp4.i = icmp ult i32 %sub.i, %retval.0.i.i.i66
  br i1 %cmp4.i, label %folio_contains.exit.if.end29_crit_edge, label %if.then21, !prof !299

folio_contains.exit.if.end29_crit_edge:           ; preds = %folio_contains.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end29

if.then21:                                        ; preds = %folio_contains.exit
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i52, ptr noundef nonnull @.str.10) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2132, 0\0A.popsection", ""() #11, !srcloc !370
  unreachable

if.end29:                                         ; preds = %folio_contains.exit.if.end29_crit_edge, %while.body.if.end29_crit_edge, %find_get_entry.exit.thread.if.end29_crit_edge
  %75 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %0, align 4
  %77 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %fbatch, align 4
  %idxprom = zext i8 %78 to i32
  %arrayidx = getelementptr i32, ptr %indices, i32 %idxprom
  %79 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %76, ptr %arrayidx, align 4
  %80 = load i8, ptr %fbatch, align 4
  %inc.i = add i8 %80, 1
  store i8 %inc.i, ptr %fbatch, align 4
  %idxprom.i = zext i8 %80 to i32
  %arrayidx.i = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %idxprom.i
  %81 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %call.i52, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 15, i8 %inc.i)
  %tobool32.not = icmp eq i8 %inc.i, 15
  br i1 %tobool32.not, label %if.end29.while.end_crit_edge, label %if.end29.retry.i.backedge_crit_edge

if.end29.retry.i.backedge_crit_edge:              ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.backedge

if.end29.while.end_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

unlock:                                           ; preds = %folio_test_writeback.exit.unlock_crit_edge, %if.end10.unlock_crit_edge
  call void @folio_unlock(ptr noundef nonnull %call.i52)
  br label %put

put:                                              ; preds = %unlock, %folio_trylock.exit.put_crit_edge, %folio_flags.exit.i.put_crit_edge, %folio_nr_pages.exit.put_crit_edge, %if.then.put_crit_edge
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %call.i52, i32 0, i32 3
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %82 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %cmp.i.i.i = icmp eq i32 %83, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i67, label %do.end5.i.i.i, !prof !300

if.then.i.i.i67:                                  ; preds = %put
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i52, ptr noundef nonnull @.str.49) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %put
  %call.i.i.i10.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %84 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %84, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@find_lock_entries, %if.then.i.i.i.i68)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i68], !srcloc !306

if.then.i.i.i.i68:                                ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef nonnull %call.i52, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i68, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i69, label %folio_put_testzero.exit.i.retry.i.backedge_crit_edge

folio_put_testzero.exit.i.retry.i.backedge_crit_edge: ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.backedge

if.then.i69:                                      ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__put_page(ptr noundef nonnull %call.i52) #11
  br label %retry.i.backedge

while.end:                                        ; preds = %if.end29.while.end_crit_edge, %find_get_entry.exit.thread.while.end_crit_edge, %find_get_entry.exit.while.end_crit_edge, %retry.i.while.end_crit_edge
  %call.i70 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i70, label %while.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i73

while.end.rcu_read_unlock.exit_crit_edge:         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i73:                                ; preds = %while.end
  %call1.i71 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i71)
  %tobool.not.i72 = icmp eq i32 %call1.i71, 0
  br i1 %tobool.not.i72, label %land.lhs.true.i73.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i75

land.lhs.true.i73.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i73
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i75:                               ; preds = %land.lhs.true.i73
  %.b4.i74 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i74, label %land.lhs.true2.i75.rcu_read_unlock.exit_crit_edge, label %if.then.i76

land.lhs.true2.i75.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i75
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i76:                                      ; preds = %land.lhs.true2.i75
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i76, %land.lhs.true2.i75.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i73.rcu_read_unlock.exit_crit_edge, %while.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %85 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i77 = and i32 %85, -16384
  %86 = inttoptr i32 %and.i.i.i.i.i77 to ptr
  %preempt_count.i.i.i.i78 = getelementptr inbounds %struct.thread_info, ptr %86, i32 0, i32 1
  %87 = ptrtoint ptr %preempt_count.i.i.i.i78 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %preempt_count.i.i.i.i78, align 4
  %sub.i.i.i = add i32 %88, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i78, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  %89 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %fbatch, align 4
  %conv.i = zext i8 %90 to i32
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i32 %conv.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_get_pages_range(ptr noundef %mapping, ptr nocapture noundef %start, i32 noundef %end, i32 noundef %nr_pages, ptr nocapture noundef writeonly %pages) local_unnamed_addr #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %6 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %i_pages, ptr %xas, align 4
  %7 = ptrtoint ptr %start to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %start, align 4
  %9 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %0, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %1, align 4
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  %12 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %4, align 4
  %13 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_pages)
  %tobool.not = icmp eq i32 %nr_pages, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !300

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %14 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %17, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %if.end.while.cond.outer.preheader_crit_edge, label %land.lhs.true.i

if.end.while.cond.outer.preheader_crit_edge:      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.outer.preheader

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.while.cond.outer.preheader_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.while.cond.outer.preheader_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.outer.preheader

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.while.cond.outer.preheader_crit_edge, label %if.then.i

land.lhs.true2.i.while.cond.outer.preheader_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.outer.preheader

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %while.cond.outer.preheader

while.cond.outer.preheader:                       ; preds = %if.then.i, %land.lhs.true2.i.while.cond.outer.preheader_crit_edge, %land.lhs.true.i.while.cond.outer.preheader_crit_edge, %if.end.while.cond.outer.preheader_crit_edge
  br label %while.cond.outer

while.cond.outer.loopexit:                        ; preds = %folio_nr_pages.exit.i.while.cond.outer.loopexit_crit_edge, %folio_test_large.exit.i.while.cond.outer.loopexit_crit_edge
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.loopexit, %while.cond.outer.preheader
  %ret.0.ph = phi i32 [ %inc, %while.cond.outer.loopexit ], [ 0, %while.cond.outer.preheader ]
  br label %retry.i

retry.i:                                          ; preds = %retry.i.backedge, %while.cond.outer
  %call.i37 = call ptr @xas_find(ptr noundef nonnull %xas, i32 noundef %end) #11
  %magicptr = ptrtoint ptr %call.i37 to i32
  %18 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.64)
  switch i32 %magicptr, label %lor.lhs.false.i [
    i32 1030, label %retry.i.retry.i.backedge_crit_edge
    i32 1026, label %retry.i.retry.backedge.sink.split.i_crit_edge
    i32 0, label %retry.i.while.end_crit_edge
  ]

retry.i.while.end_crit_edge:                      ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

retry.i.retry.backedge.sink.split.i_crit_edge:    ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split.i

retry.i.retry.i.backedge_crit_edge:               ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.backedge

lor.lhs.false.i:                                  ; preds = %retry.i
  %and.i.i = and i32 %magicptr, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end7.i, label %lor.lhs.false.i.find_get_entry.exit_crit_edge

lor.lhs.false.i.find_get_entry.exit_crit_edge:    ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %find_get_entry.exit

if.end7.i:                                        ; preds = %lor.lhs.false.i
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %call.i37, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !367
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #11
  %19 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #11, !srcloc !368
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i.i, label %if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i.i

if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge: ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i.i.i.i

do.end11.i.i.i.i.i.i.i.i:                         ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !369
  br label %atomic_add_unless.exit.i.i.i.i.i

atomic_add_unless.exit.i.i.i.i.i:                 ; preds = %do.end11.i.i.i.i.i.i.i.i, %if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@find_get_pages_range, %if.then.i.i.i.i.i)) #11
          to label %folio_try_get_rcu.exit.i [label %if.then.i.i.i.i.i], !srcloc !306

if.then.i.i.i.i.i:                                ; preds = %atomic_add_unless.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_unless(ptr noundef nonnull %call.i37, i32 noundef 1, i32 noundef %conv.i.i.i.i.i) #11
  br label %folio_try_get_rcu.exit.i

folio_try_get_rcu.exit.i:                         ; preds = %if.then.i.i.i.i.i, %atomic_add_unless.exit.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.end10.i, label %folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge

folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge: ; preds = %folio_try_get_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split.i

if.end10.i:                                       ; preds = %folio_try_get_rcu.exit.i
  %20 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %3, align 4
  %tobool.not.i57 = icmp eq ptr %21, null
  br i1 %tobool.not.i57, label %if.then.i58, label %if.end.i

if.then.i58:                                      ; preds = %if.end10.i
  %22 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %xas, align 4
  %xa_head.i.i = getelementptr inbounds %struct.xarray, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %xa_head.i.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.anon.4, ptr %23, i32 0, i32 1
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %if.then.i58.xas_reload.exit_crit_edge

if.then.i58.xas_reload.exit_crit_edge:            ; preds = %if.then.i58
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i.i:                                ; preds = %if.then.i58
  %call2.i.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.xas_reload.exit_crit_edge

lor.lhs.false.i.i.xas_reload.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call4.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i

land.lhs.true.i.i.xas_reload.exit_crit_edge:      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true6.i.i:                               ; preds = %land.lhs.true.i.i
  %.b12.i.i = load i1, ptr @xa_head.__warned, align 1
  br i1 %.b12.i.i, label %land.lhs.true6.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true6.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

if.end.i:                                         ; preds = %if.end10.i
  %26 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %2, align 2
  %28 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %xas, align 4
  %conv.i = zext i8 %27 to i32
  %arrayidx.i.i = getelementptr %struct.xa_node, ptr %21, i32 0, i32 7, i32 %conv.i
  %30 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %dep_map.i10.i = getelementptr inbounds %struct.anon.4, ptr %29, i32 0, i32 1
  %call.i.i11.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i10.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11.i)
  %tobool.not.i12.i = icmp eq i32 %call.i.i11.i, 0
  br i1 %tobool.not.i12.i, label %lor.lhs.false.i15.i, label %if.end.i.xas_reload.exit_crit_edge

if.end.i.xas_reload.exit_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i15.i:                              ; preds = %if.end.i
  %call4.i13.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i13.i)
  %tobool5.not.i14.i = icmp eq i32 %call4.i13.i, 0
  br i1 %tobool5.not.i14.i, label %land.lhs.true.i16.i, label %lor.lhs.false.i15.i.xas_reload.exit_crit_edge

lor.lhs.false.i15.i.xas_reload.exit_crit_edge:    ; preds = %lor.lhs.false.i15.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i16.i:                              ; preds = %lor.lhs.false.i15.i
  %call6.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i16.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i16.i.xas_reload.exit_crit_edge:    ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i16.i
  %.b13.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i, label %land.lhs.true8.i.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true8.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

cleanup.sink.split.i:                             ; preds = %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge
  %xa_entry.__warned.sink.i = phi ptr [ @xa_head.__warned, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ @xa_entry.__warned, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 1167, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ 1183, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi ptr [ %25, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ %31, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %32 = ptrtoint ptr %xa_entry.__warned.sink.i to i32
  call void @__asan_store1_noabort(i32 %32)
  store i1 true, ptr %xa_entry.__warned.sink.i, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef %.sink.i, ptr noundef nonnull @.str.35) #11
  br label %xas_reload.exit

xas_reload.exit:                                  ; preds = %cleanup.sink.split.i, %land.lhs.true8.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i16.i.xas_reload.exit_crit_edge, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge, %if.end.i.xas_reload.exit_crit_edge, %land.lhs.true6.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i.i.xas_reload.exit_crit_edge, %lor.lhs.false.i.i.xas_reload.exit_crit_edge, %if.then.i58.xas_reload.exit_crit_edge
  %retval.0.i59 = phi ptr [ %25, %if.then.i58.xas_reload.exit_crit_edge ], [ %25, %lor.lhs.false.i.i.xas_reload.exit_crit_edge ], [ %25, %land.lhs.true.i.i.xas_reload.exit_crit_edge ], [ %25, %land.lhs.true6.i.i.xas_reload.exit_crit_edge ], [ %31, %if.end.i.xas_reload.exit_crit_edge ], [ %31, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge ], [ %31, %land.lhs.true.i16.i.xas_reload.exit_crit_edge ], [ %31, %land.lhs.true8.i.i.xas_reload.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp12.not.i = icmp eq ptr %call.i37, %retval.0.i59
  br i1 %cmp12.not.i, label %xas_reload.exit.find_get_entry.exit_crit_edge, label %if.then15.i, !prof !299

xas_reload.exit.find_get_entry.exit_crit_edge:    ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %find_get_entry.exit

if.then15.i:                                      ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @folio_put(ptr noundef nonnull %call.i37) #11
  br label %retry.backedge.sink.split.i

retry.backedge.sink.split.i:                      ; preds = %if.then15.i, %folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge, %retry.i.retry.backedge.sink.split.i_crit_edge
  %33 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  br label %retry.i.backedge

find_get_entry.exit:                              ; preds = %xas_reload.exit.find_get_entry.exit_crit_edge, %lor.lhs.false.i.find_get_entry.exit_crit_edge
  %tobool4.not = icmp eq ptr %call.i37, null
  br i1 %tobool4.not, label %find_get_entry.exit.while.end_crit_edge, label %while.body

find_get_entry.exit.while.end_crit_edge:          ; preds = %find_get_entry.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.body:                                       ; preds = %find_get_entry.exit
  br i1 %tobool.i.not.i, label %again.preheader, label %while.body.retry.i.backedge_crit_edge

while.body.retry.i.backedge_crit_edge:            ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.backedge

retry.i.backedge:                                 ; preds = %while.body.retry.i.backedge_crit_edge, %retry.backedge.sink.split.i, %retry.i.retry.i.backedge_crit_edge
  br label %retry.i

again.preheader:                                  ; preds = %while.body
  %34 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %0, align 4
  %36 = ptrtoint ptr %call.i37 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %call.i37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %37)
  %cmp.i.not.i.i.i.i80 = icmp eq i32 %37, -1
  br i1 %cmp.i.not.i.i.i.i80, label %again.preheader.if.then.i.i.i.i_crit_edge, label %PageHead.exit.i.i.i.lr.ph, !prof !300

again.preheader.if.then.i.i.i.i_crit_edge:        ; preds = %again.preheader
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i.i.i.i

PageHead.exit.i.i.i.lr.ph:                        ; preds = %again.preheader
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %call.i37, i32 1, i32 1, i32 0, i32 2
  %38 = getelementptr inbounds %struct.page, ptr %call.i37, i32 0, i32 1
  %index4.i = getelementptr inbounds %struct.anon, ptr %call.i37, i32 0, i32 3
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %call.i37, i32 0, i32 3
  br label %PageHead.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %folio_ref_inc.exit.if.then.i.i.i.i_crit_edge, %again.preheader.if.then.i.i.i.i_crit_edge
  call void @dump_page(ptr noundef nonnull %call.i37, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge, %PageHead.exit.i.i.i.lr.ph
  %39 = phi i32 [ %35, %PageHead.exit.i.i.i.lr.ph ], [ %63, %folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge ]
  %ret.181 = phi i32 [ %ret.0.ph, %PageHead.exit.i.i.i.lr.ph ], [ %inc, %folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge ]
  %40 = ptrtoint ptr %call.i37 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %call.i37, align 4
  %42 = and i32 %41, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.not.i.i.i = icmp eq i32 %42, 0
  br i1 %tobool.not.i.i.i, label %PageHead.exit.i.i.i.folio_file_page.exit_crit_edge, label %if.end.i.i.i

PageHead.exit.i.i.i.folio_file_page.exit_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_file_page.exit

if.end.i.i.i:                                     ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %43 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %compound_nr.i.i.i, align 4
  %phi.bo.i = add i32 %44, -1
  br label %folio_file_page.exit

folio_file_page.exit:                             ; preds = %if.end.i.i.i, %PageHead.exit.i.i.i.folio_file_page.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %phi.bo.i, %if.end.i.i.i ], [ 0, %PageHead.exit.i.i.i.folio_file_page.exit_crit_edge ]
  %and.i39 = and i32 %retval.0.i.i.i, %39
  %add.ptr.i = getelementptr %struct.page, ptr %call.i37, i32 %and.i39
  %arrayidx = getelementptr ptr, ptr %pages, i32 %ret.181
  %45 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %add.ptr.i, ptr %arrayidx, align 4
  %inc = add i32 %ret.181, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %nr_pages)
  %cmp = icmp eq i32 %inc, %nr_pages
  br i1 %cmp, label %if.then10, label %if.end12

if.then10:                                        ; preds = %folio_file_page.exit
  call void @__sanitizer_cov_trace_pc() #13
  %add = add i32 %39, 1
  br label %out

if.end12:                                         ; preds = %folio_file_page.exit
  %46 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %38, align 4
  %and.i.i.i.i.i40 = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i40)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i40, 0
  br i1 %tobool.not.i.i.i.i, label %folio_test_large.exit.i, label %if.then.i.i.i.i41, !prof !299

if.then.i.i.i.i41:                                ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i37, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_large.exit.i:                          ; preds = %if.end12
  %48 = ptrtoint ptr %call.i37 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %call.i37, align 4
  %50 = and i32 %49, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool.i.i.i = icmp ne i32 %50, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %39, i32 %end)
  %cmp.not.i = icmp ult i32 %39, %end
  %or.cond.i = and i1 %cmp.not.i, %tobool.i.i.i
  br i1 %or.cond.i, label %if.end3.i, label %folio_test_large.exit.i.while.cond.outer.loopexit_crit_edge

folio_test_large.exit.i.while.cond.outer.loopexit_crit_edge: ; preds = %folio_test_large.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.outer.loopexit

if.end3.i:                                        ; preds = %folio_test_large.exit.i
  %51 = ptrtoint ptr %index4.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %index4.i, align 4
  %53 = ptrtoint ptr %call.i37 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %call.i37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %54)
  %cmp.i.not.i.i.i.i42 = icmp eq i32 %54, -1
  br i1 %cmp.i.not.i.i.i.i42, label %if.then.i.i.i11.i, label %PageHead.exit.i.i.i44, !prof !300

if.then.i.i.i11.i:                                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i37, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i44:                            ; preds = %if.end3.i
  %55 = ptrtoint ptr %call.i37 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %call.i37, align 4
  %57 = and i32 %56, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool.not.i.i.i43 = icmp eq i32 %57, 0
  br i1 %tobool.not.i.i.i43, label %PageHead.exit.i.i.i44.folio_nr_pages.exit.i_crit_edge, label %if.end.i.i.i46

PageHead.exit.i.i.i44.folio_nr_pages.exit.i_crit_edge: ; preds = %PageHead.exit.i.i.i44
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_nr_pages.exit.i

if.end.i.i.i46:                                   ; preds = %PageHead.exit.i.i.i44
  call void @__sanitizer_cov_trace_pc() #13
  %58 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_nr_pages.exit.i

folio_nr_pages.exit.i:                            ; preds = %if.end.i.i.i46, %PageHead.exit.i.i.i44.folio_nr_pages.exit.i_crit_edge
  %retval.0.i.i.i47 = phi i32 [ %59, %if.end.i.i.i46 ], [ 1, %PageHead.exit.i.i.i44.folio_nr_pages.exit.i_crit_edge ]
  %add.i = add i32 %52, -1
  %sub.i = add i32 %add.i, %retval.0.i.i.i47
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %39)
  %cmp6.i = icmp ugt i32 %sub.i, %39
  br i1 %cmp6.i, label %if.then15, label %folio_nr_pages.exit.i.while.cond.outer.loopexit_crit_edge

folio_nr_pages.exit.i.while.cond.outer.loopexit_crit_edge: ; preds = %folio_nr_pages.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.outer.loopexit

if.then15:                                        ; preds = %folio_nr_pages.exit.i
  %inc17 = add nuw i32 %39, 1
  %60 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %inc17, ptr %0, align 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #11
  call void @llvm.prefetch.p0(ptr %_refcount.i.i, i32 1, i32 3, i32 1) #11
  %61 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i, ptr %_refcount.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i) #11, !srcloc !332
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@find_get_pages_range, %if.then.i.i)) #11
          to label %folio_ref_inc.exit [label %if.then.i.i], !srcloc !306

if.then.i.i:                                      ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #13
  call void @__page_ref_mod(ptr noundef nonnull %call.i37, i32 noundef 1) #11
  br label %folio_ref_inc.exit

folio_ref_inc.exit:                               ; preds = %if.then.i.i, %if.then15
  %62 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %0, align 4
  %64 = ptrtoint ptr %call.i37 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %call.i37, align 4
  %cmp.i.not.i.i.i.i = icmp eq i32 %65, -1
  br i1 %cmp.i.not.i.i.i.i, label %folio_ref_inc.exit.if.then.i.i.i.i_crit_edge, label %folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge, !prof !300

folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge: ; preds = %folio_ref_inc.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %PageHead.exit.i.i.i

folio_ref_inc.exit.if.then.i.i.i.i_crit_edge:     ; preds = %folio_ref_inc.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i.i.i.i

while.end:                                        ; preds = %find_get_entry.exit.while.end_crit_edge, %retry.i.while.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %end)
  %cmp19 = icmp eq i32 %end, -1
  %add21 = add nuw i32 %end, 1
  %spec.select = select i1 %cmp19, i32 -1, i32 %add21
  br label %out

out:                                              ; preds = %while.end, %if.then10
  %.sink = phi i32 [ %add, %if.then10 ], [ %spec.select, %while.end ]
  %ret.2 = phi i32 [ %nr_pages, %if.then10 ], [ %ret.0.ph, %while.end ]
  %66 = ptrtoint ptr %start to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %.sink, ptr %start, align 4
  %call.i48 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i48, label %out.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i51

out.rcu_read_unlock.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i51:                                ; preds = %out
  %call1.i49 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i49)
  %tobool.not.i50 = icmp eq i32 %call1.i49, 0
  br i1 %tobool.not.i50, label %land.lhs.true.i51.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i53

land.lhs.true.i51.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i51
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i53:                               ; preds = %land.lhs.true.i51
  %.b4.i52 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i52, label %land.lhs.true2.i53.rcu_read_unlock.exit_crit_edge, label %if.then.i54

land.lhs.true2.i53.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i53
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i54:                                      ; preds = %land.lhs.true2.i53
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i54, %land.lhs.true2.i53.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i51.rcu_read_unlock.exit_crit_edge, %out.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %67 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i55 = and i32 %67, -16384
  %68 = inttoptr i32 %and.i.i.i.i.i55 to ptr
  %preempt_count.i.i.i.i56 = getelementptr inbounds %struct.thread_info, ptr %68, i32 0, i32 1
  %69 = ptrtoint ptr %preempt_count.i.i.i.i56 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %preempt_count.i.i.i.i56, align 4
  %sub.i.i.i = add i32 %70, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i56, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.2, %rcu_read_unlock.exit ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_get_pages_contig(ptr noundef %mapping, i32 noundef %index, i32 noundef %nr_pages, ptr nocapture noundef writeonly %pages) #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %6 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %i_pages, ptr %xas, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %index, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %1, align 4
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %4, align 4
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_pages)
  %tobool.not = icmp eq i32 %nr_pages, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !300

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %12 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %15, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %call = call ptr @xas_load(ptr noundef nonnull %xas) #11
  %tobool4.not108 = icmp eq ptr %call, null
  br i1 %tobool4.not108, label %rcu_read_lock.exit.for.end_crit_edge, label %rcu_read_lock.exit.for.body_crit_edge

rcu_read_lock.exit.for.body_crit_edge:            ; preds = %rcu_read_lock.exit
  br label %for.body

rcu_read_lock.exit.for.end_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.body:                                         ; preds = %xas_next.exit.for.body_crit_edge, %rcu_read_lock.exit.for.body_crit_edge
  %ret.0110 = phi i32 [ %ret.2, %xas_next.exit.for.body_crit_edge ], [ 0, %rcu_read_lock.exit.for.body_crit_edge ]
  %folio.0109 = phi ptr [ %retval.0.i81, %xas_next.exit.for.body_crit_edge ], [ %call, %rcu_read_lock.exit.for.body_crit_edge ]
  %magicptr.i = ptrtoint ptr %folio.0109 to i32
  %16 = zext i32 %magicptr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.65)
  switch i32 %magicptr.i, label %if.end7 [
    i32 1030, label %for.body.for.inc_crit_edge
    i32 1026, label %for.body.for.inc.sink.split_crit_edge
  ]

for.body.for.inc.sink.split_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.sink.split

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.end7:                                          ; preds = %for.body
  %and.i = and i32 %magicptr.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end10, label %if.end7.for.end_crit_edge

if.end7.for.end_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end10:                                         ; preds = %if.end7
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio.0109, i32 0, i32 3
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !367
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %17 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !368
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i, label %if.end10.atomic_add_unless.exit.i.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i

if.end10.atomic_add_unless.exit.i.i.i.i_crit_edge: ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i.i.i

do.end11.i.i.i.i.i.i.i:                           ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !369
  br label %atomic_add_unless.exit.i.i.i.i

atomic_add_unless.exit.i.i.i.i:                   ; preds = %do.end11.i.i.i.i.i.i.i, %if.end10.atomic_add_unless.exit.i.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@find_get_pages_contig, %if.then.i.i.i.i)) #11
          to label %folio_try_get_rcu.exit [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %atomic_add_unless.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  call void @__page_ref_mod_unless(ptr noundef nonnull %folio.0109, i32 noundef 1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_try_get_rcu.exit

folio_try_get_rcu.exit:                           ; preds = %if.then.i.i.i.i, %atomic_add_unless.exit.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.end13, label %folio_try_get_rcu.exit.for.inc.sink.split_crit_edge

folio_try_get_rcu.exit.for.inc.sink.split_crit_edge: ; preds = %folio_try_get_rcu.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc.sink.split

if.end13:                                         ; preds = %folio_try_get_rcu.exit
  %18 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %3, align 4
  %tobool.not.i48 = icmp eq ptr %19, null
  br i1 %tobool.not.i48, label %if.then.i49, label %if.end.i

if.then.i49:                                      ; preds = %if.end13
  %20 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %xas, align 4
  %xa_head.i.i = getelementptr inbounds %struct.xarray, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %xa_head.i.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.anon.4, ptr %21, i32 0, i32 1
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %if.then.i49.xas_reload.exit_crit_edge

if.then.i49.xas_reload.exit_crit_edge:            ; preds = %if.then.i49
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i.i:                                ; preds = %if.then.i49
  %call2.i.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.xas_reload.exit_crit_edge

lor.lhs.false.i.i.xas_reload.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call4.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i

land.lhs.true.i.i.xas_reload.exit_crit_edge:      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true6.i.i:                               ; preds = %land.lhs.true.i.i
  %.b12.i.i = load i1, ptr @xa_head.__warned, align 1
  br i1 %.b12.i.i, label %land.lhs.true6.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true6.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

if.end.i:                                         ; preds = %if.end13
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %2, align 2
  %26 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %xas, align 4
  %conv.i = zext i8 %25 to i32
  %arrayidx.i.i = getelementptr %struct.xa_node, ptr %19, i32 0, i32 7, i32 %conv.i
  %28 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %dep_map.i10.i = getelementptr inbounds %struct.anon.4, ptr %27, i32 0, i32 1
  %call.i.i11.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i10.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11.i)
  %tobool.not.i12.i = icmp eq i32 %call.i.i11.i, 0
  br i1 %tobool.not.i12.i, label %lor.lhs.false.i15.i, label %if.end.i.xas_reload.exit_crit_edge

if.end.i.xas_reload.exit_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i15.i:                              ; preds = %if.end.i
  %call4.i13.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i13.i)
  %tobool5.not.i14.i = icmp eq i32 %call4.i13.i, 0
  br i1 %tobool5.not.i14.i, label %land.lhs.true.i16.i, label %lor.lhs.false.i15.i.xas_reload.exit_crit_edge

lor.lhs.false.i15.i.xas_reload.exit_crit_edge:    ; preds = %lor.lhs.false.i15.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i16.i:                              ; preds = %lor.lhs.false.i15.i
  %call6.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i16.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i16.i.xas_reload.exit_crit_edge:    ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i16.i
  %.b13.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i, label %land.lhs.true8.i.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true8.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

cleanup.sink.split.i:                             ; preds = %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge
  %xa_entry.__warned.sink.i = phi ptr [ @xa_head.__warned, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ @xa_entry.__warned, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 1167, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ 1183, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi ptr [ %23, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ %29, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %30 = ptrtoint ptr %xa_entry.__warned.sink.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i1 true, ptr %xa_entry.__warned.sink.i, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef %.sink.i, ptr noundef nonnull @.str.35) #11
  br label %xas_reload.exit

xas_reload.exit:                                  ; preds = %cleanup.sink.split.i, %land.lhs.true8.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i16.i.xas_reload.exit_crit_edge, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge, %if.end.i.xas_reload.exit_crit_edge, %land.lhs.true6.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i.i.xas_reload.exit_crit_edge, %lor.lhs.false.i.i.xas_reload.exit_crit_edge, %if.then.i49.xas_reload.exit_crit_edge
  %retval.0.i50 = phi ptr [ %23, %if.then.i49.xas_reload.exit_crit_edge ], [ %23, %lor.lhs.false.i.i.xas_reload.exit_crit_edge ], [ %23, %land.lhs.true.i.i.xas_reload.exit_crit_edge ], [ %23, %land.lhs.true6.i.i.xas_reload.exit_crit_edge ], [ %29, %if.end.i.xas_reload.exit_crit_edge ], [ %29, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge ], [ %29, %land.lhs.true.i16.i.xas_reload.exit_crit_edge ], [ %29, %land.lhs.true8.i.i.xas_reload.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp.not = icmp eq ptr %folio.0109, %retval.0.i50
  br i1 %cmp.not, label %again.preheader, label %put_page, !prof !299

again.preheader:                                  ; preds = %xas_reload.exit
  %31 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %0, align 4
  %33 = ptrtoint ptr %folio.0109 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %folio.0109, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %34)
  %cmp.i.not.i.i.i.i105 = icmp eq i32 %34, -1
  br i1 %cmp.i.not.i.i.i.i105, label %again.preheader.if.then.i.i.i.i51_crit_edge, label %PageHead.exit.i.i.i.lr.ph, !prof !300

again.preheader.if.then.i.i.i.i51_crit_edge:      ; preds = %again.preheader
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i.i.i.i51

PageHead.exit.i.i.i.lr.ph:                        ; preds = %again.preheader
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %folio.0109, i32 1, i32 1, i32 0, i32 2
  %35 = getelementptr inbounds %struct.page, ptr %folio.0109, i32 0, i32 1
  %index4.i = getelementptr inbounds %struct.anon, ptr %folio.0109, i32 0, i32 3
  br label %PageHead.exit.i.i.i

if.then.i.i.i.i51:                                ; preds = %folio_ref_inc.exit.if.then.i.i.i.i51_crit_edge, %again.preheader.if.then.i.i.i.i51_crit_edge
  call void @dump_page(ptr noundef nonnull %folio.0109, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge, %PageHead.exit.i.i.i.lr.ph
  %36 = phi i32 [ %32, %PageHead.exit.i.i.i.lr.ph ], [ %60, %folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge ]
  %ret.1106 = phi i32 [ %ret.0110, %PageHead.exit.i.i.i.lr.ph ], [ %inc, %folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge ]
  %37 = ptrtoint ptr %folio.0109 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %folio.0109, align 4
  %39 = and i32 %38, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.not.i.i.i = icmp eq i32 %39, 0
  br i1 %tobool.not.i.i.i, label %PageHead.exit.i.i.i.folio_file_page.exit_crit_edge, label %if.end.i.i.i

PageHead.exit.i.i.i.folio_file_page.exit_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_file_page.exit

if.end.i.i.i:                                     ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %40 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %compound_nr.i.i.i, align 4
  %phi.bo.i = add i32 %41, -1
  br label %folio_file_page.exit

folio_file_page.exit:                             ; preds = %if.end.i.i.i, %PageHead.exit.i.i.i.folio_file_page.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %phi.bo.i, %if.end.i.i.i ], [ 0, %PageHead.exit.i.i.i.folio_file_page.exit_crit_edge ]
  %and.i52 = and i32 %retval.0.i.i.i, %36
  %add.ptr.i = getelementptr %struct.page, ptr %folio.0109, i32 %and.i52
  %arrayidx = getelementptr ptr, ptr %pages, i32 %ret.1106
  %42 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %add.ptr.i, ptr %arrayidx, align 4
  %inc = add i32 %ret.1106, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %nr_pages)
  %cmp25 = icmp eq i32 %inc, %nr_pages
  br i1 %cmp25, label %folio_file_page.exit.for.end_crit_edge, label %if.end27

folio_file_page.exit.for.end_crit_edge:           ; preds = %folio_file_page.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end27:                                         ; preds = %folio_file_page.exit
  %43 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %35, align 4
  %and.i.i.i.i.i53 = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i53)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i53, 0
  br i1 %tobool.not.i.i.i.i, label %folio_test_large.exit.i, label %if.then.i.i.i.i54, !prof !299

if.then.i.i.i.i54:                                ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %folio.0109, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_large.exit.i:                          ; preds = %if.end27
  %45 = ptrtoint ptr %folio.0109 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %folio.0109, align 4
  %47 = and i32 %46, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.i.i.i = icmp ne i32 %47, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %36)
  %cmp.not.i = icmp ne i32 %36, -1
  %or.cond.i = and i1 %cmp.not.i, %tobool.i.i.i
  br i1 %or.cond.i, label %if.end3.i, label %folio_test_large.exit.i.for.inc_crit_edge

folio_test_large.exit.i.for.inc_crit_edge:        ; preds = %folio_test_large.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.end3.i:                                        ; preds = %folio_test_large.exit.i
  %48 = ptrtoint ptr %index4.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %index4.i, align 4
  %50 = ptrtoint ptr %folio.0109 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %folio.0109, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %51)
  %cmp.i.not.i.i.i.i55 = icmp eq i32 %51, -1
  br i1 %cmp.i.not.i.i.i.i55, label %if.then.i.i.i11.i, label %PageHead.exit.i.i.i57, !prof !300

if.then.i.i.i11.i:                                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %folio.0109, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i57:                            ; preds = %if.end3.i
  %52 = ptrtoint ptr %folio.0109 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %folio.0109, align 4
  %54 = and i32 %53, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.not.i.i.i56 = icmp eq i32 %54, 0
  br i1 %tobool.not.i.i.i56, label %PageHead.exit.i.i.i57.folio_more_pages.exit_crit_edge, label %if.end.i.i.i59

PageHead.exit.i.i.i57.folio_more_pages.exit_crit_edge: ; preds = %PageHead.exit.i.i.i57
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_more_pages.exit

if.end.i.i.i59:                                   ; preds = %PageHead.exit.i.i.i57
  call void @__sanitizer_cov_trace_pc() #13
  %55 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_more_pages.exit

folio_more_pages.exit:                            ; preds = %if.end.i.i.i59, %PageHead.exit.i.i.i57.folio_more_pages.exit_crit_edge
  %retval.0.i.i.i60 = phi i32 [ %56, %if.end.i.i.i59 ], [ 1, %PageHead.exit.i.i.i57.folio_more_pages.exit_crit_edge ]
  %add.i = add i32 %49, -1
  %sub.i = add i32 %add.i, %retval.0.i.i.i60
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %36)
  %cmp6.i = icmp ugt i32 %sub.i, %36
  br i1 %cmp6.i, label %if.then30, label %folio_more_pages.exit.for.inc_crit_edge

folio_more_pages.exit.for.inc_crit_edge:          ; preds = %folio_more_pages.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.then30:                                        ; preds = %folio_more_pages.exit
  %inc32 = add nuw i32 %36, 1
  %57 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %inc32, ptr %0, align 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %58 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !332
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@find_get_pages_contig, %if.then.i.i)) #11
          to label %folio_ref_inc.exit [label %if.then.i.i], !srcloc !306

if.then.i.i:                                      ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #13
  call void @__page_ref_mod(ptr noundef nonnull %folio.0109, i32 noundef 1) #11
  br label %folio_ref_inc.exit

folio_ref_inc.exit:                               ; preds = %if.then.i.i, %if.then30
  %59 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %0, align 4
  %61 = ptrtoint ptr %folio.0109 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %folio.0109, align 4
  %cmp.i.not.i.i.i.i = icmp eq i32 %62, -1
  br i1 %cmp.i.not.i.i.i.i, label %folio_ref_inc.exit.if.then.i.i.i.i51_crit_edge, label %folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge, !prof !300

folio_ref_inc.exit.PageHead.exit.i.i.i_crit_edge: ; preds = %folio_ref_inc.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %PageHead.exit.i.i.i

folio_ref_inc.exit.if.then.i.i.i.i51_crit_edge:   ; preds = %folio_ref_inc.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i.i.i.i51

put_page:                                         ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @folio_put(ptr noundef nonnull %folio.0109)
  br label %for.inc.sink.split

for.inc.sink.split:                               ; preds = %put_page, %folio_try_get_rcu.exit.for.inc.sink.split_crit_edge, %for.body.for.inc.sink.split_crit_edge
  %63 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.inc.sink.split, %folio_more_pages.exit.for.inc_crit_edge, %folio_test_large.exit.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %ret.2 = phi i32 [ %ret.0110, %for.body.for.inc_crit_edge ], [ %ret.0110, %for.inc.sink.split ], [ %inc, %folio_more_pages.exit.for.inc_crit_edge ], [ %inc, %folio_test_large.exit.i.for.inc_crit_edge ]
  %64 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %3, align 4
  %66 = ptrtoint ptr %65 to i32
  %and.i.i = and i32 %66, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i64 = icmp ne i32 %and.i.i, 0
  %tobool1.not.i.i = icmp eq ptr %65, null
  %spec.select.i.i = or i1 %tobool1.not.i.i, %tobool.not.i.i64
  br i1 %spec.select.i.i, label %for.inc.if.then.i67_crit_edge, label %lor.lhs.false.i, !prof !300

for.inc.if.then.i67_crit_edge:                    ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i67

lor.lhs.false.i:                                  ; preds = %for.inc
  %67 = ptrtoint ptr %65 to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %65, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %68)
  %tobool.not.i65 = icmp eq i8 %68, 0
  br i1 %tobool.not.i65, label %lor.rhs.i, label %lor.lhs.false.i.if.then.i67_crit_edge, !prof !299

lor.lhs.false.i.if.then.i67_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i67

lor.rhs.i:                                        ; preds = %lor.lhs.false.i
  %69 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %2, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 63, i8 %70)
  %cmp.i = icmp eq i8 %70, 63
  br i1 %cmp.i, label %lor.rhs.i.if.then.i67_crit_edge, label %if.end.i71, !prof !300

lor.rhs.i.if.then.i67_crit_edge:                  ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i67

if.then.i67:                                      ; preds = %lor.rhs.i.if.then.i67_crit_edge, %lor.lhs.false.i.if.then.i67_crit_edge, %for.inc.if.then.i67_crit_edge
  %call5.i = call ptr @__xas_next(ptr noundef nonnull %xas) #11
  br label %xas_next.exit

if.end.i71:                                       ; preds = %lor.rhs.i
  %71 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %0, align 4
  %inc.i = add i32 %72, 1
  store i32 %inc.i, ptr %0, align 4
  %inc7.i = add i8 %70, 1
  %73 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %73)
  store i8 %inc7.i, ptr %2, align 2
  %74 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %xas, align 4
  %conv9.i = zext i8 %inc7.i to i32
  %arrayidx.i.i68 = getelementptr %struct.xa_node, ptr %65, i32 0, i32 7, i32 %conv9.i
  %76 = ptrtoint ptr %arrayidx.i.i68 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile ptr, ptr %arrayidx.i.i68, align 4
  %dep_map.i.i69 = getelementptr inbounds %struct.anon.4, ptr %75, i32 0, i32 1
  %call.i.i.i70 = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i69, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i70)
  %tobool.not.i20.i = icmp eq i32 %call.i.i.i70, 0
  br i1 %tobool.not.i20.i, label %lor.lhs.false.i.i74, label %if.end.i71.xas_next.exit_crit_edge

if.end.i71.xas_next.exit_crit_edge:               ; preds = %if.end.i71
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

lor.lhs.false.i.i74:                              ; preds = %if.end.i71
  %call4.i.i72 = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i72)
  %tobool5.not.i.i73 = icmp eq i32 %call4.i.i72, 0
  br i1 %tobool5.not.i.i73, label %land.lhs.true.i.i77, label %lor.lhs.false.i.i74.xas_next.exit_crit_edge

lor.lhs.false.i.i74.xas_next.exit_crit_edge:      ; preds = %lor.lhs.false.i.i74
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

land.lhs.true.i.i77:                              ; preds = %lor.lhs.false.i.i74
  %call6.i.i75 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i75)
  %tobool7.not.i.i76 = icmp eq i32 %call6.i.i75, 0
  br i1 %tobool7.not.i.i76, label %land.lhs.true.i.i77.xas_next.exit_crit_edge, label %land.lhs.true8.i.i79

land.lhs.true.i.i77.xas_next.exit_crit_edge:      ; preds = %land.lhs.true.i.i77
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

land.lhs.true8.i.i79:                             ; preds = %land.lhs.true.i.i77
  %.b13.i.i78 = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i78, label %land.lhs.true8.i.i79.xas_next.exit_crit_edge, label %if.then.i.i80

land.lhs.true8.i.i79.xas_next.exit_crit_edge:     ; preds = %land.lhs.true8.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

if.then.i.i80:                                    ; preds = %land.lhs.true8.i.i79
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @xa_entry.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 1183, ptr noundef nonnull @.str.35) #11
  br label %xas_next.exit

xas_next.exit:                                    ; preds = %if.then.i.i80, %land.lhs.true8.i.i79.xas_next.exit_crit_edge, %land.lhs.true.i.i77.xas_next.exit_crit_edge, %lor.lhs.false.i.i74.xas_next.exit_crit_edge, %if.end.i71.xas_next.exit_crit_edge, %if.then.i67
  %retval.0.i81 = phi ptr [ %call5.i, %if.then.i67 ], [ %77, %if.end.i71.xas_next.exit_crit_edge ], [ %77, %lor.lhs.false.i.i74.xas_next.exit_crit_edge ], [ %77, %land.lhs.true.i.i77.xas_next.exit_crit_edge ], [ %77, %land.lhs.true8.i.i79.xas_next.exit_crit_edge ], [ %77, %if.then.i.i80 ]
  %tobool4.not = icmp eq ptr %retval.0.i81, null
  br i1 %tobool4.not, label %xas_next.exit.for.end_crit_edge, label %xas_next.exit.for.body_crit_edge

xas_next.exit.for.body_crit_edge:                 ; preds = %xas_next.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

xas_next.exit.for.end_crit_edge:                  ; preds = %xas_next.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.end:                                          ; preds = %xas_next.exit.for.end_crit_edge, %folio_file_page.exit.for.end_crit_edge, %if.end7.for.end_crit_edge, %rcu_read_lock.exit.for.end_crit_edge
  %ret.3 = phi i32 [ 0, %rcu_read_lock.exit.for.end_crit_edge ], [ %nr_pages, %folio_file_page.exit.for.end_crit_edge ], [ %ret.2, %xas_next.exit.for.end_crit_edge ], [ %ret.0110, %if.end7.for.end_crit_edge ]
  %call.i82 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i82, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i85

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i85:                                ; preds = %for.end
  %call1.i83 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i83)
  %tobool.not.i84 = icmp eq i32 %call1.i83, 0
  br i1 %tobool.not.i84, label %land.lhs.true.i85.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i87

land.lhs.true.i85.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i85
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i87:                               ; preds = %land.lhs.true.i85
  %.b4.i86 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i86, label %land.lhs.true2.i87.rcu_read_unlock.exit_crit_edge, label %if.then.i88

land.lhs.true2.i87.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i87
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i88:                                      ; preds = %land.lhs.true2.i87
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i88, %land.lhs.true2.i87.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i85.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %78 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i89 = and i32 %78, -16384
  %79 = inttoptr i32 %and.i.i.i.i.i89 to ptr
  %preempt_count.i.i.i.i90 = getelementptr inbounds %struct.thread_info, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %preempt_count.i.i.i.i90 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %preempt_count.i.i.i.i90, align 4
  %sub.i.i.i = add i32 %81, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i90, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.3, %rcu_read_unlock.exit ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xas_load(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @xas_reload(ptr nocapture noundef readonly %xas) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %xa_node = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %0 = ptrtoint ptr %xa_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %xa_node, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %xas, align 4
  %xa_head.i = getelementptr inbounds %struct.xarray, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %xa_head.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %xa_head.i, align 4
  %dep_map.i = getelementptr inbounds %struct.anon.4, ptr %3, i32 0, i32 1
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %if.then
  %call2.i = tail call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call4.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %land.lhs.true6.i

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i
  %.b12.i = load i1, ptr @xa_head.__warned, align 1
  br i1 %.b12.i, label %land.lhs.true6.i.cleanup_crit_edge, label %land.lhs.true6.i.cleanup.sink.split_crit_edge

land.lhs.true6.i.cleanup.sink.split_crit_edge:    ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

land.lhs.true6.i.cleanup_crit_edge:               ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %xa_offset = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %6 = ptrtoint ptr %xa_offset to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %xa_offset, align 2
  %8 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %xas, align 4
  %conv = zext i8 %7 to i32
  %arrayidx.i = getelementptr %struct.xa_node, ptr %1, i32 0, i32 7, i32 %conv
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %arrayidx.i, align 4
  %dep_map.i10 = getelementptr inbounds %struct.anon.4, ptr %9, i32 0, i32 1
  %call.i.i11 = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i10, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11)
  %tobool.not.i12 = icmp eq i32 %call.i.i11, 0
  br i1 %tobool.not.i12, label %lor.lhs.false.i15, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

lor.lhs.false.i15:                                ; preds = %if.end
  %call4.i13 = tail call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i13)
  %tobool5.not.i14 = icmp eq i32 %call4.i13, 0
  br i1 %tobool5.not.i14, label %land.lhs.true.i16, label %lor.lhs.false.i15.cleanup_crit_edge

lor.lhs.false.i15.cleanup_crit_edge:              ; preds = %lor.lhs.false.i15
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

land.lhs.true.i16:                                ; preds = %lor.lhs.false.i15
  %call6.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %land.lhs.true.i16.cleanup_crit_edge, label %land.lhs.true8.i

land.lhs.true.i16.cleanup_crit_edge:              ; preds = %land.lhs.true.i16
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

land.lhs.true8.i:                                 ; preds = %land.lhs.true.i16
  %.b13.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i, label %land.lhs.true8.i.cleanup_crit_edge, label %land.lhs.true8.i.cleanup.sink.split_crit_edge

land.lhs.true8.i.cleanup.sink.split_crit_edge:    ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split

land.lhs.true8.i.cleanup_crit_edge:               ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

cleanup.sink.split:                               ; preds = %land.lhs.true8.i.cleanup.sink.split_crit_edge, %land.lhs.true6.i.cleanup.sink.split_crit_edge
  %xa_entry.__warned.sink = phi ptr [ @xa_head.__warned, %land.lhs.true6.i.cleanup.sink.split_crit_edge ], [ @xa_entry.__warned, %land.lhs.true8.i.cleanup.sink.split_crit_edge ]
  %.sink = phi i32 [ 1167, %land.lhs.true6.i.cleanup.sink.split_crit_edge ], [ 1183, %land.lhs.true8.i.cleanup.sink.split_crit_edge ]
  %retval.0.ph = phi ptr [ %5, %land.lhs.true6.i.cleanup.sink.split_crit_edge ], [ %11, %land.lhs.true8.i.cleanup.sink.split_crit_edge ]
  %12 = ptrtoint ptr %xa_entry.__warned.sink to i32
  call void @__asan_store1_noabort(i32 %12)
  store i1 true, ptr %xa_entry.__warned.sink, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef %.sink, ptr noundef nonnull @.str.35) #11
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %land.lhs.true8.i.cleanup_crit_edge, %land.lhs.true.i16.cleanup_crit_edge, %lor.lhs.false.i15.cleanup_crit_edge, %if.end.cleanup_crit_edge, %land.lhs.true6.i.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ %5, %if.then.cleanup_crit_edge ], [ %5, %lor.lhs.false.i.cleanup_crit_edge ], [ %5, %land.lhs.true.i.cleanup_crit_edge ], [ %5, %land.lhs.true6.i.cleanup_crit_edge ], [ %11, %if.end.cleanup_crit_edge ], [ %11, %lor.lhs.false.i15.cleanup_crit_edge ], [ %11, %land.lhs.true.i16.cleanup_crit_edge ], [ %11, %land.lhs.true8.i.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_get_pages_range_tag(ptr noundef %mapping, ptr nocapture noundef %index, i32 noundef %end, i32 noundef %tag, i32 noundef %nr_pages, ptr nocapture noundef writeonly %pages) #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %5 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %i_pages, ptr %xas, align 4
  %6 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %index, align 4
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %0, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %1, align 4
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 3 to ptr), ptr %2, align 4
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %3, align 4
  %12 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_pages)
  %tobool.not = icmp eq i32 %nr_pages, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !300

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %13 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %16, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %if.end.while.cond.outer.preheader_crit_edge, label %land.lhs.true.i

if.end.while.cond.outer.preheader_crit_edge:      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.outer.preheader

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.while.cond.outer.preheader_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.while.cond.outer.preheader_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.outer.preheader

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.while.cond.outer.preheader_crit_edge, label %if.then.i

land.lhs.true2.i.while.cond.outer.preheader_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.outer.preheader

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %while.cond.outer.preheader

while.cond.outer.preheader:                       ; preds = %if.then.i, %land.lhs.true2.i.while.cond.outer.preheader_crit_edge, %land.lhs.true.i.while.cond.outer.preheader_crit_edge, %if.end.while.cond.outer.preheader_crit_edge
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.end7.while.cond.outer_crit_edge, %while.cond.outer.preheader
  %ret.0.ph = phi i32 [ %inc, %if.end7.while.cond.outer_crit_edge ], [ 0, %while.cond.outer.preheader ]
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %while.cond.outer
  %call = call fastcc ptr @find_get_entry(ptr noundef nonnull %xas, i32 noundef %end, i32 noundef %tag)
  %tobool4.not = icmp eq ptr %call, null
  br i1 %tobool4.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %17 = ptrtoint ptr %call to i32
  %and.i = and i32 %17, 1
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end7, label %while.body.while.cond_crit_edge

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond

if.end7:                                          ; preds = %while.body
  %arrayidx = getelementptr ptr, ptr %pages, i32 %ret.0.ph
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call, ptr %arrayidx, align 4
  %inc = add i32 %ret.0.ph, 1
  %cmp = icmp eq i32 %inc, %nr_pages
  br i1 %cmp, label %if.then8, label %if.end7.while.cond.outer_crit_edge

if.end7.while.cond.outer_crit_edge:               ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.outer

if.then8:                                         ; preds = %if.end7
  %index9 = getelementptr inbounds %struct.anon, ptr %call, i32 0, i32 3
  %19 = ptrtoint ptr %index9 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %index9, align 4
  %21 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %call, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %22)
  %cmp.i.not.i.i.i = icmp eq i32 %22, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %PageHead.exit.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i:                                ; preds = %if.then8
  %23 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %call, align 4
  %25 = and i32 %24, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i.i, label %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge, label %if.end.i.i

PageHead.exit.i.i.folio_nr_pages.exit_crit_edge:  ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_nr_pages.exit

if.end.i.i:                                       ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i = getelementptr %struct.page, ptr %call, i32 1, i32 1, i32 0, i32 2
  %26 = ptrtoint ptr %compound_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %compound_nr.i.i, align 4
  br label %folio_nr_pages.exit

folio_nr_pages.exit:                              ; preds = %if.end.i.i, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge
  %retval.0.i.i = phi i32 [ %27, %if.end.i.i ], [ 1, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge ]
  %add = add i32 %retval.0.i.i, %20
  br label %out

while.end:                                        ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %end)
  %cmp12 = icmp eq i32 %end, -1
  %add14 = add nuw i32 %end, 1
  %spec.select = select i1 %cmp12, i32 -1, i32 %add14
  br label %out

out:                                              ; preds = %while.end, %folio_nr_pages.exit
  %.sink = phi i32 [ %add, %folio_nr_pages.exit ], [ %spec.select, %while.end ]
  %ret.1 = phi i32 [ %nr_pages, %folio_nr_pages.exit ], [ %ret.0.ph, %while.end ]
  %28 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %.sink, ptr %index, align 4
  %call.i29 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i29, label %out.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i32

out.rcu_read_unlock.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i32:                                ; preds = %out
  %call1.i30 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i30)
  %tobool.not.i31 = icmp eq i32 %call1.i30, 0
  br i1 %tobool.not.i31, label %land.lhs.true.i32.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i34

land.lhs.true.i32.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i32
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i34:                               ; preds = %land.lhs.true.i32
  %.b4.i33 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i33, label %land.lhs.true2.i34.rcu_read_unlock.exit_crit_edge, label %if.then.i35

land.lhs.true2.i34.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i34
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i35:                                      ; preds = %land.lhs.true2.i34
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i35, %land.lhs.true2.i34.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i32.rcu_read_unlock.exit_crit_edge, %out.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %29 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i36 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i36 to ptr
  %preempt_count.i.i.i.i37 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i37 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i37, align 4
  %sub.i.i.i = add i32 %32, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i37, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1, %rcu_read_unlock.exit ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_read(ptr nocapture noundef %iocb, ptr noundef %iter, i32 noundef %already_read) #0 align 64 {
entry:
  %fbatch = alloca %struct.folio_batch, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iocb, align 8
  %f_mapping = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_mapping, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %fbatch) #11
  %6 = call ptr @memset(ptr %fbatch, i32 255, i32 64)
  %ki_pos = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %7 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %ki_pos, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 8
  %9 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %i_sb, align 4
  %s_maxbytes = getelementptr inbounds %struct.super_block, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %s_maxbytes to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %s_maxbytes, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %12)
  %cmp.not = icmp slt i64 %8, %12
  br i1 %cmp.not, label %if.end, label %entry.cleanup132_crit_edge, !prof !299

entry.cleanup132_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup132

if.end:                                           ; preds = %entry
  %count.i = getelementptr inbounds %struct.iov_iter, ptr %iter, i32 0, i32 4
  %13 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool2.not = icmp eq i32 %14, 0
  br i1 %tobool2.not, label %if.end.cleanup132_crit_edge, label %if.end12, !prof !300

if.end.cleanup132_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup132

if.end12:                                         ; preds = %if.end
  %conv.i = zext i32 %14 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %conv.i)
  %cmp.i = icmp ult i64 %12, %conv.i
  br i1 %cmp.i, label %if.then.i, label %if.end12.iov_iter_truncate.exit_crit_edge

if.end12.iov_iter_truncate.exit_crit_edge:        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #13
  br label %iov_iter_truncate.exit

if.then.i:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #13
  %conv3.i = trunc i64 %12 to i32
  %15 = ptrtoint ptr %count.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv3.i, ptr %count.i, align 8
  br label %iov_iter_truncate.exit

iov_iter_truncate.exit:                           ; preds = %if.then.i, %if.end12.iov_iter_truncate.exit_crit_edge
  %16 = ptrtoint ptr %fbatch to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 0, ptr %fbatch, align 4
  %percpu_pvec_drained.i = getelementptr inbounds %struct.folio_batch, ptr %fbatch, i32 0, i32 1
  %17 = ptrtoint ptr %percpu_pvec_drained.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 0, ptr %percpu_pvec_drained.i, align 1
  %ki_flags = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 4
  %i_mmap_writable.i = getelementptr inbounds %struct.address_space, ptr %3, i32 0, i32 4
  %prev_pos = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 13, i32 5
  %folios = getelementptr inbounds %struct.folio_batch, ptr %fbatch, i32 0, i32 2
  br label %do.body

do.body:                                          ; preds = %land.lhs.true120.do.body_crit_edge, %iov_iter_truncate.exit
  %already_read.addr.0 = phi i32 [ %already_read, %iov_iter_truncate.exit ], [ %already_read.addr.3231, %land.lhs.true120.do.body_crit_edge ]
  tail call void @__might_resched(ptr noundef nonnull @.str.6, i32 noundef 2663, i32 noundef 0) #11
  %call.i = tail call i32 @__cond_resched() #11
  %18 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ki_flags, align 8
  %and = and i32 %19, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool16.not = icmp eq i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %already_read.addr.0)
  %tobool17.not = icmp eq i32 %already_read.addr.0, 0
  %or.cond = select i1 %tobool16.not, i1 true, i1 %tobool17.not
  br i1 %or.cond, label %do.body.if.end20_crit_edge, label %if.then18

do.body.if.end20_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end20

if.then18:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  %or = or i32 %19, 8
  %20 = ptrtoint ptr %ki_flags to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %or, ptr %ki_flags, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %do.body.if.end20_crit_edge
  %21 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %ki_pos, align 8
  %call22 = tail call fastcc i64 @i_size_read(ptr noundef %5)
  call void @__sanitizer_cov_trace_cmp8(i64 %22, i64 %call22)
  %cmp23.not = icmp slt i64 %22, %call22
  br i1 %cmp23.not, label %if.end31, label %if.end20.do.end_crit_edge, !prof !299

if.end20.do.end_crit_edge:                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end

if.end31:                                         ; preds = %if.end20
  %call32 = call fastcc i32 @filemap_get_pages(ptr noundef %iocb, ptr noundef %iter, ptr noundef nonnull %fbatch)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %cmp33 = icmp slt i32 %call32, 0
  br i1 %cmp33, label %if.end31.do.end_crit_edge, label %if.end35

if.end31.do.end_crit_edge:                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end

if.end35:                                         ; preds = %if.end31
  %call36 = tail call fastcc i64 @i_size_read(ptr noundef %5)
  %23 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ki_pos, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %24, i64 %call36)
  %cmp38.not = icmp slt i64 %24, %call36
  br i1 %cmp38.not, label %if.end46, label %if.end35.put_folios_crit_edge, !prof !299

if.end35.put_folios_crit_edge:                    ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #13
  br label %put_folios

if.end46:                                         ; preds = %if.end35
  %25 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %count.i, align 8
  %conv = zext i32 %26 to i64
  %add = add i64 %24, %conv
  %27 = tail call i64 @llvm.smin.i64(i64 %call36, i64 %add)
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %i_mmap_writable.i, i32 noundef 4) #11
  %28 = ptrtoint ptr %i_mmap_writable.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %i_mmap_writable.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %29)
  %cmp.i197 = icmp slt i32 %29, 1
  %30 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %ki_pos, align 8
  %32 = ptrtoint ptr %prev_pos to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %prev_pos, align 8
  %cmp55.not.unshifted = xor i64 %33, %31
  call void @__sanitizer_cov_trace_const_cmp8(i64 4096, i64 %cmp55.not.unshifted)
  %cmp55.not = icmp ult i64 %cmp55.not.unshifted, 4096
  br i1 %cmp55.not, label %if.end46.if.end58_crit_edge, label %if.then57

if.end46.if.end58_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end58

if.then57:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #13
  %34 = ptrtoint ptr %folios to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %folios, align 4
  tail call void @folio_mark_accessed(ptr noundef %35) #11
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %if.end46.if.end58_crit_edge
  %36 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %fbatch, align 4
  %conv.i199 = zext i8 %37 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %cmp60212.not = icmp eq i8 %37, 0
  br i1 %cmp60212.not, label %if.end58.for.end117_crit_edge, label %if.end58.for.body_crit_edge

if.end58.for.body_crit_edge:                      ; preds = %if.end58
  br label %for.body

if.end58.for.end117_crit_edge:                    ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end117

for.cond:                                         ; preds = %if.end92
  %inc = add nuw nsw i32 %i.0213, 1
  %exitcond.not = icmp eq i32 %inc, %conv.i199
  br i1 %exitcond.not, label %for.cond.put_folios_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

for.cond.put_folios_crit_edge:                    ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %put_folios

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end58.for.body_crit_edge
  %already_read.addr.1214 = phi i32 [ %add94, %for.cond.for.body_crit_edge ], [ %already_read.addr.0, %if.end58.for.body_crit_edge ]
  %i.0213 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %if.end58.for.body_crit_edge ]
  %arrayidx63 = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %i.0213
  %38 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx63, align 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %39, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %41)
  %cmp.i.not.i.i.i.i = icmp eq i32 %41, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %PageHead.exit.i.i.i, !prof !300

if.then.i.i.i.i:                                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %39, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %for.body
  %42 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %39, align 4
  %44 = and i32 %43, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.not.i.i.i = icmp eq i32 %44, 0
  br i1 %tobool.not.i.i.i, label %PageHead.exit.i.i.i.folio_size.exit_crit_edge, label %if.end.i.i.i

PageHead.exit.i.i.i.folio_size.exit_crit_edge:    ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_size.exit

if.end.i.i.i:                                     ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %45 = getelementptr %struct.page, ptr %39, i32 1, i32 1
  %compound_order.i.i.i = getelementptr inbounds %struct.anon.9, ptr %45, i32 0, i32 2
  %46 = ptrtoint ptr %compound_order.i.i.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %compound_order.i.i.i, align 1
  %conv.i.i.i = zext i8 %47 to i32
  br label %folio_size.exit

folio_size.exit:                                  ; preds = %if.end.i.i.i, %PageHead.exit.i.i.i.folio_size.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %conv.i.i.i, %if.end.i.i.i ], [ 0, %PageHead.exit.i.i.i.folio_size.exit_crit_edge ]
  %shl.i = shl i32 4096, %retval.0.i.i.i
  %48 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %ki_pos, align 8
  %sub = add i32 %shl.i, -1
  %50 = trunc i64 %49 to i32
  %conv68 = and i32 %sub, %50
  %sub70 = sub i64 %27, %49
  %sub71 = sub i32 %shl.i, %conv68
  %conv72 = zext i32 %sub71 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %sub70, i64 %conv72)
  %cmp74 = icmp slt i64 %sub70, %conv72
  %extract.t = trunc i64 %sub70 to i32
  %cond79.off0 = select i1 %cmp74, i32 %extract.t, i32 %sub71
  %index.i.i = getelementptr inbounds %struct.page, ptr %39, i32 0, i32 1, i32 0, i32 2
  %51 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %index.i.i, align 4
  %conv.i.i = zext i32 %52 to i64
  %shl.i.i = shl nuw nsw i64 %conv.i.i, 12
  call void @__sanitizer_cov_trace_cmp8(i64 %27, i64 %shl.i.i)
  %cmp82 = icmp slt i64 %27, %shl.i.i
  br i1 %cmp82, label %folio_size.exit.put_folios_crit_edge, label %if.end85

folio_size.exit.put_folios_crit_edge:             ; preds = %folio_size.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %put_folios

if.end85:                                         ; preds = %folio_size.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0213)
  %cmp86.not = icmp eq i32 %i.0213, 0
  br i1 %cmp86.not, label %if.end85.if.end89_crit_edge, label %if.then88

if.end85.if.end89_crit_edge:                      ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end89

if.then88:                                        ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @folio_mark_accessed(ptr noundef %39) #11
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %if.end85.if.end89_crit_edge
  br i1 %cmp.i197, label %if.end89.if.end92_crit_edge, label %if.then91

if.end89.if.end92_crit_edge:                      ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end92

if.then91:                                        ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @flush_dcache_folio(ptr noundef %39) #11
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end89.if.end92_crit_edge
  %call.i200 = tail call i32 @copy_page_to_iter(ptr noundef %39, i32 noundef %conv68, i32 noundef %cond79.off0, ptr noundef %iter) #11
  %add94 = add i32 %call.i200, %already_read.addr.1214
  %conv95 = zext i32 %call.i200 to i64
  %53 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %ki_pos, align 8
  %add97 = add i64 %54, %conv95
  store i64 %add97, ptr %ki_pos, align 8
  %55 = ptrtoint ptr %prev_pos to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %add97, ptr %prev_pos, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i200, i32 %cond79.off0)
  %cmp100 = icmp ult i32 %call.i200, %cond79.off0
  br i1 %cmp100, label %if.end92.put_folios_crit_edge, label %for.cond

if.end92.put_folios_crit_edge:                    ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #13
  br label %put_folios

put_folios:                                       ; preds = %if.end92.put_folios_crit_edge, %folio_size.exit.put_folios_crit_edge, %for.cond.put_folios_crit_edge, %if.end35.put_folios_crit_edge
  %error.3.ph = phi i32 [ %call32, %if.end35.put_folios_crit_edge ], [ -14, %if.end92.put_folios_crit_edge ], [ %call32, %folio_size.exit.put_folios_crit_edge ], [ %call32, %for.cond.put_folios_crit_edge ]
  %already_read.addr.3.ph = phi i32 [ %already_read.addr.0, %if.end35.put_folios_crit_edge ], [ %add94, %if.end92.put_folios_crit_edge ], [ %already_read.addr.1214, %folio_size.exit.put_folios_crit_edge ], [ %add94, %for.cond.put_folios_crit_edge ]
  %56 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %56)
  %.pr = load i8, ptr %fbatch, align 4
  %conv.i201 = zext i8 %.pr to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %cmp110220.not = icmp eq i8 %.pr, 0
  br i1 %cmp110220.not, label %put_folios.for.end117_crit_edge, label %put_folios.for.body112_crit_edge

put_folios.for.body112_crit_edge:                 ; preds = %put_folios
  br label %for.body112

put_folios.for.end117_crit_edge:                  ; preds = %put_folios
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end117

for.body112:                                      ; preds = %folio_put.exit.for.body112_crit_edge, %put_folios.for.body112_crit_edge
  %i.1221 = phi i32 [ %inc116, %folio_put.exit.for.body112_crit_edge ], [ 0, %put_folios.for.body112_crit_edge ]
  %arrayidx114 = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %i.1221
  %57 = ptrtoint ptr %arrayidx114 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx114, align 4
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %58, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %59 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %cmp.i.i.i = icmp eq i32 %60, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %for.body112
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %58, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %for.body112
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %61 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %61, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@filemap_read, %if.then.i.i.i.i202)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i202], !srcloc !306

if.then.i.i.i.i202:                               ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %58, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i202, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i203, label %folio_put_testzero.exit.i.folio_put.exit_crit_edge

folio_put_testzero.exit.i.folio_put.exit_crit_edge: ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_put.exit

if.then.i203:                                     ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef %58) #11
  br label %folio_put.exit

folio_put.exit:                                   ; preds = %if.then.i203, %folio_put_testzero.exit.i.folio_put.exit_crit_edge
  %inc116 = add nuw nsw i32 %i.1221, 1
  %exitcond225.not = icmp eq i32 %inc116, %conv.i201
  br i1 %exitcond225.not, label %folio_put.exit.for.end117_crit_edge, label %folio_put.exit.for.body112_crit_edge

folio_put.exit.for.body112_crit_edge:             ; preds = %folio_put.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body112

folio_put.exit.for.end117_crit_edge:              ; preds = %folio_put.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end117

for.end117:                                       ; preds = %folio_put.exit.for.end117_crit_edge, %put_folios.for.end117_crit_edge, %if.end58.for.end117_crit_edge
  %already_read.addr.3231 = phi i32 [ %already_read.addr.3.ph, %put_folios.for.end117_crit_edge ], [ %already_read.addr.0, %if.end58.for.end117_crit_edge ], [ %already_read.addr.3.ph, %folio_put.exit.for.end117_crit_edge ]
  %error.3230 = phi i32 [ %error.3.ph, %put_folios.for.end117_crit_edge ], [ %call32, %if.end58.for.end117_crit_edge ], [ %error.3.ph, %folio_put.exit.for.end117_crit_edge ]
  %62 = ptrtoint ptr %fbatch to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 0, ptr %fbatch, align 4
  %63 = ptrtoint ptr %percpu_pvec_drained.i to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 0, ptr %percpu_pvec_drained.i, align 1
  %64 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool119.not = icmp eq i32 %65, 0
  br i1 %tobool119.not, label %for.end117.do.end_crit_edge, label %land.lhs.true120

for.end117.do.end_crit_edge:                      ; preds = %for.end117
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end

land.lhs.true120:                                 ; preds = %for.end117
  %66 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %ki_pos, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %67, i64 %call36)
  %cmp122 = icmp slt i64 %67, %call36
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.3230)
  %tobool124.not = icmp eq i32 %error.3230, 0
  %or.cond196 = select i1 %cmp122, i1 %tobool124.not, i1 false
  br i1 %or.cond196, label %land.lhs.true120.do.body_crit_edge, label %land.lhs.true120.do.end_crit_edge

land.lhs.true120.do.end_crit_edge:                ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end

land.lhs.true120.do.body_crit_edge:               ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

do.end:                                           ; preds = %land.lhs.true120.do.end_crit_edge, %for.end117.do.end_crit_edge, %if.end31.do.end_crit_edge, %if.end20.do.end_crit_edge
  %error.4 = phi i32 [ 0, %if.end20.do.end_crit_edge ], [ %call32, %if.end31.do.end_crit_edge ], [ %error.3230, %land.lhs.true120.do.end_crit_edge ], [ %error.3230, %for.end117.do.end_crit_edge ]
  %already_read.addr.4 = phi i32 [ %already_read.addr.0, %if.end20.do.end_crit_edge ], [ %already_read.addr.0, %if.end31.do.end_crit_edge ], [ %already_read.addr.3231, %land.lhs.true120.do.end_crit_edge ], [ %already_read.addr.3231, %for.end117.do.end_crit_edge ]
  %f_flags.i = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 7
  %68 = ptrtoint ptr %f_flags.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %f_flags.i, align 4
  %and.i = and i32 %69, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i206, label %do.end.file_accessed.exit_crit_edge

do.end.file_accessed.exit_crit_edge:              ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %file_accessed.exit

if.then.i206:                                     ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #13
  %f_path.i = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 1
  tail call void @touch_atime(ptr noundef %f_path.i) #11
  br label %file_accessed.exit

file_accessed.exit:                               ; preds = %if.then.i206, %do.end.file_accessed.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %already_read.addr.4)
  %tobool127.not = icmp eq i32 %already_read.addr.4, 0
  %error.4.already_read.addr.4 = select i1 %tobool127.not, i32 %error.4, i32 %already_read.addr.4
  br label %cleanup132

cleanup132:                                       ; preds = %file_accessed.exit, %if.end.cleanup132_crit_edge, %entry.cleanup132_crit_edge
  %retval.0 = phi i32 [ %error.4.already_read.addr.4, %file_accessed.exit ], [ 0, %entry.cleanup132_crit_edge ], [ 0, %if.end.cleanup132_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %fbatch) #11
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @i_size_read(ptr noundef %inode) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %i_size_seqcount = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 23
  %dep_map.c48.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 23, i32 1
  %i_size18 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 14
  br label %do.body

do.body:                                          ; preds = %while.end.do.body_crit_edge, %entry
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !371
  %and.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.body24.critedge.i

if.then.i:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @trace_hardirqs_off() #11
  %1 = tail call ptr @llvm.returnaddress(i32 0) #11
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #11
  tail call void @lock_release(ptr noundef %dep_map.c48.i, i32 noundef %2) #11
  tail call void @trace_hardirqs_on() #11
  br label %do.body24.i

do.body24.critedge.i:                             ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  %3 = tail call ptr @llvm.returnaddress(i32 0) #11
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #11
  tail call void @lock_release(ptr noundef %dep_map.c48.i, i32 noundef %4) #11
  br label %do.body24.i

do.body24.i:                                      ; preds = %do.body24.critedge.i, %if.then.i
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !372
  %and.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool32.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool32.not.i, label %if.then36.i, label %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge, !prof !300

do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge: ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %seqcount_lockdep_reader_access.exit

if.then36.i:                                      ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @warn_bogus_irq_restore() #11
  br label %seqcount_lockdep_reader_access.exit

seqcount_lockdep_reader_access.exit:              ; preds = %if.then36.i, %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #11, !srcloc !373
  %6 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %i_size_seqcount, align 4
  %and29 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool.not30 = icmp eq i32 %and29, 0
  br i1 %tobool.not30, label %seqcount_lockdep_reader_access.exit.while.end_crit_edge, label %seqcount_lockdep_reader_access.exit.do.end_crit_edge

seqcount_lockdep_reader_access.exit.do.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  br label %do.end

seqcount_lockdep_reader_access.exit.while.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

do.end:                                           ; preds = %do.end.do.end_crit_edge, %seqcount_lockdep_reader_access.exit.do.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !374
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #11, !srcloc !375
  %8 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %i_size_seqcount, align 4
  %and = and i32 %9, 1
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end.while.end_crit_edge, label %do.end.do.end_crit_edge

do.end.do.end_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end

do.end.while.end_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.end:                                        ; preds = %do.end.while.end_crit_edge, %seqcount_lockdep_reader_access.exit.while.end_crit_edge
  %.lcssa = phi i32 [ %7, %seqcount_lockdep_reader_access.exit.while.end_crit_edge ], [ %9, %do.end.while.end_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !376
  %10 = ptrtoint ptr %i_size18 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %i_size18, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !377
  %12 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %i_size_seqcount, align 4
  %cmp.i.i.not = icmp eq i32 %13, %.lcssa
  br i1 %cmp.i.i.not, label %do.end24, label %while.end.do.body_crit_edge

while.end.do.body_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

do.end24:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #13
  ret i64 %11
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @filemap_get_pages(ptr nocapture noundef %iocb, ptr nocapture noundef readonly %iter, ptr nocapture noundef %fbatch) unnamed_addr #0 align 64 {
entry:
  %ractl.i120 = alloca %struct.readahead_control, align 4
  %ractl.i = alloca %struct.readahead_control, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iocb, align 8
  %f_mapping = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_mapping, align 4
  %f_ra = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 13
  %ki_pos = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %4 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ki_pos, align 8
  %6 = lshr i64 %5, 12
  %conv = trunc i64 %6 to i32
  %count = getelementptr inbounds %struct.iov_iter, ptr %iter, i32 0, i32 4
  %7 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %count, align 8
  %conv2 = zext i32 %8 to i64
  %add = add i64 %5, 4095
  %sub = add i64 %add, %conv2
  %div = sdiv i64 %sub, 4096
  %conv4 = trunc i64 %div to i32
  %ki_flags = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 4
  %sub12 = sub i32 %conv4, %conv
  %9 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i, i32 0, i32 1
  %10 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i, i32 0, i32 2
  %11 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i, i32 0, i32 3
  %12 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i, i32 0, i32 4
  %13 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i, i32 0, i32 5
  %14 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i120, i32 0, i32 1
  %15 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i120, i32 0, i32 2
  %16 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i120, i32 0, i32 3
  %17 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i120, i32 0, i32 4
  %18 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i120, i32 0, i32 5
  br label %retry

retry:                                            ; preds = %retry.backedge, %entry
  %19 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %stack.i.i.i, align 4
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %24, align 4
  %and1.i.i.i.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %retry.if.end_crit_edge, label %fatal_signal_pending.exit

retry.if.end_crit_edge:                           ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

fatal_signal_pending.exit:                        ; preds = %retry
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 116, i32 1
  %27 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %signal.i.i, align 4
  %29 = and i32 %28, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not = icmp eq i32 %29, 0
  br i1 %tobool.not, label %fatal_signal_pending.exit.if.end_crit_edge, label %fatal_signal_pending.exit.cleanup_crit_edge

fatal_signal_pending.exit.cleanup_crit_edge:      ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

fatal_signal_pending.exit.if.end_crit_edge:       ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

if.end:                                           ; preds = %fatal_signal_pending.exit.if.end_crit_edge, %retry.if.end_crit_edge
  call fastcc void @filemap_get_read_batch(ptr noundef %3, i32 noundef %conv, i32 noundef %conv4, ptr noundef %fbatch)
  %30 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %fbatch, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool7.not = icmp eq i8 %31, 0
  br i1 %tobool7.not, label %if.then8, label %if.end.if.end29_crit_edge

if.end.if.end29_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end29

if.then8:                                         ; preds = %if.end
  %32 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %ki_flags, align 8
  %and = and i32 %33, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool9.not = icmp eq i32 %and, 0
  br i1 %tobool9.not, label %if.end13, label %if.then8.cleanup_crit_edge

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end13:                                         ; preds = %if.then8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ractl.i) #11
  %34 = ptrtoint ptr %ractl.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %1, ptr %ractl.i, align 4
  %35 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %3, ptr %9, align 4
  %36 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %f_ra, ptr %10, align 4
  %37 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv, ptr %11, align 4
  %38 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %12, align 4
  %39 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 0, ptr %13, align 4
  call void @page_cache_sync_ra(ptr noundef nonnull %ractl.i, i32 noundef %sub12) #11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ractl.i) #11
  call fastcc void @filemap_get_read_batch(ptr noundef %3, i32 noundef %conv, i32 noundef %conv4, ptr noundef %fbatch)
  %40 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %40)
  %.pr = load i8, ptr %fbatch, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool15.not = icmp eq i8 %.pr, 0
  br i1 %tobool15.not, label %if.then16, label %if.end13.if.end29_crit_edge

if.end13.if.end29_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end29

if.then16:                                        ; preds = %if.end13
  %41 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ki_flags, align 8
  %and18 = and i32 %42, 524296
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  br i1 %tobool19.not, label %if.end21, label %if.then16.cleanup_crit_edge

if.then16.cleanup_crit_edge:                      ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end21:                                         ; preds = %if.then16
  %43 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %ki_pos, align 8
  %45 = lshr i64 %44, 12
  %conv24 = trunc i64 %45 to i32
  %call25 = call fastcc i32 @filemap_create_folio(ptr noundef %1, ptr noundef %3, i32 noundef %conv24, ptr noundef %fbatch)
  call void @__sanitizer_cov_trace_const_cmp4(i32 524289, i32 %call25)
  %cmp = icmp eq i32 %call25, 524289
  br i1 %cmp, label %if.end21.retry.backedge_crit_edge, label %if.end21.cleanup_crit_edge

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end21.retry.backedge_crit_edge:                ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge

retry.backedge:                                   ; preds = %if.end64.retry.backedge_crit_edge, %if.end21.retry.backedge_crit_edge
  br label %retry

if.end29:                                         ; preds = %if.end13.if.end29_crit_edge, %if.end.if.end29_crit_edge
  %46 = phi i8 [ %.pr, %if.end13.if.end29_crit_edge ], [ %31, %if.end.if.end29_crit_edge ]
  %conv.i118 = zext i8 %46 to i32
  %sub31 = add nsw i32 %conv.i118, -1
  %arrayidx = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %sub31
  %47 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx, align 4
  %49 = getelementptr inbounds %struct.page, ptr %48, i32 0, i32 1
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %49, align 4
  %and.i.i.i = and i32 %51, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_readahead.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %48, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_readahead.exit:                        ; preds = %if.end29
  %52 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %48, align 4
  %54 = and i32 %53, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.i.not = icmp eq i32 %54, 0
  br i1 %tobool.i.not, label %folio_test_readahead.exit.if.end38_crit_edge, label %if.then33

folio_test_readahead.exit.if.end38_crit_edge:     ; preds = %folio_test_readahead.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end38

if.then33:                                        ; preds = %folio_test_readahead.exit
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ractl.i120) #11
  %55 = ptrtoint ptr %ractl.i120 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %1, ptr %ractl.i120, align 4
  %56 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %3, ptr %14, align 4
  %57 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %f_ra, ptr %15, align 4
  %index.i = getelementptr inbounds %struct.anon, ptr %48, i32 0, i32 3
  %58 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %index.i, align 4
  %60 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %16, align 4
  %61 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 0, ptr %17, align 4
  %62 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %18, align 4
  %63 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %ki_flags, align 8
  %and.i121 = and i32 %64, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i121)
  %tobool.not.i122 = icmp eq i32 %and.i121, 0
  br i1 %tobool.not.i122, label %filemap_readahead.exit.thread, label %err55.thread

filemap_readahead.exit.thread:                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i = sub i32 %conv4, %59
  call void @page_cache_async_ra(ptr noundef nonnull %ractl.i120, ptr noundef %48, i32 noundef %sub.i) #11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ractl.i120) #11
  br label %if.end38

err55.thread:                                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ractl.i120) #11
  br label %if.then58

if.end38:                                         ; preds = %filemap_readahead.exit.thread, %folio_test_readahead.exit.if.end38_crit_edge
  %65 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %49, align 4
  %and.i.i.i123 = and i32 %66, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i123)
  %tobool.not.i.i124 = icmp eq i32 %and.i.i.i123, 0
  br i1 %tobool.not.i.i124, label %folio_flags.exit.i, label %if.then.i.i125, !prof !299

if.then.i.i125:                                   ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %48, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %if.end38
  %67 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %48, align 4
  %69 = and i32 %68, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool.i126.not = icmp eq i32 %69, 0
  br i1 %tobool.i126.not, label %if.then40, label %folio_test_uptodate.exit.thread

folio_test_uptodate.exit.thread:                  ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  br label %cleanup

if.then40:                                        ; preds = %folio_flags.exit.i
  %70 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %ki_flags, align 8
  %and42 = and i32 %71, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42)
  %tobool43.not = icmp eq i32 %and42, 0
  br i1 %tobool43.not, label %if.then40.if.end49_crit_edge, label %land.lhs.true

if.then40.if.end49_crit_edge:                     ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end49

land.lhs.true:                                    ; preds = %if.then40
  %72 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %fbatch, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %73)
  %cmp45 = icmp ugt i8 %73, 1
  br i1 %cmp45, label %if.then47, label %land.lhs.true.if.end49_crit_edge

land.lhs.true.if.end49_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end49

if.then47:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  %or = or i32 %71, 8
  %74 = ptrtoint ptr %ki_flags to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %or, ptr %ki_flags, align 8
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %land.lhs.true.if.end49_crit_edge, %if.then40.if.end49_crit_edge
  %call50 = call fastcc i32 @filemap_update_page(ptr noundef %iocb, ptr noundef %3, ptr noundef %iter, ptr noundef %48)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %if.end49.cleanup_crit_edge, label %err55

if.end49.cleanup_crit_edge:                       ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

err55:                                            ; preds = %if.end49
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %cmp56 = icmp slt i32 %call50, 0
  br i1 %cmp56, label %err55.if.then58_crit_edge, label %err55.if.end59_crit_edge

err55.if.end59_crit_edge:                         ; preds = %err55
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end59

err55.if.then58_crit_edge:                        ; preds = %err55
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then58

if.then58:                                        ; preds = %err55.if.then58_crit_edge, %err55.thread
  %err.0136 = phi i32 [ -11, %err55.thread ], [ %call50, %err55.if.then58_crit_edge ]
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %48, i32 0, i32 3
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %75 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %cmp.i.i.i = icmp eq i32 %76, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %48, ptr noundef nonnull @.str.49) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %if.then58
  %call.i.i.i10.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %77 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %77, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@filemap_get_pages, %if.then.i.i.i.i)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %48, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i, label %folio_put_testzero.exit.i.if.end59_crit_edge

folio_put_testzero.exit.i.if.end59_crit_edge:     ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end59

if.then.i:                                        ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__put_page(ptr noundef %48) #11
  br label %if.end59

if.end59:                                         ; preds = %if.then.i, %folio_put_testzero.exit.i.if.end59_crit_edge, %err55.if.end59_crit_edge
  %err.0135 = phi i32 [ %call50, %err55.if.end59_crit_edge ], [ %err.0136, %folio_put_testzero.exit.i.if.end59_crit_edge ], [ %err.0136, %if.then.i ]
  %78 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %fbatch, align 4
  %dec = add i8 %79, -1
  store i8 %dec, ptr %fbatch, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %dec)
  %tobool60.not = icmp eq i8 %dec, 0
  br i1 %tobool60.not, label %if.end64, label %if.end59.cleanup_crit_edge, !prof !300

if.end59.cleanup_crit_edge:                       ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end64:                                         ; preds = %if.end59
  call void @__sanitizer_cov_trace_const_cmp4(i32 524289, i32 %err.0135)
  %cmp65 = icmp eq i32 %err.0135, 524289
  br i1 %cmp65, label %if.end64.retry.backedge_crit_edge, label %if.end64.cleanup_crit_edge

if.end64.cleanup_crit_edge:                       ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end64.retry.backedge_crit_edge:                ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge

cleanup:                                          ; preds = %if.end64.cleanup_crit_edge, %if.end59.cleanup_crit_edge, %if.end49.cleanup_crit_edge, %folio_test_uptodate.exit.thread, %if.end21.cleanup_crit_edge, %if.then16.cleanup_crit_edge, %if.then8.cleanup_crit_edge, %fatal_signal_pending.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %folio_test_uptodate.exit.thread ], [ %err.0135, %if.end64.cleanup_crit_edge ], [ 0, %if.end59.cleanup_crit_edge ], [ 0, %if.end49.cleanup_crit_edge ], [ %call25, %if.end21.cleanup_crit_edge ], [ -11, %if.then16.cleanup_crit_edge ], [ -11, %if.then8.cleanup_crit_edge ], [ -4, %fatal_signal_pending.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_dcache_folio(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_file_read_iter(ptr noundef %iocb, ptr noundef %iter) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %count.i = getelementptr inbounds %struct.iov_iter, ptr %iter, i32 0, i32 4
  %0 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup55_crit_edge, label %if.end

entry.cleanup55_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup55

if.end:                                           ; preds = %entry
  %ki_flags = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 4
  %2 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ki_flags, align 8
  %and = and i32 %3, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end.if.end53_crit_edge, label %if.then3

if.end.if.end53_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end53

if.then3:                                         ; preds = %if.end
  %4 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %iocb, align 8
  %f_mapping = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 18
  %6 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %f_mapping, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %and5 = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  %ki_pos12 = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %10 = ptrtoint ptr %ki_pos12 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ki_pos12, align 8
  %conv14 = zext i32 %1 to i64
  %add15 = add nsw i64 %conv14, -1
  %sub16 = add i64 %add15, %11
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.then3
  %nrpages.i = getelementptr inbounds %struct.address_space, ptr %7, i32 0, i32 7
  %12 = ptrtoint ptr %nrpages.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nrpages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i, label %if.then7.if.end21_crit_edge, label %if.end.i

if.then7.if.end21_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end21

if.end.i:                                         ; preds = %if.then7
  %xa_flags.i.i.i = getelementptr inbounds %struct.address_space, ptr %7, i32 0, i32 1, i32 1
  %14 = ptrtoint ptr %xa_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %xa_flags.i.i.i, align 4
  %16 = and i32 %15, 201326592
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %.not.i = icmp eq i32 %16, 0
  br i1 %.not.i, label %if.end.i.if.end21_crit_edge, label %filemap_range_needs_writeback.exit

if.end.i.if.end21_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end21

filemap_range_needs_writeback.exit:               ; preds = %if.end.i
  %call4.i = tail call zeroext i1 @filemap_range_has_writeback(ptr noundef %7, i64 noundef %11, i64 noundef %sub16) #11
  br i1 %call4.i, label %filemap_range_needs_writeback.exit.cleanup55_crit_edge, label %filemap_range_needs_writeback.exit.if.end21_crit_edge

filemap_range_needs_writeback.exit.if.end21_crit_edge: ; preds = %filemap_range_needs_writeback.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end21

filemap_range_needs_writeback.exit.cleanup55_crit_edge: ; preds = %filemap_range_needs_writeback.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup55

if.else:                                          ; preds = %if.then3
  %call17 = tail call i32 @filemap_write_and_wait_range(ptr noundef %7, i64 noundef %11, i64 noundef %sub16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %cmp = icmp slt i32 %call17, 0
  br i1 %cmp, label %if.else.cleanup55_crit_edge, label %if.else.if.end21_crit_edge

if.else.if.end21_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end21

if.else.cleanup55_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup55

if.end21:                                         ; preds = %if.else.if.end21_crit_edge, %filemap_range_needs_writeback.exit.if.end21_crit_edge, %if.end.i.if.end21_crit_edge, %if.then7.if.end21_crit_edge
  %f_flags.i = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 7
  %17 = ptrtoint ptr %f_flags.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %f_flags.i, align 4
  %and.i = and i32 %18, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i90 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i90, label %if.then.i, label %if.end21.file_accessed.exit_crit_edge

if.end21.file_accessed.exit_crit_edge:            ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #13
  br label %file_accessed.exit

if.then.i:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #13
  %f_path.i = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 1
  tail call void @touch_atime(ptr noundef %f_path.i) #11
  br label %file_accessed.exit

file_accessed.exit:                               ; preds = %if.then.i, %if.end21.file_accessed.exit_crit_edge
  %a_ops = getelementptr inbounds %struct.address_space, ptr %7, i32 0, i32 9
  %19 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %a_ops, align 4
  %direct_IO = getelementptr inbounds %struct.address_space_operations, ptr %20, i32 0, i32 12
  %21 = ptrtoint ptr %direct_IO to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %direct_IO, align 4
  %call22 = tail call i32 %22(ptr noundef %iocb, ptr noundef %iter) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call22)
  %cmp23 = icmp sgt i32 %call22, -1
  br i1 %cmp23, label %if.end30.thread, label %if.end30

if.end30.thread:                                  ; preds = %file_accessed.exit
  call void @__sanitizer_cov_trace_pc() #13
  %conv26105 = zext i32 %call22 to i64
  %ki_pos27 = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %23 = ptrtoint ptr %ki_pos27 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ki_pos27, align 8
  %add28 = add i64 %24, %conv26105
  store i64 %add28, ptr %ki_pos27, align 8
  %sub29 = sub i32 %1, %call22
  br label %if.end36

if.end30:                                         ; preds = %file_accessed.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 -529, i32 %call22)
  %cmp31.not = icmp eq i32 %call22, -529
  br i1 %cmp31.not, label %if.end30.cleanup55_crit_edge, label %if.end30.if.end36_crit_edge

if.end30.if.end36_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end36

if.end30.cleanup55_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup55

if.end36:                                         ; preds = %if.end30.if.end36_crit_edge, %if.end30.thread
  %count.096 = phi i32 [ %sub29, %if.end30.thread ], [ %1, %if.end30.if.end36_crit_edge ]
  %25 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %count.i, align 8
  %sub35 = sub i32 %count.096, %26
  tail call void @iov_iter_revert(ptr noundef %iter, i32 noundef %sub35) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %cmp37 = icmp slt i32 %call22, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.096)
  %tobool39.not = icmp eq i32 %count.096, 0
  %or.cond = select i1 %cmp37, i1 true, i1 %tobool39.not
  br i1 %or.cond, label %if.end36.cleanup55_crit_edge, label %cleanup

if.end36.cleanup55_crit_edge:                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup55

cleanup:                                          ; preds = %if.end36
  %ki_pos45 = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %27 = ptrtoint ptr %ki_pos45 to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %ki_pos45, align 8
  %call46 = tail call fastcc i64 @i_size_read(ptr noundef %9)
  call void @__sanitizer_cov_trace_cmp8(i64 %28, i64 %call46)
  %cmp47.not = icmp slt i64 %28, %call46
  br i1 %cmp47.not, label %cleanup.if.end53_crit_edge, label %cleanup.cleanup55_crit_edge

cleanup.cleanup55_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup55

cleanup.if.end53_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end53

if.end53:                                         ; preds = %cleanup.if.end53_crit_edge, %if.end.if.end53_crit_edge
  %retval1.1 = phi i32 [ %call22, %cleanup.if.end53_crit_edge ], [ 0, %if.end.if.end53_crit_edge ]
  %call54 = tail call i32 @filemap_read(ptr noundef %iocb, ptr noundef %iter, i32 noundef %retval1.1)
  br label %cleanup55

cleanup55:                                        ; preds = %if.end53, %cleanup.cleanup55_crit_edge, %if.end36.cleanup55_crit_edge, %if.end30.cleanup55_crit_edge, %if.else.cleanup55_crit_edge, %filemap_range_needs_writeback.exit.cleanup55_crit_edge, %entry.cleanup55_crit_edge
  %retval.1 = phi i32 [ %call54, %if.end53 ], [ %call22, %cleanup.cleanup55_crit_edge ], [ 0, %entry.cleanup55_crit_edge ], [ %call22, %if.end36.cleanup55_crit_edge ], [ %call17, %if.else.cleanup55_crit_edge ], [ -11, %filemap_range_needs_writeback.exit.cleanup55_crit_edge ], [ -529, %if.end30.cleanup55_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iov_iter_revert(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @mapping_seek_hole_data(ptr noundef %mapping, i64 noundef %start, i64 noundef %end, i32 noundef %whence) local_unnamed_addr #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %6 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %i_pages, ptr %xas, align 4
  %7 = lshr i64 %start, 12
  %conv = trunc i64 %7 to i32
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %conv, ptr %0, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %1, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %4, align 4
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %5, align 4
  %sub = add i64 %end, 17592186044415
  %13 = lshr i64 %sub, 12
  %conv2 = trunc i64 %13 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %whence)
  %cmp = icmp eq i32 %whence, 3
  call void @__sanitizer_cov_trace_cmp8(i64 %end, i64 %start)
  %cmp4.not = icmp sgt i64 %end, %start
  br i1 %cmp4.not, label %if.end, label %entry.cleanup51_crit_edge

entry.cleanup51_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup51

if.end:                                           ; preds = %entry
  %14 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %17, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %a_ops.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %conv22.i = zext i1 %cmp to i32
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %rcu_read_lock.exit
  %start.addr.0 = phi i64 [ %start, %rcu_read_lock.exit ], [ %retval.0.i104, %while.cond.backedge ]
  br label %retry.i

retry.i:                                          ; preds = %retry.i.backedge, %while.cond
  %call.i81 = call ptr @xas_find(ptr noundef nonnull %xas, i32 noundef %conv2) #11
  %magicptr.i = ptrtoint ptr %call.i81 to i32
  %18 = zext i32 %magicptr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.66)
  switch i32 %magicptr.i, label %lor.lhs.false.i [
    i32 1030, label %retry.i.retry.i.backedge_crit_edge
    i32 1026, label %retry.i.retry.backedge.sink.split.i_crit_edge
    i32 0, label %retry.i.find_get_entry.exit_crit_edge
  ]

retry.i.find_get_entry.exit_crit_edge:            ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %find_get_entry.exit

retry.i.retry.backedge.sink.split.i_crit_edge:    ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split.i

retry.i.retry.i.backedge_crit_edge:               ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.i.backedge

lor.lhs.false.i:                                  ; preds = %retry.i
  %and.i.i = and i32 %magicptr.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end7.i, label %lor.lhs.false.i.find_get_entry.exit_crit_edge

lor.lhs.false.i.find_get_entry.exit_crit_edge:    ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %find_get_entry.exit

if.end7.i:                                        ; preds = %lor.lhs.false.i
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %call.i81, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !367
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #11
  %19 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #11, !srcloc !368
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i.i, label %if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i.i

if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge: ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i.i.i.i

do.end11.i.i.i.i.i.i.i.i:                         ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !369
  br label %atomic_add_unless.exit.i.i.i.i.i

atomic_add_unless.exit.i.i.i.i.i:                 ; preds = %do.end11.i.i.i.i.i.i.i.i, %if.end7.i.atomic_add_unless.exit.i.i.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@mapping_seek_hole_data, %if.then.i.i.i.i.i)) #11
          to label %folio_try_get_rcu.exit.i [label %if.then.i.i.i.i.i], !srcloc !306

if.then.i.i.i.i.i:                                ; preds = %atomic_add_unless.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_unless(ptr noundef nonnull %call.i81, i32 noundef 1, i32 noundef %conv.i.i.i.i.i) #11
  br label %folio_try_get_rcu.exit.i

folio_try_get_rcu.exit.i:                         ; preds = %if.then.i.i.i.i.i, %atomic_add_unless.exit.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.end10.i, label %folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge

folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge: ; preds = %folio_try_get_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry.backedge.sink.split.i

if.end10.i:                                       ; preds = %folio_try_get_rcu.exit.i
  %20 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %3, align 4
  %tobool.not.i137 = icmp eq ptr %21, null
  br i1 %tobool.not.i137, label %if.then.i140, label %if.end.i143

if.then.i140:                                     ; preds = %if.end10.i
  %22 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %xas, align 4
  %xa_head.i.i = getelementptr inbounds %struct.xarray, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %xa_head.i.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.anon.4, ptr %23, i32 0, i32 1
  %call.i.i.i138 = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i138)
  %tobool.not.i.i139 = icmp eq i32 %call.i.i.i138, 0
  br i1 %tobool.not.i.i139, label %lor.lhs.false.i.i, label %if.then.i140.xas_reload.exit_crit_edge

if.then.i140.xas_reload.exit_crit_edge:           ; preds = %if.then.i140
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i.i:                                ; preds = %if.then.i140
  %call2.i.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i141, label %lor.lhs.false.i.i.xas_reload.exit_crit_edge

lor.lhs.false.i.i.xas_reload.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i.i141:                             ; preds = %lor.lhs.false.i.i
  %call4.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i141.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i

land.lhs.true.i.i141.xas_reload.exit_crit_edge:   ; preds = %land.lhs.true.i.i141
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true6.i.i:                               ; preds = %land.lhs.true.i.i141
  %.b12.i.i = load i1, ptr @xa_head.__warned, align 1
  br i1 %.b12.i.i, label %land.lhs.true6.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true6.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

if.end.i143:                                      ; preds = %if.end10.i
  %26 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %2, align 2
  %28 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %xas, align 4
  %conv.i142 = zext i8 %27 to i32
  %arrayidx.i.i = getelementptr %struct.xa_node, ptr %21, i32 0, i32 7, i32 %conv.i142
  %30 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %dep_map.i10.i = getelementptr inbounds %struct.anon.4, ptr %29, i32 0, i32 1
  %call.i.i11.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i10.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11.i)
  %tobool.not.i12.i = icmp eq i32 %call.i.i11.i, 0
  br i1 %tobool.not.i12.i, label %lor.lhs.false.i15.i, label %if.end.i143.xas_reload.exit_crit_edge

if.end.i143.xas_reload.exit_crit_edge:            ; preds = %if.end.i143
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i15.i:                              ; preds = %if.end.i143
  %call4.i13.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i13.i)
  %tobool5.not.i14.i = icmp eq i32 %call4.i13.i, 0
  br i1 %tobool5.not.i14.i, label %land.lhs.true.i16.i, label %lor.lhs.false.i15.i.xas_reload.exit_crit_edge

lor.lhs.false.i15.i.xas_reload.exit_crit_edge:    ; preds = %lor.lhs.false.i15.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i16.i:                              ; preds = %lor.lhs.false.i15.i
  %call6.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i16.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i16.i.xas_reload.exit_crit_edge:    ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i16.i
  %.b13.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i, label %land.lhs.true8.i.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true8.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

cleanup.sink.split.i:                             ; preds = %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge
  %xa_entry.__warned.sink.i = phi ptr [ @xa_head.__warned, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ @xa_entry.__warned, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 1167, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ 1183, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi ptr [ %25, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ %31, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %32 = ptrtoint ptr %xa_entry.__warned.sink.i to i32
  call void @__asan_store1_noabort(i32 %32)
  store i1 true, ptr %xa_entry.__warned.sink.i, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef %.sink.i, ptr noundef nonnull @.str.35) #11
  br label %xas_reload.exit

xas_reload.exit:                                  ; preds = %cleanup.sink.split.i, %land.lhs.true8.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i16.i.xas_reload.exit_crit_edge, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge, %if.end.i143.xas_reload.exit_crit_edge, %land.lhs.true6.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i.i141.xas_reload.exit_crit_edge, %lor.lhs.false.i.i.xas_reload.exit_crit_edge, %if.then.i140.xas_reload.exit_crit_edge
  %retval.0.i144 = phi ptr [ %25, %if.then.i140.xas_reload.exit_crit_edge ], [ %25, %lor.lhs.false.i.i.xas_reload.exit_crit_edge ], [ %25, %land.lhs.true.i.i141.xas_reload.exit_crit_edge ], [ %25, %land.lhs.true6.i.i.xas_reload.exit_crit_edge ], [ %31, %if.end.i143.xas_reload.exit_crit_edge ], [ %31, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge ], [ %31, %land.lhs.true.i16.i.xas_reload.exit_crit_edge ], [ %31, %land.lhs.true8.i.i.xas_reload.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp12.not.i = icmp eq ptr %call.i81, %retval.0.i144
  br i1 %cmp12.not.i, label %xas_reload.exit.find_get_entry.exit_crit_edge, label %if.then15.i, !prof !299

xas_reload.exit.find_get_entry.exit_crit_edge:    ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %find_get_entry.exit

if.then15.i:                                      ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @folio_put(ptr noundef nonnull %call.i81) #11
  br label %retry.backedge.sink.split.i

retry.backedge.sink.split.i:                      ; preds = %if.then15.i, %folio_try_get_rcu.exit.i.retry.backedge.sink.split.i_crit_edge, %retry.i.retry.backedge.sink.split.i_crit_edge
  %33 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  br label %retry.i.backedge

retry.i.backedge:                                 ; preds = %retry.backedge.sink.split.i, %retry.i.retry.i.backedge_crit_edge
  br label %retry.i

find_get_entry.exit:                              ; preds = %xas_reload.exit.find_get_entry.exit_crit_edge, %lor.lhs.false.i.find_get_entry.exit_crit_edge, %retry.i.find_get_entry.exit_crit_edge
  %magicptr.i.le = ptrtoint ptr %call.i81 to i32
  %tobool.not = icmp eq ptr %call.i81, null
  br i1 %tobool.not, label %find_get_entry.exit.while.end_crit_edge, label %while.body

find_get_entry.exit.while.end_crit_edge:          ; preds = %find_get_entry.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

while.body:                                       ; preds = %find_get_entry.exit
  %34 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %0, align 4
  %conv7 = zext i32 %35 to i64
  %shl = shl nuw nsw i64 %conv7, 12
  call void @__sanitizer_cov_trace_cmp8(i64 %start.addr.0, i64 %shl)
  %cmp8 = icmp sge i64 %start.addr.0, %shl
  %brmerge = or i1 %cmp, %cmp8
  %36 = call i64 @llvm.smax.i64(i64 %start.addr.0, i64 %shl)
  br i1 %brmerge, label %if.end14, label %while.body.unlock_crit_edge

while.body.unlock_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

if.end14:                                         ; preds = %while.body
  %and.i.i83 = and i32 %magicptr.i.le, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i83)
  %tobool.i.not.i84 = icmp eq i32 %and.i.i83, 0
  br i1 %tobool.i.not.i84, label %if.end.i, label %if.end14.seek_folio_size.exit_crit_edge

if.end14.seek_folio_size.exit_crit_edge:          ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #13
  br label %seek_folio_size.exit

if.end.i:                                         ; preds = %if.end14
  %37 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %call.i81, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %38)
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %38, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i85, label %PageHead.exit.i.i.i.i, !prof !300

if.then.i.i.i.i.i85:                              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i81, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %if.end.i
  %39 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %call.i81, align 4
  %41 = and i32 %40, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.i.i.i.i = icmp eq i32 %41, 0
  br i1 %tobool.not.i.i.i.i, label %PageHead.exit.i.i.i.i.folio_size.exit.i_crit_edge, label %if.end.i.i.i.i

PageHead.exit.i.i.i.i.folio_size.exit.i_crit_edge: ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_size.exit.i

if.end.i.i.i.i:                                   ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %42 = getelementptr %struct.page, ptr %call.i81, i32 1, i32 1
  %compound_order.i.i.i.i = getelementptr inbounds %struct.anon.9, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %compound_order.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %compound_order.i.i.i.i, align 1
  %conv.i.i.i.i = zext i8 %44 to i32
  br label %folio_size.exit.i

folio_size.exit.i:                                ; preds = %if.end.i.i.i.i, %PageHead.exit.i.i.i.i.folio_size.exit.i_crit_edge
  %retval.0.i.i.i.i = phi i32 [ %conv.i.i.i.i, %if.end.i.i.i.i ], [ 0, %PageHead.exit.i.i.i.i.folio_size.exit.i_crit_edge ]
  %shl.i.i = shl i32 4096, %retval.0.i.i.i.i
  br label %seek_folio_size.exit

seek_folio_size.exit:                             ; preds = %folio_size.exit.i, %if.end14.seek_folio_size.exit_crit_edge
  %retval.0.i = phi i32 [ %shl.i.i, %folio_size.exit.i ], [ 4096, %if.end14.seek_folio_size.exit_crit_edge ]
  %sub17 = add i32 %retval.0.i, -1
  %conv18 = zext i32 %sub17 to i64
  %or = or i64 %shl, %conv18
  %add19 = add nuw nsw i64 %or, 1
  %45 = ptrtoint ptr %a_ops.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %a_ops.i, align 4
  %47 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %mapping, align 4
  %i_blkbits.i.i = getelementptr inbounds %struct.inode, ptr %48, i32 0, i32 20
  %49 = ptrtoint ptr %i_blkbits.i.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %i_blkbits.i.i, align 2
  %conv.i.i = zext i8 %50 to i32
  %shl.i.i86 = shl nuw i32 1, %conv.i.i
  br i1 %tobool.i.not.i84, label %lor.lhs.false.i89, label %seek_folio_size.exit.if.then.i90_crit_edge

seek_folio_size.exit.if.then.i90_crit_edge:       ; preds = %seek_folio_size.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i90

lor.lhs.false.i89:                                ; preds = %seek_folio_size.exit
  %51 = getelementptr inbounds %struct.page, ptr %call.i81, i32 0, i32 1
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  %and.i.i.i.i = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i89
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i81, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i.i:                             ; preds = %lor.lhs.false.i89
  %54 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %call.i81, align 4
  %56 = and i32 %55, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.i61.not.i = icmp eq i32 %56, 0
  br i1 %tobool.i61.not.i, label %if.end.i91, label %folio_test_uptodate.exit.thread.i

folio_test_uptodate.exit.thread.i:                ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  br label %if.then.i90

if.then.i90:                                      ; preds = %folio_test_uptodate.exit.thread.i, %seek_folio_size.exit.if.then.i90_crit_edge
  %start.end.i = select i1 %cmp, i64 %36, i64 %add19
  br label %folio_seek_hole_data.exit

if.end.i91:                                       ; preds = %folio_flags.exit.i.i
  %is_partially_uptodate.i = getelementptr inbounds %struct.address_space_operations, ptr %46, i32 0, i32 17
  %57 = ptrtoint ptr %is_partially_uptodate.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %is_partially_uptodate.i, align 4
  %tobool3.not.i = icmp eq ptr %58, null
  br i1 %tobool3.not.i, label %if.then4.i, label %if.end10.i92

if.then4.i:                                       ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #13
  %end.start.i = select i1 %cmp, i64 %add19, i64 %36
  br label %folio_seek_hole_data.exit

if.end10.i92:                                     ; preds = %if.end.i91
  call void @xas_pause(ptr noundef nonnull %xas) #11
  %call.i62.i = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i62.i, label %if.end10.i92.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i65.i

if.end10.i92.rcu_read_unlock.exit.i_crit_edge:    ; preds = %if.end10.i92
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit.i

land.lhs.true.i65.i:                              ; preds = %if.end10.i92
  %call1.i63.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i63.i)
  %tobool.not.i64.i = icmp eq i32 %call1.i63.i, 0
  br i1 %tobool.not.i64.i, label %land.lhs.true.i65.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i67.i

land.lhs.true.i65.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i65.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i67.i:                             ; preds = %land.lhs.true.i65.i
  %.b4.i66.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i66.i, label %land.lhs.true2.i67.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i68.i

land.lhs.true2.i67.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i67.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit.i

if.then.i68.i:                                    ; preds = %land.lhs.true2.i67.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i68.i, %land.lhs.true2.i67.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i65.i.rcu_read_unlock.exit.i_crit_edge, %if.end10.i92.rcu_read_unlock.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %59 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i69.i = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i.i.i.i69.i to ptr
  %preempt_count.i.i.i.i70.i = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %preempt_count.i.i.i.i70.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %preempt_count.i.i.i.i70.i, align 4
  %sub.i.i.i.i = add i32 %62, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i70.i, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  call void @__might_sleep(ptr noundef nonnull @.str.38, i32 noundef 777) #11
  %63 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %51, align 4
  %and.i.i.i.i.i93 = and i32 %64, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i93)
  %tobool.not.i.i.i.i94 = icmp eq i32 %and.i.i.i.i.i93, 0
  br i1 %tobool.not.i.i.i.i94, label %folio_flags.exit.i.i.i, label %if.then.i.i.i.i, !prof !299

if.then.i.i.i.i:                                  ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i81, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i.i.i:                           ; preds = %rcu_read_unlock.exit.i
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i81, i32 noundef 4) #11
  %65 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %call.i81, align 4
  %and.i.i4.i.i.i = and i32 %66, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i4.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_trylock.exit.i.i, label %folio_flags.exit.i.i.i.if.then.i72.i_crit_edge

folio_flags.exit.i.i.i.if.then.i72.i_crit_edge:   ; preds = %folio_flags.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i72.i

folio_trylock.exit.i.i:                           ; preds = %folio_flags.exit.i.i.i
  call void @llvm.prefetch.p0(ptr nonnull %call.i81, i32 1, i32 3, i32 1) #11
  %67 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %call.i81, ptr nonnull %call.i81, i32 1, ptr nonnull elementtype(i32) %call.i81) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i.i.i95 = extractvalue { i32, i32, i32 } %67, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i.i95, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %phi.cmp.i.i.i.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i.i, label %folio_trylock.exit.i.i.folio_lock.exit.i_crit_edge, label %folio_trylock.exit.i.i.if.then.i72.i_crit_edge

folio_trylock.exit.i.i.if.then.i72.i_crit_edge:   ; preds = %folio_trylock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i72.i

folio_trylock.exit.i.i.folio_lock.exit.i_crit_edge: ; preds = %folio_trylock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_lock.exit.i

if.then.i72.i:                                    ; preds = %folio_trylock.exit.i.i.if.then.i72.i_crit_edge, %folio_flags.exit.i.i.i.if.then.i72.i_crit_edge
  %call.i.i.i = call fastcc i32 @folio_wait_bit_common(ptr noundef nonnull %call.i81, i32 noundef 0, i32 noundef 2, i32 noundef 0) #11
  br label %folio_lock.exit.i

folio_lock.exit.i:                                ; preds = %if.then.i72.i, %folio_trylock.exit.i.i.folio_lock.exit.i_crit_edge
  %mapping11.i = getelementptr inbounds %struct.anon, ptr %call.i81, i32 0, i32 2
  %68 = ptrtoint ptr %mapping11.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %mapping11.i, align 4
  %cmp.not.i = icmp eq ptr %69, %mapping
  br i1 %cmp.not.i, label %if.end15.i, label %folio_lock.exit.i.unlock.i_crit_edge, !prof !299

folio_lock.exit.i.unlock.i_crit_edge:             ; preds = %folio_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock.i

if.end15.i:                                       ; preds = %folio_lock.exit.i
  %conv.i = trunc i64 %36 to i32
  %70 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %call.i81, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %71)
  %cmp.i.not.i.i.i.i.i96 = icmp eq i32 %71, -1
  br i1 %cmp.i.not.i.i.i.i.i96, label %if.then.i.i.i.i.i97, label %PageHead.exit.i.i.i.i98, !prof !300

if.then.i.i.i.i.i97:                              ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i81, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i.i98:                          ; preds = %if.end15.i
  %72 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %call.i81, align 4
  %74 = and i32 %73, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool.not.i.i.i73.i = icmp eq i32 %74, 0
  br i1 %tobool.not.i.i.i73.i, label %PageHead.exit.i.i.i.i98.folio_size.exit.i103_crit_edge, label %if.end.i.i.i.i101

PageHead.exit.i.i.i.i98.folio_size.exit.i103_crit_edge: ; preds = %PageHead.exit.i.i.i.i98
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_size.exit.i103

if.end.i.i.i.i101:                                ; preds = %PageHead.exit.i.i.i.i98
  call void @__sanitizer_cov_trace_pc() #13
  %75 = getelementptr %struct.page, ptr %call.i81, i32 1, i32 1
  %compound_order.i.i.i.i99 = getelementptr inbounds %struct.anon.9, ptr %75, i32 0, i32 2
  %76 = ptrtoint ptr %compound_order.i.i.i.i99 to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %compound_order.i.i.i.i99, align 1
  %conv.i.i.i.i100 = zext i8 %77 to i32
  br label %folio_size.exit.i103

folio_size.exit.i103:                             ; preds = %if.end.i.i.i.i101, %PageHead.exit.i.i.i.i98.folio_size.exit.i103_crit_edge
  %retval.0.i.i.i.i102 = phi i32 [ %conv.i.i.i.i100, %if.end.i.i.i.i101 ], [ 0, %PageHead.exit.i.i.i.i98.folio_size.exit.i103_crit_edge ]
  %shl.i74.i = shl i32 4096, %retval.0.i.i.i.i102
  %sub.i = add i32 %shl.i74.i, -1
  %neg.i = sub i32 0, %shl.i.i86
  %and.i = and i32 %neg.i, %conv.i
  %and18.i = and i32 %and.i, %sub.i
  %conv27.i = zext i32 %shl.i.i86 to i64
  %conv30.i = zext i32 %neg.i to i64
  %78 = getelementptr %struct.page, ptr %call.i81, i32 1, i32 1
  %compound_order.i.i.i79.i = getelementptr inbounds %struct.anon.9, ptr %78, i32 0, i32 2
  br label %do.body.i

do.body.i:                                        ; preds = %folio_size.exit84.i.do.body.i_crit_edge, %folio_size.exit.i103
  %start.addr.0.i = phi i64 [ %36, %folio_size.exit.i103 ], [ %and31.i, %folio_size.exit84.i.do.body.i_crit_edge ]
  %offset.0.i = phi i32 [ %and18.i, %folio_size.exit.i103 ], [ %add32.i, %folio_size.exit84.i.do.body.i_crit_edge ]
  %79 = ptrtoint ptr %is_partially_uptodate.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %is_partially_uptodate.i, align 4
  %call20.i = call i32 %80(ptr noundef nonnull %call.i81, i32 noundef %offset.0.i, i32 noundef %shl.i.i86) #11
  call void @__sanitizer_cov_trace_cmp4(i32 %call20.i, i32 %conv22.i)
  %cmp23.i = icmp eq i32 %call20.i, %conv22.i
  br i1 %cmp23.i, label %do.body.i.unlock.i_crit_edge, label %if.end26.i

do.body.i.unlock.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock.i

if.end26.i:                                       ; preds = %do.body.i
  %add.i = add i64 %start.addr.0.i, %conv27.i
  %and31.i = and i64 %add.i, %conv30.i
  %add32.i = add i32 %offset.0.i, %shl.i.i86
  %81 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile i32, ptr %call.i81, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %82)
  %cmp.i.not.i.i.i.i75.i = icmp eq i32 %82, -1
  br i1 %cmp.i.not.i.i.i.i75.i, label %if.then.i.i.i.i76.i, label %PageHead.exit.i.i.i78.i, !prof !300

if.then.i.i.i.i76.i:                              ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i81, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i78.i:                          ; preds = %if.end26.i
  %83 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %call.i81, align 4
  %85 = and i32 %84, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool.not.i.i.i77.i = icmp eq i32 %85, 0
  br i1 %tobool.not.i.i.i77.i, label %PageHead.exit.i.i.i78.i.folio_size.exit84.i_crit_edge, label %if.end.i.i.i81.i

PageHead.exit.i.i.i78.i.folio_size.exit84.i_crit_edge: ; preds = %PageHead.exit.i.i.i78.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_size.exit84.i

if.end.i.i.i81.i:                                 ; preds = %PageHead.exit.i.i.i78.i
  call void @__sanitizer_cov_trace_pc() #13
  %86 = ptrtoint ptr %compound_order.i.i.i79.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %compound_order.i.i.i79.i, align 1
  %conv.i.i.i80.i = zext i8 %87 to i32
  br label %folio_size.exit84.i

folio_size.exit84.i:                              ; preds = %if.end.i.i.i81.i, %PageHead.exit.i.i.i78.i.folio_size.exit84.i_crit_edge
  %retval.0.i.i.i82.i = phi i32 [ %conv.i.i.i80.i, %if.end.i.i.i81.i ], [ 0, %PageHead.exit.i.i.i78.i.folio_size.exit84.i_crit_edge ]
  %shl.i83.i = shl i32 4096, %retval.0.i.i.i82.i
  %cmp34.i = icmp ult i32 %add32.i, %shl.i83.i
  br i1 %cmp34.i, label %folio_size.exit84.i.do.body.i_crit_edge, label %folio_size.exit84.i.unlock.i_crit_edge

folio_size.exit84.i.unlock.i_crit_edge:           ; preds = %folio_size.exit84.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock.i

folio_size.exit84.i.do.body.i_crit_edge:          ; preds = %folio_size.exit84.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body.i

unlock.i:                                         ; preds = %folio_size.exit84.i.unlock.i_crit_edge, %do.body.i.unlock.i_crit_edge, %folio_lock.exit.i.unlock.i_crit_edge
  %start.addr.1.i = phi i64 [ %36, %folio_lock.exit.i.unlock.i_crit_edge ], [ %start.addr.0.i, %do.body.i.unlock.i_crit_edge ], [ %and31.i, %folio_size.exit84.i.unlock.i_crit_edge ]
  call void @folio_unlock(ptr noundef nonnull %call.i81) #11
  %88 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i.i = and i32 %88, -16384
  %89 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %89, i32 0, i32 1
  %90 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %91, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i.i = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i.i, label %unlock.i.folio_seek_hole_data.exit_crit_edge, label %land.lhs.true.i.i

unlock.i.folio_seek_hole_data.exit_crit_edge:     ; preds = %unlock.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_seek_hole_data.exit

land.lhs.true.i.i:                                ; preds = %unlock.i
  %call1.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.folio_seek_hole_data.exit_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.folio_seek_hole_data.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_seek_hole_data.exit

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.folio_seek_hole_data.exit_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.folio_seek_hole_data.exit_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_seek_hole_data.exit

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %folio_seek_hole_data.exit

folio_seek_hole_data.exit:                        ; preds = %if.then.i.i, %land.lhs.true2.i.i.folio_seek_hole_data.exit_crit_edge, %land.lhs.true.i.i.folio_seek_hole_data.exit_crit_edge, %unlock.i.folio_seek_hole_data.exit_crit_edge, %if.then4.i, %if.then.i90
  %retval.0.i104 = phi i64 [ %start.end.i, %if.then.i90 ], [ %end.start.i, %if.then4.i ], [ %start.addr.1.i, %unlock.i.folio_seek_hole_data.exit_crit_edge ], [ %start.addr.1.i, %land.lhs.true.i.i.folio_seek_hole_data.exit_crit_edge ], [ %start.addr.1.i, %land.lhs.true2.i.i.folio_seek_hole_data.exit_crit_edge ], [ %start.addr.1.i, %if.then.i.i ]
  call void @__sanitizer_cov_trace_cmp8(i64 %retval.0.i104, i64 %or)
  %cmp22.not = icmp sgt i64 %retval.0.i104, %or
  br i1 %cmp22.not, label %if.end25, label %folio_seek_hole_data.exit.unlock_crit_edge

folio_seek_hole_data.exit.unlock_crit_edge:       ; preds = %folio_seek_hole_data.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

if.end25:                                         ; preds = %folio_seek_hole_data.exit
  call void @__sanitizer_cov_trace_cmp8(i64 %retval.0.i104, i64 %end)
  %cmp26.not = icmp slt i64 %retval.0.i104, %end
  br i1 %cmp26.not, label %if.end29, label %if.end25.while.end_crit_edge

if.end25.while.end_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.end

if.end29:                                         ; preds = %if.end25
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %retval.0.i)
  %cmp30 = icmp ugt i32 %retval.0.i, 4096
  br i1 %cmp30, label %if.then32, label %if.end29.if.end35_crit_edge

if.end29.if.end35_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end35

if.then32:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #13
  %92 = lshr exact i64 %add19, 12
  %conv34 = trunc i64 %92 to i32
  %93 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %conv34, ptr %0, align 4
  %94 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then32, %if.end29.if.end35_crit_edge
  br i1 %tobool.i.not.i84, label %if.then37, label %if.end35.while.cond.backedge_crit_edge

if.end35.while.cond.backedge_crit_edge:           ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.backedge

if.then37:                                        ; preds = %if.end35
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %call.i81, i32 0, i32 3
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %95 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %cmp.i.i.i = icmp eq i32 %96, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i106, label %do.end5.i.i.i, !prof !300

if.then.i.i.i106:                                 ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i81, ptr noundef nonnull @.str.49) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %if.then37
  %call.i.i.i10.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %97 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %97, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@mapping_seek_hole_data, %if.then.i.i.i.i108)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i108], !srcloc !306

if.then.i.i.i.i108:                               ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i107 = zext i1 %cmp.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef nonnull %call.i81, i32 noundef -1, i32 noundef %conv.i.i.i.i107) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i108, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i109, label %folio_put_testzero.exit.i.while.cond.backedge_crit_edge

folio_put_testzero.exit.i.while.cond.backedge_crit_edge: ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %while.cond.backedge

if.then.i109:                                     ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__put_page(ptr noundef nonnull %call.i81) #11
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then.i109, %folio_put_testzero.exit.i.while.cond.backedge_crit_edge, %if.end35.while.cond.backedge_crit_edge
  br label %while.cond

while.end:                                        ; preds = %if.end25.while.end_crit_edge, %find_get_entry.exit.while.end_crit_edge
  %start.addr.3 = phi i64 [ %start.addr.0, %find_get_entry.exit.while.end_crit_edge ], [ %retval.0.i104, %if.end25.while.end_crit_edge ]
  %spec.select = select i1 %cmp, i64 -6, i64 %start.addr.3
  br label %unlock

unlock:                                           ; preds = %while.end, %folio_seek_hole_data.exit.unlock_crit_edge, %while.body.unlock_crit_edge
  %tobool.not194 = phi i1 [ %tobool.not, %while.end ], [ false, %folio_seek_hole_data.exit.unlock_crit_edge ], [ false, %while.body.unlock_crit_edge ]
  %start.addr.4 = phi i64 [ %spec.select, %while.end ], [ %start.addr.0, %while.body.unlock_crit_edge ], [ %retval.0.i104, %folio_seek_hole_data.exit.unlock_crit_edge ]
  %magicptr.i.le.le = ptrtoint ptr %call.i81 to i32
  %call.i111 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i111, label %unlock.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i114

unlock.rcu_read_unlock.exit_crit_edge:            ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i114:                               ; preds = %unlock
  %call1.i112 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i112)
  %tobool.not.i113 = icmp eq i32 %call1.i112, 0
  br i1 %tobool.not.i113, label %land.lhs.true.i114.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i116

land.lhs.true.i114.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i114
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i116:                              ; preds = %land.lhs.true.i114
  %.b4.i115 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i115, label %land.lhs.true2.i116.rcu_read_unlock.exit_crit_edge, label %if.then.i117

land.lhs.true2.i116.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i116
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i117:                                     ; preds = %land.lhs.true2.i116
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i117, %land.lhs.true2.i116.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i114.rcu_read_unlock.exit_crit_edge, %unlock.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %98 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i118 = and i32 %98, -16384
  %99 = inttoptr i32 %and.i.i.i.i.i118 to ptr
  %preempt_count.i.i.i.i119 = getelementptr inbounds %struct.thread_info, ptr %99, i32 0, i32 1
  %100 = ptrtoint ptr %preempt_count.i.i.i.i119 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile i32, ptr %preempt_count.i.i.i.i119, align 4
  %sub.i.i.i = add i32 %101, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i119, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  %and.i120 = and i32 %magicptr.i.le.le, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i120)
  %tobool.i121 = icmp ne i32 %and.i120, 0
  %or.cond = select i1 %tobool.not194, i1 true, i1 %tobool.i121
  br i1 %or.cond, label %rcu_read_unlock.exit.if.end46_crit_edge, label %if.then45

rcu_read_unlock.exit.if.end46_crit_edge:          ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end46

if.then45:                                        ; preds = %rcu_read_unlock.exit
  %_refcount.i.i.i.i122 = getelementptr inbounds %struct.page, ptr %call.i81, i32 0, i32 3
  %call.i.i.i.i.i.i123 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i122, i32 noundef 4) #11
  %102 = ptrtoint ptr %_refcount.i.i.i.i122 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load volatile i32, ptr %_refcount.i.i.i.i122, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %103)
  %cmp.i.i.i124 = icmp eq i32 %103, 0
  br i1 %cmp.i.i.i124, label %if.then.i.i.i125, label %do.end5.i.i.i129, !prof !300

if.then.i.i.i125:                                 ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %call.i81, ptr noundef nonnull @.str.49) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i129:                                 ; preds = %if.then45
  %call.i.i.i10.i.i.i126 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i122, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i122, i32 1, i32 3, i32 1) #11
  %104 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i122, ptr %_refcount.i.i.i.i122, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i122) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i127 = extractvalue { i32, i32 } %104, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i127)
  %cmp.i.i.i.i.i.i128 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i127, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@mapping_seek_hole_data, %if.then.i.i.i.i131)) #11
          to label %folio_put_testzero.exit.i132 [label %if.then.i.i.i.i131], !srcloc !306

if.then.i.i.i.i131:                               ; preds = %do.end5.i.i.i129
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i130 = zext i1 %cmp.i.i.i.i.i.i128 to i32
  call void @__page_ref_mod_and_test(ptr noundef nonnull %call.i81, i32 noundef -1, i32 noundef %conv.i.i.i.i130) #11
  br label %folio_put_testzero.exit.i132

folio_put_testzero.exit.i132:                     ; preds = %if.then.i.i.i.i131, %do.end5.i.i.i129
  br i1 %cmp.i.i.i.i.i.i128, label %if.then.i133, label %folio_put_testzero.exit.i132.if.end46_crit_edge

folio_put_testzero.exit.i132.if.end46_crit_edge:  ; preds = %folio_put_testzero.exit.i132
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end46

if.then.i133:                                     ; preds = %folio_put_testzero.exit.i132
  call void @__sanitizer_cov_trace_pc() #13
  call void @__put_page(ptr noundef nonnull %call.i81) #11
  br label %if.end46

if.end46:                                         ; preds = %if.then.i133, %folio_put_testzero.exit.i132.if.end46_crit_edge, %rcu_read_unlock.exit.if.end46_crit_edge
  %105 = call i64 @llvm.smin.i64(i64 %start.addr.4, i64 %end)
  br label %cleanup51

cleanup51:                                        ; preds = %if.end46, %entry.cleanup51_crit_edge
  %retval.0 = phi i64 [ -6, %entry.cleanup51_crit_edge ], [ %105, %if.end46 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i64 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_fault(ptr nocapture noundef %vmf) #0 align 64 {
entry:
  %fpin = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_file, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fpin) #11
  %4 = ptrtoint ptr %fpin to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %fpin, align 4
  %f_mapping = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 18
  %5 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %f_mapping, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %pgoff = getelementptr inbounds %struct.anon.16, ptr %vmf, i32 0, i32 2
  %9 = ptrtoint ptr %pgoff to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pgoff, align 4
  %call = tail call fastcc i64 @i_size_read(ptr noundef %8)
  %sub = add i64 %call, 4095
  %div = sdiv i64 %sub, 4096
  %conv = trunc i64 %div to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %conv)
  %cmp.not = icmp ult i32 %10, %conv
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge, !prof !299

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call ptr @__filemap_get_folio(ptr noundef %6, i32 noundef %10, i32 noundef 0, i32 noundef 0) #11
  %tobool4.not = icmp eq ptr %call.i, null
  br i1 %tobool4.not, label %if.else, label %if.then11, !prof !300

if.then11:                                        ; preds = %if.end
  %flags = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags, align 4
  %and = and i32 %12, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool12.not = icmp eq i32 %and, 0
  br i1 %tobool12.not, label %if.then13, label %if.then11.if.end15_crit_edge

if.then11.if.end15_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end15

if.then13:                                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #13
  %call14 = tail call fastcc ptr @do_async_mmap_readahead(ptr noundef %vmf, ptr noundef nonnull %call.i)
  %13 = ptrtoint ptr %fpin to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call14, ptr %fpin, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.then11.if.end15_crit_edge
  %14 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and.i.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_flags.exit.i, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %if.end15
  %17 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %call.i, align 4
  %19 = and i32 %18, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.i.not = icmp eq i32 %19, 0
  br i1 %tobool.i.not, label %if.then25, label %folio_test_uptodate.exit.thread

folio_test_uptodate.exit.thread:                  ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  br label %if.end39

if.then25:                                        ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock.i = getelementptr inbounds %struct.address_space, ptr %6, i32 0, i32 2
  tail call void @down_read(ptr noundef %invalidate_lock.i) #11
  br label %if.end39

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  tail call fastcc void @count_vm_event()
  %20 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vmf, align 4
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %21, i32 0, i32 6
  %22 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vm_mm, align 4
  tail call fastcc void @count_memcg_event_mm(ptr noundef %23)
  %call28 = tail call fastcc ptr @do_sync_mmap_readahead(ptr noundef %vmf)
  %24 = ptrtoint ptr %fpin to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %call28, ptr %fpin, align 4
  br label %retry_find

retry_find:                                       ; preds = %if.end112.retry_find_crit_edge, %if.end112.retry_find_crit_edge237, %if.then83, %if.then53, %if.else
  %ret.0 = phi i32 [ %ret.1, %if.then53 ], [ %ret.1, %if.end112.retry_find_crit_edge ], [ %ret.1, %if.then83 ], [ 4, %if.else ], [ %ret.1, %if.end112.retry_find_crit_edge237 ]
  %mapping_locked.1.off0 = phi i1 [ %mapping_locked.3.off0, %if.then53 ], [ true, %if.end112.retry_find_crit_edge ], [ false, %if.then83 ], [ false, %if.else ], [ true, %if.end112.retry_find_crit_edge237 ]
  br i1 %mapping_locked.1.off0, label %retry_find.if.end31_crit_edge, label %if.then30

retry_find.if.end31_crit_edge:                    ; preds = %retry_find
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end31

if.then30:                                        ; preds = %retry_find
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock.i201 = getelementptr inbounds %struct.address_space, ptr %6, i32 0, i32 2
  tail call void @down_read(ptr noundef %invalidate_lock.i201) #11
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %retry_find.if.end31_crit_edge
  %gfp_mask = getelementptr inbounds %struct.anon.16, ptr %vmf, i32 0, i32 1
  %25 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %gfp_mask, align 4
  %call32 = tail call ptr @__filemap_get_folio(ptr noundef %6, i32 noundef %10, i32 noundef 68, i32 noundef %26)
  %tobool33.not = icmp eq ptr %call32, null
  br i1 %tobool33.not, label %if.then34, label %if.end31.if.end39_crit_edge

if.end31.if.end39_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end39

if.then34:                                        ; preds = %if.end31
  %27 = ptrtoint ptr %fpin to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fpin, align 4
  %tobool35.not = icmp eq ptr %28, null
  br i1 %tobool35.not, label %if.end37, label %if.then34.if.then122_crit_edge

if.then34.if.then122_crit_edge:                   ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then122

if.end37:                                         ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock.i202 = getelementptr inbounds %struct.address_space, ptr %6, i32 0, i32 2
  tail call void @up_read(ptr noundef %invalidate_lock.i202) #11
  br label %cleanup

if.end39:                                         ; preds = %if.end31.if.end39_crit_edge, %if.then25, %folio_test_uptodate.exit.thread
  %folio.0 = phi ptr [ %call32, %if.end31.if.end39_crit_edge ], [ %call.i, %if.then25 ], [ %call.i, %folio_test_uptodate.exit.thread ]
  %ret.1 = phi i32 [ %ret.0, %if.end31.if.end39_crit_edge ], [ 0, %if.then25 ], [ 0, %folio_test_uptodate.exit.thread ]
  %mapping_locked.3.off0 = phi i1 [ true, %if.end31.if.end39_crit_edge ], [ true, %if.then25 ], [ false, %folio_test_uptodate.exit.thread ]
  %call40 = call fastcc i32 @lock_folio_maybe_drop_mmap(ptr noundef %vmf, ptr noundef nonnull %folio.0, ptr noundef nonnull %fpin)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %if.end39.if.then119_crit_edge, label %if.end43

if.end39.if.then119_crit_edge:                    ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then119

if.end43:                                         ; preds = %if.end39
  %mapping44 = getelementptr inbounds %struct.anon, ptr %folio.0, i32 0, i32 2
  %29 = ptrtoint ptr %mapping44 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mapping44, align 4
  %cmp45.not = icmp eq ptr %30, %6
  br i1 %cmp45.not, label %do.body, label %if.then53, !prof !299

if.then53:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @folio_unlock(ptr noundef nonnull %folio.0)
  tail call fastcc void @folio_put(ptr noundef nonnull %folio.0)
  br label %retry_find

do.body:                                          ; preds = %if.end43
  %31 = getelementptr inbounds %struct.page, ptr %folio.0, i32 0, i32 1
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 4
  %and.i.i.i.i.i.i = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_test_swapbacked.exit.i.i.i, label %if.then.i.i.i.i.i, !prof !299

if.then.i.i.i.i.i:                                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapbacked.exit.i.i.i:                 ; preds = %do.body
  %34 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %folio.0, align 4
  %36 = and i32 %35, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.i.not.i.i.i = icmp eq i32 %36, 0
  br i1 %tobool.i.not.i.i.i, label %folio_test_swapbacked.exit.i.i.i.if.end.i.i_crit_edge, label %land.rhs.i.i.i

folio_test_swapbacked.exit.i.i.i.if.end.i.i_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

land.rhs.i.i.i:                                   ; preds = %folio_test_swapbacked.exit.i.i.i
  %37 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %31, align 4
  %and.i.i.i.i.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_test_swapcache.exit.i.i, label %if.then.i.i.i.i, !prof !299

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_swapcache.exit.i.i:                    ; preds = %land.rhs.i.i.i
  %39 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %folio.0, align 4
  %41 = and i32 %40, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.i.not.i.i = icmp eq i32 %41, 0
  br i1 %tobool.i.not.i.i, label %folio_test_swapcache.exit.i.i.if.end.i.i_crit_edge, label %if.then.i.i203, !prof !299

folio_test_swapcache.exit.i.i.if.end.i.i_crit_edge: ; preds = %folio_test_swapcache.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end.i.i

if.then.i.i203:                                   ; preds = %folio_test_swapcache.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %call2.i.i = tail call i32 @__page_file_index(ptr noundef nonnull %folio.0) #11
  br label %folio_index.exit.i

if.end.i.i:                                       ; preds = %folio_test_swapcache.exit.i.i.if.end.i.i_crit_edge, %folio_test_swapbacked.exit.i.i.i.if.end.i.i_crit_edge
  %index.i.i = getelementptr inbounds %struct.anon, ptr %folio.0, i32 0, i32 3
  %42 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %index.i.i, align 4
  br label %folio_index.exit.i

folio_index.exit.i:                               ; preds = %if.end.i.i, %if.then.i.i203
  %retval.0.i.i = phi i32 [ %call2.i.i, %if.then.i.i203 ], [ %43, %if.end.i.i ]
  %44 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %folio.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %45)
  %cmp.i.not.i.i.i.i = icmp eq i32 %45, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i9.i, label %PageHead.exit.i.i.i, !prof !300

if.then.i.i.i9.i:                                 ; preds = %folio_index.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %folio_index.exit.i
  %46 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %folio.0, align 4
  %48 = and i32 %47, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.not.i.i.i = icmp eq i32 %48, 0
  br i1 %tobool.not.i.i.i, label %PageHead.exit.i.i.i.folio_contains.exit_crit_edge, label %if.end.i.i.i

PageHead.exit.i.i.i.folio_contains.exit_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_contains.exit

if.end.i.i.i:                                     ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %folio.0, i32 1, i32 1, i32 0, i32 2
  %49 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_contains.exit

folio_contains.exit:                              ; preds = %if.end.i.i.i, %PageHead.exit.i.i.i.folio_contains.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %50, %if.end.i.i.i ], [ 1, %PageHead.exit.i.i.i.folio_contains.exit_crit_edge ]
  %sub.i = sub i32 %10, %retval.0.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %retval.0.i.i.i)
  %cmp4.i = icmp ult i32 %sub.i, %retval.0.i.i.i
  br i1 %cmp4.i, label %do.end71, label %if.then64, !prof !299

if.then64:                                        ; preds = %folio_contains.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.9) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3147, 0\0A.popsection", ""() #11, !srcloc !378
  unreachable

do.end71:                                         ; preds = %folio_contains.exit
  %51 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %31, align 4
  %and.i.i.i204 = and i32 %52, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i204)
  %tobool.not.i.i205 = icmp eq i32 %and.i.i.i204, 0
  br i1 %tobool.not.i.i205, label %folio_flags.exit.i208, label %if.then.i.i206, !prof !299

if.then.i.i206:                                   ; preds = %do.end71
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i208:                            ; preds = %do.end71
  %53 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %folio.0, align 4
  %55 = and i32 %54, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool.i207.not = icmp eq i32 %55, 0
  br i1 %tobool.i207.not, label %if.then81, label %if.end85

if.then81:                                        ; preds = %folio_flags.exit.i208
  br i1 %mapping_locked.3.off0, label %page_not_uptodate, label %if.then83

if.then83:                                        ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @folio_unlock(ptr noundef nonnull %folio.0)
  tail call fastcc void @folio_put(ptr noundef nonnull %folio.0)
  br label %retry_find

if.end85:                                         ; preds = %folio_flags.exit.i208
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  %56 = ptrtoint ptr %fpin to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %fpin, align 4
  %tobool86.not = icmp eq ptr %57, null
  br i1 %tobool86.not, label %if.end88, label %if.then87

if.then87:                                        ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @folio_unlock(ptr noundef nonnull %folio.0)
  br label %if.then119

if.end88:                                         ; preds = %if.end85
  br i1 %mapping_locked.3.off0, label %if.then90, label %if.end88.if.end91_crit_edge

if.end88.if.end91_crit_edge:                      ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end91

if.then90:                                        ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock.i211 = getelementptr inbounds %struct.address_space, ptr %6, i32 0, i32 2
  tail call void @up_read(ptr noundef %invalidate_lock.i211) #11
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end88.if.end91_crit_edge
  %call92 = tail call fastcc i64 @i_size_read(ptr noundef %8)
  %sub94 = add i64 %call92, 4095
  %div95 = sdiv i64 %sub94, 4096
  %conv96 = trunc i64 %div95 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %conv96)
  %cmp97.not = icmp ult i32 %10, %conv96
  br i1 %cmp97.not, label %if.end106, label %if.then105, !prof !299

if.then105:                                       ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @folio_unlock(ptr noundef nonnull %folio.0)
  tail call fastcc void @folio_put(ptr noundef nonnull %folio.0)
  br label %cleanup

if.end106:                                        ; preds = %if.end91
  %58 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %folio.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %59)
  %cmp.i.not.i.i.i.i212 = icmp eq i32 %59, -1
  br i1 %cmp.i.not.i.i.i.i212, label %if.then.i.i.i.i213, label %PageHead.exit.i.i.i215, !prof !300

if.then.i.i.i.i213:                               ; preds = %if.end106
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i215:                           ; preds = %if.end106
  %60 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %folio.0, align 4
  %62 = and i32 %61, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.i.i.i214 = icmp eq i32 %62, 0
  br i1 %tobool.not.i.i.i214, label %PageHead.exit.i.i.i215.folio_file_page.exit_crit_edge, label %if.end.i.i.i217

PageHead.exit.i.i.i215.folio_file_page.exit_crit_edge: ; preds = %PageHead.exit.i.i.i215
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_file_page.exit

if.end.i.i.i217:                                  ; preds = %PageHead.exit.i.i.i215
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i.i216 = getelementptr %struct.page, ptr %folio.0, i32 1, i32 1, i32 0, i32 2
  %63 = ptrtoint ptr %compound_nr.i.i.i216 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %compound_nr.i.i.i216, align 4
  %phi.bo.i = add i32 %64, -1
  br label %folio_file_page.exit

folio_file_page.exit:                             ; preds = %if.end.i.i.i217, %PageHead.exit.i.i.i215.folio_file_page.exit_crit_edge
  %retval.0.i.i.i218 = phi i32 [ %phi.bo.i, %if.end.i.i.i217 ], [ 0, %PageHead.exit.i.i.i215.folio_file_page.exit_crit_edge ]
  %and.i = and i32 %retval.0.i.i.i218, %10
  %add.ptr.i = getelementptr %struct.page, ptr %folio.0, i32 %and.i
  %page = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %65 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %add.ptr.i, ptr %page, align 4
  %or = or i32 %ret.1, 512
  br label %cleanup

page_not_uptodate:                                ; preds = %if.then81
  %66 = ptrtoint ptr %fpin to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %fpin, align 4
  %call108 = tail call fastcc ptr @maybe_unlock_mmap_for_io(ptr noundef %vmf, ptr noundef %67)
  %68 = ptrtoint ptr %fpin to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %call108, ptr %fpin, align 4
  %call109 = tail call fastcc i32 @filemap_read_folio(ptr noundef %3, ptr noundef %6, ptr noundef nonnull %folio.0)
  %tobool110.not = icmp eq ptr %call108, null
  br i1 %tobool110.not, label %if.end112, label %page_not_uptodate.if.then119_crit_edge

page_not_uptodate.if.then119_crit_edge:           ; preds = %page_not_uptodate
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then119

if.end112:                                        ; preds = %page_not_uptodate
  tail call fastcc void @folio_put(ptr noundef nonnull %folio.0)
  %69 = zext i32 %call109 to i64
  call void @__sanitizer_cov_trace_switch(i64 %69, ptr @__sancov_gen_cov_switch_values.67)
  switch i32 %call109, label %if.end117 [
    i32 0, label %if.end112.retry_find_crit_edge
    i32 524289, label %if.end112.retry_find_crit_edge237
  ]

if.end112.retry_find_crit_edge237:                ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry_find

if.end112.retry_find_crit_edge:                   ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry_find

if.end117:                                        ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock.i219 = getelementptr inbounds %struct.address_space, ptr %6, i32 0, i32 2
  tail call void @up_read(ptr noundef %invalidate_lock.i219) #11
  br label %cleanup

if.then119:                                       ; preds = %page_not_uptodate.if.then119_crit_edge, %if.then87, %if.end39.if.then119_crit_edge
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio.0, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %70 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %cmp.i.i.i = icmp eq i32 %71, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.then119
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %if.then119
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %72 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %72, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@filemap_fault, %if.then.i.i.i.i220)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i220], !srcloc !306

if.then.i.i.i.i220:                               ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef nonnull %folio.0, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i220, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i, label %if.end120

if.then.i:                                        ; preds = %folio_put_testzero.exit.i
  tail call void @__put_page(ptr noundef nonnull %folio.0) #11
  br i1 %mapping_locked.3.off0, label %if.then.i.if.then122_crit_edge, label %if.then.i.if.end123_crit_edge

if.then.i.if.end123_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end123

if.then.i.if.then122_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then122

if.end120:                                        ; preds = %folio_put_testzero.exit.i
  br i1 %mapping_locked.3.off0, label %if.end120.if.then122_crit_edge, label %if.end120.if.end123_crit_edge

if.end120.if.end123_crit_edge:                    ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end123

if.end120.if.then122_crit_edge:                   ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then122

if.then122:                                       ; preds = %if.end120.if.then122_crit_edge, %if.then.i.if.then122_crit_edge, %if.then34.if.then122_crit_edge
  %ret.2230236 = phi i32 [ %ret.1, %if.end120.if.then122_crit_edge ], [ %ret.1, %if.then.i.if.then122_crit_edge ], [ %ret.0, %if.then34.if.then122_crit_edge ]
  %invalidate_lock.i221 = getelementptr inbounds %struct.address_space, ptr %6, i32 0, i32 2
  tail call void @up_read(ptr noundef %invalidate_lock.i221) #11
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end120.if.end123_crit_edge, %if.then.i.if.end123_crit_edge
  %ret.2230235 = phi i32 [ %ret.2230236, %if.then122 ], [ %ret.1, %if.end120.if.end123_crit_edge ], [ %ret.1, %if.then.i.if.end123_crit_edge ]
  %73 = ptrtoint ptr %fpin to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %fpin, align 4
  %tobool124.not = icmp eq ptr %74, null
  br i1 %tobool124.not, label %if.end123.if.end126_crit_edge, label %if.then125

if.end123.if.end126_crit_edge:                    ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end126

if.then125:                                       ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @fput(ptr noundef nonnull %74) #11
  br label %if.end126

if.end126:                                        ; preds = %if.then125, %if.end123.if.end126_crit_edge
  %or127 = or i32 %ret.2230235, 1024
  br label %cleanup

cleanup:                                          ; preds = %if.end126, %if.end117, %folio_file_page.exit, %if.then105, %if.end37, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %or127, %if.end126 ], [ 1, %if.end37 ], [ 2, %if.end117 ], [ 2, %if.then105 ], [ %or, %folio_file_page.exit ], [ 2, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fpin) #11
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @do_async_mmap_readahead(ptr nocapture noundef readonly %vmf, ptr noundef %folio) unnamed_addr #0 align 64 {
entry:
  %ractl = alloca %struct.readahead_control, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_file, align 4
  %f_ra = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 13
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ractl) #11
  %4 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 1
  %5 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 2
  %6 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 3
  %7 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 4
  %8 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 5
  %9 = ptrtoint ptr %ractl to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %3, ptr %ractl, align 4
  %f_mapping = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 18
  %10 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %f_mapping, align 4
  %12 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %11, ptr %4, align 4
  %13 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %f_ra, ptr %5, align 4
  %pgoff = getelementptr inbounds %struct.anon.16, ptr %vmf, i32 0, i32 2
  %14 = ptrtoint ptr %pgoff to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pgoff, align 4
  %16 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %6, align 4
  %17 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %7, align 4
  %18 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %8, align 4
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %19 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %vm_flags, align 4
  %and = and i32 %20, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %ra_pages = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 13, i32 3
  %21 = ptrtoint ptr %ra_pages to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %ra_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool4.not = icmp eq i32 %22, 0
  br i1 %tobool4.not, label %lor.lhs.false.cleanup_crit_edge, label %do.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

do.end:                                           ; preds = %lor.lhs.false
  %mmap_miss5 = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 13, i32 4
  %23 = ptrtoint ptr %mmap_miss5 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %mmap_miss5, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool6.not = icmp eq i32 %24, 0
  br i1 %tobool6.not, label %do.end.if.end18_crit_edge, label %do.body12

do.end.if.end18_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end18

do.body12:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #13
  %dec = add i32 %24, -1
  %25 = ptrtoint ptr %mmap_miss5 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile i32 %dec, ptr %mmap_miss5, align 8
  br label %if.end18

if.end18:                                         ; preds = %do.body12, %do.end.if.end18_crit_edge
  %26 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  %and.i.i.i = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_readahead.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_readahead.exit:                        ; preds = %if.end18
  %29 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %folio, align 4
  %31 = and i32 %30, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.i.not = icmp eq i32 %31, 0
  br i1 %tobool.i.not, label %folio_test_readahead.exit.cleanup_crit_edge, label %if.then19

folio_test_readahead.exit.cleanup_crit_edge:      ; preds = %folio_test_readahead.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then19:                                        ; preds = %folio_test_readahead.exit
  %flags1.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %32 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags1.i, align 4
  %34 = and i32 %33, 44
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %34)
  %35 = icmp eq i32 %34, 4
  br i1 %35, label %if.then3.i, label %if.then19.maybe_unlock_mmap_for_io.exit_crit_edge

if.then19.maybe_unlock_mmap_for_io.exit_crit_edge: ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #13
  br label %maybe_unlock_mmap_for_io.exit

if.then3.i:                                       ; preds = %if.then19
  %36 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vmf, align 4
  %vm_file.i = getelementptr inbounds %struct.vm_area_struct, ptr %37, i32 0, i32 14
  %38 = ptrtoint ptr %vm_file.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %vm_file.i, align 4
  %f_count.i.i = getelementptr inbounds %struct.file, ptr %39, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %f_count.i.i, i32 noundef 4) #11
  tail call void @llvm.prefetch.p0(ptr %f_count.i.i, i32 1, i32 3, i32 1) #11
  %40 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %f_count.i.i, ptr %f_count.i.i, i32 1, ptr elementtype(i32) %f_count.i.i) #11, !srcloc !332
  %41 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %vmf, align 4
  %vm_mm.i = getelementptr inbounds %struct.vm_area_struct, ptr %42, i32 0, i32 6
  %43 = ptrtoint ptr %vm_mm.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %vm_mm.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@do_async_mmap_readahead, %if.then.i.i.i)) #11
          to label %mmap_read_unlock.exit.i [label %if.then.i.i.i], !srcloc !306

if.then.i.i.i:                                    ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__mmap_lock_do_trace_released(ptr noundef %44, i1 noundef zeroext false) #11
  br label %mmap_read_unlock.exit.i

mmap_read_unlock.exit.i:                          ; preds = %if.then.i.i.i, %if.then3.i
  %mmap_lock.i.i = getelementptr inbounds %struct.anon.13, ptr %44, i32 0, i32 15
  tail call void @up_read(ptr noundef %mmap_lock.i.i) #11
  br label %maybe_unlock_mmap_for_io.exit

maybe_unlock_mmap_for_io.exit:                    ; preds = %mmap_read_unlock.exit.i, %if.then19.maybe_unlock_mmap_for_io.exit_crit_edge
  %retval.0.i = phi ptr [ %39, %mmap_read_unlock.exit.i ], [ null, %if.then19.maybe_unlock_mmap_for_io.exit_crit_edge ]
  %45 = ptrtoint ptr %ra_pages to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %ra_pages, align 4
  call void @page_cache_async_ra(ptr noundef nonnull %ractl, ptr noundef %folio, i32 noundef %46) #11
  br label %cleanup

cleanup:                                          ; preds = %maybe_unlock_mmap_for_io.exit, %folio_test_readahead.exit.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %lor.lhs.false.cleanup_crit_edge ], [ null, %entry.cleanup_crit_edge ], [ %retval.0.i, %maybe_unlock_mmap_for_io.exit ], [ null, %folio_test_readahead.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ractl) #11
  ret ptr %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @count_vm_event() unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !371
  %1 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 4
  %arrayidx13 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx13, align 4
  %add = add i32 %6, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 21) to i32)
  %7 = inttoptr i32 %add to ptr
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add14 = add i32 %9, 1
  store i32 %add14, ptr %7, align 4
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !372
  %and.i.i = and i32 %10, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end29_crit_edge, !prof !300

entry.do.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end29

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @warn_bogus_irq_restore() #11
  br label %do.end29

do.end29:                                         ; preds = %if.then, %entry.do.end29_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #11, !srcloc !373
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @count_memcg_event_mm(ptr noundef %mm) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@count_memcg_event_mm, %cleanup)) #11
          to label %if.end [label %cleanup], !srcloc !306

if.end:                                           ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %owner = getelementptr inbounds %struct.anon.13, ptr %mm, i32 0, i32 46
  %4 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %owner, align 4
  %call2 = tail call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end10_crit_edge

rcu_read_lock.exit.do.end10_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end10

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end10_crit_edge, label %land.lhs.true5

land.lhs.true.do.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end10

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b1 = load i1, ptr @count_memcg_event_mm.__warned, align 1
  br i1 %.b1, label %land.lhs.true5.do.end10_crit_edge, label %if.then7

land.lhs.true5.do.end10_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end10

if.then7:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @count_memcg_event_mm.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 1059, ptr noundef nonnull @.str.35) #11
  br label %do.end10

do.end10:                                         ; preds = %if.then7, %land.lhs.true5.do.end10_crit_edge, %land.lhs.true.do.end10_crit_edge, %rcu_read_lock.exit.do.end10_crit_edge
  %call12 = tail call ptr @mem_cgroup_from_task(ptr noundef %5) #11
  %tobool13.not = icmp eq ptr %call12, null
  br i1 %tobool13.not, label %do.end10.if.end17_crit_edge, label %if.then16, !prof !300

do.end10.if.end17_crit_edge:                      ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end17

if.then16:                                        ; preds = %do.end10
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !371
  %and.i.i = and i32 %6, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i2 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i2, label %if.then21.i, label %do.end11.i

do.end11.i:                                       ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__count_memcg_events(ptr noundef nonnull %call12, i32 noundef 21, i32 noundef 1) #11
  br label %do.body23.i

if.then21.i:                                      ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @trace_hardirqs_off() #11
  tail call void @__count_memcg_events(ptr noundef nonnull %call12, i32 noundef 21, i32 noundef 1) #11
  tail call void @trace_hardirqs_on() #11
  br label %do.body23.i

do.body23.i:                                      ; preds = %if.then21.i, %do.end11.i
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !372
  %and.i.i.i = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool32.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool32.not.i, label %if.then36.i, label %do.body23.i.count_memcg_events.exit_crit_edge, !prof !300

do.body23.i.count_memcg_events.exit_crit_edge:    ; preds = %do.body23.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %count_memcg_events.exit

if.then36.i:                                      ; preds = %do.body23.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @warn_bogus_irq_restore() #11
  br label %count_memcg_events.exit

count_memcg_events.exit:                          ; preds = %if.then36.i, %do.body23.i.count_memcg_events.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #11, !srcloc !373
  br label %if.end17

if.end17:                                         ; preds = %count_memcg_events.exit, %do.end10.if.end17_crit_edge
  %call.i3 = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i3, label %if.end17.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i6

if.end17.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i6:                                 ; preds = %if.end17
  %call1.i4 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4)
  %tobool.not.i5 = icmp eq i32 %call1.i4, 0
  br i1 %tobool.not.i5, label %land.lhs.true.i6.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i8

land.lhs.true.i6.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true.i6
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i8:                                ; preds = %land.lhs.true.i6
  %.b4.i7 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7, label %land.lhs.true2.i8.rcu_read_unlock.exit_crit_edge, label %if.then.i9

land.lhs.true2.i8.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i8
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i9:                                       ; preds = %land.lhs.true2.i8
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i9, %land.lhs.true2.i8.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i6.rcu_read_unlock.exit_crit_edge, %if.end17.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %8 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i10 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i10 to ptr
  %preempt_count.i.i.i.i11 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i11, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i11, align 4
  tail call void @rcu_read_unlock_strict() #11
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @do_sync_mmap_readahead(ptr nocapture noundef readonly %vmf) unnamed_addr #0 align 64 {
entry:
  %ractl = alloca %struct.readahead_control, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_file, align 4
  %f_ra = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 13
  %f_mapping = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 18
  %4 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %f_mapping, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ractl) #11
  %6 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 1
  %7 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 2
  %8 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 3
  %9 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 4
  %10 = getelementptr inbounds %struct.readahead_control, ptr %ractl, i32 0, i32 5
  %11 = ptrtoint ptr %ractl to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %3, ptr %ractl, align 4
  %12 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %5, ptr %6, align 4
  %13 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %f_ra, ptr %7, align 4
  %pgoff = getelementptr inbounds %struct.anon.16, ptr %vmf, i32 0, i32 2
  %14 = ptrtoint ptr %pgoff to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pgoff, align 4
  %16 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %8, align 4
  %17 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %9, align 4
  %18 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %10, align 4
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %19 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %vm_flags, align 4
  %and = and i32 %20, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %ra_pages = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 13, i32 3
  %21 = ptrtoint ptr %ra_pages to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %ra_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool5.not = icmp eq i32 %22, 0
  br i1 %tobool5.not, label %if.end.cleanup_crit_edge, label %if.end7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %and10 = and i32 %20, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %do.end, label %if.then12

if.then12:                                        ; preds = %if.end7
  %flags1.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %23 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags1.i, align 4
  %25 = and i32 %24, 44
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %25)
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %if.then3.i, label %if.then12.maybe_unlock_mmap_for_io.exit_crit_edge

if.then12.maybe_unlock_mmap_for_io.exit_crit_edge: ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #13
  br label %maybe_unlock_mmap_for_io.exit

if.then3.i:                                       ; preds = %if.then12
  %f_count.i.i = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %f_count.i.i, i32 noundef 4) #11
  tail call void @llvm.prefetch.p0(ptr %f_count.i.i, i32 1, i32 3, i32 1) #11
  %27 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %f_count.i.i, ptr %f_count.i.i, i32 1, ptr elementtype(i32) %f_count.i.i) #11, !srcloc !332
  %28 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vmf, align 4
  %vm_mm.i = getelementptr inbounds %struct.vm_area_struct, ptr %29, i32 0, i32 6
  %30 = ptrtoint ptr %vm_mm.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %vm_mm.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@do_sync_mmap_readahead, %if.then.i.i.i)) #11
          to label %mmap_read_unlock.exit.i [label %if.then.i.i.i], !srcloc !306

if.then.i.i.i:                                    ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__mmap_lock_do_trace_released(ptr noundef %31, i1 noundef zeroext false) #11
  br label %mmap_read_unlock.exit.i

mmap_read_unlock.exit.i:                          ; preds = %if.then.i.i.i, %if.then3.i
  %mmap_lock.i.i = getelementptr inbounds %struct.anon.13, ptr %31, i32 0, i32 15
  tail call void @up_read(ptr noundef %mmap_lock.i.i) #11
  br label %maybe_unlock_mmap_for_io.exit

maybe_unlock_mmap_for_io.exit:                    ; preds = %mmap_read_unlock.exit.i, %if.then12.maybe_unlock_mmap_for_io.exit_crit_edge
  %retval.0.i = phi ptr [ %3, %mmap_read_unlock.exit.i ], [ null, %if.then12.maybe_unlock_mmap_for_io.exit_crit_edge ]
  %32 = ptrtoint ptr %ra_pages to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %ra_pages, align 4
  call void @page_cache_sync_ra(ptr noundef nonnull %ractl, i32 noundef %33) #11
  br label %cleanup

do.end:                                           ; preds = %if.end7
  %mmap_miss15 = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 13, i32 4
  %34 = ptrtoint ptr %mmap_miss15 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %mmap_miss15, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %35)
  %cmp = icmp ult i32 %35, 1000
  br i1 %cmp, label %if.end27, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end27:                                         ; preds = %do.end
  %inc = add nuw nsw i32 %35, 1
  %36 = ptrtoint ptr %mmap_miss15 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile i32 %inc, ptr %mmap_miss15, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 99, i32 %35)
  %cmp28 = icmp ugt i32 %35, 99
  br i1 %cmp28, label %if.end27.cleanup_crit_edge, label %if.end30

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end30:                                         ; preds = %if.end27
  %flags1.i81 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %37 = ptrtoint ptr %flags1.i81 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %flags1.i81, align 4
  %39 = and i32 %38, 44
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %39)
  %40 = icmp eq i32 %39, 4
  br i1 %40, label %if.then3.i86, label %if.end30.maybe_unlock_mmap_for_io.exit91_crit_edge

if.end30.maybe_unlock_mmap_for_io.exit91_crit_edge: ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #13
  br label %maybe_unlock_mmap_for_io.exit91

if.then3.i86:                                     ; preds = %if.end30
  %41 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %vmf, align 4
  %vm_file.i82 = getelementptr inbounds %struct.vm_area_struct, ptr %42, i32 0, i32 14
  %43 = ptrtoint ptr %vm_file.i82 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %vm_file.i82, align 4
  %f_count.i.i83 = getelementptr inbounds %struct.file, ptr %44, i32 0, i32 6
  %call.i.i.i.i84 = tail call zeroext i1 @__kasan_check_write(ptr noundef %f_count.i.i83, i32 noundef 4) #11
  tail call void @llvm.prefetch.p0(ptr %f_count.i.i83, i32 1, i32 3, i32 1) #11
  %45 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %f_count.i.i83, ptr %f_count.i.i83, i32 1, ptr elementtype(i32) %f_count.i.i83) #11, !srcloc !332
  %46 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %vmf, align 4
  %vm_mm.i85 = getelementptr inbounds %struct.vm_area_struct, ptr %47, i32 0, i32 6
  %48 = ptrtoint ptr %vm_mm.i85 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %vm_mm.i85, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@do_sync_mmap_readahead, %if.then.i.i.i87)) #11
          to label %mmap_read_unlock.exit.i89 [label %if.then.i.i.i87], !srcloc !306

if.then.i.i.i87:                                  ; preds = %if.then3.i86
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__mmap_lock_do_trace_released(ptr noundef %49, i1 noundef zeroext false) #11
  br label %mmap_read_unlock.exit.i89

mmap_read_unlock.exit.i89:                        ; preds = %if.then.i.i.i87, %if.then3.i86
  %mmap_lock.i.i88 = getelementptr inbounds %struct.anon.13, ptr %49, i32 0, i32 15
  tail call void @up_read(ptr noundef %mmap_lock.i.i88) #11
  br label %maybe_unlock_mmap_for_io.exit91

maybe_unlock_mmap_for_io.exit91:                  ; preds = %mmap_read_unlock.exit.i89, %if.end30.maybe_unlock_mmap_for_io.exit91_crit_edge
  %retval.0.i90 = phi ptr [ %44, %mmap_read_unlock.exit.i89 ], [ null, %if.end30.maybe_unlock_mmap_for_io.exit91_crit_edge ]
  %50 = ptrtoint ptr %pgoff to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %pgoff, align 4
  %52 = ptrtoint ptr %ra_pages to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %ra_pages, align 4
  %div79 = lshr i32 %53, 1
  %sub = sub i32 %51, %div79
  %54 = tail call i32 @llvm.smax.i32(i32 %sub, i32 0)
  %55 = ptrtoint ptr %f_ra to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %f_ra, align 8
  %size = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 13, i32 1
  %56 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %53, ptr %size, align 4
  %div3880 = lshr i32 %53, 2
  %async_size = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 13, i32 2
  %57 = ptrtoint ptr %async_size to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %div3880, ptr %async_size, align 8
  %58 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %54, ptr %8, align 4
  call void @do_page_cache_ra(ptr noundef nonnull %ractl, i32 noundef %53, i32 noundef %div3880) #11
  br label %cleanup

cleanup:                                          ; preds = %maybe_unlock_mmap_for_io.exit91, %if.end27.cleanup_crit_edge, %do.end.cleanup_crit_edge, %maybe_unlock_mmap_for_io.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %retval.0.i, %maybe_unlock_mmap_for_io.exit ], [ %retval.0.i90, %maybe_unlock_mmap_for_io.exit91 ], [ null, %entry.cleanup_crit_edge ], [ null, %if.end.cleanup_crit_edge ], [ null, %if.end27.cleanup_crit_edge ], [ null, %do.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ractl) #11
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @lock_folio_maybe_drop_mmap(ptr nocapture noundef readonly %vmf, ptr noundef %folio, ptr nocapture noundef %fpin) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_flags.exit.i, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %entry
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %folio, i32 noundef 4) #11
  %3 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %folio, align 4
  %and.i.i4.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool.not.i.i.i, label %folio_trylock.exit, label %folio_flags.exit.i.if.end_crit_edge

folio_flags.exit.i.if.end_crit_edge:              ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

folio_trylock.exit:                               ; preds = %folio_flags.exit.i
  tail call void @llvm.prefetch.p0(ptr %folio, i32 1, i32 3, i32 1) #11
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %folio, ptr %folio, i32 1, ptr elementtype(i32) %folio) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i = and i32 %asmresult.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %phi.cmp.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %phi.cmp.i.i, label %folio_trylock.exit.return_crit_edge, label %folio_trylock.exit.if.end_crit_edge

folio_trylock.exit.if.end_crit_edge:              ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

folio_trylock.exit.return_crit_edge:              ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end:                                           ; preds = %folio_trylock.exit.if.end_crit_edge, %folio_flags.exit.i.if.end_crit_edge
  %flags = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end2, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end2:                                          ; preds = %if.end
  %8 = ptrtoint ptr %fpin to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fpin, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %if.end.i, label %if.end2.maybe_unlock_mmap_for_io.exit_crit_edge

if.end2.maybe_unlock_mmap_for_io.exit_crit_edge:  ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #13
  br label %maybe_unlock_mmap_for_io.exit

if.end.i:                                         ; preds = %if.end2
  %10 = and i32 %7, 44
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %10)
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %if.then3.i, label %if.end.i.maybe_unlock_mmap_for_io.exit_crit_edge

if.end.i.maybe_unlock_mmap_for_io.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %maybe_unlock_mmap_for_io.exit

if.then3.i:                                       ; preds = %if.end.i
  %12 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vmf, align 4
  %vm_file.i = getelementptr inbounds %struct.vm_area_struct, ptr %13, i32 0, i32 14
  %14 = ptrtoint ptr %vm_file.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vm_file.i, align 4
  %f_count.i.i = getelementptr inbounds %struct.file, ptr %15, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %f_count.i.i, i32 noundef 4) #11
  tail call void @llvm.prefetch.p0(ptr %f_count.i.i, i32 1, i32 3, i32 1) #11
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %f_count.i.i, ptr %f_count.i.i, i32 1, ptr elementtype(i32) %f_count.i.i) #11, !srcloc !332
  %17 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %vmf, align 4
  %vm_mm.i = getelementptr inbounds %struct.vm_area_struct, ptr %18, i32 0, i32 6
  %19 = ptrtoint ptr %vm_mm.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %vm_mm.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@lock_folio_maybe_drop_mmap, %if.then.i.i.i)) #11
          to label %mmap_read_unlock.exit.i [label %if.then.i.i.i], !srcloc !306

if.then.i.i.i:                                    ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__mmap_lock_do_trace_released(ptr noundef %20, i1 noundef zeroext false) #11
  br label %mmap_read_unlock.exit.i

mmap_read_unlock.exit.i:                          ; preds = %if.then.i.i.i, %if.then3.i
  %mmap_lock.i.i = getelementptr inbounds %struct.anon.13, ptr %20, i32 0, i32 15
  tail call void @up_read(ptr noundef %mmap_lock.i.i) #11
  br label %maybe_unlock_mmap_for_io.exit

maybe_unlock_mmap_for_io.exit:                    ; preds = %mmap_read_unlock.exit.i, %if.end.i.maybe_unlock_mmap_for_io.exit_crit_edge, %if.end2.maybe_unlock_mmap_for_io.exit_crit_edge
  %retval.0.i = phi ptr [ %9, %if.end2.maybe_unlock_mmap_for_io.exit_crit_edge ], [ %15, %mmap_read_unlock.exit.i ], [ null, %if.end.i.maybe_unlock_mmap_for_io.exit_crit_edge ]
  %21 = ptrtoint ptr %fpin to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %retval.0.i, ptr %fpin, align 4
  %22 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags, align 4
  %and5 = and i32 %23, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %maybe_unlock_mmap_for_io.exit
  %call.i = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 258, i32 noundef 0) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool9.not = icmp eq i32 %call.i, 0
  br i1 %tobool9.not, label %if.then7.return_crit_edge, label %if.then10

if.then7.return_crit_edge:                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.then10:                                        ; preds = %if.then7
  %24 = ptrtoint ptr %fpin to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %fpin, align 4
  %cmp = icmp eq ptr %25, null
  br i1 %cmp, label %if.then11, label %if.then10.return_crit_edge

if.then10.return_crit_edge:                       ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.then11:                                        ; preds = %if.then10
  %26 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %vmf, align 4
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %27, i32 0, i32 6
  %28 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vm_mm, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@lock_folio_maybe_drop_mmap, %if.then.i.i22)) #11
          to label %mmap_read_unlock.exit [label %if.then.i.i22], !srcloc !306

if.then.i.i22:                                    ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__mmap_lock_do_trace_released(ptr noundef %29, i1 noundef zeroext false) #11
  br label %mmap_read_unlock.exit

mmap_read_unlock.exit:                            ; preds = %if.then.i.i22, %if.then11
  %mmap_lock.i = getelementptr inbounds %struct.anon.13, ptr %29, i32 0, i32 15
  tail call void @up_read(ptr noundef %mmap_lock.i) #11
  br label %return

if.else:                                          ; preds = %maybe_unlock_mmap_for_io.exit
  call void @__sanitizer_cov_trace_pc() #13
  %call.i23 = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 2, i32 noundef 0) #11
  br label %return

return:                                           ; preds = %if.else, %mmap_read_unlock.exit, %if.then10.return_crit_edge, %if.then7.return_crit_edge, %if.end.return_crit_edge, %folio_trylock.exit.return_crit_edge
  %retval.0 = phi i32 [ 1, %folio_trylock.exit.return_crit_edge ], [ 0, %if.end.return_crit_edge ], [ 0, %mmap_read_unlock.exit ], [ 0, %if.then10.return_crit_edge ], [ 1, %if.then7.return_crit_edge ], [ 1, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @maybe_unlock_mmap_for_io(ptr nocapture noundef readonly %vmf, ptr noundef readnone %fpin) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %tobool.not = icmp eq ptr %fpin, null
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags1 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags1, align 4
  %2 = and i32 %1, 44
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %2)
  %3 = icmp eq i32 %2, 4
  br i1 %3, label %if.then3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then3:                                         ; preds = %if.end
  %4 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vmf, align 4
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %5, i32 0, i32 14
  %6 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vm_file, align 4
  %f_count.i = getelementptr inbounds %struct.file, ptr %7, i32 0, i32 6
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %f_count.i, i32 noundef 4) #11
  tail call void @llvm.prefetch.p0(ptr %f_count.i, i32 1, i32 3, i32 1) #11
  %8 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %f_count.i, ptr %f_count.i, i32 1, ptr elementtype(i32) %f_count.i) #11, !srcloc !332
  %9 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vmf, align 4
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %10, i32 0, i32 6
  %11 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vm_mm, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@maybe_unlock_mmap_for_io, %if.then.i.i)) #11
          to label %mmap_read_unlock.exit [label %if.then.i.i], !srcloc !306

if.then.i.i:                                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__mmap_lock_do_trace_released(ptr noundef %12, i1 noundef zeroext false) #11
  br label %mmap_read_unlock.exit

mmap_read_unlock.exit:                            ; preds = %if.then.i.i, %if.then3
  %mmap_lock.i = getelementptr inbounds %struct.anon.13, ptr %12, i32 0, i32 15
  tail call void @up_read(ptr noundef %mmap_lock.i) #11
  br label %cleanup

cleanup:                                          ; preds = %mmap_read_unlock.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %fpin, %entry.cleanup_crit_edge ], [ %7, %mmap_read_unlock.exit ], [ null, %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @filemap_read_folio(ptr noundef %file, ptr nocapture noundef readonly %mapping, ptr noundef %folio) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_clear_error.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_clear_error.exit:                           ; preds = %entry
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %folio) #11
  %a_ops = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %3 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %a_ops, align 4
  %readpage = getelementptr inbounds %struct.address_space_operations, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %readpage to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %readpage, align 4
  %call = tail call i32 %6(ptr noundef %file, ptr noundef %folio) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %folio_clear_error.exit.cleanup_crit_edge

folio_clear_error.exit.cleanup_crit_edge:         ; preds = %folio_clear_error.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %folio_clear_error.exit
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %0, align 4
  %and.i.i.i.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_test_locked.exit.i, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit.i:                         ; preds = %if.end
  %9 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %folio, align 4
  %and1.i.i.i = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %folio_test_locked.exit.i.if.end4_crit_edge, label %folio_wait_locked_killable.exit

folio_test_locked.exit.i.if.end4_crit_edge:       ; preds = %folio_test_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end4

folio_wait_locked_killable.exit:                  ; preds = %folio_test_locked.exit.i
  %call.i.i = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 258, i32 noundef 1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not, label %folio_wait_locked_killable.exit.if.end4_crit_edge, label %folio_wait_locked_killable.exit.cleanup_crit_edge

folio_wait_locked_killable.exit.cleanup_crit_edge: ; preds = %folio_wait_locked_killable.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

folio_wait_locked_killable.exit.if.end4_crit_edge: ; preds = %folio_wait_locked_killable.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end4

if.end4:                                          ; preds = %folio_wait_locked_killable.exit.if.end4_crit_edge, %folio_test_locked.exit.i.if.end4_crit_edge
  %11 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %0, align 4
  %and.i.i.i15 = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i15)
  %tobool.not.i.i16 = icmp eq i32 %and.i.i.i15, 0
  br i1 %tobool.not.i.i16, label %folio_flags.exit.i, label %if.then.i.i17, !prof !299

if.then.i.i17:                                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %if.end4
  %13 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %folio, align 4
  %15 = and i32 %14, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i.not = icmp eq i32 %15, 0
  br i1 %tobool.i.not, label %if.end7, label %folio_test_uptodate.exit.thread

folio_test_uptodate.exit.thread:                  ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  br label %cleanup

if.end7:                                          ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  %ra_pages.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 13, i32 3
  %16 = ptrtoint ptr %ra_pages.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %ra_pages.i, align 4
  %div1.i = lshr i32 %17, 2
  store i32 %div1.i, ptr %ra_pages.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %folio_test_uptodate.exit.thread, %folio_wait_locked_killable.exit.cleanup_crit_edge, %folio_clear_error.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -5, %if.end7 ], [ %call, %folio_clear_error.exit.cleanup_crit_edge ], [ %call.i.i, %folio_wait_locked_killable.exit.cleanup_crit_edge ], [ 0, %folio_test_uptodate.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_map_pages(ptr noundef %vmf, i32 noundef %start_pgoff, i32 noundef %end_pgoff) #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_file, align 4
  %f_mapping = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 18
  %4 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %f_mapping, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %6 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %7 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %8 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %9 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %10 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %5, i32 0, i32 1
  %11 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %i_pages, ptr %xas, align 4
  %12 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %start_pgoff, ptr %6, align 4
  %13 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %7, align 4
  %14 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 3 to ptr), ptr %8, align 4
  %15 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %9, align 4
  %16 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %10, align 4
  %mmap_miss2 = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 13, i32 4
  %17 = ptrtoint ptr %mmap_miss2 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %mmap_miss2, align 8
  %19 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %22, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call.i118 = call ptr @xas_find(ptr noundef nonnull %xas, i32 noundef %end_pgoff) #11
  %call1.i119 = call fastcc ptr @next_uptodate_page(ptr noundef %call.i118, ptr noundef %5, ptr noundef nonnull %xas, i32 noundef %end_pgoff) #11
  %tobool.not = icmp eq ptr %call1.i119, null
  br i1 %tobool.not, label %rcu_read_lock.exit.out_crit_edge, label %if.end

rcu_read_lock.exit.out_crit_edge:                 ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.end:                                           ; preds = %rcu_read_lock.exit
  %pmd.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %23 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pmd.i, align 4
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool2.not.i = icmp eq i32 %26, 0
  br i1 %tobool2.not.i, label %if.then13.i, label %if.end.filemap_map_pmd.exit_crit_edge

if.end.filemap_map_pmd.exit_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %filemap_map_pmd.exit

if.then13.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %27 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %vmf, align 4
  %vm_mm.i = getelementptr inbounds %struct.vm_area_struct, ptr %28, i32 0, i32 6
  %29 = ptrtoint ptr %vm_mm.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %vm_mm.i, align 4
  %prealloc_pte.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 9
  call void @pmd_install(ptr noundef %30, ptr noundef %24, ptr noundef %prealloc_pte.i) #11
  br label %filemap_map_pmd.exit

filemap_map_pmd.exit:                             ; preds = %if.then13.i, %if.end.filemap_map_pmd.exit_crit_edge
  %31 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %1, align 4
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 13
  %33 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %vm_pgoff, align 4
  %sub = sub i32 %start_pgoff, %34
  %shl = shl i32 %sub, 12
  %add = add i32 %shl, %32
  %35 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pmd.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %37 = load ptr, ptr @mem_map, align 4
  %38 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %36, align 4
  %shr.i = lshr i32 %39, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %40 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %shr.i, %40
  %ptl.i.i = getelementptr %struct.page, ptr %37, i32 %sub.i, i32 1, i32 0, i32 3
  %41 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ptl.i.i, align 4
  %add.ptr = getelementptr %struct.page, ptr %37, i32 %sub.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %43 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %43, 512
  %44 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i120 = and i32 %44, -16384
  %45 = inttoptr i32 %and.i.i.i.i.i120 to ptr
  %preempt_count.i.i.i.i121 = getelementptr inbounds %struct.thread_info, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %preempt_count.i.i.i.i121 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %preempt_count.i.i.i.i121, align 4
  %add.i.i.i122 = add i32 %47, 1
  store volatile i32 %add.i.i.i122, ptr %preempt_count.i.i.i.i121, align 4
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !379
  %48 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i1.i.i = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 2
  %50 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %51, i32 0, i32 213
  %52 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %53, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !380
  %call.i.i = call ptr @__kmap_local_page_prot(ptr noundef %add.ptr, i32 noundef %or.i) #11
  %shr.i123 = lshr i32 %add, 12
  %and.i = and i32 %shr.i123, 511
  %add.ptr11 = getelementptr i32, ptr %call.i.i, i32 %and.i
  %ptl = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %54 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %42, ptr %ptl, align 4
  call void @_raw_spin_lock(ptr noundef %42) #11
  %pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %55 = ptrtoint ptr %pte to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %add.ptr11, ptr %pte, align 4
  %address = getelementptr inbounds %struct.anon.16, ptr %vmf, i32 0, i32 3
  br label %do.body13

do.body13:                                        ; preds = %do.cond50.do.body13_crit_edge, %filemap_map_pmd.exit
  %addr.0 = phi i32 [ %add, %filemap_map_pmd.exit ], [ %add25, %do.cond50.do.body13_crit_edge ]
  %folio.0 = phi ptr [ %call1.i119, %filemap_map_pmd.exit ], [ %call1.i159, %do.cond50.do.body13_crit_edge ]
  %mmap_miss.0 = phi i32 [ %18, %filemap_map_pmd.exit ], [ %mmap_miss.2, %do.cond50.do.body13_crit_edge ]
  %last_pgoff.0 = phi i32 [ %start_pgoff, %filemap_map_pmd.exit ], [ %62, %do.cond50.do.body13_crit_edge ]
  %ret.0 = phi i32 [ 0, %filemap_map_pmd.exit ], [ %ret.3, %do.cond50.do.body13_crit_edge ]
  %56 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %6, align 4
  %58 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %folio.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %59)
  %cmp.i.not.i.i.i.i202207 = icmp eq i32 %59, -1
  br i1 %cmp.i.not.i.i.i.i202207, label %do.body13.if.then.i.i.i.i_crit_edge, label %PageHead.exit.i.i.i.lr.ph.lr.ph, !prof !300

do.body13.if.then.i.i.i.i_crit_edge:              ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i.i.i.i

PageHead.exit.i.i.i.lr.ph.lr.ph:                  ; preds = %do.body13
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %folio.0, i32 1, i32 1, i32 0, i32 2
  %60 = getelementptr inbounds %struct.page, ptr %folio.0, i32 0, i32 1
  %index4.i141 = getelementptr inbounds %struct.anon, ptr %folio.0, i32 0, i32 3
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %folio.0, i32 0, i32 3
  br label %PageHead.exit.i.i.i.lr.ph

PageHead.exit.i.i.i.lr.ph:                        ; preds = %folio_ref_inc.exit.PageHead.exit.i.i.i.lr.ph_crit_edge, %PageHead.exit.i.i.i.lr.ph.lr.ph
  %61 = phi i32 [ %57, %PageHead.exit.i.i.i.lr.ph.lr.ph ], [ %93, %folio_ref_inc.exit.PageHead.exit.i.i.i.lr.ph_crit_edge ]
  %ret.1.ph211 = phi i32 [ %ret.0, %PageHead.exit.i.i.i.lr.ph.lr.ph ], [ %spec.select, %folio_ref_inc.exit.PageHead.exit.i.i.i.lr.ph_crit_edge ]
  %last_pgoff.1.ph210 = phi i32 [ %last_pgoff.0, %PageHead.exit.i.i.i.lr.ph.lr.ph ], [ %62, %folio_ref_inc.exit.PageHead.exit.i.i.i.lr.ph_crit_edge ]
  %mmap_miss.1.ph209 = phi i32 [ %mmap_miss.0, %PageHead.exit.i.i.i.lr.ph.lr.ph ], [ %mmap_miss.2, %folio_ref_inc.exit.PageHead.exit.i.i.i.lr.ph_crit_edge ]
  %addr.1.ph208 = phi i32 [ %addr.0, %PageHead.exit.i.i.i.lr.ph.lr.ph ], [ %add25, %folio_ref_inc.exit.PageHead.exit.i.i.i.lr.ph_crit_edge ]
  br label %PageHead.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then46.if.then.i.i.i.i_crit_edge, %folio_ref_inc.exit.if.then.i.i.i.i_crit_edge, %do.body13.if.then.i.i.i.i_crit_edge
  call void @dump_page(ptr noundef %folio.0, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i:                              ; preds = %if.then46.PageHead.exit.i.i.i_crit_edge, %PageHead.exit.i.i.i.lr.ph
  %62 = phi i32 [ %61, %PageHead.exit.i.i.i.lr.ph ], [ %inc48, %if.then46.PageHead.exit.i.i.i_crit_edge ]
  %last_pgoff.1205 = phi i32 [ %last_pgoff.1.ph210, %PageHead.exit.i.i.i.lr.ph ], [ %62, %if.then46.PageHead.exit.i.i.i_crit_edge ]
  %mmap_miss.1204 = phi i32 [ %mmap_miss.1.ph209, %PageHead.exit.i.i.i.lr.ph ], [ %mmap_miss.2, %if.then46.PageHead.exit.i.i.i_crit_edge ]
  %addr.1203 = phi i32 [ %addr.1.ph208, %PageHead.exit.i.i.i.lr.ph ], [ %add25, %if.then46.PageHead.exit.i.i.i_crit_edge ]
  %63 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %folio.0, align 4
  %65 = and i32 %64, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool.not.i.i.i = icmp eq i32 %65, 0
  br i1 %tobool.not.i.i.i, label %PageHead.exit.i.i.i.folio_file_page.exit_crit_edge, label %if.end.i.i.i

PageHead.exit.i.i.i.folio_file_page.exit_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_file_page.exit

if.end.i.i.i:                                     ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %66 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %compound_nr.i.i.i, align 4
  %phi.bo.i = add i32 %67, -1
  br label %folio_file_page.exit

folio_file_page.exit:                             ; preds = %if.end.i.i.i, %PageHead.exit.i.i.i.folio_file_page.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %phi.bo.i, %if.end.i.i.i ], [ 0, %PageHead.exit.i.i.i.folio_file_page.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mmap_miss.1204)
  %cmp.not = icmp eq i32 %mmap_miss.1204, 0
  %dec = add i32 %mmap_miss.1204, -1
  %mmap_miss.2 = select i1 %cmp.not, i32 0, i32 %dec
  %sub23 = sub i32 %62, %last_pgoff.1205
  %shl24 = shl i32 %sub23, 12
  %add25 = add i32 %shl24, %addr.1203
  %68 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %pte, align 4
  %add.ptr29 = getelementptr i32, ptr %69, i32 %sub23
  store ptr %add.ptr29, ptr %pte, align 4
  %70 = ptrtoint ptr %add.ptr29 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %add.ptr29, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool32.not = icmp eq i32 %71, 0
  br i1 %tobool32.not, label %if.end34, label %unlock

if.end34:                                         ; preds = %folio_file_page.exit
  %and.i124 = and i32 %retval.0.i.i.i, %62
  %add.ptr.i = getelementptr %struct.page, ptr %folio.0, i32 %and.i124
  %72 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %address, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %73, i32 %add25)
  %cmp35 = icmp eq i32 %73, %add25
  %spec.select = select i1 %cmp35, i32 256, i32 %ret.1.ph211
  call void @do_set_pte(ptr noundef %vmf, ptr noundef %add.ptr.i, i32 noundef %add25) #11
  %74 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %6, align 4
  %76 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %60, align 4
  %and.i.i.i.i.i125 = and i32 %77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i125)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i125, 0
  br i1 %tobool.not.i.i.i.i, label %folio_test_large.exit.i, label %if.then.i.i.i.i126, !prof !299

if.then.i.i.i.i126:                               ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio.0, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_large.exit.i:                          ; preds = %if.end34
  %78 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %folio.0, align 4
  %80 = and i32 %79, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool.i.i.i = icmp ne i32 %80, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %75, i32 %end_pgoff)
  %cmp.not.i = icmp ult i32 %75, %end_pgoff
  %or.cond.i = and i1 %cmp.not.i, %tobool.i.i.i
  br i1 %or.cond.i, label %if.end3.i, label %folio_test_large.exit.i.if.end43_crit_edge

folio_test_large.exit.i.if.end43_crit_edge:       ; preds = %folio_test_large.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end43

if.end3.i:                                        ; preds = %folio_test_large.exit.i
  %81 = ptrtoint ptr %index4.i141 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %index4.i141, align 4
  %83 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %folio.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %84)
  %cmp.i.not.i.i.i.i127 = icmp eq i32 %84, -1
  br i1 %cmp.i.not.i.i.i.i127, label %if.then.i.i.i11.i, label %PageHead.exit.i.i.i129, !prof !300

if.then.i.i.i11.i:                                ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio.0, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i129:                           ; preds = %if.end3.i
  %85 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %folio.0, align 4
  %87 = and i32 %86, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %tobool.not.i.i.i128 = icmp eq i32 %87, 0
  br i1 %tobool.not.i.i.i128, label %PageHead.exit.i.i.i129.folio_more_pages.exit_crit_edge, label %if.end.i.i.i131

PageHead.exit.i.i.i129.folio_more_pages.exit_crit_edge: ; preds = %PageHead.exit.i.i.i129
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_more_pages.exit

if.end.i.i.i131:                                  ; preds = %PageHead.exit.i.i.i129
  call void @__sanitizer_cov_trace_pc() #13
  %88 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_more_pages.exit

folio_more_pages.exit:                            ; preds = %if.end.i.i.i131, %PageHead.exit.i.i.i129.folio_more_pages.exit_crit_edge
  %retval.0.i.i.i132 = phi i32 [ %89, %if.end.i.i.i131 ], [ 1, %PageHead.exit.i.i.i129.folio_more_pages.exit_crit_edge ]
  %add.i = add i32 %82, -1
  %sub.i133 = add i32 %add.i, %retval.0.i.i.i132
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i133, i32 %75)
  %cmp6.i = icmp ugt i32 %sub.i133, %75
  br i1 %cmp6.i, label %if.then41, label %folio_more_pages.exit.if.end43_crit_edge

folio_more_pages.exit.if.end43_crit_edge:         ; preds = %folio_more_pages.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end43

if.then41:                                        ; preds = %folio_more_pages.exit
  %inc = add nuw i32 %75, 1
  %90 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %inc, ptr %6, align 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #11
  call void @llvm.prefetch.p0(ptr %_refcount.i.i, i32 1, i32 3, i32 1) #11
  %91 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i, ptr %_refcount.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i) #11, !srcloc !332
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@filemap_map_pages, %if.then.i.i)) #11
          to label %folio_ref_inc.exit [label %if.then.i.i], !srcloc !306

if.then.i.i:                                      ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #13
  call void @__page_ref_mod(ptr noundef %folio.0, i32 noundef 1) #11
  br label %folio_ref_inc.exit

folio_ref_inc.exit:                               ; preds = %if.then.i.i, %if.then41
  %92 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %6, align 4
  %94 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %folio.0, align 4
  %cmp.i.not.i.i.i.i202 = icmp eq i32 %95, -1
  br i1 %cmp.i.not.i.i.i.i202, label %folio_ref_inc.exit.if.then.i.i.i.i_crit_edge, label %folio_ref_inc.exit.PageHead.exit.i.i.i.lr.ph_crit_edge, !prof !300

folio_ref_inc.exit.PageHead.exit.i.i.i.lr.ph_crit_edge: ; preds = %folio_ref_inc.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %PageHead.exit.i.i.i.lr.ph

folio_ref_inc.exit.if.then.i.i.i.i_crit_edge:     ; preds = %folio_ref_inc.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i.i.i.i

if.end43:                                         ; preds = %folio_more_pages.exit.if.end43_crit_edge, %folio_test_large.exit.i.if.end43_crit_edge
  call void @folio_unlock(ptr noundef %folio.0)
  br label %do.cond50

unlock:                                           ; preds = %folio_file_page.exit
  %96 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile i32, ptr %60, align 4
  %and.i.i.i.i.i134 = and i32 %97, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i134)
  %tobool.not.i.i.i.i135 = icmp eq i32 %and.i.i.i.i.i134, 0
  br i1 %tobool.not.i.i.i.i135, label %folio_test_large.exit.i140, label %if.then.i.i.i.i136, !prof !299

if.then.i.i.i.i136:                               ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio.0, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_large.exit.i140:                       ; preds = %unlock
  %98 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load volatile i32, ptr %folio.0, align 4
  %100 = and i32 %99, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %100)
  %tobool.i.i.i137 = icmp ne i32 %100, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %62, i32 %end_pgoff)
  %cmp.not.i138 = icmp ult i32 %62, %end_pgoff
  %or.cond.i139 = and i1 %cmp.not.i138, %tobool.i.i.i137
  br i1 %or.cond.i139, label %if.end3.i143, label %folio_test_large.exit.i140.if.end49_crit_edge

folio_test_large.exit.i140.if.end49_crit_edge:    ; preds = %folio_test_large.exit.i140
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end49

if.end3.i143:                                     ; preds = %folio_test_large.exit.i140
  %101 = ptrtoint ptr %index4.i141 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %index4.i141, align 4
  %103 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile i32, ptr %folio.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %104)
  %cmp.i.not.i.i.i.i142 = icmp eq i32 %104, -1
  br i1 %cmp.i.not.i.i.i.i142, label %if.then.i.i.i11.i144, label %PageHead.exit.i.i.i146, !prof !300

if.then.i.i.i11.i144:                             ; preds = %if.end3.i143
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio.0, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i146:                           ; preds = %if.end3.i143
  %105 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %folio.0, align 4
  %107 = and i32 %106, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %107)
  %tobool.not.i.i.i145 = icmp eq i32 %107, 0
  br i1 %tobool.not.i.i.i145, label %PageHead.exit.i.i.i146.folio_more_pages.exit155_crit_edge, label %if.end.i.i.i148

PageHead.exit.i.i.i146.folio_more_pages.exit155_crit_edge: ; preds = %PageHead.exit.i.i.i146
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_more_pages.exit155

if.end.i.i.i148:                                  ; preds = %PageHead.exit.i.i.i146
  call void @__sanitizer_cov_trace_pc() #13
  %108 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %folio_more_pages.exit155

folio_more_pages.exit155:                         ; preds = %if.end.i.i.i148, %PageHead.exit.i.i.i146.folio_more_pages.exit155_crit_edge
  %retval.0.i.i.i149 = phi i32 [ %109, %if.end.i.i.i148 ], [ 1, %PageHead.exit.i.i.i146.folio_more_pages.exit155_crit_edge ]
  %add.i150 = add i32 %102, -1
  %sub.i151 = add i32 %add.i150, %retval.0.i.i.i149
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i151, i32 %62)
  %cmp6.i152 = icmp ugt i32 %sub.i151, %62
  br i1 %cmp6.i152, label %if.then46, label %folio_more_pages.exit155.if.end49_crit_edge

folio_more_pages.exit155.if.end49_crit_edge:      ; preds = %folio_more_pages.exit155
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end49

if.then46:                                        ; preds = %folio_more_pages.exit155
  %inc48 = add nuw i32 %62, 1
  %110 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %inc48, ptr %6, align 4
  %111 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %folio.0, align 4
  %cmp.i.not.i.i.i.i = icmp eq i32 %112, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then46.if.then.i.i.i.i_crit_edge, label %if.then46.PageHead.exit.i.i.i_crit_edge, !prof !300

if.then46.PageHead.exit.i.i.i_crit_edge:          ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #13
  br label %PageHead.exit.i.i.i

if.then46.if.then.i.i.i.i_crit_edge:              ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i.i.i.i

if.end49:                                         ; preds = %folio_more_pages.exit155.if.end49_crit_edge, %folio_test_large.exit.i140.if.end49_crit_edge
  call void @folio_unlock(ptr noundef %folio.0)
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #11
  %113 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %_refcount.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %114)
  %cmp.i.i.i = icmp eq i32 %114, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef %folio.0, ptr noundef nonnull @.str.49) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %if.end49
  %call.i.i.i10.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  call void @llvm.prefetch.p0(ptr %_refcount.i.i, i32 1, i32 3, i32 1) #11
  %115 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i, ptr %_refcount.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %115, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@filemap_map_pages, %if.then.i.i.i.i156)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i156], !srcloc !306

if.then.i.i.i.i156:                               ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %folio.0, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i156, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i157, label %folio_put_testzero.exit.i.do.cond50_crit_edge

folio_put_testzero.exit.i.do.cond50_crit_edge:    ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.cond50

if.then.i157:                                     ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  call void @__put_page(ptr noundef %folio.0) #11
  br label %do.cond50

do.cond50:                                        ; preds = %if.then.i157, %folio_put_testzero.exit.i.do.cond50_crit_edge, %if.end43
  %ret.3 = phi i32 [ %spec.select, %if.end43 ], [ %ret.1.ph211, %folio_put_testzero.exit.i.do.cond50_crit_edge ], [ %ret.1.ph211, %if.then.i157 ]
  %call.i158 = call fastcc ptr @xas_next_entry(ptr noundef nonnull %xas, i32 noundef %end_pgoff) #11
  %call1.i159 = call fastcc ptr @next_uptodate_page(ptr noundef %call.i158, ptr noundef %5, ptr noundef nonnull %xas, i32 noundef %end_pgoff) #11
  %cmp52.not = icmp eq ptr %call1.i159, null
  br i1 %cmp52.not, label %do.body54, label %do.cond50.do.body13_crit_edge

do.cond50.do.body13_crit_edge:                    ; preds = %do.cond50
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body13

do.body54:                                        ; preds = %do.cond50
  call void @__sanitizer_cov_trace_pc() #13
  %116 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %ptl, align 4
  call void @_raw_spin_unlock(ptr noundef %117) #11
  %118 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %pte, align 4
  call void @kunmap_local_indexed(ptr noundef %119) #11
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !342
  %120 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i1.i = and i32 %120, -16384
  %121 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %121, i32 0, i32 2
  %122 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %123, i32 0, i32 213
  %124 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %125, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !343
  %126 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i = and i32 %126, -16384
  %127 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %127, i32 0, i32 1
  %128 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %129, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br label %out

out:                                              ; preds = %do.body54, %rcu_read_lock.exit.out_crit_edge
  %mmap_miss.5 = phi i32 [ %mmap_miss.2, %do.body54 ], [ %18, %rcu_read_lock.exit.out_crit_edge ]
  %ret.4 = phi i32 [ %ret.3, %do.body54 ], [ 0, %rcu_read_lock.exit.out_crit_edge ]
  %call.i160 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i160, label %out.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i163

out.rcu_read_unlock.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i163:                               ; preds = %out
  %call1.i161 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i161)
  %tobool.not.i162 = icmp eq i32 %call1.i161, 0
  br i1 %tobool.not.i162, label %land.lhs.true.i163.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i165

land.lhs.true.i163.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i163
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i165:                              ; preds = %land.lhs.true.i163
  %.b4.i164 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i164, label %land.lhs.true2.i165.rcu_read_unlock.exit_crit_edge, label %if.then.i166

land.lhs.true2.i165.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i165
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i166:                                     ; preds = %land.lhs.true2.i165
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i166, %land.lhs.true2.i165.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i163.rcu_read_unlock.exit_crit_edge, %out.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %130 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i167 = and i32 %130, -16384
  %131 = inttoptr i32 %and.i.i.i.i.i167 to ptr
  %preempt_count.i.i.i.i168 = getelementptr inbounds %struct.thread_info, ptr %131, i32 0, i32 1
  %132 = ptrtoint ptr %preempt_count.i.i.i.i168 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load volatile i32, ptr %preempt_count.i.i.i.i168, align 4
  %sub.i.i.i = add i32 %133, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i168, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  %134 = ptrtoint ptr %mmap_miss2 to i32
  call void @__asan_store4_noabort(i32 %134)
  store volatile i32 %mmap_miss.5, ptr %mmap_miss2, align 8
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret i32 %ret.4
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_set_pte(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @filemap_page_mkwrite(ptr nocapture noundef readonly %vmf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 14
  %2 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_file, align 4
  %f_mapping = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 18
  %4 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %f_mapping, align 4
  %page = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %6 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %page, align 4
  %8 = getelementptr inbounds %struct.page, ptr %7, i32 0, i32 1
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %8, align 4
  %and.i = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !299

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %sub.i = add i32 %10, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %11 = ptrtoint ptr %7 to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %11, %if.end.i ]
  %12 = inttoptr i32 %retval.0.i to ptr
  %13 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %5, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %14, i32 0, i32 8
  %15 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %i_sb, align 4
  %add.ptr1.i.i = getelementptr %struct.super_block, ptr %16, i32 0, i32 32, i32 2, i32 1
  tail call void @__might_sleep(ptr noundef nonnull @.str.55, i32 noundef 49) #11
  %dep_map.i.i.i = getelementptr %struct.super_block, ptr %16, i32 0, i32 32, i32 2, i32 1, i32 5
  %17 = tail call ptr @llvm.returnaddress(i32 0) #11
  %18 = ptrtoint ptr %17 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1, i32 noundef 1, ptr noundef null, i32 noundef %18) #11
  %19 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %22, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !381
  %call.i.i.i.i = tail call i32 @rcu_read_lock_any_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.i.i.i, label %_compound_head.exit.rcu_sync_is_idle.exit.i.i.i_crit_edge

_compound_head.exit.rcu_sync_is_idle.exit.i.i.i_crit_edge: ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_sync_is_idle.exit.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %_compound_head.exit
  %call1.i.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool2.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool2.not.i.i.i.i, label %land.lhs.true.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, label %land.lhs.true3.i.i.i.i

land.lhs.true.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_sync_is_idle.exit.i.i.i

land.lhs.true3.i.i.i.i:                           ; preds = %land.lhs.true.i.i.i.i
  %.b8.i.i.i.i = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b8.i.i.i.i, label %land.lhs.true3.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

land.lhs.true3.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge: ; preds = %land.lhs.true3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_sync_is_idle.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.lhs.true3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.56, i32 noundef 35, ptr noundef nonnull @.str.57) #11
  br label %rcu_sync_is_idle.exit.i.i.i

rcu_sync_is_idle.exit.i.i.i:                      ; preds = %if.then.i.i.i.i, %land.lhs.true3.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, %_compound_head.exit.rcu_sync_is_idle.exit.i.i.i_crit_edge
  %23 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %add.ptr1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool7.not.i.i.i.i = icmp eq i32 %24, 0
  br i1 %tobool7.not.i.i.i.i, label %do.body7.i.i.i, label %if.else.i.i.i, !prof !299

do.body7.i.i.i:                                   ; preds = %rcu_sync_is_idle.exit.i.i.i
  %25 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !371
  %read_count.i.i.i = getelementptr %struct.super_block, ptr %16, i32 0, i32 32, i32 2, i32 1, i32 1
  %26 = ptrtoint ptr %read_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %read_count.i.i.i, align 4
  %28 = ptrtoint ptr %27 to i32
  %29 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %32
  %33 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %34, %28
  %35 = inttoptr i32 %add.i.i.i to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  %add21.i.i.i = add i32 %37, 1
  store i32 %add21.i.i.i, ptr %35, align 4
  %38 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !372
  %and.i.i.i.i.i = and i32 %38, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool32.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool32.not.i.i.i, label %if.then41.i.i.i, label %do.body7.i.i.i.do.end43.i.i.i_crit_edge, !prof !300

do.body7.i.i.i.do.end43.i.i.i_crit_edge:          ; preds = %do.body7.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end43.i.i.i

if.then41.i.i.i:                                  ; preds = %do.body7.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @warn_bogus_irq_restore() #11
  br label %do.end43.i.i.i

do.end43.i.i.i:                                   ; preds = %if.then41.i.i.i, %do.body7.i.i.i.do.end43.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %25) #11, !srcloc !373
  br label %sb_start_pagefault.exit

if.else.i.i.i:                                    ; preds = %rcu_sync_is_idle.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %call50.i.i.i = tail call zeroext i1 @__percpu_down_read(ptr noundef %add.ptr1.i.i, i1 noundef zeroext false) #11
  br label %sb_start_pagefault.exit

sb_start_pagefault.exit:                          ; preds = %if.else.i.i.i, %do.end43.i.i.i
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !382
  %39 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i58.i.i.i = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i.i58.i.i.i to ptr
  %preempt_count.i.i59.i.i.i = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %preempt_count.i.i59.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %preempt_count.i.i59.i.i.i, align 4
  %sub.i.i.i.i = add i32 %42, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i59.i.i.i, align 4
  %43 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %vmf, align 4
  %vm_file2 = getelementptr inbounds %struct.vm_area_struct, ptr %44, i32 0, i32 14
  %45 = ptrtoint ptr %vm_file2 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %vm_file2, align 4
  %call3 = tail call i32 @file_update_time(ptr noundef %46) #11
  tail call void @__might_sleep(ptr noundef nonnull @.str.38, i32 noundef 777) #11
  %47 = getelementptr inbounds %struct.page, ptr %12, i32 0, i32 1
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %47, align 4
  %and.i.i.i.i16 = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i16)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i16, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %sb_start_pagefault.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %12, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i.i:                             ; preds = %sb_start_pagefault.exit
  %call.i.i.i.i17 = tail call zeroext i1 @__kasan_check_write(ptr noundef %12, i32 noundef 4) #11
  %50 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %12, align 4
  %and.i.i4.i.i = and i32 %51, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i18 = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i18, label %folio_trylock.exit.i, label %folio_flags.exit.i.i.if.then.i19_crit_edge

folio_flags.exit.i.i.if.then.i19_crit_edge:       ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i19

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %12, i32 1, i32 3, i32 1) #11
  %52 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %12, ptr %12, i32 1, ptr elementtype(i32) %12) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %52, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.folio_lock.exit_crit_edge, label %folio_trylock.exit.i.if.then.i19_crit_edge

folio_trylock.exit.i.if.then.i19_crit_edge:       ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i19

folio_trylock.exit.i.folio_lock.exit_crit_edge:   ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_lock.exit

if.then.i19:                                      ; preds = %folio_trylock.exit.i.if.then.i19_crit_edge, %folio_flags.exit.i.i.if.then.i19_crit_edge
  %call.i.i = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %12, i32 noundef 0, i32 noundef 2, i32 noundef 0) #11
  br label %folio_lock.exit

folio_lock.exit:                                  ; preds = %if.then.i19, %folio_trylock.exit.i.folio_lock.exit_crit_edge
  %mapping4 = getelementptr inbounds %struct.anon, ptr %12, i32 0, i32 2
  %53 = ptrtoint ptr %mapping4 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %mapping4, align 4
  %cmp.not = icmp eq ptr %54, %5
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %folio_lock.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @folio_unlock(ptr noundef %12)
  br label %out

if.end:                                           ; preds = %folio_lock.exit
  call void @__sanitizer_cov_trace_pc() #13
  %call5 = tail call zeroext i1 @folio_mark_dirty(ptr noundef %12) #11
  tail call void @folio_wait_stable(ptr noundef %12) #11
  br label %out

out:                                              ; preds = %if.end, %if.then
  %ret.0 = phi i32 [ 256, %if.then ], [ 512, %if.end ]
  %55 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %5, align 4
  %i_sb7 = getelementptr inbounds %struct.inode, ptr %56, i32 0, i32 8
  %57 = ptrtoint ptr %i_sb7 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %i_sb7, align 4
  %add.ptr1.i.i21 = getelementptr %struct.super_block, ptr %58, i32 0, i32 32, i32 2, i32 1
  %dep_map.i.i.i22 = getelementptr %struct.super_block, ptr %58, i32 0, i32 32, i32 2, i32 1, i32 5
  tail call void @lock_release(ptr noundef %dep_map.i.i.i22, i32 noundef %18) #11
  %59 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i.i23 = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i.i.i.i.i23 to ptr
  %preempt_count.i.i.i.i.i24 = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %preempt_count.i.i.i.i.i24 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %preempt_count.i.i.i.i.i24, align 4
  %add.i.i.i.i25 = add i32 %62, 1
  store volatile i32 %add.i.i.i.i25, ptr %preempt_count.i.i.i.i.i24, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !383
  %call.i.i.i.i26 = tail call i32 @rcu_read_lock_any_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i26)
  %tobool.not.i.i.i.i27 = icmp eq i32 %call.i.i.i.i26, 0
  br i1 %tobool.not.i.i.i.i27, label %land.lhs.true.i.i.i.i30, label %out.rcu_sync_is_idle.exit.i.i.i35_crit_edge

out.rcu_sync_is_idle.exit.i.i.i35_crit_edge:      ; preds = %out
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_sync_is_idle.exit.i.i.i35

land.lhs.true.i.i.i.i30:                          ; preds = %out
  %call1.i.i.i.i28 = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i28)
  %tobool2.not.i.i.i.i29 = icmp eq i32 %call1.i.i.i.i28, 0
  br i1 %tobool2.not.i.i.i.i29, label %land.lhs.true.i.i.i.i30.rcu_sync_is_idle.exit.i.i.i35_crit_edge, label %land.lhs.true3.i.i.i.i32

land.lhs.true.i.i.i.i30.rcu_sync_is_idle.exit.i.i.i35_crit_edge: ; preds = %land.lhs.true.i.i.i.i30
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_sync_is_idle.exit.i.i.i35

land.lhs.true3.i.i.i.i32:                         ; preds = %land.lhs.true.i.i.i.i30
  %.b8.i.i.i.i31 = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b8.i.i.i.i31, label %land.lhs.true3.i.i.i.i32.rcu_sync_is_idle.exit.i.i.i35_crit_edge, label %if.then.i.i.i.i33

land.lhs.true3.i.i.i.i32.rcu_sync_is_idle.exit.i.i.i35_crit_edge: ; preds = %land.lhs.true3.i.i.i.i32
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_sync_is_idle.exit.i.i.i35

if.then.i.i.i.i33:                                ; preds = %land.lhs.true3.i.i.i.i32
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.56, i32 noundef 35, ptr noundef nonnull @.str.57) #11
  br label %rcu_sync_is_idle.exit.i.i.i35

rcu_sync_is_idle.exit.i.i.i35:                    ; preds = %if.then.i.i.i.i33, %land.lhs.true3.i.i.i.i32.rcu_sync_is_idle.exit.i.i.i35_crit_edge, %land.lhs.true.i.i.i.i30.rcu_sync_is_idle.exit.i.i.i35_crit_edge, %out.rcu_sync_is_idle.exit.i.i.i35_crit_edge
  %63 = ptrtoint ptr %add.ptr1.i.i21 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %add.ptr1.i.i21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool7.not.i.i.i.i34 = icmp eq i32 %64, 0
  br i1 %tobool7.not.i.i.i.i34, label %do.body3.i.i.i, label %do.end49.i.i.i, !prof !299

do.body3.i.i.i:                                   ; preds = %rcu_sync_is_idle.exit.i.i.i35
  %65 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !371
  %read_count.i.i.i36 = getelementptr %struct.super_block, ptr %58, i32 0, i32 32, i32 2, i32 1, i32 1
  %66 = ptrtoint ptr %read_count.i.i.i36 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %read_count.i.i.i36, align 4
  %68 = ptrtoint ptr %67 to i32
  %69 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i37 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i.i37 to ptr
  %cpu.i.i.i38 = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 3
  %71 = ptrtoint ptr %cpu.i.i.i38 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %cpu.i.i.i38, align 4
  %arrayidx.i.i.i39 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %72
  %73 = ptrtoint ptr %arrayidx.i.i.i39 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx.i.i.i39, align 4
  %add.i.i.i40 = add i32 %74, %68
  %75 = inttoptr i32 %add.i.i.i40 to ptr
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %75, align 4
  %add17.i.i.i = add i32 %77, -1
  store i32 %add17.i.i.i, ptr %75, align 4
  %78 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !372
  %and.i.i.i.i.i41 = and i32 %78, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i41)
  %tobool28.not.i.i.i = icmp eq i32 %and.i.i.i.i.i41, 0
  br i1 %tobool28.not.i.i.i, label %if.then37.i.i.i, label %do.body3.i.i.i.do.end39.i.i.i_crit_edge, !prof !300

do.body3.i.i.i.do.end39.i.i.i_crit_edge:          ; preds = %do.body3.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end39.i.i.i

if.then37.i.i.i:                                  ; preds = %do.body3.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @warn_bogus_irq_restore() #11
  br label %do.end39.i.i.i

do.end39.i.i.i:                                   ; preds = %if.then37.i.i.i, %do.body3.i.i.i.do.end39.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %65) #11, !srcloc !373
  br label %sb_end_pagefault.exit

do.end49.i.i.i:                                   ; preds = %rcu_sync_is_idle.exit.i.i.i35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !384
  %79 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #11, !srcloc !371
  %read_count75.i.i.i = getelementptr %struct.super_block, ptr %58, i32 0, i32 32, i32 2, i32 1, i32 1
  %80 = ptrtoint ptr %read_count75.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %read_count75.i.i.i, align 4
  %82 = ptrtoint ptr %81 to i32
  %83 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i122.i.i.i = and i32 %83, -16384
  %84 = inttoptr i32 %and.i122.i.i.i to ptr
  %cpu78.i.i.i = getelementptr inbounds %struct.thread_info, ptr %84, i32 0, i32 3
  %85 = ptrtoint ptr %cpu78.i.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %cpu78.i.i.i, align 4
  %arrayidx79.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %86
  %87 = ptrtoint ptr %arrayidx79.i.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %arrayidx79.i.i.i, align 4
  %add80.i.i.i = add i32 %88, %82
  %89 = inttoptr i32 %add80.i.i.i to ptr
  %90 = ptrtoint ptr %89 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %89, align 4
  %add81.i.i.i = add i32 %91, -1
  store i32 %add81.i.i.i, ptr %89, align 4
  %92 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #11, !srcloc !372
  %and.i.i123.i.i.i = and i32 %92, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i123.i.i.i)
  %tobool92.not.i.i.i = icmp eq i32 %and.i.i123.i.i.i, 0
  br i1 %tobool92.not.i.i.i, label %if.then101.i.i.i, label %do.end49.i.i.i.do.end104.i.i.i_crit_edge, !prof !300

do.end49.i.i.i.do.end104.i.i.i_crit_edge:         ; preds = %do.end49.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end104.i.i.i

if.then101.i.i.i:                                 ; preds = %do.end49.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @warn_bogus_irq_restore() #11
  br label %do.end104.i.i.i

do.end104.i.i.i:                                  ; preds = %if.then101.i.i.i, %do.end49.i.i.i.do.end104.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %79) #11, !srcloc !373
  %writer.i.i.i = getelementptr %struct.super_block, ptr %58, i32 0, i32 32, i32 2, i32 1, i32 2
  %call111.i.i.i = tail call i32 @rcuwait_wake_up(ptr noundef %writer.i.i.i) #11
  br label %sb_end_pagefault.exit

sb_end_pagefault.exit:                            ; preds = %do.end104.i.i.i, %do.end39.i.i.i
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !385
  %93 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i120.i.i.i = and i32 %93, -16384
  %94 = inttoptr i32 %and.i.i.i120.i.i.i to ptr
  %preempt_count.i.i121.i.i.i = getelementptr inbounds %struct.thread_info, ptr %94, i32 0, i32 1
  %95 = ptrtoint ptr %preempt_count.i.i121.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %preempt_count.i.i121.i.i.i, align 4
  %sub.i.i.i.i42 = add i32 %96, -1
  store volatile i32 %sub.i.i.i.i42, ptr %preempt_count.i.i121.i.i.i, align 4
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @file_update_time(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @folio_mark_dirty(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_file_mmap(ptr noundef %file, ptr nocapture noundef writeonly %vma) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %f_mapping = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 18
  %0 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_mapping, align 4
  %a_ops = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %a_ops, align 4
  %readpage = getelementptr inbounds %struct.address_space_operations, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %readpage to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %readpage, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %f_flags.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %6 = ptrtoint ptr %f_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %f_flags.i, align 4
  %and.i = and i32 %7, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end.file_accessed.exit_crit_edge

if.end.file_accessed.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %file_accessed.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %f_path.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  tail call void @touch_atime(ptr noundef %f_path.i) #11
  br label %file_accessed.exit

file_accessed.exit:                               ; preds = %if.then.i, %if.end.file_accessed.exit_crit_edge
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 12
  %8 = ptrtoint ptr %vm_ops to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @generic_file_vm_ops, ptr %vm_ops, align 4
  br label %cleanup

cleanup:                                          ; preds = %file_accessed.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %file_accessed.exit ], [ -8, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_file_readonly_mmap(ptr noundef %file, ptr nocapture noundef %vma) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %0 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_flags, align 4
  %2 = and i32 %1, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 40, i32 %2)
  %.not = icmp eq i32 %2, 40
  br i1 %.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end:                                           ; preds = %entry
  %f_mapping.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 18
  %3 = ptrtoint ptr %f_mapping.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_mapping.i, align 4
  %a_ops.i = getelementptr inbounds %struct.address_space, ptr %4, i32 0, i32 9
  %5 = ptrtoint ptr %a_ops.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %a_ops.i, align 4
  %readpage.i = getelementptr inbounds %struct.address_space_operations, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %readpage.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %readpage.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end.return_crit_edge, label %if.end.i

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %return

if.end.i:                                         ; preds = %if.end
  %f_flags.i.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 7
  %9 = ptrtoint ptr %f_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %f_flags.i.i, align 4
  %and.i.i = and i32 %10, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end.i.file_accessed.exit.i_crit_edge

if.end.i.file_accessed.exit.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %file_accessed.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  %f_path.i.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  tail call void @touch_atime(ptr noundef %f_path.i.i) #11
  br label %file_accessed.exit.i

file_accessed.exit.i:                             ; preds = %if.then.i.i, %if.end.i.file_accessed.exit.i_crit_edge
  %vm_ops.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 12
  %11 = ptrtoint ptr %vm_ops.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @generic_file_vm_ops, ptr %vm_ops.i, align 4
  br label %return

return:                                           ; preds = %file_accessed.exit.i, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -22, %entry.return_crit_edge ], [ 0, %file_accessed.exit.i ], [ -8, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @read_cache_folio(ptr noundef %mapping, i32 noundef %index, ptr noundef %filler, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %gfp_mask.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 3
  %0 = ptrtoint ptr %gfp_mask.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %gfp_mask.i, align 4
  %call1 = tail call fastcc ptr @do_read_cache_folio(ptr noundef %mapping, i32 noundef %index, ptr noundef %filler, ptr noundef %data, i32 noundef %1)
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @do_read_cache_folio(ptr noundef %mapping, i32 noundef %index, ptr noundef readonly %filler, ptr noundef %data, i32 noundef %gfp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  br label %repeat

repeat:                                           ; preds = %repeat.backedge, %entry
  %call.i = tail call ptr @__filemap_get_folio(ptr noundef %mapping, i32 noundef %index, i32 noundef 0, i32 noundef 0) #11
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %if.then, label %if.end28

if.then:                                          ; preds = %repeat
  %call38.i.i.i = tail call ptr @__folio_alloc(i32 noundef %gfp, i32 noundef 0, i32 noundef 0, ptr noundef null) #11
  %tobool2.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool2.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %if.then
  %call5 = tail call i32 @filemap_add_folio(ptr noundef %mapping, ptr noundef nonnull %call38.i.i.i, i32 noundef %index, i32 noundef %gfp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end.filler14_crit_edge, label %if.then9, !prof !299

if.end.filler14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %filler14

if.then9:                                         ; preds = %if.end
  tail call fastcc void @folio_put(ptr noundef nonnull %call38.i.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call5)
  %cmp = icmp eq i32 %call5, -17
  br i1 %cmp, label %if.then9.repeat.backedge_crit_edge, label %if.end11

if.then9.repeat.backedge_crit_edge:               ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #13
  br label %repeat.backedge

if.end11:                                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #13
  %0 = inttoptr i32 %call5 to ptr
  br label %cleanup

filler14:                                         ; preds = %folio_clear_error.exit, %if.end.filler14_crit_edge
  %folio.0 = phi ptr [ %call.i, %folio_clear_error.exit ], [ %call38.i.i.i, %if.end.filler14_crit_edge ]
  %tobool15.not = icmp eq ptr %filler, null
  br i1 %tobool15.not, label %if.else, label %filler14.if.end19_crit_edge

filler14.if.end19_crit_edge:                      ; preds = %filler14
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end19

if.else:                                          ; preds = %filler14
  call void @__sanitizer_cov_trace_pc() #13
  %a_ops = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %1 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %a_ops, align 4
  %readpage = getelementptr inbounds %struct.address_space_operations, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %readpage to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %readpage, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.else, %filler14.if.end19_crit_edge
  %.sink = phi ptr [ %4, %if.else ], [ %filler, %filler14.if.end19_crit_edge ]
  %call18 = tail call i32 %.sink(ptr noundef %data, ptr noundef nonnull %folio.0) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %cmp20 = icmp slt i32 %call18, 0
  br i1 %cmp20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.end19
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio.0, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %5 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.i.i.i = icmp eq i32 %6, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %if.then21
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %7, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_read_cache_folio, %if.then.i.i.i.i)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef nonnull %folio.0, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i, label %folio_put_testzero.exit.i.folio_put.exit_crit_edge

folio_put_testzero.exit.i.folio_put.exit_crit_edge: ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_put.exit

if.then.i:                                        ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef nonnull %folio.0) #11
  br label %folio_put.exit

folio_put.exit:                                   ; preds = %if.then.i, %folio_put_testzero.exit.i.folio_put.exit_crit_edge
  %8 = inttoptr i32 %call18 to ptr
  br label %cleanup

if.end23:                                         ; preds = %if.end19
  %9 = getelementptr inbounds %struct.page, ptr %folio.0, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %9, align 4
  %and.i.i.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_test_locked.exit.i, label %if.then.i.i.i74, !prof !299

if.then.i.i.i74:                                  ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit.i:                         ; preds = %if.end23
  %12 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %folio.0, align 4
  %and1.i.i.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %folio_test_locked.exit.i.folio_wait_locked.exit_crit_edge, label %if.then.i75

folio_test_locked.exit.i.folio_wait_locked.exit_crit_edge: ; preds = %folio_test_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_wait_locked.exit

if.then.i75:                                      ; preds = %folio_test_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  %call.i.i = tail call fastcc i32 @folio_wait_bit_common(ptr noundef nonnull %folio.0, i32 noundef 0, i32 noundef 2, i32 noundef 1) #11
  br label %folio_wait_locked.exit

folio_wait_locked.exit:                           ; preds = %if.then.i75, %folio_test_locked.exit.i.folio_wait_locked.exit_crit_edge
  %14 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %9, align 4
  %and.i.i.i76 = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i76)
  %tobool.not.i.i77 = icmp eq i32 %and.i.i.i76, 0
  br i1 %tobool.not.i.i77, label %folio_flags.exit.i, label %if.then.i.i78, !prof !299

if.then.i.i78:                                    ; preds = %folio_wait_locked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %folio_wait_locked.exit
  %16 = ptrtoint ptr %folio.0 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %folio.0, align 4
  %18 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.i.not = icmp eq i32 %18, 0
  br i1 %tobool.i.not, label %if.then25, label %folio_test_uptodate.exit.thread

folio_test_uptodate.exit.thread:                  ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  br label %out

if.then25:                                        ; preds = %folio_flags.exit.i
  %_refcount.i.i.i.i79 = getelementptr inbounds %struct.page, ptr %folio.0, i32 0, i32 3
  %call.i.i.i.i.i.i80 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i79, i32 noundef 4) #11
  %19 = ptrtoint ptr %_refcount.i.i.i.i79 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %_refcount.i.i.i.i79, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.i.i.i81 = icmp eq i32 %20, 0
  br i1 %cmp.i.i.i81, label %if.then.i.i.i82, label %do.end5.i.i.i86, !prof !300

if.then.i.i.i82:                                  ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.0, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i86:                                  ; preds = %if.then25
  %call.i.i.i10.i.i.i83 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i79, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i79, i32 1, i32 3, i32 1) #11
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i79, ptr %_refcount.i.i.i.i79, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i79) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i84 = extractvalue { i32, i32 } %21, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i84)
  %cmp.i.i.i.i.i.i85 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i84, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_read_cache_folio, %if.then.i.i.i.i88)) #11
          to label %folio_put_testzero.exit.i89 [label %if.then.i.i.i.i88], !srcloc !306

if.then.i.i.i.i88:                                ; preds = %do.end5.i.i.i86
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i87 = zext i1 %cmp.i.i.i.i.i.i85 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef nonnull %folio.0, i32 noundef -1, i32 noundef %conv.i.i.i.i87) #11
  br label %folio_put_testzero.exit.i89

folio_put_testzero.exit.i89:                      ; preds = %if.then.i.i.i.i88, %do.end5.i.i.i86
  br i1 %cmp.i.i.i.i.i.i85, label %if.then.i90, label %folio_put_testzero.exit.i89.cleanup_crit_edge

folio_put_testzero.exit.i89.cleanup_crit_edge:    ; preds = %folio_put_testzero.exit.i89
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then.i90:                                      ; preds = %folio_put_testzero.exit.i89
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef nonnull %folio.0) #11
  br label %cleanup

if.end28:                                         ; preds = %repeat
  %22 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %22, align 4
  %and.i.i.i92 = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i92)
  %tobool.not.i.i93 = icmp eq i32 %and.i.i.i92, 0
  br i1 %tobool.not.i.i93, label %folio_flags.exit.i96, label %if.then.i.i94, !prof !299

if.then.i.i94:                                    ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i96:                             ; preds = %if.end28
  %25 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %call.i, align 4
  %27 = and i32 %26, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.i95.not = icmp eq i32 %27, 0
  br i1 %tobool.i95.not, label %if.end31, label %folio_test_uptodate.exit98.thread

folio_test_uptodate.exit98.thread:                ; preds = %folio_flags.exit.i96
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  br label %out

if.end31:                                         ; preds = %folio_flags.exit.i96
  %28 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %22, align 4
  %and.i.i.i99 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i99)
  %tobool.not.i.i100 = icmp eq i32 %and.i.i.i99, 0
  br i1 %tobool.not.i.i100, label %folio_flags.exit.i103, label %if.then.i.i101, !prof !299

if.then.i.i101:                                   ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i103:                            ; preds = %if.end31
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i, i32 noundef 4) #11
  %30 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %call.i, align 4
  %and.i.i4.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool.not.i.i.i102 = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool.not.i.i.i102, label %folio_trylock.exit, label %folio_flags.exit.i103.if.then33_crit_edge

folio_flags.exit.i103.if.then33_crit_edge:        ; preds = %folio_flags.exit.i103
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then33

folio_trylock.exit:                               ; preds = %folio_flags.exit.i103
  tail call void @llvm.prefetch.p0(ptr nonnull %call.i, i32 1, i32 3, i32 1) #11
  %32 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %call.i, ptr nonnull %call.i, i32 1, ptr nonnull elementtype(i32) %call.i) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %32, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i104 = and i32 %asmresult.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i104)
  %phi.cmp.i.i = icmp eq i32 %and1.i.i.i104, 0
  br i1 %phi.cmp.i.i, label %if.end35, label %folio_trylock.exit.if.then33_crit_edge

folio_trylock.exit.if.then33_crit_edge:           ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then33

if.then33:                                        ; preds = %folio_trylock.exit.if.then33_crit_edge, %folio_flags.exit.i103.if.then33_crit_edge
  %call.i105 = tail call fastcc i32 @folio_wait_bit_common(ptr noundef nonnull %call.i, i32 noundef 0, i32 noundef 2, i32 noundef 2) #11
  br label %repeat.backedge

if.end35:                                         ; preds = %folio_trylock.exit
  %mapping36 = getelementptr inbounds %struct.anon, ptr %call.i, i32 0, i32 2
  %33 = ptrtoint ptr %mapping36 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %mapping36, align 4
  %tobool37.not = icmp eq ptr %34, null
  br i1 %tobool37.not, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end35
  tail call void @folio_unlock(ptr noundef nonnull %call.i)
  %_refcount.i.i.i.i106 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 3
  %call.i.i.i.i.i.i107 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i106, i32 noundef 4) #11
  %35 = ptrtoint ptr %_refcount.i.i.i.i106 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %_refcount.i.i.i.i106, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp.i.i.i108 = icmp eq i32 %36, 0
  br i1 %cmp.i.i.i108, label %if.then.i.i.i109, label %do.end5.i.i.i113, !prof !300

if.then.i.i.i109:                                 ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i113:                                 ; preds = %if.then38
  %call.i.i.i10.i.i.i110 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i106, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i106, i32 1, i32 3, i32 1) #11
  %37 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i106, ptr %_refcount.i.i.i.i106, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i106) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i111 = extractvalue { i32, i32 } %37, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i111)
  %cmp.i.i.i.i.i.i112 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i111, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_read_cache_folio, %if.then.i.i.i.i115)) #11
          to label %folio_put_testzero.exit.i116 [label %if.then.i.i.i.i115], !srcloc !306

if.then.i.i.i.i115:                               ; preds = %do.end5.i.i.i113
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i114 = zext i1 %cmp.i.i.i.i.i.i112 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef nonnull %call.i, i32 noundef -1, i32 noundef %conv.i.i.i.i114) #11
  br label %folio_put_testzero.exit.i116

folio_put_testzero.exit.i116:                     ; preds = %if.then.i.i.i.i115, %do.end5.i.i.i113
  br i1 %cmp.i.i.i.i.i.i112, label %if.then.i117, label %folio_put_testzero.exit.i116.repeat.backedge_crit_edge

folio_put_testzero.exit.i116.repeat.backedge_crit_edge: ; preds = %folio_put_testzero.exit.i116
  call void @__sanitizer_cov_trace_pc() #13
  br label %repeat.backedge

if.then.i117:                                     ; preds = %folio_put_testzero.exit.i116
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef nonnull %call.i) #11
  br label %repeat.backedge

repeat.backedge:                                  ; preds = %if.then.i117, %folio_put_testzero.exit.i116.repeat.backedge_crit_edge, %if.then33, %if.then9.repeat.backedge_crit_edge
  br label %repeat

if.end39:                                         ; preds = %if.end35
  %38 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %22, align 4
  %and.i.i.i119 = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i119)
  %tobool.not.i.i120 = icmp eq i32 %and.i.i.i119, 0
  br i1 %tobool.not.i.i120, label %folio_flags.exit.i123, label %if.then.i.i121, !prof !299

if.then.i.i121:                                   ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i123:                            ; preds = %if.end39
  %40 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %call.i, align 4
  %42 = and i32 %41, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.i122.not = icmp eq i32 %42, 0
  br i1 %tobool.i122.not, label %if.end42, label %if.then41

if.then41:                                        ; preds = %folio_flags.exit.i123
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  tail call void @folio_unlock(ptr noundef nonnull %call.i)
  br label %out

if.end42:                                         ; preds = %folio_flags.exit.i123
  %43 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %22, align 4
  %and.i.i.i = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_clear_error.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_clear_error.exit:                           ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @_clear_bit(i32 noundef 8, ptr noundef nonnull %call.i) #11
  br label %filler14

out:                                              ; preds = %if.then41, %folio_test_uptodate.exit98.thread, %folio_test_uptodate.exit.thread
  %folio.1 = phi ptr [ %call.i, %if.then41 ], [ %folio.0, %folio_test_uptodate.exit.thread ], [ %call.i, %folio_test_uptodate.exit98.thread ]
  tail call void @folio_mark_accessed(ptr noundef nonnull %folio.1) #11
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then.i90, %folio_put_testzero.exit.i89.cleanup_crit_edge, %folio_put.exit, %if.end11, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ %folio.1, %out ], [ %8, %folio_put.exit ], [ %0, %if.end11 ], [ inttoptr (i32 -5 to ptr), %folio_put_testzero.exit.i89.cleanup_crit_edge ], [ inttoptr (i32 -5 to ptr), %if.then.i90 ], [ inttoptr (i32 -12 to ptr), %if.then.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @read_cache_page(ptr noundef %mapping, i32 noundef %index, ptr noundef %filler, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %gfp_mask.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 3
  %0 = ptrtoint ptr %gfp_mask.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %gfp_mask.i, align 4
  %call.i = tail call fastcc ptr @do_read_cache_folio(ptr noundef %mapping, i32 noundef %index, ptr noundef %filler, ptr noundef %data, i32 noundef %1) #11
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.do_read_cache_page.exit_crit_edge, label %if.end.i

entry.do_read_cache_page.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %do_read_cache_page.exit

if.end.i:                                         ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %call.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %PageHead.exit.i.i.i.i, !prof !300

if.then.i.i.i.i.i:                                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %call.i, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %if.end.i
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %call.i, align 4
  %6 = and i32 %5, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i.i.i.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i.i.i.i, label %PageHead.exit.i.i.i.i.folio_file_page.exit.i_crit_edge, label %if.end.i.i.i.i

PageHead.exit.i.i.i.i.folio_file_page.exit.i_crit_edge: ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_file_page.exit.i

if.end.i.i.i.i:                                   ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i.i.i = getelementptr %struct.page, ptr %call.i, i32 1, i32 1, i32 0, i32 2
  %7 = ptrtoint ptr %compound_nr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %compound_nr.i.i.i.i, align 4
  %phi.bo.i.i = add i32 %8, -1
  br label %folio_file_page.exit.i

folio_file_page.exit.i:                           ; preds = %if.end.i.i.i.i, %PageHead.exit.i.i.i.i.folio_file_page.exit.i_crit_edge
  %retval.0.i.i.i.i = phi i32 [ %phi.bo.i.i, %if.end.i.i.i.i ], [ 0, %PageHead.exit.i.i.i.i.folio_file_page.exit.i_crit_edge ]
  %and.i.i = and i32 %retval.0.i.i.i.i, %index
  %add.ptr.i.i = getelementptr %struct.page, ptr %call.i, i32 %and.i.i
  br label %do_read_cache_page.exit

do_read_cache_page.exit:                          ; preds = %folio_file_page.exit.i, %entry.do_read_cache_page.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i.i, %folio_file_page.exit.i ], [ %call.i, %entry.do_read_cache_page.exit_crit_edge ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @read_cache_page_gfp(ptr noundef %mapping, i32 noundef %index, i32 noundef %gfp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call fastcc ptr @do_read_cache_folio(ptr noundef %mapping, i32 noundef %index, ptr noundef null, ptr noundef null, i32 noundef %gfp) #11
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.do_read_cache_page.exit_crit_edge, label %if.end.i

entry.do_read_cache_page.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %do_read_cache_page.exit

if.end.i:                                         ; preds = %entry
  %0 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %call.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %PageHead.exit.i.i.i.i, !prof !300

if.then.i.i.i.i.i:                                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %call.i, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %if.end.i
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %call.i, align 4
  %4 = and i32 %3, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i.i.i.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i.i.i.i, label %PageHead.exit.i.i.i.i.folio_file_page.exit.i_crit_edge, label %if.end.i.i.i.i

PageHead.exit.i.i.i.i.folio_file_page.exit.i_crit_edge: ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_file_page.exit.i

if.end.i.i.i.i:                                   ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i.i.i = getelementptr %struct.page, ptr %call.i, i32 1, i32 1, i32 0, i32 2
  %5 = ptrtoint ptr %compound_nr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %compound_nr.i.i.i.i, align 4
  %phi.bo.i.i = add i32 %6, -1
  br label %folio_file_page.exit.i

folio_file_page.exit.i:                           ; preds = %if.end.i.i.i.i, %PageHead.exit.i.i.i.i.folio_file_page.exit.i_crit_edge
  %retval.0.i.i.i.i = phi i32 [ %phi.bo.i.i, %if.end.i.i.i.i ], [ 0, %PageHead.exit.i.i.i.i.folio_file_page.exit.i_crit_edge ]
  %and.i.i = and i32 %retval.0.i.i.i.i, %index
  %add.ptr.i.i = getelementptr %struct.page, ptr %call.i, i32 %and.i.i
  br label %do_read_cache_page.exit

do_read_cache_page.exit:                          ; preds = %folio_file_page.exit.i, %entry.do_read_cache_page.exit_crit_edge
  %retval.0.i = phi ptr [ %add.ptr.i.i, %folio_file_page.exit.i ], [ %call.i, %entry.do_read_cache_page.exit_crit_edge ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pagecache_write_begin(ptr noundef %file, ptr noundef %mapping, i64 noundef %pos, i32 noundef %len, i32 noundef %flags, ptr noundef %pagep, ptr noundef %fsdata) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %a_ops = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %0 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %a_ops, align 4
  %write_begin = getelementptr inbounds %struct.address_space_operations, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %write_begin to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %write_begin, align 4
  %call = tail call i32 %3(ptr noundef %file, ptr noundef %mapping, i64 noundef %pos, i32 noundef %len, i32 noundef %flags, ptr noundef %pagep, ptr noundef %fsdata) #11
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pagecache_write_end(ptr noundef %file, ptr noundef %mapping, i64 noundef %pos, i32 noundef %len, i32 noundef %copied, ptr noundef %page, ptr noundef %fsdata) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %a_ops = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %0 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %a_ops, align 4
  %write_end = getelementptr inbounds %struct.address_space_operations, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %write_end to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %write_end, align 4
  %call = tail call i32 %3(ptr noundef %file, ptr noundef %mapping, i64 noundef %pos, i32 noundef %len, i32 noundef %copied, ptr noundef %page, ptr noundef %fsdata) #11
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dio_warn_stale_pagecache(ptr noundef %filp) local_unnamed_addr #0 align 64 {
entry:
  %pathname = alloca [128 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %pathname) #11
  %0 = call ptr @memset(ptr %pathname, i32 255, i32 128)
  %f_mapping = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 18
  %1 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_mapping, align 4
  %wb_err = getelementptr inbounds %struct.address_space, ptr %2, i32 0, i32 11
  %call = tail call i32 @errseq_set(ptr noundef %wb_err, i32 noundef -5) #11
  %call1 = tail call i32 @___ratelimit(ptr noundef nonnull @dio_warn_stale_pagecache._rs, ptr noundef nonnull @__func__.dio_warn_stale_pagecache) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %entry.if.end15_crit_edge, label %if.then

entry.if.end15_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end15

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %call2 = call ptr @file_path(ptr noundef %filp, ptr noundef nonnull %pathname, i32 noundef 128) #11
  %cmp.i = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  %spec.select = select i1 %cmp.i, ptr @.str.12, ptr %call2
  %call5 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.13) #14
  %3 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 68
  %7 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %pid, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 101
  %call14 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef %spec.select, i32 noundef %8, ptr noundef %comm) #14
  br label %if.end15

if.end15:                                         ; preds = %if.then, %entry.if.end15_crit_edge
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %pathname) #11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @file_path(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_file_direct_write(ptr noundef %iocb, ptr noundef %from) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iocb, align 8
  %f_mapping = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_mapping, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %ki_pos = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %6 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ki_pos, align 8
  %count.i = getelementptr inbounds %struct.iov_iter, ptr %from, i32 0, i32 4
  %8 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %count.i, align 8
  %conv = zext i32 %9 to i64
  %add = add i64 %7, -1
  %sub = add i64 %add, %conv
  %10 = lshr i64 %sub, 12
  %conv1 = trunc i64 %10 to i32
  %ki_flags = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 4
  %11 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ki_flags, align 8
  %and = and i32 %12, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call6 = tail call zeroext i1 @filemap_range_has_page(ptr noundef %3, i64 noundef %7, i64 noundef %sub)
  br i1 %call6, label %if.then.cleanup_crit_edge, label %if.then.if.end15_crit_edge

if.then.if.end15_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end15

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.else:                                          ; preds = %entry
  %call11 = tail call i32 @filemap_write_and_wait_range(ptr noundef %3, i64 noundef %7, i64 noundef %sub)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.else.if.end15_crit_edge, label %if.else.out_crit_edge

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.else.if.end15_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end15

if.end15:                                         ; preds = %if.else.if.end15_crit_edge, %if.then.if.end15_crit_edge
  %13 = lshr i64 %7, 12
  %conv17 = trunc i64 %13 to i32
  %call18 = tail call i32 @invalidate_inode_pages2_range(ptr noundef %3, i32 noundef %conv17, i32 noundef %conv1) #11
  %14 = zext i32 %call18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.68)
  switch i32 %call18, label %if.end15.out_crit_edge [
    i32 0, label %if.end24
    i32 -16, label %if.end15.cleanup_crit_edge
  ]

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end15.out_crit_edge:                           ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.end24:                                         ; preds = %if.end15
  %a_ops = getelementptr inbounds %struct.address_space, ptr %3, i32 0, i32 9
  %15 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %a_ops, align 4
  %direct_IO = getelementptr inbounds %struct.address_space_operations, ptr %16, i32 0, i32 12
  %17 = ptrtoint ptr %direct_IO to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %direct_IO, align 4
  %call25 = tail call i32 %18(ptr noundef %iocb, ptr noundef %from) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %cmp26 = icmp sgt i32 %call25, 0
  br i1 %cmp26, label %land.lhs.true, label %if.end53

land.lhs.true:                                    ; preds = %if.end24
  %nrpages = getelementptr inbounds %struct.address_space, ptr %3, i32 0, i32 7
  %19 = ptrtoint ptr %nrpages to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %nrpages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool28.not = icmp eq i32 %20, 0
  br i1 %tobool28.not, label %land.lhs.true.if.then38_crit_edge, label %land.lhs.true29

land.lhs.true.if.then38_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then38

land.lhs.true29:                                  ; preds = %land.lhs.true
  %call32 = tail call i32 @invalidate_inode_pages2_range(ptr noundef %3, i32 noundef %conv17, i32 noundef %conv1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %land.lhs.true29.if.then38_crit_edge, label %if.then34

land.lhs.true29.if.then38_crit_edge:              ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then38

if.then34:                                        ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dio_warn_stale_pagecache(ptr noundef %1)
  br label %if.then38

if.then38:                                        ; preds = %if.then34, %land.lhs.true29.if.then38_crit_edge, %land.lhs.true.if.then38_crit_edge
  %conv39112 = zext i32 %call25 to i64
  %add40 = add i64 %7, %conv39112
  %sub41 = sub i32 %9, %call25
  %call42 = tail call fastcc i64 @i_size_read(ptr noundef %5)
  call void @__sanitizer_cov_trace_cmp8(i64 %add40, i64 %call42)
  %cmp43 = icmp sgt i64 %add40, %call42
  br i1 %cmp43, label %land.lhs.true45, label %if.then38.if.end53.thread_crit_edge

if.then38.if.end53.thread_crit_edge:              ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end53.thread

land.lhs.true45:                                  ; preds = %if.then38
  %21 = ptrtoint ptr %5 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %5, align 8
  %23 = and i16 %22, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 24576, i16 %23)
  %cmp48 = icmp eq i16 %23, 24576
  br i1 %cmp48, label %land.lhs.true45.if.end53.thread_crit_edge, label %if.then50

land.lhs.true45.if.end53.thread_crit_edge:        ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end53.thread

if.then50:                                        ; preds = %land.lhs.true45
  %24 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %27, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !386
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %28 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i.i = icmp eq i32 %28, 0
  br i1 %tobool.not.i.i, label %if.then50.i_size_write.exit_crit_edge, label %land.lhs.true.i.i

if.then50.i_size_write.exit_crit_edge:            ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #13
  br label %i_size_write.exit

land.lhs.true.i.i:                                ; preds = %if.then50
  %29 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %32, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !387
  %33 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 3
  %35 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %36
  %37 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx.i.i, align 4
  %add.i28.i = add i32 %38, ptrtoint (ptr @lockdep_recursion to i32)
  %39 = inttoptr i32 %add.i28.i to ptr
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %39, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !388
  %42 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i7.i.i = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i7.i.i to ptr
  %preempt_count.i.i8.i.i = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %preempt_count.i.i8.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %preempt_count.i.i8.i.i, align 4
  %sub.i.i.i = add i32 %45, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i8.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool20.not.i.i = icmp eq i32 %41, 0
  br i1 %tobool20.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.i_size_write.exit_crit_edge

land.lhs.true.i.i.i_size_write.exit_crit_edge:    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %i_size_write.exit

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  %46 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i29.i = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i29.i to ptr
  %preempt_count.i.i30.i = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i30.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i30.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %cmp.i.i = icmp eq i32 %49, 0
  br i1 %cmp.i.i, label %land.rhs22.i.i, label %land.rhs.i.i.i_size_write.exit_crit_edge

land.rhs.i.i.i_size_write.exit_crit_edge:         ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %i_size_write.exit

land.rhs22.i.i:                                   ; preds = %land.rhs.i.i
  %50 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i9.i.i = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i.i9.i.i to ptr
  %preempt_count.i.i10.i.i = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %preempt_count.i.i10.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %preempt_count.i.i10.i.i, align 4
  %add.i11.i.i = add i32 %53, 1
  store volatile i32 %add.i11.i.i, ptr %preempt_count.i.i10.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !389
  %54 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %cpu.i.i, align 4
  %arrayidx46.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %55
  %56 = ptrtoint ptr %arrayidx46.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx46.i.i, align 4
  %add47.i.i = add i32 %57, ptrtoint (ptr @hardirqs_enabled to i32)
  %58 = inttoptr i32 %add47.i.i to ptr
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %58, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !390
  %61 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i12.i.i = and i32 %61, -16384
  %62 = inttoptr i32 %and.i.i.i12.i.i to ptr
  %preempt_count.i.i13.i.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %preempt_count.i.i13.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %preempt_count.i.i13.i.i, align 4
  %sub.i14.i.i = add i32 %64, -1
  store volatile i32 %sub.i14.i.i, ptr %preempt_count.i.i13.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool54.not.i.i = icmp eq i32 %60, 0
  br i1 %tobool54.not.i.i, label %land.rhs22.i.i.i_size_write.exit_crit_edge, label %land.rhs58.i.i

land.rhs22.i.i.i_size_write.exit_crit_edge:       ; preds = %land.rhs22.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %i_size_write.exit

land.rhs58.i.i:                                   ; preds = %land.rhs22.i.i
  %.b1.i.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i.i, label %land.rhs58.i.i.i_size_write.exit_crit_edge, label %if.then.i.i, !prof !299

land.rhs58.i.i.i_size_write.exit_crit_edge:       ; preds = %land.rhs58.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %i_size_write.exit

if.then.i.i:                                      ; preds = %land.rhs58.i.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.58, i32 noundef 271, i32 noundef 9, ptr noundef null) #11
  br label %i_size_write.exit

i_size_write.exit:                                ; preds = %if.then.i.i, %land.rhs58.i.i.i_size_write.exit_crit_edge, %land.rhs22.i.i.i_size_write.exit_crit_edge, %land.rhs.i.i.i_size_write.exit_crit_edge, %land.lhs.true.i.i.i_size_write.exit_crit_edge, %if.then50.i_size_write.exit_crit_edge
  %i_size_seqcount.i = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 23
  %65 = ptrtoint ptr %i_size_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %i_size_seqcount.i, align 4
  %inc.i.i.i.i = add i32 %66, 1
  store i32 %inc.i.i.i.i, ptr %i_size_seqcount.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !391
  %dep_map.i.i.i = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 23, i32 1
  %67 = tail call ptr @llvm.returnaddress(i32 0) #11
  %68 = ptrtoint ptr %67 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %68) #11
  %i_size8.i = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 14
  %69 = ptrtoint ptr %i_size8.i to i32
  call void @__asan_store8_noabort(i32 %69)
  store i64 %add40, ptr %i_size8.i, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %68) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !392
  %70 = ptrtoint ptr %i_size_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %i_size_seqcount.i, align 4
  %inc.i.i.i = add i32 %71, 1
  store i32 %inc.i.i.i, ptr %i_size_seqcount.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !393
  %72 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i26.i = and i32 %72, -16384
  %73 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %73, i32 0, i32 1
  %74 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %75, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  tail call void @__mark_inode_dirty(ptr noundef %5, i32 noundef 7) #11
  br label %if.end53.thread

if.end53.thread:                                  ; preds = %i_size_write.exit, %land.lhs.true45.if.end53.thread_crit_edge, %if.then38.if.end53.thread_crit_edge
  %76 = ptrtoint ptr %ki_pos to i32
  call void @__asan_store8_noabort(i32 %76)
  store i64 %add40, ptr %ki_pos, align 8
  br label %if.then56

if.end53:                                         ; preds = %if.end24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -529, i32 %call25)
  %cmp54.not = icmp eq i32 %call25, -529
  br i1 %cmp54.not, label %if.end53.out_crit_edge, label %if.end53.if.then56_crit_edge

if.end53.if.then56_crit_edge:                     ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then56

if.end53.out_crit_edge:                           ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.then56:                                        ; preds = %if.end53.if.then56_crit_edge, %if.end53.thread
  %write_len.0111 = phi i32 [ %sub41, %if.end53.thread ], [ %9, %if.end53.if.then56_crit_edge ]
  %77 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %count.i, align 8
  %sub58 = sub i32 %write_len.0111, %78
  tail call void @iov_iter_revert(ptr noundef %from, i32 noundef %sub58) #11
  br label %out

out:                                              ; preds = %if.then56, %if.end53.out_crit_edge, %if.end15.out_crit_edge, %if.else.out_crit_edge
  %written.0 = phi i32 [ %call25, %if.then56 ], [ -529, %if.end53.out_crit_edge ], [ %call11, %if.else.out_crit_edge ], [ %call18, %if.end15.out_crit_edge ]
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end15.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %written.0, %out ], [ -11, %if.then.cleanup_crit_edge ], [ 0, %if.end15.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @invalidate_inode_pages2_range(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_perform_write(ptr noundef %file, ptr noundef %i, i64 noundef %pos) #0 align 64 {
entry:
  %page = alloca ptr, align 4
  %fsdata = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %f_mapping = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 18
  %0 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_mapping, align 4
  %a_ops1 = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %a_ops1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %a_ops1, align 4
  %count.i = getelementptr inbounds %struct.iov_iter, ptr %i, i32 0, i32 4
  %write_begin = getelementptr inbounds %struct.address_space_operations, ptr %3, i32 0, i32 6
  %i_mmap_writable.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 4
  %write_end = getelementptr inbounds %struct.address_space_operations, ptr %3, i32 0, i32 7
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %entry
  %written.0 = phi i32 [ 0, %entry ], [ %add72, %do.cond.do.body_crit_edge ]
  %pos.addr.0 = phi i64 [ %pos, %entry ], [ %add, %do.cond.do.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %page) #11
  %4 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %page, align 4, !annotation !302
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fsdata) #11
  %5 = ptrtoint ptr %fsdata to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr inttoptr (i32 -1 to ptr), ptr %fsdata, align 4, !annotation !302
  %6 = trunc i64 %pos.addr.0 to i32
  %conv = and i32 %6, 4095
  %sub = sub nuw nsw i32 4096, %conv
  %7 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %count.i, align 8
  %9 = call i32 @llvm.umin.i32(i32 %sub, i32 %8)
  %call3134 = call i32 @fault_in_iov_iter_readable(ptr noundef %i, i32 noundef %9) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3134)
  %tobool.not135 = icmp eq i32 %call3134, 0
  br i1 %tobool.not135, label %do.body.if.end_crit_edge, label %do.body.cleanup.thread_crit_edge, !prof !299

do.body.cleanup.thread_crit_edge:                 ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.thread

do.body.if.end_crit_edge:                         ; preds = %do.body
  br label %if.end

if.end:                                           ; preds = %if.then66.if.end_crit_edge, %do.body.if.end_crit_edge
  %bytes.0136 = phi i32 [ %spec.select, %if.then66.if.end_crit_edge ], [ %9, %do.body.if.end_crit_edge ]
  %10 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %stack.i.i.i, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %and1.i.i.i.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %if.end.if.end10_crit_edge, label %fatal_signal_pending.exit

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end10

fatal_signal_pending.exit:                        ; preds = %if.end
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 116, i32 1
  %18 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %signal.i.i, align 4
  %20 = and i32 %19, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool8.not = icmp eq i32 %20, 0
  br i1 %tobool8.not, label %fatal_signal_pending.exit.if.end10_crit_edge, label %fatal_signal_pending.exit.cleanup.thread_crit_edge

fatal_signal_pending.exit.cleanup.thread_crit_edge: ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.thread

fatal_signal_pending.exit.if.end10_crit_edge:     ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end10

if.end10:                                         ; preds = %fatal_signal_pending.exit.if.end10_crit_edge, %if.end.if.end10_crit_edge
  %21 = ptrtoint ptr %write_begin to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %write_begin, align 4
  %call11 = call i32 %22(ptr noundef %file, ptr noundef %1, i64 noundef %pos.addr.0, i32 noundef %bytes.0136, i32 noundef 0, ptr noundef nonnull %page, ptr noundef nonnull %fsdata) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %cmp12 = icmp slt i32 %call11, 0
  br i1 %cmp12, label %if.end10.cleanup.thread_crit_edge, label %if.end21, !prof !300

if.end10.cleanup.thread_crit_edge:                ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.thread

if.end21:                                         ; preds = %if.end10
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %i_mmap_writable.i, i32 noundef 4) #11
  %23 = ptrtoint ptr %i_mmap_writable.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %i_mmap_writable.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %24)
  %cmp.i = icmp slt i32 %24, 1
  br i1 %cmp.i, label %if.end21.if.end25_crit_edge, label %if.then24

if.end21.if.end25_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end25

if.then24:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #13
  %25 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %page, align 4
  call void @flush_dcache_page(ptr noundef %26) #11
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end21.if.end25_crit_edge
  %27 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %page, align 4
  %call26 = call i32 @copy_page_from_iter_atomic(ptr noundef %28, i32 noundef %conv, i32 noundef %bytes.0136, ptr noundef %i) #11
  %29 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %page, align 4
  call void @flush_dcache_page(ptr noundef %30) #11
  %31 = ptrtoint ptr %write_end to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %write_end, align 4
  %33 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %page, align 4
  %35 = ptrtoint ptr %fsdata to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %fsdata, align 4
  %call27 = call i32 %32(ptr noundef %file, ptr noundef %1, i64 noundef %pos.addr.0, i32 noundef %bytes.0136, i32 noundef %call26, ptr noundef %34, ptr noundef %36) #11
  call void @__sanitizer_cov_trace_cmp4(i32 %call27, i32 %call26)
  %cmp28.not = icmp eq i32 %call27, %call26
  br i1 %cmp28.not, label %if.end25.if.end55_crit_edge, label %if.then36, !prof !299

if.end25.if.end55_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end55

if.then36:                                        ; preds = %if.end25
  %37 = call i32 @llvm.smax.i32(i32 %call27, i32 0)
  %sub44 = sub i32 %call26, %37
  call void @iov_iter_revert(ptr noundef %i, i32 noundef %sub44) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %cmp45 = icmp slt i32 %call27, 0
  br i1 %cmp45, label %if.then36.cleanup.thread_crit_edge, label %if.then36.if.end55_crit_edge, !prof !300

if.then36.if.end55_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end55

if.then36.cleanup.thread_crit_edge:               ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.thread

if.end55:                                         ; preds = %if.then36.if.end55_crit_edge, %if.end25.if.end55_crit_edge
  call void @__might_resched(ptr noundef nonnull @.str.6, i32 noundef 3783, i32 noundef 0) #11
  %call.i = call i32 @__cond_resched() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %cmp58 = icmp eq i32 %call27, 0
  br i1 %cmp58, label %if.then66, label %do.cond, !prof !300

if.then66:                                        ; preds = %if.end55
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool67.not = icmp eq i32 %call26, 0
  %spec.select = select i1 %tobool67.not, i32 %bytes.0136, i32 %call26
  %call3 = call i32 @fault_in_iov_iter_readable(ptr noundef %i, i32 noundef %spec.select) #11
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.then66.if.end_crit_edge, label %if.then66.cleanup.thread_crit_edge, !prof !299

if.then66.cleanup.thread_crit_edge:               ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.thread

if.then66.if.end_crit_edge:                       ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end

cleanup.thread:                                   ; preds = %if.then66.cleanup.thread_crit_edge, %if.then36.cleanup.thread_crit_edge, %if.end10.cleanup.thread_crit_edge, %fatal_signal_pending.exit.cleanup.thread_crit_edge, %do.body.cleanup.thread_crit_edge
  %status.0.ph = phi i32 [ -14, %if.then66.cleanup.thread_crit_edge ], [ -4, %fatal_signal_pending.exit.cleanup.thread_crit_edge ], [ %call11, %if.end10.cleanup.thread_crit_edge ], [ %call27, %if.then36.cleanup.thread_crit_edge ], [ -14, %do.body.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fsdata) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %page) #11
  br label %do.end

do.cond:                                          ; preds = %if.end55
  %conv71 = sext i32 %call27 to i64
  %add = add i64 %pos.addr.0, %conv71
  %add72 = add i32 %call27, %written.0
  call void @balance_dirty_pages_ratelimited(ptr noundef %1) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fsdata) #11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %page) #11
  %38 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %count.i, align 8
  %tobool78.not = icmp eq i32 %39, 0
  br i1 %tobool78.not, label %do.cond.do.end_crit_edge, label %do.cond.do.body_crit_edge

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

do.cond.do.end_crit_edge:                         ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.end

do.end:                                           ; preds = %do.cond.do.end_crit_edge, %cleanup.thread
  %written.1132 = phi i32 [ %written.0, %cleanup.thread ], [ %add72, %do.cond.do.end_crit_edge ]
  %status.0131 = phi i32 [ %status.0.ph, %cleanup.thread ], [ %call27, %do.cond.do.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %written.1132)
  %tobool79.not = icmp eq i32 %written.1132, 0
  %status.0.written.1 = select i1 %tobool79.not, i32 %status.0131, i32 %written.1132
  ret i32 %status.0.written.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fault_in_iov_iter_readable(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_dcache_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @copy_page_from_iter_atomic(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @balance_dirty_pages_ratelimited(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__generic_file_write_iter(ptr noundef %iocb, ptr noundef %from) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iocb, align 8
  %f_mapping = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_mapping, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %call = tail call ptr @inode_to_bdi(ptr noundef %5) #11
  %6 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task, align 8
  %backing_dev_info = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 150
  %10 = ptrtoint ptr %backing_dev_info to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call, ptr %backing_dev_info, align 4
  %call2 = tail call i32 @file_remove_privs(ptr noundef %1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %entry.out.thread_crit_edge

entry.out.thread_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %out.thread

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @file_update_time(ptr noundef %1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.out.thread_crit_edge

if.end.out.thread_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %out.thread

if.end6:                                          ; preds = %if.end
  %ki_flags = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 4
  %11 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ki_flags, align 8
  %and = and i32 %12, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.else36, label %if.then8

if.then8:                                         ; preds = %if.end6
  %call9 = tail call i32 @generic_file_direct_write(ptr noundef %iocb, ptr noundef %from)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %cmp = icmp slt i32 %call9, 0
  br i1 %cmp, label %if.then8.out.thread100_crit_edge, label %lor.lhs.false

if.then8.out.thread100_crit_edge:                 ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #13
  br label %out.thread100

lor.lhs.false:                                    ; preds = %if.then8
  %count.i = getelementptr inbounds %struct.iov_iter, ptr %from, i32 0, i32 4
  %13 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool11.not = icmp eq i32 %14, 0
  br i1 %tobool11.not, label %lor.lhs.false.out_crit_edge, label %if.end16

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.end16:                                         ; preds = %lor.lhs.false
  %ki_pos = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %15 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %ki_pos, align 8
  %call17 = tail call i32 @generic_perform_write(ptr noundef %1, ptr noundef %from, i64 noundef %16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %if.end16.out_crit_edge, label %if.end22, !prof !300

if.end16.out_crit_edge:                           ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.end22:                                         ; preds = %if.end16
  %conv106 = zext i32 %call17 to i64
  %add = add i64 %16, %conv106
  %sub = add i64 %add, -1
  %call23 = tail call i32 @filemap_write_and_wait_range(ptr noundef %3, i64 noundef %16, i64 noundef %sub)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %cmp24 = icmp eq i32 %call23, 0
  br i1 %cmp24, label %if.then26, label %if.end22.out_crit_edge

if.end22.out_crit_edge:                           ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.then26:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #13
  %17 = ptrtoint ptr %ki_pos to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %add, ptr %ki_pos, align 8
  %add29 = add nuw i32 %call17, %call9
  %18 = lshr i64 %16, 12
  %conv30 = trunc i64 %18 to i32
  %19 = lshr i64 %sub, 12
  %conv32 = trunc i64 %19 to i32
  %call33 = tail call i32 @invalidate_mapping_pages(ptr noundef %3, i32 noundef %conv30, i32 noundef %conv32) #11
  br label %out

if.else36:                                        ; preds = %if.end6
  %ki_pos37 = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %20 = ptrtoint ptr %ki_pos37 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %ki_pos37, align 8
  %call38 = tail call i32 @generic_perform_write(ptr noundef %1, ptr noundef %from, i64 noundef %21)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %cmp39 = icmp sgt i32 %call38, 0
  br i1 %cmp39, label %if.then47, label %if.else36.out_crit_edge, !prof !299

if.else36.out_crit_edge:                          ; preds = %if.else36
  call void @__sanitizer_cov_trace_pc() #13
  br label %out

if.then47:                                        ; preds = %if.else36
  call void @__sanitizer_cov_trace_pc() #13
  %conv48105 = zext i32 %call38 to i64
  %22 = ptrtoint ptr %ki_pos37 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %ki_pos37, align 8
  %add50 = add i64 %23, %conv48105
  store i64 %add50, ptr %ki_pos37, align 8
  br label %out.thread100

out.thread:                                       ; preds = %if.end.out.thread_crit_edge, %entry.out.thread_crit_edge
  %err.1.ph = phi i32 [ %call3, %if.end.out.thread_crit_edge ], [ %call2, %entry.out.thread_crit_edge ]
  %24 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task, align 8
  %backing_dev_info5596 = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 150
  %26 = ptrtoint ptr %backing_dev_info5596 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %backing_dev_info5596, align 4
  br label %33

out.thread100:                                    ; preds = %if.then47, %if.then8.out.thread100_crit_edge
  %written.2.ph = phi i32 [ %call9, %if.then8.out.thread100_crit_edge ], [ %call38, %if.then47 ]
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %backing_dev_info55103 = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 150
  %29 = ptrtoint ptr %backing_dev_info55103 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %backing_dev_info55103, align 4
  br label %34

out:                                              ; preds = %if.else36.out_crit_edge, %if.then26, %if.end22.out_crit_edge, %if.end16.out_crit_edge, %lor.lhs.false.out_crit_edge
  %written.2 = phi i32 [ %call38, %if.else36.out_crit_edge ], [ %call9, %lor.lhs.false.out_crit_edge ], [ %call9, %if.end16.out_crit_edge ], [ %add29, %if.then26 ], [ %call9, %if.end22.out_crit_edge ]
  %err.1 = phi i32 [ 0, %if.else36.out_crit_edge ], [ 0, %lor.lhs.false.out_crit_edge ], [ %call17, %if.end16.out_crit_edge ], [ 0, %if.then26 ], [ %call23, %if.end22.out_crit_edge ]
  %30 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task, align 8
  %backing_dev_info55 = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 150
  %32 = ptrtoint ptr %backing_dev_info55 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %backing_dev_info55, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %written.2)
  %tobool56.not = icmp eq i32 %written.2, 0
  br i1 %tobool56.not, label %out._crit_edge, label %out._crit_edge107

out._crit_edge107:                                ; preds = %out
  call void @__sanitizer_cov_trace_pc() #13
  br label %34

out._crit_edge:                                   ; preds = %out
  call void @__sanitizer_cov_trace_pc() #13
  br label %33

33:                                               ; preds = %out._crit_edge, %out.thread
  %err.198 = phi i32 [ %err.1.ph, %out.thread ], [ %err.1, %out._crit_edge ]
  br label %34

34:                                               ; preds = %33, %out._crit_edge107, %out.thread100
  %35 = phi i32 [ %err.198, %33 ], [ %written.2, %out._crit_edge107 ], [ %written.2.ph, %out.thread100 ]
  ret i32 %35
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @inode_to_bdi(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @file_remove_privs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @invalidate_mapping_pages(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_file_write_iter(ptr noundef %iocb, ptr noundef %from) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iocb, align 8
  %f_mapping = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 18
  %2 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_mapping, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %i_rwsem.i = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 25
  tail call void @down_write(ptr noundef %i_rwsem.i) #11
  %call = tail call i32 @generic_write_checks(ptr noundef %iocb, ptr noundef %from) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %if.end, label %if.end.thread

if.end.thread:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @up_write(ptr noundef %i_rwsem.i) #11
  br label %if.end5

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @__generic_file_write_iter(ptr noundef %iocb, ptr noundef %from)
  tail call void @up_write(ptr noundef %i_rwsem.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp2 = icmp sgt i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end.if.end5_crit_edge

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end5

if.then3:                                         ; preds = %if.end
  %ki_flags.i = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 4
  %6 = ptrtoint ptr %ki_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ki_flags.i, align 8
  %and.i = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then3.if.end8.i_crit_edge, label %if.then.i

if.then3.if.end8.i_crit_edge:                     ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end8.i

if.then.i:                                        ; preds = %if.then3
  %8 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %iocb, align 8
  %ki_pos.i = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %10 = ptrtoint ptr %ki_pos.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ki_pos.i, align 8
  %conv.i18 = zext i32 %call1 to i64
  %sub.i = sub i64 %11, %conv.i18
  %sub2.i = add i64 %11, -1
  %and4.i = lshr i32 %7, 2
  %and4.lobit.i = and i32 %and4.i, 1
  %12 = xor i32 %and4.lobit.i, 1
  %call.i = tail call i32 @vfs_fsync_range(ptr noundef %9, i64 noundef %sub.i, i64 noundef %sub2.i, i32 noundef %12) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %if.then.i.if.end8.i_crit_edge, label %if.then.i.if.end5_crit_edge

if.then.i.if.end5_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end5

if.then.i.if.end8.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then.i.if.end8.i_crit_edge, %if.then3.if.end8.i_crit_edge
  br label %if.end5

if.end5:                                          ; preds = %if.end8.i, %if.then.i.if.end5_crit_edge, %if.end.if.end5_crit_edge, %if.end.thread
  %ret.1 = phi i32 [ %call1, %if.end.if.end5_crit_edge ], [ %call, %if.end.thread ], [ %call.i, %if.then.i.if.end5_crit_edge ], [ %call1, %if.end8.i ]
  ret i32 %ret.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @generic_write_checks(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @filemap_release_folio(ptr noundef %folio, i32 noundef %gfp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping1 = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 2
  %0 = ptrtoint ptr %mapping1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping1, align 4
  %2 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_locked.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit:                           ; preds = %entry
  %5 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %folio, align 4
  %and1.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %do.body4, label %do.end9, !prof !300

do.body4:                                         ; preds = %folio_test_locked.exit
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/filemap.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3954, 0\0A.popsection", ""() #11, !srcloc !394
  unreachable

do.end9:                                          ; preds = %folio_test_locked.exit
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %2, align 4
  %and.i.i.i30 = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i30)
  %tobool.not.i.i31 = icmp eq i32 %and.i.i.i30, 0
  br i1 %tobool.not.i.i31, label %folio_test_writeback.exit, label %if.then.i.i32, !prof !299

if.then.i.i32:                                    ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_writeback.exit:                        ; preds = %do.end9
  %9 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %folio, align 4
  %11 = and i32 %10, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.i33.not = icmp eq i32 %11, 0
  br i1 %tobool.i33.not, label %if.end12, label %folio_test_writeback.exit.cleanup_crit_edge

folio_test_writeback.exit.cleanup_crit_edge:      ; preds = %folio_test_writeback.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end12:                                         ; preds = %folio_test_writeback.exit
  %tobool13.not = icmp eq ptr %1, null
  br i1 %tobool13.not, label %if.end12.if.end20_crit_edge, label %land.lhs.true

if.end12.if.end20_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end20

land.lhs.true:                                    ; preds = %if.end12
  %a_ops = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 9
  %12 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %a_ops, align 4
  %releasepage = getelementptr inbounds %struct.address_space_operations, ptr %13, i32 0, i32 10
  %14 = ptrtoint ptr %releasepage to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %releasepage, align 4
  %tobool14.not = icmp eq ptr %15, null
  br i1 %tobool14.not, label %land.lhs.true.if.end20_crit_edge, label %if.then15

land.lhs.true.if.end20_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end20

if.then15:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #13
  %call18 = tail call i32 %15(ptr noundef %folio, i32 noundef %gfp) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19 = icmp ne i32 %call18, 0
  br label %cleanup

if.end20:                                         ; preds = %land.lhs.true.if.end20_crit_edge, %if.end12.if.end20_crit_edge
  %call21 = tail call i32 @try_to_free_buffers(ptr noundef %folio) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22 = icmp ne i32 %call21, 0
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.then15, %folio_test_writeback.exit.cleanup_crit_edge
  %retval.0 = phi i1 [ %tobool19, %if.then15 ], [ %tobool22, %if.end20 ], [ false, %folio_test_writeback.exit.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @try_to_free_buffers(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_filemap_op_page_cache(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %s_dev = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %i_ino = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i_ino, align 4
  %pfn = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pfn, align 4
  %index = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index, align 4
  %shl = shl i32 %9, 12
  %order = getelementptr inbounds %struct.trace_event_raw_mm_filemap_op_page_cache, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %order to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %order, align 4
  %conv = zext i8 %11 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.25, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %shl, i32 noundef %conv) #11
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_filemap_set_wb_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %s_dev = getelementptr inbounds %struct.trace_event_raw_filemap_set_wb_err, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %i_ino = getelementptr inbounds %struct.trace_event_raw_filemap_set_wb_err, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i_ino, align 4
  %errseq = getelementptr inbounds %struct.trace_event_raw_filemap_set_wb_err, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %errseq to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %errseq, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.28, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7) #11
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_file_check_and_advance_wb_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %file = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %file, align 4
  %s_dev = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %s_dev, align 4
  %shr = lshr i32 %5, 20
  %and = and i32 %5, 1048575
  %i_ino = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_ino, align 4
  %old = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %old to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %old, align 4
  %new = getelementptr inbounds %struct.trace_event_raw_file_check_and_advance_wb_err, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %new to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %new, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.33, ptr noundef %3, i32 noundef %shr, i32 noundef %and, i32 noundef %7, i32 noundef %9, i32 noundef %11) #11
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #11
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #7

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #7

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @folio_mapped(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @folio_account_cleaned(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mod_lruvec_page_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @xas_init_marks(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @wbc_attach_and_unlock_inode(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__inode_attach_wb(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pagevec_lookup_range_tag(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_on_page_writeback(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__pagevec_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__mem_cgroup_charge(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mem_cgroup_uncharge(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__delayacct_thrashing_start() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_state(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_local_indexed(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__delayacct_thrashing_end() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up_locked_key_bookmark(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__acct_reclaim_writeback(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_released(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__xas_next(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__xas_prev(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__page_file_index(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @lookup_page_ext(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__folio_alloc(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xas_find_marked(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_unless(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @filemap_get_read_batch(ptr noundef %mapping, i32 noundef %index, i32 noundef %max, ptr nocapture noundef %fbatch) unnamed_addr #0 align 64 {
entry:
  %xas = alloca %struct.xa_state, align 4
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas) #11
  %0 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  %1 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 2
  %2 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 4
  %3 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 7
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 8
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  %6 = ptrtoint ptr %xas to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %i_pages, ptr %xas, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %index, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %1, align 4
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %4, align 4
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %5, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %15, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #11, !srcloc !317
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #11
  %call.i = tail call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 696, ptr noundef nonnull @.str.43) #11
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = call ptr @xas_load(ptr noundef nonnull %xas) #11
  %tobool.not87 = icmp eq ptr %call, null
  br i1 %tobool.not87, label %rcu_read_lock.exit.for.end_crit_edge, label %rcu_read_lock.exit.for.body_crit_edge

rcu_read_lock.exit.for.body_crit_edge:            ; preds = %rcu_read_lock.exit
  br label %for.body

rcu_read_lock.exit.for.end_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.body:                                         ; preds = %xas_next.exit.for.body_crit_edge, %rcu_read_lock.exit.for.body_crit_edge
  %folio.088 = phi ptr [ %retval.0.i72, %xas_next.exit.for.body_crit_edge ], [ %call, %rcu_read_lock.exit.for.body_crit_edge ]
  %magicptr.i = ptrtoint ptr %folio.088 to i32
  %16 = zext i32 %magicptr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.69)
  switch i32 %magicptr.i, label %if.end [
    i32 1030, label %for.body.for.inc_crit_edge
    i32 1026, label %if.end4.i
  ]

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.inc

if.end4.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #13
  %17 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  br label %for.inc

if.end:                                           ; preds = %for.body
  %18 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %0, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %max)
  %cmp = icmp ugt i32 %19, %max
  %and.i = and i32 %magicptr.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i38 = icmp ne i32 %and.i, 0
  %or.cond = select i1 %cmp, i1 true, i1 %tobool.i38
  br i1 %or.cond, label %if.end.for.end_crit_edge, label %if.end5

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end5:                                          ; preds = %if.end
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio.088, i32 0, i32 3
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !367
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %20 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !368
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %20, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i, label %if.end5.atomic_add_unless.exit.i.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i

if.end5.atomic_add_unless.exit.i.i.i.i_crit_edge: ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i.i.i

do.end11.i.i.i.i.i.i.i:                           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !369
  br label %atomic_add_unless.exit.i.i.i.i

atomic_add_unless.exit.i.i.i.i:                   ; preds = %do.end11.i.i.i.i.i.i.i, %if.end5.atomic_add_unless.exit.i.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@filemap_get_read_batch, %if.then.i.i.i.i)) #11
          to label %folio_try_get_rcu.exit [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %atomic_add_unless.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  call void @__page_ref_mod_unless(ptr noundef nonnull %folio.088, i32 noundef 1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_try_get_rcu.exit

folio_try_get_rcu.exit:                           ; preds = %if.then.i.i.i.i, %atomic_add_unless.exit.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.end8, label %folio_try_get_rcu.exit.retry_crit_edge

folio_try_get_rcu.exit.retry_crit_edge:           ; preds = %folio_try_get_rcu.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %retry

if.end8:                                          ; preds = %folio_try_get_rcu.exit
  %21 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %3, align 4
  %tobool.not.i39 = icmp eq ptr %22, null
  br i1 %tobool.not.i39, label %if.then.i41, label %if.end.i

if.then.i41:                                      ; preds = %if.end8
  %23 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %xas, align 4
  %xa_head.i.i = getelementptr inbounds %struct.xarray, ptr %24, i32 0, i32 2
  %25 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %xa_head.i.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.anon.4, ptr %24, i32 0, i32 1
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i40 = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i40, label %lor.lhs.false.i.i, label %if.then.i41.xas_reload.exit_crit_edge

if.then.i41.xas_reload.exit_crit_edge:            ; preds = %if.then.i41
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i.i:                                ; preds = %if.then.i41
  %call2.i.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.xas_reload.exit_crit_edge

lor.lhs.false.i.i.xas_reload.exit_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call4.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i

land.lhs.true.i.i.xas_reload.exit_crit_edge:      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true6.i.i:                               ; preds = %land.lhs.true.i.i
  %.b12.i.i = load i1, ptr @xa_head.__warned, align 1
  br i1 %.b12.i.i, label %land.lhs.true6.i.i.xas_reload.exit_crit_edge, label %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true6.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

if.end.i:                                         ; preds = %if.end8
  %27 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %2, align 2
  %29 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %xas, align 4
  %conv.i = zext i8 %28 to i32
  %arrayidx.i.i = getelementptr %struct.xa_node, ptr %22, i32 0, i32 7, i32 %conv.i
  %31 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %dep_map.i10.i = getelementptr inbounds %struct.anon.4, ptr %30, i32 0, i32 1
  %call.i.i11.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i10.i, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11.i)
  %tobool.not.i12.i = icmp eq i32 %call.i.i11.i, 0
  br i1 %tobool.not.i12.i, label %lor.lhs.false.i15.i, label %if.end.i.xas_reload.exit_crit_edge

if.end.i.xas_reload.exit_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

lor.lhs.false.i15.i:                              ; preds = %if.end.i
  %call4.i13.i = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i13.i)
  %tobool5.not.i14.i = icmp eq i32 %call4.i13.i, 0
  br i1 %tobool5.not.i14.i, label %land.lhs.true.i16.i, label %lor.lhs.false.i15.i.xas_reload.exit_crit_edge

lor.lhs.false.i15.i.xas_reload.exit_crit_edge:    ; preds = %lor.lhs.false.i15.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true.i16.i:                              ; preds = %lor.lhs.false.i15.i
  %call6.i.i = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %land.lhs.true.i16.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i16.i.xas_reload.exit_crit_edge:    ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i16.i
  %.b13.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i, label %land.lhs.true8.i.i.xas_reload.exit_crit_edge, label %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge

land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge: ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup.sink.split.i

land.lhs.true8.i.i.xas_reload.exit_crit_edge:     ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_reload.exit

cleanup.sink.split.i:                             ; preds = %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge
  %xa_entry.__warned.sink.i = phi ptr [ @xa_head.__warned, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ @xa_entry.__warned, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 1167, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ 1183, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %retval.0.ph.i = phi ptr [ %26, %land.lhs.true6.i.i.cleanup.sink.split.i_crit_edge ], [ %32, %land.lhs.true8.i.i.cleanup.sink.split.i_crit_edge ]
  %33 = ptrtoint ptr %xa_entry.__warned.sink.i to i32
  call void @__asan_store1_noabort(i32 %33)
  store i1 true, ptr %xa_entry.__warned.sink.i, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef %.sink.i, ptr noundef nonnull @.str.35) #11
  br label %xas_reload.exit

xas_reload.exit:                                  ; preds = %cleanup.sink.split.i, %land.lhs.true8.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i16.i.xas_reload.exit_crit_edge, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge, %if.end.i.xas_reload.exit_crit_edge, %land.lhs.true6.i.i.xas_reload.exit_crit_edge, %land.lhs.true.i.i.xas_reload.exit_crit_edge, %lor.lhs.false.i.i.xas_reload.exit_crit_edge, %if.then.i41.xas_reload.exit_crit_edge
  %retval.0.i42 = phi ptr [ %26, %if.then.i41.xas_reload.exit_crit_edge ], [ %26, %lor.lhs.false.i.i.xas_reload.exit_crit_edge ], [ %26, %land.lhs.true.i.i.xas_reload.exit_crit_edge ], [ %26, %land.lhs.true6.i.i.xas_reload.exit_crit_edge ], [ %32, %if.end.i.xas_reload.exit_crit_edge ], [ %32, %lor.lhs.false.i15.i.xas_reload.exit_crit_edge ], [ %32, %land.lhs.true.i16.i.xas_reload.exit_crit_edge ], [ %32, %land.lhs.true8.i.i.xas_reload.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp10.not = icmp eq ptr %folio.088, %retval.0.i42
  br i1 %cmp10.not, label %if.end14, label %put_folio, !prof !299

if.end14:                                         ; preds = %xas_reload.exit
  %34 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %fbatch, align 4
  %inc.i = add i8 %35, 1
  store i8 %inc.i, ptr %fbatch, align 4
  %idxprom.i = zext i8 %35 to i32
  %arrayidx.i = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %idxprom.i
  %36 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %folio.088, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 15, i8 %inc.i)
  %tobool16.not = icmp eq i8 %inc.i, 15
  br i1 %tobool16.not, label %if.end14.for.end_crit_edge, label %if.end18

if.end14.for.end_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end18:                                         ; preds = %if.end14
  %37 = getelementptr inbounds %struct.page, ptr %folio.088, i32 0, i32 1
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %37, align 4
  %and.i.i.i43 = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i43)
  %tobool.not.i.i44 = icmp eq i32 %and.i.i.i43, 0
  br i1 %tobool.not.i.i44, label %folio_flags.exit.i, label %if.then.i.i45, !prof !299

if.then.i.i45:                                    ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %folio.088, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %if.end18
  %40 = ptrtoint ptr %folio.088 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %folio.088, align 4
  %42 = and i32 %41, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.i46.not = icmp eq i32 %42, 0
  br i1 %tobool.i46.not, label %folio_flags.exit.i.for.end_crit_edge, label %if.end21

folio_flags.exit.i.for.end_crit_edge:             ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end21:                                         ; preds = %folio_flags.exit.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  %43 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %37, align 4
  %and.i.i.i = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_readahead.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %folio.088, ptr noundef nonnull @.str.50) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_readahead.exit:                        ; preds = %if.end21
  %45 = ptrtoint ptr %folio.088 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %folio.088, align 4
  %47 = and i32 %46, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.i.not = icmp eq i32 %47, 0
  br i1 %tobool.i.not, label %if.end24, label %folio_test_readahead.exit.for.end_crit_edge

folio_test_readahead.exit.for.end_crit_edge:      ; preds = %folio_test_readahead.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

if.end24:                                         ; preds = %folio_test_readahead.exit
  %index25 = getelementptr inbounds %struct.anon, ptr %folio.088, i32 0, i32 3
  %48 = ptrtoint ptr %index25 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %index25, align 4
  %50 = ptrtoint ptr %folio.088 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %folio.088, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %51)
  %cmp.i.not.i.i.i = icmp eq i32 %51, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %PageHead.exit.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #13
  call void @dump_page(ptr noundef nonnull %folio.088, ptr noundef nonnull @.str.40) #11
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i:                                ; preds = %if.end24
  %52 = ptrtoint ptr %folio.088 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %folio.088, align 4
  %54 = and i32 %53, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.not.i.i48 = icmp eq i32 %54, 0
  br i1 %tobool.not.i.i48, label %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge, label %if.end.i.i

PageHead.exit.i.i.folio_nr_pages.exit_crit_edge:  ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_nr_pages.exit

if.end.i.i:                                       ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %compound_nr.i.i = getelementptr %struct.page, ptr %folio.088, i32 1, i32 1, i32 0, i32 2
  %55 = ptrtoint ptr %compound_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %compound_nr.i.i, align 4
  br label %folio_nr_pages.exit

folio_nr_pages.exit:                              ; preds = %if.end.i.i, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge
  %retval.0.i.i = phi i32 [ %56, %if.end.i.i ], [ 1, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge ]
  %add = add i32 %49, -1
  %sub = add i32 %add, %retval.0.i.i
  %57 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %3, align 4
  %59 = ptrtoint ptr %58 to i32
  %and.i.i.i.i = and i32 %59, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.i.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  %tobool.i.i = icmp ne ptr %58, null
  %spec.select.i.i = select i1 %tobool.i.not.i.i.i, i1 %tobool.i.i, i1 false
  br i1 %spec.select.i.i, label %cond.true.i, label %folio_nr_pages.exit.xas_advance.exit_crit_edge

folio_nr_pages.exit.xas_advance.exit_crit_edge:   ; preds = %folio_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_advance.exit

cond.true.i:                                      ; preds = %folio_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #13
  %60 = ptrtoint ptr %58 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %58, align 4
  %phi.cast.i = zext i8 %61 to i32
  br label %xas_advance.exit

xas_advance.exit:                                 ; preds = %cond.true.i, %folio_nr_pages.exit.xas_advance.exit_crit_edge
  %cond.i = phi i32 [ %phi.cast.i, %cond.true.i ], [ 0, %folio_nr_pages.exit.xas_advance.exit_crit_edge ]
  %62 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %sub, ptr %0, align 4
  %shr.i = lshr i32 %sub, %cond.i
  %63 = trunc i32 %shr.i to i8
  %conv4.i = and i8 %63, 63
  %64 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 %conv4.i, ptr %2, align 2
  br label %for.inc

put_folio:                                        ; preds = %xas_reload.exit
  call void @__sanitizer_cov_trace_pc() #13
  call fastcc void @folio_put(ptr noundef nonnull %folio.088)
  br label %retry

retry:                                            ; preds = %put_folio, %folio_try_get_rcu.exit.retry_crit_edge
  %65 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr inttoptr (i32 3 to ptr), ptr %3, align 4
  br label %for.inc

for.inc:                                          ; preds = %retry, %xas_advance.exit, %if.end4.i, %for.body.for.inc_crit_edge
  %66 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %3, align 4
  %68 = ptrtoint ptr %67 to i32
  %and.i.i = and i32 %68, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i52 = icmp ne i32 %and.i.i, 0
  %tobool1.not.i.i = icmp eq ptr %67, null
  %spec.select.i.i53 = or i1 %tobool1.not.i.i, %tobool.not.i.i52
  br i1 %spec.select.i.i53, label %for.inc.if.then.i56_crit_edge, label %lor.lhs.false.i, !prof !300

for.inc.if.then.i56_crit_edge:                    ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i56

lor.lhs.false.i:                                  ; preds = %for.inc
  %69 = ptrtoint ptr %67 to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %67, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool.not.i54 = icmp eq i8 %70, 0
  br i1 %tobool.not.i54, label %lor.rhs.i, label %lor.lhs.false.i.if.then.i56_crit_edge, !prof !299

lor.lhs.false.i.if.then.i56_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i56

lor.rhs.i:                                        ; preds = %lor.lhs.false.i
  %71 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %2, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 63, i8 %72)
  %cmp.i = icmp eq i8 %72, 63
  br i1 %cmp.i, label %lor.rhs.i.if.then.i56_crit_edge, label %if.end.i62, !prof !300

lor.rhs.i.if.then.i56_crit_edge:                  ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then.i56

if.then.i56:                                      ; preds = %lor.rhs.i.if.then.i56_crit_edge, %lor.lhs.false.i.if.then.i56_crit_edge, %for.inc.if.then.i56_crit_edge
  %call5.i = call ptr @__xas_next(ptr noundef nonnull %xas) #11
  br label %xas_next.exit

if.end.i62:                                       ; preds = %lor.rhs.i
  %73 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %0, align 4
  %inc.i58 = add i32 %74, 1
  store i32 %inc.i58, ptr %0, align 4
  %inc7.i = add i8 %72, 1
  %75 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 %inc7.i, ptr %2, align 2
  %76 = ptrtoint ptr %xas to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %xas, align 4
  %conv9.i = zext i8 %inc7.i to i32
  %arrayidx.i.i59 = getelementptr %struct.xa_node, ptr %67, i32 0, i32 7, i32 %conv9.i
  %78 = ptrtoint ptr %arrayidx.i.i59 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile ptr, ptr %arrayidx.i.i59, align 4
  %dep_map.i.i60 = getelementptr inbounds %struct.anon.4, ptr %77, i32 0, i32 1
  %call.i.i.i61 = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i60, i32 noundef -1) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i61)
  %tobool.not.i20.i = icmp eq i32 %call.i.i.i61, 0
  br i1 %tobool.not.i20.i, label %lor.lhs.false.i.i65, label %if.end.i62.xas_next.exit_crit_edge

if.end.i62.xas_next.exit_crit_edge:               ; preds = %if.end.i62
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

lor.lhs.false.i.i65:                              ; preds = %if.end.i62
  %call4.i.i63 = call i32 @rcu_read_lock_held() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i63)
  %tobool5.not.i.i64 = icmp eq i32 %call4.i.i63, 0
  br i1 %tobool5.not.i.i64, label %land.lhs.true.i.i68, label %lor.lhs.false.i.i65.xas_next.exit_crit_edge

lor.lhs.false.i.i65.xas_next.exit_crit_edge:      ; preds = %lor.lhs.false.i.i65
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

land.lhs.true.i.i68:                              ; preds = %lor.lhs.false.i.i65
  %call6.i.i66 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i66)
  %tobool7.not.i.i67 = icmp eq i32 %call6.i.i66, 0
  br i1 %tobool7.not.i.i67, label %land.lhs.true.i.i68.xas_next.exit_crit_edge, label %land.lhs.true8.i.i70

land.lhs.true.i.i68.xas_next.exit_crit_edge:      ; preds = %land.lhs.true.i.i68
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

land.lhs.true8.i.i70:                             ; preds = %land.lhs.true.i.i68
  %.b13.i.i69 = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i69, label %land.lhs.true8.i.i70.xas_next.exit_crit_edge, label %if.then.i.i71

land.lhs.true8.i.i70.xas_next.exit_crit_edge:     ; preds = %land.lhs.true8.i.i70
  call void @__sanitizer_cov_trace_pc() #13
  br label %xas_next.exit

if.then.i.i71:                                    ; preds = %land.lhs.true8.i.i70
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @xa_entry.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 1183, ptr noundef nonnull @.str.35) #11
  br label %xas_next.exit

xas_next.exit:                                    ; preds = %if.then.i.i71, %land.lhs.true8.i.i70.xas_next.exit_crit_edge, %land.lhs.true.i.i68.xas_next.exit_crit_edge, %lor.lhs.false.i.i65.xas_next.exit_crit_edge, %if.end.i62.xas_next.exit_crit_edge, %if.then.i56
  %retval.0.i72 = phi ptr [ %call5.i, %if.then.i56 ], [ %79, %if.end.i62.xas_next.exit_crit_edge ], [ %79, %lor.lhs.false.i.i65.xas_next.exit_crit_edge ], [ %79, %land.lhs.true.i.i68.xas_next.exit_crit_edge ], [ %79, %land.lhs.true8.i.i70.xas_next.exit_crit_edge ], [ %79, %if.then.i.i71 ]
  %tobool.not = icmp eq ptr %retval.0.i72, null
  br i1 %tobool.not, label %xas_next.exit.for.end_crit_edge, label %xas_next.exit.for.body_crit_edge

xas_next.exit.for.body_crit_edge:                 ; preds = %xas_next.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.body

xas_next.exit.for.end_crit_edge:                  ; preds = %xas_next.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %for.end

for.end:                                          ; preds = %xas_next.exit.for.end_crit_edge, %folio_test_readahead.exit.for.end_crit_edge, %folio_flags.exit.i.for.end_crit_edge, %if.end14.for.end_crit_edge, %if.end.for.end_crit_edge, %rcu_read_lock.exit.for.end_crit_edge
  %call.i73 = call zeroext i1 @rcu_is_watching() #11
  br i1 %call.i73, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i76

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true.i76:                                ; preds = %for.end
  %call1.i74 = call i32 @debug_lockdep_rcu_enabled() #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i74)
  %tobool.not.i75 = icmp eq i32 %call1.i74, 0
  br i1 %tobool.not.i75, label %land.lhs.true.i76.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i78

land.lhs.true.i76.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i76
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

land.lhs.true2.i78:                               ; preds = %land.lhs.true.i76
  %.b4.i77 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i77, label %land.lhs.true2.i78.rcu_read_unlock.exit_crit_edge, label %if.then.i79

land.lhs.true2.i78.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i78
  call void @__sanitizer_cov_trace_pc() #13
  br label %rcu_read_unlock.exit

if.then.i79:                                      ; preds = %land.lhs.true2.i78
  call void @__sanitizer_cov_trace_pc() #13
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.42, i32 noundef 724, ptr noundef nonnull @.str.44) #11
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i79, %land.lhs.true2.i78.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i76.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #11, !srcloc !318
  %80 = call i32 @llvm.read_register.i32(metadata !289) #11
  %and.i.i.i.i.i80 = and i32 %80, -16384
  %81 = inttoptr i32 %and.i.i.i.i.i80 to ptr
  %preempt_count.i.i.i.i81 = getelementptr inbounds %struct.thread_info, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %preempt_count.i.i.i.i81 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %preempt_count.i.i.i.i81, align 4
  %sub.i.i.i = add i32 %83, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i81, align 4
  call void @rcu_read_unlock_strict() #11
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas) #11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @filemap_create_folio(ptr noundef %file, ptr noundef %mapping, i32 noundef %index, ptr nocapture noundef %fbatch) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %gfp_mask.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 3
  %0 = ptrtoint ptr %gfp_mask.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %gfp_mask.i, align 4
  %call38.i.i.i = tail call ptr @__folio_alloc(i32 noundef %1, i32 noundef 0, i32 noundef 0, ptr noundef null) #11
  %tobool.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %invalidate_lock.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 2
  tail call void @down_read(ptr noundef %invalidate_lock.i) #11
  %2 = ptrtoint ptr %gfp_mask.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gfp_mask.i, align 4
  %and.i = and i32 %3, 3264
  %call3 = tail call i32 @filemap_add_folio(ptr noundef %mapping, ptr noundef nonnull %call38.i.i.i, i32 noundef %index, i32 noundef %and.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call3)
  %cmp = icmp eq i32 %call3, -17
  %spec.store.select = select i1 %cmp, i32 524289, i32 %call3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.store.select)
  %tobool6.not = icmp eq i32 %spec.store.select, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.error14_crit_edge

if.end.error14_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %error14

if.end8:                                          ; preds = %if.end
  %call9 = tail call fastcc i32 @filemap_read_folio(ptr noundef %file, ptr noundef %mapping, ptr noundef nonnull %call38.i.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %if.end8.error14_crit_edge

if.end8.error14_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #13
  br label %error14

if.end12:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @up_read(ptr noundef %invalidate_lock.i) #11
  %4 = ptrtoint ptr %fbatch to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %fbatch, align 4
  %inc.i = add i8 %5, 1
  store i8 %inc.i, ptr %fbatch, align 4
  %idxprom.i = zext i8 %5 to i32
  %arrayidx.i = getelementptr %struct.folio_batch, ptr %fbatch, i32 0, i32 2, i32 %idxprom.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call38.i.i.i, ptr %arrayidx.i, align 4
  br label %cleanup

error14:                                          ; preds = %if.end8.error14_crit_edge, %if.end.error14_crit_edge
  %error.0 = phi i32 [ %spec.store.select, %if.end.error14_crit_edge ], [ %call9, %if.end8.error14_crit_edge ]
  tail call void @up_read(ptr noundef %invalidate_lock.i) #11
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %call38.i.i.i, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %7 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.i.i.i = icmp eq i32 %8, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %error14
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %call38.i.i.i, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %error14
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@filemap_create_folio, %if.then.i.i.i.i)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef nonnull %call38.i.i.i, i32 noundef -1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i, label %folio_put_testzero.exit.i.cleanup_crit_edge

folio_put_testzero.exit.i.cleanup_crit_edge:      ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then.i:                                        ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef nonnull %call38.i.i.i) #11
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %folio_put_testzero.exit.i.cleanup_crit_edge, %if.end12, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end12 ], [ -12, %entry.cleanup_crit_edge ], [ %error.0, %folio_put_testzero.exit.i.cleanup_crit_edge ], [ %error.0, %if.then.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @filemap_update_page(ptr nocapture noundef readonly %iocb, ptr noundef %mapping, ptr nocapture noundef readonly %iter, ptr noundef %folio) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %ki_flags = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 4
  %0 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ki_flags, align 8
  %and = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %invalidate_lock.i57 = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 2
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call.i = tail call i32 @down_read_trylock(ptr noundef %invalidate_lock.i57) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not = icmp eq i32 %call.i, 0
  br i1 %tobool1.not, label %if.then.cleanup_crit_edge, label %if.then.if.end3_crit_edge

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end3

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @down_read(ptr noundef %invalidate_lock.i57) #11
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then.if.end3_crit_edge
  %2 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_flags.exit.i, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %if.end3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %folio, i32 noundef 4) #11
  %5 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %folio, align 4
  %and.i.i4.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool.not.i.i.i, label %folio_trylock.exit, label %folio_flags.exit.i.if.then5_crit_edge

folio_flags.exit.i.if.then5_crit_edge:            ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then5

folio_trylock.exit:                               ; preds = %folio_flags.exit.i
  tail call void @llvm.prefetch.p0(ptr %folio, i32 1, i32 3, i32 1) #11
  %7 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %folio, ptr %folio, i32 1, ptr elementtype(i32) %folio) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %7, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i = and i32 %asmresult.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %phi.cmp.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %phi.cmp.i.i, label %folio_trylock.exit.if.end21_crit_edge, label %folio_trylock.exit.if.then5_crit_edge

folio_trylock.exit.if.then5_crit_edge:            ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.then5

folio_trylock.exit.if.end21_crit_edge:            ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end21

if.then5:                                         ; preds = %folio_trylock.exit.if.then5_crit_edge, %folio_flags.exit.i.if.then5_crit_edge
  %8 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ki_flags, align 8
  %and7 = and i32 %9, 1048584
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %if.end10, label %if.then5.unlock_mapping.thread_crit_edge

if.then5.unlock_mapping.thread_crit_edge:         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock_mapping.thread

if.end10:                                         ; preds = %if.then5
  %and12 = and i32 %9, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  br i1 %tobool13.not, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #13
  %invalidate_lock.i58 = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 2
  tail call void @up_read(ptr noundef %invalidate_lock.i58) #11
  %call.i59 = tail call fastcc i32 @folio_wait_bit_common(ptr noundef %folio, i32 noundef 0, i32 noundef 258, i32 noundef 2) #11
  br label %cleanup

if.end16:                                         ; preds = %if.end10
  %ki_waitq = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 7
  %10 = ptrtoint ptr %ki_waitq to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ki_waitq, align 8
  %12 = ptrtoint ptr %folio to i32
  %mul.i.i.i.i.i = mul i32 %12, 1640531527
  %shr.i.i.i.i = lshr i32 %mul.i.i.i.i.i, 24
  %arrayidx.i.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i.i
  %13 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %folio, ptr %11, align 4
  %bit_nr.i = getelementptr inbounds %struct.wait_page_queue, ptr %11, i32 0, i32 1
  %14 = ptrtoint ptr %bit_nr.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %bit_nr.i, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %arrayidx.i.i) #11
  %entry1.i.i = getelementptr inbounds %struct.wait_page_queue, ptr %11, i32 0, i32 2, i32 3
  %head.i.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i.i, i32 1
  %prev.i.i.i = getelementptr [256 x %struct.wait_queue_head], ptr @folio_wait_table, i32 0, i32 %shr.i.i.i.i, i32 1, i32 1
  %15 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %entry1.i.i, ptr noundef %16, ptr noundef %head.i.i) #11
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.end16.__add_wait_queue_entry_tail.exit.i_crit_edge

if.end16.__add_wait_queue_entry_tail.exit.i_crit_edge: ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #13
  br label %__add_wait_queue_entry_tail.exit.i

if.end.i.i.i.i:                                   ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #13
  %17 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %entry1.i.i, ptr %prev.i.i.i, align 4
  %18 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %head.i.i, ptr %entry1.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.wait_page_queue, ptr %11, i32 0, i32 2, i32 3, i32 1
  %19 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev3.i.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %entry1.i.i, ptr %16, align 4
  br label %__add_wait_queue_entry_tail.exit.i

__add_wait_queue_entry_tail.exit.i:               ; preds = %if.end.i.i.i.i, %if.end16.__add_wait_queue_entry_tail.exit.i_crit_edge
  %21 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %2, align 4
  %and.i.i.i.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i60 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i60, label %folio_set_waiters.exit.i, label %if.then.i.i.i, !prof !299

if.then.i.i.i:                                    ; preds = %__add_wait_queue_entry_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_set_waiters.exit.i:                         ; preds = %__add_wait_queue_entry_tail.exit.i
  tail call void @_set_bit(i32 noundef 7, ptr noundef %folio) #11
  %23 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %2, align 4
  %and.i.i.i16.i = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i16.i)
  %tobool.not.i.i17.i = icmp eq i32 %and.i.i.i16.i, 0
  br i1 %tobool.not.i.i17.i, label %folio_flags.exit.i.i, label %if.then.i.i18.i, !prof !299

if.then.i.i18.i:                                  ; preds = %folio_set_waiters.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i.i:                             ; preds = %folio_set_waiters.exit.i
  %call.i.i.i19.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %folio, i32 noundef 4) #11
  %25 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %folio, align 4
  %and.i.i4.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_trylock.exit.i, label %folio_flags.exit.i.i.__folio_lock_async.exit.thread_crit_edge

folio_flags.exit.i.i.__folio_lock_async.exit.thread_crit_edge: ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %__folio_lock_async.exit.thread

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %folio, i32 1, i32 3, i32 1) #11
  %27 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %folio, ptr %folio, i32 1, ptr elementtype(i32) %folio) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %27, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %if.then.i, label %folio_trylock.exit.i.__folio_lock_async.exit.thread_crit_edge

folio_trylock.exit.i.__folio_lock_async.exit.thread_crit_edge: ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %__folio_lock_async.exit.thread

if.then.i:                                        ; preds = %folio_trylock.exit.i
  %call.i.i.i22.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1.i.i) #11
  br i1 %call.i.i.i22.i, label %if.end.i.i.i23.i, label %if.then.i.__folio_lock_async.exit_crit_edge

if.then.i.__folio_lock_async.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %__folio_lock_async.exit

if.end.i.i.i23.i:                                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #13
  %prev.i.i.i.i = getelementptr inbounds %struct.wait_page_queue, ptr %11, i32 0, i32 2, i32 3, i32 1
  %28 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev.i.i.i.i, align 4
  %30 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %entry1.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev1.i.i.i.i.i, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %31, ptr %29, align 4
  br label %__folio_lock_async.exit

__folio_lock_async.exit.thread:                   ; preds = %folio_trylock.exit.i.__folio_lock_async.exit.thread_crit_edge, %folio_flags.exit.i.i.__folio_lock_async.exit.thread_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef %arrayidx.i.i) #11
  br label %unlock_mapping.thread

__folio_lock_async.exit:                          ; preds = %if.end.i.i.i23.i, %if.then.i.__folio_lock_async.exit_crit_edge
  %34 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1.i.i, align 4
  %prev.i.i24.i = getelementptr inbounds %struct.wait_page_queue, ptr %11, i32 0, i32 2, i32 3, i32 1
  %35 = ptrtoint ptr %prev.i.i24.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i24.i, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %arrayidx.i.i) #11
  br label %if.end21

if.end21:                                         ; preds = %__folio_lock_async.exit, %folio_trylock.exit.if.end21_crit_edge
  %mapping22 = getelementptr inbounds %struct.anon, ptr %folio, i32 0, i32 2
  %36 = ptrtoint ptr %mapping22 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mapping22, align 4
  %tobool23.not = icmp eq ptr %37, null
  br i1 %tobool23.not, label %if.end21.unlock_crit_edge, label %if.end25

if.end21.unlock_crit_edge:                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

if.end25:                                         ; preds = %if.end21
  %ki_pos = getelementptr inbounds %struct.kiocb, ptr %iocb, i32 0, i32 1
  %38 = ptrtoint ptr %ki_pos to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %ki_pos, align 8
  %40 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %2, align 4
  %and.i.i.i.i61 = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i61)
  %tobool.not.i.i.i62 = icmp eq i32 %and.i.i.i.i61, 0
  br i1 %tobool.not.i.i.i62, label %folio_flags.exit.i.i64, label %if.then.i.i.i63, !prof !299

if.then.i.i.i63:                                  ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i.i64:                           ; preds = %if.end25
  %42 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %folio, align 4
  %44 = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.i.not.i = icmp eq i32 %44, 0
  br i1 %tobool.i.not.i, label %if.end.i, label %filemap_range_uptodate.exit.thread76

filemap_range_uptodate.exit.thread76:             ; preds = %folio_flags.exit.i.i64
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  br label %unlock

if.end.i:                                         ; preds = %folio_flags.exit.i.i64
  %45 = ptrtoint ptr %iter to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %iter, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %46)
  %cmp.i.i = icmp eq i8 %46, 3
  br i1 %cmp.i.i, label %if.end.i.if.end28_crit_edge, label %if.end3.i

if.end.i.if.end28_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end28

if.end3.i:                                        ; preds = %if.end.i
  %a_ops.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %47 = ptrtoint ptr %a_ops.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %a_ops.i, align 4
  %is_partially_uptodate.i = getelementptr inbounds %struct.address_space_operations, ptr %48, i32 0, i32 17
  %49 = ptrtoint ptr %is_partially_uptodate.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %is_partially_uptodate.i, align 4
  %tobool.not.i = icmp eq ptr %50, null
  br i1 %tobool.not.i, label %if.end3.i.if.end28_crit_edge, label %if.end5.i

if.end3.i.if.end28_crit_edge:                     ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end28

if.end5.i:                                        ; preds = %if.end3.i
  %51 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %mapping, align 4
  %i_blkbits.i = getelementptr inbounds %struct.inode, ptr %52, i32 0, i32 20
  %53 = ptrtoint ptr %i_blkbits.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %i_blkbits.i, align 2
  %conv.i = zext i8 %54 to i32
  %55 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %56)
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %56, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %PageHead.exit.i.i.i.i, !prof !300

if.then.i.i.i.i.i:                                ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.40) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #11, !srcloc !301
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %if.end5.i
  %57 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %folio, align 4
  %59 = and i32 %58, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool.not.i.i.i.i65 = icmp eq i32 %59, 0
  br i1 %tobool.not.i.i.i.i65, label %PageHead.exit.i.i.i.i.folio_shift.exit.i_crit_edge, label %if.end.i.i.i.i66

PageHead.exit.i.i.i.i.folio_shift.exit.i_crit_edge: ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %folio_shift.exit.i

if.end.i.i.i.i66:                                 ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %60 = getelementptr %struct.page, ptr %folio, i32 1, i32 1
  %compound_order.i.i.i.i = getelementptr inbounds %struct.anon.9, ptr %60, i32 0, i32 2
  %61 = ptrtoint ptr %compound_order.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %compound_order.i.i.i.i, align 1
  %conv.i.i.i.i = zext i8 %62 to i32
  %phi.bo.i.i = add nuw nsw i32 %conv.i.i.i.i, 12
  br label %folio_shift.exit.i

folio_shift.exit.i:                               ; preds = %if.end.i.i.i.i66, %PageHead.exit.i.i.i.i.folio_shift.exit.i_crit_edge
  %retval.0.i.i.i.i = phi i32 [ %phi.bo.i.i, %if.end.i.i.i.i66 ], [ 12, %PageHead.exit.i.i.i.i.folio_shift.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i.i.i.i, i32 %conv.i)
  %cmp.not.i = icmp ugt i32 %retval.0.i.i.i.i, %conv.i
  br i1 %cmp.not.i, label %filemap_range_uptodate.exit, label %folio_shift.exit.i.if.end28_crit_edge

folio_shift.exit.i.if.end28_crit_edge:            ; preds = %folio_shift.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end28

filemap_range_uptodate.exit:                      ; preds = %folio_shift.exit.i
  %count10.i = getelementptr inbounds %struct.iov_iter, ptr %iter, i32 0, i32 4
  %63 = ptrtoint ptr %count10.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %count10.i, align 8
  %index.i.i.i = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1, i32 0, i32 2
  %65 = ptrtoint ptr %index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %index.i.i.i, align 4
  %conv.i.i.i = zext i32 %66 to i64
  %shl.i.i.i = shl nuw nsw i64 %conv.i.i.i, 12
  call void @__sanitizer_cov_trace_cmp8(i64 %39, i64 %shl.i.i.i)
  %cmp12.i = icmp slt i64 %39, %shl.i.i.i
  %sub.neg.i = sub i64 %39, %shl.i.i.i
  %67 = trunc i64 %sub.neg.i to i32
  %pos.addr.0.off0.i = select i1 %cmp12.i, i32 0, i32 %67
  %conv18.i = select i1 %cmp12.i, i32 %67, i32 0
  %count.0.i = add i32 %conv18.i, %64
  %call25.i = tail call i32 %50(ptr noundef %folio, i32 noundef %pos.addr.0.off0.i, i32 noundef %count.0.i) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool26.i.not = icmp eq i32 %call25.i, 0
  br i1 %tobool26.i.not, label %filemap_range_uptodate.exit.if.end28_crit_edge, label %filemap_range_uptodate.exit.unlock_crit_edge

filemap_range_uptodate.exit.unlock_crit_edge:     ; preds = %filemap_range_uptodate.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

filemap_range_uptodate.exit.if.end28_crit_edge:   ; preds = %filemap_range_uptodate.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %if.end28

if.end28:                                         ; preds = %filemap_range_uptodate.exit.if.end28_crit_edge, %folio_shift.exit.i.if.end28_crit_edge, %if.end3.i.if.end28_crit_edge, %if.end.i.if.end28_crit_edge
  %68 = ptrtoint ptr %ki_flags to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %ki_flags, align 8
  %and30 = and i32 %69, 1572872
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %if.end33, label %if.end28.unlock_crit_edge

if.end28.unlock_crit_edge:                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

if.end33:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #13
  %70 = ptrtoint ptr %iocb to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %iocb, align 8
  %call34 = tail call fastcc i32 @filemap_read_folio(ptr noundef %71, ptr noundef %mapping, ptr noundef %folio)
  br label %unlock_mapping

unlock:                                           ; preds = %if.end28.unlock_crit_edge, %filemap_range_uptodate.exit.unlock_crit_edge, %filemap_range_uptodate.exit.thread76, %if.end21.unlock_crit_edge
  %error.0 = phi i32 [ 0, %filemap_range_uptodate.exit.unlock_crit_edge ], [ -11, %if.end28.unlock_crit_edge ], [ 524289, %if.end21.unlock_crit_edge ], [ 0, %filemap_range_uptodate.exit.thread76 ]
  tail call void @folio_unlock(ptr noundef %folio)
  br label %unlock_mapping

unlock_mapping.thread:                            ; preds = %__folio_lock_async.exit.thread, %if.then5.unlock_mapping.thread_crit_edge
  %error.1.ph = phi i32 [ -529, %__folio_lock_async.exit.thread ], [ -11, %if.then5.unlock_mapping.thread_crit_edge ]
  %invalidate_lock.i6779 = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 2
  tail call void @up_read(ptr noundef %invalidate_lock.i6779) #11
  br label %cleanup

unlock_mapping:                                   ; preds = %unlock, %if.end33
  %error.1 = phi i32 [ %error.0, %unlock ], [ %call34, %if.end33 ]
  %invalidate_lock.i67 = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 2
  tail call void @up_read(ptr noundef %invalidate_lock.i67) #11
  call void @__sanitizer_cov_trace_const_cmp4(i32 524289, i32 %error.1)
  %cmp = icmp eq i32 %error.1, 524289
  br i1 %cmp, label %if.then35, label %unlock_mapping.cleanup_crit_edge

unlock_mapping.cleanup_crit_edge:                 ; preds = %unlock_mapping
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then35:                                        ; preds = %unlock_mapping
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %72 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %cmp.i.i.i = icmp eq i32 %73, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i68, label %do.end5.i.i.i, !prof !300

if.then.i.i.i68:                                  ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %if.then35
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %74 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %74, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@filemap_update_page, %if.then.i.i.i.i)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i69 = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %folio, i32 noundef -1, i32 noundef %conv.i.i.i.i69) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i70, label %folio_put_testzero.exit.i.cleanup_crit_edge

folio_put_testzero.exit.i.cleanup_crit_edge:      ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.then.i70:                                      ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef %folio) #11
  br label %cleanup

cleanup:                                          ; preds = %if.then.i70, %folio_put_testzero.exit.i.cleanup_crit_edge, %unlock_mapping.cleanup_crit_edge, %unlock_mapping.thread, %if.then14, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 524289, %if.then14 ], [ -11, %if.then.cleanup_crit_edge ], [ %error.1, %unlock_mapping.cleanup_crit_edge ], [ %error.1.ph, %unlock_mapping.thread ], [ 524289, %folio_put_testzero.exit.i.cleanup_crit_edge ], [ 524289, %if.then.i70 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_cache_sync_ra(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_cache_async_ra(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @down_read_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @copy_page_to_iter(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @touch_atime(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @xas_pause(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mem_cgroup_from_task(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__count_memcg_events(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_page_cache_ra(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @next_uptodate_page(ptr noundef %folio, ptr noundef readonly %mapping, ptr noundef %xas, i32 noundef %end_pgoff) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #13
  call void @llvm.arm.gnu.eabi.mcount()
  %xa_node.i.i = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 6
  %xa_index = getelementptr inbounds %struct.xa_state, ptr %xas, i32 0, i32 1
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %entry
  %folio.addr.0 = phi ptr [ %folio, %entry ], [ %call36, %do.cond.do.body_crit_edge ]
  %tobool.not = icmp eq ptr %folio.addr.0, null
  br i1 %tobool.not, label %do.body.cleanup_crit_edge, label %if.end

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

if.end:                                           ; preds = %do.body
  %magicptr.i = ptrtoint ptr %folio.addr.0 to i32
  %0 = zext i32 %magicptr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.70)
  switch i32 %magicptr.i, label %if.end2 [
    i32 1030, label %if.end.do.cond_crit_edge
    i32 1026, label %if.end4.i
  ]

if.end.do.cond_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.cond

if.end4.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #13
  %1 = ptrtoint ptr %xa_node.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 3 to ptr), ptr %xa_node.i.i, align 4
  br label %do.cond

if.end2:                                          ; preds = %if.end
  %and.i = and i32 %magicptr.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i60.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i60.not, label %if.end5, label %if.end2.do.cond_crit_edge

if.end2.do.cond_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.cond

if.end5:                                          ; preds = %if.end2
  %2 = getelementptr inbounds %struct.page, ptr %folio.addr.0, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_locked.exit, label %if.then.i.i, !prof !299

if.then.i.i:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.addr.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_locked.exit:                           ; preds = %if.end5
  %5 = ptrtoint ptr %folio.addr.0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %folio.addr.0, align 4
  %and1.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end8, label %folio_test_locked.exit.do.cond_crit_edge

folio_test_locked.exit.do.cond_crit_edge:         ; preds = %folio_test_locked.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.cond

if.end8:                                          ; preds = %folio_test_locked.exit
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio.addr.0, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !367
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %7 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !368
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i, label %if.end8.atomic_add_unless.exit.i.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i

if.end8.atomic_add_unless.exit.i.i.i.i_crit_edge: ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #13
  br label %atomic_add_unless.exit.i.i.i.i

do.end11.i.i.i.i.i.i.i:                           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !369
  br label %atomic_add_unless.exit.i.i.i.i

atomic_add_unless.exit.i.i.i.i:                   ; preds = %do.end11.i.i.i.i.i.i.i, %if.end8.atomic_add_unless.exit.i.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@next_uptodate_page, %if.then.i.i.i.i)) #11
          to label %folio_try_get_rcu.exit [label %if.then.i.i.i.i], !srcloc !306

if.then.i.i.i.i:                                  ; preds = %atomic_add_unless.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_unless(ptr noundef nonnull %folio.addr.0, i32 noundef 1, i32 noundef %conv.i.i.i.i) #11
  br label %folio_try_get_rcu.exit

folio_try_get_rcu.exit:                           ; preds = %if.then.i.i.i.i, %atomic_add_unless.exit.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.end11, label %folio_try_get_rcu.exit.do.cond_crit_edge

folio_try_get_rcu.exit.do.cond_crit_edge:         ; preds = %folio_try_get_rcu.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.cond

if.end11:                                         ; preds = %folio_try_get_rcu.exit
  %call12 = tail call fastcc ptr @xas_reload(ptr noundef %xas)
  %cmp.not = icmp eq ptr %folio.addr.0, %call12
  br i1 %cmp.not, label %if.end16, label %if.end11.skip_crit_edge, !prof !299

if.end11.skip_crit_edge:                          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #13
  br label %skip

if.end16:                                         ; preds = %if.end11
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %2, align 4
  %and.i.i.i61 = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i61)
  %tobool.not.i.i62 = icmp eq i32 %and.i.i.i61, 0
  br i1 %tobool.not.i.i62, label %folio_flags.exit.i, label %if.then.i.i63, !prof !299

if.then.i.i63:                                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.addr.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i:                               ; preds = %if.end16
  %10 = ptrtoint ptr %folio.addr.0 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %folio.addr.0, align 4
  %12 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.i64.not = icmp eq i32 %12, 0
  br i1 %tobool.i64.not, label %folio_flags.exit.i.skip_crit_edge, label %lor.lhs.false

folio_flags.exit.i.skip_crit_edge:                ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %skip

lor.lhs.false:                                    ; preds = %folio_flags.exit.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  %13 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %2, align 4
  %and.i.i.i56 = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i56)
  %tobool.not.i.i57 = icmp eq i32 %and.i.i.i56, 0
  br i1 %tobool.not.i.i57, label %folio_test_readahead.exit, label %if.then.i.i58, !prof !299

if.then.i.i58:                                    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.addr.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_test_readahead.exit:                        ; preds = %lor.lhs.false
  %15 = ptrtoint ptr %folio.addr.0 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %folio.addr.0, align 4
  %17 = and i32 %16, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i59.not = icmp eq i32 %17, 0
  br i1 %tobool.i59.not, label %if.end20, label %folio_test_readahead.exit.skip_crit_edge

folio_test_readahead.exit.skip_crit_edge:         ; preds = %folio_test_readahead.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %skip

if.end20:                                         ; preds = %folio_test_readahead.exit
  %18 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %2, align 4
  %and.i.i.i65 = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i65)
  %tobool.not.i.i66 = icmp eq i32 %and.i.i.i65, 0
  br i1 %tobool.not.i.i66, label %folio_flags.exit.i68, label %if.then.i.i67, !prof !299

if.then.i.i67:                                    ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.addr.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i68:                             ; preds = %if.end20
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %folio.addr.0, i32 noundef 4) #11
  %20 = ptrtoint ptr %folio.addr.0 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %folio.addr.0, align 4
  %and.i.i4.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool.not.i.i.i, label %folio_trylock.exit, label %folio_flags.exit.i68.skip_crit_edge

folio_flags.exit.i68.skip_crit_edge:              ; preds = %folio_flags.exit.i68
  call void @__sanitizer_cov_trace_pc() #13
  br label %skip

folio_trylock.exit:                               ; preds = %folio_flags.exit.i68
  tail call void @llvm.prefetch.p0(ptr nonnull %folio.addr.0, i32 1, i32 3, i32 1) #11
  %22 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %folio.addr.0, ptr nonnull %folio.addr.0, i32 1, ptr nonnull elementtype(i32) %folio.addr.0) #11, !srcloc !364
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %22, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !365
  %and1.i.i.i = and i32 %asmresult.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %phi.cmp.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %phi.cmp.i.i, label %if.end23, label %folio_trylock.exit.skip_crit_edge

folio_trylock.exit.skip_crit_edge:                ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #13
  br label %skip

if.end23:                                         ; preds = %folio_trylock.exit
  %mapping24 = getelementptr inbounds %struct.anon, ptr %folio.addr.0, i32 0, i32 2
  %23 = ptrtoint ptr %mapping24 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mapping24, align 4
  %cmp25.not = icmp eq ptr %24, %mapping
  br i1 %cmp25.not, label %if.end27, label %if.end23.unlock_crit_edge

if.end23.unlock_crit_edge:                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

if.end27:                                         ; preds = %if.end23
  %25 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %2, align 4
  %and.i.i.i69 = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i69)
  %tobool.not.i.i70 = icmp eq i32 %and.i.i.i69, 0
  br i1 %tobool.not.i.i70, label %folio_flags.exit.i73, label %if.then.i.i71, !prof !299

if.then.i.i71:                                    ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.addr.0, ptr noundef nonnull @.str.50) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #11, !srcloc !304
  unreachable

folio_flags.exit.i73:                             ; preds = %if.end27
  %27 = ptrtoint ptr %folio.addr.0 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %folio.addr.0, align 4
  %29 = and i32 %28, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.i72.not = icmp eq i32 %29, 0
  br i1 %tobool.i72.not, label %folio_flags.exit.i73.unlock_crit_edge, label %if.end30

folio_flags.exit.i73.unlock_crit_edge:            ; preds = %folio_flags.exit.i73
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

if.end30:                                         ; preds = %folio_flags.exit.i73
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !341
  %30 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mapping, align 4
  %call31 = tail call fastcc i64 @i_size_read(ptr noundef %31)
  %sub = add i64 %call31, 4095
  %div = sdiv i64 %sub, 4096
  %conv = trunc i64 %div to i32
  %32 = ptrtoint ptr %xa_index to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %xa_index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %conv)
  %cmp32.not = icmp ult i32 %33, %conv
  br i1 %cmp32.not, label %if.end30.cleanup_crit_edge, label %if.end30.unlock_crit_edge

if.end30.unlock_crit_edge:                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #13
  br label %unlock

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

unlock:                                           ; preds = %if.end30.unlock_crit_edge, %folio_flags.exit.i73.unlock_crit_edge, %if.end23.unlock_crit_edge
  tail call void @folio_unlock(ptr noundef nonnull %folio.addr.0)
  br label %skip

skip:                                             ; preds = %unlock, %folio_trylock.exit.skip_crit_edge, %folio_flags.exit.i68.skip_crit_edge, %folio_test_readahead.exit.skip_crit_edge, %folio_flags.exit.i.skip_crit_edge, %if.end11.skip_crit_edge
  %call.i.i.i.i.i.i77 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  %34 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp.i.i.i = icmp eq i32 %35, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !300

if.then.i.i.i:                                    ; preds = %skip
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @dump_page(ptr noundef nonnull %folio.addr.0, ptr noundef nonnull @.str.49) #11
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #11, !srcloc !334
  unreachable

do.end5.i.i.i:                                    ; preds = %skip
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !312
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #11
  %36 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #11, !srcloc !313
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %36, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #11, !srcloc !314
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i78 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@next_uptodate_page, %if.then.i.i.i.i80)) #11
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i80], !srcloc !306

if.then.i.i.i.i80:                                ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #13
  %conv.i.i.i.i79 = zext i1 %cmp.i.i.i.i.i.i78 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef nonnull %folio.addr.0, i32 noundef -1, i32 noundef %conv.i.i.i.i79) #11
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i80, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i78, label %if.then.i, label %folio_put_testzero.exit.i.do.cond_crit_edge

folio_put_testzero.exit.i.do.cond_crit_edge:      ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.cond

if.then.i:                                        ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #13
  tail call void @__put_page(ptr noundef nonnull %folio.addr.0) #11
  br label %do.cond

do.cond:                                          ; preds = %if.then.i, %folio_put_testzero.exit.i.do.cond_crit_edge, %folio_try_get_rcu.exit.do.cond_crit_edge, %folio_test_locked.exit.do.cond_crit_edge, %if.end2.do.cond_crit_edge, %if.end4.i, %if.end.do.cond_crit_edge
  %call36 = tail call fastcc ptr @xas_next_entry(ptr noundef %xas, i32 noundef %end_pgoff)
  %cmp37.not = icmp eq ptr %call36, null
  br i1 %cmp37.not, label %do.cond.cleanup_crit_edge, label %do.cond.do.body_crit_edge

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %do.body

do.cond.cleanup_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #13
  br label %cleanup

cleanup:                                          ; preds = %do.cond.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %do.body.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %do.body.cleanup_crit_edge ], [ %folio.addr.0, %if.end30.cleanup_crit_edge ], [ null, %do.cond.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @pmd_install(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmap_local_page_prot(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__percpu_down_read(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcuwait_wake_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mark_inode_dirty(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_fsync_range(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smin.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #10

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #11

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #12 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 75)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #12 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 75)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #8 = { nounwind readonly }
attributes #9 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #10 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #11 = { nounwind }
attributes #12 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #13 = { nomerge }
attributes #14 = { cold nounwind }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !72, !74, !76, !78, !80, !81, !83, !85, !87, !89, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !132, !134, !136, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !163, !165, !167, !169, !170, !171, !173, !174, !175, !177, !179, !181, !183, !185, !187, !188, !189, !190, !191, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !225, !226, !228, !230, !232, !233, !235, !236, !238, !240, !242, !244, !245, !246, !248, !249, !251, !252, !254, !255, !256, !257, !258, !259, !261, !262, !263, !265, !267, !269, !271, !273, !275, !277, !279, !280, !282, !284, !285, !286, !288}
!llvm.named.register.sp = !{!289}
!llvm.module.flags = !{!290, !291, !292, !293, !294, !295, !296, !297}
!llvm.ident = !{!298}

!0 = !{ptr @__tracepoint_mm_filemap_delete_from_page_cache, !1, !"__tracepoint_mm_filemap_delete_from_page_cache", i1 false, i1 false}
!1 = !{!"../include/trace/events/filemap.h", i32 49, i32 1}
!2 = !{ptr @__tracepoint_ptr_mm_filemap_delete_from_page_cache, !1, !"__tracepoint_ptr_mm_filemap_delete_from_page_cache", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_mm_filemap_delete_from_page_cache, !1, !"__SCK__tp_func_mm_filemap_delete_from_page_cache", i1 false, i1 false}
!4 = !{ptr @__tracepoint_mm_filemap_add_to_page_cache, !5, !"__tracepoint_mm_filemap_add_to_page_cache", i1 false, i1 false}
!5 = !{!"../include/trace/events/filemap.h", i32 54, i32 1}
!6 = !{ptr @__tracepoint_ptr_mm_filemap_add_to_page_cache, !5, !"__tracepoint_ptr_mm_filemap_add_to_page_cache", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_mm_filemap_add_to_page_cache, !5, !"__SCK__tp_func_mm_filemap_add_to_page_cache", i1 false, i1 false}
!8 = !{ptr @__tracepoint_filemap_set_wb_err, !9, !"__tracepoint_filemap_set_wb_err", i1 false, i1 false}
!9 = !{!"../include/trace/events/filemap.h", i32 59, i32 1}
!10 = !{ptr @__tracepoint_ptr_filemap_set_wb_err, !9, !"__tracepoint_ptr_filemap_set_wb_err", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_filemap_set_wb_err, !9, !"__SCK__tp_func_filemap_set_wb_err", i1 false, i1 false}
!12 = !{ptr @__tracepoint_file_check_and_advance_wb_err, !13, !"__tracepoint_file_check_and_advance_wb_err", i1 false, i1 false}
!13 = !{!"../include/trace/events/filemap.h", i32 84, i32 1}
!14 = !{ptr @__tracepoint_ptr_file_check_and_advance_wb_err, !13, !"__tracepoint_ptr_file_check_and_advance_wb_err", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_file_check_and_advance_wb_err, !13, !"__SCK__tp_func_file_check_and_advance_wb_err", i1 false, i1 false}
!16 = !{ptr @event_class_mm_filemap_op_page_cache, !17, !"event_class_mm_filemap_op_page_cache", i1 false, i1 false}
!17 = !{!"../include/trace/events/filemap.h", i32 16, i32 1}
!18 = !{ptr @event_mm_filemap_delete_from_page_cache, !1, !"event_mm_filemap_delete_from_page_cache", i1 false, i1 false}
!19 = !{ptr @__event_mm_filemap_delete_from_page_cache, !1, !"__event_mm_filemap_delete_from_page_cache", i1 false, i1 false}
!20 = !{ptr @event_mm_filemap_add_to_page_cache, !5, !"event_mm_filemap_add_to_page_cache", i1 false, i1 false}
!21 = !{ptr @__event_mm_filemap_add_to_page_cache, !5, !"__event_mm_filemap_add_to_page_cache", i1 false, i1 false}
!22 = !{ptr @event_class_filemap_set_wb_err, !9, !"event_class_filemap_set_wb_err", i1 false, i1 false}
!23 = !{ptr @event_filemap_set_wb_err, !9, !"event_filemap_set_wb_err", i1 false, i1 false}
!24 = !{ptr @__event_filemap_set_wb_err, !9, !"__event_filemap_set_wb_err", i1 false, i1 false}
!25 = !{ptr @event_class_file_check_and_advance_wb_err, !13, !"event_class_file_check_and_advance_wb_err", i1 false, i1 false}
!26 = !{ptr @event_file_check_and_advance_wb_err, !13, !"event_file_check_and_advance_wb_err", i1 false, i1 false}
!27 = !{ptr @__event_file_check_and_advance_wb_err, !13, !"__event_file_check_and_advance_wb_err", i1 false, i1 false}
!28 = !{ptr @__bpf_trace_tp_map_mm_filemap_delete_from_page_cache, !1, !"__bpf_trace_tp_map_mm_filemap_delete_from_page_cache", i1 false, i1 false}
!29 = !{ptr @__bpf_trace_tp_map_mm_filemap_add_to_page_cache, !5, !"__bpf_trace_tp_map_mm_filemap_add_to_page_cache", i1 false, i1 false}
!30 = !{ptr @__bpf_trace_tp_map_filemap_set_wb_err, !9, !"__bpf_trace_tp_map_filemap_set_wb_err", i1 false, i1 false}
!31 = !{ptr @__bpf_trace_tp_map_file_check_and_advance_wb_err, !13, !"__bpf_trace_tp_map_file_check_and_advance_wb_err", i1 false, i1 false}
!32 = !{ptr @__ksymtab_filemap_check_errors, !33, !"__ksymtab_filemap_check_errors", i1 false, i1 false}
!33 = !{!"../mm/filemap.c", i32 352, i32 1}
!34 = !{ptr @__ksymtab_filemap_fdatawrite_wbc, !35, !"__ksymtab_filemap_fdatawrite_wbc", i1 false, i1 false}
!35 = !{!"../mm/filemap.c", i32 388, i32 1}
!36 = !{ptr @__ksymtab_filemap_fdatawrite, !37, !"__ksymtab_filemap_fdatawrite", i1 false, i1 false}
!37 = !{!"../mm/filemap.c", i32 430, i32 1}
!38 = !{ptr @__ksymtab_filemap_fdatawrite_range, !39, !"__ksymtab_filemap_fdatawrite_range", i1 false, i1 false}
!39 = !{!"../mm/filemap.c", i32 437, i32 1}
!40 = !{ptr @__ksymtab_filemap_flush, !41, !"__ksymtab_filemap_flush", i1 false, i1 false}
!41 = !{!"../mm/filemap.c", i32 452, i32 1}
!42 = !{ptr @__ksymtab_filemap_range_has_page, !43, !"__ksymtab_filemap_range_has_page", i1 false, i1 false}
!43 = !{!"../mm/filemap.c", i32 495, i32 1}
!44 = !{ptr @__ksymtab_filemap_fdatawait_range, !45, !"__ksymtab_filemap_fdatawait_range", i1 false, i1 false}
!45 = !{!"../mm/filemap.c", i32 550, i32 1}
!46 = !{ptr @__ksymtab_filemap_fdatawait_range_keep_errors, !47, !"__ksymtab_filemap_fdatawait_range_keep_errors", i1 false, i1 false}
!47 = !{!"../mm/filemap.c", i32 572, i32 1}
!48 = !{ptr @__ksymtab_file_fdatawait_range, !49, !"__ksymtab_file_fdatawait_range", i1 false, i1 false}
!49 = !{!"../mm/filemap.c", i32 597, i32 1}
!50 = !{ptr @__ksymtab_filemap_fdatawait_keep_errors, !51, !"__ksymtab_filemap_fdatawait_keep_errors", i1 false, i1 false}
!51 = !{!"../mm/filemap.c", i32 618, i32 1}
!52 = !{ptr @__ksymtab_filemap_range_has_writeback, !53, !"__ksymtab_filemap_range_has_writeback", i1 false, i1 false}
!53 = !{!"../mm/filemap.c", i32 648, i32 1}
!54 = !{ptr @__ksymtab_filemap_write_and_wait_range, !55, !"__ksymtab_filemap_write_and_wait_range", i1 false, i1 false}
!55 = !{!"../mm/filemap.c", i32 691, i32 1}
!56 = !{ptr @__ksymtab___filemap_set_wb_err, !57, !"__ksymtab___filemap_set_wb_err", i1 false, i1 false}
!57 = !{!"../mm/filemap.c", i32 699, i32 1}
!58 = !{ptr @__ksymtab_file_check_and_advance_wb_err, !59, !"__ksymtab_file_check_and_advance_wb_err", i1 false, i1 false}
!59 = !{!"../mm/filemap.c", i32 751, i32 1}
!60 = !{ptr @__ksymtab_file_write_and_wait_range, !61, !"__ksymtab_file_write_and_wait_range", i1 false, i1 false}
!61 = !{!"../mm/filemap.c", i32 786, i32 1}
!62 = !{ptr @.str, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../mm/filemap.c", i32 810, i32 2}
!64 = !{ptr @.str.1, !65, !"<string literal>", i1 false, i1 false}
!65 = !{!"../mm/filemap.c", i32 811, i32 2}
!66 = !{ptr @.str.2, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../mm/filemap.c", i32 812, i32 2}
!68 = !{ptr @__ksymtab_replace_page_cache_page, !69, !"__ksymtab_replace_page_cache_page", i1 false, i1 false}
!69 = !{!"../mm/filemap.c", i32 838, i32 1}
!70 = !{ptr @.str.3, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../mm/filemap.c", i32 848, i32 2}
!72 = !{ptr @.str.4, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../mm/filemap.c", i32 849, i32 2}
!74 = !{ptr @.str.5, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../mm/filemap.c", i32 858, i32 3}
!76 = !{ptr @__ksymtab_add_to_page_cache_locked, !77, !"__ksymtab_add_to_page_cache_locked", i1 false, i1 false}
!77 = !{!"../mm/filemap.c", i32 941, i32 1}
!78 = distinct !{null, !79, !"__already_done", i1 false, i1 false}
!79 = !{!"../mm/filemap.c", i32 962, i32 3}
!80 = !{ptr @.str.6, !79, !"<string literal>", i1 false, i1 false}
!81 = !{ptr @__ksymtab_filemap_add_folio, !82, !"__ksymtab_filemap_add_folio", i1 false, i1 false}
!82 = !{!"../mm/filemap.c", i32 969, i32 1}
!83 = !{ptr @__ksymtab_filemap_invalidate_lock_two, !84, !"__ksymtab_filemap_invalidate_lock_two", i1 false, i1 false}
!84 = !{!"../mm/filemap.c", i32 1010, i32 1}
!85 = !{ptr @__ksymtab_filemap_invalidate_unlock_two, !86, !"__ksymtab_filemap_invalidate_unlock_two", i1 false, i1 false}
!86 = !{!"../mm/filemap.c", i32 1028, i32 1}
!87 = !{ptr @pagecache_init.__key, !88, !"__key", i1 false, i1 false}
!88 = !{!"../mm/filemap.c", i32 1054, i32 3}
!89 = !{ptr @.str.7, !88, !"<string literal>", i1 false, i1 false}
!90 = !{ptr @sysctl_page_lock_unfairness, !91, !"sysctl_page_lock_unfairness", i1 false, i1 false}
!91 = !{!"../mm/filemap.c", i32 1238, i32 5}
!92 = distinct !{null, !93, !"__already_done", i1 false, i1 false}
!93 = !{!"../mm/filemap.c", i32 1445, i32 3}
!94 = !{ptr @__ksymtab_folio_wait_bit, !95, !"__ksymtab_folio_wait_bit", i1 false, i1 false}
!95 = !{!"../mm/filemap.c", i32 1473, i32 1}
!96 = !{ptr @__ksymtab_folio_wait_bit_killable, !97, !"__ksymtab_folio_wait_bit_killable", i1 false, i1 false}
!97 = !{!"../mm/filemap.c", i32 1479, i32 1}
!98 = !{ptr @__ksymtab_folio_add_wait_queue, !99, !"__ksymtab_folio_add_wait_queue", i1 false, i1 false}
!99 = !{!"../mm/filemap.c", i32 1516, i32 1}
!100 = !{ptr @__ksymtab_folio_unlock, !101, !"__ksymtab_folio_unlock", i1 false, i1 false}
!101 = !{!"../mm/filemap.c", i32 1559, i32 1}
!102 = !{ptr @.str.8, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../mm/filemap.c", i32 1574, i32 2}
!104 = !{ptr @__ksymtab_folio_end_private_2, !105, !"__ksymtab_folio_end_private_2", i1 false, i1 false}
!105 = !{!"../mm/filemap.c", i32 1579, i32 1}
!106 = !{ptr @__ksymtab_folio_wait_private_2, !107, !"__ksymtab_folio_wait_private_2", i1 false, i1 false}
!107 = !{!"../mm/filemap.c", i32 1592, i32 1}
!108 = !{ptr @__ksymtab_folio_wait_private_2_killable, !109, !"__ksymtab_folio_wait_private_2_killable", i1 false, i1 false}
!109 = !{!"../mm/filemap.c", i32 1617, i32 1}
!110 = !{ptr @__ksymtab_folio_end_writeback, !111, !"__ksymtab_folio_end_writeback", i1 false, i1 false}
!111 = !{!"../mm/filemap.c", i32 1652, i32 1}
!112 = !{ptr @__ksymtab_page_endio, !113, !"__ksymtab_page_endio", i1 false, i1 false}
!113 = !{!"../mm/filemap.c", i32 1680, i32 1}
!114 = !{ptr @__ksymtab___folio_lock, !115, !"__ksymtab___folio_lock", i1 false, i1 false}
!115 = !{!"../mm/filemap.c", i32 1691, i32 1}
!116 = !{ptr @__ksymtab___folio_lock_killable, !117, !"__ksymtab___folio_lock_killable", i1 false, i1 false}
!117 = !{!"../mm/filemap.c", i32 1698, i32 1}
!118 = !{ptr @__ksymtab_page_cache_next_miss, !119, !"__ksymtab_page_cache_next_miss", i1 false, i1 false}
!119 = !{!"../mm/filemap.c", i32 1804, i32 1}
!120 = !{ptr @__ksymtab_page_cache_prev_miss, !121, !"__ksymtab_page_cache_prev_miss", i1 false, i1 false}
!121 = !{!"../mm/filemap.c", i32 1840, i32 1}
!122 = !{ptr @.str.9, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../mm/filemap.c", i32 1969, i32 3}
!124 = distinct !{null, !125, !"__already_done", i1 false, i1 false}
!125 = !{!"../mm/filemap.c", i32 1994, i32 7}
!126 = !{ptr @__ksymtab___filemap_get_folio, !127, !"__ksymtab___filemap_get_folio", i1 false, i1 false}
!127 = !{!"../mm/filemap.c", i32 2019, i32 1}
!128 = !{ptr @.str.10, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../mm/filemap.c", i32 2131, i32 4}
!130 = !{ptr @__ksymtab_find_get_pages_contig, !131, !"__ksymtab_find_get_pages_contig", i1 false, i1 false}
!131 = !{!"../mm/filemap.c", i32 2282, i32 1}
!132 = !{ptr @__ksymtab_find_get_pages_range_tag, !133, !"__ksymtab_find_get_pages_range_tag", i1 false, i1 false}
!133 = !{!"../mm/filemap.c", i32 2342, i32 1}
!134 = !{ptr @__ksymtab_filemap_read, !135, !"__ksymtab_filemap_read", i1 false, i1 false}
!135 = !{!"../mm/filemap.c", i32 2748, i32 1}
!136 = !{ptr @__ksymtab_generic_file_read_iter, !137, !"__ksymtab_generic_file_read_iter", i1 false, i1 false}
!137 = !{!"../mm/filemap.c", i32 2824, i32 1}
!138 = !{ptr @__ksymtab_filemap_fault, !139, !"__ksymtab_filemap_fault", i1 false, i1 false}
!139 = !{!"../mm/filemap.c", i32 3227, i32 1}
!140 = !{ptr @__ksymtab_filemap_map_pages, !141, !"__ksymtab_filemap_map_pages", i1 false, i1 false}
!141 = !{!"../mm/filemap.c", i32 3389, i32 1}
!142 = !{ptr @generic_file_vm_ops, !143, !"generic_file_vm_ops", i1 false, i1 false}
!143 = !{!"../mm/filemap.c", i32 3417, i32 35}
!144 = !{ptr @__ksymtab_filemap_page_mkwrite, !145, !"__ksymtab_filemap_page_mkwrite", i1 false, i1 false}
!145 = !{!"../mm/filemap.c", i32 3460, i32 1}
!146 = !{ptr @__ksymtab_generic_file_mmap, !147, !"__ksymtab_generic_file_mmap", i1 false, i1 false}
!147 = !{!"../mm/filemap.c", i32 3461, i32 1}
!148 = !{ptr @__ksymtab_generic_file_readonly_mmap, !149, !"__ksymtab_generic_file_readonly_mmap", i1 false, i1 false}
!149 = !{!"../mm/filemap.c", i32 3462, i32 1}
!150 = !{ptr @__ksymtab_read_cache_folio, !151, !"__ksymtab_read_cache_folio", i1 false, i1 false}
!151 = !{!"../mm/filemap.c", i32 3560, i32 1}
!152 = !{ptr @__ksymtab_read_cache_page, !153, !"__ksymtab_read_cache_page", i1 false, i1 false}
!153 = !{!"../mm/filemap.c", i32 3579, i32 1}
!154 = !{ptr @__ksymtab_read_cache_page_gfp, !155, !"__ksymtab_read_cache_page_gfp", i1 false, i1 false}
!155 = !{!"../mm/filemap.c", i32 3602, i32 1}
!156 = !{ptr @__ksymtab_pagecache_write_begin, !157, !"__ksymtab_pagecache_write_begin", i1 false, i1 false}
!157 = !{!"../mm/filemap.c", i32 3613, i32 1}
!158 = !{ptr @__ksymtab_pagecache_write_end, !159, !"__ksymtab_pagecache_write_end", i1 false, i1 false}
!159 = !{!"../mm/filemap.c", i32 3623, i32 1}
!160 = !{ptr @.str.11, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../mm/filemap.c", i32 3630, i32 9}
!162 = !{ptr @dio_warn_stale_pagecache._rs, !161, !"_rs", i1 false, i1 false}
!163 = !{ptr @__func__.dio_warn_stale_pagecache, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../mm/filemap.c", i32 3635, i32 6}
!165 = !{ptr @.str.12, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../mm/filemap.c", i32 3638, i32 11}
!167 = !{ptr @.str.13, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../mm/filemap.c", i32 3639, i32 3}
!169 = !{ptr @dio_warn_stale_pagecache._entry, !168, !"_entry", i1 false, i1 false}
!170 = !{ptr @dio_warn_stale_pagecache._entry_ptr, !168, !"_entry_ptr", i1 false, i1 false}
!171 = !{ptr @.str.15, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../mm/filemap.c", i32 3640, i32 3}
!173 = !{ptr @dio_warn_stale_pagecache._entry.14, !172, !"_entry", i1 false, i1 false}
!174 = !{ptr @dio_warn_stale_pagecache._entry_ptr.16, !172, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @__ksymtab_generic_file_direct_write, !176, !"__ksymtab_generic_file_direct_write", i1 false, i1 false}
!176 = !{!"../mm/filemap.c", i32 3726, i32 1}
!177 = !{ptr @__ksymtab_generic_perform_write, !178, !"__ksymtab_generic_perform_write", i1 false, i1 false}
!178 = !{!"../mm/filemap.c", i32 3804, i32 1}
!179 = !{ptr @__ksymtab___generic_file_write_iter, !180, !"__ksymtab___generic_file_write_iter", i1 false, i1 false}
!180 = !{!"../mm/filemap.c", i32 3900, i32 1}
!181 = !{ptr @__ksymtab_generic_file_write_iter, !182, !"__ksymtab_generic_file_write_iter", i1 false, i1 false}
!182 = !{!"../mm/filemap.c", i32 3931, i32 1}
!183 = !{ptr @__ksymtab_filemap_release_folio, !184, !"__ksymtab_filemap_release_folio", i1 false, i1 false}
!184 = !{!"../mm/filemap.c", i32 3962, i32 1}
!185 = !{ptr @folio_wait_table, !186, !"folio_wait_table", i1 false, i1 false}
!186 = !{!"../mm/filemap.c", i32 1042, i32 26}
!187 = !{ptr @__tpstrtab_mm_filemap_delete_from_page_cache, !1, !"__tpstrtab_mm_filemap_delete_from_page_cache", i1 false, i1 false}
!188 = !{ptr @__tpstrtab_mm_filemap_add_to_page_cache, !5, !"__tpstrtab_mm_filemap_add_to_page_cache", i1 false, i1 false}
!189 = !{ptr @__tpstrtab_filemap_set_wb_err, !9, !"__tpstrtab_filemap_set_wb_err", i1 false, i1 false}
!190 = !{ptr @__tpstrtab_file_check_and_advance_wb_err, !13, !"__tpstrtab_file_check_and_advance_wb_err", i1 false, i1 false}
!191 = !{ptr @str__filemap__trace_system_name, !192, !"str__filemap__trace_system_name", i1 false, i1 false}
!192 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!193 = !{ptr @.str.17, !17, !"<string literal>", i1 false, i1 false}
!194 = !{ptr @.str.18, !17, !"<string literal>", i1 false, i1 false}
!195 = !{ptr @.str.19, !17, !"<string literal>", i1 false, i1 false}
!196 = !{ptr @.str.20, !17, !"<string literal>", i1 false, i1 false}
!197 = !{ptr @.str.21, !17, !"<string literal>", i1 false, i1 false}
!198 = !{ptr @.str.22, !17, !"<string literal>", i1 false, i1 false}
!199 = !{ptr @.str.23, !17, !"<string literal>", i1 false, i1 false}
!200 = !{ptr @.str.24, !17, !"<string literal>", i1 false, i1 false}
!201 = !{ptr @trace_event_fields_mm_filemap_op_page_cache, !17, !"trace_event_fields_mm_filemap_op_page_cache", i1 false, i1 false}
!202 = !{ptr @trace_event_type_funcs_mm_filemap_op_page_cache, !17, !"trace_event_type_funcs_mm_filemap_op_page_cache", i1 false, i1 false}
!203 = !{ptr @.str.25, !17, !"<string literal>", i1 false, i1 false}
!204 = !{ptr @print_fmt_mm_filemap_op_page_cache, !17, !"print_fmt_mm_filemap_op_page_cache", i1 false, i1 false}
!205 = !{ptr @.str.26, !9, !"<string literal>", i1 false, i1 false}
!206 = !{ptr @.str.27, !9, !"<string literal>", i1 false, i1 false}
!207 = !{ptr @trace_event_fields_filemap_set_wb_err, !9, !"trace_event_fields_filemap_set_wb_err", i1 false, i1 false}
!208 = !{ptr @trace_event_type_funcs_filemap_set_wb_err, !9, !"trace_event_type_funcs_filemap_set_wb_err", i1 false, i1 false}
!209 = !{ptr @.str.28, !9, !"<string literal>", i1 false, i1 false}
!210 = !{ptr @print_fmt_filemap_set_wb_err, !9, !"print_fmt_filemap_set_wb_err", i1 false, i1 false}
!211 = !{ptr @.str.29, !13, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @.str.30, !13, !"<string literal>", i1 false, i1 false}
!213 = !{ptr @.str.31, !13, !"<string literal>", i1 false, i1 false}
!214 = !{ptr @.str.32, !13, !"<string literal>", i1 false, i1 false}
!215 = !{ptr @trace_event_fields_file_check_and_advance_wb_err, !13, !"trace_event_fields_file_check_and_advance_wb_err", i1 false, i1 false}
!216 = !{ptr @trace_event_type_funcs_file_check_and_advance_wb_err, !13, !"trace_event_type_funcs_file_check_and_advance_wb_err", i1 false, i1 false}
!217 = !{ptr @.str.33, !13, !"<string literal>", i1 false, i1 false}
!218 = !{ptr @print_fmt_file_check_and_advance_wb_err, !13, !"print_fmt_file_check_and_advance_wb_err", i1 false, i1 false}
!219 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!220 = !{ptr @.str.34, !1, !"<string literal>", i1 false, i1 false}
!221 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!222 = !{ptr @.str.35, !1, !"<string literal>", i1 false, i1 false}
!223 = distinct !{null, !224, !"__already_done", i1 false, i1 false}
!224 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!225 = !{ptr @.str.36, !224, !"<string literal>", i1 false, i1 false}
!226 = !{ptr @.str.37, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../mm/filemap.c", i32 153, i32 2}
!228 = distinct !{null, !229, !"__already_done", i1 false, i1 false}
!229 = !{!"../mm/filemap.c", i32 203, i32 6}
!230 = distinct !{null, !231, !"__already_done", i1 false, i1 false}
!231 = !{!"../include/linux/pagemap.h", i32 225, i32 2}
!232 = !{ptr @.str.38, !231, !"<string literal>", i1 false, i1 false}
!233 = distinct !{null, !234, !"__already_done", i1 false, i1 false}
!234 = !{!"../include/linux/backing-dev.h", i32 269, i32 2}
!235 = !{ptr @.str.39, !234, !"<string literal>", i1 false, i1 false}
!236 = !{ptr @.str.40, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../include/linux/page-flags.h", i32 698, i32 1}
!238 = !{ptr @.str.41, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../mm/filemap.c", i32 297, i32 4}
!240 = distinct !{null, !241, !"__already_done", i1 false, i1 false}
!241 = !{!"../mm/filemap.c", i32 302, i32 3}
!242 = distinct !{null, !243, !"__warned", i1 false, i1 false}
!243 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!244 = !{ptr @.str.42, !243, !"<string literal>", i1 false, i1 false}
!245 = !{ptr @.str.43, !243, !"<string literal>", i1 false, i1 false}
!246 = distinct !{null, !247, !"__warned", i1 false, i1 false}
!247 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!248 = !{ptr @.str.44, !247, !"<string literal>", i1 false, i1 false}
!249 = !{ptr @.str.45, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../include/linux/page-flags.h", i32 416, i32 1}
!251 = !{ptr @.str.46, !250, !"<string literal>", i1 false, i1 false}
!252 = distinct !{null, !253, !"__warned", i1 false, i1 false}
!253 = !{!"../include/linux/xarray.h", i32 1182, i32 9}
!254 = !{ptr @.str.47, !253, !"<string literal>", i1 false, i1 false}
!255 = distinct !{null, !9, !"__already_done", i1 false, i1 false}
!256 = distinct !{null, !9, !"__warned", i1 false, i1 false}
!257 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!258 = distinct !{null, !13, !"__warned", i1 false, i1 false}
!259 = !{ptr @.str.48, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../include/linux/mm.h", i32 1160, i32 2}
!261 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!262 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!263 = !{ptr @.str.49, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../include/linux/mm.h", i32 717, i32 2}
!265 = distinct !{null, !266, !"__already_done", i1 false, i1 false}
!266 = !{!"../mm/filemap.c", i32 1314, i32 3}
!267 = !{ptr @.str.50, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../include/linux/page-flags.h", i32 260, i32 2}
!269 = distinct !{null, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../include/linux/page-flags.h", i32 261, i32 2}
!271 = !{ptr @.str.52, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../include/linux/mm.h", i32 1368, i32 10}
!273 = distinct !{null, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../include/linux/gfp.h", i32 579, i32 2}
!275 = distinct !{null, !276, !"__warned", i1 false, i1 false}
!276 = !{!"../include/linux/xarray.h", i32 1166, i32 9}
!277 = distinct !{null, !278, !"__warned", i1 false, i1 false}
!278 = !{!"../include/linux/memcontrol.h", i32 1059, i32 31}
!279 = !{ptr @.str.54, !278, !"<string literal>", i1 false, i1 false}
!280 = !{ptr @.str.55, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../include/linux/percpu-rwsem.h", i32 49, i32 2}
!282 = distinct !{null, !283, !"__warned", i1 false, i1 false}
!283 = !{!"../include/linux/rcu_sync.h", i32 34, i32 2}
!284 = !{ptr @.str.56, !283, !"<string literal>", i1 false, i1 false}
!285 = !{ptr @.str.57, !283, !"<string literal>", i1 false, i1 false}
!286 = distinct !{null, !287, !"__already_done", i1 false, i1 false}
!287 = !{!"../include/linux/seqlock.h", i32 271, i32 2}
!288 = !{ptr @.str.58, !287, !"<string literal>", i1 false, i1 false}
!289 = !{!"sp"}
!290 = !{i32 1, !"wchar_size", i32 2}
!291 = !{i32 1, !"min_enum_size", i32 4}
!292 = !{i32 8, !"branch-target-enforcement", i32 0}
!293 = !{i32 8, !"sign-return-address", i32 0}
!294 = !{i32 8, !"sign-return-address-all", i32 0}
!295 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!296 = !{i32 7, !"uwtable", i32 1}
!297 = !{i32 7, !"frame-pointer", i32 2}
!298 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!299 = !{!"branch_weights", i32 2000, i32 1}
!300 = !{!"branch_weights", i32 1, i32 2000}
!301 = !{i64 2151441551, i64 2151442042, i64 2151441588, i64 2151441644, i64 2151441678, i64 2151441702, i64 2151441743, i64 2151441764, i64 2151441792, i64 2151441826}
!302 = !{!"auto-init"}
!303 = !{i64 2151760167, i64 2151760655, i64 2151760204, i64 2151760260, i64 2151760294, i64 2151760318, i64 2151760359, i64 2151760380, i64 2151760408, i64 2151760442}
!304 = !{i64 2150678826, i64 2150679317, i64 2150678863, i64 2150678919, i64 2150678953, i64 2150678977, i64 2150679018, i64 2150679039, i64 2150679067, i64 2150679101}
!305 = !{i64 2156360436, i64 2156360913, i64 2156360473, i64 2156360529, i64 2156360563, i64 2156360587, i64 2156360628, i64 2156360649, i64 2156360677, i64 2156360711}
!306 = !{i64 2148594679, i64 2148594684, i64 2148594697, i64 2148594741, i64 2148594775, i64 2148594796}
!307 = !{i64 2155425272}
!308 = !{i64 2155425511}
!309 = !{i64 2149591086}
!310 = !{i64 2149592122}
!311 = !{i64 2156362216, i64 2156362693, i64 2156362253, i64 2156362309, i64 2156362343, i64 2156362367, i64 2156362408, i64 2156362429, i64 2156362457, i64 2156362491}
!312 = !{i64 2148858557}
!313 = !{i64 2148773266, i64 2148773298, i64 2148773327, i64 2148773361, i64 2148773392, i64 2148773415}
!314 = !{i64 2148858786}
!315 = !{i64 2156367214, i64 2156367691, i64 2156367251, i64 2156367307, i64 2156367341, i64 2156367365, i64 2156367406, i64 2156367427, i64 2156367455, i64 2156367489}
!316 = !{i64 2156369910, i64 2156370387, i64 2156369947, i64 2156370003, i64 2156370037, i64 2156370061, i64 2156370102, i64 2156370123, i64 2156370151, i64 2156370185}
!317 = !{i64 2149582527}
!318 = !{i64 2149582793}
!319 = !{i64 2150749218, i64 2150749391, i64 2150749406, i64 2150749458, i64 2150749517, i64 2150749541, i64 2150749582, i64 2150749603, i64 2150749631, i64 2150749663}
!320 = !{i64 2150750093, i64 2150750266, i64 2150750281, i64 2150750333, i64 2150750392, i64 2150750416, i64 2150750457, i64 2150750478, i64 2150750506, i64 2150750538}
!321 = !{i64 2150788735, i64 2150789226, i64 2150788772, i64 2150788828, i64 2150788862, i64 2150788886, i64 2150788927, i64 2150788948, i64 2150788976, i64 2150789010}
!322 = !{i64 2150686259, i64 2150686750, i64 2150686296, i64 2150686352, i64 2150686386, i64 2150686410, i64 2150686451, i64 2150686472, i64 2150686500, i64 2150686534}
!323 = !{i64 2151194680, i64 2151195171, i64 2151194717, i64 2151194773, i64 2151194807, i64 2151194831, i64 2151194872, i64 2151194893, i64 2151194921, i64 2151194955}
!324 = !{i64 2155464085}
!325 = !{i64 2155464310}
!326 = !{i64 2155481122}
!327 = !{i64 2155481361}
!328 = !{i64 2156411002, i64 2156411479, i64 2156411039, i64 2156411095, i64 2156411129, i64 2156411153, i64 2156411194, i64 2156411215, i64 2156411243, i64 2156411277}
!329 = !{i64 2156412744, i64 2156413221, i64 2156412781, i64 2156412837, i64 2156412871, i64 2156412895, i64 2156412936, i64 2156412957, i64 2156412985, i64 2156413019}
!330 = !{i64 2156414466, i64 2156414943, i64 2156414503, i64 2156414559, i64 2156414593, i64 2156414617, i64 2156414658, i64 2156414679, i64 2156414707, i64 2156414741}
!331 = !{i64 2153253090, i64 2153253574, i64 2153253127, i64 2153253183, i64 2153253217, i64 2153253241, i64 2153253282, i64 2153253303, i64 2153253331, i64 2153253365}
!332 = !{i64 2148770081, i64 2148770107, i64 2148770136, i64 2148770170, i64 2148770201, i64 2148770224}
!333 = !{i64 2151102279, i64 2151102770, i64 2151102316, i64 2151102372, i64 2151102406, i64 2151102430, i64 2151102471, i64 2151102492, i64 2151102520, i64 2151102554}
!334 = !{i64 2153229117, i64 2153229600, i64 2153229154, i64 2153229210, i64 2153229244, i64 2153229268, i64 2153229309, i64 2153229330, i64 2153229358, i64 2153229392}
!335 = !{i64 2156418489, i64 2156418966, i64 2156418526, i64 2156418582, i64 2156418616, i64 2156418640, i64 2156418681, i64 2156418702, i64 2156418730, i64 2156418764}
!336 = !{i64 2156420302, i64 2156420779, i64 2156420339, i64 2156420395, i64 2156420429, i64 2156420453, i64 2156420494, i64 2156420515, i64 2156420543, i64 2156420577}
!337 = !{i64 2156422313, i64 2156422790, i64 2156422350, i64 2156422406, i64 2156422440, i64 2156422464, i64 2156422505, i64 2156422526, i64 2156422554, i64 2156422588}
!338 = !{i64 2155442762}
!339 = !{i64 2155442991}
!340 = !{i64 2154923819, i64 2154924307, i64 2154923856, i64 2154923912, i64 2154923946, i64 2154923970, i64 2154924011, i64 2154924032, i64 2154924060, i64 2154924094}
!341 = !{i64 2151428718}
!342 = !{i64 2152285584}
!343 = !{i64 2154249288}
!344 = !{i64 2156462371}
!345 = !{i64 2156468087}
!346 = !{i64 2156440597}
!347 = !{i64 2148389992}
!348 = !{i64 2156449325}
!349 = !{i64 2156455041}
!350 = !{i64 2156475867, i64 2156476345, i64 2156475904, i64 2156475960, i64 2156475994, i64 2156476018, i64 2156476059, i64 2156476080, i64 2156476108, i64 2156476142}
!351 = !{i64 2148866931}
!352 = !{i64 2148777326, i64 2148777358, i64 2148777387, i64 2148777421, i64 2148777452, i64 2148777475}
!353 = !{i64 2156443472}
!354 = !{i64 2156443314}
!355 = !{i64 2156479059, i64 2156479537, i64 2156479096, i64 2156479152, i64 2156479186, i64 2156479210, i64 2156479251, i64 2156479272, i64 2156479300, i64 2156479334}
!356 = !{i64 2156489406, i64 2156489884, i64 2156489443, i64 2156489499, i64 2156489533, i64 2156489557, i64 2156489598, i64 2156489619, i64 2156489647, i64 2156489681}
!357 = !{i64 2156490821}
!358 = !{i64 2153258872, i64 2153259356, i64 2153258909, i64 2153258965, i64 2153258999, i64 2153259023, i64 2153259064, i64 2153259085, i64 2153259113, i64 2153259147}
!359 = !{i64 2151429789}
!360 = !{i64 2151437702, i64 2151437875, i64 2151437890, i64 2151437942, i64 2151438001, i64 2151438025, i64 2151438066, i64 2151438087, i64 2151438115, i64 2151438147}
!361 = !{i64 2151438577, i64 2151438750, i64 2151438765, i64 2151438817, i64 2151438876, i64 2151438900, i64 2151438941, i64 2151438962, i64 2151438990, i64 2151439022}
!362 = !{i64 2150740416, i64 2150740589, i64 2150740604, i64 2150740656, i64 2150740715, i64 2150740739, i64 2150740780, i64 2150740801, i64 2150740829, i64 2150740861}
!363 = !{i64 2150741291, i64 2150741464, i64 2150741479, i64 2150741531, i64 2150741590, i64 2150741614, i64 2150741655, i64 2150741676, i64 2150741704, i64 2150741736}
!364 = !{i64 2148778939, i64 2148778971, i64 2148779000, i64 2148779034, i64 2148779065, i64 2148779088}
!365 = !{i64 2148868044}
!366 = !{i64 2156501714, i64 2156502192, i64 2156501751, i64 2156501807, i64 2156501841, i64 2156501865, i64 2156501906, i64 2156501927, i64 2156501955, i64 2156501989}
!367 = !{i64 2148769500}
!368 = !{i64 1256100, i64 1256125, i64 1256147, i64 1256163, i64 1256175, i64 1256195, i64 1256219, i64 1256235, i64 1256247}
!369 = !{i64 2148769688}
!370 = !{i64 2156507542, i64 2156508020, i64 2156507579, i64 2156507635, i64 2156507669, i64 2156507693, i64 2156507734, i64 2156507755, i64 2156507783, i64 2156507817}
!371 = !{i64 1174761, i64 1174822}
!372 = !{i64 1177493}
!373 = !{i64 1177778}
!374 = !{i64 2152612912}
!375 = !{i64 2152612754}
!376 = !{i64 2152613082}
!377 = !{i64 2150198896}
!378 = !{i64 2156541138, i64 2156541616, i64 2156541175, i64 2156541231, i64 2156541265, i64 2156541289, i64 2156541330, i64 2156541351, i64 2156541379, i64 2156541413}
!379 = !{i64 2154246517}
!380 = !{i64 2152285377}
!381 = !{i64 2152453223}
!382 = !{i64 2152462073}
!383 = !{i64 2152472027}
!384 = !{i64 2152481522}
!385 = !{i64 2152490999}
!386 = !{i64 2152614843}
!387 = !{i64 2150091148}
!388 = !{i64 2150096082}
!389 = !{i64 2150117800}
!390 = !{i64 2150122694}
!391 = !{i64 2150199221}
!392 = !{i64 2150199546}
!393 = !{i64 2152626705}
!394 = !{i64 2156587108, i64 2156587586, i64 2156587145, i64 2156587201, i64 2156587235, i64 2156587259, i64 2156587300, i64 2156587321, i64 2156587349, i64 2156587383}
