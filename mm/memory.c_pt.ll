; ModuleID = '/llk/IR_all_yes/mm/memory.c_pt.bc'
source_filename = "../mm/memory.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+max_mapnr\22, \22a\22\09"
module asm "\09.weak\09__crc_max_mapnr\09\09\09\09"
module asm "\09.long\09__crc_max_mapnr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_max_mapnr:\09\09\09\09\09"
module asm "\09.asciz \09\22max_mapnr\22\09\09\09\09\09"
module asm "__kstrtabns_max_mapnr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+mem_map\22, \22a\22\09"
module asm "\09.weak\09__crc_mem_map\09\09\09\09"
module asm "\09.long\09__crc_mem_map\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mem_map:\09\09\09\09\09"
module asm "\09.asciz \09\22mem_map\22\09\09\09\09\09"
module asm "__kstrtabns_mem_map:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+high_memory\22, \22a\22\09"
module asm "\09.weak\09__crc_high_memory\09\09\09\09"
module asm "\09.long\09__crc_high_memory\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_high_memory:\09\09\09\09\09"
module asm "\09.asciz \09\22high_memory\22\09\09\09\09\09"
module asm "__kstrtabns_high_memory:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+zero_pfn\22, \22a\22\09"
module asm "\09.weak\09__crc_zero_pfn\09\09\09\09"
module asm "\09.long\09__crc_zero_pfn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_zero_pfn:\09\09\09\09\09"
module asm "\09.asciz \09\22zero_pfn\22\09\09\09\09\09"
module asm "__kstrtabns_zero_pfn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+zap_vma_ptes\22, \22a\22\09"
module asm "\09.weak\09__crc_zap_vma_ptes\09\09\09\09"
module asm "\09.long\09__crc_zap_vma_ptes\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_zap_vma_ptes:\09\09\09\09\09"
module asm "\09.asciz \09\22zap_vma_ptes\22\09\09\09\09\09"
module asm "__kstrtabns_zap_vma_ptes:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vm_insert_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_vm_insert_pages\09\09\09\09"
module asm "\09.long\09__crc_vm_insert_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vm_insert_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22vm_insert_pages\22\09\09\09\09\09"
module asm "__kstrtabns_vm_insert_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vm_insert_page\22, \22a\22\09"
module asm "\09.weak\09__crc_vm_insert_page\09\09\09\09"
module asm "\09.long\09__crc_vm_insert_page\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vm_insert_page:\09\09\09\09\09"
module asm "\09.asciz \09\22vm_insert_page\22\09\09\09\09\09"
module asm "__kstrtabns_vm_insert_page:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vm_map_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_vm_map_pages\09\09\09\09"
module asm "\09.long\09__crc_vm_map_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vm_map_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22vm_map_pages\22\09\09\09\09\09"
module asm "__kstrtabns_vm_map_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vm_map_pages_zero\22, \22a\22\09"
module asm "\09.weak\09__crc_vm_map_pages_zero\09\09\09\09"
module asm "\09.long\09__crc_vm_map_pages_zero\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vm_map_pages_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22vm_map_pages_zero\22\09\09\09\09\09"
module asm "__kstrtabns_vm_map_pages_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vmf_insert_pfn_prot\22, \22a\22\09"
module asm "\09.weak\09__crc_vmf_insert_pfn_prot\09\09\09\09"
module asm "\09.long\09__crc_vmf_insert_pfn_prot\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vmf_insert_pfn_prot:\09\09\09\09\09"
module asm "\09.asciz \09\22vmf_insert_pfn_prot\22\09\09\09\09\09"
module asm "__kstrtabns_vmf_insert_pfn_prot:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vmf_insert_pfn\22, \22a\22\09"
module asm "\09.weak\09__crc_vmf_insert_pfn\09\09\09\09"
module asm "\09.long\09__crc_vmf_insert_pfn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vmf_insert_pfn:\09\09\09\09\09"
module asm "\09.asciz \09\22vmf_insert_pfn\22\09\09\09\09\09"
module asm "__kstrtabns_vmf_insert_pfn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vmf_insert_mixed_prot\22, \22a\22\09"
module asm "\09.weak\09__crc_vmf_insert_mixed_prot\09\09\09\09"
module asm "\09.long\09__crc_vmf_insert_mixed_prot\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vmf_insert_mixed_prot:\09\09\09\09\09"
module asm "\09.asciz \09\22vmf_insert_mixed_prot\22\09\09\09\09\09"
module asm "__kstrtabns_vmf_insert_mixed_prot:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vmf_insert_mixed\22, \22a\22\09"
module asm "\09.weak\09__crc_vmf_insert_mixed\09\09\09\09"
module asm "\09.long\09__crc_vmf_insert_mixed\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vmf_insert_mixed:\09\09\09\09\09"
module asm "\09.asciz \09\22vmf_insert_mixed\22\09\09\09\09\09"
module asm "__kstrtabns_vmf_insert_mixed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vmf_insert_mixed_mkwrite\22, \22a\22\09"
module asm "\09.weak\09__crc_vmf_insert_mixed_mkwrite\09\09\09\09"
module asm "\09.long\09__crc_vmf_insert_mixed_mkwrite\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vmf_insert_mixed_mkwrite:\09\09\09\09\09"
module asm "\09.asciz \09\22vmf_insert_mixed_mkwrite\22\09\09\09\09\09"
module asm "__kstrtabns_vmf_insert_mixed_mkwrite:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+remap_pfn_range\22, \22a\22\09"
module asm "\09.weak\09__crc_remap_pfn_range\09\09\09\09"
module asm "\09.long\09__crc_remap_pfn_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_remap_pfn_range:\09\09\09\09\09"
module asm "\09.asciz \09\22remap_pfn_range\22\09\09\09\09\09"
module asm "__kstrtabns_remap_pfn_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vm_iomap_memory\22, \22a\22\09"
module asm "\09.weak\09__crc_vm_iomap_memory\09\09\09\09"
module asm "\09.long\09__crc_vm_iomap_memory\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vm_iomap_memory:\09\09\09\09\09"
module asm "\09.asciz \09\22vm_iomap_memory\22\09\09\09\09\09"
module asm "__kstrtabns_vm_iomap_memory:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+apply_to_page_range\22, \22a\22\09"
module asm "\09.weak\09__crc_apply_to_page_range\09\09\09\09"
module asm "\09.long\09__crc_apply_to_page_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_apply_to_page_range:\09\09\09\09\09"
module asm "\09.asciz \09\22apply_to_page_range\22\09\09\09\09\09"
module asm "__kstrtabns_apply_to_page_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+apply_to_existing_page_range\22, \22a\22\09"
module asm "\09.weak\09__crc_apply_to_existing_page_range\09\09\09\09"
module asm "\09.long\09__crc_apply_to_existing_page_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_apply_to_existing_page_range:\09\09\09\09\09"
module asm "\09.asciz \09\22apply_to_existing_page_range\22\09\09\09\09\09"
module asm "__kstrtabns_apply_to_existing_page_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+unmap_mapping_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_unmap_mapping_pages\09\09\09\09"
module asm "\09.long\09__crc_unmap_mapping_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unmap_mapping_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22unmap_mapping_pages\22\09\09\09\09\09"
module asm "__kstrtabns_unmap_mapping_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unmap_mapping_range\22, \22a\22\09"
module asm "\09.weak\09__crc_unmap_mapping_range\09\09\09\09"
module asm "\09.long\09__crc_unmap_mapping_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unmap_mapping_range:\09\09\09\09\09"
module asm "\09.asciz \09\22unmap_mapping_range\22\09\09\09\09\09"
module asm "__kstrtabns_unmap_mapping_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+handle_mm_fault\22, \22a\22\09"
module asm "\09.weak\09__crc_handle_mm_fault\09\09\09\09"
module asm "\09.long\09__crc_handle_mm_fault\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_handle_mm_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22handle_mm_fault\22\09\09\09\09\09"
module asm "__kstrtabns_handle_mm_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+follow_pte\22, \22a\22\09"
module asm "\09.weak\09__crc_follow_pte\09\09\09\09"
module asm "\09.long\09__crc_follow_pte\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_follow_pte:\09\09\09\09\09"
module asm "\09.asciz \09\22follow_pte\22\09\09\09\09\09"
module asm "__kstrtabns_follow_pte:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+follow_pfn\22, \22a\22\09"
module asm "\09.weak\09__crc_follow_pfn\09\09\09\09"
module asm "\09.long\09__crc_follow_pfn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_follow_pfn:\09\09\09\09\09"
module asm "\09.asciz \09\22follow_pfn\22\09\09\09\09\09"
module asm "__kstrtabns_follow_pfn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+access_process_vm\22, \22a\22\09"
module asm "\09.weak\09__crc_access_process_vm\09\09\09\09"
module asm "\09.long\09__crc_access_process_vm\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_access_process_vm:\09\09\09\09\09"
module asm "\09.asciz \09\22access_process_vm\22\09\09\09\09\09"
module asm "__kstrtabns_access_process_vm:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__might_fault\22, \22a\22\09"
module asm "\09.weak\09__crc___might_fault\09\09\09\09"
module asm "\09.long\09__crc___might_fault\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___might_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22__might_fault\22\09\09\09\09\09"
module asm "__kstrtabns___might_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.mm_struct = type { %struct.anon.9, [0 x i32] }
%struct.anon.9 = type { ptr, %struct.rb_root, i64, ptr, i32, i32, i32, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i32, i32, i32, i32, %struct.atomic64_t, i32, i32, i32, i32, %struct.seqcount, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [42 x i32], %struct.mm_rss_stat, ptr, %struct.mm_context_t, i32, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.list_head = type { ptr, ptr }
%struct.atomic64_t = type { i64 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.mm_rss_stat = type { [4 x %struct.atomic_t] }
%struct.mm_context_t = type { %struct.atomic64_t, i32, i32, i32, i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type { ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.77 }
%union.anon.77 = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.cpu_tlb_fns = type { ptr, ptr, i32 }
%struct.lock_class_key = type { %union.anon.2 }
%union.anon.2 = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.cpu_user_fns = type { ptr, ptr }
%struct.static_key_true = type { %struct.static_key }
%struct.vm_event_state = type { [76 x i32] }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.67, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.10 }
%struct.llist_node = type { ptr }
%union.anon.10 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.12 }
%union.anon.12 = type { %struct.anon.13 }
%struct.anon.13 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.67 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.mmu_gather = type { ptr, i32, i32, i16, i32, ptr, %struct.mmu_gather_batch, [8 x ptr] }
%struct.mmu_gather_batch = type { ptr, i32, i32, [0 x ptr] }
%struct.page = type { i32, %union.anon, %union.anon.95, %struct.atomic_t, i32 }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct.list_head, ptr, i32, i32 }
%union.anon.95 = type { %struct.atomic_t }
%struct.vm_area_struct = type { i32, i32, ptr, ptr, %struct.rb_node, i32, ptr, i32, i32, %union.anon.71, %struct.list_head, ptr, ptr, i32, ptr, ptr, %struct.atomic_t, %struct.vm_userfaultfd_ctx }
%union.anon.71 = type { %struct.anon.72 }
%struct.anon.72 = type { %struct.rb_node, i32 }
%struct.vm_userfaultfd_ctx = type { ptr }
%struct.processor = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr }
%struct.file = type { %union.anon.4, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.4 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.vm_operations_struct = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.address_space_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mmu_notifier_range = type { ptr, ptr, i32, i32, i32, i32, ptr }
%struct.anon.101 = type { i32, %struct.list_head, ptr, i32, ptr, %struct.atomic_t, %struct.atomic_t, i32 }
%struct.vm_fault = type { %struct.anon.73, i32, ptr, ptr, %union.anon.74, ptr, ptr, ptr, ptr, ptr }
%struct.anon.73 = type { ptr, i32, i32, i32 }
%union.anon.74 = type { i32 }
%struct.zap_details = type { ptr, ptr }
%struct.swap_info_struct = type { %struct.percpu_ref, i32, i16, %struct.plist_node, i8, i32, ptr, ptr, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, ptr, ptr, %struct.rb_root, ptr, ptr, i32, %struct.completion, ptr, %struct.atomic_t, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.percpu_ref = type { i32, ptr }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_ref_data = type { %struct.atomic_t, ptr, ptr, i8, %struct.callback_head, ptr }
%struct.anon.89 = type { i32, i8, i8, %struct.atomic_t, i32 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.96, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.97, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.98, ptr, %struct.address_space, %struct.list_head, %union.anon.99, i32, i32, ptr, ptr, ptr, ptr }
%struct.kgid_t = type { i32 }
%union.anon.96 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.97 = type { %struct.callback_head }
%union.anon.98 = type { ptr }
%union.anon.99 = type { ptr }

@max_mapnr = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__kstrtab_max_mapnr = external dso_local constant [0 x i8], align 1
@__kstrtabns_max_mapnr = external dso_local constant [0 x i8], align 1
@__ksymtab_max_mapnr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @max_mapnr to i32), ptr @__kstrtab_max_mapnr, ptr @__kstrtabns_max_mapnr }, section "___ksymtab+max_mapnr", align 4
@mem_map = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@__kstrtab_mem_map = external dso_local constant [0 x i8], align 1
@__kstrtabns_mem_map = external dso_local constant [0 x i8], align 1
@__ksymtab_mem_map = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mem_map to i32), ptr @__kstrtab_mem_map, ptr @__kstrtabns_mem_map }, section "___ksymtab+mem_map", align 4
@high_memory = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@__kstrtab_high_memory = external dso_local constant [0 x i8], align 1
@__kstrtabns_high_memory = external dso_local constant [0 x i8], align 1
@__ksymtab_high_memory = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @high_memory to i32), ptr @__kstrtab_high_memory, ptr @__kstrtabns_high_memory }, section "___ksymtab+high_memory", align 4
@randomize_va_space = dso_local local_unnamed_addr global i32 1, section ".data..read_mostly", align 4
@__setup_str_disable_randmaps = internal constant [11 x i8] c"norandmaps\00", section ".init.rodata", align 1
@__setup_disable_randmaps = internal global %struct.obs_kernel_param { ptr @__setup_str_disable_randmaps, ptr @disable_randmaps, i32 0 }, section ".init.setup", align 4
@zero_pfn = dso_local global i32 0, section ".data..read_mostly", align 4
@__kstrtab_zero_pfn = external dso_local constant [0 x i8], align 1
@__kstrtabns_zero_pfn = external dso_local constant [0 x i8], align 1
@__ksymtab_zero_pfn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @zero_pfn to i32), ptr @__kstrtab_zero_pfn, ptr @__kstrtabns_zero_pfn }, section "___ksymtab+zero_pfn", align 4
@__initcall__kmod_memory__339_169_init_zero_pfnearly = internal global ptr @init_zero_pfn, section ".initcallearly.init", align 4
@init_mm = external dso_local global %struct.mm_struct, align 8
@highest_memmap_pfn = dso_local local_unnamed_addr global i32 0, section ".data..read_mostly", align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@__kstrtab_zap_vma_ptes = external dso_local constant [0 x i8], align 1
@__kstrtabns_zap_vma_ptes = external dso_local constant [0 x i8], align 1
@__ksymtab_zap_vma_ptes = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @zap_vma_ptes to i32), ptr @__kstrtab_zap_vma_ptes, ptr @__kstrtabns_zap_vma_ptes }, section "___ksymtab_gpl+zap_vma_ptes", align 4
@__kstrtab_vm_insert_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_vm_insert_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_vm_insert_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vm_insert_pages to i32), ptr @__kstrtab_vm_insert_pages, ptr @__kstrtabns_vm_insert_pages }, section "___ksymtab+vm_insert_pages", align 4
@__kstrtab_vm_insert_page = external dso_local constant [0 x i8], align 1
@__kstrtabns_vm_insert_page = external dso_local constant [0 x i8], align 1
@__ksymtab_vm_insert_page = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vm_insert_page to i32), ptr @__kstrtab_vm_insert_page, ptr @__kstrtabns_vm_insert_page }, section "___ksymtab+vm_insert_page", align 4
@__kstrtab_vm_map_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_vm_map_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_vm_map_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vm_map_pages to i32), ptr @__kstrtab_vm_map_pages, ptr @__kstrtabns_vm_map_pages }, section "___ksymtab+vm_map_pages", align 4
@__kstrtab_vm_map_pages_zero = external dso_local constant [0 x i8], align 1
@__kstrtabns_vm_map_pages_zero = external dso_local constant [0 x i8], align 1
@__ksymtab_vm_map_pages_zero = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vm_map_pages_zero to i32), ptr @__kstrtab_vm_map_pages_zero, ptr @__kstrtabns_vm_map_pages_zero }, section "___ksymtab+vm_map_pages_zero", align 4
@__kstrtab_vmf_insert_pfn_prot = external dso_local constant [0 x i8], align 1
@__kstrtabns_vmf_insert_pfn_prot = external dso_local constant [0 x i8], align 1
@__ksymtab_vmf_insert_pfn_prot = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vmf_insert_pfn_prot to i32), ptr @__kstrtab_vmf_insert_pfn_prot, ptr @__kstrtabns_vmf_insert_pfn_prot }, section "___ksymtab+vmf_insert_pfn_prot", align 4
@__kstrtab_vmf_insert_pfn = external dso_local constant [0 x i8], align 1
@__kstrtabns_vmf_insert_pfn = external dso_local constant [0 x i8], align 1
@__ksymtab_vmf_insert_pfn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vmf_insert_pfn to i32), ptr @__kstrtab_vmf_insert_pfn, ptr @__kstrtabns_vmf_insert_pfn }, section "___ksymtab+vmf_insert_pfn", align 4
@__kstrtab_vmf_insert_mixed_prot = external dso_local constant [0 x i8], align 1
@__kstrtabns_vmf_insert_mixed_prot = external dso_local constant [0 x i8], align 1
@__ksymtab_vmf_insert_mixed_prot = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vmf_insert_mixed_prot to i32), ptr @__kstrtab_vmf_insert_mixed_prot, ptr @__kstrtabns_vmf_insert_mixed_prot }, section "___ksymtab+vmf_insert_mixed_prot", align 4
@__kstrtab_vmf_insert_mixed = external dso_local constant [0 x i8], align 1
@__kstrtabns_vmf_insert_mixed = external dso_local constant [0 x i8], align 1
@__ksymtab_vmf_insert_mixed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vmf_insert_mixed to i32), ptr @__kstrtab_vmf_insert_mixed, ptr @__kstrtabns_vmf_insert_mixed }, section "___ksymtab+vmf_insert_mixed", align 4
@__kstrtab_vmf_insert_mixed_mkwrite = external dso_local constant [0 x i8], align 1
@__kstrtabns_vmf_insert_mixed_mkwrite = external dso_local constant [0 x i8], align 1
@__ksymtab_vmf_insert_mixed_mkwrite = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vmf_insert_mixed_mkwrite to i32), ptr @__kstrtab_vmf_insert_mixed_mkwrite, ptr @__kstrtabns_vmf_insert_mixed_mkwrite }, section "___ksymtab+vmf_insert_mixed_mkwrite", align 4
@remap_pfn_range_notrack.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"mm/memory.c\00", [20 x i8] zeroinitializer }, align 32
@__kstrtab_remap_pfn_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_remap_pfn_range = external dso_local constant [0 x i8], align 1
@__ksymtab_remap_pfn_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @remap_pfn_range to i32), ptr @__kstrtab_remap_pfn_range, ptr @__kstrtabns_remap_pfn_range }, section "___ksymtab+remap_pfn_range", align 4
@__kstrtab_vm_iomap_memory = external dso_local constant [0 x i8], align 1
@__kstrtabns_vm_iomap_memory = external dso_local constant [0 x i8], align 1
@__ksymtab_vm_iomap_memory = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vm_iomap_memory to i32), ptr @__kstrtab_vm_iomap_memory, ptr @__kstrtabns_vm_iomap_memory }, section "___ksymtab+vm_iomap_memory", align 4
@__kstrtab_apply_to_page_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_apply_to_page_range = external dso_local constant [0 x i8], align 1
@__ksymtab_apply_to_page_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @apply_to_page_range to i32), ptr @__kstrtab_apply_to_page_range, ptr @__kstrtabns_apply_to_page_range }, section "___ksymtab_gpl+apply_to_page_range", align 4
@__kstrtab_apply_to_existing_page_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_apply_to_existing_page_range = external dso_local constant [0 x i8], align 1
@__ksymtab_apply_to_existing_page_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @apply_to_existing_page_range to i32), ptr @__kstrtab_apply_to_existing_page_range, ptr @__kstrtabns_apply_to_existing_page_range }, section "___ksymtab_gpl+apply_to_existing_page_range", align 4
@finish_mkwrite_fault.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_unmap_mapping_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_unmap_mapping_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_unmap_mapping_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unmap_mapping_pages to i32), ptr @__kstrtab_unmap_mapping_pages, ptr @__kstrtabns_unmap_mapping_pages }, section "___ksymtab_gpl+unmap_mapping_pages", align 4
@__kstrtab_unmap_mapping_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_unmap_mapping_range = external dso_local constant [0 x i8], align 1
@__ksymtab_unmap_mapping_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unmap_mapping_range to i32), ptr @__kstrtab_unmap_mapping_range, ptr @__kstrtabns_unmap_mapping_range }, section "___ksymtab+unmap_mapping_range", align 4
@__initcall__kmod_memory__383_4105_fault_around_debugfs7 = internal global ptr @fault_around_debugfs, section ".initcall7.init", align 4
@__kstrtab_handle_mm_fault = external dso_local constant [0 x i8], align 1
@__kstrtabns_handle_mm_fault = external dso_local constant [0 x i8], align 1
@__ksymtab_handle_mm_fault = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @handle_mm_fault to i32), ptr @__kstrtab_handle_mm_fault, ptr @__kstrtabns_handle_mm_fault }, section "___ksymtab_gpl+handle_mm_fault", align 4
@__kstrtab_follow_pte = external dso_local constant [0 x i8], align 1
@__kstrtabns_follow_pte = external dso_local constant [0 x i8], align 1
@__ksymtab_follow_pte = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @follow_pte to i32), ptr @__kstrtab_follow_pte, ptr @__kstrtabns_follow_pte }, section "___ksymtab_gpl+follow_pte", align 4
@__kstrtab_follow_pfn = external dso_local constant [0 x i8], align 1
@__kstrtabns_follow_pfn = external dso_local constant [0 x i8], align 1
@__ksymtab_follow_pfn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @follow_pfn to i32), ptr @__kstrtab_follow_pfn, ptr @__kstrtabns_follow_pfn }, section "___ksymtab+follow_pfn", align 4
@__kstrtab_access_process_vm = external dso_local constant [0 x i8], align 1
@__kstrtabns_access_process_vm = external dso_local constant [0 x i8], align 1
@__ksymtab_access_process_vm = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @access_process_vm to i32), ptr @__kstrtab_access_process_vm, ptr @__kstrtabns_access_process_vm }, section "___ksymtab_gpl+access_process_vm", align 4
@.str.1 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"?\00", [30 x i8] zeroinitializer }, align 32
@print_vma_addr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.2, ptr @.str.3, ptr @.str, i32 5249, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"%s%s[%lx+%lx]\00", [18 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"print_vma_addr\00", [17 x i8] zeroinitializer }, align 32
@print_vma_addr._entry_ptr = internal global ptr @print_vma_addr._entry, section ".printk_index", align 4
@__kstrtab___might_fault = external dso_local constant [0 x i8], align 1
@__kstrtabns___might_fault = external dso_local constant [0 x i8], align 1
@__ksymtab___might_fault = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__might_fault to i32), ptr @__kstrtab___might_fault, ptr @__kstrtabns___might_fault }, section "___ksymtab+__might_fault", align 4
@.str.4 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"page->ptl\00", [22 x i8] zeroinitializer }, align 32
@page_ptl_cachep = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@empty_zero_page = external dso_local local_unnamed_addr global ptr, align 4
@__tracepoint_rss_stat = external dso_local global %struct.tracepoint, align 4
@.str.5 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/trace/events/kmem.h\00", [36 x i8] zeroinitializer }, align 32
@trace_rss_stat.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.6 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.7 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@cpu_tlb = external dso_local local_unnamed_addr global %struct.cpu_tlb_fns, align 4
@.str.8 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"VM_BUG_ON_PAGE(!PageTable(page))\00", [63 x i8] zeroinitializer }, align 32
@user_pmd_table = external dso_local local_unnamed_addr global i32, align 4
@.str.9 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"VM_BUG_ON_PAGE(*(unsigned long *)&page->ptl)\00", [51 x i8] zeroinitializer }, align 32
@ptlock_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.10 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"ptlock_ptr(page)\00", [47 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"VM_BUG_ON_PAGE(!((page->page_type & (0xf0000000 | 0)) == 0xf0000000))\00", [58 x i8] zeroinitializer }, align 32
@movable_zone = external dso_local local_unnamed_addr global i32, align 4
@cpu_vtable = external dso_local local_unnamed_addr global [0 x ptr], align 4
@print_bad_pte.resume = internal global { i32, [28 x i8] } zeroinitializer, align 32
@print_bad_pte.nr_shown = internal global { i32, [28 x i8] } zeroinitializer, align 32
@print_bad_pte.nr_unshown = internal global { i32, [28 x i8] } zeroinitializer, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@print_bad_pte._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.12, ptr @.str.13, ptr @.str, i32 540, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\011BUG: Bad page map: %lu messages suppressed\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"print_bad_pte\00", [18 x i8] zeroinitializer }, align 32
@print_bad_pte._entry_ptr = internal global ptr @print_bad_pte._entry, section ".printk_index", align 4
@print_bad_pte._entry.14 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.13, ptr @.str, i32 553, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\011BUG: Bad page map in process %s  pte:%08llx pmd:%08llx\0A\00", [38 x i8] zeroinitializer }, align 32
@print_bad_pte._entry_ptr.16 = internal global ptr @print_bad_pte._entry.14, section ".printk_index", align 4
@.str.17 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"bad pte\00", [24 x i8] zeroinitializer }, align 32
@print_bad_pte._entry.18 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.13, ptr @.str, i32 557, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\011addr:%px vm_flags:%08lx anon_vma:%px mapping:%px index:%lx\0A\00", [34 x i8] zeroinitializer }, align 32
@print_bad_pte._entry_ptr.20 = internal global ptr @print_bad_pte._entry.18, section ".printk_index", align 4
@print_bad_pte._entry.21 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.13, ptr @.str, i32 562, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\011file:%pD fault:%ps mmap:%ps readpage:%ps\0A\00", [52 x i8] zeroinitializer }, align 32
@print_bad_pte._entry_ptr.23 = internal global ptr @print_bad_pte._entry.21, section ".printk_index", align 4
@.str.24 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/linux/mmu_notifier.h\00", [35 x i8] zeroinitializer }, align 32
@__mmu_notifier_invalidate_range_start_map = external dso_local global %struct.lockdep_map, align 4
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.25 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"include/linux/mmap_lock.h\00", [38 x i8] zeroinitializer }, align 32
@copy_pte_range.__already_done.26 = internal unnamed_addr global i1 false, section ".data.once", align 1
@copy_pte_range.__already_done.27 = internal unnamed_addr global i1 false, section ".data.once", align 1
@mmlist_lock = external dso_local global %struct.spinlock, align 4
@.str.28 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@cpu_user = external dso_local local_unnamed_addr global %struct.cpu_user_fns, align 4
@.str.30 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(page))\00", [61 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"VM_BUG_ON_PAGE(!hpage_pincount_available(page))\00", [48 x i8] zeroinitializer }, align 32
@memory_cgrp_subsys_enabled_key = external dso_local global %struct.static_key_true, align 4
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@__tracepoint_mmap_lock_start_locking = external dso_local global %struct.tracepoint, align 4
@__tracepoint_mmap_lock_acquire_returned = external dso_local global %struct.tracepoint, align 4
@.str.32 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(((typeof(page))_compound_head(page))))\00", [61 x i8] zeroinitializer }, align 32
@insert_pfn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@apply_to_pmd_range.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.37 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(p))\00", [32 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"VM_BUG_ON_PAGE(1 && PageTail(page))\00", [60 x i8] zeroinitializer }, align 32
@vm_event_states = external dso_local global %struct.vm_event_state, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@count_memcg_event_mm.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.40 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/linux/memcontrol.h\00", [37 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.41 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.43 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/pagemap.h\00", [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@cow_user_page.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.46 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"VM_BUG_ON_PAGE(!PageLocked(page))\00", [62 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageAnon(page))\00", [33 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"fault_around_bytes\00", [45 x i8] zeroinitializer }, align 32
@fault_around_bytes_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr @no_llseek, ptr @debugfs_attr_read, ptr @debugfs_attr_write, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @fault_around_bytes_fops_open, ptr null, ptr @simple_attr_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%llu\0A\00", [26 x i8] zeroinitializer }, align 32
@fault_around_bytes = internal global i32 65536, section ".data..read_mostly", align 4
@.str.50 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"VM_BUG_ON_FOLIO(((unsigned int) folio_ref_count(folio) + 127u <= 127u))\00", [56 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@.str.51 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"VM_BUG_ON_PAGE(!PageLocked(vmf->page))\00", [57 x i8] zeroinitializer }, align 32
@perf_swevent_enabled = external dso_local global [12 x %struct.static_key], align 4
@.str.52 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"./../include/linux/highmem-internal.h\00", [58 x i8] zeroinitializer }, align 32
@__tracepoint_mmap_lock_released = external dso_local global %struct.tracepoint, align 4
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.53 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 268436480]
@__sancov_gen_cov_switch_values.54 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 268436480]
@__sancov_gen_cov_switch_values.55 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.56 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.57 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 4294967280, i64 4294967285, i64 4294967291]
@___asan_gen_.58 = private unnamed_addr constant [10 x i8] c"max_mapnr\00", align 1
@___asan_gen_.60 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 95, i32 15 }
@___asan_gen_.61 = private unnamed_addr constant [8 x i8] c"mem_map\00", align 1
@___asan_gen_.63 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 98, i32 14 }
@___asan_gen_.64 = private unnamed_addr constant [12 x i8] c"high_memory\00", align 1
@___asan_gen_.66 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 109, i32 7 }
@___asan_gen_.69 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 2392, i32 6 }
@___asan_gen_.72 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 5246, i32 9 }
@___asan_gen_.81 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 5247, i32 4 }
@___asan_gen_.84 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 5459, i32 38 }
@___asan_gen_.85 = private unnamed_addr constant [16 x i8] c"page_ptl_cachep\00", align 1
@___asan_gen_.87 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 5455, i32 27 }
@___asan_gen_.92 = private unnamed_addr constant [31 x i8] c"../include/trace/events/kmem.h\00", align 1
@___asan_gen_.93 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.92, i32 366, i32 1 }
@___asan_gen_.95 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.96 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.95, i32 108, i32 2 }
@___asan_gen_.102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.209, i32 2299, i32 2 }
@___asan_gen_.103 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.108 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.209, i32 2302, i32 2 }
@___asan_gen_.111 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.173, i32 912, i32 1 }
@___asan_gen_.112 = private unnamed_addr constant [7 x i8] c"resume\00", align 1
@___asan_gen_.114 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 525, i32 23 }
@___asan_gen_.115 = private unnamed_addr constant [9 x i8] c"nr_shown\00", align 1
@___asan_gen_.117 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 526, i32 23 }
@___asan_gen_.118 = private unnamed_addr constant [11 x i8] c"nr_unshown\00", align 1
@___asan_gen_.120 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 527, i32 23 }
@___asan_gen_.129 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 539, i32 4 }
@___asan_gen_.135 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 551, i32 2 }
@___asan_gen_.138 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 555, i32 19 }
@___asan_gen_.144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 556, i32 2 }
@___asan_gen_.145 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 558, i32 2 }
@___asan_gen_.152 = private unnamed_addr constant [32 x i8] c"../include/linux/mmu_notifier.h\00", align 1
@___asan_gen_.153 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.152, i32 454, i32 2 }
@___asan_gen_.155 = private unnamed_addr constant [29 x i8] c"../include/linux/mmap_lock.h\00", align 1
@___asan_gen_.156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.155, i32 161, i32 2 }
@___asan_gen_.159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.173, i32 260, i32 2 }
@___asan_gen_.162 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.173, i32 698, i32 1 }
@___asan_gen_.165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.209, i32 910, i32 2 }
@___asan_gen_.168 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.173, i32 428, i32 1 }
@___asan_gen_.171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.209, i32 1368, i32 10 }
@___asan_gen_.173 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.173, i32 414, i32 1 }
@___asan_gen_.176 = private unnamed_addr constant [30 x i8] c"../include/linux/memcontrol.h\00", align 1
@___asan_gen_.177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.176, i32 1059, i32 31 }
@___asan_gen_.183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.185, i32 695, i32 2 }
@___asan_gen_.185 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.186 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.185, i32 723, i32 2 }
@___asan_gen_.188 = private unnamed_addr constant [27 x i8] c"../include/linux/pagemap.h\00", align 1
@___asan_gen_.189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.188, i32 824, i32 2 }
@___asan_gen_.192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.209, i32 717, i32 2 }
@___asan_gen_.195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 2892, i32 3 }
@___asan_gen_.198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 2910, i32 2 }
@___asan_gen_.201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 4101, i32 29 }
@___asan_gen_.202 = private unnamed_addr constant [24 x i8] c"fault_around_bytes_fops\00", align 1
@___asan_gen_.207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 4096, i32 1 }
@___asan_gen_.209 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.209, i32 1160, i32 2 }
@___asan_gen_.212 = private constant [15 x i8] c"../mm/memory.c\00", align 1
@___asan_gen_.213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.212, i32 3884, i32 3 }
@___asan_gen_.214 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.215 = private unnamed_addr constant [38 x i8] c"./../include/linux/highmem-internal.h\00", align 1
@___asan_gen_.216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.215, i32 44, i32 2 }
@llvm.compiler.used = appending global [86 x ptr] [ptr @__initcall__kmod_memory__339_169_init_zero_pfnearly, ptr @__initcall__kmod_memory__383_4105_fault_around_debugfs7, ptr @__ksymtab___might_fault, ptr @__ksymtab_access_process_vm, ptr @__ksymtab_apply_to_existing_page_range, ptr @__ksymtab_apply_to_page_range, ptr @__ksymtab_follow_pfn, ptr @__ksymtab_follow_pte, ptr @__ksymtab_handle_mm_fault, ptr @__ksymtab_high_memory, ptr @__ksymtab_max_mapnr, ptr @__ksymtab_mem_map, ptr @__ksymtab_remap_pfn_range, ptr @__ksymtab_unmap_mapping_pages, ptr @__ksymtab_unmap_mapping_range, ptr @__ksymtab_vm_insert_page, ptr @__ksymtab_vm_insert_pages, ptr @__ksymtab_vm_iomap_memory, ptr @__ksymtab_vm_map_pages, ptr @__ksymtab_vm_map_pages_zero, ptr @__ksymtab_vmf_insert_mixed, ptr @__ksymtab_vmf_insert_mixed_mkwrite, ptr @__ksymtab_vmf_insert_mixed_prot, ptr @__ksymtab_vmf_insert_pfn, ptr @__ksymtab_vmf_insert_pfn_prot, ptr @__ksymtab_zap_vma_ptes, ptr @__ksymtab_zero_pfn, ptr @__setup_disable_randmaps, ptr @print_bad_pte._entry, ptr @print_bad_pte._entry.14, ptr @print_bad_pte._entry.18, ptr @print_bad_pte._entry.21, ptr @print_bad_pte._entry_ptr, ptr @print_bad_pte._entry_ptr.16, ptr @print_bad_pte._entry_ptr.20, ptr @print_bad_pte._entry_ptr.23, ptr @print_vma_addr._entry, ptr @print_vma_addr._entry_ptr, ptr @max_mapnr, ptr @mem_map, ptr @high_memory, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @page_ptl_cachep, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @ptlock_init.__key, ptr @.str.10, ptr @.str.11, ptr @print_bad_pte.resume, ptr @print_bad_pte.nr_shown, ptr @print_bad_pte.nr_unshown, ptr @.str.12, ptr @.str.13, ptr @.str.15, ptr @.str.17, ptr @.str.19, ptr @.str.22, ptr @.str.24, ptr @.str.25, ptr @.str.28, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.37, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @fault_around_bytes_fops, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52], section "llvm.metadata"
@0 = internal global [53 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @max_mapnr to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.58 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.60 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mem_map to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.61 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.63 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @high_memory to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.64 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.66 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.69 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.72 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_vma_addr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.81 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.81 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.81 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.84 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @page_ptl_cachep to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.85 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.87 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.93 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.93 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.96 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.111 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ptlock_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.103 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.111 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_pte.resume to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.112 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.114 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_pte.nr_shown to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.117 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_pte.nr_unshown to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.118 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_pte._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_pte._entry.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_pte._entry.18 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_pte._entry.21 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.153 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.168 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fault_around_bytes_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @disable_randmaps(ptr nocapture noundef readnone %s) #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  store i32 0, ptr @randomize_va_space, align 4
  ret i32 1
}

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @init_zero_pfn() #1 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @empty_zero_page to i32))
  %0 = load ptr, ptr @empty_zero_page, align 4
  %1 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %2 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %2
  store i32 %add, ptr @zero_pfn, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mm_trace_rss_stat(ptr noundef %mm, i32 noundef %member, i32 noundef %count) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef %member, i32 noundef %count)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef %member, i32 noundef %count) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rss_stat, i32 0, i32 1), ptr blockaddress(@trace_rss_stat, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !217

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !218

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  %9 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !219
  %call42 = tail call i32 @__traceiter_rss_stat(ptr noundef null, ptr noundef %mm, i32 noundef %member, i32 noundef %count) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !220
  %13 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !218

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !221
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rss_stat, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rss_stat, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rss_stat.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_rss_stat.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.5, i32 noundef 393, ptr noundef nonnull @.str.6) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !222
  %31 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sync_mm_rss(ptr noundef %mm) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %arrayidx = getelementptr %struct.task_struct, ptr %3, i32 0, i32 56, i32 1, i32 0
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %entry.for.inc_crit_edge, label %if.then

entry.for.inc_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %rss_stat.i = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 40
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %rss_stat.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %rss_stat.i, i32 1, i32 3, i32 1) #15
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %rss_stat.i, ptr %rss_stat.i, i32 %5, ptr elementtype(i32) %rss_stat.i) #15, !srcloc !224
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef 0, i32 noundef %asmresult.i.i.i.i.i) #15
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  %arrayidx10 = getelementptr %struct.task_struct, ptr %8, i32 0, i32 56, i32 1, i32 0
  %9 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %arrayidx10, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then, %entry.for.inc_crit_edge
  %10 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.1 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.1 to ptr
  %task.1 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task.1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task.1, align 8
  %arrayidx.1 = getelementptr %struct.task_struct, ptr %13, i32 0, i32 56, i32 1, i32 1
  %14 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.1 = icmp eq i32 %15, 0
  br i1 %tobool.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.1

if.then.1:                                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i.1 = getelementptr %struct.anon.9, ptr %mm, i32 0, i32 40, i32 0, i32 1
  %call.i.i.i.1 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.1, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.1, i32 1, i32 3, i32 1) #15
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.1, ptr %arrayidx.i.1, i32 %15, ptr elementtype(i32) %arrayidx.i.1) #15, !srcloc !224
  %asmresult.i.i.i.i.i.1 = extractvalue { i32, i32 } %16, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef 1, i32 noundef %asmresult.i.i.i.i.i.1) #15
  %17 = ptrtoint ptr %task.1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task.1, align 8
  %arrayidx10.1 = getelementptr %struct.task_struct, ptr %18, i32 0, i32 56, i32 1, i32 1
  %19 = ptrtoint ptr %arrayidx10.1 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 0, ptr %arrayidx10.1, align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %for.inc.for.inc.1_crit_edge
  %20 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.2 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.2 to ptr
  %task.2 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task.2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.2, align 8
  %arrayidx.2 = getelementptr %struct.task_struct, ptr %23, i32 0, i32 56, i32 1, i32 2
  %24 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.2 = icmp eq i32 %25, 0
  br i1 %tobool.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.2

if.then.2:                                        ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i.2 = getelementptr %struct.anon.9, ptr %mm, i32 0, i32 40, i32 0, i32 2
  %call.i.i.i.2 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.2, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.2, i32 1, i32 3, i32 1) #15
  %26 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.2, ptr %arrayidx.i.2, i32 %25, ptr elementtype(i32) %arrayidx.i.2) #15, !srcloc !224
  %asmresult.i.i.i.i.i.2 = extractvalue { i32, i32 } %26, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef 2, i32 noundef %asmresult.i.i.i.i.i.2) #15
  %27 = ptrtoint ptr %task.2 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task.2, align 8
  %arrayidx10.2 = getelementptr %struct.task_struct, ptr %28, i32 0, i32 56, i32 1, i32 2
  %29 = ptrtoint ptr %arrayidx10.2 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %arrayidx10.2, align 4
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2, %for.inc.1.for.inc.2_crit_edge
  %30 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.3 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.3 to ptr
  %task.3 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %task.3 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task.3, align 8
  %arrayidx.3 = getelementptr %struct.task_struct, ptr %33, i32 0, i32 56, i32 1, i32 3
  %34 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool.not.3 = icmp eq i32 %35, 0
  br i1 %tobool.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.3

if.then.3:                                        ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i.3 = getelementptr %struct.anon.9, ptr %mm, i32 0, i32 40, i32 0, i32 3
  %call.i.i.i.3 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.3, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.3, i32 1, i32 3, i32 1) #15
  %36 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.3, ptr %arrayidx.i.3, i32 %35, ptr elementtype(i32) %arrayidx.i.3) #15, !srcloc !224
  %asmresult.i.i.i.i.i.3 = extractvalue { i32, i32 } %36, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef 3, i32 noundef %asmresult.i.i.i.i.i.3) #15
  %37 = ptrtoint ptr %task.3 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %task.3, align 8
  %arrayidx10.3 = getelementptr %struct.task_struct, ptr %38, i32 0, i32 56, i32 1, i32 3
  %39 = ptrtoint ptr %arrayidx10.3 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 0, ptr %arrayidx10.3, align 4
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then.3, %for.inc.2.for.inc.3_crit_edge
  %40 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i19 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i19 to ptr
  %task12 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %task12 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task12, align 8
  %rss_stat13 = getelementptr inbounds %struct.task_struct, ptr %43, i32 0, i32 56
  %44 = ptrtoint ptr %rss_stat13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %rss_stat13, align 8
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @add_mm_counter(ptr noundef %mm, i32 noundef %member, i32 noundef %value) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %rss_stat = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 40
  %arrayidx = getelementptr [4 x %struct.atomic_t], ptr %rss_stat, i32 0, i32 %member
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx, i32 1, i32 3, i32 1) #15
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx, ptr %arrayidx, i32 %value, ptr elementtype(i32) %arrayidx) #15, !srcloc !224
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef %member, i32 noundef %asmresult.i.i.i.i) #15
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_pgd_range(ptr noundef %tlb, i32 noundef %addr, i32 noundef %end, i32 noundef %floor, i32 noundef %ceiling) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %addr, -2097152
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %floor)
  %cmp = icmp ult i32 %and, %floor
  br i1 %cmp, label %if.then, label %entry.if.end2_crit_edge

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end2

if.then:                                          ; preds = %entry
  %add = add i32 %and, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %tobool.not = icmp eq i32 %add, 0
  br i1 %tobool.not, label %if.then.cleanup_crit_edge, label %if.then.if.end2_crit_edge

if.then.if.end2_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end2

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end2:                                          ; preds = %if.then.if.end2_crit_edge, %entry.if.end2_crit_edge
  %addr.addr.0 = phi i32 [ %add, %if.then.if.end2_crit_edge ], [ %and, %entry.if.end2_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ceiling)
  %tobool3.not = icmp eq i32 %ceiling, 0
  br i1 %tobool3.not, label %if.end2.if.end9_crit_edge, label %if.then4

if.end2.if.end9_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9

if.then4:                                         ; preds = %if.end2
  %and5 = and i32 %ceiling, -2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.then4.cleanup_crit_edge, label %if.then4.if.end9_crit_edge

if.then4.if.end9_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9

if.then4.cleanup_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end9:                                          ; preds = %if.then4.if.end9_crit_edge, %if.end2.if.end9_crit_edge
  %ceiling.addr.0 = phi i32 [ %and5, %if.then4.if.end9_crit_edge ], [ 0, %if.end2.if.end9_crit_edge ]
  %sub = add i32 %end, -1
  %sub10 = add i32 %ceiling.addr.0, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %sub10)
  %cmp11 = icmp ugt i32 %sub, %sub10
  %sub13 = add i32 %end, -2097152
  %spec.select = select i1 %cmp11, i32 %sub13, i32 %end
  %sub15 = add i32 %spec.select, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %addr.addr.0, i32 %sub15)
  %cmp16 = icmp ugt i32 %addr.addr.0, %sub15
  br i1 %cmp16, label %if.end9.cleanup_crit_edge, label %if.end18

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end18:                                         ; preds = %if.end9
  %0 = ptrtoint ptr %tlb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tlb, align 4
  %pgd19 = getelementptr inbounds %struct.anon.9, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %pgd19 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pgd19, align 4
  %shr.i = lshr i32 %addr.addr.0, 21
  %add.ptr.i = getelementptr [2 x i32], ptr %3, i32 %shr.i
  %start.i.i.i.i.i.i = getelementptr inbounds %struct.mmu_gather, ptr %tlb, i32 0, i32 1
  %end.i.i.i.i.i.i = getelementptr inbounds %struct.mmu_gather, ptr %tlb, i32 0, i32 2
  %cleared_pmds.i.i.i.i.i = getelementptr inbounds %struct.mmu_gather, ptr %tlb, i32 0, i32 3
  br label %do.body

do.body:                                          ; preds = %free_p4d_range.exit.do.body_crit_edge, %if.end18
  %pgd.0 = phi ptr [ %add.ptr.i, %if.end18 ], [ %incdec.ptr, %free_p4d_range.exit.do.body_crit_edge ]
  %addr.addr.1 = phi i32 [ %addr.addr.0, %if.end18 ], [ %and21.spec.select, %free_p4d_range.exit.do.body_crit_edge ]
  %add20 = add i32 %addr.addr.1, 2097152
  %and21 = and i32 %add20, -2097152
  %sub22 = add i32 %and21, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub22, i32 %sub15)
  %cmp24 = icmp ult i32 %sub22, %sub15
  %and21.spec.select = select i1 %cmp24, i32 %and21, i32 %spec.select
  %4 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pgd.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i.i.i.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i.i.i.i, label %do.body.do.end.i.i.i_crit_edge, label %if.end.i.i.i.i

do.body.do.end.i.i.i_crit_edge:                   ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end.i.i.i

if.end.i.i.i.i:                                   ; preds = %do.body
  %and.i.i.i.i = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.i.i.i, label %if.then4.i.i.i.i, !prof !218

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @pmd_clear_bad(ptr noundef %pgd.0) #15
  br label %do.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.end.i.i.i.i
  %6 = load ptr, ptr @mem_map, align 4
  %shr.i.i.i.i = lshr i32 %5, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %7 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i.i.i.i = sub i32 %shr.i.i.i.i, %7
  %add.ptr.i.i.i.i = getelementptr %struct.page, ptr %6, i32 %sub.i.i.i.i
  %8 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %pgd.0, align 4
  %arrayidx1.i.i.i.i = getelementptr i32, ptr %pgd.0, i32 1
  %9 = ptrtoint ptr %arrayidx1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %arrayidx1.i.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_tlb_fns, ptr @cpu_tlb, i32 0, i32 2) to i32))
  %10 = load i32, ptr getelementptr inbounds (%struct.cpu_tlb_fns, ptr @cpu_tlb, i32 0, i32 2), align 4
  tail call void asm sideeffect "tst $1, $2\0A\09mcrne p15, 0, $0, c7, c10, 1\09@ flush_pmd", "r,r,Ir,~{cc}"(ptr %pgd.0, i32 %10, i32 1073741824) #15, !srcloc !226
  %11 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %start.i.i.i.i.i.i, align 4
  %13 = tail call i32 @llvm.umin.i32(i32 %12, i32 %addr.addr.1) #15
  %14 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %start.i.i.i.i.i.i, align 4
  %15 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %end.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i = add i32 %addr.addr.1, 4096
  %17 = tail call i32 @llvm.umax.i32(i32 %16, i32 %add.i.i.i.i.i.i) #15
  %18 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %end.i.i.i.i.i.i, align 4
  %19 = ptrtoint ptr %cleared_pmds.i.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %bf.load.i.i.i.i.i = load i16, ptr %cleared_pmds.i.i.i.i.i, align 4
  %bf.set.i.i.i.i = or i16 %bf.load.i.i.i.i.i, 10240
  store i16 %bf.set.i.i.i.i, ptr %cleared_pmds.i.i.i.i.i, align 4
  %20 = load ptr, ptr @page_ptl_cachep, align 4
  %ptl.i.i.i.i.i.i.i = getelementptr %struct.page, ptr %6, i32 %sub.i.i.i.i, i32 1, i32 0, i32 3
  %21 = ptrtoint ptr %ptl.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ptl.i.i.i.i.i.i.i, align 4
  tail call void @kmem_cache_free(ptr noundef %20, ptr noundef %22) #15
  %23 = getelementptr %struct.page, ptr %6, i32 %sub.i.i.i.i, i32 2
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %and.i.i.i.i.i.i.i.i = and i32 %25, -268434944
  call void @__sanitizer_cov_trace_const_cmp4(i32 -268435456, i32 %and.i.i.i.i.i.i.i.i)
  %cmp.i.not.i.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i.i, -268435456
  br i1 %cmp.i.not.i.i.i.i.i.i.i, label %__ClearPageTable.exit.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i, !prof !218

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %add.ptr.i.i.i.i, ptr noundef nonnull @.str.8) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 912, 0\0A.popsection", ""() #15, !srcloc !227
  unreachable

__ClearPageTable.exit.i.i.i.i.i.i:                ; preds = %if.end.i.i.i
  %or.i.i.i.i.i.i.i = or i32 %25, 512
  %26 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %or.i.i.i.i.i.i.i, ptr %23, align 4
  %27 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !228
  %and.i.i.i.i.i.i.i.i.i = and i32 %27, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %if.then21.i.i.i.i.i.i.i.i, label %do.end11.i.i.i.i.i.i.i.i

do.end11.i.i.i.i.i.i.i.i:                         ; preds = %__ClearPageTable.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mod_lruvec_page_state(ptr noundef %add.ptr.i.i.i.i, i32 noundef 38, i32 noundef -1) #15
  br label %do.body23.i.i.i.i.i.i.i.i

if.then21.i.i.i.i.i.i.i.i:                        ; preds = %__ClearPageTable.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @trace_hardirqs_off() #15
  tail call void @__mod_lruvec_page_state(ptr noundef %add.ptr.i.i.i.i, i32 noundef 38, i32 noundef -1) #15
  tail call void @trace_hardirqs_on() #15
  br label %do.body23.i.i.i.i.i.i.i.i

do.body23.i.i.i.i.i.i.i.i:                        ; preds = %if.then21.i.i.i.i.i.i.i.i, %do.end11.i.i.i.i.i.i.i.i
  %28 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !229
  %and.i.i.i.i.i.i.i.i.i.i = and i32 %28, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i.i.i.i)
  %tobool32.not.i.i.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %tobool32.not.i.i.i.i.i.i.i.i, label %if.then36.i.i.i.i.i.i.i.i, label %do.body23.i.i.i.i.i.i.i.i.pgtable_pte_page_dtor.exit.i.i.i.i.i_crit_edge, !prof !230

do.body23.i.i.i.i.i.i.i.i.pgtable_pte_page_dtor.exit.i.i.i.i.i_crit_edge: ; preds = %do.body23.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %pgtable_pte_page_dtor.exit.i.i.i.i.i

if.then36.i.i.i.i.i.i.i.i:                        ; preds = %do.body23.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %pgtable_pte_page_dtor.exit.i.i.i.i.i

pgtable_pte_page_dtor.exit.i.i.i.i.i:             ; preds = %if.then36.i.i.i.i.i.i.i.i, %do.body23.i.i.i.i.i.i.i.i.pgtable_pte_page_dtor.exit.i.i.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %27) #15, !srcloc !231
  %and.i.i.i.i.i = and i32 %addr.addr.1, -2097152
  %sub.i.i.i.i.i = or i32 %and.i.i.i.i.i, 1044480
  %29 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %start.i.i.i.i.i.i, align 4
  %31 = tail call i32 @llvm.umin.i32(i32 %30, i32 %sub.i.i.i.i.i) #15
  %32 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %start.i.i.i.i.i.i, align 4
  %33 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %end.i.i.i.i.i.i, align 4
  %add.i.i14.i.i.i.i = or i32 %and.i.i.i.i.i, 1052672
  %35 = tail call i32 @llvm.umax.i32(i32 %34, i32 %add.i.i14.i.i.i.i) #15
  %36 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %end.i.i.i.i.i.i, align 4
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__tlb_remove_page_size(ptr noundef %tlb, ptr noundef %add.ptr.i.i.i.i, i32 noundef 4096) #15
  br i1 %call.i.i.i.i.i.i.i, label %if.then.i.i4.i.i.i.i.i, label %pgtable_pte_page_dtor.exit.i.i.i.i.i.free_pte_range.exit.i.i.i_crit_edge

pgtable_pte_page_dtor.exit.i.i.i.i.i.free_pte_range.exit.i.i.i_crit_edge: ; preds = %pgtable_pte_page_dtor.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %free_pte_range.exit.i.i.i

if.then.i.i4.i.i.i.i.i:                           ; preds = %pgtable_pte_page_dtor.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @tlb_flush_mmu(ptr noundef %tlb) #15
  br label %free_pte_range.exit.i.i.i

free_pte_range.exit.i.i.i:                        ; preds = %if.then.i.i4.i.i.i.i.i, %pgtable_pte_page_dtor.exit.i.i.i.i.i.free_pte_range.exit.i.i.i_crit_edge
  %37 = ptrtoint ptr %tlb to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %tlb, align 4
  %pgtables_bytes.i.i.i.i.i = getelementptr inbounds %struct.anon.9, ptr %38, i32 0, i32 12
  %call.i.i.i15.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pgtables_bytes.i.i.i.i.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %pgtables_bytes.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %39 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pgtables_bytes.i.i.i.i.i, ptr %pgtables_bytes.i.i.i.i.i, i32 2048, ptr elementtype(i32) %pgtables_bytes.i.i.i.i.i) #15, !srcloc !232
  br label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %free_pte_range.exit.i.i.i, %if.then4.i.i.i.i, %do.body.do.end.i.i.i_crit_edge
  %and.i.i.i = and i32 %addr.addr.1, -2097152
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i.i.i, i32 %floor)
  %cmp2.i.i.i = icmp ult i32 %and.i.i.i, %floor
  %sub.i.i.i = add i32 %and21.spec.select, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i, i32 %sub10)
  %cmp13.i.i.i = icmp ugt i32 %sub.i.i.i, %sub10
  %or.cond = select i1 %cmp2.i.i.i, i1 true, i1 %cmp13.i.i.i
  br i1 %or.cond, label %do.end.i.i.i.free_p4d_range.exit_crit_edge, label %if.end15.i.i.i

do.end.i.i.i.free_p4d_range.exit_crit_edge:       ; preds = %do.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %free_p4d_range.exit

if.end15.i.i.i:                                   ; preds = %do.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %40 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %start.i.i.i.i.i.i, align 4
  %42 = tail call i32 @llvm.umin.i32(i32 %41, i32 %and.i.i.i) #15
  %43 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %start.i.i.i.i.i.i, align 4
  %44 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %end.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = or i32 %and.i.i.i, 4096
  %46 = tail call i32 @llvm.umax.i32(i32 %45, i32 %add.i.i.i.i.i) #15
  %47 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %end.i.i.i.i.i.i, align 4
  %48 = ptrtoint ptr %cleared_pmds.i.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %bf.load.i.i.i.i = load i16, ptr %cleared_pmds.i.i.i.i.i, align 4
  %bf.set.i.i.i = or i16 %bf.load.i.i.i.i, 9216
  store i16 %bf.set.i.i.i, ptr %cleared_pmds.i.i.i.i.i, align 4
  br label %free_p4d_range.exit

free_p4d_range.exit:                              ; preds = %if.end15.i.i.i, %do.end.i.i.i.free_p4d_range.exit_crit_edge
  %incdec.ptr = getelementptr [2 x i32], ptr %pgd.0, i32 1
  %cmp29.not = icmp eq i32 %and21.spec.select, %spec.select
  br i1 %cmp29.not, label %free_p4d_range.exit.cleanup_crit_edge, label %free_p4d_range.exit.do.body_crit_edge

free_p4d_range.exit.do.body_crit_edge:            ; preds = %free_p4d_range.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body

free_p4d_range.exit.cleanup_crit_edge:            ; preds = %free_p4d_range.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cleanup:                                          ; preds = %free_p4d_range.exit.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %if.then4.cleanup_crit_edge, %if.then.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_pgtables(ptr noundef %tlb, ptr noundef %vma, i32 noundef %floor, i32 noundef %ceiling) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not51 = icmp eq ptr %vma, null
  br i1 %tobool.not51, label %entry.while.end17_crit_edge, label %while.body.preheader

entry.while.end17_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end17

while.body.preheader:                             ; preds = %entry
  %vm_next70 = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 2
  %0 = ptrtoint ptr %vm_next70 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vm_next70, align 4
  %2 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vma, align 4
  tail call void @unlink_anon_vmas(ptr noundef nonnull %vma) #15
  tail call void @unlink_file_vma(ptr noundef nonnull %vma) #15
  %tobool4.not4771 = icmp eq ptr %1, null
  br i1 %tobool4.not4771, label %while.body.preheader.while.end17.loopexit_crit_edge, label %while.body.preheader.land.lhs.true.preheader_crit_edge

while.body.preheader.land.lhs.true.preheader_crit_edge: ; preds = %while.body.preheader
  br label %land.lhs.true.preheader

while.body.preheader.while.end17.loopexit_crit_edge: ; preds = %while.body.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end17.loopexit

land.lhs.true.preheader:                          ; preds = %cond.end15.land.lhs.true.preheader_crit_edge, %while.body.preheader.land.lhs.true.preheader_crit_edge
  %4 = phi i32 [ %19, %cond.end15.land.lhs.true.preheader_crit_edge ], [ %3, %while.body.preheader.land.lhs.true.preheader_crit_edge ]
  %5 = phi ptr [ %17, %cond.end15.land.lhs.true.preheader_crit_edge ], [ %1, %while.body.preheader.land.lhs.true.preheader_crit_edge ]
  %vma.addr.05272 = phi ptr [ %next.049, %cond.end15.land.lhs.true.preheader_crit_edge ], [ %vma, %while.body.preheader.land.lhs.true.preheader_crit_edge ]
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %land.rhs.land.lhs.true_crit_edge, %land.lhs.true.preheader
  %next.049 = phi ptr [ %11, %land.rhs.land.lhs.true_crit_edge ], [ %5, %land.lhs.true.preheader ]
  %vma.addr.148 = phi ptr [ %next.049, %land.rhs.land.lhs.true_crit_edge ], [ %vma.addr.05272, %land.lhs.true.preheader ]
  %6 = ptrtoint ptr %next.049 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %next.049, align 4
  %vm_end6 = getelementptr inbounds %struct.vm_area_struct, ptr %vma.addr.148, i32 0, i32 1
  %8 = ptrtoint ptr %vm_end6 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vm_end6, align 4
  %add = add i32 %9, 2097152
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %add)
  %cmp.not = icmp ugt i32 %7, %add
  br i1 %cmp.not, label %cond.end15, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %vm_next9 = getelementptr inbounds %struct.vm_area_struct, ptr %next.049, i32 0, i32 2
  %10 = ptrtoint ptr %vm_next9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vm_next9, align 4
  tail call void @unlink_anon_vmas(ptr noundef nonnull %next.049) #15
  tail call void @unlink_file_vma(ptr noundef nonnull %next.049) #15
  %tobool4.not = icmp eq ptr %11, null
  br i1 %tobool4.not, label %land.rhs.while.end17.loopexit_crit_edge, label %land.rhs.land.lhs.true_crit_edge

land.rhs.land.lhs.true_crit_edge:                 ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true

land.rhs.while.end17.loopexit_crit_edge:          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end17.loopexit

cond.end15:                                       ; preds = %land.lhs.true
  %12 = ptrtoint ptr %next.049 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %next.049, align 4
  %.in = getelementptr inbounds %struct.vm_area_struct, ptr %vma.addr.148, i32 0, i32 1
  %14 = ptrtoint ptr %.in to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %.in, align 4
  tail call void @free_pgd_range(ptr noundef %tlb, i32 noundef %4, i32 noundef %15, i32 noundef %floor, i32 noundef %13)
  %vm_next = getelementptr inbounds %struct.vm_area_struct, ptr %next.049, i32 0, i32 2
  %16 = ptrtoint ptr %vm_next to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vm_next, align 4
  %18 = ptrtoint ptr %next.049 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %next.049, align 4
  tail call void @unlink_anon_vmas(ptr noundef nonnull %next.049) #15
  tail call void @unlink_file_vma(ptr noundef nonnull %next.049) #15
  %tobool4.not47 = icmp eq ptr %17, null
  br i1 %tobool4.not47, label %cond.end15.while.end17.loopexit_crit_edge, label %cond.end15.land.lhs.true.preheader_crit_edge

cond.end15.land.lhs.true.preheader_crit_edge:     ; preds = %cond.end15
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true.preheader

cond.end15.while.end17.loopexit_crit_edge:        ; preds = %cond.end15
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end17.loopexit

while.end17.loopexit:                             ; preds = %cond.end15.while.end17.loopexit_crit_edge, %land.rhs.while.end17.loopexit_crit_edge, %while.body.preheader.while.end17.loopexit_crit_edge
  %20 = phi i32 [ %3, %while.body.preheader.while.end17.loopexit_crit_edge ], [ %4, %land.rhs.while.end17.loopexit_crit_edge ], [ %19, %cond.end15.while.end17.loopexit_crit_edge ]
  %vma.addr.146.ph = phi ptr [ %vma, %while.body.preheader.while.end17.loopexit_crit_edge ], [ %next.049, %land.rhs.while.end17.loopexit_crit_edge ], [ %next.049, %cond.end15.while.end17.loopexit_crit_edge ]
  %.in58 = getelementptr inbounds %struct.vm_area_struct, ptr %vma.addr.146.ph, i32 0, i32 1
  %21 = ptrtoint ptr %.in58 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %.in58, align 4
  tail call void @free_pgd_range(ptr noundef %tlb, i32 noundef %20, i32 noundef %22, i32 noundef %floor, i32 noundef %ceiling)
  br label %while.end17

while.end17:                                      ; preds = %while.end17.loopexit, %entry.while.end17_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlink_anon_vmas(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlink_file_vma(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pmd_install(ptr noundef %mm, ptr noundef %pmd, ptr nocapture noundef %pte) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %page_table_lock.i.i = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 14
  tail call void @_raw_spin_lock(ptr noundef %page_table_lock.i.i) #15
  %0 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pmd, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge, !prof !218

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %pgtables_bytes.i = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 12
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pgtables_bytes.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %pgtables_bytes.i, i32 1, i32 3, i32 1) #15
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pgtables_bytes.i, ptr %pgtables_bytes.i, i32 2048, ptr elementtype(i32) %pgtables_bytes.i) #15, !srcloc !233
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !234
  %3 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pte, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @user_pmd_table to i32))
  %5 = load i32, ptr @user_pmd_table, align 4
  %6 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %4 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %6 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %7 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i = add i32 %sub.ptr.div.i, %7
  %shl.i = shl i32 %add.i, 12
  %add.i.i = or i32 %5, %shl.i
  %or.i.i = or i32 %add.i.i, 2048
  %8 = ptrtoint ptr %pmd to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or.i.i, ptr %pmd, align 4
  %add1.i.i = add i32 %or.i.i, 1024
  %arrayidx2.i.i = getelementptr i32, ptr %pmd, i32 1
  %9 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %add1.i.i, ptr %arrayidx2.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_tlb_fns, ptr @cpu_tlb, i32 0, i32 2) to i32))
  %10 = load i32, ptr getelementptr inbounds (%struct.cpu_tlb_fns, ptr @cpu_tlb, i32 0, i32 2), align 4
  tail call void asm sideeffect "tst $1, $2\0A\09mcrne p15, 0, $0, c7, c10, 1\09@ flush_pmd", "r,r,Ir,~{cc}"(ptr %pmd, i32 %10, i32 1073741824) #15, !srcloc !235
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !236
  %11 = ptrtoint ptr %pte to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %pte, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %page_table_lock.i.i) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__pte_alloc(ptr noundef %mm, ptr noundef %pmd) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @pte_alloc_one()
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %page_table_lock.i.i.i = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 14
  tail call void @_raw_spin_lock(ptr noundef %page_table_lock.i.i.i) #15
  %0 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pmd, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %pmd_install.exit.thread, label %if.then2, !prof !218

pmd_install.exit.thread:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %pgtables_bytes.i.i = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 12
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pgtables_bytes.i.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %pgtables_bytes.i.i, i32 1, i32 3, i32 1) #15
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pgtables_bytes.i.i, ptr %pgtables_bytes.i.i, i32 2048, ptr elementtype(i32) %pgtables_bytes.i.i) #15, !srcloc !233
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !234
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @user_pmd_table to i32))
  %3 = load i32, ptr @user_pmd_table, align 4
  %4 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %call to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %4 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %5 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i = add i32 %sub.ptr.div.i.i, %5
  %shl.i.i = shl i32 %add.i.i, 12
  %add.i.i.i = or i32 %3, %shl.i.i
  %or.i.i.i = or i32 %add.i.i.i, 2048
  %6 = ptrtoint ptr %pmd to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or.i.i.i, ptr %pmd, align 4
  %add1.i.i.i = add i32 %or.i.i.i, 1024
  %arrayidx2.i.i.i = getelementptr i32, ptr %pmd, i32 1
  %7 = ptrtoint ptr %arrayidx2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %add1.i.i.i, ptr %arrayidx2.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_tlb_fns, ptr @cpu_tlb, i32 0, i32 2) to i32))
  %8 = load i32, ptr getelementptr inbounds (%struct.cpu_tlb_fns, ptr @cpu_tlb, i32 0, i32 2), align 4
  tail call void asm sideeffect "tst $1, $2\0A\09mcrne p15, 0, $0, c7, c10, 1\09@ flush_pmd", "r,r,Ir,~{cc}"(ptr %pmd, i32 %8, i32 1073741824) #15, !srcloc !235
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !236
  tail call void @_raw_spin_unlock(ptr noundef %page_table_lock.i.i.i) #15
  br label %cleanup

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_unlock(ptr noundef %page_table_lock.i.i.i) #15
  tail call fastcc void @pte_free(ptr noundef nonnull %call)
  br label %cleanup

cleanup:                                          ; preds = %if.then2, %pmd_install.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ 0, %if.then2 ], [ 0, %pmd_install.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @pte_alloc_one() unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %call38.i.i.i.i = tail call ptr @__alloc_pages(i32 noundef 4197826, i32 noundef 0, i32 noundef 0, ptr noundef null) #15
  %tobool.not.i = icmp eq ptr %call38.i.i.i.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %ptl.i.i.i = getelementptr inbounds %struct.page, ptr %call38.i.i.i.i, i32 0, i32 1, i32 0, i32 3
  %0 = ptrtoint ptr %ptl.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ptl.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i.i.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i.i.i, label %do.end6.i.i.i, label %if.then.i3.i.i, !prof !218

if.then.i3.i.i:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef nonnull %call38.i.i.i.i, ptr noundef nonnull @.str.9) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2299, 0\0A.popsection", ""() #15, !srcloc !237
  unreachable

do.end6.i.i.i:                                    ; preds = %if.end.i
  %2 = load ptr, ptr @page_ptl_cachep, align 4
  %call.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %2, i32 noundef 3264) #15
  %tobool.not.i.i.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool.not.i.i.i.i, label %if.then2.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end6.i.i.i
  %3 = ptrtoint ptr %ptl.i.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call.i.i.i.i, ptr %ptl.i.i.i, align 4
  tail call void @__raw_spin_lock_init(ptr noundef nonnull %call.i.i.i.i, ptr noundef nonnull @.str.10, ptr noundef nonnull @ptlock_init.__key, i16 noundef signext 3) #15
  %4 = getelementptr inbounds %struct.page, ptr %call38.i.i.i.i, i32 0, i32 2
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -268435456, i32 %6)
  %cmp.i.i.i = icmp ult i32 %6, -268435456
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %__SetPageTable.exit.i.i, !prof !230

if.then.i.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef nonnull %call38.i.i.i.i, ptr noundef nonnull @.str.11) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 912, 0\0A.popsection", ""() #15, !srcloc !238
  unreachable

__SetPageTable.exit.i.i:                          ; preds = %if.end.i.i
  %and7.i.i.i = and i32 %6, -513
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %and7.i.i.i, ptr %4, align 4
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !228
  %and.i.i.i.i.i = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i4.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i4.i.i, label %if.then21.i.i.i.i, label %do.end11.i.i.i.i

do.end11.i.i.i.i:                                 ; preds = %__SetPageTable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mod_lruvec_page_state(ptr noundef nonnull %call38.i.i.i.i, i32 noundef 38, i32 noundef 1) #15
  br label %do.body23.i.i.i.i

if.then21.i.i.i.i:                                ; preds = %__SetPageTable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @trace_hardirqs_off() #15
  tail call void @__mod_lruvec_page_state(ptr noundef nonnull %call38.i.i.i.i, i32 noundef 38, i32 noundef 1) #15
  tail call void @trace_hardirqs_on() #15
  br label %do.body23.i.i.i.i

do.body23.i.i.i.i:                                ; preds = %if.then21.i.i.i.i, %do.end11.i.i.i.i
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !229
  %and.i.i.i.i.i.i = and i32 %9, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool32.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool32.not.i.i.i.i, label %if.then36.i.i.i.i, label %do.body23.i.i.i.i.if.end_crit_edge, !prof !230

do.body23.i.i.i.i.if.end_crit_edge:               ; preds = %do.body23.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then36.i.i.i.i:                                ; preds = %do.body23.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %if.end

if.then2.i:                                       ; preds = %do.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__free_pages(ptr noundef nonnull %call38.i.i.i.i, i32 noundef 0) #15
  br label %cleanup

if.end:                                           ; preds = %if.then36.i.i.i.i, %do.body23.i.i.i.i.if.end_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #15, !srcloc !231
  %10 = ptrtoint ptr %call38.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %call38.i.i.i.i, align 4
  %shr.i = lshr i32 %11, 30
  %12 = zext i32 %shr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values)
  switch i32 %shr.i, label %if.end.if.then4_crit_edge [
    i32 2, label %if.end.cleanup_crit_edge
    i32 3, label %is_highmem_idx.exit
  ]

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.if.then4_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then4

is_highmem_idx.exit:                              ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %13 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %13)
  %cmp2.i.not = icmp eq i32 %13, 2
  br i1 %cmp2.i.not, label %is_highmem_idx.exit.cleanup_crit_edge, label %is_highmem_idx.exit.if.then4_crit_edge

is_highmem_idx.exit.if.then4_crit_edge:           ; preds = %is_highmem_idx.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then4

is_highmem_idx.exit.cleanup_crit_edge:            ; preds = %is_highmem_idx.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then4:                                         ; preds = %is_highmem_idx.exit.if.then4_crit_edge, %if.end.if.then4_crit_edge
  %call5 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i.i) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cpu_vtable to i32))
  %14 = load ptr, ptr @cpu_vtable, align 4
  %dcache_clean_area.i = getelementptr inbounds %struct.processor, ptr %14, i32 0, i32 7
  %15 = ptrtoint ptr %dcache_clean_area.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dcache_clean_area.i, align 4
  %add.ptr.i = getelementptr i32, ptr %call5, i32 512
  tail call void %16(ptr noundef %add.ptr.i, i32 noundef 2048) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %is_highmem_idx.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then2.i, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call38.i.i.i.i, %if.then4 ], [ %call38.i.i.i.i, %is_highmem_idx.exit.cleanup_crit_edge ], [ null, %if.then2.i ], [ null, %entry.cleanup_crit_edge ], [ %call38.i.i.i.i, %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pte_free(ptr noundef %pte_page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = load ptr, ptr @page_ptl_cachep, align 4
  %ptl.i.i = getelementptr inbounds %struct.page, ptr %pte_page, i32 0, i32 1, i32 0, i32 3
  %1 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ptl.i.i, align 4
  tail call void @kmem_cache_free(ptr noundef %0, ptr noundef %2) #15
  %3 = getelementptr inbounds %struct.page, ptr %pte_page, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %and.i.i.i = and i32 %5, -268434944
  call void @__sanitizer_cov_trace_const_cmp4(i32 -268435456, i32 %and.i.i.i)
  %cmp.i.not.i.i = icmp eq i32 %and.i.i.i, -268435456
  br i1 %cmp.i.not.i.i, label %__ClearPageTable.exit.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %pte_page, ptr noundef nonnull @.str.8) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 912, 0\0A.popsection", ""() #15, !srcloc !227
  unreachable

__ClearPageTable.exit.i:                          ; preds = %entry
  %or.i.i = or i32 %5, 512
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or.i.i, ptr %3, align 4
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !228
  %and.i.i.i.i = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then21.i.i.i, label %do.end11.i.i.i

do.end11.i.i.i:                                   ; preds = %__ClearPageTable.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mod_lruvec_page_state(ptr noundef %pte_page, i32 noundef 38, i32 noundef -1) #15
  br label %do.body23.i.i.i

if.then21.i.i.i:                                  ; preds = %__ClearPageTable.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @trace_hardirqs_off() #15
  tail call void @__mod_lruvec_page_state(ptr noundef %pte_page, i32 noundef 38, i32 noundef -1) #15
  tail call void @trace_hardirqs_on() #15
  br label %do.body23.i.i.i

do.body23.i.i.i:                                  ; preds = %if.then21.i.i.i, %do.end11.i.i.i
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !229
  %and.i.i.i.i.i = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool32.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool32.not.i.i.i, label %if.then36.i.i.i, label %do.body23.i.i.i.pgtable_pte_page_dtor.exit_crit_edge, !prof !230

do.body23.i.i.i.pgtable_pte_page_dtor.exit_crit_edge: ; preds = %do.body23.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %pgtable_pte_page_dtor.exit

if.then36.i.i.i:                                  ; preds = %do.body23.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %pgtable_pte_page_dtor.exit

pgtable_pte_page_dtor.exit:                       ; preds = %if.then36.i.i.i, %do.body23.i.i.i.pgtable_pte_page_dtor.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #15, !srcloc !231
  tail call void @__free_pages(ptr noundef %pte_page, i32 noundef 0) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__pte_alloc_kernel(ptr noundef %pmd) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call i32 @__get_free_pages(i32 noundef 3520, i32 noundef 0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cond = icmp eq i32 %call.i.i, 0
  br i1 %cond, label %entry.cleanup_crit_edge, label %if.then.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then.i:                                        ; preds = %entry
  %0 = inttoptr i32 %call.i.i to ptr
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cpu_vtable to i32))
  %1 = load ptr, ptr @cpu_vtable, align 4
  %dcache_clean_area.i.i = getelementptr inbounds %struct.processor, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %dcache_clean_area.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dcache_clean_area.i.i, align 4
  %add.ptr.i.i = getelementptr i32, ptr %0, i32 512
  tail call void %3(ptr noundef %add.ptr.i.i, i32 noundef 2048) #15
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.mm_struct, ptr @init_mm, i32 0, i32 0, i32 14)) #15
  %4 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pmd, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool1.not = icmp eq i32 %5, 0
  br i1 %tobool1.not, label %if.end9.thread, label %if.then11, !prof !218

if.end9.thread:                                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !239
  %call.i = tail call i32 @__virt_to_phys(i32 noundef %call.i.i) #15
  %add.i.i = add i32 %call.i, 2048
  %or.i.i = or i32 %add.i.i, 17
  %6 = ptrtoint ptr %pmd to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or.i.i, ptr %pmd, align 4
  %add1.i.i = add i32 %or.i.i, 1024
  %arrayidx2.i.i = getelementptr i32, ptr %pmd, i32 1
  %7 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %add1.i.i, ptr %arrayidx2.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_tlb_fns, ptr @cpu_tlb, i32 0, i32 2) to i32))
  %8 = load i32, ptr getelementptr inbounds (%struct.cpu_tlb_fns, ptr @cpu_tlb, i32 0, i32 2), align 4
  tail call void asm sideeffect "tst $1, $2\0A\09mcrne p15, 0, $0, c7, c10, 1\09@ flush_pmd", "r,r,Ir,~{cc}"(ptr %pmd, i32 %8, i32 1073741824) #15, !srcloc !235
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !236
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.mm_struct, ptr @init_mm, i32 0, i32 0, i32 14)) #15
  br label %cleanup

if.then11:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.mm_struct, ptr @init_mm, i32 0, i32 0, i32 14)) #15
  tail call void @free_pages(i32 noundef %call.i.i, i32 noundef 0) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then11, %if.end9.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then11 ], [ 0, %if.end9.thread ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @vm_normal_page(ptr nocapture noundef readonly %vma, i32 noundef %addr, i32 noundef %pte) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %shr = lshr i32 %pte, 12
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %0 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_flags, align 4
  %and1 = and i32 %1, 268436480
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool.not = icmp eq i32 %and1, 0
  br i1 %tobool.not, label %entry.if.end18_crit_edge, label %if.then, !prof !218

entry.if.end18_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18

if.then:                                          ; preds = %entry
  %and5 = and i32 %1, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.then
  %call = tail call i32 @pfn_valid(i32 noundef %shr) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool8.not = icmp eq i32 %call, 0
  br i1 %tobool8.not, label %if.then7.cleanup33_crit_edge, label %if.then7.out_crit_edge

if.then7.out_crit_edge:                           ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.then7.cleanup33_crit_edge:                     ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup33

if.else:                                          ; preds = %if.then
  %2 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vma, align 4
  %sub = sub i32 %addr, %3
  %shr10 = lshr i32 %sub, 12
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 13
  %4 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vm_pgoff, align 4
  %add = add i32 %shr10, %5
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %add)
  %cmp = icmp ne i32 %shr, %add
  %and.i = and i32 %1, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and.i)
  %cmp.i = icmp eq i32 %and.i, 32
  %or.cond = select i1 %cmp, i1 %cmp.i, i1 false
  br i1 %or.cond, label %if.else.if.end18_crit_edge, label %if.else.cleanup33_crit_edge

if.else.cleanup33_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup33

if.else.if.end18_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18

if.end18:                                         ; preds = %if.else.if.end18_crit_edge, %entry.if.end18_crit_edge
  %6 = load i32, ptr @zero_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %shr)
  %cmp.i45.not = icmp eq i32 %6, %shr
  br i1 %cmp.i45.not, label %if.end18.cleanup33_crit_edge, label %check_pfn

if.end18.cleanup33_crit_edge:                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup33

check_pfn:                                        ; preds = %if.end18
  %7 = load i32, ptr @highest_memmap_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %7)
  %cmp23 = icmp ugt i32 %shr, %7
  br i1 %cmp23, label %if.then30, label %check_pfn.out_crit_edge, !prof !230

check_pfn.out_crit_edge:                          ; preds = %check_pfn
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.then30:                                        ; preds = %check_pfn
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @print_bad_pte(ptr noundef %vma, i32 noundef %addr, i32 noundef %pte, ptr noundef null)
  br label %cleanup33

out:                                              ; preds = %check_pfn.out_crit_edge, %if.then7.out_crit_edge
  %8 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %9 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub32 = sub i32 %shr, %9
  %add.ptr = getelementptr %struct.page, ptr %8, i32 %sub32
  br label %cleanup33

cleanup33:                                        ; preds = %out, %if.then30, %if.end18.cleanup33_crit_edge, %if.else.cleanup33_crit_edge, %if.then7.cleanup33_crit_edge
  %retval.1 = phi ptr [ %add.ptr, %out ], [ null, %if.then30 ], [ null, %if.then7.cleanup33_crit_edge ], [ null, %if.end18.cleanup33_crit_edge ], [ null, %if.else.cleanup33_crit_edge ]
  ret ptr %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pfn_valid(i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_bad_pte(ptr nocapture noundef readonly %vma, i32 noundef %addr, i32 noundef %pte, ptr noundef %page) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %0 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vm_mm, align 4
  %pgd1 = getelementptr inbounds %struct.anon.9, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %pgd1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pgd1, align 4
  %shr.i = lshr i32 %addr, 21
  %add.ptr.i = getelementptr [2 x i32], ptr %3, i32 %shr.i
  %4 = load i32, ptr @print_bad_pte.nr_shown, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 60, i32 %4)
  %cmp = icmp eq i32 %4, 60
  br i1 %cmp, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %5 = load volatile i32, ptr @jiffies, align 128
  %6 = load i32, ptr @print_bad_pte.resume, align 4
  %sub = sub i32 %5, %6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp5 = icmp slt i32 %sub, 0
  %7 = load i32, ptr @print_bad_pte.nr_unshown, align 4
  br i1 %cmp5, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %inc = add i32 %7, 1
  store i32 %inc, ptr @print_bad_pte.nr_unshown, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %if.end.if.end10.thread_crit_edge, label %do.end

if.end.if.end10.thread_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10.thread

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.12, i32 noundef %7) #18
  store i32 0, ptr @print_bad_pte.nr_unshown, align 4
  br label %if.end10.thread

if.end10.thread:                                  ; preds = %do.end, %if.end.if.end10.thread_crit_edge
  store i32 1, ptr @print_bad_pte.nr_shown, align 4
  br label %if.then13

if.end10:                                         ; preds = %entry
  %inc11 = add i32 %4, 1
  store i32 %inc11, ptr @print_bad_pte.nr_shown, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp12 = icmp eq i32 %4, 0
  br i1 %cmp12, label %if.end10.if.then13_crit_edge, label %if.end10.if.end14_crit_edge

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

if.end10.if.then13_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then13

if.then13:                                        ; preds = %if.end10.if.then13_crit_edge, %if.end10.thread
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %8 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %8, 6000
  store i32 %add, ptr @print_bad_pte.resume, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end10.if.end14_crit_edge
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 14
  %9 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vm_file, align 4
  %tobool15.not = icmp eq ptr %10, null
  br i1 %tobool15.not, label %if.end14.cond.end_crit_edge, label %cond.true

if.end14.cond.end_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  %f_mapping = getelementptr inbounds %struct.file, ptr %10, i32 0, i32 18
  %11 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %f_mapping, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end14.cond.end_crit_edge
  %cond = phi ptr [ %12, %cond.true ], [ null, %if.end14.cond.end_crit_edge ]
  %13 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vma, align 4
  %sub.i = sub i32 %addr, %14
  %shr.i83 = lshr i32 %sub.i, 12
  %vm_pgoff.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 13
  %15 = ptrtoint ptr %vm_pgoff.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vm_pgoff.i, align 4
  %add.i = add i32 %shr.i83, %16
  %17 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 101
  %conv = zext i32 %pte to i64
  %21 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %add.ptr.i, align 4
  %conv23 = zext i32 %22 to i64
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef %comm, i64 noundef %conv, i64 noundef %conv23) #18
  %tobool25.not = icmp eq ptr %page, null
  br i1 %tobool25.not, label %cond.end.do.end30_crit_edge, label %if.then26

cond.end.do.end30_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end30

if.then26:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef nonnull %page, ptr noundef nonnull @.str.17) #15
  br label %do.end30

do.end30:                                         ; preds = %if.then26, %cond.end.do.end30_crit_edge
  %23 = inttoptr i32 %addr to ptr
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %24 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %vm_flags, align 4
  %anon_vma = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 11
  %26 = ptrtoint ptr %anon_vma to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %anon_vma, align 4
  %call32 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef %23, i32 noundef %25, ptr noundef %27, ptr noundef %cond, i32 noundef %add.i) #18
  %28 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vm_file, align 4
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 12
  %30 = ptrtoint ptr %vm_ops to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %vm_ops, align 4
  %tobool38.not = icmp eq ptr %31, null
  br i1 %tobool38.not, label %do.end30.cond.end42_crit_edge, label %cond.true39

do.end30.cond.end42_crit_edge:                    ; preds = %do.end30
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end42

cond.true39:                                      ; preds = %do.end30
  call void @__sanitizer_cov_trace_pc() #17
  %fault = getelementptr inbounds %struct.vm_operations_struct, ptr %31, i32 0, i32 5
  %32 = ptrtoint ptr %fault to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %fault, align 4
  br label %cond.end42

cond.end42:                                       ; preds = %cond.true39, %do.end30.cond.end42_crit_edge
  %cond43 = phi ptr [ %33, %cond.true39 ], [ null, %do.end30.cond.end42_crit_edge ]
  %tobool45.not = icmp eq ptr %29, null
  br i1 %tobool45.not, label %cond.end42.cond.end49_crit_edge, label %cond.true46

cond.end42.cond.end49_crit_edge:                  ; preds = %cond.end42
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end49

cond.true46:                                      ; preds = %cond.end42
  call void @__sanitizer_cov_trace_pc() #17
  %f_op = getelementptr inbounds %struct.file, ptr %29, i32 0, i32 3
  %34 = ptrtoint ptr %f_op to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %f_op, align 4
  %mmap = getelementptr inbounds %struct.file_operations, ptr %35, i32 0, i32 12
  %36 = ptrtoint ptr %mmap to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mmap, align 4
  br label %cond.end49

cond.end49:                                       ; preds = %cond.true46, %cond.end42.cond.end49_crit_edge
  %cond50 = phi ptr [ %37, %cond.true46 ], [ null, %cond.end42.cond.end49_crit_edge ]
  %tobool51.not = icmp eq ptr %cond, null
  br i1 %tobool51.not, label %cond.end49.cond.end54_crit_edge, label %cond.true52

cond.end49.cond.end54_crit_edge:                  ; preds = %cond.end49
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end54

cond.true52:                                      ; preds = %cond.end49
  call void @__sanitizer_cov_trace_pc() #17
  %a_ops = getelementptr inbounds %struct.address_space, ptr %cond, i32 0, i32 9
  %38 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %a_ops, align 4
  %readpage = getelementptr inbounds %struct.address_space_operations, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %readpage to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %readpage, align 4
  br label %cond.end54

cond.end54:                                       ; preds = %cond.true52, %cond.end49.cond.end54_crit_edge
  %cond55 = phi ptr [ %41, %cond.true52 ], [ null, %cond.end49.cond.end54_crit_edge ]
  %call56 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.22, ptr noundef %29, ptr noundef %cond43, ptr noundef %cond50, ptr noundef %cond55) #18
  tail call void @dump_stack() #18
  tail call void @add_taint(i32 noundef 5, i32 noundef 1) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.end54, %if.then6
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @copy_page_range(ptr noundef %dst_vma, ptr noundef %src_vma) local_unnamed_addr #2 align 64 {
entry:
  %range = alloca %struct.mmu_notifier_range, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %src_vma to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %src_vma, align 4
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %src_vma, i32 0, i32 1
  %2 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_end, align 4
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %dst_vma, i32 0, i32 6
  %4 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vm_mm, align 4
  %vm_mm1 = getelementptr inbounds %struct.vm_area_struct, ptr %src_vma, i32 0, i32 6
  %6 = ptrtoint ptr %vm_mm1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vm_mm1, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %range) #15
  %8 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 1
  %9 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 2
  %10 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 3
  %11 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 4
  %12 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 5
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %src_vma, i32 0, i32 8
  %13 = call ptr @memset(ptr %range, i32 255, i32 28)
  %14 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vm_flags, align 4
  %and = and i32 %15, 272630784
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end16_crit_edge

entry.if.end16_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end16

land.lhs.true:                                    ; preds = %entry
  %anon_vma = getelementptr inbounds %struct.vm_area_struct, ptr %src_vma, i32 0, i32 11
  %16 = ptrtoint ptr %anon_vma to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %anon_vma, align 4
  %tobool2.not = icmp eq ptr %17, null
  br i1 %tobool2.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end16_crit_edge

land.lhs.true.if.end16_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end16

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %land.lhs.true.if.end16_crit_edge, %entry.if.end16_crit_edge
  %and.i = and i32 %15, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and.i)
  %cmp.i = icmp eq i32 %and.i, 32
  br i1 %cmp.i, label %if.then20, label %if.end16.if.end29_crit_edge

if.end16.if.end29_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

if.then20:                                        ; preds = %if.end16
  %18 = ptrtoint ptr %range to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %src_vma, ptr %range, align 4
  %19 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 3, ptr %12, align 4
  %20 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %7, ptr %8, align 4
  %21 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %1, ptr %9, align 4
  %22 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %3, ptr %10, align 4
  %23 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %11, align 4
  call fastcc void @mmu_notifier_invalidate_range_start(ptr noundef nonnull %range)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %24 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i = icmp eq i32 %24, 0
  br i1 %tobool.not.i, label %if.then20.if.end.i_crit_edge, label %land.rhs.i

if.then20.if.end.i_crit_edge:                     ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.then20
  %dep_map.i = getelementptr inbounds %struct.anon.9, ptr %7, i32 0, i32 15, i32 6
  %call.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef 0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !230

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.25, i32 noundef 161, i32 noundef 9, ptr noundef null) #15
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.then20.if.end.i_crit_edge
  %mmap_lock26.i = getelementptr inbounds %struct.anon.9, ptr %7, i32 0, i32 15
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %mmap_lock26.i, i32 noundef 4) #15
  %25 = ptrtoint ptr %mmap_lock26.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %mmap_lock26.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp.i.not.i = icmp eq i32 %26, 0
  br i1 %cmp.i.not.i, label %if.then37.i, label %mmap_assert_write_locked.exit, !prof !230

if.then37.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @dump_mm(ptr noundef %7) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mmap_lock.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 162, 0\0A.popsection", ""() #15, !srcloc !240
  unreachable

mmap_assert_write_locked.exit:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %write_protect_seq = getelementptr inbounds %struct.anon.9, ptr %7, i32 0, i32 26
  %27 = ptrtoint ptr %write_protect_seq to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %write_protect_seq, align 4
  %inc.i = add i32 %28, 1
  store i32 %inc.i, ptr %write_protect_seq, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !241
  br label %if.end29

if.end29:                                         ; preds = %mmap_assert_write_locked.exit, %if.end16.if.end29_crit_edge
  %pgd = getelementptr inbounds %struct.anon.9, ptr %5, i32 0, i32 8
  %29 = ptrtoint ptr %pgd to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pgd, align 4
  %shr.i = lshr i32 %1, 21
  %add.ptr.i = getelementptr [2 x i32], ptr %30, i32 %shr.i
  %pgd31 = getelementptr inbounds %struct.anon.9, ptr %7, i32 0, i32 8
  %31 = ptrtoint ptr %pgd31 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pgd31, align 4
  %add.ptr.i115 = getelementptr [2 x i32], ptr %32, i32 %shr.i
  %sub35 = add i32 %3, -1
  br label %do.body33

do.body33:                                        ; preds = %do.cond50.do.body33_crit_edge, %if.end29
  %src_pgd.0 = phi ptr [ %add.ptr.i115, %if.end29 ], [ %incdec.ptr51, %do.cond50.do.body33_crit_edge ]
  %dst_pgd.0 = phi ptr [ %add.ptr.i, %if.end29 ], [ %incdec.ptr, %do.cond50.do.body33_crit_edge ]
  %addr.0 = phi i32 [ %1, %if.end29 ], [ %and34., %do.cond50.do.body33_crit_edge ]
  %add = add i32 %addr.0, 2097152
  %and34 = and i32 %add, -2097152
  %sub = add i32 %and34, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %sub35)
  %cmp = icmp ult i32 %sub, %sub35
  %and34. = select i1 %cmp, i32 %and34, i32 %3
  %tobool.not.i116 = icmp eq ptr %dst_pgd.0, null
  br i1 %tobool.not.i116, label %do.body33.do.end53_crit_edge, label %if.end.i.i.i

do.body33.do.end53_crit_edge:                     ; preds = %do.body33
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end53

if.end.i.i.i:                                     ; preds = %do.body33
  %33 = ptrtoint ptr %src_pgd.0 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %src_pgd.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.not.i.i.i.i = icmp eq i32 %34, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.do.cond50_crit_edge, label %if.end.i.i.i.i

if.end.i.i.i.do.cond50_crit_edge:                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond50

if.end.i.i.i.i:                                   ; preds = %if.end.i.i.i
  %and.i.i.i.i = and i32 %34, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end36.i.i.i, label %if.then4.i.i.i.i, !prof !218

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @pmd_clear_bad(ptr noundef %src_pgd.0) #15
  br label %do.cond50

if.end36.i.i.i:                                   ; preds = %if.end.i.i.i.i
  %call37.i.i.i = call fastcc i32 @copy_pte_range(ptr noundef %dst_vma, ptr noundef %src_vma, ptr noundef nonnull %dst_pgd.0, ptr noundef %src_pgd.0, i32 noundef %addr.0, i32 noundef %and34.) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37.i.i.i)
  %tobool38.not.i.i.i = icmp eq i32 %call37.i.i.i, 0
  br i1 %tobool38.not.i.i.i, label %if.end36.i.i.i.do.cond50_crit_edge, label %if.end36.i.i.i.do.end53_crit_edge

if.end36.i.i.i.do.end53_crit_edge:                ; preds = %if.end36.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end53

if.end36.i.i.i.do.cond50_crit_edge:               ; preds = %if.end36.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond50

do.cond50:                                        ; preds = %if.end36.i.i.i.do.cond50_crit_edge, %if.then4.i.i.i.i, %if.end.i.i.i.do.cond50_crit_edge
  %incdec.ptr = getelementptr [2 x i32], ptr %dst_pgd.0, i32 1
  %incdec.ptr51 = getelementptr [2 x i32], ptr %src_pgd.0, i32 1
  %cmp52.not = icmp eq i32 %and34., %3
  br i1 %cmp52.not, label %do.cond50.do.end53_crit_edge, label %do.cond50.do.body33_crit_edge

do.cond50.do.body33_crit_edge:                    ; preds = %do.cond50
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body33

do.cond50.do.end53_crit_edge:                     ; preds = %do.cond50
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end53

do.end53:                                         ; preds = %do.cond50.do.end53_crit_edge, %if.end36.i.i.i.do.end53_crit_edge, %do.body33.do.end53_crit_edge
  %ret.0 = phi i32 [ 0, %do.cond50.do.end53_crit_edge ], [ -12, %do.body33.do.end53_crit_edge ], [ -12, %if.end36.i.i.i.do.end53_crit_edge ]
  br i1 %cmp.i, label %do.body56, label %do.end53.cleanup_crit_edge

do.end53.cleanup_crit_edge:                       ; preds = %do.end53
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.body56:                                        ; preds = %do.end53
  %write_protect_seq57 = getelementptr inbounds %struct.anon.9, ptr %7, i32 0, i32 26
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !242
  %35 = ptrtoint ptr %write_protect_seq57 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %write_protect_seq57, align 4
  %inc.i117 = add i32 %36, 1
  store i32 %inc.i117, ptr %write_protect_seq57, align 4
  %37 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %11, align 4
  %and.i.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %do.body56.if.end.i118_crit_edge, label %do.body.i

do.body56.if.end.i118_crit_edge:                  ; preds = %do.body56
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i118

do.body.i:                                        ; preds = %do.body56
  call void @__sanitizer_cov_trace_pc() #17
  call void @__might_sleep(ptr noundef nonnull @.str.24, i32 noundef 482) #15
  br label %if.end.i118

if.end.i118:                                      ; preds = %do.body.i, %do.body56.if.end.i118_crit_edge
  %39 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %8, align 4
  %notifier_subscriptions.i.i = getelementptr inbounds %struct.anon.9, ptr %40, i32 0, i32 49
  %41 = ptrtoint ptr %notifier_subscriptions.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %notifier_subscriptions.i.i, align 8
  %tobool.i8.not.i = icmp eq ptr %42, null
  br i1 %tobool.i8.not.i, label %if.end.i118.cleanup_crit_edge, label %if.then4.i

if.end.i118.cleanup_crit_edge:                    ; preds = %if.end.i118
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then4.i:                                       ; preds = %if.end.i118
  call void @__sanitizer_cov_trace_pc() #17
  call void @__mmu_notifier_invalidate_range_end(ptr noundef nonnull %range, i1 noundef zeroext false) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then4.i, %if.end.i118.cleanup_crit_edge, %do.end53.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %land.lhs.true.cleanup_crit_edge ], [ %ret.0, %do.end53.cleanup_crit_edge ], [ %ret.0, %if.end.i118.cleanup_crit_edge ], [ %ret.0, %if.then4.i ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %range) #15
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mmu_notifier_invalidate_range_start(ptr noundef %range) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__might_sleep(ptr noundef nonnull @.str.24, i32 noundef 454) #15
  br label %__here

__here:                                           ; preds = %entry
  tail call void @lock_acquire(ptr noundef nonnull @__mmu_notifier_invalidate_range_start_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@mmu_notifier_invalidate_range_start, %__here) to i32)) #15
  %mm = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 1
  %0 = ptrtoint ptr %mm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mm, align 4
  %notifier_subscriptions.i = getelementptr inbounds %struct.anon.9, ptr %1, i32 0, i32 49
  %2 = ptrtoint ptr %notifier_subscriptions.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %notifier_subscriptions.i, align 8
  %tobool.i.not = icmp eq ptr %3, null
  br i1 %tobool.i.not, label %__here.__here4_crit_edge, label %if.then

__here.__here4_crit_edge:                         ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %__here4

if.then:                                          ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  %flags = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 4
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %or = or i32 %5, 1
  store i32 %or, ptr %flags, align 4
  %call3 = tail call i32 @__mmu_notifier_invalidate_range_start(ptr noundef %range) #15
  br label %__here4

__here4:                                          ; preds = %if.then, %__here.__here4_crit_edge
  tail call void @lock_release(ptr noundef nonnull @__mmu_notifier_invalidate_range_start_map, i32 noundef ptrtoint (ptr blockaddress(@mmu_notifier_invalidate_range_start, %__here4) to i32)) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unmap_page_range(ptr noundef %tlb, ptr noundef %vma, i32 noundef %addr, i32 noundef %end, ptr noundef readonly %details) local_unnamed_addr #2 align 64 {
entry:
  %vma.i.i.i = alloca %struct.vm_area_struct, align 4
  %vma.i.i.i.i.i.i = alloca %struct.vm_area_struct, align 4
  %rss.i.i.i.i = alloca [4 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_cmp4(i32 %addr, i32 %end)
  %cmp.not = icmp ult i32 %addr, %end
  br i1 %cmp.not, label %do.end7, label %do.body2, !prof !218

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1554, 0\0A.popsection", ""() #15, !srcloc !243
  unreachable

do.end7:                                          ; preds = %entry
  %fullmm.i = getelementptr inbounds %struct.mmu_gather, ptr %tlb, i32 0, i32 3
  %0 = ptrtoint ptr %fullmm.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load.i = load i16, ptr %fullmm.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.not.i = icmp sgt i16 %bf.load.i, -1
  br i1 %tobool.not.i, label %if.end.i, label %do.end7.tlb_start_vma.exit_crit_edge

do.end7.tlb_start_vma.exit_crit_edge:             ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #17
  br label %tlb_start_vma.exit

if.end.i:                                         ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #17
  %bf.clear.i.i = and i16 %bf.load.i, -129
  %1 = ptrtoint ptr %fullmm.i to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 %bf.clear.i.i, ptr %fullmm.i, align 4
  %vm_flags.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags.i.i, align 4
  %4 = trunc i32 %3 to i16
  %5 = shl i16 %4, 6
  %bf.shl4.i.i = and i16 %5, 256
  %bf.clear5.i.i = and i16 %bf.load.i, -385
  %bf.set6.i.i = or i16 %bf.shl4.i.i, %bf.clear5.i.i
  store i16 %bf.set6.i.i, ptr %fullmm.i, align 4
  %6 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vma, align 4
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %8 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vm_end.i, align 4
  tail call void @flush_cache_range(ptr noundef %vma, i32 noundef %7, i32 noundef %9) #15
  br label %tlb_start_vma.exit

tlb_start_vma.exit:                               ; preds = %if.end.i, %do.end7.tlb_start_vma.exit_crit_edge
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %10 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vm_mm, align 4
  %pgd8 = getelementptr inbounds %struct.anon.9, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %pgd8 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pgd8, align 4
  %shr.i = lshr i32 %addr, 21
  %add.ptr.i = getelementptr [2 x i32], ptr %13, i32 %shr.i
  %sub10 = add i32 %end, -1
  %tobool14.not.i.i.i = icmp eq ptr %details, null
  %14 = getelementptr inbounds [4 x i32], ptr %rss.i.i.i.i, i32 0, i32 2
  %vm_flags.i.i.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %vm_pgoff.i.i.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 13
  %start.i.i.i.i.i.i = getelementptr inbounds %struct.mmu_gather, ptr %tlb, i32 0, i32 1
  %end.i.i.i.i.i.i = getelementptr inbounds %struct.mmu_gather, ptr %tlb, i32 0, i32 2
  %vm_mm.i.i.i.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.i.i.i.i.i.i, i32 0, i32 6
  %vm_flags.i.i.i.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.i.i.i.i.i.i, i32 0, i32 8
  br label %do.body9

do.body9:                                         ; preds = %zap_p4d_range.exit.do.body9_crit_edge, %tlb_start_vma.exit
  %pgd.0 = phi ptr [ %add.ptr.i, %tlb_start_vma.exit ], [ %incdec.ptr, %zap_p4d_range.exit.do.body9_crit_edge ]
  %addr.addr.0 = phi i32 [ %addr, %tlb_start_vma.exit ], [ %and.end, %zap_p4d_range.exit.do.body9_crit_edge ]
  %add = add i32 %addr.addr.0, 2097152
  %and = and i32 %add, -2097152
  %sub = add i32 %and, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %sub10)
  %cmp11 = icmp ult i32 %sub, %sub10
  %and.end = select i1 %cmp11, i32 %and, i32 %end
  %15 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pgd.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i.i.i.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i.i.i.i, label %do.body9.zap_p4d_range.exit_crit_edge, label %lor.lhs.false.i.i.i.i

do.body9.zap_p4d_range.exit_crit_edge:            ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #17
  br label %zap_p4d_range.exit

lor.lhs.false.i.i.i.i:                            ; preds = %do.body9
  %and.i.i.i.i = and i32 %16, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool3.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool3.not.i.i.i.i, label %if.end35.i.i.i, label %if.then6.i.i.i.i, !prof !218

if.then6.i.i.i.i:                                 ; preds = %lor.lhs.false.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @pmd_clear_bad(ptr noundef %pgd.0) #15
  br label %zap_p4d_range.exit

if.end35.i.i.i:                                   ; preds = %lor.lhs.false.i.i.i.i
  %17 = ptrtoint ptr %tlb to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tlb, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %rss.i.i.i.i) #15
  br label %again.i.i.i.i

again.i.i.i.i:                                    ; preds = %if.then200.i.i.i.i, %if.end35.i.i.i
  %addr.addr.0.i.i.i.i = phi i32 [ %addr.addr.0, %if.end35.i.i.i ], [ %addr.addr.4424.i.i.i.i, %if.then200.i.i.i.i ]
  %19 = call ptr @memset(ptr %rss.i.i.i.i, i32 0, i32 16)
  %20 = load ptr, ptr @mem_map, align 4
  %21 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %pgd.0, align 4
  %shr.i.i.i.i.i = lshr i32 %22, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %23 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i.i.i.i.i = sub i32 %shr.i.i.i.i.i, %23
  %ptl.i.i.i.i.i.i = getelementptr %struct.page, ptr %20, i32 %sub.i.i.i.i.i, i32 1, i32 0, i32 3
  %24 = ptrtoint ptr %ptl.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ptl.i.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr %struct.page, ptr %20, i32 %sub.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %26 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i.i.i.i = or i32 %26, 512
  %27 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i.i.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i.i = add i32 %30, 1
  store volatile i32 %add.i.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %31 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i.i.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i1.i.i.i.i.i.i to ptr
  %task.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %task.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i.i.i.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 213
  %35 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %pagefault_disabled.i.i.i.i.i.i.i.i, align 8
  %inc.i.i.i.i.i.i.i.i = add i32 %36, 1
  store i32 %inc.i.i.i.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i.i.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i.i.i.i.i = call ptr @__kmap_local_page_prot(ptr noundef %add.ptr.i.i.i.i, i32 noundef %or.i.i.i.i.i) #15
  %shr.i298.i.i.i.i = lshr i32 %addr.addr.0.i.i.i.i, 12
  %and.i.i.i.i.i = and i32 %shr.i298.i.i.i.i, 511
  %add.ptr5.i.i.i.i = getelementptr i32, ptr %call.i.i.i.i.i.i, i32 %and.i.i.i.i.i
  call void @_raw_spin_lock(ptr noundef %25) #15
  br label %do.body6.i.i.i.i

do.body6.i.i.i.i:                                 ; preds = %do.cond176.i.i.i.i.do.body6.i.i.i.i_crit_edge, %again.i.i.i.i
  %pte.0.i.i.i.i = phi ptr [ %add.ptr5.i.i.i.i, %again.i.i.i.i ], [ %incdec.ptr.i.i.i.i, %do.cond176.i.i.i.i.do.body6.i.i.i.i_crit_edge ]
  %force_flush.1.i.i.i.i = phi i32 [ 0, %again.i.i.i.i ], [ %force_flush.5.ph.i.i.i.i, %do.cond176.i.i.i.i.do.body6.i.i.i.i_crit_edge ]
  %addr.addr.1.i.i.i.i = phi i32 [ %addr.addr.0.i.i.i.i, %again.i.i.i.i ], [ %add177.i.i.i.i, %do.cond176.i.i.i.i.do.body6.i.i.i.i_crit_edge ]
  %37 = ptrtoint ptr %pte.0.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %pte.0.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i60.i.i.i = icmp eq i32 %38, 0
  br i1 %tobool.not.i60.i.i.i, label %do.body6.i.i.i.i.do.cond176.i.i.i.i_crit_edge, label %if.end.i.i.i.i

do.body6.i.i.i.i.do.cond176.i.i.i.i_crit_edge:    ; preds = %do.body6.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond176.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %do.body6.i.i.i.i
  %39 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 16384
  %43 = and i32 %42, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.i.not.i.i.i.i = icmp eq i32 %43, 0
  br i1 %tobool.i.not.i.i.i.i, label %cond.true.i.i.i.i, label %if.end.i.i.i.i.do.end179.i.i.i.i_crit_edge

if.end.i.i.i.i.do.end179.i.i.i.i_crit_edge:       ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end179.i.i.i.i

cond.true.i.i.i.i:                                ; preds = %if.end.i.i.i.i
  %and10.i.i.i.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i.i.i.i)
  %tobool11.not.i.i.i.i = icmp eq i32 %and10.i.i.i.i, 0
  br i1 %tobool11.not.i.i.i.i, label %if.end98.i.i.i.i, label %if.then15.i.i.i.i

if.then15.i.i.i.i:                                ; preds = %cond.true.i.i.i.i
  %shr.i299.i.i.i.i = lshr i32 %38, 12
  %44 = ptrtoint ptr %vm_flags.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %vm_flags.i.i.i.i.i, align 4
  %and1.i.i.i.i.i = and i32 %45, 268436480
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.then15.i.i.i.i.if.end18.i.i.i.i.i_crit_edge, label %if.then.i.i.i.i.i, !prof !218

if.then15.i.i.i.i.if.end18.i.i.i.i.i_crit_edge:   ; preds = %if.then15.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %if.then15.i.i.i.i
  %and5.i.i.i.i.i = and i32 %45, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i.i.i.i)
  %tobool6.not.i.i.i.i.i = icmp eq i32 %and5.i.i.i.i.i, 0
  br i1 %tobool6.not.i.i.i.i.i, label %if.else.i.i.i.i.i, label %if.then7.i.i.i.i.i

if.then7.i.i.i.i.i:                               ; preds = %if.then.i.i.i.i.i
  %call.i.i.i.i.i = call i32 @pfn_valid(i32 noundef %shr.i299.i.i.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i.i)
  %tobool8.not.i.i.i.i.i = icmp eq i32 %call.i.i.i.i.i, 0
  br i1 %tobool8.not.i.i.i.i.i, label %if.then7.i.i.i.i.i.if.end22.i.i.i.i_crit_edge, label %if.then7.i.i.i.i.i.vm_normal_page.exit.i.i.i.i_crit_edge, !prof !246

if.then7.i.i.i.i.i.vm_normal_page.exit.i.i.i.i_crit_edge: ; preds = %if.then7.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vm_normal_page.exit.i.i.i.i

if.then7.i.i.i.i.i.if.end22.i.i.i.i_crit_edge:    ; preds = %if.then7.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i.i.i.i.i
  %46 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %vma, align 4
  %sub.i300.i.i.i.i = sub i32 %addr.addr.1.i.i.i.i, %47
  %shr10.i.i.i.i.i = lshr i32 %sub.i300.i.i.i.i, 12
  %48 = ptrtoint ptr %vm_pgoff.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %vm_pgoff.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %shr10.i.i.i.i.i, %49
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i299.i.i.i.i, i32 %add.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp ne i32 %shr.i299.i.i.i.i, %add.i.i.i.i.i
  %and.i.i301.i.i.i.i = and i32 %45, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and.i.i301.i.i.i.i)
  %cmp.i.i302.i.i.i.i = icmp eq i32 %and.i.i301.i.i.i.i, 32
  %or.cond.i.i.i.i.i = select i1 %cmp.i.i.i.i.i, i1 %cmp.i.i302.i.i.i.i, i1 false
  br i1 %or.cond.i.i.i.i.i, label %if.else.i.i.i.i.i.if.end18.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i.if.end22.i.i.i.i_crit_edge, !prof !247

if.else.i.i.i.i.i.if.end22.i.i.i.i_crit_edge:     ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22.i.i.i.i

if.else.i.i.i.i.i.if.end18.i.i.i.i.i_crit_edge:   ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i.i.i.i.i

if.end18.i.i.i.i.i:                               ; preds = %if.else.i.i.i.i.i.if.end18.i.i.i.i.i_crit_edge, %if.then15.i.i.i.i.if.end18.i.i.i.i.i_crit_edge
  %50 = load i32, ptr @zero_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %50, i32 %shr.i299.i.i.i.i)
  %cmp.i45.not.i.i.i.i.i = icmp eq i32 %50, %shr.i299.i.i.i.i
  br i1 %cmp.i45.not.i.i.i.i.i, label %if.end18.i.i.i.i.i.if.end22.i.i.i.i_crit_edge, label %check_pfn.i.i.i.i.i, !prof !246

if.end18.i.i.i.i.i.if.end22.i.i.i.i_crit_edge:    ; preds = %if.end18.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22.i.i.i.i

check_pfn.i.i.i.i.i:                              ; preds = %if.end18.i.i.i.i.i
  %51 = load i32, ptr @highest_memmap_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i299.i.i.i.i, i32 %51)
  %cmp23.i.i.i.i.i = icmp ugt i32 %shr.i299.i.i.i.i, %51
  br i1 %cmp23.i.i.i.i.i, label %if.then30.i.i.i.i.i, label %check_pfn.i.i.i.i.i.vm_normal_page.exit.i.i.i.i_crit_edge, !prof !230

check_pfn.i.i.i.i.i.vm_normal_page.exit.i.i.i.i_crit_edge: ; preds = %check_pfn.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vm_normal_page.exit.i.i.i.i

if.then30.i.i.i.i.i:                              ; preds = %check_pfn.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @print_bad_pte(ptr noundef %vma, i32 noundef %addr.addr.1.i.i.i.i, i32 noundef %38, ptr noundef null) #15
  br label %if.end22.i.i.i.i

vm_normal_page.exit.i.i.i.i:                      ; preds = %check_pfn.i.i.i.i.i.vm_normal_page.exit.i.i.i.i_crit_edge, %if.then7.i.i.i.i.i.vm_normal_page.exit.i.i.i.i_crit_edge
  %52 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %53 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub32.i.i.i.i.i = sub i32 %shr.i299.i.i.i.i, %53
  %add.ptr.i.i.i.i.i = getelementptr %struct.page, ptr %52, i32 %sub32.i.i.i.i.i
  %tobool1.not.i.i.i.i.i = icmp eq ptr %add.ptr.i.i.i.i.i, null
  %or.cond.i304.i.i.i.i = or i1 %tobool14.not.i.i.i, %tobool1.not.i.i.i.i.i
  br i1 %or.cond.i304.i.i.i.i, label %vm_normal_page.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge, label %if.end.i.i.i.i.i

vm_normal_page.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge: ; preds = %vm_normal_page.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22.i.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %vm_normal_page.exit.i.i.i.i
  %54 = ptrtoint ptr %details to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %details, align 4
  %tobool2.not.i.i.i.i.i = icmp eq ptr %55, null
  br i1 %tobool2.not.i.i.i.i.i, label %if.end.i.i.i.i.i.if.end22.i.i.i.i_crit_edge, label %zap_skip_check_mapping.exit.i.i.i.i

if.end.i.i.i.i.i.if.end22.i.i.i.i_crit_edge:      ; preds = %if.end.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22.i.i.i.i

zap_skip_check_mapping.exit.i.i.i.i:              ; preds = %if.end.i.i.i.i.i
  %call.i305.i.i.i.i = call ptr @page_rmapping(ptr noundef nonnull %add.ptr.i.i.i.i.i) #15
  %cmp.i306.not.i.i.i.i = icmp eq ptr %55, %call.i305.i.i.i.i
  br i1 %cmp.i306.not.i.i.i.i, label %zap_skip_check_mapping.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge, label %zap_skip_check_mapping.exit.i.i.i.i.do.cond176.i.i.i.i_crit_edge, !prof !218

zap_skip_check_mapping.exit.i.i.i.i.do.cond176.i.i.i.i_crit_edge: ; preds = %zap_skip_check_mapping.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond176.i.i.i.i

zap_skip_check_mapping.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge: ; preds = %zap_skip_check_mapping.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22.i.i.i.i

if.end22.i.i.i.i:                                 ; preds = %zap_skip_check_mapping.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge, %if.end.i.i.i.i.i.if.end22.i.i.i.i_crit_edge, %vm_normal_page.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge, %if.then30.i.i.i.i.i, %if.end18.i.i.i.i.i.if.end22.i.i.i.i_crit_edge, %if.else.i.i.i.i.i.if.end22.i.i.i.i_crit_edge, %if.then7.i.i.i.i.i.if.end22.i.i.i.i_crit_edge
  %retval.1.i387396.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i.i, %zap_skip_check_mapping.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ %add.ptr.i.i.i.i.i, %if.end.i.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ %add.ptr.i.i.i.i.i, %vm_normal_page.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ null, %if.then30.i.i.i.i.i ], [ null, %if.then7.i.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ null, %if.end18.i.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ null, %if.else.i.i.i.i.i.if.end22.i.i.i.i_crit_edge ]
  %tobool1.not.i391395.i.i.i.i = phi i1 [ false, %zap_skip_check_mapping.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ false, %if.end.i.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ %tobool1.not.i.i.i.i.i, %vm_normal_page.exit.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ true, %if.then30.i.i.i.i.i ], [ true, %if.then7.i.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ true, %if.end18.i.i.i.i.i.if.end22.i.i.i.i_crit_edge ], [ true, %if.else.i.i.i.i.i.if.end22.i.i.i.i_crit_edge ]
  %56 = ptrtoint ptr %pte.0.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %pte.0.i.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cpu_vtable to i32))
  %58 = load ptr, ptr @cpu_vtable, align 4
  %set_pte_ext.i.i.i.i.i.i = getelementptr inbounds %struct.processor, ptr %58, i32 0, i32 9
  %59 = ptrtoint ptr %set_pte_ext.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %set_pte_ext.i.i.i.i.i.i, align 4
  call void %60(ptr noundef %pte.0.i.i.i.i, i32 noundef 0, i32 noundef 0) #15
  %61 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %start.i.i.i.i.i.i, align 4
  %63 = call i32 @llvm.umin.i32(i32 %62, i32 %addr.addr.1.i.i.i.i) #15
  %64 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %start.i.i.i.i.i.i, align 4
  %65 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %end.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i = add i32 %addr.addr.1.i.i.i.i, 4096
  %67 = call i32 @llvm.umax.i32(i32 %66, i32 %add.i.i.i.i.i.i) #15
  %68 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %67, ptr %end.i.i.i.i.i.i, align 4
  %69 = ptrtoint ptr %fullmm.i to i32
  call void @__asan_load2_noabort(i32 %69)
  %bf.load.i.i.i.i.i = load i16, ptr %fullmm.i, align 4
  %bf.set.i.i.i.i.i = or i16 %bf.load.i.i.i.i.i, 4096
  store i16 %bf.set.i.i.i.i.i, ptr %fullmm.i, align 4
  br i1 %tobool1.not.i391395.i.i.i.i, label %if.end22.i.i.i.i.do.cond176.i.i.i.i_crit_edge, label %if.end40.i.i.i.i, !prof !230

if.end22.i.i.i.i.do.cond176.i.i.i.i_crit_edge:    ; preds = %if.end22.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond176.i.i.i.i

if.end40.i.i.i.i:                                 ; preds = %if.end22.i.i.i.i
  %70 = getelementptr inbounds %struct.page, ptr %retval.1.i387396.i.i.i.i, i32 0, i32 1
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %70, align 4
  %and.i2.i.i.i.i.i = and i32 %72, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %and.i2.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, !prof !218

if.then.i.i.i.i.i.i:                              ; preds = %if.end40.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i.i.i = add i32 %72, -1
  br label %PageAnon.exit.i.i.i.i

if.end.i.i.i.i.i.i:                               ; preds = %if.end40.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %73 = ptrtoint ptr %retval.1.i387396.i.i.i.i to i32
  br label %PageAnon.exit.i.i.i.i

PageAnon.exit.i.i.i.i:                            ; preds = %if.end.i.i.i.i.i.i, %if.then.i.i.i.i.i.i
  %retval.0.i.i.i.i.i.i = phi i32 [ %sub.i.i.i.i.i.i, %if.then.i.i.i.i.i.i ], [ %73, %if.end.i.i.i.i.i.i ]
  %74 = inttoptr i32 %retval.0.i.i.i.i.i.i to ptr
  %mapping.i.i.i.i.i.i = getelementptr inbounds %struct.anon.101, ptr %74, i32 0, i32 2
  %75 = ptrtoint ptr %mapping.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %mapping.i.i.i.i.i.i, align 4
  %77 = ptrtoint ptr %76 to i32
  %and.i.i297.i.i.i.i = and i32 %77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i297.i.i.i.i)
  %cmp.i.i.not.i.i.i.i = icmp eq i32 %and.i.i297.i.i.i.i, 0
  br i1 %cmp.i.i.not.i.i.i.i, label %cond.true43.i.i.i.i, label %PageAnon.exit.i.i.i.i.if.end78.i.i.i.i_crit_edge

PageAnon.exit.i.i.i.i.if.end78.i.i.i.i_crit_edge: ; preds = %PageAnon.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end78.i.i.i.i

cond.true43.i.i.i.i:                              ; preds = %PageAnon.exit.i.i.i.i
  %and44.i.i.i.i = and i32 %57, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44.i.i.i.i)
  %tobool45.not.i.i.i.i = icmp eq i32 %and44.i.i.i.i, 0
  br i1 %tobool45.not.i.i.i.i, label %cond.true43.i.i.i.i.cond.true56.i.i.i.i_crit_edge, label %if.then53.i.i.i.i

cond.true43.i.i.i.i.cond.true56.i.i.i.i_crit_edge: ; preds = %cond.true43.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.true56.i.i.i.i

if.then53.i.i.i.i:                                ; preds = %cond.true43.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call54.i.i.i.i = call zeroext i1 @set_page_dirty(ptr noundef nonnull %retval.1.i387396.i.i.i.i) #15
  br label %cond.true56.i.i.i.i

cond.true56.i.i.i.i:                              ; preds = %if.then53.i.i.i.i, %cond.true43.i.i.i.i.cond.true56.i.i.i.i_crit_edge
  %force_flush.2.i.i.i.i = phi i32 [ 1, %if.then53.i.i.i.i ], [ %force_flush.1.i.i.i.i, %cond.true43.i.i.i.i.cond.true56.i.i.i.i_crit_edge ]
  %and57.i.i.i.i = and i32 %57, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and57.i.i.i.i)
  %tobool58.not.i.i.i.i = icmp eq i32 %and57.i.i.i.i, 0
  br i1 %tobool58.not.i.i.i.i, label %cond.true56.i.i.i.i.if.end78.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

cond.true56.i.i.i.i.if.end78.i.i.i.i_crit_edge:   ; preds = %cond.true56.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end78.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %cond.true56.i.i.i.i
  %78 = ptrtoint ptr %vm_flags.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %vm_flags.i.i.i.i.i, align 4
  %and66.i.i.i.i = and i32 %79, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and66.i.i.i.i)
  %tobool67.not.i.i.i.i = icmp eq i32 %and66.i.i.i.i, 0
  br i1 %tobool67.not.i.i.i.i, label %if.then76.i.i.i.i, label %land.lhs.true.i.i.i.i.if.end78.i.i.i.i_crit_edge, !prof !218

land.lhs.true.i.i.i.i.if.end78.i.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end78.i.i.i.i

if.then76.i.i.i.i:                                ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @mark_page_accessed(ptr noundef nonnull %retval.1.i387396.i.i.i.i) #15
  br label %if.end78.i.i.i.i

if.end78.i.i.i.i:                                 ; preds = %if.then76.i.i.i.i, %land.lhs.true.i.i.i.i.if.end78.i.i.i.i_crit_edge, %cond.true56.i.i.i.i.if.end78.i.i.i.i_crit_edge, %PageAnon.exit.i.i.i.i.if.end78.i.i.i.i_crit_edge
  %force_flush.3.i.i.i.i = phi i32 [ %force_flush.1.i.i.i.i, %PageAnon.exit.i.i.i.i.if.end78.i.i.i.i_crit_edge ], [ %force_flush.2.i.i.i.i, %if.then76.i.i.i.i ], [ %force_flush.2.i.i.i.i, %land.lhs.true.i.i.i.i.if.end78.i.i.i.i_crit_edge ], [ %force_flush.2.i.i.i.i, %cond.true56.i.i.i.i.if.end78.i.i.i.i_crit_edge ]
  %80 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %70, align 4
  %and.i2.i.i.i.i.i.i = and i32 %81, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i.i = icmp eq i32 %and.i2.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i, !prof !218

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end78.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i.i.i.i = add i32 %81, -1
  br label %PageAnon.exit.i.i.i.i.i

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end78.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %82 = ptrtoint ptr %retval.1.i387396.i.i.i.i to i32
  br label %PageAnon.exit.i.i.i.i.i

PageAnon.exit.i.i.i.i.i:                          ; preds = %if.end.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i
  %retval.0.i.i.i.i.i.i.i = phi i32 [ %sub.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i ], [ %82, %if.end.i.i.i.i.i.i.i ]
  %83 = inttoptr i32 %retval.0.i.i.i.i.i.i.i to ptr
  %mapping.i.i.i.i.i.i.i = getelementptr inbounds %struct.anon.101, ptr %83, i32 0, i32 2
  %84 = ptrtoint ptr %mapping.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %mapping.i.i.i.i.i.i.i, align 4
  %86 = ptrtoint ptr %85 to i32
  %and.i.i.i.i.i.i.i = and i32 %86, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %cmp.i.i.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.not.i.i.i.i.i, label %if.end.i307.i.i.i.i, label %PageAnon.exit.i.i.i.i.i.mm_counter.exit.i.i.i.i_crit_edge

PageAnon.exit.i.i.i.i.i.mm_counter.exit.i.i.i.i_crit_edge: ; preds = %PageAnon.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %mm_counter.exit.i.i.i.i

if.end.i307.i.i.i.i:                              ; preds = %PageAnon.exit.i.i.i.i.i
  %87 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %70, align 4
  %and.i.i.i.i.i.i.i.i = and i32 %88, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i, !prof !218

if.then.i.i.i.i.i.i.i.i:                          ; preds = %if.end.i307.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i.i.i.i.i = add i32 %88, -1
  br label %_compound_head.exit.i.i.i.i.i.i.i

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.end.i307.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %89 = ptrtoint ptr %retval.1.i387396.i.i.i.i to i32
  br label %_compound_head.exit.i.i.i.i.i.i.i

_compound_head.exit.i.i.i.i.i.i.i:                ; preds = %if.end.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i.i
  %retval.0.i.i.i.i.i.i.i.i = phi i32 [ %sub.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i.i ], [ %89, %if.end.i.i.i.i.i.i.i.i ]
  %90 = inttoptr i32 %retval.0.i.i.i.i.i.i.i.i to ptr
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %90, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %92)
  %cmp.i.not.i.i.i.i.i.i.i = icmp eq i32 %92, -1
  %93 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %70, align 4
  %and.i16.i.i.i.i.i.i.i = and i32 %94, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i.i.i.i.i.i)
  %tobool.not.i17.i.i.i.i.i.i.i = icmp eq i32 %and.i16.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.not.i.i.i.i.i.i.i, label %if.then.i.i3.i.i.i.i.i, label %do.end10.i.i.i.i.i.i.i, !prof !230

if.then.i.i3.i.i.i.i.i:                           ; preds = %_compound_head.exit.i.i.i.i.i.i.i
  br i1 %tobool.not.i17.i.i.i.i.i.i.i, label %if.end.i20.i.i.i.i.i.i.i, label %if.then.i19.i.i.i.i.i.i.i, !prof !218

if.then.i19.i.i.i.i.i.i.i:                        ; preds = %if.then.i.i3.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i.i.i.i.i.i = add i32 %94, -1
  br label %_compound_head.exit22.i.i.i.i.i.i.i

if.end.i20.i.i.i.i.i.i.i:                         ; preds = %if.then.i.i3.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %95 = ptrtoint ptr %retval.1.i387396.i.i.i.i to i32
  br label %_compound_head.exit22.i.i.i.i.i.i.i

_compound_head.exit22.i.i.i.i.i.i.i:              ; preds = %if.end.i20.i.i.i.i.i.i.i, %if.then.i19.i.i.i.i.i.i.i
  %retval.0.i21.i.i.i.i.i.i.i = phi i32 [ %sub.i18.i.i.i.i.i.i.i, %if.then.i19.i.i.i.i.i.i.i ], [ %95, %if.end.i20.i.i.i.i.i.i.i ]
  %96 = inttoptr i32 %retval.0.i21.i.i.i.i.i.i.i to ptr
  call void @dump_page(ptr noundef %96, ptr noundef nonnull @.str.32) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #15, !srcloc !248
  unreachable

do.end10.i.i.i.i.i.i.i:                           ; preds = %_compound_head.exit.i.i.i.i.i.i.i
  br i1 %tobool.not.i17.i.i.i.i.i.i.i, label %if.end.i27.i.i.i.i.i.i.i, label %if.then.i26.i.i.i.i.i.i.i, !prof !218

if.then.i26.i.i.i.i.i.i.i:                        ; preds = %do.end10.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i.i.i.i.i.i = add i32 %94, -1
  br label %mm_counter_file.exit.i.i.i.i.i

if.end.i27.i.i.i.i.i.i.i:                         ; preds = %do.end10.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %97 = ptrtoint ptr %retval.1.i387396.i.i.i.i to i32
  br label %mm_counter_file.exit.i.i.i.i.i

mm_counter_file.exit.i.i.i.i.i:                   ; preds = %if.end.i27.i.i.i.i.i.i.i, %if.then.i26.i.i.i.i.i.i.i
  %retval.0.i28.i.i.i.i.i.i.i = phi i32 [ %sub.i25.i.i.i.i.i.i.i, %if.then.i26.i.i.i.i.i.i.i ], [ %97, %if.end.i27.i.i.i.i.i.i.i ]
  %98 = inttoptr i32 %retval.0.i28.i.i.i.i.i.i.i to ptr
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %98, align 4
  %101 = and i32 %100, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %101)
  %tobool.not.i.i308.i.i.i.i = icmp eq i32 %101, 0
  %..i.i.i.i.i.i = select i1 %tobool.not.i.i308.i.i.i.i, i32 0, i32 3
  br label %mm_counter.exit.i.i.i.i

mm_counter.exit.i.i.i.i:                          ; preds = %mm_counter_file.exit.i.i.i.i.i, %PageAnon.exit.i.i.i.i.i.mm_counter.exit.i.i.i.i_crit_edge
  %retval.0.i309.i.i.i.i = phi i32 [ %..i.i.i.i.i.i, %mm_counter_file.exit.i.i.i.i.i ], [ 1, %PageAnon.exit.i.i.i.i.i.mm_counter.exit.i.i.i.i_crit_edge ]
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr %rss.i.i.i.i, i32 0, i32 %retval.0.i309.i.i.i.i
  %102 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %dec.i.i.i.i = add i32 %103, -1
  store i32 %dec.i.i.i.i, ptr %arrayidx.i.i.i.i, align 4
  call void @page_remove_rmap(ptr noundef nonnull %retval.1.i387396.i.i.i.i, i1 noundef zeroext false) #15
  %104 = ptrtoint ptr %retval.1.i387396.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load volatile i32, ptr %retval.1.i387396.i.i.i.i, align 4
  %106 = and i32 %105, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %106)
  %tobool.not.i.i310.i.i.i.i = icmp eq i32 %106, 0
  br i1 %tobool.not.i.i310.i.i.i.i, label %PageCompound.exit.i.i.i.i.i, label %mm_counter.exit.i.i.i.i.if.then.i313.i.i.i.i_crit_edge

mm_counter.exit.i.i.i.i.if.then.i313.i.i.i.i_crit_edge: ; preds = %mm_counter.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i313.i.i.i.i

PageCompound.exit.i.i.i.i.i:                      ; preds = %mm_counter.exit.i.i.i.i
  %107 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %70, align 4
  %and.i.i.i311.i.i.i.i = and i32 %108, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i311.i.i.i.i)
  %tobool.not.i312.i.i.i.i = icmp eq i32 %and.i.i.i311.i.i.i.i, 0
  br i1 %tobool.not.i312.i.i.i.i, label %if.end.i315.i.i.i.i, label %PageCompound.exit.i.i.i.i.i.if.then.i313.i.i.i.i_crit_edge, !prof !218

PageCompound.exit.i.i.i.i.i.if.then.i313.i.i.i.i_crit_edge: ; preds = %PageCompound.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i313.i.i.i.i

if.then.i313.i.i.i.i:                             ; preds = %PageCompound.exit.i.i.i.i.i.if.then.i313.i.i.i.i_crit_edge, %mm_counter.exit.i.i.i.i.if.then.i313.i.i.i.i_crit_edge
  %call3.i.i.i.i.i = call i32 @__page_mapcount(ptr noundef %retval.1.i387396.i.i.i.i) #15
  br label %page_mapcount.exit.i.i.i.i

if.end.i315.i.i.i.i:                              ; preds = %PageCompound.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %109 = getelementptr inbounds %struct.page, ptr %retval.1.i387396.i.i.i.i, i32 0, i32 2
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %109, i32 noundef 4) #15
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %109, align 4
  %add.i314.i.i.i.i = add i32 %111, 1
  br label %page_mapcount.exit.i.i.i.i

page_mapcount.exit.i.i.i.i:                       ; preds = %if.end.i315.i.i.i.i, %if.then.i313.i.i.i.i
  %retval.0.i316.i.i.i.i = phi i32 [ %call3.i.i.i.i.i, %if.then.i313.i.i.i.i ], [ %add.i314.i.i.i.i, %if.end.i315.i.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i316.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %retval.0.i316.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then87.i.i.i.i, label %page_mapcount.exit.i.i.i.i.if.end88.i.i.i.i_crit_edge, !prof !230

page_mapcount.exit.i.i.i.i.if.end88.i.i.i.i_crit_edge: ; preds = %page_mapcount.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end88.i.i.i.i

if.then87.i.i.i.i:                                ; preds = %page_mapcount.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @print_bad_pte(ptr noundef %vma, i32 noundef %addr.addr.1.i.i.i.i, i32 noundef %57, ptr noundef nonnull %retval.1.i387396.i.i.i.i) #15
  br label %if.end88.i.i.i.i

if.end88.i.i.i.i:                                 ; preds = %if.then87.i.i.i.i, %page_mapcount.exit.i.i.i.i.if.end88.i.i.i.i_crit_edge
  %call.i317.i.i.i.i = call zeroext i1 @__tlb_remove_page_size(ptr noundef %tlb, ptr noundef %retval.1.i387396.i.i.i.i, i32 noundef 4096) #15
  br i1 %call.i317.i.i.i.i, label %do.end179.thread.i.i.i.i, label %if.end88.i.i.i.i.do.cond176.i.i.i.i_crit_edge, !prof !230

if.end88.i.i.i.i.do.cond176.i.i.i.i_crit_edge:    ; preds = %if.end88.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond176.i.i.i.i

do.end179.thread.i.i.i.i:                         ; preds = %if.end88.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @add_mm_rss_vec(ptr noundef %18, ptr noundef nonnull %rss.i.i.i.i) #15
  br label %if.then185.i.i.i.i

if.end98.i.i.i.i:                                 ; preds = %cond.true.i.i.i.i
  %shr3.i.i.i.i.i = lshr i32 %38, 7
  %112 = shl i32 %38, 24
  %shl.i.i.i.i.i.i = and i32 %112, 2080374784
  %or.i.i.i.i.i.i = or i32 %shl.i.i.i.i.i.i, %shr3.i.i.i.i.i
  %.fca.0.insert.i.i.i.i = insertvalue [1 x i32] poison, i32 %or.i.i.i.i.i.i, 0
  br i1 %tobool14.not.i.i.i, label %if.end139.i.i.i.i, label %if.end98.i.i.i.i.do.cond176.i.i.i.i_crit_edge, !prof !218

if.end98.i.i.i.i.do.cond176.i.i.i.i_crit_edge:    ; preds = %if.end98.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond176.i.i.i.i

if.end139.i.i.i.i:                                ; preds = %if.end98.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2013265920, i32 %or.i.i.i.i.i.i)
  %cmp.i318.i.i.i.i = icmp ult i32 %or.i.i.i.i.i.i, 2013265920
  br i1 %cmp.i318.i.i.i.i, label %if.end139.i.i.i.i.if.end157.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i

if.end139.i.i.i.i.if.end157.sink.split.i.i.i.i_crit_edge: ; preds = %if.end139.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end157.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end139.i.i.i.i
  %113 = and i32 %38, 120
  call void @__sanitizer_cov_trace_const_cmp4(i32 120, i32 %113)
  %114 = icmp eq i32 %113, 120
  br i1 %114, label %if.then149.i.i.i.i, label %if.else.i.i.i.i.if.end157.i.i.i.i_crit_edge

if.else.i.i.i.i.if.end157.i.i.i.i_crit_edge:      ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end157.i.i.i.i

if.then149.i.i.i.i:                               ; preds = %if.else.i.i.i.i
  %115 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %116 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i319.i.i.i.i = sub i32 %shr3.i.i.i.i.i, %116
  %add.ptr.i320.i.i.i.i = getelementptr %struct.page, ptr %115, i32 %sub.i319.i.i.i.i
  %117 = getelementptr %struct.page, ptr %115, i32 %sub.i319.i.i.i.i, i32 1
  %118 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load volatile i32, ptr %117, align 4
  %and.i.i.i321.i.i.i.i = and i32 %119, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i321.i.i.i.i)
  %tobool.not.i.i.i322.i.i.i.i = icmp eq i32 %and.i.i.i321.i.i.i.i, 0
  br i1 %tobool.not.i.i.i322.i.i.i.i, label %if.end.i.i.i326.i.i.i.i, label %if.then.i.i.i325.i.i.i.i, !prof !218

if.then.i.i.i325.i.i.i.i:                         ; preds = %if.then149.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i324.i.i.i.i = add i32 %119, -1
  br label %_compound_head.exit.i.i.i.i.i.i

if.end.i.i.i326.i.i.i.i:                          ; preds = %if.then149.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %120 = ptrtoint ptr %add.ptr.i320.i.i.i.i to i32
  br label %_compound_head.exit.i.i.i.i.i.i

_compound_head.exit.i.i.i.i.i.i:                  ; preds = %if.end.i.i.i326.i.i.i.i, %if.then.i.i.i325.i.i.i.i
  %retval.0.i.i.i327.i.i.i.i = phi i32 [ %sub.i.i.i324.i.i.i.i, %if.then.i.i.i325.i.i.i.i ], [ %120, %if.end.i.i.i326.i.i.i.i ]
  %121 = inttoptr i32 %retval.0.i.i.i327.i.i.i.i to ptr
  %122 = ptrtoint ptr %121 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile i32, ptr %121, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %123)
  %cmp.i.not.i.i.i.i.i.i = icmp eq i32 %123, -1
  %124 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile i32, ptr %117, align 4
  %and.i16.i.i.i.i.i.i = and i32 %125, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i.i.i.i.i)
  %tobool.not.i17.i.i.i.i.i.i = icmp eq i32 %and.i16.i.i.i.i.i.i, 0
  br i1 %cmp.i.not.i.i.i.i.i.i, label %if.then.i.i328.i.i.i.i, label %do.end10.i.i.i.i.i.i, !prof !230

if.then.i.i328.i.i.i.i:                           ; preds = %_compound_head.exit.i.i.i.i.i.i
  br i1 %tobool.not.i17.i.i.i.i.i.i, label %if.end.i20.i.i.i.i.i.i, label %if.then.i19.i.i.i.i.i.i, !prof !218

if.then.i19.i.i.i.i.i.i:                          ; preds = %if.then.i.i328.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i.i.i.i.i = add i32 %125, -1
  br label %_compound_head.exit22.i.i.i.i.i.i

if.end.i20.i.i.i.i.i.i:                           ; preds = %if.then.i.i328.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %126 = ptrtoint ptr %add.ptr.i320.i.i.i.i to i32
  br label %_compound_head.exit22.i.i.i.i.i.i

_compound_head.exit22.i.i.i.i.i.i:                ; preds = %if.end.i20.i.i.i.i.i.i, %if.then.i19.i.i.i.i.i.i
  %retval.0.i21.i.i.i.i.i.i = phi i32 [ %sub.i18.i.i.i.i.i.i, %if.then.i19.i.i.i.i.i.i ], [ %126, %if.end.i20.i.i.i.i.i.i ]
  %127 = inttoptr i32 %retval.0.i21.i.i.i.i.i.i to ptr
  call void @dump_page(ptr noundef %127, ptr noundef nonnull @.str.32) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #15, !srcloc !249
  unreachable

do.end10.i.i.i.i.i.i:                             ; preds = %_compound_head.exit.i.i.i.i.i.i
  br i1 %tobool.not.i17.i.i.i.i.i.i, label %if.end.i27.i.i.i.i.i.i, label %if.then.i26.i.i.i.i.i.i, !prof !218

if.then.i26.i.i.i.i.i.i:                          ; preds = %do.end10.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i.i.i.i.i = add i32 %125, -1
  br label %PageLocked.exit.i.i.i.i.i

if.end.i27.i.i.i.i.i.i:                           ; preds = %do.end10.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %128 = ptrtoint ptr %add.ptr.i320.i.i.i.i to i32
  br label %PageLocked.exit.i.i.i.i.i

PageLocked.exit.i.i.i.i.i:                        ; preds = %if.end.i27.i.i.i.i.i.i, %if.then.i26.i.i.i.i.i.i
  %retval.0.i28.i.i.i.i.i.i = phi i32 [ %sub.i25.i.i.i.i.i.i, %if.then.i26.i.i.i.i.i.i ], [ %128, %if.end.i27.i.i.i.i.i.i ]
  %129 = inttoptr i32 %retval.0.i28.i.i.i.i.i.i to ptr
  %130 = ptrtoint ptr %129 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %129, align 4
  %and1.i.i.i.i.i.i.i = and i32 %131, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i.i)
  %tobool7.not.i.i.i.i.i = icmp eq i32 %and1.i.i.i.i.i.i.i, 0
  br i1 %tobool7.not.i.i.i.i.i, label %do.body11.i.i.i.i.i, label %pfn_swap_entry_to_page.exit.i.i.i.i, !prof !230

do.body11.i.i.i.i.i:                              ; preds = %PageLocked.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/swapops.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 258, 0\0A.popsection", ""() #15, !srcloc !250
  unreachable

pfn_swap_entry_to_page.exit.i.i.i.i:              ; preds = %PageLocked.exit.i.i.i.i.i
  %132 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load volatile i32, ptr %117, align 4
  %and.i2.i.i329.i.i.i.i = and i32 %133, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i.i329.i.i.i.i)
  %tobool.not.i.i.i330.i.i.i.i = icmp eq i32 %and.i2.i.i329.i.i.i.i, 0
  br i1 %tobool.not.i.i.i330.i.i.i.i, label %if.end.i.i.i333.i.i.i.i, label %if.then.i.i.i332.i.i.i.i, !prof !218

if.then.i.i.i332.i.i.i.i:                         ; preds = %pfn_swap_entry_to_page.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i331.i.i.i.i = add i32 %133, -1
  br label %PageAnon.exit.i338.i.i.i.i

if.end.i.i.i333.i.i.i.i:                          ; preds = %pfn_swap_entry_to_page.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %134 = ptrtoint ptr %add.ptr.i320.i.i.i.i to i32
  br label %PageAnon.exit.i338.i.i.i.i

PageAnon.exit.i338.i.i.i.i:                       ; preds = %if.end.i.i.i333.i.i.i.i, %if.then.i.i.i332.i.i.i.i
  %retval.0.i.i.i334.i.i.i.i = phi i32 [ %sub.i.i.i331.i.i.i.i, %if.then.i.i.i332.i.i.i.i ], [ %134, %if.end.i.i.i333.i.i.i.i ]
  %135 = inttoptr i32 %retval.0.i.i.i334.i.i.i.i to ptr
  %mapping.i.i.i335.i.i.i.i = getelementptr inbounds %struct.anon.101, ptr %135, i32 0, i32 2
  %136 = ptrtoint ptr %mapping.i.i.i335.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %mapping.i.i.i335.i.i.i.i, align 4
  %138 = ptrtoint ptr %137 to i32
  %and.i.i.i336.i.i.i.i = and i32 %138, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i336.i.i.i.i)
  %cmp.i.i.not.i337.i.i.i.i = icmp eq i32 %and.i.i.i336.i.i.i.i, 0
  br i1 %cmp.i.i.not.i337.i.i.i.i, label %if.end.i341.i.i.i.i, label %PageAnon.exit.i338.i.i.i.i.mm_counter.exit365.i.i.i.i_crit_edge

PageAnon.exit.i338.i.i.i.i.mm_counter.exit365.i.i.i.i_crit_edge: ; preds = %PageAnon.exit.i338.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %mm_counter.exit365.i.i.i.i

if.end.i341.i.i.i.i:                              ; preds = %PageAnon.exit.i338.i.i.i.i
  %139 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load volatile i32, ptr %117, align 4
  %and.i.i.i.i339.i.i.i.i = and i32 %140, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i339.i.i.i.i)
  %tobool.not.i.i.i.i340.i.i.i.i = icmp eq i32 %and.i.i.i.i339.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i340.i.i.i.i, label %if.end.i.i.i.i344.i.i.i.i, label %if.then.i.i.i.i343.i.i.i.i, !prof !218

if.then.i.i.i.i343.i.i.i.i:                       ; preds = %if.end.i341.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i342.i.i.i.i = add i32 %140, -1
  br label %_compound_head.exit.i.i.i349.i.i.i.i

if.end.i.i.i.i344.i.i.i.i:                        ; preds = %if.end.i341.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %141 = ptrtoint ptr %add.ptr.i320.i.i.i.i to i32
  br label %_compound_head.exit.i.i.i349.i.i.i.i

_compound_head.exit.i.i.i349.i.i.i.i:             ; preds = %if.end.i.i.i.i344.i.i.i.i, %if.then.i.i.i.i343.i.i.i.i
  %retval.0.i.i.i.i345.i.i.i.i = phi i32 [ %sub.i.i.i.i342.i.i.i.i, %if.then.i.i.i.i343.i.i.i.i ], [ %141, %if.end.i.i.i.i344.i.i.i.i ]
  %142 = inttoptr i32 %retval.0.i.i.i.i345.i.i.i.i to ptr
  %143 = ptrtoint ptr %142 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load volatile i32, ptr %142, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %144)
  %cmp.i.not.i.i.i346.i.i.i.i = icmp eq i32 %144, -1
  %145 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load volatile i32, ptr %117, align 4
  %and.i16.i.i.i347.i.i.i.i = and i32 %146, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i.i347.i.i.i.i)
  %tobool.not.i17.i.i.i348.i.i.i.i = icmp eq i32 %and.i16.i.i.i347.i.i.i.i, 0
  br i1 %cmp.i.not.i.i.i346.i.i.i.i, label %if.then.i.i3.i350.i.i.i.i, label %do.end10.i.i.i356.i.i.i.i, !prof !230

if.then.i.i3.i350.i.i.i.i:                        ; preds = %_compound_head.exit.i.i.i349.i.i.i.i
  br i1 %tobool.not.i17.i.i.i348.i.i.i.i, label %if.end.i20.i.i.i353.i.i.i.i, label %if.then.i19.i.i.i352.i.i.i.i, !prof !218

if.then.i19.i.i.i352.i.i.i.i:                     ; preds = %if.then.i.i3.i350.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i.i351.i.i.i.i = add i32 %146, -1
  br label %_compound_head.exit22.i.i.i355.i.i.i.i

if.end.i20.i.i.i353.i.i.i.i:                      ; preds = %if.then.i.i3.i350.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %147 = ptrtoint ptr %add.ptr.i320.i.i.i.i to i32
  br label %_compound_head.exit22.i.i.i355.i.i.i.i

_compound_head.exit22.i.i.i355.i.i.i.i:           ; preds = %if.end.i20.i.i.i353.i.i.i.i, %if.then.i19.i.i.i352.i.i.i.i
  %retval.0.i21.i.i.i354.i.i.i.i = phi i32 [ %sub.i18.i.i.i351.i.i.i.i, %if.then.i19.i.i.i352.i.i.i.i ], [ %147, %if.end.i20.i.i.i353.i.i.i.i ]
  %148 = inttoptr i32 %retval.0.i21.i.i.i354.i.i.i.i to ptr
  call void @dump_page(ptr noundef %148, ptr noundef nonnull @.str.32) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #15, !srcloc !248
  unreachable

do.end10.i.i.i356.i.i.i.i:                        ; preds = %_compound_head.exit.i.i.i349.i.i.i.i
  br i1 %tobool.not.i17.i.i.i348.i.i.i.i, label %if.end.i27.i.i.i359.i.i.i.i, label %if.then.i26.i.i.i358.i.i.i.i, !prof !218

if.then.i26.i.i.i358.i.i.i.i:                     ; preds = %do.end10.i.i.i356.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i.i357.i.i.i.i = add i32 %146, -1
  br label %mm_counter_file.exit.i363.i.i.i.i

if.end.i27.i.i.i359.i.i.i.i:                      ; preds = %do.end10.i.i.i356.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %149 = ptrtoint ptr %add.ptr.i320.i.i.i.i to i32
  br label %mm_counter_file.exit.i363.i.i.i.i

mm_counter_file.exit.i363.i.i.i.i:                ; preds = %if.end.i27.i.i.i359.i.i.i.i, %if.then.i26.i.i.i358.i.i.i.i
  %retval.0.i28.i.i.i360.i.i.i.i = phi i32 [ %sub.i25.i.i.i357.i.i.i.i, %if.then.i26.i.i.i358.i.i.i.i ], [ %149, %if.end.i27.i.i.i359.i.i.i.i ]
  %150 = inttoptr i32 %retval.0.i28.i.i.i360.i.i.i.i to ptr
  %151 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %150, align 4
  %153 = and i32 %152, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %153)
  %tobool.not.i.i361.i.i.i.i = icmp eq i32 %153, 0
  %..i.i362.i.i.i.i = select i1 %tobool.not.i.i361.i.i.i.i, i32 0, i32 3
  br label %mm_counter.exit365.i.i.i.i

mm_counter.exit365.i.i.i.i:                       ; preds = %mm_counter_file.exit.i363.i.i.i.i, %PageAnon.exit.i338.i.i.i.i.mm_counter.exit365.i.i.i.i_crit_edge
  %retval.0.i364.i.i.i.i = phi i32 [ %..i.i362.i.i.i.i, %mm_counter_file.exit.i363.i.i.i.i ], [ 1, %PageAnon.exit.i338.i.i.i.i.mm_counter.exit365.i.i.i.i_crit_edge ]
  %arrayidx154.i.i.i.i = getelementptr [4 x i32], ptr %rss.i.i.i.i, i32 0, i32 %retval.0.i364.i.i.i.i
  br label %if.end157.sink.split.i.i.i.i

if.end157.sink.split.i.i.i.i:                     ; preds = %mm_counter.exit365.i.i.i.i, %if.end139.i.i.i.i.if.end157.sink.split.i.i.i.i_crit_edge
  %arrayidx154.sink436.i.i.i.i = phi ptr [ %arrayidx154.i.i.i.i, %mm_counter.exit365.i.i.i.i ], [ %14, %if.end139.i.i.i.i.if.end157.sink.split.i.i.i.i_crit_edge ]
  %154 = ptrtoint ptr %arrayidx154.sink436.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %arrayidx154.sink436.i.i.i.i, align 4
  %dec155.i.i.i.i = add i32 %155, -1
  store i32 %dec155.i.i.i.i, ptr %arrayidx154.sink436.i.i.i.i, align 4
  br label %if.end157.i.i.i.i

if.end157.i.i.i.i:                                ; preds = %if.end157.sink.split.i.i.i.i, %if.else.i.i.i.i.if.end157.i.i.i.i_crit_edge
  %call159.i.i.i.i = call i32 @free_swap_and_cache([1 x i32] %.fca.0.insert.i.i.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call159.i.i.i.i)
  %tobool160.not.i.i.i.i = icmp eq i32 %call159.i.i.i.i, 0
  br i1 %tobool160.not.i.i.i.i, label %if.then169.i.i.i.i, label %if.end157.i.i.i.i.if.end170.i.i.i.i_crit_edge, !prof !230

if.end157.i.i.i.i.if.end170.i.i.i.i_crit_edge:    ; preds = %if.end157.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end170.i.i.i.i

if.then169.i.i.i.i:                               ; preds = %if.end157.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @print_bad_pte(ptr noundef %vma, i32 noundef %addr.addr.1.i.i.i.i, i32 noundef %38, ptr noundef null) #15
  br label %if.end170.i.i.i.i

if.end170.i.i.i.i:                                ; preds = %if.then169.i.i.i.i, %if.end157.i.i.i.i.if.end170.i.i.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cpu_vtable to i32))
  %156 = load ptr, ptr @cpu_vtable, align 4
  %set_pte_ext.i.i.i.i.i = getelementptr inbounds %struct.processor, ptr %156, i32 0, i32 9
  %157 = ptrtoint ptr %set_pte_ext.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %set_pte_ext.i.i.i.i.i, align 4
  call void %158(ptr noundef %pte.0.i.i.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %do.cond176.i.i.i.i

do.cond176.i.i.i.i:                               ; preds = %if.end170.i.i.i.i, %if.end98.i.i.i.i.do.cond176.i.i.i.i_crit_edge, %if.end88.i.i.i.i.do.cond176.i.i.i.i_crit_edge, %if.end22.i.i.i.i.do.cond176.i.i.i.i_crit_edge, %zap_skip_check_mapping.exit.i.i.i.i.do.cond176.i.i.i.i_crit_edge, %do.body6.i.i.i.i.do.cond176.i.i.i.i_crit_edge
  %force_flush.5.ph.i.i.i.i = phi i32 [ %force_flush.1.i.i.i.i, %if.end98.i.i.i.i.do.cond176.i.i.i.i_crit_edge ], [ %force_flush.3.i.i.i.i, %if.end88.i.i.i.i.do.cond176.i.i.i.i_crit_edge ], [ %force_flush.1.i.i.i.i, %if.end22.i.i.i.i.do.cond176.i.i.i.i_crit_edge ], [ %force_flush.1.i.i.i.i, %zap_skip_check_mapping.exit.i.i.i.i.do.cond176.i.i.i.i_crit_edge ], [ %force_flush.1.i.i.i.i, %do.body6.i.i.i.i.do.cond176.i.i.i.i_crit_edge ], [ %force_flush.1.i.i.i.i, %if.end170.i.i.i.i ]
  %incdec.ptr.i.i.i.i = getelementptr i32, ptr %pte.0.i.i.i.i, i32 1
  %add177.i.i.i.i = add i32 %addr.addr.1.i.i.i.i, 4096
  %cmp178.not.i.i.i.i = icmp eq i32 %add177.i.i.i.i, %and.end
  br i1 %cmp178.not.i.i.i.i, label %do.cond176.i.i.i.i.do.end179.i.i.i.i_crit_edge, label %do.cond176.i.i.i.i.do.body6.i.i.i.i_crit_edge

do.cond176.i.i.i.i.do.body6.i.i.i.i_crit_edge:    ; preds = %do.cond176.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body6.i.i.i.i

do.cond176.i.i.i.i.do.end179.i.i.i.i_crit_edge:   ; preds = %do.cond176.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end179.i.i.i.i

do.end179.i.i.i.i:                                ; preds = %do.cond176.i.i.i.i.do.end179.i.i.i.i_crit_edge, %if.end.i.i.i.i.do.end179.i.i.i.i_crit_edge
  %force_flush.5403.i.i.i.i = phi i32 [ %force_flush.5.ph.i.i.i.i, %do.cond176.i.i.i.i.do.end179.i.i.i.i_crit_edge ], [ %force_flush.1.i.i.i.i, %if.end.i.i.i.i.do.end179.i.i.i.i_crit_edge ]
  %addr.addr.4.i.i.i.i = phi i32 [ %and.end, %do.cond176.i.i.i.i.do.end179.i.i.i.i_crit_edge ], [ %addr.addr.1.i.i.i.i, %if.end.i.i.i.i.do.end179.i.i.i.i_crit_edge ]
  call fastcc void @add_mm_rss_vec(ptr noundef %18, ptr noundef nonnull %rss.i.i.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %force_flush.5403.i.i.i.i)
  %tobool184.not.i.i.i.i = icmp eq i32 %force_flush.5403.i.i.i.i, 0
  br i1 %tobool184.not.i.i.i.i, label %if.end198.critedge.i.i.i.i, label %do.end179.i.i.i.i.if.then185.i.i.i.i_crit_edge

do.end179.i.i.i.i.if.then185.i.i.i.i_crit_edge:   ; preds = %do.end179.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then185.i.i.i.i

if.then185.i.i.i.i:                               ; preds = %do.end179.i.i.i.i.if.then185.i.i.i.i_crit_edge, %do.end179.thread.i.i.i.i
  %addr.addr.4425.i.i.i.i = phi i32 [ %add.i.i.i.i.i.i, %do.end179.thread.i.i.i.i ], [ %addr.addr.4.i.i.i.i, %do.end179.i.i.i.i.if.then185.i.i.i.i_crit_edge ]
  %159 = ptrtoint ptr %fullmm.i to i32
  call void @__asan_load2_noabort(i32 %159)
  %bf.load.i366.i.i.i.i = load i16, ptr %fullmm.i, align 4
  %160 = and i16 %bf.load.i366.i.i.i.i, 15872
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %160)
  %161 = icmp eq i16 %160, 0
  br i1 %161, label %if.then185.i.i.i.i.tlb_flush_mmu_tlbonly.exit.i.i.i.i_crit_edge, label %if.end.i367.i.i.i.i

if.then185.i.i.i.i.tlb_flush_mmu_tlbonly.exit.i.i.i.i_crit_edge: ; preds = %if.then185.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %tlb_flush_mmu_tlbonly.exit.i.i.i.i

if.end.i367.i.i.i.i:                              ; preds = %if.then185.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %bf.load.i366.i.i.i.i)
  %162 = icmp ult i16 %bf.load.i366.i.i.i.i, 16384
  br i1 %162, label %if.else.i.i.i.i.i.i, label %if.then.i.i368.i.i.i.i

if.then.i.i368.i.i.i.i:                           ; preds = %if.end.i367.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %163 = ptrtoint ptr %tlb to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %tlb, align 4
  call void @flush_tlb_mm(ptr noundef %164) #15
  br label %tlb_flush.exit.i.i.i.i.i

if.else.i.i.i.i.i.i:                              ; preds = %if.end.i367.i.i.i.i
  %165 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %end.i.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %166)
  %tobool5.not.i.i.i.i.i.i = icmp eq i32 %166, 0
  br i1 %tobool5.not.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.tlb_flush.exit.i.i.i.i.i_crit_edge, label %if.then6.i.i.i.i.i.i

if.else.i.i.i.i.i.i.tlb_flush.exit.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %tlb_flush.exit.i.i.i.i.i

if.then6.i.i.i.i.i.i:                             ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %vma.i.i.i.i.i.i) #15
  %167 = call ptr @memset(ptr %vma.i.i.i.i.i.i, i32 0, i32 96)
  %168 = ptrtoint ptr %tlb to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %tlb, align 4
  %170 = ptrtoint ptr %vm_mm.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %170)
  store ptr %169, ptr %vm_mm.i.i.i.i.i.i, align 4
  %171 = lshr i16 %bf.load.i366.i.i.i.i, 6
  %172 = and i16 %171, 4
  %173 = zext i16 %172 to i32
  %174 = and i16 %bf.load.i366.i.i.i.i, 128
  %175 = zext i16 %174 to i32
  %176 = shl nuw nsw i32 %175, 15
  %or.i.i370.i.i.i.i = or i32 %176, %173
  %177 = ptrtoint ptr %vm_flags.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 %or.i.i370.i.i.i.i, ptr %vm_flags.i.i.i.i.i.i, align 4
  %178 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %start.i.i.i.i.i.i, align 4
  call void @flush_tlb_range(ptr noundef nonnull %vma.i.i.i.i.i.i, i32 noundef %179, i32 noundef %166) #15
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %vma.i.i.i.i.i.i) #15
  br label %tlb_flush.exit.i.i.i.i.i

tlb_flush.exit.i.i.i.i.i:                         ; preds = %if.then6.i.i.i.i.i.i, %if.else.i.i.i.i.i.i.tlb_flush.exit.i.i.i.i.i_crit_edge, %if.then.i.i368.i.i.i.i
  %180 = ptrtoint ptr %tlb to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %tlb, align 4
  %notifier_subscriptions.i.i.i.i.i.i.i = getelementptr inbounds %struct.anon.9, ptr %181, i32 0, i32 49
  %182 = ptrtoint ptr %notifier_subscriptions.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %notifier_subscriptions.i.i.i.i.i.i.i, align 8
  %tobool.i.not.i.i.i.i.i.i = icmp eq ptr %183, null
  br i1 %tobool.i.not.i.i.i.i.i.i, label %tlb_flush.exit.i.i.i.i.i.mmu_notifier_invalidate_range.exit.i.i.i.i.i_crit_edge, label %if.then.i36.i.i.i.i.i

tlb_flush.exit.i.i.i.i.i.mmu_notifier_invalidate_range.exit.i.i.i.i.i_crit_edge: ; preds = %tlb_flush.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %mmu_notifier_invalidate_range.exit.i.i.i.i.i

if.then.i36.i.i.i.i.i:                            ; preds = %tlb_flush.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %184 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %end.i.i.i.i.i.i, align 4
  %186 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %start.i.i.i.i.i.i, align 4
  call void @__mmu_notifier_invalidate_range(ptr noundef %181, i32 noundef %187, i32 noundef %185) #15
  br label %mmu_notifier_invalidate_range.exit.i.i.i.i.i

mmu_notifier_invalidate_range.exit.i.i.i.i.i:     ; preds = %if.then.i36.i.i.i.i.i, %tlb_flush.exit.i.i.i.i.i.mmu_notifier_invalidate_range.exit.i.i.i.i.i_crit_edge
  %188 = ptrtoint ptr %fullmm.i to i32
  call void @__asan_load2_noabort(i32 %188)
  %bf.load.i38.i.i.i.i.i = load i16, ptr %fullmm.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i38.i.i.i.i.i)
  %tobool.not.i.i372.i.i.i.i = icmp sgt i16 %bf.load.i38.i.i.i.i.i, -1
  %spec.select.i.i.i.i.i.i = select i1 %tobool.not.i.i372.i.i.i.i, i32 -1226833920, i32 -1
  %not.tobool.not.i.i.i.i.i.i = xor i1 %tobool.not.i.i372.i.i.i.i, true
  %spec.select26.i.i.i.i.i.i = sext i1 %not.tobool.not.i.i.i.i.i.i to i32
  %189 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store i32 %spec.select.i.i.i.i.i.i, ptr %start.i.i.i.i.i.i, align 4
  %190 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 %spec.select26.i.i.i.i.i.i, ptr %end.i.i.i.i.i.i, align 4
  %bf.clear14.i.i.i.i.i.i = and i16 %bf.load.i38.i.i.i.i.i, -15873
  %191 = ptrtoint ptr %fullmm.i to i32
  call void @__asan_store2_noabort(i32 %191)
  store i16 %bf.clear14.i.i.i.i.i.i, ptr %fullmm.i, align 4
  br label %tlb_flush_mmu_tlbonly.exit.i.i.i.i

tlb_flush_mmu_tlbonly.exit.i.i.i.i:               ; preds = %mmu_notifier_invalidate_range.exit.i.i.i.i.i, %if.then185.i.i.i.i.tlb_flush_mmu_tlbonly.exit.i.i.i.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %25) #15
  call void @kunmap_local_indexed(ptr noundef %add.ptr5.i.i.i.i) #15
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %192 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i.i.i = and i32 %192, -16384
  %193 = inttoptr i32 %and.i.i.i1.i.i.i.i.i to ptr
  %task.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %193, i32 0, i32 2
  %194 = ptrtoint ptr %task.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %task.i.i.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %195, i32 0, i32 213
  %196 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %pagefault_disabled.i.i.i.i.i.i.i, align 8
  %dec.i.i.i.i.i.i.i = add i32 %197, -1
  store i32 %dec.i.i.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %198 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i373.i.i.i.i = and i32 %198, -16384
  %199 = inttoptr i32 %and.i.i.i.i373.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %199, i32 0, i32 1
  %200 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  %sub.i.i374.i.i.i.i = add i32 %201, -1
  store volatile i32 %sub.i.i374.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  call void @tlb_flush_mmu(ptr noundef %tlb) #15
  br label %if.end198.i.i.i.i

if.end198.critedge.i.i.i.i:                       ; preds = %do.end179.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @_raw_spin_unlock(ptr noundef %25) #15
  call void @kunmap_local_indexed(ptr noundef %add.ptr5.i.i.i.i) #15
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %202 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i375.i.i.i.i = and i32 %202, -16384
  %203 = inttoptr i32 %and.i.i.i1.i375.i.i.i.i to ptr
  %task.i.i.i376.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %203, i32 0, i32 2
  %204 = ptrtoint ptr %task.i.i.i376.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %task.i.i.i376.i.i.i.i, align 8
  %pagefault_disabled.i.i.i377.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %205, i32 0, i32 213
  %206 = ptrtoint ptr %pagefault_disabled.i.i.i377.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %pagefault_disabled.i.i.i377.i.i.i.i, align 8
  %dec.i.i.i378.i.i.i.i = add i32 %207, -1
  store i32 %dec.i.i.i378.i.i.i.i, ptr %pagefault_disabled.i.i.i377.i.i.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %208 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i379.i.i.i.i = and i32 %208, -16384
  %209 = inttoptr i32 %and.i.i.i.i379.i.i.i.i to ptr
  %preempt_count.i.i.i380.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %209, i32 0, i32 1
  %210 = ptrtoint ptr %preempt_count.i.i.i380.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load volatile i32, ptr %preempt_count.i.i.i380.i.i.i.i, align 4
  %sub.i.i381.i.i.i.i = add i32 %211, -1
  store volatile i32 %sub.i.i381.i.i.i.i, ptr %preempt_count.i.i.i380.i.i.i.i, align 4
  br label %if.end198.i.i.i.i

if.end198.i.i.i.i:                                ; preds = %if.end198.critedge.i.i.i.i, %tlb_flush_mmu_tlbonly.exit.i.i.i.i
  %addr.addr.4424.i.i.i.i = phi i32 [ %addr.addr.4.i.i.i.i, %if.end198.critedge.i.i.i.i ], [ %addr.addr.4425.i.i.i.i, %tlb_flush_mmu_tlbonly.exit.i.i.i.i ]
  %cmp199.not.i.i.i.i = icmp eq i32 %addr.addr.4424.i.i.i.i, %and.end
  br i1 %cmp199.not.i.i.i.i, label %zap_pte_range.exit.i.i.i, label %if.then200.i.i.i.i

if.then200.i.i.i.i:                               ; preds = %if.end198.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 1445, i32 noundef 0) #15
  %call.i382.i.i.i.i = call i32 @__cond_resched() #15
  br label %again.i.i.i.i

zap_pte_range.exit.i.i.i:                         ; preds = %if.end198.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %rss.i.i.i.i) #15
  br label %zap_p4d_range.exit

zap_p4d_range.exit:                               ; preds = %zap_pte_range.exit.i.i.i, %if.then6.i.i.i.i, %do.body9.zap_p4d_range.exit_crit_edge
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 1492, i32 noundef 0) #15
  %call.i.i.i.i = call i32 @__cond_resched() #15
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 1521, i32 noundef 0) #15
  %call.i.i.i = call i32 @__cond_resched() #15
  %incdec.ptr = getelementptr [2 x i32], ptr %pgd.0, i32 1
  %cmp18.not = icmp eq i32 %and.end, %end
  br i1 %cmp18.not, label %do.end19, label %zap_p4d_range.exit.do.body9_crit_edge

zap_p4d_range.exit.do.body9_crit_edge:            ; preds = %zap_p4d_range.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body9

do.end19:                                         ; preds = %zap_p4d_range.exit
  %212 = ptrtoint ptr %fullmm.i to i32
  call void @__asan_load2_noabort(i32 %212)
  %bf.load.i37 = load i16, ptr %fullmm.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.load.i37)
  %tobool.not.i38 = icmp slt i16 %bf.load.i37, 0
  %213 = and i16 %bf.load.i37, 15872
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %213)
  %214 = icmp eq i16 %213, 0
  %or.cond.i = or i1 %tobool.not.i38, %214
  br i1 %or.cond.i, label %do.end19.tlb_end_vma.exit_crit_edge, label %if.end.i.i

do.end19.tlb_end_vma.exit_crit_edge:              ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #17
  br label %tlb_end_vma.exit

if.end.i.i:                                       ; preds = %do.end19
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %bf.load.i37)
  %215 = icmp ult i16 %bf.load.i37, 16384
  br i1 %215, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %216 = ptrtoint ptr %tlb to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %tlb, align 4
  call void @flush_tlb_mm(ptr noundef %217) #15
  br label %tlb_flush.exit.i.i

if.else.i.i.i:                                    ; preds = %if.end.i.i
  %218 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %end.i.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %219)
  %tobool5.not.i.i.i = icmp eq i32 %219, 0
  br i1 %tobool5.not.i.i.i, label %if.else.i.i.i.tlb_flush.exit.i.i_crit_edge, label %if.then6.i.i.i

if.else.i.i.i.tlb_flush.exit.i.i_crit_edge:       ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %tlb_flush.exit.i.i

if.then6.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %vma.i.i.i) #15
  %220 = call ptr @memset(ptr %vma.i.i.i, i32 0, i32 96)
  %vm_mm.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.i.i.i, i32 0, i32 6
  %221 = ptrtoint ptr %tlb to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %tlb, align 4
  %223 = ptrtoint ptr %vm_mm.i.i.i to i32
  call void @__asan_store4_noabort(i32 %223)
  store ptr %222, ptr %vm_mm.i.i.i, align 4
  %vm_flags.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.i.i.i, i32 0, i32 8
  %224 = lshr i16 %bf.load.i37, 6
  %225 = and i16 %224, 4
  %226 = zext i16 %225 to i32
  %227 = and i16 %bf.load.i37, 128
  %228 = zext i16 %227 to i32
  %229 = shl nuw nsw i32 %228, 15
  %or.i.i.i = or i32 %229, %226
  %230 = ptrtoint ptr %vm_flags.i.i.i to i32
  call void @__asan_store4_noabort(i32 %230)
  store i32 %or.i.i.i, ptr %vm_flags.i.i.i, align 4
  %231 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %start.i.i.i.i.i.i, align 4
  call void @flush_tlb_range(ptr noundef nonnull %vma.i.i.i, i32 noundef %232, i32 noundef %219) #15
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %vma.i.i.i) #15
  br label %tlb_flush.exit.i.i

tlb_flush.exit.i.i:                               ; preds = %if.then6.i.i.i, %if.else.i.i.i.tlb_flush.exit.i.i_crit_edge, %if.then.i.i.i
  %233 = ptrtoint ptr %tlb to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %tlb, align 4
  %notifier_subscriptions.i.i.i.i = getelementptr inbounds %struct.anon.9, ptr %234, i32 0, i32 49
  %235 = ptrtoint ptr %notifier_subscriptions.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load ptr, ptr %notifier_subscriptions.i.i.i.i, align 8
  %tobool.i.not.i.i.i = icmp eq ptr %236, null
  br i1 %tobool.i.not.i.i.i, label %tlb_flush.exit.i.i.mmu_notifier_invalidate_range.exit.i.i_crit_edge, label %if.then.i36.i.i

tlb_flush.exit.i.i.mmu_notifier_invalidate_range.exit.i.i_crit_edge: ; preds = %tlb_flush.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %mmu_notifier_invalidate_range.exit.i.i

if.then.i36.i.i:                                  ; preds = %tlb_flush.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %237 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %end.i.i.i.i.i.i, align 4
  %239 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %start.i.i.i.i.i.i, align 4
  call void @__mmu_notifier_invalidate_range(ptr noundef %234, i32 noundef %240, i32 noundef %238) #15
  br label %mmu_notifier_invalidate_range.exit.i.i

mmu_notifier_invalidate_range.exit.i.i:           ; preds = %if.then.i36.i.i, %tlb_flush.exit.i.i.mmu_notifier_invalidate_range.exit.i.i_crit_edge
  %241 = ptrtoint ptr %fullmm.i to i32
  call void @__asan_load2_noabort(i32 %241)
  %bf.load.i38.i.i = load i16, ptr %fullmm.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i38.i.i)
  %tobool.not.i.i.i = icmp sgt i16 %bf.load.i38.i.i, -1
  %spec.select.i.i.i = select i1 %tobool.not.i.i.i, i32 -1226833920, i32 -1
  %not.tobool.not.i.i.i = xor i1 %tobool.not.i.i.i, true
  %spec.select26.i.i.i = sext i1 %not.tobool.not.i.i.i to i32
  %242 = ptrtoint ptr %start.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %242)
  store i32 %spec.select.i.i.i, ptr %start.i.i.i.i.i.i, align 4
  %243 = ptrtoint ptr %end.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %243)
  store i32 %spec.select26.i.i.i, ptr %end.i.i.i.i.i.i, align 4
  %bf.clear14.i.i.i = and i16 %bf.load.i38.i.i, -15873
  %244 = ptrtoint ptr %fullmm.i to i32
  call void @__asan_store2_noabort(i32 %244)
  store i16 %bf.clear14.i.i.i, ptr %fullmm.i, align 4
  br label %tlb_end_vma.exit

tlb_end_vma.exit:                                 ; preds = %mmu_notifier_invalidate_range.exit.i.i, %do.end19.tlb_end_vma.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unmap_vmas(ptr noundef %tlb, ptr noundef %vma, i32 noundef %start_addr, i32 noundef %end_addr) local_unnamed_addr #2 align 64 {
entry:
  %range = alloca %struct.mmu_notifier_range, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %range) #15
  %0 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 1
  %1 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 2
  %2 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 3
  %3 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 4
  %4 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 5
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %5 = getelementptr inbounds i8, ptr %range, i32 24
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %5, align 4
  %7 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vm_mm, align 4
  %9 = ptrtoint ptr %range to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %vma, ptr %range, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %4, align 4
  %11 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %0, align 4
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %start_addr, ptr %1, align 4
  %13 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %end_addr, ptr %2, align 4
  %14 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %3, align 4
  call fastcc void @mmu_notifier_invalidate_range_start(ptr noundef nonnull %range)
  %tobool.not10 = icmp eq ptr %vma, null
  br i1 %tobool.not10, label %entry.for.end_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

land.rhs:                                         ; preds = %unmap_single_vma.exit.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %vma.addr.011 = phi ptr [ %24, %unmap_single_vma.exit.land.rhs_crit_edge ], [ %vma, %entry.land.rhs_crit_edge ]
  %15 = ptrtoint ptr %vma.addr.011 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vma.addr.011, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %end_addr)
  %cmp = icmp ult i32 %16, %end_addr
  br i1 %cmp, label %for.body, label %land.rhs.for.end_crit_edge

land.rhs.for.end_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %land.rhs
  %17 = call i32 @llvm.umax.i32(i32 %16, i32 %start_addr) #15
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.addr.011, i32 0, i32 1
  %18 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %vm_end.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp1.not.i = icmp ult i32 %17, %19
  br i1 %cmp1.not.i, label %if.end.i, label %for.body.unmap_single_vma.exit_crit_edge

for.body.unmap_single_vma.exit_crit_edge:         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_single_vma.exit

if.end.i:                                         ; preds = %for.body
  %20 = call i32 @llvm.umin.i32(i32 %19, i32 %end_addr) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %16)
  %cmp10.not.i = icmp ugt i32 %20, %16
  br i1 %cmp10.not.i, label %if.end12.i, label %if.end.i.unmap_single_vma.exit_crit_edge

if.end.i.unmap_single_vma.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_single_vma.exit

if.end12.i:                                       ; preds = %if.end.i
  %vm_file.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.addr.011, i32 0, i32 14
  %21 = ptrtoint ptr %vm_file.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vm_file.i, align 4
  %tobool.not.i = icmp eq ptr %22, null
  br i1 %tobool.not.i, label %if.end12.i.if.end19.i_crit_edge, label %if.then13.i

if.end12.i.if.end19.i_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19.i

if.then13.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @uprobe_munmap(ptr noundef nonnull %vma.addr.011, i32 noundef %17, i32 noundef %20) #15
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then13.i, %if.end12.i.if.end19.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %20)
  %cmp20.not.i = icmp eq i32 %17, %20
  br i1 %cmp20.not.i, label %if.end19.i.unmap_single_vma.exit_crit_edge, label %if.then21.i

if.end19.i.unmap_single_vma.exit_crit_edge:       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_single_vma.exit

if.then21.i:                                      ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @unmap_page_range(ptr noundef %tlb, ptr noundef nonnull %vma.addr.011, i32 noundef %17, i32 noundef %20, ptr noundef null) #15
  br label %unmap_single_vma.exit

unmap_single_vma.exit:                            ; preds = %if.then21.i, %if.end19.i.unmap_single_vma.exit_crit_edge, %if.end.i.unmap_single_vma.exit_crit_edge, %for.body.unmap_single_vma.exit_crit_edge
  %vm_next = getelementptr inbounds %struct.vm_area_struct, ptr %vma.addr.011, i32 0, i32 2
  %23 = ptrtoint ptr %vm_next to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %vm_next, align 4
  %tobool.not = icmp eq ptr %24, null
  br i1 %tobool.not, label %unmap_single_vma.exit.for.end_crit_edge, label %unmap_single_vma.exit.land.rhs_crit_edge

unmap_single_vma.exit.land.rhs_crit_edge:         ; preds = %unmap_single_vma.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs

unmap_single_vma.exit.for.end_crit_edge:          ; preds = %unmap_single_vma.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %unmap_single_vma.exit.for.end_crit_edge, %land.rhs.for.end_crit_edge, %entry.for.end_crit_edge
  %25 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %3, align 4
  %and.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %for.end.if.end.i9_crit_edge, label %do.body.i

for.end.if.end.i9_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i9

do.body.i:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  call void @__might_sleep(ptr noundef nonnull @.str.24, i32 noundef 482) #15
  br label %if.end.i9

if.end.i9:                                        ; preds = %do.body.i, %for.end.if.end.i9_crit_edge
  %27 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %0, align 4
  %notifier_subscriptions.i.i = getelementptr inbounds %struct.anon.9, ptr %28, i32 0, i32 49
  %29 = ptrtoint ptr %notifier_subscriptions.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %notifier_subscriptions.i.i, align 8
  %tobool.i8.not.i = icmp eq ptr %30, null
  br i1 %tobool.i8.not.i, label %if.end.i9.mmu_notifier_invalidate_range_end.exit_crit_edge, label %if.then4.i

if.end.i9.mmu_notifier_invalidate_range_end.exit_crit_edge: ; preds = %if.end.i9
  call void @__sanitizer_cov_trace_pc() #17
  br label %mmu_notifier_invalidate_range_end.exit

if.then4.i:                                       ; preds = %if.end.i9
  call void @__sanitizer_cov_trace_pc() #17
  call void @__mmu_notifier_invalidate_range_end(ptr noundef nonnull %range, i1 noundef zeroext false) #15
  br label %mmu_notifier_invalidate_range_end.exit

mmu_notifier_invalidate_range_end.exit:           ; preds = %if.then4.i, %if.end.i9.mmu_notifier_invalidate_range_end.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %range) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @zap_page_range(ptr noundef %vma, i32 noundef %start, i32 noundef %size) local_unnamed_addr #2 align 64 {
entry:
  %range = alloca %struct.mmu_notifier_range, align 4
  %tlb = alloca %struct.mmu_gather, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %range) #15
  %0 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 1
  %1 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 2
  %2 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 3
  %3 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 4
  %4 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 5
  %5 = getelementptr inbounds i8, ptr %range, i32 24
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 68, ptr nonnull %tlb) #15
  %7 = call ptr @memset(ptr %tlb, i32 255, i32 68)
  tail call void @lru_add_drain() #15
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %8 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vm_mm, align 4
  %add = add i32 %size, %start
  %10 = ptrtoint ptr %range to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %vma, ptr %range, align 4
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %4, align 4
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %0, align 4
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %start, ptr %1, align 4
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %add, ptr %2, align 4
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %3, align 4
  call void @tlb_gather_mmu(ptr noundef nonnull %tlb, ptr noundef %9) #15
  %16 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vm_mm, align 4
  %rss_stat.i.i.i = getelementptr inbounds %struct.anon.9, ptr %17, i32 0, i32 40
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %rss_stat.i.i.i, i32 noundef 4) #15
  %18 = ptrtoint ptr %rss_stat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %rss_stat.i.i.i, align 4
  %20 = call i32 @llvm.smax.i32(i32 %19, i32 0) #15
  %arrayidx.i.i.i = getelementptr %struct.anon.9, ptr %17, i32 0, i32 40, i32 0, i32 1
  %call.i.i.i7.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i.i, i32 noundef 4) #15
  %21 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %23 = call i32 @llvm.smax.i32(i32 %22, i32 0) #15
  %add.i.i = add nuw i32 %23, %20
  %arrayidx.i9.i.i = getelementptr %struct.anon.9, ptr %17, i32 0, i32 40, i32 0, i32 3
  %call.i.i.i10.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i9.i.i, i32 noundef 4) #15
  %24 = ptrtoint ptr %arrayidx.i9.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %arrayidx.i9.i.i, align 4
  %26 = call i32 @llvm.smax.i32(i32 %25, i32 0) #15
  %add3.i.i = add i32 %add.i.i, %26
  %hiwater_rss.i = getelementptr inbounds %struct.anon.9, ptr %17, i32 0, i32 17
  %27 = ptrtoint ptr %hiwater_rss.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %hiwater_rss.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %add3.i.i)
  %cmp.i = icmp ult i32 %28, %add3.i.i
  br i1 %cmp.i, label %if.then.i, label %entry.update_hiwater_rss.exit_crit_edge

entry.update_hiwater_rss.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %update_hiwater_rss.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %29 = ptrtoint ptr %hiwater_rss.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %add3.i.i, ptr %hiwater_rss.i, align 8
  br label %update_hiwater_rss.exit

update_hiwater_rss.exit:                          ; preds = %if.then.i, %entry.update_hiwater_rss.exit_crit_edge
  call fastcc void @mmu_notifier_invalidate_range_start(ptr noundef nonnull %range)
  %tobool.not14 = icmp eq ptr %vma, null
  br i1 %tobool.not14, label %update_hiwater_rss.exit.for.end_crit_edge, label %update_hiwater_rss.exit.land.rhs_crit_edge

update_hiwater_rss.exit.land.rhs_crit_edge:       ; preds = %update_hiwater_rss.exit
  br label %land.rhs

update_hiwater_rss.exit.for.end_crit_edge:        ; preds = %update_hiwater_rss.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

land.rhs:                                         ; preds = %unmap_single_vma.exit.land.rhs_crit_edge, %update_hiwater_rss.exit.land.rhs_crit_edge
  %vma.addr.015 = phi ptr [ %41, %unmap_single_vma.exit.land.rhs_crit_edge ], [ %vma, %update_hiwater_rss.exit.land.rhs_crit_edge ]
  %30 = ptrtoint ptr %vma.addr.015 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vma.addr.015, align 4
  %32 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %33)
  %cmp = icmp ult i32 %31, %33
  br i1 %cmp, label %for.body, label %land.rhs.for.end_crit_edge

land.rhs.for.end_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %land.rhs
  %34 = call i32 @llvm.umax.i32(i32 %31, i32 %start) #15
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.addr.015, i32 0, i32 1
  %35 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %vm_end.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %36)
  %cmp1.not.i = icmp ult i32 %34, %36
  br i1 %cmp1.not.i, label %if.end.i, label %for.body.unmap_single_vma.exit_crit_edge

for.body.unmap_single_vma.exit_crit_edge:         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_single_vma.exit

if.end.i:                                         ; preds = %for.body
  %37 = call i32 @llvm.umin.i32(i32 %36, i32 %33) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %31)
  %cmp10.not.i = icmp ugt i32 %37, %31
  br i1 %cmp10.not.i, label %if.end12.i, label %if.end.i.unmap_single_vma.exit_crit_edge

if.end.i.unmap_single_vma.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_single_vma.exit

if.end12.i:                                       ; preds = %if.end.i
  %vm_file.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.addr.015, i32 0, i32 14
  %38 = ptrtoint ptr %vm_file.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %vm_file.i, align 4
  %tobool.not.i = icmp eq ptr %39, null
  br i1 %tobool.not.i, label %if.end12.i.if.end19.i_crit_edge, label %if.then13.i

if.end12.i.if.end19.i_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19.i

if.then13.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @uprobe_munmap(ptr noundef nonnull %vma.addr.015, i32 noundef %34, i32 noundef %37) #15
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then13.i, %if.end12.i.if.end19.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %37)
  %cmp20.not.i = icmp eq i32 %34, %37
  br i1 %cmp20.not.i, label %if.end19.i.unmap_single_vma.exit_crit_edge, label %if.then21.i

if.end19.i.unmap_single_vma.exit_crit_edge:       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_single_vma.exit

if.then21.i:                                      ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @unmap_page_range(ptr noundef nonnull %tlb, ptr noundef nonnull %vma.addr.015, i32 noundef %34, i32 noundef %37, ptr noundef null) #15
  br label %unmap_single_vma.exit

unmap_single_vma.exit:                            ; preds = %if.then21.i, %if.end19.i.unmap_single_vma.exit_crit_edge, %if.end.i.unmap_single_vma.exit_crit_edge, %for.body.unmap_single_vma.exit_crit_edge
  %vm_next = getelementptr inbounds %struct.vm_area_struct, ptr %vma.addr.015, i32 0, i32 2
  %40 = ptrtoint ptr %vm_next to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %vm_next, align 4
  %tobool.not = icmp eq ptr %41, null
  br i1 %tobool.not, label %unmap_single_vma.exit.for.end_crit_edge, label %unmap_single_vma.exit.land.rhs_crit_edge

unmap_single_vma.exit.land.rhs_crit_edge:         ; preds = %unmap_single_vma.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs

unmap_single_vma.exit.for.end_crit_edge:          ; preds = %unmap_single_vma.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %unmap_single_vma.exit.for.end_crit_edge, %land.rhs.for.end_crit_edge, %update_hiwater_rss.exit.for.end_crit_edge
  %42 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %3, align 4
  %and.i.i = and i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %for.end.if.end.i13_crit_edge, label %do.body.i

for.end.if.end.i13_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i13

do.body.i:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  call void @__might_sleep(ptr noundef nonnull @.str.24, i32 noundef 482) #15
  br label %if.end.i13

if.end.i13:                                       ; preds = %do.body.i, %for.end.if.end.i13_crit_edge
  %44 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %0, align 4
  %notifier_subscriptions.i.i = getelementptr inbounds %struct.anon.9, ptr %45, i32 0, i32 49
  %46 = ptrtoint ptr %notifier_subscriptions.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %notifier_subscriptions.i.i, align 8
  %tobool.i8.not.i = icmp eq ptr %47, null
  br i1 %tobool.i8.not.i, label %if.end.i13.mmu_notifier_invalidate_range_end.exit_crit_edge, label %if.then4.i

if.end.i13.mmu_notifier_invalidate_range_end.exit_crit_edge: ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #17
  br label %mmu_notifier_invalidate_range_end.exit

if.then4.i:                                       ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #17
  call void @__mmu_notifier_invalidate_range_end(ptr noundef nonnull %range, i1 noundef zeroext false) #15
  br label %mmu_notifier_invalidate_range_end.exit

mmu_notifier_invalidate_range_end.exit:           ; preds = %if.then4.i, %if.end.i13.mmu_notifier_invalidate_range_end.exit_crit_edge
  call void @tlb_finish_mmu(ptr noundef nonnull %tlb) #15
  call void @llvm.lifetime.end.p0(i64 68, ptr nonnull %tlb) #15
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %range) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_add_drain() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @tlb_gather_mmu(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @tlb_finish_mmu(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @zap_vma_ptes(ptr noundef %vma, i32 noundef %address, i32 noundef %size) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %address)
  %cmp = icmp ugt i32 %1, %address
  br i1 %cmp, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %add = add i32 %size, %address
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %2 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_end, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %3)
  %cmp1 = icmp ugt i32 %add, %3
  br i1 %cmp1, label %lor.lhs.false.return_crit_edge, label %lor.lhs.false2

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %4 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vm_flags, align 4
  %and = and i32 %5, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false2.return_crit_edge, label %if.end

lor.lhs.false2.return_crit_edge:                  ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @zap_page_range_single(ptr noundef %vma, i32 noundef %address, i32 noundef %size, ptr noundef null)
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false2.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @zap_page_range_single(ptr noundef %vma, i32 noundef %address, i32 noundef %size, ptr noundef %details) unnamed_addr #2 align 64 {
entry:
  %range = alloca %struct.mmu_notifier_range, align 4
  %tlb = alloca %struct.mmu_gather, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %range) #15
  %0 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 1
  %1 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 2
  %2 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 3
  %3 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 4
  %4 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 5
  %5 = getelementptr inbounds i8, ptr %range, i32 24
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 68, ptr nonnull %tlb) #15
  %7 = call ptr @memset(ptr %tlb, i32 255, i32 68)
  tail call void @lru_add_drain() #15
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %8 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vm_mm, align 4
  %add = add i32 %size, %address
  %10 = ptrtoint ptr %range to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %vma, ptr %range, align 4
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %4, align 4
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %0, align 4
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %address, ptr %1, align 4
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %add, ptr %2, align 4
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %3, align 4
  call void @tlb_gather_mmu(ptr noundef nonnull %tlb, ptr noundef %9) #15
  %16 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vm_mm, align 4
  %rss_stat.i.i.i = getelementptr inbounds %struct.anon.9, ptr %17, i32 0, i32 40
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %rss_stat.i.i.i, i32 noundef 4) #15
  %18 = ptrtoint ptr %rss_stat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %rss_stat.i.i.i, align 4
  %20 = call i32 @llvm.smax.i32(i32 %19, i32 0) #15
  %arrayidx.i.i.i = getelementptr %struct.anon.9, ptr %17, i32 0, i32 40, i32 0, i32 1
  %call.i.i.i7.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i.i, i32 noundef 4) #15
  %21 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %23 = call i32 @llvm.smax.i32(i32 %22, i32 0) #15
  %add.i.i = add nuw i32 %23, %20
  %arrayidx.i9.i.i = getelementptr %struct.anon.9, ptr %17, i32 0, i32 40, i32 0, i32 3
  %call.i.i.i10.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i9.i.i, i32 noundef 4) #15
  %24 = ptrtoint ptr %arrayidx.i9.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %arrayidx.i9.i.i, align 4
  %26 = call i32 @llvm.smax.i32(i32 %25, i32 0) #15
  %add3.i.i = add i32 %add.i.i, %26
  %hiwater_rss.i = getelementptr inbounds %struct.anon.9, ptr %17, i32 0, i32 17
  %27 = ptrtoint ptr %hiwater_rss.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %hiwater_rss.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %add3.i.i)
  %cmp.i = icmp ult i32 %28, %add3.i.i
  br i1 %cmp.i, label %if.then.i, label %entry.update_hiwater_rss.exit_crit_edge

entry.update_hiwater_rss.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %update_hiwater_rss.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %29 = ptrtoint ptr %hiwater_rss.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %add3.i.i, ptr %hiwater_rss.i, align 8
  br label %update_hiwater_rss.exit

update_hiwater_rss.exit:                          ; preds = %if.then.i, %entry.update_hiwater_rss.exit_crit_edge
  call fastcc void @mmu_notifier_invalidate_range_start(ptr noundef nonnull %range)
  %30 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vma, align 4
  %32 = call i32 @llvm.umax.i32(i32 %31, i32 %address) #15
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %33 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %vm_end.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %34)
  %cmp1.not.i = icmp ult i32 %32, %34
  br i1 %cmp1.not.i, label %if.end.i, label %update_hiwater_rss.exit.unmap_single_vma.exit_crit_edge

update_hiwater_rss.exit.unmap_single_vma.exit_crit_edge: ; preds = %update_hiwater_rss.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_single_vma.exit

if.end.i:                                         ; preds = %update_hiwater_rss.exit
  %35 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %2, align 4
  %37 = call i32 @llvm.umin.i32(i32 %34, i32 %36) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %31)
  %cmp10.not.i = icmp ugt i32 %37, %31
  br i1 %cmp10.not.i, label %if.end12.i, label %if.end.i.unmap_single_vma.exit_crit_edge

if.end.i.unmap_single_vma.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_single_vma.exit

if.end12.i:                                       ; preds = %if.end.i
  %vm_file.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 14
  %38 = ptrtoint ptr %vm_file.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %vm_file.i, align 4
  %tobool.not.i = icmp eq ptr %39, null
  br i1 %tobool.not.i, label %if.end12.i.if.end19.i_crit_edge, label %if.then13.i

if.end12.i.if.end19.i_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19.i

if.then13.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @uprobe_munmap(ptr noundef %vma, i32 noundef %32, i32 noundef %37) #15
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then13.i, %if.end12.i.if.end19.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %37)
  %cmp20.not.i = icmp eq i32 %32, %37
  br i1 %cmp20.not.i, label %if.end19.i.unmap_single_vma.exit_crit_edge, label %if.then21.i

if.end19.i.unmap_single_vma.exit_crit_edge:       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_single_vma.exit

if.then21.i:                                      ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @unmap_page_range(ptr noundef nonnull %tlb, ptr noundef %vma, i32 noundef %32, i32 noundef %37, ptr noundef %details) #15
  br label %unmap_single_vma.exit

unmap_single_vma.exit:                            ; preds = %if.then21.i, %if.end19.i.unmap_single_vma.exit_crit_edge, %if.end.i.unmap_single_vma.exit_crit_edge, %update_hiwater_rss.exit.unmap_single_vma.exit_crit_edge
  %40 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %3, align 4
  %and.i.i = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %unmap_single_vma.exit.if.end.i9_crit_edge, label %do.body.i

unmap_single_vma.exit.if.end.i9_crit_edge:        ; preds = %unmap_single_vma.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i9

do.body.i:                                        ; preds = %unmap_single_vma.exit
  call void @__sanitizer_cov_trace_pc() #17
  call void @__might_sleep(ptr noundef nonnull @.str.24, i32 noundef 482) #15
  br label %if.end.i9

if.end.i9:                                        ; preds = %do.body.i, %unmap_single_vma.exit.if.end.i9_crit_edge
  %42 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %0, align 4
  %notifier_subscriptions.i.i = getelementptr inbounds %struct.anon.9, ptr %43, i32 0, i32 49
  %44 = ptrtoint ptr %notifier_subscriptions.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %notifier_subscriptions.i.i, align 8
  %tobool.i8.not.i = icmp eq ptr %45, null
  br i1 %tobool.i8.not.i, label %if.end.i9.mmu_notifier_invalidate_range_end.exit_crit_edge, label %if.then4.i

if.end.i9.mmu_notifier_invalidate_range_end.exit_crit_edge: ; preds = %if.end.i9
  call void @__sanitizer_cov_trace_pc() #17
  br label %mmu_notifier_invalidate_range_end.exit

if.then4.i:                                       ; preds = %if.end.i9
  call void @__sanitizer_cov_trace_pc() #17
  call void @__mmu_notifier_invalidate_range_end(ptr noundef nonnull %range, i1 noundef zeroext false) #15
  br label %mmu_notifier_invalidate_range_end.exit

mmu_notifier_invalidate_range_end.exit:           ; preds = %if.then4.i, %if.end.i9.mmu_notifier_invalidate_range_end.exit_crit_edge
  call void @tlb_finish_mmu(ptr noundef nonnull %tlb) #15
  call void @llvm.lifetime.end.p0(i64 68, ptr nonnull %tlb) #15
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %range) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__get_locked_pte(ptr noundef %mm, i32 noundef %addr, ptr nocapture noundef writeonly %ptl) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pgd1.i = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 8
  %0 = ptrtoint ptr %pgd1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pgd1.i, align 4
  %shr.i.i = lshr i32 %addr, 21
  %add.ptr.i.i = getelementptr [2 x i32], ptr %1, i32 %shr.i.i
  %tobool.not = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool1.not = icmp eq i32 %3, 0
  br i1 %tobool1.not, label %land.lhs.true, label %if.end.cond.false_crit_edge, !prof !230

if.end.cond.false_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %if.end
  %call5 = tail call i32 @__pte_alloc(ptr noundef %mm, ptr noundef nonnull %add.ptr.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.false:                                       ; preds = %land.lhs.true.cond.false_crit_edge, %if.end.cond.false_crit_edge
  %4 = load ptr, ptr @mem_map, align 4
  %5 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %add.ptr.i.i, align 4
  %shr.i = lshr i32 %6, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %7 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %shr.i, %7
  %ptl.i.i = getelementptr %struct.page, ptr %4, i32 %sub.i, i32 1, i32 0, i32 3
  %8 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ptl.i.i, align 4
  %add.ptr = getelementptr %struct.page, ptr %4, i32 %sub.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %10 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %10, 512
  %11 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %14, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %15 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 213
  %19 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %20, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr, i32 noundef %or.i) #15
  %shr.i19 = lshr i32 %addr, 12
  %and.i = and i32 %shr.i19, 511
  %add.ptr10 = getelementptr i32, ptr %call.i.i, i32 %and.i
  %21 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %9, ptr %ptl, align 4
  tail call void @_raw_spin_lock(ptr noundef %9) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.false, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ %add.ptr10, %cond.false ], [ null, %land.lhs.true.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @kmap_atomic(ptr noundef %page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %0 = load i32, ptr @pgprot_kernel, align 4
  %or = or i32 %0, 512
  %1 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %5 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 213
  %9 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %inc.i.i.i = add i32 %10, 1
  store i32 %inc.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i = tail call ptr @__kmap_local_page_prot(ptr noundef %page, i32 noundef %or) #15
  ret ptr %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vm_insert_pages(ptr nocapture noundef %vma, i32 noundef %addr, ptr nocapture noundef readonly %pages, ptr nocapture noundef %num) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %addr)
  %cmp = icmp ugt i32 %1, %addr
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %2 = ptrtoint ptr %num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num, align 4
  %mul = shl i32 %3, 12
  %add = add i32 %addr, -1
  %sub = add i32 %add, %mul
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %4 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vm_end, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %5)
  %cmp1.not = icmp ult i32 %sub, %5
  br i1 %cmp1.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %6 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vm_flags, align 4
  %and = and i32 %7, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body, label %if.end.if.end34_crit_edge

if.end.if.end34_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

do.body:                                          ; preds = %if.end
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %8 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vm_mm, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_start_locking, i32 0, i32 1), ptr blockaddress(@vm_insert_pages, %if.then.i.i)) #15
          to label %__mmap_lock_trace_start_locking.exit.i [label %if.then.i.i], !srcloc !217

if.then.i.i:                                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmap_lock_do_trace_start_locking(ptr noundef %9, i1 noundef zeroext false) #15
  br label %__mmap_lock_trace_start_locking.exit.i

__mmap_lock_trace_start_locking.exit.i:           ; preds = %if.then.i.i, %do.body
  %mmap_lock.i = getelementptr inbounds %struct.anon.9, ptr %9, i32 0, i32 15
  %call.i = tail call i32 @down_read_trylock(ptr noundef %mmap_lock.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp ne i32 %call.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_acquire_returned, i32 0, i32 1), ptr blockaddress(@vm_insert_pages, %if.then.i5.i)) #15
          to label %mmap_read_trylock.exit [label %if.then.i5.i], !srcloc !217

if.then.i5.i:                                     ; preds = %__mmap_lock_trace_start_locking.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmap_lock_do_trace_acquire_returned(ptr noundef %9, i1 noundef zeroext false, i1 noundef zeroext %cmp.i) #15
  br label %mmap_read_trylock.exit

mmap_read_trylock.exit:                           ; preds = %if.then.i5.i, %__mmap_lock_trace_start_locking.exit.i
  br i1 %cmp.i, label %do.body6, label %do.body13, !prof !230

do.body6:                                         ; preds = %mmap_read_trylock.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1893, 0\0A.popsection", ""() #15, !srcloc !253
  unreachable

do.body13:                                        ; preds = %mmap_read_trylock.exit
  %10 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vm_flags, align 4
  %and15 = and i32 %11, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %do.end32, label %do.body24, !prof !218

do.body24:                                        ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1894, 0\0A.popsection", ""() #15, !srcloc !254
  unreachable

do.end32:                                         ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #17
  %or = or i32 %11, 268435456
  %12 = ptrtoint ptr %vm_flags to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or, ptr %vm_flags, align 4
  br label %if.end34

if.end34:                                         ; preds = %do.end32, %if.end.if.end34_crit_edge
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %13 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vm_page_prot, align 4
  %vm_mm.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %15 = ptrtoint ptr %vm_mm.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %vm_mm.i, align 4
  %17 = ptrtoint ptr %num to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %num, align 4
  %pgd1.i.i = getelementptr inbounds %struct.anon.9, ptr %16, i32 0, i32 8
  br label %more.i

more.i:                                           ; preds = %while.end.i.more.i_crit_edge, %if.end34
  %curr_page_idx.0.i = phi i32 [ 0, %if.end34 ], [ %curr_page_idx.1.lcssa.i, %while.end.i.more.i_crit_edge ]
  %remaining_pages_total.0.i = phi i32 [ %18, %if.end34 ], [ %remaining_pages_total.1.lcssa.i, %while.end.i.more.i_crit_edge ]
  %addr.addr.0.i = phi i32 [ %addr, %if.end34 ], [ %addr.addr.1.lcssa.i, %while.end.i.more.i_crit_edge ]
  %19 = ptrtoint ptr %pgd1.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pgd1.i.i, align 4
  %shr.i.i.i = lshr i32 %addr.addr.0.i, 21
  %add.ptr.i.i.i = getelementptr [2 x i32], ptr %20, i32 %shr.i.i.i
  %tobool.not.i = icmp eq ptr %add.ptr.i.i.i, null
  br i1 %tobool.not.i, label %more.i.insert_pages.exit_crit_edge, label %if.end.i

more.i.insert_pages.exit_crit_edge:               ; preds = %more.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %insert_pages.exit

if.end.i:                                         ; preds = %more.i
  %shr.i.i = lshr i32 %addr.addr.0.i, 12
  %and.i.i = and i32 %shr.i.i, 511
  %sub.i = sub nuw nsw i32 512, %and.i.i
  %21 = tail call i32 @llvm.umin.i32(i32 %remaining_pages_total.0.i, i32 %sub.i) #15
  %22 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %add.ptr.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool2.not.i = icmp eq i32 %23, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i, label %if.end.i.if.end9.i_crit_edge, !prof !230

if.end.i.if.end9.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %call6.i = tail call i32 @__pte_alloc(ptr noundef %16, ptr noundef nonnull %add.ptr.i.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %land.lhs.true.i.if.end9.i_crit_edge, label %land.lhs.true.i.insert_pages.exit_crit_edge

land.lhs.true.i.insert_pages.exit_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %insert_pages.exit

land.lhs.true.i.if.end9.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i

if.end9.i:                                        ; preds = %land.lhs.true.i.if.end9.i_crit_edge, %if.end.i.if.end9.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool10.not159.i = icmp eq i32 %21, 0
  br i1 %tobool10.not159.i, label %if.end9.i.while.end.i_crit_edge, label %if.end9.i.while.body.i_crit_edge

if.end9.i.while.body.i_crit_edge:                 ; preds = %if.end9.i
  br label %while.body.i

if.end9.i.while.end.i_crit_edge:                  ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i

while.body.i:                                     ; preds = %cleanup53.i.while.body.i_crit_edge, %if.end9.i.while.body.i_crit_edge
  %addr.addr.1164.i = phi i32 [ %addr.addr.2.lcssa.i, %cleanup53.i.while.body.i_crit_edge ], [ %addr.addr.0.i, %if.end9.i.while.body.i_crit_edge ]
  %pages_to_write_in_pmd.0163.i = phi i32 [ %sub51.i, %cleanup53.i.while.body.i_crit_edge ], [ %21, %if.end9.i.while.body.i_crit_edge ]
  %remaining_pages_total.1161.i = phi i32 [ %sub52.i, %cleanup53.i.while.body.i_crit_edge ], [ %remaining_pages_total.0.i, %if.end9.i.while.body.i_crit_edge ]
  %curr_page_idx.1160.i = phi i32 [ %curr_page_idx.2.lcssa.i, %cleanup53.i.while.body.i_crit_edge ], [ %curr_page_idx.0.i, %if.end9.i.while.body.i_crit_edge ]
  %24 = tail call i32 @llvm.smin.i32(i32 %pages_to_write_in_pmd.0163.i, i32 8) #15
  %25 = load ptr, ptr @mem_map, align 4
  %26 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %add.ptr.i.i.i, align 4
  %shr.i104.i = lshr i32 %27, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %28 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i.i = sub i32 %shr.i104.i, %28
  %ptl.i.i.i = getelementptr %struct.page, ptr %25, i32 %sub.i.i, i32 1, i32 0, i32 3
  %29 = ptrtoint ptr %ptl.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ptl.i.i.i, align 4
  %add.ptr.i = getelementptr %struct.page, ptr %25, i32 %sub.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %31 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i = or i32 %31, 512
  %32 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %35, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %36 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i1.i.i.i to ptr
  %task.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %task.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 213
  %40 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %pagefault_disabled.i.i.i.i.i, align 8
  %inc.i.i.i.i.i = add i32 %41, 1
  store i32 %inc.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr.i, i32 noundef %or.i.i) #15
  %shr.i105.i = lshr i32 %addr.addr.1164.i, 12
  %and.i106.i = and i32 %shr.i105.i, 511
  %add.ptr21.i = getelementptr i32, ptr %call.i.i.i, i32 %and.i106.i
  tail call void @_raw_spin_lock(ptr noundef %30) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %pages_to_write_in_pmd.0163.i)
  %cmp23153.i = icmp sgt i32 %pages_to_write_in_pmd.0163.i, 0
  br i1 %cmp23153.i, label %for.body.preheader.i, label %while.body.i.cleanup53.i_crit_edge

while.body.i.cleanup53.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup53.i

for.body.preheader.i:                             ; preds = %while.body.i
  %smax.i = tail call i32 @llvm.smax.i32(i32 %24, i32 1) #15
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.preheader.i
  %addr.addr.2157.i = phi i32 [ %add.i, %for.inc.i.for.body.i_crit_edge ], [ %addr.addr.1164.i, %for.body.preheader.i ]
  %pte_idx.0156.i = phi i32 [ %inc41.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %pte.0155.i = phi ptr [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr21.i, %for.body.preheader.i ]
  %curr_page_idx.2154.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ %curr_page_idx.1160.i, %for.body.preheader.i ]
  %arrayidx.i = getelementptr ptr, ptr %pages, i32 %curr_page_idx.2154.i
  %42 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx.i, align 4
  %44 = getelementptr inbounds %struct.page, ptr %43, i32 0, i32 1
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %44, align 4
  %and.i.i.i.i = and i32 %46, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i, !prof !218

if.then.i.i.i.i:                                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i = add i32 %46, -1
  br label %page_count.exit.i.i

if.end.i.i.i.i:                                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  %47 = ptrtoint ptr %43 to i32
  br label %page_count.exit.i.i

page_count.exit.i.i:                              ; preds = %if.end.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i.i ], [ %47, %if.end.i.i.i.i ]
  %48 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %48, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %49 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool.not.i.i = icmp eq i32 %50, 0
  br i1 %tobool.not.i.i, label %page_count.exit.i.i.cleanup53.thread.i_crit_edge, label %if.end.i.i

page_count.exit.i.i.cleanup53.thread.i_crit_edge: ; preds = %page_count.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup53.thread.i

if.end.i.i:                                       ; preds = %page_count.exit.i.i
  %51 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %44, align 4
  %and.i2.i.i.i.i = and i32 %52, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i2.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.then.i.i.i.i.i, !prof !218

if.then.i.i.i.i.i:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i.i = add i32 %52, -1
  br label %PageAnon.exit.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %53 = ptrtoint ptr %43 to i32
  br label %PageAnon.exit.i.i.i

PageAnon.exit.i.i.i:                              ; preds = %if.end.i.i.i.i.i, %if.then.i.i.i.i.i
  %retval.0.i.i.i.i.i = phi i32 [ %sub.i.i.i.i.i, %if.then.i.i.i.i.i ], [ %53, %if.end.i.i.i.i.i ]
  %54 = inttoptr i32 %retval.0.i.i.i.i.i to ptr
  %mapping.i.i.i.i.i = getelementptr inbounds %struct.anon.101, ptr %54, i32 0, i32 2
  %55 = ptrtoint ptr %mapping.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %mapping.i.i.i.i.i, align 4
  %57 = ptrtoint ptr %56 to i32
  %and.i.i.i.i.i = and i32 %57, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %cmp.i.i.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %cmp.i.i.not.i.i.i, label %lor.lhs.false.i.i.i, label %PageAnon.exit.i.i.i.cleanup53.thread.i_crit_edge

PageAnon.exit.i.i.i.cleanup53.thread.i_crit_edge: ; preds = %PageAnon.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup53.thread.i

lor.lhs.false.i.i.i:                              ; preds = %PageAnon.exit.i.i.i
  %58 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %44, align 4
  %and.i.i8.i.i.i = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i8.i.i.i)
  %tobool.not.i.i9.i.i.i = icmp eq i32 %and.i.i8.i.i.i, 0
  br i1 %tobool.not.i.i9.i.i.i, label %if.end.i.i12.i.i.i, label %if.then.i.i11.i.i.i, !prof !218

if.then.i.i11.i.i.i:                              ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i10.i.i.i = add i32 %59, -1
  br label %_compound_head.exit.i.i.i.i

if.end.i.i12.i.i.i:                               ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %60 = ptrtoint ptr %43 to i32
  br label %_compound_head.exit.i.i.i.i

_compound_head.exit.i.i.i.i:                      ; preds = %if.end.i.i12.i.i.i, %if.then.i.i11.i.i.i
  %retval.0.i.i13.i.i.i = phi i32 [ %sub.i.i10.i.i.i, %if.then.i.i11.i.i.i ], [ %60, %if.end.i.i12.i.i.i ]
  %61 = inttoptr i32 %retval.0.i.i13.i.i.i to ptr
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %61, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %63)
  %cmp.i.not.i.i.i.i = icmp eq i32 %63, -1
  %64 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %44, align 4
  %and.i16.i.i.i.i = and i32 %65, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i.i.i)
  %tobool.not.i17.i.i.i.i = icmp eq i32 %and.i16.i.i.i.i, 0
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i9.i.i, label %do.end10.i.i.i.i, !prof !230

if.then.i.i9.i.i:                                 ; preds = %_compound_head.exit.i.i.i.i
  br i1 %tobool.not.i17.i.i.i.i, label %if.end.i20.i.i.i.i, label %if.then.i19.i.i.i.i, !prof !218

if.then.i19.i.i.i.i:                              ; preds = %if.then.i.i9.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i.i.i = add i32 %65, -1
  br label %_compound_head.exit22.i.i.i.i

if.end.i20.i.i.i.i:                               ; preds = %if.then.i.i9.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %66 = ptrtoint ptr %43 to i32
  br label %_compound_head.exit22.i.i.i.i

_compound_head.exit22.i.i.i.i:                    ; preds = %if.end.i20.i.i.i.i, %if.then.i19.i.i.i.i
  %retval.0.i21.i.i.i.i = phi i32 [ %sub.i18.i.i.i.i, %if.then.i19.i.i.i.i ], [ %66, %if.end.i20.i.i.i.i ]
  %67 = inttoptr i32 %retval.0.i21.i.i.i.i to ptr
  tail call void @dump_page(ptr noundef %67, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 428, 0\0A.popsection", ""() #15, !srcloc !255
  unreachable

do.end10.i.i.i.i:                                 ; preds = %_compound_head.exit.i.i.i.i
  br i1 %tobool.not.i17.i.i.i.i, label %if.end.i27.i.i.i.i, label %if.then.i26.i.i.i.i, !prof !218

if.then.i26.i.i.i.i:                              ; preds = %do.end10.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i.i.i = add i32 %65, -1
  br label %PageSlab.exit.i.i.i

if.end.i27.i.i.i.i:                               ; preds = %do.end10.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %68 = ptrtoint ptr %43 to i32
  br label %PageSlab.exit.i.i.i

PageSlab.exit.i.i.i:                              ; preds = %if.end.i27.i.i.i.i, %if.then.i26.i.i.i.i
  %retval.0.i28.i.i.i.i = phi i32 [ %sub.i25.i.i.i.i, %if.then.i26.i.i.i.i ], [ %68, %if.end.i27.i.i.i.i ]
  %69 = inttoptr i32 %retval.0.i28.i.i.i.i to ptr
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %69, align 4
  %72 = and i32 %71, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool.not.i.i.i = icmp eq i32 %72, 0
  br i1 %tobool.not.i.i.i, label %lor.lhs.false2.i.i.i, label %PageSlab.exit.i.i.i.cleanup53.thread.i_crit_edge

PageSlab.exit.i.i.i.cleanup53.thread.i_crit_edge: ; preds = %PageSlab.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup53.thread.i

lor.lhs.false2.i.i.i:                             ; preds = %PageSlab.exit.i.i.i
  %73 = getelementptr inbounds %struct.page, ptr %43, i32 0, i32 2
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %73, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -129, i32 %75)
  %cmp.i.i.i.i = icmp sgt i32 %75, -129
  br i1 %cmp.i.i.i.i, label %insert_page_in_batch_locked.exit.i, label %lor.lhs.false2.i.i.i.cleanup53.thread.i_crit_edge

lor.lhs.false2.i.i.i.cleanup53.thread.i_crit_edge: ; preds = %lor.lhs.false2.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup53.thread.i

insert_page_in_batch_locked.exit.i:               ; preds = %lor.lhs.false2.i.i.i
  tail call void @flush_dcache_page(ptr noundef %43) #15
  %call5.i.i = tail call fastcc i32 @insert_page_into_pte_locked(ptr noundef %16, ptr noundef %pte.0155.i, i32 noundef %addr.addr.2157.i, ptr noundef %43, i32 noundef %14) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool25.not.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool25.not.i, label %for.inc.i, label %insert_page_in_batch_locked.exit.i.cleanup53.thread.i_crit_edge, !prof !218

insert_page_in_batch_locked.exit.i.cleanup53.thread.i_crit_edge: ; preds = %insert_page_in_batch_locked.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup53.thread.i

cleanup53.thread.i:                               ; preds = %insert_page_in_batch_locked.exit.i.cleanup53.thread.i_crit_edge, %lor.lhs.false2.i.i.i.cleanup53.thread.i_crit_edge, %PageSlab.exit.i.i.i.cleanup53.thread.i_crit_edge, %PageAnon.exit.i.i.i.cleanup53.thread.i_crit_edge, %page_count.exit.i.i.cleanup53.thread.i_crit_edge
  %retval.0.i117.i = phi i32 [ %call5.i.i, %insert_page_in_batch_locked.exit.i.cleanup53.thread.i_crit_edge ], [ -22, %page_count.exit.i.i.cleanup53.thread.i_crit_edge ], [ -22, %lor.lhs.false2.i.i.i.cleanup53.thread.i_crit_edge ], [ -22, %PageSlab.exit.i.i.i.cleanup53.thread.i_crit_edge ], [ -22, %PageAnon.exit.i.i.i.cleanup53.thread.i_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %30) #15
  tail call void @kunmap_local_indexed(ptr noundef %add.ptr21.i) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %76 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %76, -16384
  %77 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 2
  %78 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %79, i32 0, i32 213
  %80 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %dec.i.i.i.i = add i32 %81, -1
  store i32 %dec.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %82 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i107.i = and i32 %82, -16384
  %83 = inttoptr i32 %and.i.i.i.i107.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %sub.i.i.i = add i32 %85, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  %sub39.i = sub i32 %remaining_pages_total.1161.i, %pte_idx.0156.i
  br label %insert_pages.exit

for.inc.i:                                        ; preds = %insert_page_in_batch_locked.exit.i
  %add.i = add i32 %addr.addr.2157.i, 4096
  %inc.i = add i32 %curr_page_idx.2154.i, 1
  %incdec.ptr.i = getelementptr i32, ptr %pte.0155.i, i32 1
  %inc41.i = add nuw nsw i32 %pte_idx.0156.i, 1
  %exitcond.not.i = icmp eq i32 %inc41.i, %smax.i
  br i1 %exitcond.not.i, label %for.inc.i.cleanup53.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.inc.i.cleanup53.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup53.i

cleanup53.i:                                      ; preds = %for.inc.i.cleanup53.i_crit_edge, %while.body.i.cleanup53.i_crit_edge
  %curr_page_idx.2.lcssa.i = phi i32 [ %curr_page_idx.1160.i, %while.body.i.cleanup53.i_crit_edge ], [ %inc.i, %for.inc.i.cleanup53.i_crit_edge ]
  %addr.addr.2.lcssa.i = phi i32 [ %addr.addr.1164.i, %while.body.i.cleanup53.i_crit_edge ], [ %add.i, %for.inc.i.cleanup53.i_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %30) #15
  tail call void @kunmap_local_indexed(ptr noundef %add.ptr21.i) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %86 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i108.i = and i32 %86, -16384
  %87 = inttoptr i32 %and.i.i.i1.i108.i to ptr
  %task.i.i.i109.i = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 2
  %88 = ptrtoint ptr %task.i.i.i109.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %task.i.i.i109.i, align 8
  %pagefault_disabled.i.i.i110.i = getelementptr inbounds %struct.task_struct, ptr %89, i32 0, i32 213
  %90 = ptrtoint ptr %pagefault_disabled.i.i.i110.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %pagefault_disabled.i.i.i110.i, align 8
  %dec.i.i.i111.i = add i32 %91, -1
  store i32 %dec.i.i.i111.i, ptr %pagefault_disabled.i.i.i110.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %92 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i112.i = and i32 %92, -16384
  %93 = inttoptr i32 %and.i.i.i.i112.i to ptr
  %preempt_count.i.i.i113.i = getelementptr inbounds %struct.thread_info, ptr %93, i32 0, i32 1
  %94 = ptrtoint ptr %preempt_count.i.i.i113.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %preempt_count.i.i.i113.i, align 4
  %sub.i.i114.i = add i32 %95, -1
  store volatile i32 %sub.i.i114.i, ptr %preempt_count.i.i.i113.i, align 4
  %sub51.i = sub i32 %pages_to_write_in_pmd.0163.i, %24
  %sub52.i = sub i32 %remaining_pages_total.1161.i, %24
  %tobool10.not.i = icmp eq i32 %sub51.i, 0
  br i1 %tobool10.not.i, label %cleanup53.i.while.end.i_crit_edge, label %cleanup53.i.while.body.i_crit_edge

cleanup53.i.while.body.i_crit_edge:               ; preds = %cleanup53.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i

cleanup53.i.while.end.i_crit_edge:                ; preds = %cleanup53.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i

while.end.i:                                      ; preds = %cleanup53.i.while.end.i_crit_edge, %if.end9.i.while.end.i_crit_edge
  %curr_page_idx.1.lcssa.i = phi i32 [ %curr_page_idx.0.i, %if.end9.i.while.end.i_crit_edge ], [ %curr_page_idx.2.lcssa.i, %cleanup53.i.while.end.i_crit_edge ]
  %remaining_pages_total.1.lcssa.i = phi i32 [ %remaining_pages_total.0.i, %if.end9.i.while.end.i_crit_edge ], [ %sub52.i, %cleanup53.i.while.end.i_crit_edge ]
  %addr.addr.1.lcssa.i = phi i32 [ %addr.addr.0.i, %if.end9.i.while.end.i_crit_edge ], [ %addr.addr.2.lcssa.i, %cleanup53.i.while.end.i_crit_edge ]
  %tobool57.not.i = icmp eq i32 %remaining_pages_total.1.lcssa.i, 0
  br i1 %tobool57.not.i, label %while.end.i.insert_pages.exit_crit_edge, label %while.end.i.more.i_crit_edge

while.end.i.more.i_crit_edge:                     ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %more.i

while.end.i.insert_pages.exit_crit_edge:          ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %insert_pages.exit

insert_pages.exit:                                ; preds = %while.end.i.insert_pages.exit_crit_edge, %cleanup53.thread.i, %land.lhs.true.i.insert_pages.exit_crit_edge, %more.i.insert_pages.exit_crit_edge
  %remaining_pages_total.5.i = phi i32 [ %sub39.i, %cleanup53.thread.i ], [ %remaining_pages_total.0.i, %land.lhs.true.i.insert_pages.exit_crit_edge ], [ %remaining_pages_total.0.i, %more.i.insert_pages.exit_crit_edge ], [ 0, %while.end.i.insert_pages.exit_crit_edge ]
  %ret.4.i = phi i32 [ %retval.0.i117.i, %cleanup53.thread.i ], [ -12, %land.lhs.true.i.insert_pages.exit_crit_edge ], [ -14, %more.i.insert_pages.exit_crit_edge ], [ 0, %while.end.i.insert_pages.exit_crit_edge ]
  %96 = ptrtoint ptr %num to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %remaining_pages_total.5.i, ptr %num, align 4
  br label %cleanup

cleanup:                                          ; preds = %insert_pages.exit, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.4.i, %insert_pages.exit ], [ -14, %lor.lhs.false.cleanup_crit_edge ], [ -14, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vm_insert_page(ptr nocapture noundef %vma, i32 noundef %addr, ptr noundef %page) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %addr)
  %cmp = icmp ugt i32 %1, %addr
  br i1 %cmp, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %2 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_end, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %addr)
  %cmp1.not = icmp ugt i32 %3, %addr
  br i1 %cmp1.not, label %if.end, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  %and.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %6, -1
  br label %page_count.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %7 = ptrtoint ptr %page to i32
  br label %page_count.exit

page_count.exit:                                  ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %7, %if.end.i.i ]
  %8 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %8, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #15
  %9 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %_refcount.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  br i1 %tobool.not, label %page_count.exit.return_crit_edge, label %if.end3

page_count.exit.return_crit_edge:                 ; preds = %page_count.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end3:                                          ; preds = %page_count.exit
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %11 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vm_flags, align 4
  %and = and i32 %12, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %do.body, label %if.end3.if.end33_crit_edge

if.end3.if.end33_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end33

do.body:                                          ; preds = %if.end3
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %13 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %vm_mm, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_start_locking, i32 0, i32 1), ptr blockaddress(@vm_insert_page, %if.then.i.i45)) #15
          to label %__mmap_lock_trace_start_locking.exit.i [label %if.then.i.i45], !srcloc !217

if.then.i.i45:                                    ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmap_lock_do_trace_start_locking(ptr noundef %14, i1 noundef zeroext false) #15
  br label %__mmap_lock_trace_start_locking.exit.i

__mmap_lock_trace_start_locking.exit.i:           ; preds = %if.then.i.i45, %do.body
  %mmap_lock.i = getelementptr inbounds %struct.anon.9, ptr %14, i32 0, i32 15
  %call.i = tail call i32 @down_read_trylock(ptr noundef %mmap_lock.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp ne i32 %call.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_acquire_returned, i32 0, i32 1), ptr blockaddress(@vm_insert_page, %if.then.i5.i)) #15
          to label %mmap_read_trylock.exit [label %if.then.i5.i], !srcloc !217

if.then.i5.i:                                     ; preds = %__mmap_lock_trace_start_locking.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmap_lock_do_trace_acquire_returned(ptr noundef %14, i1 noundef zeroext false, i1 noundef zeroext %cmp.i) #15
  br label %mmap_read_trylock.exit

mmap_read_trylock.exit:                           ; preds = %if.then.i5.i, %__mmap_lock_trace_start_locking.exit.i
  br i1 %cmp.i, label %do.body10, label %do.body15, !prof !230

do.body10:                                        ; preds = %mmap_read_trylock.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1951, 0\0A.popsection", ""() #15, !srcloc !256
  unreachable

do.body15:                                        ; preds = %mmap_read_trylock.exit
  %15 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vm_flags, align 4
  %and17 = and i32 %16, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17)
  %tobool18.not = icmp eq i32 %and17, 0
  br i1 %tobool18.not, label %do.end31, label %do.body26, !prof !218

do.body26:                                        ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1952, 0\0A.popsection", ""() #15, !srcloc !257
  unreachable

do.end31:                                         ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #17
  %or = or i32 %16, 268435456
  %17 = ptrtoint ptr %vm_flags to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %or, ptr %vm_flags, align 4
  br label %if.end33

if.end33:                                         ; preds = %do.end31, %if.end3.if.end33_crit_edge
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %18 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %vm_page_prot, align 4
  %call34 = tail call fastcc i32 @insert_page(ptr noundef %vma, i32 noundef %addr, ptr noundef %page, i32 noundef %19)
  br label %return

return:                                           ; preds = %if.end33, %page_count.exit.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call34, %if.end33 ], [ -14, %lor.lhs.false.return_crit_edge ], [ -14, %entry.return_crit_edge ], [ -22, %page_count.exit.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @insert_page(ptr nocapture noundef readonly %vma, i32 noundef %addr, ptr noundef %page, i32 noundef %prot) unnamed_addr #2 align 64 {
entry:
  %ptl = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %0 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vm_mm, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ptl) #15
  %2 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %ptl, align 4, !annotation !258
  %3 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i2.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i2.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !218

if.then.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i = add i32 %5, -1
  br label %PageAnon.exit.i

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %6 = ptrtoint ptr %page to i32
  br label %PageAnon.exit.i

PageAnon.exit.i:                                  ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %6, %if.end.i.i.i ]
  %7 = inttoptr i32 %retval.0.i.i.i to ptr
  %mapping.i.i.i = getelementptr inbounds %struct.anon.101, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %mapping.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mapping.i.i.i, align 4
  %10 = ptrtoint ptr %9 to i32
  %and.i.i.i = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i.i.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i.i.not.i, label %lor.lhs.false.i, label %PageAnon.exit.i.out_crit_edge

PageAnon.exit.i.out_crit_edge:                    ; preds = %PageAnon.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

lor.lhs.false.i:                                  ; preds = %PageAnon.exit.i
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %3, align 4
  %and.i.i8.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i8.i)
  %tobool.not.i.i9.i = icmp eq i32 %and.i.i8.i, 0
  br i1 %tobool.not.i.i9.i, label %if.end.i.i12.i, label %if.then.i.i11.i, !prof !218

if.then.i.i11.i:                                  ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i10.i = add i32 %12, -1
  br label %_compound_head.exit.i.i

if.end.i.i12.i:                                   ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  %13 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i12.i, %if.then.i.i11.i
  %retval.0.i.i13.i = phi i32 [ %sub.i.i10.i, %if.then.i.i11.i ], [ %13, %if.end.i.i12.i ]
  %14 = inttoptr i32 %retval.0.i.i13.i to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %16)
  %cmp.i.not.i.i = icmp eq i32 %16, -1
  %17 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %3, align 4
  %and.i16.i.i = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %do.end10.i.i, !prof !230

if.then.i.i:                                      ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i20.i.i, label %if.then.i19.i.i, !prof !218

if.then.i19.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i = add i32 %18, -1
  br label %_compound_head.exit22.i.i

if.end.i20.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %19 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.end.i20.i.i, %if.then.i19.i.i
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %19, %if.end.i20.i.i ]
  %20 = inttoptr i32 %retval.0.i21.i.i to ptr
  tail call void @dump_page(ptr noundef %20, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 428, 0\0A.popsection", ""() #15, !srcloc !255
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i27.i.i, label %if.then.i26.i.i, !prof !218

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i = add i32 %18, -1
  br label %PageSlab.exit.i

if.end.i27.i.i:                                   ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %21 = ptrtoint ptr %page to i32
  br label %PageSlab.exit.i

PageSlab.exit.i:                                  ; preds = %if.end.i27.i.i, %if.then.i26.i.i
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %21, %if.end.i27.i.i ]
  %22 = inttoptr i32 %retval.0.i28.i.i to ptr
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %22, align 4
  %25 = and i32 %24, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i, label %lor.lhs.false2.i, label %PageSlab.exit.i.out_crit_edge

PageSlab.exit.i.out_crit_edge:                    ; preds = %PageSlab.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

lor.lhs.false2.i:                                 ; preds = %PageSlab.exit.i
  %26 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 2
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -129, i32 %28)
  %cmp.i.i = icmp sgt i32 %28, -129
  br i1 %cmp.i.i, label %if.end, label %lor.lhs.false2.i.out_crit_edge

lor.lhs.false2.i.out_crit_edge:                   ; preds = %lor.lhs.false2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end:                                           ; preds = %lor.lhs.false2.i
  tail call void @flush_dcache_page(ptr noundef %page) #15
  %call.i = call ptr @__get_locked_pte(ptr noundef %1, i32 noundef %addr, ptr noundef nonnull %ptl) #15
  %tobool3.not = icmp eq ptr %call.i, null
  br i1 %tobool3.not, label %if.end.out_crit_edge, label %if.end5

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call6 = tail call fastcc i32 @insert_page_into_pte_locked(ptr noundef %1, ptr noundef nonnull %call.i, i32 noundef %addr, ptr noundef %page, i32 noundef %prot)
  %29 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ptl, align 4
  tail call void @_raw_spin_unlock(ptr noundef %30) #15
  tail call void @kunmap_local_indexed(ptr noundef nonnull %call.i) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %31 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 213
  %35 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %36, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %37 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %40, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br label %out

out:                                              ; preds = %if.end5, %if.end.out_crit_edge, %lor.lhs.false2.i.out_crit_edge, %PageSlab.exit.i.out_crit_edge, %PageAnon.exit.i.out_crit_edge
  %retval1.0 = phi i32 [ %call6, %if.end5 ], [ -12, %if.end.out_crit_edge ], [ -22, %lor.lhs.false2.i.out_crit_edge ], [ -22, %PageSlab.exit.i.out_crit_edge ], [ -22, %PageAnon.exit.i.out_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ptl) #15
  ret i32 %retval1.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vm_map_pages(ptr nocapture noundef %vma, ptr nocapture noundef readonly %pages, i32 noundef %num) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 13
  %0 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_pgoff, align 4
  %vm_end.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %2 = ptrtoint ptr %vm_end.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_end.i.i, align 4
  %4 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vma, align 4
  %sub.i.i = sub i32 %3, %5
  %shr.i.i = lshr i32 %sub.i.i, 12
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %num)
  %cmp.not.i = icmp uge i32 %1, %num
  %sub.i = sub i32 %num, %1
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i.i, i32 %sub.i)
  %cmp1.i = icmp ugt i32 %shr.i.i, %sub.i
  %or.cond.i = select i1 %cmp.not.i, i1 true, i1 %cmp1.i
  br i1 %or.cond.i, label %entry.__vm_map_pages.exit_crit_edge, label %for.cond.preheader.i

entry.__vm_map_pages.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_map_pages.exit

for.cond.preheader.i:                             ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i.i)
  %cmp423.not.i = icmp ult i32 %sub.i.i, 4096
  br i1 %cmp423.not.i, label %for.cond.preheader.i.__vm_map_pages.exit_crit_edge, label %for.body.preheader.i

for.cond.preheader.i.__vm_map_pages.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_map_pages.exit

for.body.preheader.i:                             ; preds = %for.cond.preheader.i
  %umax.i = tail call i32 @llvm.umax.i32(i32 %shr.i.i, i32 1) #15
  br label %for.body.i

for.body.i:                                       ; preds = %if.end8.i.for.body.i_crit_edge, %for.body.preheader.i
  %i.025.i = phi i32 [ %inc.i, %if.end8.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %uaddr.024.i = phi i32 [ %add9.i, %if.end8.i.for.body.i_crit_edge ], [ %5, %for.body.preheader.i ]
  %add.i = add i32 %i.025.i, %1
  %arrayidx.i = getelementptr ptr, ptr %pages, i32 %add.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 @vm_insert_page(ptr noundef %vma, i32 noundef %uaddr.024.i, ptr noundef %7) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp6.i = icmp slt i32 %call5.i, 0
  br i1 %cmp6.i, label %for.body.i.__vm_map_pages.exit_crit_edge, label %if.end8.i

for.body.i.__vm_map_pages.exit_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_map_pages.exit

if.end8.i:                                        ; preds = %for.body.i
  %add9.i = add i32 %uaddr.024.i, 4096
  %inc.i = add nuw nsw i32 %i.025.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %umax.i
  br i1 %exitcond.not.i, label %if.end8.i.__vm_map_pages.exit_crit_edge, label %if.end8.i.for.body.i_crit_edge

if.end8.i.for.body.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

if.end8.i.__vm_map_pages.exit_crit_edge:          ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_map_pages.exit

__vm_map_pages.exit:                              ; preds = %if.end8.i.__vm_map_pages.exit_crit_edge, %for.body.i.__vm_map_pages.exit_crit_edge, %for.cond.preheader.i.__vm_map_pages.exit_crit_edge, %entry.__vm_map_pages.exit_crit_edge
  %retval.0.i = phi i32 [ -6, %entry.__vm_map_pages.exit_crit_edge ], [ 0, %for.cond.preheader.i.__vm_map_pages.exit_crit_edge ], [ 0, %if.end8.i.__vm_map_pages.exit_crit_edge ], [ %call5.i, %for.body.i.__vm_map_pages.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vm_map_pages_zero(ptr nocapture noundef %vma, ptr nocapture noundef readonly %pages, i32 noundef %num) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_end.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %0 = ptrtoint ptr %vm_end.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_end.i.i, align 4
  %2 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vma, align 4
  %sub.i.i = sub i32 %1, %3
  %shr.i.i = lshr i32 %sub.i.i, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num)
  %cmp.not.i = icmp eq i32 %num, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i.i, i32 %num)
  %cmp1.i = icmp ugt i32 %shr.i.i, %num
  %or.cond.i = select i1 %cmp.not.i, i1 true, i1 %cmp1.i
  br i1 %or.cond.i, label %entry.__vm_map_pages.exit_crit_edge, label %for.cond.preheader.i

entry.__vm_map_pages.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_map_pages.exit

for.cond.preheader.i:                             ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i.i)
  %cmp423.not.i = icmp ult i32 %sub.i.i, 4096
  br i1 %cmp423.not.i, label %for.cond.preheader.i.__vm_map_pages.exit_crit_edge, label %for.body.preheader.i

for.cond.preheader.i.__vm_map_pages.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_map_pages.exit

for.body.preheader.i:                             ; preds = %for.cond.preheader.i
  %umax.i = tail call i32 @llvm.umax.i32(i32 %shr.i.i, i32 1) #15
  br label %for.body.i

for.body.i:                                       ; preds = %if.end8.i.for.body.i_crit_edge, %for.body.preheader.i
  %i.025.i = phi i32 [ %inc.i, %if.end8.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %uaddr.024.i = phi i32 [ %add9.i, %if.end8.i.for.body.i_crit_edge ], [ %3, %for.body.preheader.i ]
  %arrayidx.i = getelementptr ptr, ptr %pages, i32 %i.025.i
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 @vm_insert_page(ptr noundef %vma, i32 noundef %uaddr.024.i, ptr noundef %5) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp6.i = icmp slt i32 %call5.i, 0
  br i1 %cmp6.i, label %for.body.i.__vm_map_pages.exit_crit_edge, label %if.end8.i

for.body.i.__vm_map_pages.exit_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_map_pages.exit

if.end8.i:                                        ; preds = %for.body.i
  %add9.i = add i32 %uaddr.024.i, 4096
  %inc.i = add nuw nsw i32 %i.025.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %umax.i
  br i1 %exitcond.not.i, label %if.end8.i.__vm_map_pages.exit_crit_edge, label %if.end8.i.for.body.i_crit_edge

if.end8.i.for.body.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

if.end8.i.__vm_map_pages.exit_crit_edge:          ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_map_pages.exit

__vm_map_pages.exit:                              ; preds = %if.end8.i.__vm_map_pages.exit_crit_edge, %for.body.i.__vm_map_pages.exit_crit_edge, %for.cond.preheader.i.__vm_map_pages.exit_crit_edge, %entry.__vm_map_pages.exit_crit_edge
  %retval.0.i = phi i32 [ -6, %entry.__vm_map_pages.exit_crit_edge ], [ 0, %for.cond.preheader.i.__vm_map_pages.exit_crit_edge ], [ 0, %if.end8.i.__vm_map_pages.exit_crit_edge ], [ %call5.i, %for.body.i.__vm_map_pages.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vmf_insert_pfn_prot(ptr noundef %vma, i32 noundef %addr, i32 noundef %pfn, i32 noundef %pgprot) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %0 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_flags, align 4
  %and = and i32 %1, 268436480
  %2 = zext i32 %and to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.53)
  switch i32 %and, label %do.body24 [
    i32 0, label %do.body4
    i32 268436480, label %do.body18
  ], !prof !259

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2123, 0\0A.popsection", ""() #15, !srcloc !260
  unreachable

do.body18:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2125, 0\0A.popsection", ""() #15, !srcloc !261
  unreachable

do.body24:                                        ; preds = %entry
  %3 = and i32 %1, 1064
  call void @__sanitizer_cov_trace_const_cmp4(i32 1056, i32 %3)
  %4 = icmp eq i32 %3, 1056
  br i1 %4, label %do.body36, label %do.body42, !prof !262

do.body36:                                        ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2126, 0\0A.popsection", ""() #15, !srcloc !263
  unreachable

do.body42:                                        ; preds = %do.body24
  %and44 = and i32 %1, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44)
  %tobool45.not = icmp eq i32 %and44, 0
  br i1 %tobool45.not, label %do.body42.do.end62_crit_edge, label %land.rhs46

do.body42.do.end62_crit_edge:                     ; preds = %do.body42
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end62

land.rhs46:                                       ; preds = %do.body42
  %call47 = tail call i32 @pfn_valid(i32 noundef %pfn) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %land.rhs46.do.end62_crit_edge, label %do.body57, !prof !218

land.rhs46.do.end62_crit_edge:                    ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end62

do.body57:                                        ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2127, 0\0A.popsection", ""() #15, !srcloc !264
  unreachable

do.end62:                                         ; preds = %land.rhs46.do.end62_crit_edge, %do.body42.do.end62_crit_edge
  %5 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %addr)
  %cmp63 = icmp ugt i32 %6, %addr
  br i1 %cmp63, label %do.end62.return_crit_edge, label %lor.lhs.false

do.end62.return_crit_edge:                        ; preds = %do.end62
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

lor.lhs.false:                                    ; preds = %do.end62
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %7 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vm_end, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %addr)
  %cmp64.not = icmp ugt i32 %8, %addr
  br i1 %cmp64.not, label %if.end66, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end66:                                         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i = zext i32 %pfn to i64
  %or.i90 = or i64 %conv.i, 2305843009213693952
  %.fca.0.insert = insertvalue [1 x i64] poison, i64 %or.i90, 0
  %call72 = tail call fastcc i32 @insert_pfn(ptr noundef %vma, i32 noundef %addr, [1 x i64] %.fca.0.insert, i32 noundef %pgprot, i1 noundef zeroext false)
  br label %return

return:                                           ; preds = %if.end66, %lor.lhs.false.return_crit_edge, %do.end62.return_crit_edge
  %retval.0 = phi i32 [ %call72, %if.end66 ], [ 2, %lor.lhs.false.return_crit_edge ], [ 2, %do.end62.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @insert_pfn(ptr noundef %vma, i32 noundef %addr, [1 x i64] %pfn.coerce, i32 noundef %prot, i1 noundef zeroext %mkwrite) unnamed_addr #2 align 64 {
entry:
  %ptl = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %0 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vm_mm, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ptl) #15
  %2 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %ptl, align 4, !annotation !258
  %call.i = call ptr @__get_locked_pte(ptr noundef %1, i32 noundef %addr, ptr noundef nonnull %ptl) #15
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %call.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool2.not = icmp eq i32 %4, 0
  br i1 %tobool2.not, label %if.end61, label %if.then3

if.then3:                                         ; preds = %if.end
  br i1 %mkwrite, label %if.then5, label %if.then3.do.body78_crit_edge

if.then3.do.body78_crit_edge:                     ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body78

if.then5:                                         ; preds = %if.then3
  %shr = lshr i32 %4, 12
  %pfn.coerce.fca.0.extract.i = extractvalue [1 x i64] %pfn.coerce, 0
  %conv.i = trunc i64 %pfn.coerce.fca.0.extract.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %conv.i)
  %cmp.not = icmp eq i32 %shr, %conv.i
  br i1 %cmp.not, label %if.end52, label %if.then8

if.then8:                                         ; preds = %if.then5
  %5 = load i32, ptr @zero_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %shr)
  %cmp.i.not = icmp eq i32 %5, %shr
  br i1 %cmp.i.not, label %if.then8.do.body78_crit_edge, label %land.rhs

if.then8.do.body78_crit_edge:                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body78

land.rhs:                                         ; preds = %if.then8
  %.b129 = load i1, ptr @insert_pfn.__already_done, align 1
  br i1 %.b129, label %land.rhs.do.body78_crit_edge, label %if.then22, !prof !218

land.rhs.do.body78_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body78

if.then22:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @insert_pfn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2063, i32 noundef 9, ptr noundef null) #15
  br label %do.body78

if.end52:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #17
  %or.i.i131 = or i32 %4, 66
  %vm_flags.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %6 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vm_flags.i, align 4
  %and.i = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and.i.i.i = and i32 %or.i.i131, -129
  %spec.select.i = select i1 %tobool.not.i, i32 %or.i.i131, i32 %and.i.i.i, !prof !230
  %call56 = tail call i32 @ptep_set_access_flags(ptr noundef %vma, i32 noundef %addr, ptr noundef nonnull %call.i, i32 noundef %spec.select.i, i32 noundef 1) #15
  br label %do.body78

if.end61:                                         ; preds = %if.end
  %pfn.coerce.fca.0.extract.i.i = extractvalue [1 x i64] %pfn.coerce, 0
  %conv.i.i = trunc i64 %pfn.coerce.fca.0.extract.i.i to i32
  %shl.i = shl i32 %conv.i.i, 12
  %or.i = or i32 %shl.i, %prot
  br i1 %mkwrite, label %if.then73, label %if.end61.if.end77_crit_edge

if.end61.if.end77_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end77

if.then73:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #17
  %or.i.i133 = or i32 %or.i, 66
  %vm_flags.i134 = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %8 = ptrtoint ptr %vm_flags.i134 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vm_flags.i134, align 4
  %and.i135 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i135)
  %tobool.not.i136 = icmp eq i32 %and.i135, 0
  %and.i.i.i137 = and i32 %or.i.i133, -129
  %spec.select.i138 = select i1 %tobool.not.i136, i32 %or.i.i133, i32 %and.i.i.i137, !prof !230
  br label %if.end77

if.end77:                                         ; preds = %if.then73, %if.end61.if.end77_crit_edge
  %entry1.1 = phi i32 [ %spec.select.i138, %if.then73 ], [ %or.i, %if.end61.if.end77_crit_edge ]
  tail call void @set_pte_at(ptr noundef %1, i32 noundef %addr, ptr noundef nonnull %call.i, i32 noundef %entry1.1) #15
  br label %do.body78

do.body78:                                        ; preds = %if.end77, %if.end52, %if.then22, %land.rhs.do.body78_crit_edge, %if.then8.do.body78_crit_edge, %if.then3.do.body78_crit_edge
  %10 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ptl, align 4
  tail call void @_raw_spin_unlock(ptr noundef %11) #15
  tail call void @kunmap_local_indexed(ptr noundef nonnull %call.i) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %12 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 213
  %16 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %17, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %18 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.body78, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 256, %do.body78 ], [ 1, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ptl) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vmf_insert_pfn(ptr noundef %vma, i32 noundef %addr, i32 noundef %pfn) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %0 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_page_prot, align 4
  %vm_flags.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags.i, align 4
  %and.i = and i32 %3, 268436480
  %4 = zext i32 %and.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.54)
  switch i32 %and.i, label %do.body24.i [
    i32 0, label %do.body4.i
    i32 268436480, label %do.body18.i
  ], !prof !259

do.body4.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2123, 0\0A.popsection", ""() #15, !srcloc !260
  unreachable

do.body18.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2125, 0\0A.popsection", ""() #15, !srcloc !261
  unreachable

do.body24.i:                                      ; preds = %entry
  %5 = and i32 %3, 1064
  call void @__sanitizer_cov_trace_const_cmp4(i32 1056, i32 %5)
  %6 = icmp eq i32 %5, 1056
  br i1 %6, label %do.body36.i, label %do.body42.i, !prof !262

do.body36.i:                                      ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2126, 0\0A.popsection", ""() #15, !srcloc !263
  unreachable

do.body42.i:                                      ; preds = %do.body24.i
  %and44.i = and i32 %3, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44.i)
  %tobool45.not.i = icmp eq i32 %and44.i, 0
  br i1 %tobool45.not.i, label %do.body42.i.do.end62.i_crit_edge, label %land.rhs46.i

do.body42.i.do.end62.i_crit_edge:                 ; preds = %do.body42.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end62.i

land.rhs46.i:                                     ; preds = %do.body42.i
  %call47.i = tail call i32 @pfn_valid(i32 noundef %pfn) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47.i)
  %tobool48.not.i = icmp eq i32 %call47.i, 0
  br i1 %tobool48.not.i, label %land.rhs46.i.do.end62.i_crit_edge, label %do.body57.i, !prof !218

land.rhs46.i.do.end62.i_crit_edge:                ; preds = %land.rhs46.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end62.i

do.body57.i:                                      ; preds = %land.rhs46.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2127, 0\0A.popsection", ""() #15, !srcloc !264
  unreachable

do.end62.i:                                       ; preds = %land.rhs46.i.do.end62.i_crit_edge, %do.body42.i.do.end62.i_crit_edge
  %7 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %addr)
  %cmp63.i = icmp ugt i32 %8, %addr
  br i1 %cmp63.i, label %do.end62.i.vmf_insert_pfn_prot.exit_crit_edge, label %lor.lhs.false.i

do.end62.i.vmf_insert_pfn_prot.exit_crit_edge:    ; preds = %do.end62.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vmf_insert_pfn_prot.exit

lor.lhs.false.i:                                  ; preds = %do.end62.i
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %9 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vm_end.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %addr)
  %cmp64.not.i = icmp ugt i32 %10, %addr
  br i1 %cmp64.not.i, label %if.end66.i, label %lor.lhs.false.i.vmf_insert_pfn_prot.exit_crit_edge

lor.lhs.false.i.vmf_insert_pfn_prot.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vmf_insert_pfn_prot.exit

if.end66.i:                                       ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i = zext i32 %pfn to i64
  %or.i90.i = or i64 %conv.i.i, 2305843009213693952
  %.fca.0.insert.i = insertvalue [1 x i64] poison, i64 %or.i90.i, 0
  %call72.i = tail call fastcc i32 @insert_pfn(ptr noundef %vma, i32 noundef %addr, [1 x i64] %.fca.0.insert.i, i32 noundef %1, i1 noundef zeroext false) #15
  br label %vmf_insert_pfn_prot.exit

vmf_insert_pfn_prot.exit:                         ; preds = %if.end66.i, %lor.lhs.false.i.vmf_insert_pfn_prot.exit_crit_edge, %do.end62.i.vmf_insert_pfn_prot.exit_crit_edge
  %retval.0.i = phi i32 [ %call72.i, %if.end66.i ], [ 2, %lor.lhs.false.i.vmf_insert_pfn_prot.exit_crit_edge ], [ 2, %do.end62.i.vmf_insert_pfn_prot.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vmf_insert_mixed_prot(ptr noundef %vma, i32 noundef %addr, [1 x i64] %pfn.coerce, i32 noundef %pgprot) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_flags.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %0 = ptrtoint ptr %vm_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_flags.i.i, align 4
  %and.i.i = and i32 %1, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %vm_mixed_ok.exit.i, label %entry.do.end9.i_crit_edge

entry.do.end9.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end9.i

vm_mixed_ok.exit.i:                               ; preds = %entry
  %pfn.coerce.fca.0.extract.i.i.i = extractvalue [1 x i64] %pfn.coerce, 0
  %conv.i.i.i = trunc i64 %pfn.coerce.fca.0.extract.i.i.i to i32
  %2 = load i32, ptr @zero_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %conv.i.i.i)
  %cmp.i.not.i.i = icmp eq i32 %2, %conv.i.i.i
  br i1 %cmp.i.not.i.i, label %vm_mixed_ok.exit.i.do.end9.i_crit_edge, label %do.body4.i, !prof !218

vm_mixed_ok.exit.i.do.end9.i_crit_edge:           ; preds = %vm_mixed_ok.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end9.i

do.body4.i:                                       ; preds = %vm_mixed_ok.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2189, 0\0A.popsection", ""() #15, !srcloc !265
  unreachable

do.end9.i:                                        ; preds = %vm_mixed_ok.exit.i.do.end9.i_crit_edge, %entry.do.end9.i_crit_edge
  %3 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %vma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %addr)
  %cmp.i = icmp ugt i32 %4, %addr
  br i1 %cmp.i, label %do.end9.i.__vm_insert_mixed.exit_crit_edge, label %lor.lhs.false.i

do.end9.i.__vm_insert_mixed.exit_crit_edge:       ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_insert_mixed.exit

lor.lhs.false.i:                                  ; preds = %do.end9.i
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %5 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vm_end.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %addr)
  %cmp10.not.i = icmp ugt i32 %6, %addr
  br i1 %cmp10.not.i, label %if.end12.i, label %lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge

lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_insert_mixed.exit

if.end12.i:                                       ; preds = %lor.lhs.false.i
  %pfn.coerce.fca.0.extract.i.i = extractvalue [1 x i64] %pfn.coerce, 0
  %conv.i.i75.i = trunc i64 %pfn.coerce.fca.0.extract.i.i to i32
  %call2.i.i = tail call i32 @pfn_valid(i32 noundef %conv.i.i75.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool23.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool23.not.i, label %if.else.i, label %if.then24.i

if.then24.i:                                      ; preds = %if.end12.i
  %7 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %8 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %conv.i.i75.i, %8
  %add.ptr.i = getelementptr %struct.page, ptr %7, i32 %sub.i
  %call27.i = tail call fastcc i32 @insert_page(ptr noundef %vma, i32 noundef %addr, ptr noundef %add.ptr.i, i32 noundef %pgprot) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -12, i32 %call27.i)
  %cmp32.i = icmp eq i32 %call27.i, -12
  br i1 %cmp32.i, label %if.then24.i.__vm_insert_mixed.exit_crit_edge, label %if.end34.i

if.then24.i.__vm_insert_mixed.exit_crit_edge:     ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_insert_mixed.exit

if.else.i:                                        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  %call30.i = tail call fastcc i32 @insert_pfn(ptr noundef %vma, i32 noundef %addr, [1 x i64] %pfn.coerce, i32 noundef %pgprot, i1 noundef zeroext false) #15
  br label %__vm_insert_mixed.exit

if.end34.i:                                       ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call27.i)
  %cmp35.i = icmp sgt i32 %call27.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16, i32 %call27.i)
  %cmp37.not.i = icmp eq i32 %call27.i, -16
  %or.cond.i = or i1 %cmp35.i, %cmp37.not.i
  %spec.select.i = select i1 %or.cond.i, i32 256, i32 2
  br label %__vm_insert_mixed.exit

__vm_insert_mixed.exit:                           ; preds = %if.end34.i, %if.else.i, %if.then24.i.__vm_insert_mixed.exit_crit_edge, %lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge, %do.end9.i.__vm_insert_mixed.exit_crit_edge
  %retval.0.i = phi i32 [ %call30.i, %if.else.i ], [ 2, %lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge ], [ 2, %do.end9.i.__vm_insert_mixed.exit_crit_edge ], [ 1, %if.then24.i.__vm_insert_mixed.exit_crit_edge ], [ %spec.select.i, %if.end34.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vmf_insert_mixed(ptr noundef %vma, i32 noundef %addr, [1 x i64] %pfn.coerce) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %0 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_page_prot, align 4
  %vm_flags.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags.i.i, align 4
  %and.i.i = and i32 %3, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %vm_mixed_ok.exit.i, label %entry.do.end9.i_crit_edge

entry.do.end9.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end9.i

vm_mixed_ok.exit.i:                               ; preds = %entry
  %pfn.coerce.fca.0.extract.i.i.i = extractvalue [1 x i64] %pfn.coerce, 0
  %conv.i.i.i = trunc i64 %pfn.coerce.fca.0.extract.i.i.i to i32
  %4 = load i32, ptr @zero_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %conv.i.i.i)
  %cmp.i.not.i.i = icmp eq i32 %4, %conv.i.i.i
  br i1 %cmp.i.not.i.i, label %vm_mixed_ok.exit.i.do.end9.i_crit_edge, label %do.body4.i, !prof !218

vm_mixed_ok.exit.i.do.end9.i_crit_edge:           ; preds = %vm_mixed_ok.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end9.i

do.body4.i:                                       ; preds = %vm_mixed_ok.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2189, 0\0A.popsection", ""() #15, !srcloc !265
  unreachable

do.end9.i:                                        ; preds = %vm_mixed_ok.exit.i.do.end9.i_crit_edge, %entry.do.end9.i_crit_edge
  %5 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %addr)
  %cmp.i = icmp ugt i32 %6, %addr
  br i1 %cmp.i, label %do.end9.i.__vm_insert_mixed.exit_crit_edge, label %lor.lhs.false.i

do.end9.i.__vm_insert_mixed.exit_crit_edge:       ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_insert_mixed.exit

lor.lhs.false.i:                                  ; preds = %do.end9.i
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %7 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vm_end.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %addr)
  %cmp10.not.i = icmp ugt i32 %8, %addr
  br i1 %cmp10.not.i, label %if.end12.i, label %lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge

lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_insert_mixed.exit

if.end12.i:                                       ; preds = %lor.lhs.false.i
  %pfn.coerce.fca.0.extract.i.i = extractvalue [1 x i64] %pfn.coerce, 0
  %conv.i.i75.i = trunc i64 %pfn.coerce.fca.0.extract.i.i to i32
  %call2.i.i = tail call i32 @pfn_valid(i32 noundef %conv.i.i75.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool23.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool23.not.i, label %if.else.i, label %if.then24.i

if.then24.i:                                      ; preds = %if.end12.i
  %9 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %10 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %conv.i.i75.i, %10
  %add.ptr.i = getelementptr %struct.page, ptr %9, i32 %sub.i
  %call27.i = tail call fastcc i32 @insert_page(ptr noundef %vma, i32 noundef %addr, ptr noundef %add.ptr.i, i32 noundef %1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -12, i32 %call27.i)
  %cmp32.i = icmp eq i32 %call27.i, -12
  br i1 %cmp32.i, label %if.then24.i.__vm_insert_mixed.exit_crit_edge, label %if.end34.i

if.then24.i.__vm_insert_mixed.exit_crit_edge:     ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_insert_mixed.exit

if.else.i:                                        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  %call30.i = tail call fastcc i32 @insert_pfn(ptr noundef %vma, i32 noundef %addr, [1 x i64] %pfn.coerce, i32 noundef %1, i1 noundef zeroext false) #15
  br label %__vm_insert_mixed.exit

if.end34.i:                                       ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call27.i)
  %cmp35.i = icmp sgt i32 %call27.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16, i32 %call27.i)
  %cmp37.not.i = icmp eq i32 %call27.i, -16
  %or.cond.i = or i1 %cmp35.i, %cmp37.not.i
  %spec.select.i = select i1 %or.cond.i, i32 256, i32 2
  br label %__vm_insert_mixed.exit

__vm_insert_mixed.exit:                           ; preds = %if.end34.i, %if.else.i, %if.then24.i.__vm_insert_mixed.exit_crit_edge, %lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge, %do.end9.i.__vm_insert_mixed.exit_crit_edge
  %retval.0.i = phi i32 [ %call30.i, %if.else.i ], [ 2, %lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge ], [ 2, %do.end9.i.__vm_insert_mixed.exit_crit_edge ], [ 1, %if.then24.i.__vm_insert_mixed.exit_crit_edge ], [ %spec.select.i, %if.end34.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vmf_insert_mixed_mkwrite(ptr noundef %vma, i32 noundef %addr, [1 x i64] %pfn.coerce) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %0 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_page_prot, align 4
  %vm_flags.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags.i.i, align 4
  %and.i.i = and i32 %3, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %vm_mixed_ok.exit.i, label %entry.do.end9.i_crit_edge

entry.do.end9.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end9.i

vm_mixed_ok.exit.i:                               ; preds = %entry
  %pfn.coerce.fca.0.extract.i.i.i = extractvalue [1 x i64] %pfn.coerce, 0
  %conv.i.i.i = trunc i64 %pfn.coerce.fca.0.extract.i.i.i to i32
  %4 = load i32, ptr @zero_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %conv.i.i.i)
  %cmp.i.not.i.i = icmp eq i32 %4, %conv.i.i.i
  br i1 %cmp.i.not.i.i, label %vm_mixed_ok.exit.i.do.end9.i_crit_edge, label %do.body4.i, !prof !218

vm_mixed_ok.exit.i.do.end9.i_crit_edge:           ; preds = %vm_mixed_ok.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end9.i

do.body4.i:                                       ; preds = %vm_mixed_ok.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2189, 0\0A.popsection", ""() #15, !srcloc !265
  unreachable

do.end9.i:                                        ; preds = %vm_mixed_ok.exit.i.do.end9.i_crit_edge, %entry.do.end9.i_crit_edge
  %5 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %addr)
  %cmp.i = icmp ugt i32 %6, %addr
  br i1 %cmp.i, label %do.end9.i.__vm_insert_mixed.exit_crit_edge, label %lor.lhs.false.i

do.end9.i.__vm_insert_mixed.exit_crit_edge:       ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_insert_mixed.exit

lor.lhs.false.i:                                  ; preds = %do.end9.i
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %7 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vm_end.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %addr)
  %cmp10.not.i = icmp ugt i32 %8, %addr
  br i1 %cmp10.not.i, label %if.end12.i, label %lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge

lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_insert_mixed.exit

if.end12.i:                                       ; preds = %lor.lhs.false.i
  %pfn.coerce.fca.0.extract.i.i = extractvalue [1 x i64] %pfn.coerce, 0
  %conv.i.i75.i = trunc i64 %pfn.coerce.fca.0.extract.i.i to i32
  %call2.i.i = tail call i32 @pfn_valid(i32 noundef %conv.i.i75.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool23.not.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool23.not.i, label %if.else.i, label %if.then24.i

if.then24.i:                                      ; preds = %if.end12.i
  %9 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %10 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %conv.i.i75.i, %10
  %add.ptr.i = getelementptr %struct.page, ptr %9, i32 %sub.i
  %call27.i = tail call fastcc i32 @insert_page(ptr noundef %vma, i32 noundef %addr, ptr noundef %add.ptr.i, i32 noundef %1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -12, i32 %call27.i)
  %cmp32.i = icmp eq i32 %call27.i, -12
  br i1 %cmp32.i, label %if.then24.i.__vm_insert_mixed.exit_crit_edge, label %if.end34.i

if.then24.i.__vm_insert_mixed.exit_crit_edge:     ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__vm_insert_mixed.exit

if.else.i:                                        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  %call30.i = tail call fastcc i32 @insert_pfn(ptr noundef %vma, i32 noundef %addr, [1 x i64] %pfn.coerce, i32 noundef %1, i1 noundef zeroext true) #15
  br label %__vm_insert_mixed.exit

if.end34.i:                                       ; preds = %if.then24.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call27.i)
  %cmp35.i = icmp sgt i32 %call27.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16, i32 %call27.i)
  %cmp37.not.i = icmp eq i32 %call27.i, -16
  %or.cond.i = or i1 %cmp35.i, %cmp37.not.i
  %spec.select.i = select i1 %or.cond.i, i32 256, i32 2
  br label %__vm_insert_mixed.exit

__vm_insert_mixed.exit:                           ; preds = %if.end34.i, %if.else.i, %if.then24.i.__vm_insert_mixed.exit_crit_edge, %lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge, %do.end9.i.__vm_insert_mixed.exit_crit_edge
  %retval.0.i = phi i32 [ %call30.i, %if.else.i ], [ 2, %lor.lhs.false.i.__vm_insert_mixed.exit_crit_edge ], [ 2, %do.end9.i.__vm_insert_mixed.exit_crit_edge ], [ 1, %if.then24.i.__vm_insert_mixed.exit_crit_edge ], [ %spec.select.i, %if.end34.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @remap_pfn_range_notrack(ptr noundef %vma, i32 noundef %addr, i32 noundef %pfn, i32 noundef %size, i32 noundef %prot) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %size, 4095
  %and = and i32 %add, -4096
  %add1 = add i32 %and, %addr
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %0 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vm_mm, align 4
  %and2 = and i32 %addr, 4095
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %cmp.not = icmp eq i32 %and2, 0
  br i1 %cmp.not, label %if.end40, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b118 = load i1, ptr @remap_pfn_range_notrack.__already_done, align 1
  br i1 %.b118, label %land.rhs.cleanup_crit_edge, label %if.then, !prof !218

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @remap_pfn_range_notrack.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2392, i32 noundef 9, ptr noundef null) #15
  br label %cleanup

if.end40:                                         ; preds = %entry
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags, align 4
  %and.i = and i32 %3, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and.i)
  %cmp.i = icmp eq i32 %and.i, 32
  br i1 %cmp.i, label %if.then41, label %if.end40.if.end46_crit_edge

if.end40.if.end46_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end46

if.then41:                                        ; preds = %if.end40
  %4 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %addr)
  %cmp42.not = icmp eq i32 %5, %addr
  br i1 %cmp42.not, label %lor.lhs.false, label %if.then41.cleanup_crit_edge

if.then41.cleanup_crit_edge:                      ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.then41
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %6 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vm_end, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add1, i32 %7)
  %cmp43.not = icmp eq i32 %add1, %7
  br i1 %cmp43.not, label %if.end45, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end45:                                         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 13
  %8 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %pfn, ptr %vm_pgoff, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end40.if.end46_crit_edge
  %or = or i32 %3, 67388416
  %9 = ptrtoint ptr %vm_flags to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or, ptr %vm_flags, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add1, i32 %addr)
  %cmp49.not = icmp ugt i32 %add1, %addr
  br i1 %cmp49.not, label %do.end65, label %do.body57, !prof !218

do.body57:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2421, 0\0A.popsection", ""() #15, !srcloc !266
  unreachable

do.end65:                                         ; preds = %if.end46
  %shr = lshr i32 %addr, 12
  %sub = sub i32 %pfn, %shr
  %pgd66 = getelementptr inbounds %struct.anon.9, ptr %1, i32 0, i32 8
  %10 = ptrtoint ptr %pgd66 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pgd66, align 4
  %shr.i = lshr i32 %addr, 21
  %add.ptr.i = getelementptr [2 x i32], ptr %11, i32 %shr.i
  tail call void @flush_cache_range(ptr noundef %vma, i32 noundef %addr, i32 noundef %add1) #15
  %sub73 = add i32 %add1, -1
  br label %do.body68

do.body68:                                        ; preds = %do.cond81.do.body68_crit_edge, %do.end65
  %pgd.0 = phi ptr [ %add.ptr.i, %do.end65 ], [ %incdec.ptr, %do.cond81.do.body68_crit_edge ]
  %addr.addr.0 = phi i32 [ %addr, %do.end65 ], [ %and70.add1, %do.cond81.do.body68_crit_edge ]
  %add69 = add i32 %addr.addr.0, 2097152
  %and70 = and i32 %add69, -2097152
  %sub72 = add i32 %and70, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub72, i32 %sub73)
  %cmp74 = icmp ult i32 %sub72, %sub73
  %and70.add1 = select i1 %cmp74, i32 %and70, i32 %add1
  %shr75 = lshr i32 %addr.addr.0, 12
  %add76 = add i32 %sub, %shr75
  %tobool.not.i = icmp eq ptr %pgd.0, null
  br i1 %tobool.not.i, label %do.body68.cleanup_crit_edge, label %do.body.i.i.i

do.body68.cleanup_crit_edge:                      ; preds = %do.body68
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.body.i.i.i:                                    ; preds = %do.body68
  %12 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pgd.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i.i.i.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.i.i.i, label %do.body.i.i.i.cond.end.i.i.i.i_crit_edge, !prof !230

do.body.i.i.i.cond.end.i.i.i.i_crit_edge:         ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %do.body.i.i.i
  %call.i.i.i.i = tail call i32 @__pte_alloc(ptr noundef %1, ptr noundef nonnull %pgd.0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool4.not.i.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i, label %land.lhs.true.i.i.i.i.cond.end.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i.cleanup_crit_edge

land.lhs.true.i.i.i.i.cleanup_crit_edge:          ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true.i.i.i.i.cond.end.i.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end.i.i.i.i

cond.end.i.i.i.i:                                 ; preds = %land.lhs.true.i.i.i.i.cond.end.i.i.i.i_crit_edge, %do.body.i.i.i.cond.end.i.i.i.i_crit_edge
  %14 = load ptr, ptr @mem_map, align 4
  %15 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pgd.0, align 4
  %shr.i.i.i.i.i = lshr i32 %16, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %17 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i.i.i.i.i = sub i32 %shr.i.i.i.i.i, %17
  %ptl.i.i.i.i.i.i = getelementptr %struct.page, ptr %14, i32 %sub.i.i.i.i.i, i32 1, i32 0, i32 3
  %18 = ptrtoint ptr %ptl.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ptl.i.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr %struct.page, ptr %14, i32 %sub.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %20 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i.i.i.i = or i32 %20, 512
  %21 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i.i.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i.i = add i32 %24, 1
  store volatile i32 %add.i.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %25 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i.i.i.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i.i1.i.i.i.i.i.i to ptr
  %task.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %task.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task.i.i.i.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 213
  %29 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %pagefault_disabled.i.i.i.i.i.i.i.i, align 8
  %inc.i.i.i.i.i.i.i.i = add i32 %30, 1
  store i32 %inc.i.i.i.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i.i.i.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr.i.i.i.i, i32 noundef %or.i.i.i.i.i) #15
  %and.i.i.i.i.i = and i32 %shr75, 511
  %add.ptr8.i.i.i.i = getelementptr i32, ptr %call.i.i.i.i.i.i, i32 %and.i.i.i.i.i
  tail call void @_raw_spin_lock(ptr noundef %19) #15
  %tobool9.not.i.i.i.i = icmp eq ptr %add.ptr8.i.i.i.i, null
  br i1 %tobool9.not.i.i.i.i, label %cond.end.i.i.i.i.cleanup_crit_edge, label %cond.end.i.i.i.i.do.body10.i.i.i.i_crit_edge

cond.end.i.i.i.i.do.body10.i.i.i.i_crit_edge:     ; preds = %cond.end.i.i.i.i
  br label %do.body10.i.i.i.i

cond.end.i.i.i.i.cleanup_crit_edge:               ; preds = %cond.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.body10.i.i.i.i:                                ; preds = %do.end32.i.i.i.i.do.body10.i.i.i.i_crit_edge, %cond.end.i.i.i.i.do.body10.i.i.i.i_crit_edge
  %pte.0.i.i.i.i = phi ptr [ %incdec.ptr.i.i.i.i, %do.end32.i.i.i.i.do.body10.i.i.i.i_crit_edge ], [ %add.ptr8.i.i.i.i, %cond.end.i.i.i.i.do.body10.i.i.i.i_crit_edge ]
  %pfn.addr.0.i.i.i.i = phi i32 [ %inc.i.i.i.i, %do.end32.i.i.i.i.do.body10.i.i.i.i_crit_edge ], [ %add76, %cond.end.i.i.i.i.do.body10.i.i.i.i_crit_edge ]
  %addr.addr.0.i.i.i.i = phi i32 [ %add.i.i.i.i, %do.end32.i.i.i.i.do.body10.i.i.i.i_crit_edge ], [ %addr.addr.0, %cond.end.i.i.i.i.do.body10.i.i.i.i_crit_edge ]
  %31 = ptrtoint ptr %pte.0.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %pte.0.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool12.not.i.i.i.i = icmp eq i32 %32, 0
  br i1 %tobool12.not.i.i.i.i, label %do.end32.i.i.i.i, label %do.body24.i.i.i.i, !prof !218

do.body24.i.i.i.i:                                ; preds = %do.body10.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2299, 0\0A.popsection", ""() #15, !srcloc !267
  unreachable

do.end32.i.i.i.i:                                 ; preds = %do.body10.i.i.i.i
  %shl.i.i.i.i = shl i32 %pfn.addr.0.i.i.i.i, 12
  %or.i.i.i.i = or i32 %shl.i.i.i.i, %prot
  tail call void @set_pte_at(ptr noundef %1, i32 noundef %addr.addr.0.i.i.i.i, ptr noundef %pte.0.i.i.i.i, i32 noundef %or.i.i.i.i) #15
  %inc.i.i.i.i = add i32 %pfn.addr.0.i.i.i.i, 1
  %incdec.ptr.i.i.i.i = getelementptr i32, ptr %pte.0.i.i.i.i, i32 1
  %add.i.i.i.i = add i32 %addr.addr.0.i.i.i.i, 4096
  %cmp.not.i.i.i.i = icmp eq i32 %add.i.i.i.i, %and70.add1
  br i1 %cmp.not.i.i.i.i, label %do.cond81, label %do.end32.i.i.i.i.do.body10.i.i.i.i_crit_edge

do.end32.i.i.i.i.do.body10.i.i.i.i_crit_edge:     ; preds = %do.end32.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body10.i.i.i.i

do.cond81:                                        ; preds = %do.end32.i.i.i.i
  tail call void @_raw_spin_unlock(ptr noundef %19) #15
  tail call void @kunmap_local_indexed(ptr noundef nonnull %add.ptr8.i.i.i.i) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %33 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i1.i.i.i.i.i to ptr
  %task.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i.i.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 213
  %37 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %pagefault_disabled.i.i.i.i.i.i.i, align 8
  %dec.i.i.i.i.i.i.i = add i32 %38, -1
  store i32 %dec.i.i.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %39 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i.i.i = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  %sub.i.i.i.i.i.i = add i32 %42, -1
  store volatile i32 %sub.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  %incdec.ptr = getelementptr [2 x i32], ptr %pgd.0, i32 1
  %cmp82.not = icmp eq i32 %and70.add1, %add1
  br i1 %cmp82.not, label %do.cond81.cleanup_crit_edge, label %do.cond81.do.body68_crit_edge

do.cond81.do.body68_crit_edge:                    ; preds = %do.cond81
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body68

do.cond81.cleanup_crit_edge:                      ; preds = %do.cond81
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cleanup:                                          ; preds = %do.cond81.cleanup_crit_edge, %cond.end.i.i.i.i.cleanup_crit_edge, %land.lhs.true.i.i.i.i.cleanup_crit_edge, %do.body68.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.then41.cleanup_crit_edge, %if.then, %land.rhs.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %if.then ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %if.then41.cleanup_crit_edge ], [ -22, %land.rhs.cleanup_crit_edge ], [ -12, %land.lhs.true.i.i.i.i.cleanup_crit_edge ], [ -12, %cond.end.i.i.i.i.cleanup_crit_edge ], [ -12, %do.body68.cleanup_crit_edge ], [ 0, %do.cond81.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_cache_range(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @remap_pfn_range(ptr noundef %vma, i32 noundef %addr, i32 noundef %pfn, i32 noundef %size, i32 noundef %prot) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call1 = tail call i32 @remap_pfn_range_notrack(ptr noundef %vma, i32 noundef %addr, i32 noundef %pfn, i32 noundef %size, i32 noundef %prot)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vm_iomap_memory(ptr noundef %vma, i32 noundef %start, i32 noundef %len) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = xor i32 %start, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %0, i32 %len)
  %cmp = icmp ult i32 %0, %len
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %and = and i32 %start, 4095
  %shr = lshr i32 %start, 12
  %add1 = add i32 %len, 4095
  %add2 = add i32 %add1, %and
  %shr3 = lshr i32 %add2, 12
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 13
  %1 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %vm_pgoff, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %shr3, i32 %2)
  %cmp8 = icmp ult i32 %shr3, %2
  br i1 %cmp8, label %if.end.cleanup_crit_edge, label %if.end10

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %sub = sub i32 %shr3, %2
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %3 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %vm_end, align 4
  %5 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vma, align 4
  %sub14 = sub i32 %4, %6
  %shr15 = lshr i32 %sub14, 12
  call void @__sanitizer_cov_trace_cmp4(i32 %shr15, i32 %sub)
  %cmp16 = icmp ugt i32 %shr15, %sub
  br i1 %cmp16, label %if.end10.cleanup_crit_edge, label %if.end18

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end18:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  %add12 = add i32 %2, %shr
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %7 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vm_page_prot, align 4
  %call1.i.i = tail call i32 @remap_pfn_range_notrack(ptr noundef %vma, i32 noundef %6, i32 noundef %add12, i32 noundef %sub14, i32 noundef %8) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %if.end10.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1.i.i, %if.end18 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.end10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @apply_to_page_range(ptr noundef %mm, i32 noundef %addr, i32 noundef %size, ptr noundef %fn, ptr noundef %data) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__apply_to_page_range(ptr noundef %mm, i32 noundef %addr, i32 noundef %size, ptr noundef %fn, ptr noundef %data, i1 noundef zeroext true)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__apply_to_page_range(ptr noundef %mm, i32 noundef %addr, i32 noundef %size, ptr noundef readonly %fn, ptr noundef %data, i1 noundef zeroext %create) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %size, %addr
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %addr)
  %cmp.not = icmp ugt i32 %add, %addr
  br i1 %cmp.not, label %if.end21, label %entry.cleanup.sink.split_crit_edge, !prof !218

entry.cleanup.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.sink.split

if.end21:                                         ; preds = %entry
  %pgd22 = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 8
  %0 = ptrtoint ptr %pgd22 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pgd22, align 4
  %shr.i = lshr i32 %addr, 21
  %add.ptr.i = getelementptr [2 x i32], ptr %1, i32 %shr.i
  %sub26 = add i32 %add, -1
  %cmp.i181.i.i.i = icmp eq ptr %mm, @init_mm
  %tobool72.not.i.i.i.i = icmp eq ptr %fn, null
  br label %do.body23

do.body23:                                        ; preds = %do.cond152.do.body23_crit_edge, %if.end21
  %pgd.0 = phi ptr [ %add.ptr.i, %if.end21 ], [ %incdec.ptr, %do.cond152.do.body23_crit_edge ]
  %addr.addr.0 = phi i32 [ %addr, %if.end21 ], [ %and.add, %do.cond152.do.body23_crit_edge ]
  %add24 = add i32 %addr.addr.0, 2097152
  %and = and i32 %add24, -2097152
  %sub = add i32 %and, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %sub26)
  %cmp27 = icmp ult i32 %sub, %sub26
  %and.add = select i1 %cmp27, i32 %and, i32 %add
  br i1 %create, label %if.then.i, label %do.body18.i.i.i

if.then.i:                                        ; preds = %do.body23
  %tobool1.not.i = icmp eq ptr %pgd.0, null
  br i1 %tobool1.not.i, label %if.then.i.cleanup_crit_edge, label %if.end22.i.i.i

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.body18.i.i.i:                                  ; preds = %do.body23
  %2 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pgd.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool19.not.not.i.i.i = icmp eq i32 %3, 0
  br i1 %tobool19.not.not.i.i.i, label %do.body18.i.i.i.do.cond152_crit_edge, label %if.end22.thread.i.i.i

do.body18.i.i.i.do.cond152_crit_edge:             ; preds = %do.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond152

if.end22.i.i.i:                                   ; preds = %if.then.i
  %4 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pgd.0, align 4
  %and.i.i.i = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool23.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool23.not.i.i.i, label %if.then.i.i.i.i, label %if.end22.i.i.i.land.rhs.i.i.i_crit_edge

if.end22.i.i.i.land.rhs.i.i.i_crit_edge:          ; preds = %if.end22.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs.i.i.i

if.end22.thread.i.i.i:                            ; preds = %do.body18.i.i.i
  %and179.i.i.i = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and179.i.i.i)
  %tobool23.not180.i.i.i = icmp eq i32 %and179.i.i.i, 0
  br i1 %tobool23.not180.i.i.i, label %if.end137.thread.i.i.i, label %if.end22.thread.i.i.i.land.rhs.i.i.i_crit_edge

if.end22.thread.i.i.i.land.rhs.i.i.i_crit_edge:   ; preds = %if.end22.thread.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs.i.i.i

if.end137.thread.i.i.i:                           ; preds = %if.end22.thread.i.i.i
  br i1 %cmp.i181.i.i.i, label %cond.true36.i.i.i.i, label %cond.false38.i.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.end22.thread.i.i.i.land.rhs.i.i.i_crit_edge, %if.end22.i.i.i.land.rhs.i.i.i_crit_edge
  %.b173.i.i.i = load i1, ptr @apply_to_pmd_range.__already_done, align 1
  br i1 %.b173.i.i.i, label %land.rhs.i.i.i.cleanup_crit_edge, label %if.then39.i.i.i, !prof !218

land.rhs.i.i.i.cleanup_crit_edge:                 ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then39.i.i.i:                                  ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @apply_to_pmd_range.__already_done, align 1
  br label %cleanup.sink.split

if.then.i.i.i.i:                                  ; preds = %if.end22.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool1.not.i.i.i.i = icmp eq i32 %5, 0
  br i1 %cmp.i181.i.i.i, label %cond.true.i.i.i.i, label %cond.false9.i.i.i.i

cond.true.i.i.i.i:                                ; preds = %if.then.i.i.i.i
  br i1 %tobool1.not.i.i.i.i, label %land.lhs.true.i.i.i.i, label %cond.true.i.i.i.i.cond.false.i.i.i.i_crit_edge, !prof !230

cond.true.i.i.i.i.cond.false.i.i.i.i_crit_edge:   ; preds = %cond.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %cond.true.i.i.i.i
  %call.i.i.i.i = tail call i32 @__pte_alloc_kernel(ptr noundef nonnull %pgd.0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool5.not.i.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool5.not.i.i.i.i, label %land.lhs.true.i.i.i.i.cond.false.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i.cleanup_crit_edge

land.lhs.true.i.i.i.i.cleanup_crit_edge:          ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true.i.i.i.i.cond.false.i.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i.i.i

cond.false.i.i.i.i:                               ; preds = %land.lhs.true.i.i.i.i.cond.false.i.i.i.i_crit_edge, %cond.true.i.i.i.i.cond.false.i.i.i.i_crit_edge
  %6 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pgd.0, align 4
  %and1.i.i.i.i.i.i = and i32 %7, -4096
  %8 = tail call i32 asm "@ __pv_stub\0A1:\09sub\09$0, $1, $2\0A2:\09sub\09$0, $0, $3\0A\09.pushsection .pv_table,\22a\22\0A\09.long\091b - ., 2b - .\0A\09.popsection\0A", "=r,r,I,I"(i32 %and1.i.i.i.i.i.i, i32 -2130706432, i32 8454144) #19, !srcloc !268
  %9 = inttoptr i32 %8 to ptr
  %shr.i.i.i.i.i.i = lshr i32 %addr.addr.0, 12
  %and.i.i.i.i.i.i = and i32 %shr.i.i.i.i.i.i, 511
  %add.ptr.i.i.i.i.i = getelementptr i32, ptr %9, i32 %and.i.i.i.i.i.i
  br label %cond.end31.i.i.i.i

cond.false9.i.i.i.i:                              ; preds = %if.then.i.i.i.i
  br i1 %tobool1.not.i.i.i.i, label %land.lhs.true19.i.i.i.i, label %cond.false9.i.i.i.i.cond.false23.i.i.i.i_crit_edge, !prof !230

cond.false9.i.i.i.i.cond.false23.i.i.i.i_crit_edge: ; preds = %cond.false9.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false23.i.i.i.i

land.lhs.true19.i.i.i.i:                          ; preds = %cond.false9.i.i.i.i
  %call20.i.i.i.i = tail call i32 @__pte_alloc(ptr noundef %mm, ptr noundef nonnull %pgd.0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i.i.i.i)
  %tobool21.not.i.i.i.i = icmp eq i32 %call20.i.i.i.i, 0
  br i1 %tobool21.not.i.i.i.i, label %land.lhs.true19.i.i.i.i.cond.false23.i.i.i.i_crit_edge, label %land.lhs.true19.i.i.i.i.cleanup_crit_edge

land.lhs.true19.i.i.i.i.cleanup_crit_edge:        ; preds = %land.lhs.true19.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true19.i.i.i.i.cond.false23.i.i.i.i_crit_edge: ; preds = %land.lhs.true19.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false23.i.i.i.i

cond.false23.i.i.i.i:                             ; preds = %land.lhs.true19.i.i.i.i.cond.false23.i.i.i.i_crit_edge, %cond.false9.i.i.i.i.cond.false23.i.i.i.i_crit_edge
  %10 = load ptr, ptr @mem_map, align 4
  %11 = ptrtoint ptr %pgd.0 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %pgd.0, align 4
  %shr.i.i.i.i.i = lshr i32 %12, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %13 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i.i.i.i.i = sub i32 %shr.i.i.i.i.i, %13
  %ptl.i.i.i.i.i.i = getelementptr %struct.page, ptr %10, i32 %sub.i.i.i.i.i, i32 1, i32 0, i32 3
  %14 = ptrtoint ptr %ptl.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ptl.i.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr %struct.page, ptr %10, i32 %sub.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %16 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i.i.i.i = or i32 %16, 512
  %17 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i.i.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i.i = add i32 %20, 1
  store volatile i32 %add.i.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %21 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i.i.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i1.i.i.i.i.i.i to ptr
  %task.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task.i.i.i.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 213
  %25 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %pagefault_disabled.i.i.i.i.i.i.i.i, align 8
  %inc.i.i.i.i.i.i.i.i = add i32 %26, 1
  store i32 %inc.i.i.i.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i.i.i.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr.i.i.i.i, i32 noundef %or.i.i.i.i.i) #15
  %shr.i136.i.i.i.i = lshr i32 %addr.addr.0, 12
  %and.i.i.i.i.i = and i32 %shr.i136.i.i.i.i, 511
  %add.ptr27.i.i.i.i = getelementptr i32, ptr %call.i.i.i.i.i.i, i32 %and.i.i.i.i.i
  tail call void @_raw_spin_lock(ptr noundef %15) #15
  br label %cond.end31.i.i.i.i

cond.end31.i.i.i.i:                               ; preds = %cond.false23.i.i.i.i, %cond.false.i.i.i.i
  %ptl.0.i.i.i.i = phi ptr [ inttoptr (i32 -1 to ptr), %cond.false.i.i.i.i ], [ %15, %cond.false23.i.i.i.i ]
  %cond32.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i.i, %cond.false.i.i.i.i ], [ %add.ptr27.i.i.i.i, %cond.false23.i.i.i.i ]
  %tobool33.not.i.i.i.i = icmp eq ptr %cond32.i.i.i.i, null
  br i1 %tobool33.not.i.i.i.i, label %cond.end31.i.i.i.i.cleanup_crit_edge, label %cond.end31.i.i.i.i.do.body.i.i.i.i_crit_edge

cond.end31.i.i.i.i.do.body.i.i.i.i_crit_edge:     ; preds = %cond.end31.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i.i.i.i

cond.end31.i.i.i.i.cleanup_crit_edge:             ; preds = %cond.end31.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.true36.i.i.i.i:                              ; preds = %if.end137.thread.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %and1.i.i137.i.i.i.i = and i32 %3, -4096
  %27 = tail call i32 asm "@ __pv_stub\0A1:\09sub\09$0, $1, $2\0A2:\09sub\09$0, $0, $3\0A\09.pushsection .pv_table,\22a\22\0A\09.long\091b - ., 2b - .\0A\09.popsection\0A", "=r,r,I,I"(i32 %and1.i.i137.i.i.i.i, i32 -2130706432, i32 8454144) #19, !srcloc !268
  %28 = inttoptr i32 %27 to ptr
  %shr.i.i138.i.i.i.i = lshr i32 %addr.addr.0, 12
  %and.i.i139.i.i.i.i = and i32 %shr.i.i138.i.i.i.i, 511
  %add.ptr.i140.i.i.i.i = getelementptr i32, ptr %28, i32 %and.i.i139.i.i.i.i
  br label %do.body.i.i.i.i

cond.false38.i.i.i.i:                             ; preds = %if.end137.thread.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %29 = load ptr, ptr @mem_map, align 4
  %shr.i141.i.i.i.i = lshr i32 %3, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %30 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i142.i.i.i.i = sub i32 %shr.i141.i.i.i.i, %30
  %ptl.i.i143.i.i.i.i = getelementptr %struct.page, ptr %29, i32 %sub.i142.i.i.i.i, i32 1, i32 0, i32 3
  %31 = ptrtoint ptr %ptl.i.i143.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ptl.i.i143.i.i.i.i, align 4
  %add.ptr45.i.i.i.i = getelementptr %struct.page, ptr %29, i32 %sub.i142.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %33 = load i32, ptr @pgprot_kernel, align 4
  %or.i144.i.i.i.i = or i32 %33, 512
  %34 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i145.i.i.i.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i145.i.i.i.i to ptr
  %preempt_count.i.i.i.i146.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i146.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i146.i.i.i.i, align 4
  %add.i.i.i147.i.i.i.i = add i32 %37, 1
  store volatile i32 %add.i.i.i147.i.i.i.i, ptr %preempt_count.i.i.i.i146.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %38 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i148.i.i.i.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i1.i.i148.i.i.i.i to ptr
  %task.i.i.i.i149.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %task.i.i.i.i149.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %task.i.i.i.i149.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i150.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %41, i32 0, i32 213
  %42 = ptrtoint ptr %pagefault_disabled.i.i.i.i150.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %pagefault_disabled.i.i.i.i150.i.i.i.i, align 8
  %inc.i.i.i.i151.i.i.i.i = add i32 %43, 1
  store i32 %inc.i.i.i.i151.i.i.i.i, ptr %pagefault_disabled.i.i.i.i150.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i152.i.i.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr45.i.i.i.i, i32 noundef %or.i144.i.i.i.i) #15
  %shr.i153.i.i.i.i = lshr i32 %addr.addr.0, 12
  %and.i154.i.i.i.i = and i32 %shr.i153.i.i.i.i, 511
  %add.ptr48.i.i.i.i = getelementptr i32, ptr %call.i.i152.i.i.i.i, i32 %and.i154.i.i.i.i
  tail call void @_raw_spin_lock(ptr noundef %32) #15
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %cond.false38.i.i.i.i, %cond.true36.i.i.i.i, %cond.end31.i.i.i.i.do.body.i.i.i.i_crit_edge
  %ptl.2.i.i.i.i = phi ptr [ %ptl.0.i.i.i.i, %cond.end31.i.i.i.i.do.body.i.i.i.i_crit_edge ], [ inttoptr (i32 -1 to ptr), %cond.true36.i.i.i.i ], [ %32, %cond.false38.i.i.i.i ]
  %pte.0.i.i.i.i = phi ptr [ %cond32.i.i.i.i, %cond.end31.i.i.i.i.do.body.i.i.i.i_crit_edge ], [ %add.ptr.i140.i.i.i.i, %cond.true36.i.i.i.i ], [ %add.ptr48.i.i.i.i, %cond.false38.i.i.i.i ]
  br i1 %tobool72.not.i.i.i.i, label %do.body.i.i.i.i.if.end87.i.i.i.i_crit_edge, label %do.body.i.i.i.i.do.body74.i.i.i.i_crit_edge

do.body.i.i.i.i.do.body74.i.i.i.i_crit_edge:      ; preds = %do.body.i.i.i.i
  br label %do.body74.i.i.i.i

do.body.i.i.i.i.if.end87.i.i.i.i_crit_edge:       ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end87.i.i.i.i

do.body74.i.i.i.i:                                ; preds = %do.cond84.i.i.i.i.do.body74.i.i.i.i_crit_edge, %do.body.i.i.i.i.do.body74.i.i.i.i_crit_edge
  %pte.1.i.i.i.i = phi ptr [ %pte.2.i.i.i.i, %do.cond84.i.i.i.i.do.body74.i.i.i.i_crit_edge ], [ %pte.0.i.i.i.i, %do.body.i.i.i.i.do.body74.i.i.i.i_crit_edge ]
  %addr.addr.0.i.i.i.i = phi i32 [ %add.i.i.i.i, %do.cond84.i.i.i.i.do.body74.i.i.i.i_crit_edge ], [ %addr.addr.0, %do.body.i.i.i.i.do.body74.i.i.i.i_crit_edge ]
  br i1 %create, label %do.body74.i.i.i.i.if.then78.i.i.i.i_crit_edge, label %lor.lhs.false76.i.i.i.i

do.body74.i.i.i.i.if.then78.i.i.i.i_crit_edge:    ; preds = %do.body74.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then78.i.i.i.i

lor.lhs.false76.i.i.i.i:                          ; preds = %do.body74.i.i.i.i
  %44 = ptrtoint ptr %pte.1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %pte.1.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool77.not.i.i.i.i = icmp eq i32 %45, 0
  br i1 %tobool77.not.i.i.i.i, label %lor.lhs.false76.i.i.i.i.do.cond84.i.i.i.i_crit_edge, label %lor.lhs.false76.i.i.i.i.if.then78.i.i.i.i_crit_edge

lor.lhs.false76.i.i.i.i.if.then78.i.i.i.i_crit_edge: ; preds = %lor.lhs.false76.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then78.i.i.i.i

lor.lhs.false76.i.i.i.i.do.cond84.i.i.i.i_crit_edge: ; preds = %lor.lhs.false76.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond84.i.i.i.i

if.then78.i.i.i.i:                                ; preds = %lor.lhs.false76.i.i.i.i.if.then78.i.i.i.i_crit_edge, %do.body74.i.i.i.i.if.then78.i.i.i.i_crit_edge
  %incdec.ptr.i.i.i.i = getelementptr i32, ptr %pte.1.i.i.i.i, i32 1
  %call79.i.i.i.i = tail call i32 %fn(ptr noundef %pte.1.i.i.i.i, i32 noundef %addr.addr.0.i.i.i.i, ptr noundef %data) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79.i.i.i.i)
  %tobool80.not.i.i.i.i = icmp eq i32 %call79.i.i.i.i, 0
  br i1 %tobool80.not.i.i.i.i, label %if.then78.i.i.i.i.do.cond84.i.i.i.i_crit_edge, label %if.then78.i.i.i.i.if.end87.i.i.i.i_crit_edge

if.then78.i.i.i.i.if.end87.i.i.i.i_crit_edge:     ; preds = %if.then78.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end87.i.i.i.i

if.then78.i.i.i.i.do.cond84.i.i.i.i_crit_edge:    ; preds = %if.then78.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond84.i.i.i.i

do.cond84.i.i.i.i:                                ; preds = %if.then78.i.i.i.i.do.cond84.i.i.i.i_crit_edge, %lor.lhs.false76.i.i.i.i.do.cond84.i.i.i.i_crit_edge
  %pte.2.i.i.i.i = phi ptr [ %incdec.ptr.i.i.i.i, %if.then78.i.i.i.i.do.cond84.i.i.i.i_crit_edge ], [ %pte.1.i.i.i.i, %lor.lhs.false76.i.i.i.i.do.cond84.i.i.i.i_crit_edge ]
  %add.i.i.i.i = add i32 %addr.addr.0.i.i.i.i, 4096
  %cmp85.not.i.i.i.i = icmp eq i32 %add.i.i.i.i, %and.add
  br i1 %cmp85.not.i.i.i.i, label %do.cond84.i.i.i.i.if.end87.i.i.i.i_crit_edge, label %do.cond84.i.i.i.i.do.body74.i.i.i.i_crit_edge

do.cond84.i.i.i.i.do.body74.i.i.i.i_crit_edge:    ; preds = %do.cond84.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body74.i.i.i.i

do.cond84.i.i.i.i.if.end87.i.i.i.i_crit_edge:     ; preds = %do.cond84.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end87.i.i.i.i

if.end87.i.i.i.i:                                 ; preds = %do.cond84.i.i.i.i.if.end87.i.i.i.i_crit_edge, %if.then78.i.i.i.i.if.end87.i.i.i.i_crit_edge, %do.body.i.i.i.i.if.end87.i.i.i.i_crit_edge
  %err.2.i.i.i.i = phi i32 [ 0, %do.body.i.i.i.i.if.end87.i.i.i.i_crit_edge ], [ 0, %do.cond84.i.i.i.i.if.end87.i.i.i.i_crit_edge ], [ %call79.i.i.i.i, %if.then78.i.i.i.i.if.end87.i.i.i.i_crit_edge ]
  br i1 %cmp.i181.i.i.i, label %if.end87.i.i.i.i.apply_to_pte_range.exit.i.i.i_crit_edge, label %do.body94.i.i.i.i

if.end87.i.i.i.i.apply_to_pte_range.exit.i.i.i_crit_edge: ; preds = %if.end87.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %apply_to_pte_range.exit.i.i.i

do.body94.i.i.i.i:                                ; preds = %if.end87.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_unlock(ptr noundef %ptl.2.i.i.i.i) #15
  tail call void @kunmap_local_indexed(ptr noundef %pte.0.i.i.i.i) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %46 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i.i.i = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i1.i.i.i.i.i to ptr
  %task.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %task.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %task.i.i.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 213
  %50 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %pagefault_disabled.i.i.i.i.i.i.i, align 8
  %dec.i.i.i.i.i.i.i = add i32 %51, -1
  store i32 %dec.i.i.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %52 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i.i.i = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  %sub.i.i.i.i.i.i = add i32 %55, -1
  store volatile i32 %sub.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  br label %apply_to_pte_range.exit.i.i.i

apply_to_pte_range.exit.i.i.i:                    ; preds = %do.body94.i.i.i.i, %if.end87.i.i.i.i.apply_to_pte_range.exit.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.2.i.i.i.i)
  %tobool140.not.i.i.i = icmp eq i32 %err.2.i.i.i.i, 0
  br i1 %tobool140.not.i.i.i, label %apply_to_pte_range.exit.i.i.i.do.cond152_crit_edge, label %apply_to_pte_range.exit.i.i.i.cleanup_crit_edge

apply_to_pte_range.exit.i.i.i.cleanup_crit_edge:  ; preds = %apply_to_pte_range.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

apply_to_pte_range.exit.i.i.i.do.cond152_crit_edge: ; preds = %apply_to_pte_range.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond152

do.cond152:                                       ; preds = %apply_to_pte_range.exit.i.i.i.do.cond152_crit_edge, %do.body18.i.i.i.do.cond152_crit_edge
  %incdec.ptr = getelementptr [2 x i32], ptr %pgd.0, i32 1
  %cmp153.not = icmp eq i32 %and.add, %add
  br i1 %cmp153.not, label %do.cond152.cleanup_crit_edge, label %do.cond152.do.body23_crit_edge

do.cond152.do.body23_crit_edge:                   ; preds = %do.cond152
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body23

do.cond152.cleanup_crit_edge:                     ; preds = %do.cond152
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.then39.i.i.i, %entry.cleanup.sink.split_crit_edge
  %.sink = phi i32 [ 2578, %if.then39.i.i.i ], [ 2676, %entry.cleanup.sink.split_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.cond152.cleanup_crit_edge, %apply_to_pte_range.exit.i.i.i.cleanup_crit_edge, %cond.end31.i.i.i.i.cleanup_crit_edge, %land.lhs.true19.i.i.i.i.cleanup_crit_edge, %land.lhs.true.i.i.i.i.cleanup_crit_edge, %land.rhs.i.i.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %land.rhs.i.i.i.cleanup_crit_edge ], [ -22, %cleanup.sink.split ], [ -12, %if.then.i.cleanup_crit_edge ], [ %err.2.i.i.i.i, %apply_to_pte_range.exit.i.i.i.cleanup_crit_edge ], [ -12, %cond.end31.i.i.i.i.cleanup_crit_edge ], [ -12, %land.lhs.true.i.i.i.i.cleanup_crit_edge ], [ -12, %land.lhs.true19.i.i.i.i.cleanup_crit_edge ], [ 0, %do.cond152.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @apply_to_existing_page_range(ptr noundef %mm, i32 noundef %addr, i32 noundef %size, ptr noundef %fn, ptr noundef %data) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__apply_to_page_range(ptr noundef %mm, i32 noundef %addr, i32 noundef %size, ptr noundef %fn, ptr noundef %data, i1 noundef zeroext false)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @finish_mkwrite_fault(ptr nocapture noundef %vmf) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags, align 4
  %and = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b80 = load i1, ptr @finish_mkwrite_fault.__already_done, align 1
  br i1 %.b80, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !218

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @finish_mkwrite_fault.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3162, i32 noundef 9, ptr noundef null) #15
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %pmd = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %4 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pmd, align 4
  %6 = load ptr, ptr @mem_map, align 4
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %5, align 4
  %shr.i = lshr i32 %8, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %9 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %shr.i, %9
  %ptl.i.i = getelementptr %struct.page, ptr %6, i32 %sub.i, i32 1, i32 0, i32 3
  %10 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ptl.i.i, align 4
  %add.ptr = getelementptr %struct.page, ptr %6, i32 %sub.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %12 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %12, 512
  %13 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %16, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %17 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 213
  %21 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %22, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr, i32 noundef %or.i) #15
  %address = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %23 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %address, align 4
  %shr.i81 = lshr i32 %24, 12
  %and.i = and i32 %shr.i81, 511
  %add.ptr42 = getelementptr i32, ptr %call.i.i, i32 %and.i
  %ptl = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %25 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %11, ptr %ptl, align 4
  tail call void @_raw_spin_lock(ptr noundef %11) #15
  %pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %26 = ptrtoint ptr %pte to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %add.ptr42, ptr %pte, align 4
  %27 = ptrtoint ptr %add.ptr42 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %add.ptr42, align 4
  %29 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 4
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %31)
  %cmp.i.not = icmp eq i32 %28, %31
  br i1 %cmp.i.not, label %if.end62, label %if.then47

if.then47:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  %32 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ptl, align 4
  tail call void @_raw_spin_unlock(ptr noundef %33) #15
  %34 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pte, align 4
  tail call void @kunmap_local_indexed(ptr noundef %35) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %36 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 213
  %40 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %41, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %42 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %45, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br label %return

if.end62:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @wp_page_reuse(ptr noundef %vmf)
  br label %return

return:                                           ; preds = %if.end62, %if.then47
  %retval.0 = phi i32 [ 0, %if.end62 ], [ 256, %if.then47 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__kunmap_atomic(ptr noundef %addr) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kunmap_local_indexed(ptr noundef %addr) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1 = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i1 to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i.i, align 8
  %pagefault_disabled.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 213
  %4 = ptrtoint ptr %pagefault_disabled.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pagefault_disabled.i.i, align 8
  %dec.i.i = add i32 %5, -1
  store i32 %dec.i.i, ptr %pagefault_disabled.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %6 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i, align 4
  %sub.i = add i32 %9, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wp_page_reuse(ptr nocapture noundef readonly %vmf) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %page2 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %2 = ptrtoint ptr %page2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %page2, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %cmp.i.not.i.i = icmp eq i32 %5, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %if.then.if.end_crit_edge, !prof !230

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef nonnull %3, ptr noundef nonnull @.str.37) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #15, !srcloc !269
  unreachable

if.end:                                           ; preds = %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %address = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %6 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %address, align 4
  %8 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %shr = lshr i32 %10, 12
  tail call void @flush_cache_page(ptr noundef %1, i32 noundef %7, i32 noundef %shr) #15
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %8, align 4
  %or.i.i36 = or i32 %12, 66
  %vm_flags.i = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %13 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vm_flags.i, align 4
  %and.i = and i32 %14, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and.i.i.i = and i32 %or.i.i36, -129
  %spec.select.i = select i1 %tobool.not.i, i32 %or.i.i36, i32 %and.i.i.i, !prof !230
  %15 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %address, align 4
  %pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %17 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pte, align 4
  %call8 = tail call i32 @ptep_set_access_flags(ptr noundef %1, i32 noundef %16, ptr noundef %18, i32 noundef %spec.select.i, i32 noundef 1) #15
  %ptl = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %19 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ptl, align 4
  tail call void @_raw_spin_unlock(ptr noundef %20) #15
  %21 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pte, align 4
  tail call void @kunmap_local_indexed(ptr noundef %22) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %23 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 2
  %25 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %26, i32 0, i32 213
  %27 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %28, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %29 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %32, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %33 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !228
  %34 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cpu.i, align 4
  %arrayidx13.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %37
  %38 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx13.i, align 4
  %add.i = add i32 %39, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 24) to i32)
  %40 = inttoptr i32 %add.i to ptr
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %40, align 4
  %add14.i = add i32 %42, 1
  store i32 %add14.i, ptr %40, align 4
  %43 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !229
  %and.i.i.i37 = and i32 %43, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i37)
  %tobool.not.i38 = icmp eq i32 %and.i.i.i37, 0
  br i1 %tobool.not.i38, label %if.then.i, label %if.end.count_vm_event.exit_crit_edge, !prof !230

if.end.count_vm_event.exit_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %count_vm_event.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %count_vm_event.exit

count_vm_event.exit:                              ; preds = %if.then.i, %if.end.count_vm_event.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %33) #15, !srcloc !231
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unmap_mapping_folio(ptr noundef %folio) local_unnamed_addr #2 align 64 {
entry:
  %details = alloca %struct.zap_details, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping1 = getelementptr inbounds %struct.anon.101, ptr %folio, i32 0, i32 2
  %0 = ptrtoint ptr %mapping1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping1, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %details) #15
  %2 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_locked.exit, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

folio_test_locked.exit:                           ; preds = %entry
  %5 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %folio, align 4
  %and1.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %do.body4, label %do.end9, !prof !230

do.body4:                                         ; preds = %folio_test_locked.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3375, 0\0A.popsection", ""() #15, !srcloc !271
  unreachable

do.end9:                                          ; preds = %folio_test_locked.exit
  %index = getelementptr inbounds %struct.anon.101, ptr %folio, i32 0, i32 3
  %7 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index, align 4
  %9 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %10)
  %cmp.i.not.i.i.i = icmp eq i32 %10, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %PageHead.exit.i.i, !prof !230

if.then.i.i.i:                                    ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.30) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #15, !srcloc !272
  unreachable

PageHead.exit.i.i:                                ; preds = %do.end9
  %11 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %folio, align 4
  %13 = and i32 %12, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i.i35 = icmp eq i32 %13, 0
  br i1 %tobool.not.i.i35, label %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge, label %if.end.i.i

PageHead.exit.i.i.folio_nr_pages.exit_crit_edge:  ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %folio_nr_pages.exit

if.end.i.i:                                       ; preds = %PageHead.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %compound_nr.i.i = getelementptr %struct.page, ptr %folio, i32 1, i32 1, i32 0, i32 2
  %14 = ptrtoint ptr %compound_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %compound_nr.i.i, align 4
  br label %folio_nr_pages.exit

folio_nr_pages.exit:                              ; preds = %if.end.i.i, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge
  %retval.0.i.i = phi i32 [ %15, %if.end.i.i ], [ 1, %PageHead.exit.i.i.folio_nr_pages.exit_crit_edge ]
  %16 = ptrtoint ptr %details to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %1, ptr %details, align 8
  %single_folio = getelementptr inbounds %struct.zap_details, ptr %details, i32 0, i32 1
  %17 = ptrtoint ptr %single_folio to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %folio, ptr %single_folio, align 4
  %i_mmap_rwsem.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 6
  tail call void @down_write(ptr noundef %i_mmap_rwsem.i) #15
  %i_mmap = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 5
  %18 = ptrtoint ptr %i_mmap to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %i_mmap, align 4
  %cmp.not = icmp eq ptr %19, null
  br i1 %cmp.not, label %folio_nr_pages.exit.if.end25_crit_edge, label %if.then23, !prof !218

folio_nr_pages.exit.if.end25_crit_edge:           ; preds = %folio_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end25

if.then23:                                        ; preds = %folio_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #17
  %add = add i32 %8, -1
  %sub = add i32 %add, %retval.0.i.i
  call fastcc void @unmap_mapping_range_tree(ptr noundef %i_mmap, i32 noundef %8, i32 noundef %sub, ptr noundef nonnull %details)
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %folio_nr_pages.exit.if.end25_crit_edge
  call void @up_write(ptr noundef %i_mmap_rwsem.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %details) #15
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @unmap_mapping_range_tree(ptr noundef %root, i32 noundef %first_index, i32 noundef %last_index, ptr noundef %details) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call ptr @vma_interval_tree_iter_first(ptr noundef %root, i32 noundef %first_index, i32 noundef %last_index) #15
  %tobool.not31 = icmp eq ptr %call, null
  br i1 %tobool.not31, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %vma.032 = phi ptr [ %call12, %for.body.for.body_crit_edge ], [ %call, %entry.for.body_crit_edge ]
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %vma.032, i32 0, i32 13
  %0 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_pgoff, align 4
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.032, i32 0, i32 1
  %2 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_end.i, align 4
  %4 = ptrtoint ptr %vma.032 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vma.032, align 4
  %sub.i = sub i32 %3, %5
  %shr.i = lshr i32 %sub.i, 12
  %add = add i32 %1, -1
  %sub = add i32 %add, %shr.i
  %6 = tail call i32 @llvm.umin.i32(i32 %sub, i32 %last_index)
  %7 = tail call i32 @llvm.usub.sat.i32(i32 %first_index, i32 %1)
  %shl = shl i32 %7, 12
  %add6 = add i32 %shl, %5
  %sub7 = sub i32 %6, %1
  %add8 = shl i32 %sub7, 12
  %shl9 = add i32 %5, 4096
  %add11 = sub i32 %shl9, %add6
  %sub.i30 = add i32 %add11, %add8
  tail call fastcc void @zap_page_range_single(ptr noundef nonnull %vma.032, i32 noundef %add6, i32 noundef %sub.i30, ptr noundef %details) #15
  %call12 = tail call ptr @vma_interval_tree_iter_next(ptr noundef nonnull %vma.032, i32 noundef %first_index, i32 noundef %last_index) #15
  %tobool.not = icmp eq ptr %call12, null
  br i1 %tobool.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unmap_mapping_pages(ptr noundef %mapping, i32 noundef %start, i32 noundef %nr, i1 noundef zeroext %even_cows) #2 align 64 {
entry:
  %details = alloca %struct.zap_details, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %details) #15
  %0 = ptrtoint ptr %details to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 0, ptr %details, align 8
  %spec.select = select i1 %even_cows, ptr null, ptr %mapping
  store ptr %spec.select, ptr %details, align 8
  %i_mmap_rwsem.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 6
  tail call void @down_write(ptr noundef %i_mmap_rwsem.i) #15
  %i_mmap = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 5
  %1 = ptrtoint ptr %i_mmap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %i_mmap, align 4
  %cmp1.not = icmp eq ptr %2, null
  br i1 %cmp1.not, label %entry.if.end7_crit_edge, label %if.then5, !prof !218

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

if.then5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %add = add i32 %start, -1
  %sub = add i32 %add, %nr
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %start)
  %cmp = icmp ult i32 %sub, %start
  %spec.store.select = select i1 %cmp, i32 -1, i32 %sub
  call fastcc void @unmap_mapping_range_tree(ptr noundef %i_mmap, i32 noundef %start, i32 noundef %spec.store.select, ptr noundef nonnull %details)
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %entry.if.end7_crit_edge
  call void @up_write(ptr noundef %i_mmap_rwsem.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %details) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unmap_mapping_range(ptr noundef %mapping, i64 noundef %holebegin, i64 noundef %holelen, i32 noundef %even_cows) #2 align 64 {
entry:
  %details.i = alloca %struct.zap_details, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = lshr i64 %holebegin, 12
  %conv = trunc i64 %0 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %even_cows)
  %tobool9.not = icmp eq i32 %even_cows, 0
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %details.i) #15
  %1 = ptrtoint ptr %details.i to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 0, ptr %details.i, align 8
  %spec.select.i = select i1 %tobool9.not, ptr %mapping, ptr null
  store ptr %spec.select.i, ptr %details.i, align 8
  %i_mmap_rwsem.i.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 6
  tail call void @down_write(ptr noundef %i_mmap_rwsem.i.i) #15
  %i_mmap.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 5
  %2 = ptrtoint ptr %i_mmap.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %i_mmap.i, align 4
  %cmp1.not.i = icmp eq ptr %3, null
  br i1 %cmp1.not.i, label %entry.unmap_mapping_pages.exit_crit_edge, label %if.then5.i, !prof !218

entry.unmap_mapping_pages.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_mapping_pages.exit

if.then5.i:                                       ; preds = %entry
  %add3 = add i64 %holelen, 4095
  %sub5 = add i64 %add3, %holebegin
  call void @__sanitizer_cov_trace_const_cmp8(i64 17592186044416, i64 %sub5)
  %tobool.not = icmp ult i64 %sub5, 17592186044416
  %4 = lshr i64 %add3, 12
  %conv2 = trunc i64 %4 to i32
  %add8 = sub i32 0, %conv
  %spec.select = select i1 %tobool.not, i32 %conv2, i32 %add8
  %add.i = add i32 %conv, -1
  %sub.i = add i32 %add.i, %spec.select
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %conv)
  %cmp.i = icmp ult i32 %sub.i, %conv
  %spec.store.select.i = select i1 %cmp.i, i32 -1, i32 %sub.i
  %call.i = tail call ptr @vma_interval_tree_iter_first(ptr noundef %i_mmap.i, i32 noundef %conv, i32 noundef %spec.store.select.i) #15
  %tobool.not31.i = icmp eq ptr %call.i, null
  br i1 %tobool.not31.i, label %if.then5.i.unmap_mapping_pages.exit_crit_edge, label %if.then5.i.for.body.i_crit_edge

if.then5.i.for.body.i_crit_edge:                  ; preds = %if.then5.i
  br label %for.body.i

if.then5.i.unmap_mapping_pages.exit_crit_edge:    ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_mapping_pages.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then5.i.for.body.i_crit_edge
  %vma.032.i = phi ptr [ %call12.i, %for.body.i.for.body.i_crit_edge ], [ %call.i, %if.then5.i.for.body.i_crit_edge ]
  %vm_pgoff.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.032.i, i32 0, i32 13
  %5 = ptrtoint ptr %vm_pgoff.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vm_pgoff.i, align 4
  %vm_end.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma.032.i, i32 0, i32 1
  %7 = ptrtoint ptr %vm_end.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vm_end.i.i, align 4
  %9 = ptrtoint ptr %vma.032.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vma.032.i, align 4
  %sub.i.i = sub i32 %8, %10
  %shr.i.i = lshr i32 %sub.i.i, 12
  %add.i13 = add i32 %6, -1
  %sub.i14 = add i32 %add.i13, %shr.i.i
  %11 = call i32 @llvm.umin.i32(i32 %sub.i14, i32 %spec.store.select.i) #15
  %12 = call i32 @llvm.usub.sat.i32(i32 %conv, i32 %6) #15
  %shl.i = shl i32 %12, 12
  %add6.i = add i32 %shl.i, %10
  %sub7.i = sub i32 %11, %6
  %add8.i = shl i32 %sub7.i, 12
  %shl9.i = add i32 %10, 4096
  %add11.i = sub i32 %shl9.i, %add6.i
  %sub.i30.i = add i32 %add11.i, %add8.i
  call fastcc void @zap_page_range_single(ptr noundef nonnull %vma.032.i, i32 noundef %add6.i, i32 noundef %sub.i30.i, ptr noundef nonnull %details.i) #15
  %call12.i = call ptr @vma_interval_tree_iter_next(ptr noundef nonnull %vma.032.i, i32 noundef %conv, i32 noundef %spec.store.select.i) #15
  %tobool.not.i = icmp eq ptr %call12.i, null
  br i1 %tobool.not.i, label %for.body.i.unmap_mapping_pages.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.body.i.unmap_mapping_pages.exit_crit_edge:    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %unmap_mapping_pages.exit

unmap_mapping_pages.exit:                         ; preds = %for.body.i.unmap_mapping_pages.exit_crit_edge, %if.then5.i.unmap_mapping_pages.exit_crit_edge, %entry.unmap_mapping_pages.exit_crit_edge
  call void @up_write(ptr noundef %i_mmap_rwsem.i.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %details.i) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_swap_page(ptr noundef %vmf) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %pte.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %2 = ptrtoint ptr %pte.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pte.i, align 4
  tail call void @kunmap_local_indexed(ptr noundef %3) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %4 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 213
  %8 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %dec.i.i.i.i = add i32 %9, -1
  store i32 %dec.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %10 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i550 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i550 to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %sub.i.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  %14 = ptrtoint ptr %pte.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %pte.i, align 4
  %15 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %shr3.i = lshr i32 %17, 7
  %18 = shl i32 %17, 24
  %shl.i.i = and i32 %18, 2080374784
  %or.i.i551 = or i32 %shl.i.i, %shr3.i
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %or.i.i551, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2013265920, i32 %or.i.i551)
  %cmp.i = icmp ult i32 %or.i.i551, 2013265920
  br i1 %cmp.i, label %if.end41, label %if.then9, !prof !218

if.then9:                                         ; preds = %entry
  %19 = and i32 %17, 120
  call void @__sanitizer_cov_trace_const_cmp4(i32 120, i32 %19)
  %.not = icmp eq i32 %19, 120
  br i1 %.not, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %20 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vm_mm, align 4
  %pmd = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %22 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pmd, align 4
  %address = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %24 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %address, align 4
  tail call void @migration_entry_wait(ptr noundef %21, ptr noundef %23, i32 noundef %25) #15
  br label %cleanup

if.else:                                          ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  %address36 = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %26 = ptrtoint ptr %address36 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %address36, align 4
  tail call fastcc void @print_bad_pte(ptr noundef %1, i32 noundef %27, i32 noundef %17, ptr noundef null)
  br label %cleanup

if.end41:                                         ; preds = %entry
  %call43 = tail call ptr @get_swap_device([1 x i32] %.fca.0.insert) #15
  %tobool44.not = icmp eq ptr %call43, null
  br i1 %tobool44.not, label %if.end41.cleanup_crit_edge, label %if.end54, !prof !230

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end54:                                         ; preds = %if.end41
  %address55 = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %28 = ptrtoint ptr %address55 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %address55, align 4
  %call57 = tail call ptr @lookup_swap_cache([1 x i32] %.fca.0.insert, ptr noundef %1, i32 noundef %29) #15
  %tobool58.not = icmp eq ptr %call57, null
  br i1 %tobool58.not, label %if.then59, label %if.end54.if.end119_crit_edge

if.end54.if.end119_crit_edge:                     ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end119

if.then59:                                        ; preds = %if.end54
  %flags = getelementptr inbounds %struct.swap_info_struct, ptr %call43, i32 0, i32 1
  %30 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags, align 4
  %and = and i32 %31, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool62.not = icmp eq i32 %and, 0
  br i1 %tobool62.not, label %if.then59.if.end87_crit_edge, label %land.lhs.true

if.then59.if.end87_crit_edge:                     ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end87

land.lhs.true:                                    ; preds = %if.then59
  %call64 = tail call i32 @__swap_count([1 x i32] %.fca.0.insert) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call64)
  %cmp = icmp eq i32 %call64, 1
  br i1 %cmp, label %if.then65, label %land.lhs.true.if.end87_crit_edge

land.lhs.true.if.end87_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end87

if.then65:                                        ; preds = %land.lhs.true
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 17829066, i32 noundef 0, i32 noundef 0, ptr noundef null) #15
  %tobool67.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool67.not, label %if.then65.if.then89_crit_edge, label %if.then68

if.then65.if.then89_crit_edge:                    ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then89

if.then68:                                        ; preds = %if.then65
  %32 = getelementptr inbounds %struct.page, ptr %call38.i.i.i, i32 0, i32 1
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %32, align 4
  %and.i.i = and i32 %34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !218

if.then.i:                                        ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef nonnull %call38.i.i.i, ptr noundef nonnull @.str.39) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #15, !srcloc !273
  unreachable

do.body7.i:                                       ; preds = %if.then68
  %35 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %32, align 4
  %and.i31.i = and i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i)
  %tobool.not.i.i = icmp eq i32 %and.i31.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %36, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #17
  %37 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %37, %if.end.i.i ]
  %38 = inttoptr i32 %retval.0.i.i to ptr
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %40)
  %cmp.i.not.i = icmp eq i32 %40, -1
  %41 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %32, align 4
  %and.i32.i = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i)
  %tobool.not.i33.i = icmp eq i32 %and.i32.i, 0
  br i1 %cmp.i.not.i, label %if.then17.i, label %do.end24.i, !prof !230

if.then17.i:                                      ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i36.i, label %if.then.i35.i, !prof !218

if.then.i35.i:                                    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i34.i = add i32 %42, -1
  br label %_compound_head.exit38.i

if.end.i36.i:                                     ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #17
  %43 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit38.i

_compound_head.exit38.i:                          ; preds = %if.end.i36.i, %if.then.i35.i
  %retval.0.i37.i = phi i32 [ %sub.i34.i, %if.then.i35.i ], [ %43, %if.end.i36.i ]
  %44 = inttoptr i32 %retval.0.i37.i to ptr
  tail call void @dump_page(ptr noundef %44, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #15, !srcloc !274
  unreachable

do.end24.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i43.i, label %if.then.i42.i, !prof !218

if.then.i42.i:                                    ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i41.i = add i32 %42, -1
  br label %__SetPageLocked.exit

if.end.i43.i:                                     ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #17
  %45 = ptrtoint ptr %call38.i.i.i to i32
  br label %__SetPageLocked.exit

__SetPageLocked.exit:                             ; preds = %if.end.i43.i, %if.then.i42.i
  %retval.0.i44.i = phi i32 [ %sub.i41.i, %if.then.i42.i ], [ %45, %if.end.i43.i ]
  %46 = inttoptr i32 %retval.0.i44.i to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %46, align 4
  %or.i.i = or i32 %48, 1
  store i32 %or.i.i, ptr %46, align 4
  %49 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %32, align 4
  %and.i.i508 = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i508)
  %tobool.not.i509 = icmp eq i32 %and.i.i508, 0
  br i1 %tobool.not.i509, label %do.body7.i513, label %if.then.i510, !prof !218

if.then.i510:                                     ; preds = %__SetPageLocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef nonnull %call38.i.i.i, ptr noundef nonnull @.str.39) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 445, 0\0A.popsection", ""() #15, !srcloc !275
  unreachable

do.body7.i513:                                    ; preds = %__SetPageLocked.exit
  %51 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %32, align 4
  %and.i31.i511 = and i32 %52, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i511)
  %tobool.not.i.i512 = icmp eq i32 %and.i31.i511, 0
  br i1 %tobool.not.i.i512, label %if.end.i.i516, label %if.then.i.i515, !prof !218

if.then.i.i515:                                   ; preds = %do.body7.i513
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i514 = add i32 %52, -1
  br label %_compound_head.exit.i521

if.end.i.i516:                                    ; preds = %do.body7.i513
  call void @__sanitizer_cov_trace_pc() #17
  %53 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit.i521

_compound_head.exit.i521:                         ; preds = %if.end.i.i516, %if.then.i.i515
  %retval.0.i.i517 = phi i32 [ %sub.i.i514, %if.then.i.i515 ], [ %53, %if.end.i.i516 ]
  %54 = inttoptr i32 %retval.0.i.i517 to ptr
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %54, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %56)
  %cmp.i.not.i518 = icmp eq i32 %56, -1
  %57 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %32, align 4
  %and.i32.i519 = and i32 %58, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i519)
  %tobool.not.i33.i520 = icmp eq i32 %and.i32.i519, 0
  br i1 %cmp.i.not.i518, label %if.then17.i522, label %do.end24.i528, !prof !230

if.then17.i522:                                   ; preds = %_compound_head.exit.i521
  br i1 %tobool.not.i33.i520, label %if.end.i36.i525, label %if.then.i35.i524, !prof !218

if.then.i35.i524:                                 ; preds = %if.then17.i522
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i34.i523 = add i32 %58, -1
  br label %_compound_head.exit38.i527

if.end.i36.i525:                                  ; preds = %if.then17.i522
  call void @__sanitizer_cov_trace_pc() #17
  %59 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit38.i527

_compound_head.exit38.i527:                       ; preds = %if.end.i36.i525, %if.then.i35.i524
  %retval.0.i37.i526 = phi i32 [ %sub.i34.i523, %if.then.i35.i524 ], [ %59, %if.end.i36.i525 ]
  %60 = inttoptr i32 %retval.0.i37.i526 to ptr
  tail call void @dump_page(ptr noundef %60, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 445, 0\0A.popsection", ""() #15, !srcloc !276
  unreachable

do.end24.i528:                                    ; preds = %_compound_head.exit.i521
  br i1 %tobool.not.i33.i520, label %if.end.i43.i531, label %if.then.i42.i530, !prof !218

if.then.i42.i530:                                 ; preds = %do.end24.i528
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i41.i529 = add i32 %58, -1
  br label %__SetPageSwapBacked.exit

if.end.i43.i531:                                  ; preds = %do.end24.i528
  call void @__sanitizer_cov_trace_pc() #17
  %61 = ptrtoint ptr %call38.i.i.i to i32
  br label %__SetPageSwapBacked.exit

__SetPageSwapBacked.exit:                         ; preds = %if.end.i43.i531, %if.then.i42.i530
  %retval.0.i44.i532 = phi i32 [ %sub.i41.i529, %if.then.i42.i530 ], [ %61, %if.end.i43.i531 ]
  %62 = inttoptr i32 %retval.0.i44.i532 to ptr
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %62, align 4
  %or.i.i533 = or i32 %64, 524288
  store i32 %or.i.i533, ptr %62, align 4
  %vm_mm69 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %65 = ptrtoint ptr %vm_mm69 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %vm_mm69, align 4
  %call71 = tail call i32 @mem_cgroup_swapin_charge_page(ptr noundef nonnull %call38.i.i.i, ptr noundef %66, i32 noundef 3264, [1 x i32] %.fca.0.insert) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %if.end74, label %__SetPageSwapBacked.exit.out_page_crit_edge

__SetPageSwapBacked.exit.out_page_crit_edge:      ; preds = %__SetPageSwapBacked.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_page

if.end74:                                         ; preds = %__SetPageSwapBacked.exit
  tail call void @mem_cgroup_swapin_uncharge_swap([1 x i32] %.fca.0.insert) #15
  %call77 = tail call ptr @get_shadow_from_swap_cache([1 x i32] %.fca.0.insert) #15
  %tobool78.not = icmp eq ptr %call77, null
  br i1 %tobool78.not, label %if.end74.if.end87.thread680_crit_edge, label %if.then79

if.end74.if.end87.thread680_crit_edge:            ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end87.thread680

if.then79:                                        ; preds = %if.end74
  %67 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %32, align 4
  %and.i = and i32 %68, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i552 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i552, label %if.end.i, label %if.then.i553, !prof !218

if.then.i553:                                     ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i = add i32 %68, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #17
  %69 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i553
  %retval.0.i = phi i32 [ %sub.i, %if.then.i553 ], [ %69, %if.end.i ]
  %70 = inttoptr i32 %retval.0.i to ptr
  tail call void @workingset_refault(ptr noundef %70, ptr noundef nonnull %call77) #15
  br label %if.end87.thread680

if.end87.thread680:                               ; preds = %_compound_head.exit, %if.end74.if.end87.thread680_crit_edge
  tail call void @lru_cache_add(ptr noundef nonnull %call38.i.i.i) #15
  %private1.i = getelementptr inbounds %struct.page, ptr %call38.i.i.i, i32 0, i32 1, i32 0, i32 3
  %71 = ptrtoint ptr %private1.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %or.i.i551, ptr %private1.i, align 4
  %call82 = tail call i32 @swap_readpage(ptr noundef nonnull %call38.i.i.i, i1 noundef zeroext true) #15
  %72 = ptrtoint ptr %private1.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 0, ptr %private1.i, align 4
  br label %if.end112

if.end87:                                         ; preds = %land.lhs.true.if.end87_crit_edge, %if.then59.if.end87_crit_edge
  %call86 = tail call ptr @swapin_readahead([1 x i32] %.fca.0.insert, i32 noundef 17829066, ptr noundef %vmf) #15
  %tobool88.not = icmp eq ptr %call86, null
  br i1 %tobool88.not, label %if.end87.if.then89_crit_edge, label %if.end87.if.end112_crit_edge

if.end87.if.end112_crit_edge:                     ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end112

if.end87.if.then89_crit_edge:                     ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then89

if.then89:                                        ; preds = %if.end87.if.then89_crit_edge, %if.then65.if.then89_crit_edge
  %pmd91 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %73 = ptrtoint ptr %pmd91 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %pmd91, align 4
  %75 = load ptr, ptr @mem_map, align 4
  %76 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %74, align 4
  %shr.i = lshr i32 %77, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %78 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i555 = sub i32 %shr.i, %78
  %ptl.i.i = getelementptr %struct.page, ptr %75, i32 %sub.i555, i32 1, i32 0, i32 3
  %79 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %ptl.i.i, align 4
  %add.ptr = getelementptr %struct.page, ptr %75, i32 %sub.i555
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %81 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %81, 512
  %82 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i556 = and i32 %82, -16384
  %83 = inttoptr i32 %and.i.i.i.i.i556 to ptr
  %preempt_count.i.i.i.i557 = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %preempt_count.i.i.i.i557 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %preempt_count.i.i.i.i557, align 4
  %add.i.i.i = add i32 %85, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i557, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %86 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i558 = and i32 %86, -16384
  %87 = inttoptr i32 %and.i.i.i1.i.i558 to ptr
  %task.i.i.i.i559 = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 2
  %88 = ptrtoint ptr %task.i.i.i.i559 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %task.i.i.i.i559, align 8
  %pagefault_disabled.i.i.i.i560 = getelementptr inbounds %struct.task_struct, ptr %89, i32 0, i32 213
  %90 = ptrtoint ptr %pagefault_disabled.i.i.i.i560 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %pagefault_disabled.i.i.i.i560, align 8
  %inc.i.i.i.i = add i32 %91, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i560, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr, i32 noundef %or.i) #15
  %92 = ptrtoint ptr %address55 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %address55, align 4
  %shr.i561 = lshr i32 %93, 12
  %and.i562 = and i32 %shr.i561, 511
  %add.ptr98 = getelementptr i32, ptr %call.i.i, i32 %and.i562
  %ptl = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %94 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %80, ptr %ptl, align 4
  tail call void @_raw_spin_lock(ptr noundef %80) #15
  %95 = ptrtoint ptr %pte.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %add.ptr98, ptr %pte.i, align 4
  %96 = ptrtoint ptr %add.ptr98 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %add.ptr98, align 4
  %98 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %15, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %97, i32 %99)
  %cmp.i563.not = icmp eq i32 %97, %99
  %spec.select = zext i1 %cmp.i563.not to i32
  br label %do.body272

if.end112:                                        ; preds = %if.end87.if.end112_crit_edge, %if.end87.thread680
  %page.0685 = phi ptr [ %call38.i.i.i, %if.end87.thread680 ], [ %call86, %if.end87.if.end112_crit_edge ]
  %swapcache.0684 = phi ptr [ null, %if.end87.thread680 ], [ %call86, %if.end87.if.end112_crit_edge ]
  %100 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !228
  %101 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i565 = and i32 %101, -16384
  %102 = inttoptr i32 %and.i.i565 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %102, i32 0, i32 3
  %103 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %cpu.i, align 4
  %arrayidx13.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %104
  %105 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %arrayidx13.i, align 4
  %add.i = add i32 %106, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 21) to i32)
  %107 = inttoptr i32 %add.i to ptr
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %107, align 4
  %add14.i = add i32 %109, 1
  store i32 %add14.i, ptr %107, align 4
  %110 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !229
  %and.i.i.i = and i32 %110, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i566 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i566, label %if.then.i567, label %if.end112.count_vm_event.exit_crit_edge, !prof !230

if.end112.count_vm_event.exit_crit_edge:          ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #17
  br label %count_vm_event.exit

if.then.i567:                                     ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %count_vm_event.exit

count_vm_event.exit:                              ; preds = %if.then.i567, %if.end112.count_vm_event.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %100) #15, !srcloc !231
  %vm_mm113 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %111 = ptrtoint ptr %vm_mm113 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %vm_mm113, align 4
  tail call fastcc void @count_memcg_event_mm(ptr noundef %112, i32 noundef 21)
  br label %if.end119

if.end119:                                        ; preds = %count_vm_event.exit, %if.end54.if.end119_crit_edge
  %ret.0 = phi i32 [ 4, %count_vm_event.exit ], [ 0, %if.end54.if.end119_crit_edge ]
  %swapcache.1 = phi ptr [ %swapcache.0684, %count_vm_event.exit ], [ %call57, %if.end54.if.end119_crit_edge ]
  %page.1 = phi ptr [ %page.0685, %count_vm_event.exit ], [ %call57, %if.end54.if.end119_crit_edge ]
  %vm_mm120 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %113 = ptrtoint ptr %vm_mm120 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %vm_mm120, align 4
  %flags121 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %115 = ptrtoint ptr %flags121 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %flags121, align 4
  tail call void @__might_sleep(ptr noundef nonnull @.str.44, i32 noundef 824) #15
  %117 = getelementptr inbounds %struct.page, ptr %page.1, i32 0, i32 1
  %118 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load volatile i32, ptr %117, align 4
  %and.i.i568 = and i32 %119, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i568)
  %tobool.not.i.i569 = icmp eq i32 %and.i.i568, 0
  br i1 %tobool.not.i.i569, label %if.end.i.i572, label %if.then.i.i571, !prof !218

if.then.i.i571:                                   ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i570 = add i32 %119, -1
  br label %_compound_head.exit.i576

if.end.i.i572:                                    ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #17
  %120 = ptrtoint ptr %page.1 to i32
  br label %_compound_head.exit.i576

_compound_head.exit.i576:                         ; preds = %if.end.i.i572, %if.then.i.i571
  %retval.0.i.i573 = phi i32 [ %sub.i.i570, %if.then.i.i571 ], [ %120, %if.end.i.i572 ]
  %121 = inttoptr i32 %retval.0.i.i573 to ptr
  %122 = getelementptr inbounds %struct.page, ptr %121, i32 0, i32 1
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load volatile i32, ptr %122, align 4
  %and.i.i.i.i574 = and i32 %124, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i574)
  %tobool.not.i.i.i575 = icmp eq i32 %and.i.i.i.i574, 0
  br i1 %tobool.not.i.i.i575, label %folio_flags.exit.i.i579, label %if.then.i.i.i577, !prof !218

if.then.i.i.i577:                                 ; preds = %_compound_head.exit.i576
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %121, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

folio_flags.exit.i.i579:                          ; preds = %_compound_head.exit.i576
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %121, i32 noundef 4) #15
  %125 = ptrtoint ptr %121 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile i32, ptr %121, align 4
  %and.i.i4.i.i = and i32 %126, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i578 = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i578, label %folio_trylock.exit.i, label %folio_flags.exit.i.i579.lock_page_or_retry.exit_crit_edge

folio_flags.exit.i.i579.lock_page_or_retry.exit_crit_edge: ; preds = %folio_flags.exit.i.i579
  call void @__sanitizer_cov_trace_pc() #17
  br label %lock_page_or_retry.exit

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i579
  tail call void @llvm.prefetch.p0(ptr %121, i32 1, i32 3, i32 1) #15
  %127 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %121, ptr %121, i32 1, ptr elementtype(i32) %121) #15, !srcloc !277
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %127, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !278
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.if.end125_crit_edge, label %folio_trylock.exit.i.lock_page_or_retry.exit_crit_edge

folio_trylock.exit.i.lock_page_or_retry.exit_crit_edge: ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %lock_page_or_retry.exit

folio_trylock.exit.i.if.end125_crit_edge:         ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end125

lock_page_or_retry.exit:                          ; preds = %folio_trylock.exit.i.lock_page_or_retry.exit_crit_edge, %folio_flags.exit.i.i579.lock_page_or_retry.exit_crit_edge
  %call5.i = tail call zeroext i1 @__folio_lock_or_retry(ptr noundef %121, ptr noundef %114, i32 noundef %116) #15
  br i1 %call5.i, label %lock_page_or_retry.exit.if.end125_crit_edge, label %if.then124

lock_page_or_retry.exit.if.end125_crit_edge:      ; preds = %lock_page_or_retry.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end125

if.then124:                                       ; preds = %lock_page_or_retry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %or = or i32 %ret.0, 1024
  br label %out_release

if.end125:                                        ; preds = %lock_page_or_retry.exit.if.end125_crit_edge, %folio_trylock.exit.i.if.end125_crit_edge
  %128 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load volatile i32, ptr %117, align 4
  %and.i.i534 = and i32 %129, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i534)
  %tobool.not.i.i535 = icmp eq i32 %and.i.i534, 0
  br i1 %tobool.not.i.i535, label %if.end.i.i538, label %if.then.i.i537, !prof !218

if.then.i.i537:                                   ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i536 = add i32 %129, -1
  br label %_compound_head.exit.i540

if.end.i.i538:                                    ; preds = %if.end125
  call void @__sanitizer_cov_trace_pc() #17
  %130 = ptrtoint ptr %page.1 to i32
  br label %_compound_head.exit.i540

_compound_head.exit.i540:                         ; preds = %if.end.i.i538, %if.then.i.i537
  %retval.0.i.i539 = phi i32 [ %sub.i.i536, %if.then.i.i537 ], [ %130, %if.end.i.i538 ]
  %131 = inttoptr i32 %retval.0.i.i539 to ptr
  %132 = getelementptr inbounds %struct.page, ptr %131, i32 0, i32 1
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load volatile i32, ptr %132, align 4
  %and.i.i.i.i.i = and i32 %134, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_test_swapbacked.exit.i.i, label %if.then.i.i.i.i, !prof !218

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i540
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %131, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

folio_test_swapbacked.exit.i.i:                   ; preds = %_compound_head.exit.i540
  %135 = ptrtoint ptr %131 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load volatile i32, ptr %131, align 4
  %137 = and i32 %136, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %137)
  %tobool.i.not.i.i = icmp eq i32 %137, 0
  br i1 %tobool.i.not.i.i, label %folio_test_swapbacked.exit.i.i.land.lhs.true136_crit_edge, label %land.rhs.i.i, !prof !246

folio_test_swapbacked.exit.i.i.land.lhs.true136_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true136

land.rhs.i.i:                                     ; preds = %folio_test_swapbacked.exit.i.i
  %138 = ptrtoint ptr %132 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile i32, ptr %132, align 4
  %and.i.i.i.i = and i32 %139, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %PageSwapCache.exit, label %if.then.i.i.i, !prof !218

if.then.i.i.i:                                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %131, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

PageSwapCache.exit:                               ; preds = %land.rhs.i.i
  %140 = ptrtoint ptr %131 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %131, align 4
  %142 = and i32 %141, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %142)
  %tobool.i.i.not = icmp eq i32 %142, 0
  br i1 %tobool.i.i.not, label %PageSwapCache.exit.land.lhs.true136_crit_edge, label %lor.rhs, !prof !230

PageSwapCache.exit.land.lhs.true136_crit_edge:    ; preds = %PageSwapCache.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true136

lor.rhs:                                          ; preds = %PageSwapCache.exit
  %private = getelementptr inbounds %struct.page, ptr %page.1, i32 0, i32 1, i32 0, i32 3
  %143 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %private, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %144, i32 %or.i.i551)
  %cmp128.not = icmp eq i32 %144, %or.i.i551
  br i1 %cmp128.not, label %lor.rhs.if.end139_crit_edge, label %lor.rhs.land.lhs.true136_crit_edge, !prof !218

lor.rhs.land.lhs.true136_crit_edge:               ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true136

lor.rhs.if.end139_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end139

land.lhs.true136:                                 ; preds = %lor.rhs.land.lhs.true136_crit_edge, %PageSwapCache.exit.land.lhs.true136_crit_edge, %folio_test_swapbacked.exit.i.i.land.lhs.true136_crit_edge
  %tobool137.not = icmp eq ptr %swapcache.1, null
  br i1 %tobool137.not, label %land.lhs.true136.if.end139_crit_edge, label %land.lhs.true136.out_page_crit_edge

land.lhs.true136.out_page_crit_edge:              ; preds = %land.lhs.true136
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_page

land.lhs.true136.if.end139_crit_edge:             ; preds = %land.lhs.true136
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end139

if.end139:                                        ; preds = %land.lhs.true136.if.end139_crit_edge, %lor.rhs.if.end139_crit_edge
  %145 = ptrtoint ptr %address55 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %address55, align 4
  %call141 = tail call ptr @ksm_might_need_to_copy(ptr noundef nonnull %page.1, ptr noundef %1, i32 noundef %146) #15
  %tobool142.not = icmp eq ptr %call141, null
  br i1 %tobool142.not, label %if.end139.out_page_crit_edge, label %if.end152, !prof !230

if.end139.out_page_crit_edge:                     ; preds = %if.end139
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_page

if.end152:                                        ; preds = %if.end139
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@do_swap_page, %cgroup_throttle_swaprate.exit)) #15
          to label %if.end.i580 [label %cgroup_throttle_swaprate.exit], !srcloc !217

if.end.i580:                                      ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__cgroup_throttle_swaprate(ptr noundef nonnull %call141, i32 noundef 3264) #15
  br label %cgroup_throttle_swaprate.exit

cgroup_throttle_swaprate.exit:                    ; preds = %if.end.i580, %if.end152
  %pmd155 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %147 = ptrtoint ptr %pmd155 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %pmd155, align 4
  %149 = load ptr, ptr @mem_map, align 4
  %150 = ptrtoint ptr %148 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %148, align 4
  %shr.i581 = lshr i32 %151, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %152 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i582 = sub i32 %shr.i581, %152
  %ptl.i.i583 = getelementptr %struct.page, ptr %149, i32 %sub.i582, i32 1, i32 0, i32 3
  %153 = ptrtoint ptr %ptl.i.i583 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %ptl.i.i583, align 4
  %add.ptr162 = getelementptr %struct.page, ptr %149, i32 %sub.i582
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %155 = load i32, ptr @pgprot_kernel, align 4
  %or.i584 = or i32 %155, 512
  %156 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i585 = and i32 %156, -16384
  %157 = inttoptr i32 %and.i.i.i.i.i585 to ptr
  %preempt_count.i.i.i.i586 = getelementptr inbounds %struct.thread_info, ptr %157, i32 0, i32 1
  %158 = ptrtoint ptr %preempt_count.i.i.i.i586 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load volatile i32, ptr %preempt_count.i.i.i.i586, align 4
  %add.i.i.i587 = add i32 %159, 1
  store volatile i32 %add.i.i.i587, ptr %preempt_count.i.i.i.i586, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %160 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i588 = and i32 %160, -16384
  %161 = inttoptr i32 %and.i.i.i1.i.i588 to ptr
  %task.i.i.i.i589 = getelementptr inbounds %struct.thread_info, ptr %161, i32 0, i32 2
  %162 = ptrtoint ptr %task.i.i.i.i589 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %task.i.i.i.i589, align 8
  %pagefault_disabled.i.i.i.i590 = getelementptr inbounds %struct.task_struct, ptr %163, i32 0, i32 213
  %164 = ptrtoint ptr %pagefault_disabled.i.i.i.i590 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %pagefault_disabled.i.i.i.i590, align 8
  %inc.i.i.i.i591 = add i32 %165, 1
  store i32 %inc.i.i.i.i591, ptr %pagefault_disabled.i.i.i.i590, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i592 = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr162, i32 noundef %or.i584) #15
  %166 = ptrtoint ptr %address55 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %address55, align 4
  %shr.i593 = lshr i32 %167, 12
  %and.i594 = and i32 %shr.i593, 511
  %add.ptr166 = getelementptr i32, ptr %call.i.i592, i32 %and.i594
  %ptl167 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %168 = ptrtoint ptr %ptl167 to i32
  call void @__asan_store4_noabort(i32 %168)
  store ptr %154, ptr %ptl167, align 4
  tail call void @_raw_spin_lock(ptr noundef %154) #15
  %169 = ptrtoint ptr %pte.i to i32
  call void @__asan_store4_noabort(i32 %169)
  store ptr %add.ptr166, ptr %pte.i, align 4
  %170 = ptrtoint ptr %add.ptr166 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %add.ptr166, align 4
  %172 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %15, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %171, i32 %173)
  %cmp.i595.not = icmp eq i32 %171, %173
  br i1 %cmp.i595.not, label %if.end182, label %cgroup_throttle_swaprate.exit.do.body286_crit_edge, !prof !218

cgroup_throttle_swaprate.exit.do.body286_crit_edge: ; preds = %cgroup_throttle_swaprate.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body286

if.end182:                                        ; preds = %cgroup_throttle_swaprate.exit
  %174 = getelementptr inbounds %struct.page, ptr %call141, i32 0, i32 1
  %175 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load volatile i32, ptr %174, align 4
  %and.i.i597 = and i32 %176, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i597)
  %tobool.not.i.i598 = icmp eq i32 %and.i.i597, 0
  br i1 %tobool.not.i.i598, label %if.end.i.i601, label %if.then.i.i600, !prof !218

if.then.i.i600:                                   ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i599 = add i32 %176, -1
  br label %_compound_head.exit.i605

if.end.i.i601:                                    ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #17
  %177 = ptrtoint ptr %call141 to i32
  br label %_compound_head.exit.i605

_compound_head.exit.i605:                         ; preds = %if.end.i.i601, %if.then.i.i600
  %retval.0.i.i602 = phi i32 [ %sub.i.i599, %if.then.i.i600 ], [ %177, %if.end.i.i601 ]
  %178 = inttoptr i32 %retval.0.i.i602 to ptr
  %179 = getelementptr inbounds %struct.page, ptr %178, i32 0, i32 1
  %180 = ptrtoint ptr %179 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load volatile i32, ptr %179, align 4
  %and.i.i.i.i603 = and i32 %181, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i603)
  %tobool.not.i.i.i604 = icmp eq i32 %and.i.i.i.i603, 0
  br i1 %tobool.not.i.i.i604, label %folio_flags.exit.i.i607, label %if.then.i.i.i606, !prof !218

if.then.i.i.i606:                                 ; preds = %_compound_head.exit.i605
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %178, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

folio_flags.exit.i.i607:                          ; preds = %_compound_head.exit.i605
  %182 = ptrtoint ptr %178 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load volatile i32, ptr %178, align 4
  %184 = and i32 %183, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %184)
  %tobool.i.not.i = icmp eq i32 %184, 0
  br i1 %tobool.i.not.i, label %folio_flags.exit.i.i607.do.body286_crit_edge, label %PageUptodate.exit

folio_flags.exit.i.i607.do.body286_crit_edge:     ; preds = %folio_flags.exit.i.i607
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body286

PageUptodate.exit:                                ; preds = %folio_flags.exit.i.i607
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !279
  %185 = ptrtoint ptr %vm_mm120 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %vm_mm120, align 4
  %187 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i608 = and i32 %187, -16384
  %188 = inttoptr i32 %and.i.i608 to ptr
  %task1.i = getelementptr inbounds %struct.thread_info, ptr %188, i32 0, i32 2
  %189 = ptrtoint ptr %task1.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %task1.i, align 8
  %mm2.i = getelementptr inbounds %struct.task_struct, ptr %190, i32 0, i32 53
  %191 = ptrtoint ptr %mm2.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %mm2.i, align 8
  %cmp.i609 = icmp eq ptr %192, %186
  br i1 %cmp.i609, label %if.then.i611, label %if.else.i, !prof !218

if.then.i611:                                     ; preds = %PageUptodate.exit
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i = getelementptr %struct.task_struct, ptr %190, i32 0, i32 56, i32 1, i32 1
  %193 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %arrayidx.i, align 4
  %add.i610 = add i32 %194, 1
  store i32 %add.i610, ptr %arrayidx.i, align 4
  br label %add_mm_counter_fast.exit

if.else.i:                                        ; preds = %PageUptodate.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @add_mm_counter(ptr noundef %186, i32 noundef 1, i32 noundef 1) #15
  br label %add_mm_counter_fast.exit

add_mm_counter_fast.exit:                         ; preds = %if.else.i, %if.then.i611
  %195 = ptrtoint ptr %vm_mm120 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %vm_mm120, align 4
  %197 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i613 = and i32 %197, -16384
  %198 = inttoptr i32 %and.i.i613 to ptr
  %task1.i614 = getelementptr inbounds %struct.thread_info, ptr %198, i32 0, i32 2
  %199 = ptrtoint ptr %task1.i614 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %task1.i614, align 8
  %mm2.i615 = getelementptr inbounds %struct.task_struct, ptr %200, i32 0, i32 53
  %201 = ptrtoint ptr %mm2.i615 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %mm2.i615, align 8
  %cmp.i616 = icmp eq ptr %202, %196
  br i1 %cmp.i616, label %if.then.i619, label %if.else.i620, !prof !218

if.then.i619:                                     ; preds = %add_mm_counter_fast.exit
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i617 = getelementptr %struct.task_struct, ptr %200, i32 0, i32 56, i32 1, i32 2
  %203 = ptrtoint ptr %arrayidx.i617 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %arrayidx.i617, align 4
  %add.i618 = add i32 %204, -1
  store i32 %add.i618, ptr %arrayidx.i617, align 4
  br label %add_mm_counter_fast.exit622

if.else.i620:                                     ; preds = %add_mm_counter_fast.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @add_mm_counter(ptr noundef %196, i32 noundef 2, i32 noundef -1) #15
  br label %add_mm_counter_fast.exit622

add_mm_counter_fast.exit622:                      ; preds = %if.else.i620, %if.then.i619
  %205 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %call141 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %205 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %206 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %206
  %shl = shl i32 %add, 12
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 7
  %207 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %vm_page_prot, align 4
  %or197 = or i32 %shl, %208
  %209 = ptrtoint ptr %flags121 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %flags121, align 4
  %and199 = and i32 %210, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and199)
  %tobool200.not = icmp eq i32 %and199, 0
  br i1 %tobool200.not, label %add_mm_counter_fast.exit622.do.end_crit_edge, label %land.lhs.true201

add_mm_counter_fast.exit622.do.end_crit_edge:     ; preds = %add_mm_counter_fast.exit622
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true201:                                 ; preds = %add_mm_counter_fast.exit622
  %call202 = tail call zeroext i1 @reuse_swap_page(ptr noundef nonnull %call141) #15
  br i1 %call202, label %if.then204, label %land.lhs.true201.do.end_crit_edge

land.lhs.true201.do.end_crit_edge:                ; preds = %land.lhs.true201
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

if.then204:                                       ; preds = %land.lhs.true201
  call void @__sanitizer_cov_trace_pc() #17
  %or.i.i623 = or i32 %or197, 64
  %vm_flags.i = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %211 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %vm_flags.i, align 4
  %and.i624 = and i32 %212, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i624)
  %tobool.not.i625 = icmp eq i32 %and.i624, 0
  %and.i.i.i626 = and i32 %or.i.i623, -129
  %spec.select.i = select i1 %tobool.not.i625, i32 %or.i.i623, i32 %and.i.i.i626, !prof !230
  %213 = ptrtoint ptr %flags121 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %flags121, align 4
  %and208 = and i32 %214, -2
  store i32 %and208, ptr %flags121, align 4
  %or209 = or i32 %ret.0, 8
  br label %do.end

do.end:                                           ; preds = %if.then204, %land.lhs.true201.do.end_crit_edge, %add_mm_counter_fast.exit622.do.end_crit_edge
  %ret.1 = phi i32 [ %or209, %if.then204 ], [ %ret.0, %land.lhs.true201.do.end_crit_edge ], [ %ret.0, %add_mm_counter_fast.exit622.do.end_crit_edge ]
  %exclusive.0 = phi i32 [ 1, %if.then204 ], [ 0, %land.lhs.true201.do.end_crit_edge ], [ 0, %add_mm_counter_fast.exit622.do.end_crit_edge ]
  %pte.0 = phi i32 [ %spec.select.i, %if.then204 ], [ %or197, %land.lhs.true201.do.end_crit_edge ], [ %or197, %add_mm_counter_fast.exit622.do.end_crit_edge ]
  %215 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %215)
  store i32 %pte.0, ptr %15, align 4
  %cmp222.not = icmp eq ptr %call141, %swapcache.1
  %tobool224 = icmp eq ptr %swapcache.1, null
  %216 = or i1 %tobool224, %cmp222.not
  %217 = ptrtoint ptr %address55 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %address55, align 4
  br i1 %216, label %if.else233, label %if.then231, !prof !218

if.then231:                                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @page_add_new_anon_rmap(ptr noundef nonnull %call141, ptr noundef %1, i32 noundef %218, i1 noundef zeroext false) #15
  tail call void @lru_cache_add_inactive_or_unevictable(ptr noundef nonnull %call141, ptr noundef %1) #15
  br label %if.end235

if.else233:                                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @do_page_add_anon_rmap(ptr noundef nonnull %call141, ptr noundef %1, i32 noundef %218, i32 noundef %exclusive.0) #15
  br label %if.end235

if.end235:                                        ; preds = %if.else233, %if.then231
  %219 = ptrtoint ptr %vm_mm120 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %vm_mm120, align 4
  %221 = ptrtoint ptr %address55 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %address55, align 4
  %223 = ptrtoint ptr %pte.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %pte.i, align 4
  tail call void @set_pte_at(ptr noundef %220, i32 noundef %222, ptr noundef %224, i32 noundef %pte.0) #15
  tail call void @swap_free([1 x i32] %.fca.0.insert) #15
  %call242 = tail call zeroext i1 @mem_cgroup_swap_full(ptr noundef nonnull %call141) #15
  br i1 %call242, label %if.end235.if.then249_crit_edge, label %lor.lhs.false

if.end235.if.then249_crit_edge:                   ; preds = %if.end235
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then249

lor.lhs.false:                                    ; preds = %if.end235
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %225 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %vm_flags, align 4
  %and244 = and i32 %226, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and244)
  %tobool245.not = icmp eq i32 %and244, 0
  br i1 %tobool245.not, label %lor.lhs.false246, label %lor.lhs.false.if.then249_crit_edge

lor.lhs.false.if.then249_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then249

lor.lhs.false246:                                 ; preds = %lor.lhs.false
  %227 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load volatile i32, ptr %174, align 4
  %and.i.i541 = and i32 %228, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i541)
  %tobool.not.i.i542 = icmp eq i32 %and.i.i541, 0
  br i1 %tobool.not.i.i542, label %lor.lhs.false246._compound_head.exit.i548_crit_edge, label %if.then.i.i544, !prof !218

lor.lhs.false246._compound_head.exit.i548_crit_edge: ; preds = %lor.lhs.false246
  call void @__sanitizer_cov_trace_pc() #17
  br label %_compound_head.exit.i548

if.then.i.i544:                                   ; preds = %lor.lhs.false246
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i543 = add i32 %228, -1
  br label %_compound_head.exit.i548

_compound_head.exit.i548:                         ; preds = %if.then.i.i544, %lor.lhs.false246._compound_head.exit.i548_crit_edge
  %retval.0.i.i546 = phi i32 [ %sub.i.i543, %if.then.i.i544 ], [ %sub.ptr.lhs.cast, %lor.lhs.false246._compound_head.exit.i548_crit_edge ]
  %229 = inttoptr i32 %retval.0.i.i546 to ptr
  %230 = ptrtoint ptr %229 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load volatile i32, ptr %229, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %231)
  %cmp.i.not.i547 = icmp eq i32 %231, -1
  %232 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load volatile i32, ptr %174, align 4
  %and.i16.i = and i32 %233, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i547, label %if.then.i549, label %do.end10.i, !prof !230

if.then.i549:                                     ; preds = %_compound_head.exit.i548
  br i1 %tobool.not.i17.i, label %if.then.i549._compound_head.exit22.i_crit_edge, label %if.then.i19.i, !prof !218

if.then.i549._compound_head.exit22.i_crit_edge:   ; preds = %if.then.i549
  call void @__sanitizer_cov_trace_pc() #17
  br label %_compound_head.exit22.i

if.then.i19.i:                                    ; preds = %if.then.i549
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i = add i32 %233, -1
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.then.i19.i, %if.then.i549._compound_head.exit22.i_crit_edge
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %sub.ptr.lhs.cast, %if.then.i549._compound_head.exit22.i_crit_edge ]
  %234 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %234, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 504, 0\0A.popsection", ""() #15, !srcloc !280
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i548
  br i1 %tobool.not.i17.i, label %do.end10.i.PageMlocked.exit_crit_edge, label %if.then.i26.i, !prof !218

do.end10.i.PageMlocked.exit_crit_edge:            ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %PageMlocked.exit

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i = add i32 %233, -1
  br label %PageMlocked.exit

PageMlocked.exit:                                 ; preds = %if.then.i26.i, %do.end10.i.PageMlocked.exit_crit_edge
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %sub.ptr.lhs.cast, %do.end10.i.PageMlocked.exit_crit_edge ]
  %235 = inttoptr i32 %retval.0.i28.i to ptr
  %236 = ptrtoint ptr %235 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load volatile i32, ptr %235, align 4
  %238 = and i32 %237, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %238)
  %tobool248.not = icmp eq i32 %238, 0
  br i1 %tobool248.not, label %PageMlocked.exit.if.end251_crit_edge, label %PageMlocked.exit.if.then249_crit_edge

PageMlocked.exit.if.then249_crit_edge:            ; preds = %PageMlocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then249

PageMlocked.exit.if.end251_crit_edge:             ; preds = %PageMlocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end251

if.then249:                                       ; preds = %PageMlocked.exit.if.then249_crit_edge, %lor.lhs.false.if.then249_crit_edge, %if.end235.if.then249_crit_edge
  %call250 = tail call i32 @try_to_free_swap(ptr noundef nonnull %call141) #15
  br label %if.end251

if.end251:                                        ; preds = %if.then249, %PageMlocked.exit.if.end251_crit_edge
  tail call void @unlock_page(ptr noundef nonnull %call141) #15
  br i1 %216, label %if.end251.if.end257_crit_edge, label %if.then256

if.end251.if.end257_crit_edge:                    ; preds = %if.end251
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end257

if.then256:                                       ; preds = %if.end251
  tail call void @unlock_page(ptr noundef nonnull %swapcache.1) #15
  %239 = getelementptr inbounds %struct.page, ptr %swapcache.1, i32 0, i32 1
  %240 = ptrtoint ptr %239 to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load volatile i32, ptr %239, align 4
  %and.i.i627 = and i32 %241, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i627)
  %tobool.not.i.i628 = icmp eq i32 %and.i.i627, 0
  br i1 %tobool.not.i.i628, label %if.end.i.i631, label %if.then.i.i630, !prof !218

if.then.i.i630:                                   ; preds = %if.then256
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i629 = add i32 %241, -1
  br label %_compound_head.exit.i633

if.end.i.i631:                                    ; preds = %if.then256
  call void @__sanitizer_cov_trace_pc() #17
  %242 = ptrtoint ptr %swapcache.1 to i32
  br label %_compound_head.exit.i633

_compound_head.exit.i633:                         ; preds = %if.end.i.i631, %if.then.i.i630
  %retval.0.i.i632 = phi i32 [ %sub.i.i629, %if.then.i.i630 ], [ %242, %if.end.i.i631 ]
  %243 = inttoptr i32 %retval.0.i.i632 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %243, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %244 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %245)
  %cmp.i.i.i.i = icmp eq i32 %245, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i634, label %do.end5.i.i.i.i, !prof !230

if.then.i.i.i.i634:                               ; preds = %_compound_head.exit.i633
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %243, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i633
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %246 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %246, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_swap_page, %if.then.i.i.i.i.i)) #15
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !217

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %243, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #15
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.if.end257_crit_edge

folio_put_testzero.exit.i.i.if.end257_crit_edge:  ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end257

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %243) #15
  br label %if.end257

if.end257:                                        ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.if.end257_crit_edge, %if.end251.if.end257_crit_edge
  %247 = ptrtoint ptr %flags121 to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %flags121, align 4
  %and259 = and i32 %248, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and259)
  %tobool260.not = icmp eq i32 %and259, 0
  br i1 %tobool260.not, label %if.end257.do.body272_crit_edge, label %if.then261

if.end257.do.body272_crit_edge:                   ; preds = %if.end257
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body272

if.then261:                                       ; preds = %if.end257
  call void @__sanitizer_cov_trace_pc() #17
  %call262 = tail call fastcc i32 @do_wp_page(ptr noundef %vmf)
  %or263 = or i32 %call262, %ret.1
  %and264 = and i32 %call262, 2163
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and264)
  %tobool265.not = icmp eq i32 %and264, 0
  %spec.select506 = select i1 %tobool265.not, i32 %or263, i32 %and264
  br label %if.then284

do.body272:                                       ; preds = %if.end257.do.body272_crit_edge, %if.then89
  %ret.2 = phi i32 [ %spec.select, %if.then89 ], [ %ret.1, %if.end257.do.body272_crit_edge ]
  %ptl273 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %249 = ptrtoint ptr %ptl273 to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load ptr, ptr %ptl273, align 4
  tail call void @_raw_spin_unlock(ptr noundef %250) #15
  %251 = ptrtoint ptr %pte.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load ptr, ptr %pte.i, align 4
  tail call void @kunmap_local_indexed(ptr noundef %252) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %253 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %253, -16384
  %254 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %254, i32 0, i32 2
  %255 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %256, i32 0, i32 213
  %257 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %258, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %259 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i635 = and i32 %259, -16384
  %260 = inttoptr i32 %and.i.i.i.i635 to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %260, i32 0, i32 1
  %261 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i636 = add i32 %262, -1
  store volatile i32 %sub.i.i636, ptr %preempt_count.i.i.i, align 4
  br label %if.then284

if.then284:                                       ; preds = %do.body272, %if.then261
  %ret.3 = phi i32 [ %ret.2, %do.body272 ], [ %spec.select506, %if.then261 ]
  tail call fastcc void @put_swap_device(ptr noundef nonnull %call43)
  br label %cleanup

do.body286:                                       ; preds = %folio_flags.exit.i.i607.do.body286_crit_edge, %cgroup_throttle_swaprate.exit.do.body286_crit_edge
  %ret.4 = phi i32 [ %ret.0, %cgroup_throttle_swaprate.exit.do.body286_crit_edge ], [ 2, %folio_flags.exit.i.i607.do.body286_crit_edge ]
  %263 = ptrtoint ptr %ptl167 to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %ptl167, align 4
  tail call void @_raw_spin_unlock(ptr noundef %264) #15
  %265 = ptrtoint ptr %pte.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %pte.i, align 4
  tail call fastcc void @__kunmap_atomic(ptr noundef %266)
  br label %out_page

out_page:                                         ; preds = %do.body286, %if.end139.out_page_crit_edge, %land.lhs.true136.out_page_crit_edge, %__SetPageSwapBacked.exit.out_page_crit_edge
  %ret.5 = phi i32 [ %ret.0, %land.lhs.true136.out_page_crit_edge ], [ %ret.4, %do.body286 ], [ 1, %__SetPageSwapBacked.exit.out_page_crit_edge ], [ 1, %if.end139.out_page_crit_edge ]
  %swapcache.2 = phi ptr [ %swapcache.1, %land.lhs.true136.out_page_crit_edge ], [ %swapcache.1, %do.body286 ], [ null, %__SetPageSwapBacked.exit.out_page_crit_edge ], [ %swapcache.1, %if.end139.out_page_crit_edge ]
  %page.2 = phi ptr [ %page.1, %land.lhs.true136.out_page_crit_edge ], [ %call141, %do.body286 ], [ %call38.i.i.i, %__SetPageSwapBacked.exit.out_page_crit_edge ], [ %swapcache.1, %if.end139.out_page_crit_edge ]
  tail call void @unlock_page(ptr noundef %page.2) #15
  br label %out_release

out_release:                                      ; preds = %out_page, %if.then124
  %ret.6 = phi i32 [ %ret.5, %out_page ], [ %or, %if.then124 ]
  %swapcache.3 = phi ptr [ %swapcache.2, %out_page ], [ %swapcache.1, %if.then124 ]
  %page.3 = phi ptr [ %page.2, %out_page ], [ %page.1, %if.then124 ]
  %267 = getelementptr inbounds %struct.page, ptr %page.3, i32 0, i32 1
  %268 = ptrtoint ptr %267 to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load volatile i32, ptr %267, align 4
  %and.i.i637 = and i32 %269, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i637)
  %tobool.not.i.i638 = icmp eq i32 %and.i.i637, 0
  br i1 %tobool.not.i.i638, label %if.end.i.i641, label %if.then.i.i640, !prof !218

if.then.i.i640:                                   ; preds = %out_release
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i639 = add i32 %269, -1
  br label %_compound_head.exit.i646

if.end.i.i641:                                    ; preds = %out_release
  call void @__sanitizer_cov_trace_pc() #17
  %270 = ptrtoint ptr %page.3 to i32
  br label %_compound_head.exit.i646

_compound_head.exit.i646:                         ; preds = %if.end.i.i641, %if.then.i.i640
  %retval.0.i.i642 = phi i32 [ %sub.i.i639, %if.then.i.i640 ], [ %270, %if.end.i.i641 ]
  %271 = inttoptr i32 %retval.0.i.i642 to ptr
  %_refcount.i.i.i.i.i643 = getelementptr inbounds %struct.page, ptr %271, i32 0, i32 3
  %call.i.i.i.i.i.i.i644 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i643, i32 noundef 4) #15
  %272 = ptrtoint ptr %_refcount.i.i.i.i.i643 to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load volatile i32, ptr %_refcount.i.i.i.i.i643, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %273)
  %cmp.i.i.i.i645 = icmp eq i32 %273, 0
  br i1 %cmp.i.i.i.i645, label %if.then.i.i.i.i647, label %do.end5.i.i.i.i651, !prof !230

if.then.i.i.i.i647:                               ; preds = %_compound_head.exit.i646
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %271, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i651:                               ; preds = %_compound_head.exit.i646
  %call.i.i.i10.i.i.i.i648 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i643, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i643, i32 1, i32 3, i32 1) #15
  %274 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i643, ptr %_refcount.i.i.i.i.i643, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i643) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i649 = extractvalue { i32, i32 } %274, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i649)
  %cmp.i.i.i.i.i.i.i650 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i649, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_swap_page, %if.then.i.i.i.i.i653)) #15
          to label %folio_put_testzero.exit.i.i654 [label %if.then.i.i.i.i.i653], !srcloc !217

if.then.i.i.i.i.i653:                             ; preds = %do.end5.i.i.i.i651
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i652 = zext i1 %cmp.i.i.i.i.i.i.i650 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %271, i32 noundef -1, i32 noundef %conv.i.i.i.i.i652) #15
  br label %folio_put_testzero.exit.i.i654

folio_put_testzero.exit.i.i654:                   ; preds = %if.then.i.i.i.i.i653, %do.end5.i.i.i.i651
  br i1 %cmp.i.i.i.i.i.i.i650, label %if.then.i4.i655, label %folio_put_testzero.exit.i.i654.put_page.exit656_crit_edge

folio_put_testzero.exit.i.i654.put_page.exit656_crit_edge: ; preds = %folio_put_testzero.exit.i.i654
  call void @__sanitizer_cov_trace_pc() #17
  br label %put_page.exit656

if.then.i4.i655:                                  ; preds = %folio_put_testzero.exit.i.i654
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %271) #15
  br label %put_page.exit656

put_page.exit656:                                 ; preds = %if.then.i4.i655, %folio_put_testzero.exit.i.i654.put_page.exit656_crit_edge
  %cmp297.not = icmp eq ptr %page.3, %swapcache.3
  %tobool300.not = icmp eq ptr %swapcache.3, null
  %or.cond507 = or i1 %tobool300.not, %cmp297.not
  br i1 %or.cond507, label %put_page.exit656.if.then304_crit_edge, label %if.then301

put_page.exit656.if.then304_crit_edge:            ; preds = %put_page.exit656
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then304

if.then301:                                       ; preds = %put_page.exit656
  tail call void @unlock_page(ptr noundef nonnull %swapcache.3) #15
  %275 = getelementptr inbounds %struct.page, ptr %swapcache.3, i32 0, i32 1
  %276 = ptrtoint ptr %275 to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load volatile i32, ptr %275, align 4
  %and.i.i657 = and i32 %277, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i657)
  %tobool.not.i.i658 = icmp eq i32 %and.i.i657, 0
  br i1 %tobool.not.i.i658, label %if.end.i.i661, label %if.then.i.i660, !prof !218

if.then.i.i660:                                   ; preds = %if.then301
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i659 = add i32 %277, -1
  br label %_compound_head.exit.i666

if.end.i.i661:                                    ; preds = %if.then301
  call void @__sanitizer_cov_trace_pc() #17
  %278 = ptrtoint ptr %swapcache.3 to i32
  br label %_compound_head.exit.i666

_compound_head.exit.i666:                         ; preds = %if.end.i.i661, %if.then.i.i660
  %retval.0.i.i662 = phi i32 [ %sub.i.i659, %if.then.i.i660 ], [ %278, %if.end.i.i661 ]
  %279 = inttoptr i32 %retval.0.i.i662 to ptr
  %_refcount.i.i.i.i.i663 = getelementptr inbounds %struct.page, ptr %279, i32 0, i32 3
  %call.i.i.i.i.i.i.i664 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i663, i32 noundef 4) #15
  %280 = ptrtoint ptr %_refcount.i.i.i.i.i663 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load volatile i32, ptr %_refcount.i.i.i.i.i663, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %281)
  %cmp.i.i.i.i665 = icmp eq i32 %281, 0
  br i1 %cmp.i.i.i.i665, label %if.then.i.i.i.i667, label %do.end5.i.i.i.i671, !prof !230

if.then.i.i.i.i667:                               ; preds = %_compound_head.exit.i666
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %279, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i671:                               ; preds = %_compound_head.exit.i666
  %call.i.i.i10.i.i.i.i668 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i663, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i663, i32 1, i32 3, i32 1) #15
  %282 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i663, ptr %_refcount.i.i.i.i.i663, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i663) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i669 = extractvalue { i32, i32 } %282, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i669)
  %cmp.i.i.i.i.i.i.i670 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i669, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_swap_page, %if.then.i.i.i.i.i673)) #15
          to label %folio_put_testzero.exit.i.i674 [label %if.then.i.i.i.i.i673], !srcloc !217

if.then.i.i.i.i.i673:                             ; preds = %do.end5.i.i.i.i671
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i672 = zext i1 %cmp.i.i.i.i.i.i.i670 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %279, i32 noundef -1, i32 noundef %conv.i.i.i.i.i672) #15
  br label %folio_put_testzero.exit.i.i674

folio_put_testzero.exit.i.i674:                   ; preds = %if.then.i.i.i.i.i673, %do.end5.i.i.i.i671
  br i1 %cmp.i.i.i.i.i.i.i670, label %if.then.i4.i675, label %folio_put_testzero.exit.i.i674.if.then304_crit_edge

folio_put_testzero.exit.i.i674.if.then304_crit_edge: ; preds = %folio_put_testzero.exit.i.i674
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then304

if.then.i4.i675:                                  ; preds = %folio_put_testzero.exit.i.i674
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %279) #15
  br label %if.then304

if.then304:                                       ; preds = %if.then.i4.i675, %folio_put_testzero.exit.i.i674.if.then304_crit_edge, %put_page.exit656.if.then304_crit_edge
  tail call fastcc void @put_swap_device(ptr noundef nonnull %call43)
  br label %cleanup

cleanup:                                          ; preds = %if.then304, %if.then284, %if.end41.cleanup_crit_edge, %if.else, %if.then13
  %retval.0 = phi i32 [ %ret.3, %if.then284 ], [ %ret.6, %if.then304 ], [ 0, %if.end41.cleanup_crit_edge ], [ 2, %if.else ], [ 0, %if.then13 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @migration_entry_wait(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @pfn_swap_entry_to_page([1 x i32] %entry.coerce) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = load ptr, ptr @mem_map, align 4
  %entry.coerce.fca.0.extract.i = extractvalue [1 x i32] %entry.coerce, 0
  %and.i = and i32 %entry.coerce.fca.0.extract.i, 67108863
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub = sub i32 %and.i, %1
  %add.ptr = getelementptr %struct.page, ptr %0, i32 %sub
  %2 = and i32 %entry.coerce.fca.0.extract.i, -134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 2013265920, i32 %2)
  %.not = icmp eq i32 %2, 2013265920
  br i1 %.not, label %land.rhs, label %entry.do.end16_crit_edge

entry.do.end16_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end16

land.rhs:                                         ; preds = %entry
  %3 = getelementptr %struct.page, ptr %0, i32 %sub, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %5, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  %6 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %6, %if.end.i.i ]
  %7 = inttoptr i32 %retval.0.i.i to ptr
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %cmp.i.not.i = icmp eq i32 %9, -1
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %3, align 4
  %and.i16.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !230

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !218

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i = add i32 %11, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %12 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %12, %if.end.i20.i ]
  %13 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %13, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #15, !srcloc !249
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !218

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i = add i32 %11, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  %14 = ptrtoint ptr %add.ptr to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %14, %if.end.i27.i ]
  %15 = inttoptr i32 %retval.0.i28.i to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %and1.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool7.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool7.not, label %do.body11, label %PageLocked.exit.do.end16_crit_edge, !prof !230

PageLocked.exit.do.end16_crit_edge:               ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end16

do.body11:                                        ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/swapops.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 258, 0\0A.popsection", ""() #15, !srcloc !250
  unreachable

do.end16:                                         ; preds = %PageLocked.exit.do.end16_crit_edge, %entry.do.end16_crit_edge
  ret ptr %add.ptr
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_swap_device([1 x i32]) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @lookup_swap_cache([1 x i32], ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__swap_count([1 x i32]) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mem_cgroup_swapin_charge_page(ptr noundef, ptr noundef, i32 noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_swapin_uncharge_swap([1 x i32]) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_shadow_from_swap_cache([1 x i32]) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @workingset_refault(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_cache_add(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @swap_readpage(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @swapin_readahead([1 x i32], i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @count_memcg_event_mm(ptr noundef %mm, i32 noundef %idx) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@count_memcg_event_mm, %cleanup)) #15
          to label %if.end [label %cleanup], !srcloc !217

if.end:                                           ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !285
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 696, ptr noundef nonnull @.str.42) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %owner = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 46
  %4 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %owner, align 4
  %call2 = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end10_crit_edge

rcu_read_lock.exit.do.end10_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end10

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end10_crit_edge, label %land.lhs.true5

land.lhs.true.do.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end10

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b19 = load i1, ptr @count_memcg_event_mm.__warned, align 1
  br i1 %.b19, label %land.lhs.true5.do.end10_crit_edge, label %if.then7

land.lhs.true5.do.end10_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end10

if.then7:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @count_memcg_event_mm.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.40, i32 noundef 1059, ptr noundef nonnull @.str.6) #15
  br label %do.end10

do.end10:                                         ; preds = %if.then7, %land.lhs.true5.do.end10_crit_edge, %land.lhs.true.do.end10_crit_edge, %rcu_read_lock.exit.do.end10_crit_edge
  %call12 = tail call ptr @mem_cgroup_from_task(ptr noundef %5) #15
  %tobool13.not = icmp eq ptr %call12, null
  br i1 %tobool13.not, label %do.end10.if.end17_crit_edge, label %if.then16, !prof !230

do.end10.if.end17_crit_edge:                      ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17

if.then16:                                        ; preds = %do.end10
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !228
  %and.i.i = and i32 %6, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i20 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i20, label %if.then21.i, label %do.end11.i

do.end11.i:                                       ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__count_memcg_events(ptr noundef nonnull %call12, i32 noundef %idx, i32 noundef 1) #15
  br label %do.body23.i

if.then21.i:                                      ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @trace_hardirqs_off() #15
  tail call void @__count_memcg_events(ptr noundef nonnull %call12, i32 noundef %idx, i32 noundef 1) #15
  tail call void @trace_hardirqs_on() #15
  br label %do.body23.i

do.body23.i:                                      ; preds = %if.then21.i, %do.end11.i
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !229
  %and.i.i.i = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool32.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool32.not.i, label %if.then36.i, label %do.body23.i.count_memcg_events.exit_crit_edge, !prof !230

do.body23.i.count_memcg_events.exit_crit_edge:    ; preds = %do.body23.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %count_memcg_events.exit

if.then36.i:                                      ; preds = %do.body23.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %count_memcg_events.exit

count_memcg_events.exit:                          ; preds = %if.then36.i, %do.body23.i.count_memcg_events.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #15, !srcloc !231
  br label %if.end17

if.end17:                                         ; preds = %count_memcg_events.exit, %do.end10.if.end17_crit_edge
  %call.i21 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i21, label %if.end17.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i24

if.end17.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i24:                                ; preds = %if.end17
  %call1.i22 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i22)
  %tobool.not.i23 = icmp eq i32 %call1.i22, 0
  br i1 %tobool.not.i23, label %land.lhs.true.i24.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i26

land.lhs.true.i24.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i24
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i26:                               ; preds = %land.lhs.true.i24
  %.b4.i25 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i25, label %land.lhs.true2.i26.rcu_read_unlock.exit_crit_edge, label %if.then.i27

land.lhs.true2.i26.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i26
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i27:                                      ; preds = %land.lhs.true2.i26
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 724, ptr noundef nonnull @.str.43) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i27, %land.lhs.true2.i26.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i24.rcu_read_unlock.exit_crit_edge, %if.end17.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !286
  %8 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i28 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i28 to ptr
  %preempt_count.i.i.i.i29 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i29 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i29, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i29, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ksm_might_need_to_copy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @add_mm_counter_fast(ptr noundef %mm, i32 noundef %member, i32 noundef %val) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task1 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task1, align 8
  %mm2 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 53
  %4 = ptrtoint ptr %mm2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mm2, align 8
  %cmp = icmp eq ptr %5, %mm
  br i1 %cmp, label %if.then, label %if.else, !prof !218

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.task_struct, ptr %3, i32 0, i32 56, i32 1, i32 %member
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %add = add i32 %7, %val
  store i32 %add, ptr %arrayidx, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @add_mm_counter(ptr noundef %mm, i32 noundef %member, i32 noundef %val)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @reuse_swap_page(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_add_new_anon_rmap(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_cache_add_inactive_or_unevictable(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_page_add_anon_rmap(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_pte_at(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @swap_free([1 x i32]) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mem_cgroup_swap_full(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @try_to_free_swap(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlock_page(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_page(ptr noundef %page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !218

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %3, %if.end.i ]
  %4 = inttoptr i32 %retval.0.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  %5 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.i.i.i = icmp eq i32 %6, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !230

if.then.i.i.i:                                    ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %4, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i:                                    ; preds = %_compound_head.exit
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #15
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %7, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@put_page, %if.then.i.i.i.i)) #15
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !217

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %4, i32 noundef -1, i32 noundef %conv.i.i.i.i) #15
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i4, label %folio_put_testzero.exit.i.folio_put.exit_crit_edge

folio_put_testzero.exit.i.folio_put.exit_crit_edge: ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %folio_put.exit

if.then.i4:                                       ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %4) #15
  br label %folio_put.exit

folio_put.exit:                                   ; preds = %if.then.i4, %folio_put_testzero.exit.i.folio_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_wp_page(ptr noundef %vmf) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %vm_flags.i = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags.i, align 4
  %and.i = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end17_crit_edge, label %land.rhs

entry.if.end17_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17

land.rhs:                                         ; preds = %entry
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vm_mm, align 4
  %tlb_flush_pending.i = getelementptr inbounds %struct.anon.9, ptr %5, i32 0, i32 50
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %tlb_flush_pending.i, i32 noundef 4) #15
  %6 = ptrtoint ptr %tlb_flush_pending.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %tlb_flush_pending.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i142.not = icmp eq i32 %7, 0
  br i1 %tobool.i142.not, label %land.rhs.if.end17_crit_edge, label %if.then15, !prof !218

land.rhs.if.end17_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17

if.then15:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  %8 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vmf, align 4
  %address = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %10 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %address, align 4
  tail call void @flush_tlb_page(ptr noundef %9, i32 noundef %11) #15
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %land.rhs.if.end17_crit_edge, %entry.if.end17_crit_edge
  %address18 = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %12 = ptrtoint ptr %address18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %address18, align 4
  %14 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %shr.i = lshr i32 %16, 12
  %17 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %vm_flags.i, align 4
  %and1.i = and i32 %18, 268436480
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not.i = icmp eq i32 %and1.i, 0
  br i1 %tobool.not.i, label %if.end17.if.end18.i_crit_edge, label %if.then.i, !prof !218

if.end17.if.end18.i_crit_edge:                    ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i

if.then.i:                                        ; preds = %if.end17
  %and5.i = and i32 %18, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.else.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %call.i = tail call i32 @pfn_valid(i32 noundef %shr.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool8.not.i, label %if.then7.i.vm_normal_page.exit.thread_crit_edge, label %if.then7.i.vm_normal_page.exit_crit_edge

if.then7.i.vm_normal_page.exit_crit_edge:         ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vm_normal_page.exit

if.then7.i.vm_normal_page.exit.thread_crit_edge:  ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vm_normal_page.exit.thread

if.else.i:                                        ; preds = %if.then.i
  %19 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %1, align 4
  %sub.i = sub i32 %13, %20
  %shr10.i = lshr i32 %sub.i, 12
  %vm_pgoff.i = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 13
  %21 = ptrtoint ptr %vm_pgoff.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %vm_pgoff.i, align 4
  %add.i = add i32 %shr10.i, %22
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i, i32 %add.i)
  %cmp.i = icmp ne i32 %shr.i, %add.i
  %and.i.i144 = and i32 %18, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and.i.i144)
  %cmp.i.i145 = icmp eq i32 %and.i.i144, 32
  %or.cond.i = select i1 %cmp.i, i1 %cmp.i.i145, i1 false
  br i1 %or.cond.i, label %if.else.i.if.end18.i_crit_edge, label %if.else.i.vm_normal_page.exit.thread_crit_edge

if.else.i.vm_normal_page.exit.thread_crit_edge:   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vm_normal_page.exit.thread

if.else.i.if.end18.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.else.i.if.end18.i_crit_edge, %if.end17.if.end18.i_crit_edge
  %23 = load i32, ptr @zero_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %23, i32 %shr.i)
  %cmp.i45.not.i = icmp eq i32 %23, %shr.i
  br i1 %cmp.i45.not.i, label %if.end18.i.vm_normal_page.exit.thread_crit_edge, label %check_pfn.i

if.end18.i.vm_normal_page.exit.thread_crit_edge:  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vm_normal_page.exit.thread

check_pfn.i:                                      ; preds = %if.end18.i
  %24 = load i32, ptr @highest_memmap_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i, i32 %24)
  %cmp23.i = icmp ugt i32 %shr.i, %24
  br i1 %cmp23.i, label %if.then30.i, label %check_pfn.i.vm_normal_page.exit_crit_edge, !prof !230

check_pfn.i.vm_normal_page.exit_crit_edge:        ; preds = %check_pfn.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vm_normal_page.exit

if.then30.i:                                      ; preds = %check_pfn.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @print_bad_pte(ptr noundef %1, i32 noundef %13, i32 noundef %16, ptr noundef null) #15
  br label %vm_normal_page.exit.thread

vm_normal_page.exit.thread:                       ; preds = %if.then30.i, %if.end18.i.vm_normal_page.exit.thread_crit_edge, %if.else.i.vm_normal_page.exit.thread_crit_edge, %if.then7.i.vm_normal_page.exit.thread_crit_edge
  %page197 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %25 = ptrtoint ptr %page197 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %page197, align 4
  br label %if.then22

vm_normal_page.exit:                              ; preds = %check_pfn.i.vm_normal_page.exit_crit_edge, %if.then7.i.vm_normal_page.exit_crit_edge
  %26 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %27 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub32.i = sub i32 %shr.i, %27
  %add.ptr.i = getelementptr %struct.page, ptr %26, i32 %sub32.i
  %page = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %28 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %add.ptr.i, ptr %page, align 4
  %tobool21.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool21.not, label %vm_normal_page.exit.if.then22_crit_edge, label %if.end38

vm_normal_page.exit.if.then22_crit_edge:          ; preds = %vm_normal_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then22

if.then22:                                        ; preds = %vm_normal_page.exit.if.then22_crit_edge, %vm_normal_page.exit.thread
  %29 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %vm_flags.i, align 4
  %and = and i32 %30, 10
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %and)
  %cmp = icmp eq i32 %and, 10
  br i1 %cmp, label %if.then23, label %do.body26

if.then23:                                        ; preds = %if.then22
  %31 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %vmf, align 4
  %vm_ops.i = getelementptr inbounds %struct.vm_area_struct, ptr %32, i32 0, i32 12
  %33 = ptrtoint ptr %vm_ops.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %vm_ops.i, align 4
  %tobool.not.i146 = icmp eq ptr %34, null
  br i1 %tobool.not.i146, label %if.then23.if.end15.i_crit_edge, label %land.lhs.true.i

if.then23.if.end15.i_crit_edge:                   ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.i

land.lhs.true.i:                                  ; preds = %if.then23
  %pfn_mkwrite.i = getelementptr inbounds %struct.vm_operations_struct, ptr %34, i32 0, i32 10
  %35 = ptrtoint ptr %pfn_mkwrite.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pfn_mkwrite.i, align 4
  %tobool3.not.i = icmp eq ptr %36, null
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.end15.i_crit_edge, label %if.then.i149

land.lhs.true.i.if.end15.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.i

if.then.i149:                                     ; preds = %land.lhs.true.i
  %ptl.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %37 = ptrtoint ptr %ptl.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %ptl.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %38) #15
  %39 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %pte, align 4
  tail call void @kunmap_local_indexed(ptr noundef %40) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %41 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %44, i32 0, i32 213
  %45 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %dec.i.i.i.i = add i32 %46, -1
  store i32 %dec.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %47 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %sub.i.i.i = add i32 %50, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  %flags.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %51 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %flags.i, align 4
  %or.i = or i32 %52, 2
  store i32 %or.i, ptr %flags.i, align 4
  %53 = ptrtoint ptr %vm_ops.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %vm_ops.i, align 4
  %pfn_mkwrite11.i = getelementptr inbounds %struct.vm_operations_struct, ptr %54, i32 0, i32 10
  %55 = ptrtoint ptr %pfn_mkwrite11.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %pfn_mkwrite11.i, align 4
  %call.i147 = tail call i32 %56(ptr noundef %vmf) #15
  %and.i148 = and i32 %call.i147, 2419
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i148)
  %tobool12.not.i = icmp eq i32 %and.i148, 0
  br i1 %tobool12.not.i, label %if.end.i, label %if.then.i149.cleanup88_crit_edge

if.then.i149.cleanup88_crit_edge:                 ; preds = %if.then.i149
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup88

if.end.i:                                         ; preds = %if.then.i149
  call void @__sanitizer_cov_trace_pc() #17
  %call14.i = tail call i32 @finish_mkwrite_fault(ptr noundef %vmf) #15
  br label %cleanup88

if.end15.i:                                       ; preds = %land.lhs.true.i.if.end15.i_crit_edge, %if.then23.if.end15.i_crit_edge
  tail call fastcc void @wp_page_reuse(ptr noundef %vmf) #15
  br label %cleanup88

do.body26:                                        ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #17
  %ptl27 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %57 = ptrtoint ptr %ptl27 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %ptl27, align 4
  tail call void @_raw_spin_unlock(ptr noundef %58) #15
  %59 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %pte, align 4
  tail call void @kunmap_local_indexed(ptr noundef %60) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %61 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %61, -16384
  %62 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 2
  %63 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %64, i32 0, i32 213
  %65 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %66, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %67 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %67, -16384
  %68 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %68, i32 0, i32 1
  %69 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i151 = add i32 %70, -1
  store volatile i32 %sub.i.i151, ptr %preempt_count.i.i.i, align 4
  %call37 = tail call fastcc i32 @wp_page_copy(ptr noundef %vmf)
  br label %cleanup88

if.end38:                                         ; preds = %vm_normal_page.exit
  %71 = getelementptr %struct.page, ptr %26, i32 %sub32.i, i32 1
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %71, align 4
  %and.i2.i = and i32 %73, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i)
  %tobool.not.i.i = icmp eq i32 %and.i2.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %73, -1
  br label %PageAnon.exit

if.end.i.i:                                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #17
  %74 = ptrtoint ptr %add.ptr.i to i32
  br label %PageAnon.exit

PageAnon.exit:                                    ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %74, %if.end.i.i ]
  %75 = inttoptr i32 %retval.0.i.i to ptr
  %mapping.i.i = getelementptr inbounds %struct.anon.101, ptr %75, i32 0, i32 2
  %76 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %mapping.i.i, align 4
  %78 = ptrtoint ptr %77 to i32
  %and.i.i = and i32 %78, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %cmp.i.i.not, label %if.else, label %if.then41

if.then41:                                        ; preds = %PageAnon.exit
  %79 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %71, align 4
  %and.i2.i123 = and i32 %80, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i123)
  %tobool.not.i.i124 = icmp eq i32 %and.i2.i123, 0
  br i1 %tobool.not.i.i124, label %if.end.i.i127, label %if.then.i.i126, !prof !218

if.then.i.i126:                                   ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i125 = add i32 %80, -1
  br label %PageKsm.exit

if.end.i.i127:                                    ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #17
  %81 = ptrtoint ptr %add.ptr.i to i32
  br label %PageKsm.exit

PageKsm.exit:                                     ; preds = %if.end.i.i127, %if.then.i.i126
  %retval.0.i.i128 = phi i32 [ %sub.i.i125, %if.then.i.i126 ], [ %81, %if.end.i.i127 ]
  %82 = inttoptr i32 %retval.0.i.i128 to ptr
  %mapping.i.i129 = getelementptr inbounds %struct.anon.101, ptr %82, i32 0, i32 2
  %83 = ptrtoint ptr %mapping.i.i129 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %mapping.i.i129, align 4
  %85 = ptrtoint ptr %84 to i32
  %and.i.i130 = and i32 %85, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i.i130)
  %cmp.i.i131 = icmp eq i32 %and.i.i130, 3
  br i1 %cmp.i.i131, label %PageKsm.exit.copy_crit_edge, label %lor.lhs.false

PageKsm.exit.copy_crit_edge:                      ; preds = %PageKsm.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %copy

lor.lhs.false:                                    ; preds = %PageKsm.exit
  %86 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %71, align 4
  %and.i.i152 = and i32 %87, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i152)
  %tobool.not.i.i153 = icmp eq i32 %and.i.i152, 0
  br i1 %tobool.not.i.i153, label %if.end.i.i156, label %if.then.i.i155, !prof !218

if.then.i.i155:                                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i154 = add i32 %87, -1
  br label %page_count.exit

if.end.i.i156:                                    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  %88 = ptrtoint ptr %add.ptr.i to i32
  br label %page_count.exit

page_count.exit:                                  ; preds = %if.end.i.i156, %if.then.i.i155
  %retval.0.i.i157 = phi i32 [ %sub.i.i154, %if.then.i.i155 ], [ %88, %if.end.i.i156 ]
  %89 = inttoptr i32 %retval.0.i.i157 to ptr
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %89, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #15
  %90 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %_refcount.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %91)
  %cmp46.not = icmp eq i32 %91, 1
  br i1 %cmp46.not, label %if.end48, label %page_count.exit.copy_crit_edge

page_count.exit.copy_crit_edge:                   ; preds = %page_count.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %copy

if.end48:                                         ; preds = %page_count.exit
  %92 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %71, align 4
  %and.i.i158 = and i32 %93, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i158)
  %tobool.not.i.i159 = icmp eq i32 %and.i.i158, 0
  br i1 %tobool.not.i.i159, label %if.end.i.i162, label %if.then.i.i161, !prof !218

if.then.i.i161:                                   ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i160 = add i32 %93, -1
  br label %_compound_head.exit.i

if.end.i.i162:                                    ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  %94 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i162, %if.then.i.i161
  %retval.0.i.i163 = phi i32 [ %sub.i.i160, %if.then.i.i161 ], [ %94, %if.end.i.i162 ]
  %95 = inttoptr i32 %retval.0.i.i163 to ptr
  %96 = getelementptr inbounds %struct.page, ptr %95, i32 0, i32 1
  %97 = ptrtoint ptr %96 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %96, align 4
  %and.i.i.i.i164 = and i32 %98, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i164)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i164, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !218

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %95, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %95, i32 noundef 4) #15
  %99 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %95, align 4
  %and.i.i4.i.i = and i32 %100, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %trylock_page.exit, label %folio_flags.exit.i.i.copy_crit_edge

folio_flags.exit.i.i.copy_crit_edge:              ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %copy

trylock_page.exit:                                ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %95, i32 1, i32 3, i32 1) #15
  %101 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %95, ptr %95, i32 1, ptr elementtype(i32) %95) #15, !srcloc !277
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %101, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !278
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool50.not.not = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool50.not.not, label %if.end52, label %trylock_page.exit.copy_crit_edge

trylock_page.exit.copy_crit_edge:                 ; preds = %trylock_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %copy

if.end52:                                         ; preds = %trylock_page.exit
  %102 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load volatile i32, ptr %71, align 4
  %and.i2.i132 = and i32 %103, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i132)
  %tobool.not.i.i133 = icmp eq i32 %and.i2.i132, 0
  br i1 %tobool.not.i.i133, label %if.end.i.i136, label %if.then.i.i135, !prof !218

if.then.i.i135:                                   ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i134 = add i32 %103, -1
  br label %PageKsm.exit141

if.end.i.i136:                                    ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #17
  %104 = ptrtoint ptr %add.ptr.i to i32
  br label %PageKsm.exit141

PageKsm.exit141:                                  ; preds = %if.end.i.i136, %if.then.i.i135
  %retval.0.i.i137 = phi i32 [ %sub.i.i134, %if.then.i.i135 ], [ %104, %if.end.i.i136 ]
  %105 = inttoptr i32 %retval.0.i.i137 to ptr
  %mapping.i.i138 = getelementptr inbounds %struct.anon.101, ptr %105, i32 0, i32 2
  %106 = ptrtoint ptr %mapping.i.i138 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %mapping.i.i138, align 4
  %108 = ptrtoint ptr %107 to i32
  %and.i.i139 = and i32 %108, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i.i139)
  %cmp.i.i140 = icmp eq i32 %and.i.i139, 3
  br i1 %cmp.i.i140, label %PageKsm.exit141.if.then60_crit_edge, label %lor.lhs.false54

PageKsm.exit141.if.then60_crit_edge:              ; preds = %PageKsm.exit141
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then60

lor.lhs.false54:                                  ; preds = %PageKsm.exit141
  %109 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load volatile i32, ptr %add.ptr.i, align 4
  %111 = and i32 %110, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %111)
  %tobool.not.i.i165 = icmp eq i32 %111, 0
  br i1 %tobool.not.i.i165, label %PageCompound.exit.i, label %lor.lhs.false54.if.then.i167_crit_edge

lor.lhs.false54.if.then.i167_crit_edge:           ; preds = %lor.lhs.false54
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i167

PageCompound.exit.i:                              ; preds = %lor.lhs.false54
  %112 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load volatile i32, ptr %71, align 4
  %and.i.i.i = and i32 %113, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i166 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i166, label %if.end.i170, label %PageCompound.exit.i.if.then.i167_crit_edge, !prof !218

PageCompound.exit.i.if.then.i167_crit_edge:       ; preds = %PageCompound.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i167

if.then.i167:                                     ; preds = %PageCompound.exit.i.if.then.i167_crit_edge, %lor.lhs.false54.if.then.i167_crit_edge
  %call3.i = tail call i32 @__page_mapcount(ptr noundef nonnull %add.ptr.i) #15
  br label %page_mapcount.exit

if.end.i170:                                      ; preds = %PageCompound.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %114 = getelementptr %struct.page, ptr %26, i32 %sub32.i, i32 2
  %call.i.i.i168 = tail call zeroext i1 @__kasan_check_read(ptr noundef %114, i32 noundef 4) #15
  %115 = ptrtoint ptr %114 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile i32, ptr %114, align 4
  %add.i169 = add i32 %116, 1
  br label %page_mapcount.exit

page_mapcount.exit:                               ; preds = %if.end.i170, %if.then.i167
  %retval.0.i = phi i32 [ %call3.i, %if.then.i167 ], [ %add.i169, %if.end.i170 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retval.0.i)
  %cmp56.not = icmp eq i32 %retval.0.i, 1
  br i1 %cmp56.not, label %lor.lhs.false57, label %page_mapcount.exit.if.then60_crit_edge

page_mapcount.exit.if.then60_crit_edge:           ; preds = %page_mapcount.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then60

lor.lhs.false57:                                  ; preds = %page_mapcount.exit
  %117 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load volatile i32, ptr %71, align 4
  %and.i.i171 = and i32 %118, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i171)
  %tobool.not.i.i172 = icmp eq i32 %and.i.i171, 0
  br i1 %tobool.not.i.i172, label %if.end.i.i175, label %if.then.i.i174, !prof !218

if.then.i.i174:                                   ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i173 = add i32 %118, -1
  br label %page_count.exit180

if.end.i.i175:                                    ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #17
  %119 = ptrtoint ptr %add.ptr.i to i32
  br label %page_count.exit180

page_count.exit180:                               ; preds = %if.end.i.i175, %if.then.i.i174
  %retval.0.i.i176 = phi i32 [ %sub.i.i173, %if.then.i.i174 ], [ %119, %if.end.i.i175 ]
  %120 = inttoptr i32 %retval.0.i.i176 to ptr
  %_refcount.i.i.i177 = getelementptr inbounds %struct.page, ptr %120, i32 0, i32 3
  %call.i.i.i.i.i178 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i177, i32 noundef 4) #15
  %121 = ptrtoint ptr %_refcount.i.i.i177 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile i32, ptr %_refcount.i.i.i177, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %122)
  %cmp59.not = icmp eq i32 %122, 1
  br i1 %cmp59.not, label %if.end61, label %page_count.exit180.if.then60_crit_edge

page_count.exit180.if.then60_crit_edge:           ; preds = %page_count.exit180
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then60

if.then60:                                        ; preds = %page_count.exit180.if.then60_crit_edge, %page_mapcount.exit.if.then60_crit_edge, %PageKsm.exit141.if.then60_crit_edge
  tail call void @unlock_page(ptr noundef nonnull %add.ptr.i) #15
  br label %copy

if.end61:                                         ; preds = %page_count.exit180
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @unlock_page(ptr noundef nonnull %add.ptr.i) #15
  tail call fastcc void @wp_page_reuse(ptr noundef %vmf)
  br label %cleanup88

if.else:                                          ; preds = %PageAnon.exit
  %123 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %vm_flags.i, align 4
  %and63 = and i32 %124, 10
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %and63)
  %cmp64 = icmp eq i32 %and63, 10
  br i1 %cmp64, label %if.then71, label %if.else.copy_crit_edge, !prof !230

if.else.copy_crit_edge:                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %copy

if.then71:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %call72 = tail call fastcc i32 @wp_page_shared(ptr noundef %vmf)
  br label %cleanup88

copy:                                             ; preds = %if.else.copy_crit_edge, %if.then60, %trylock_page.exit.copy_crit_edge, %folio_flags.exit.i.i.copy_crit_edge, %page_count.exit.copy_crit_edge, %PageKsm.exit.copy_crit_edge
  %125 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %page, align 4
  %127 = getelementptr inbounds %struct.page, ptr %126, i32 0, i32 1
  %128 = ptrtoint ptr %127 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load volatile i32, ptr %127, align 4
  %and.i.i181 = and i32 %129, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i181)
  %tobool.not.i.i182 = icmp eq i32 %and.i.i181, 0
  br i1 %tobool.not.i.i182, label %if.end.i.i185, label %if.then.i.i184, !prof !218

if.then.i.i184:                                   ; preds = %copy
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i183 = add i32 %129, -1
  br label %_compound_head.exit.i188

if.end.i.i185:                                    ; preds = %copy
  call void @__sanitizer_cov_trace_pc() #17
  %130 = ptrtoint ptr %126 to i32
  br label %_compound_head.exit.i188

_compound_head.exit.i188:                         ; preds = %if.end.i.i185, %if.then.i.i184
  %retval.0.i.i186 = phi i32 [ %sub.i.i183, %if.then.i.i184 ], [ %130, %if.end.i.i185 ]
  %131 = inttoptr i32 %retval.0.i.i186 to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %131, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  %132 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %133, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i187 = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i187, label %if.then.i1.i, label %do.end5.i.i, !prof !230

if.then.i1.i:                                     ; preds = %_compound_head.exit.i188
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %131, ptr noundef nonnull @.str.50) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #15, !srcloc !287
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i188
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #15
  %134 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #15, !srcloc !233
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@do_wp_page, %if.then.i.i.i.i)) #15
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !217

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__page_ref_mod(ptr noundef %131, i32 noundef 1) #15
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %ptl77 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %135 = ptrtoint ptr %ptl77 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %ptl77, align 4
  tail call void @_raw_spin_unlock(ptr noundef %136) #15
  %137 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %pte, align 4
  tail call void @kunmap_local_indexed(ptr noundef %138) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %139 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i189 = and i32 %139, -16384
  %140 = inttoptr i32 %and.i.i.i1.i189 to ptr
  %task.i.i.i190 = getelementptr inbounds %struct.thread_info, ptr %140, i32 0, i32 2
  %141 = ptrtoint ptr %task.i.i.i190 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %task.i.i.i190, align 8
  %pagefault_disabled.i.i.i191 = getelementptr inbounds %struct.task_struct, ptr %142, i32 0, i32 213
  %143 = ptrtoint ptr %pagefault_disabled.i.i.i191 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %pagefault_disabled.i.i.i191, align 8
  %dec.i.i.i192 = add i32 %144, -1
  store i32 %dec.i.i.i192, ptr %pagefault_disabled.i.i.i191, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %145 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i193 = and i32 %145, -16384
  %146 = inttoptr i32 %and.i.i.i.i193 to ptr
  %preempt_count.i.i.i194 = getelementptr inbounds %struct.thread_info, ptr %146, i32 0, i32 1
  %147 = ptrtoint ptr %preempt_count.i.i.i194 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load volatile i32, ptr %preempt_count.i.i.i194, align 4
  %sub.i.i195 = add i32 %148, -1
  store volatile i32 %sub.i.i195, ptr %preempt_count.i.i.i194, align 4
  %call87 = tail call fastcc i32 @wp_page_copy(ptr noundef %vmf)
  br label %cleanup88

cleanup88:                                        ; preds = %get_page.exit, %if.then71, %if.end61, %do.body26, %if.end15.i, %if.end.i, %if.then.i149.cleanup88_crit_edge
  %retval.1 = phi i32 [ %call87, %get_page.exit ], [ %call72, %if.then71 ], [ %call37, %do.body26 ], [ 8, %if.end61 ], [ 8, %if.end15.i ], [ %call14.i, %if.end.i ], [ %call.i147, %if.then.i149.cleanup88_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_swap_device(ptr noundef %si) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !285
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i.i.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i.i.i, label %entry.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

entry.rcu_read_lock.exit.i.i_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %entry
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit.i.i

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b4.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i, label %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 696, ptr noundef nonnull @.str.42) #15
  br label %rcu_read_lock.exit.i.i

rcu_read_lock.exit.i.i:                           ; preds = %if.then.i.i.i, %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %entry.rcu_read_lock.exit.i.i_crit_edge
  %4 = ptrtoint ptr %si to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %si, align 4
  %and.i.i.i = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i1.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i1.i.i, label %do.body1.i.i, label %if.else.i.i, !prof !218

do.body1.i.i:                                     ; preds = %rcu_read_lock.exit.i.i
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !228
  %7 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i2.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i2.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %12, %5
  %13 = inttoptr i32 %add.i.i to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add15.i.i = add i32 %15, -1
  store i32 %add15.i.i, ptr %13, align 4
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !229
  %and.i.i.i.i = and i32 %16, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then29.i.i, label %do.body1.i.i.do.end31.i.i_crit_edge, !prof !230

do.body1.i.i.do.end31.i.i_crit_edge:              ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end31.i.i

if.then29.i.i:                                    ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %do.end31.i.i

do.end31.i.i:                                     ; preds = %if.then29.i.i, %do.body1.i.i.do.end31.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #15, !srcloc !231
  br label %if.end48.i.i

if.else.i.i:                                      ; preds = %rcu_read_lock.exit.i.i
  %data.i.i = getelementptr inbounds %struct.percpu_ref, ptr %si, i32 0, i32 1
  %17 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %18, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %18, i32 1, i32 3, i32 1) #15
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %18, ptr %18, i32 1, ptr elementtype(i32) %18) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %19, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i, label %if.then45.i.i, label %if.else.i.i.if.end48.i.i_crit_edge, !prof !230

if.else.i.i.if.end48.i.i_crit_edge:               ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end48.i.i

if.then45.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data.i.i, align 4
  %release.i.i = getelementptr inbounds %struct.percpu_ref_data, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %release.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %release.i.i, align 4
  tail call void %23(ptr noundef %si) #15
  br label %if.end48.i.i

if.end48.i.i:                                     ; preds = %if.then45.i.i, %if.else.i.i.if.end48.i.i_crit_edge, %do.end31.i.i
  %call.i3.i.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i3.i.i, label %if.end48.i.i.percpu_ref_put.exit_crit_edge, label %land.lhs.true.i6.i.i

if.end48.i.i.percpu_ref_put.exit_crit_edge:       ; preds = %if.end48.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %percpu_ref_put.exit

land.lhs.true.i6.i.i:                             ; preds = %if.end48.i.i
  %call1.i4.i.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i.i)
  %tobool.not.i5.i.i = icmp eq i32 %call1.i4.i.i, 0
  br i1 %tobool.not.i5.i.i, label %land.lhs.true.i6.i.i.percpu_ref_put.exit_crit_edge, label %land.lhs.true2.i8.i.i

land.lhs.true.i6.i.i.percpu_ref_put.exit_crit_edge: ; preds = %land.lhs.true.i6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %percpu_ref_put.exit

land.lhs.true2.i8.i.i:                            ; preds = %land.lhs.true.i6.i.i
  %.b4.i7.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i.i, label %land.lhs.true2.i8.i.i.percpu_ref_put.exit_crit_edge, label %if.then.i9.i.i

land.lhs.true2.i8.i.i.percpu_ref_put.exit_crit_edge: ; preds = %land.lhs.true2.i8.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %percpu_ref_put.exit

if.then.i9.i.i:                                   ; preds = %land.lhs.true2.i8.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.41, i32 noundef 724, ptr noundef nonnull @.str.43) #15
  br label %percpu_ref_put.exit

percpu_ref_put.exit:                              ; preds = %if.then.i9.i.i, %land.lhs.true2.i8.i.i.percpu_ref_put.exit_crit_edge, %land.lhs.true.i6.i.i.percpu_ref_put.exit_crit_edge, %if.end48.i.i.percpu_ref_put.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !286
  %24 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i10.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i10.i.i to ptr
  %preempt_count.i.i.i.i11.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i11.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i11.i.i, align 4
  %sub.i.i.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i.i.i11.i.i, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @do_set_pmd(ptr nocapture noundef readnone %vmf, ptr nocapture noundef readnone %page) local_unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 2048
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @do_set_pte(ptr nocapture noundef readonly %vmf, ptr noundef %page, i32 noundef %addr) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %flags = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %4 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %4 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %5 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %5
  %shl = shl i32 %add, 12
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 7
  %6 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vm_page_prot, align 4
  %or = or i32 %shl, %7
  br i1 %tobool.not, label %entry.if.else17_crit_edge, label %land.lhs.true13

entry.if.else17_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else17

land.lhs.true13:                                  ; preds = %entry
  %or.i.i = or i32 %or, 64
  %vm_flags.i = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %8 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vm_flags.i, align 4
  %and.i = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and.i.i.i = and i32 %or.i.i, -129
  %spec.select.i = select i1 %tobool.not.i, i32 %or.i.i, i32 %and.i.i.i, !prof !230
  %and14 = and i32 %9, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %if.then16, label %land.lhs.true13.if.else17_crit_edge

land.lhs.true13.if.else17_crit_edge:              ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else17

if.then16:                                        ; preds = %land.lhs.true13
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vm_mm, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task1.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task1.i, align 8
  %mm2.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 53
  %16 = ptrtoint ptr %mm2.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mm2.i, align 8
  %cmp.i = icmp eq ptr %17, %11
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !prof !218

if.then.i:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i = getelementptr %struct.task_struct, ptr %15, i32 0, i32 56, i32 1, i32 1
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %19, 1
  store i32 %add.i, ptr %arrayidx.i, align 4
  br label %add_mm_counter_fast.exit

if.else.i:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i53 = getelementptr %struct.anon.9, ptr %11, i32 0, i32 40, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i53, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i53, i32 1, i32 3, i32 1) #15
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i53, ptr %arrayidx.i53, i32 1, ptr elementtype(i32) %arrayidx.i53) #15, !srcloc !224
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %20, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %11, i32 noundef 1, i32 noundef %asmresult.i.i.i.i.i) #15
  br label %add_mm_counter_fast.exit

add_mm_counter_fast.exit:                         ; preds = %if.else.i, %if.then.i
  tail call void @page_add_new_anon_rmap(ptr noundef %page, ptr noundef %1, i32 noundef %addr, i1 noundef zeroext false) #15
  tail call void @lru_cache_add_inactive_or_unevictable(ptr noundef %page, ptr noundef %1) #15
  br label %if.end20

if.else17:                                        ; preds = %land.lhs.true13.if.else17_crit_edge, %entry.if.else17_crit_edge
  %entry3.160 = phi i32 [ %spec.select.i, %land.lhs.true13.if.else17_crit_edge ], [ %or, %entry.if.else17_crit_edge ]
  %vm_mm18 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %21 = ptrtoint ptr %vm_mm18 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vm_mm18, align 4
  %23 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %23, align 4
  %and.i.i.i42 = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i42)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i42, 0
  br i1 %tobool.not.i.i.i, label %if.else17._compound_head.exit.i.i_crit_edge, label %if.then.i.i.i, !prof !218

if.else17._compound_head.exit.i.i_crit_edge:      ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #17
  br label %_compound_head.exit.i.i

if.then.i.i.i:                                    ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i = add i32 %25, -1
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.then.i.i.i, %if.else17._compound_head.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %sub.ptr.lhs.cast, %if.else17._compound_head.exit.i.i_crit_edge ]
  %26 = inttoptr i32 %retval.0.i.i.i to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %28)
  %cmp.i.not.i.i = icmp eq i32 %28, -1
  %29 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %23, align 4
  %and.i16.i.i = and i32 %30, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %do.end10.i.i, !prof !230

if.then.i.i:                                      ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.then.i.i._compound_head.exit22.i.i_crit_edge, label %if.then.i19.i.i, !prof !218

if.then.i.i._compound_head.exit22.i.i_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %_compound_head.exit22.i.i

if.then.i19.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i = add i32 %30, -1
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.then.i19.i.i, %if.then.i.i._compound_head.exit22.i.i_crit_edge
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %sub.ptr.lhs.cast, %if.then.i.i._compound_head.exit22.i.i_crit_edge ]
  %31 = inttoptr i32 %retval.0.i21.i.i to ptr
  tail call void @dump_page(ptr noundef %31, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #15, !srcloc !248
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %do.end10.i.i.mm_counter_file.exit_crit_edge, label %if.then.i26.i.i, !prof !218

do.end10.i.i.mm_counter_file.exit_crit_edge:      ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %mm_counter_file.exit

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i = add i32 %30, -1
  br label %mm_counter_file.exit

mm_counter_file.exit:                             ; preds = %if.then.i26.i.i, %do.end10.i.i.mm_counter_file.exit_crit_edge
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %sub.ptr.lhs.cast, %do.end10.i.i.mm_counter_file.exit_crit_edge ]
  %32 = inttoptr i32 %retval.0.i28.i.i to ptr
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %32, align 4
  %35 = and i32 %34, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool.not.i43 = icmp eq i32 %35, 0
  %..i = select i1 %tobool.not.i43, i32 0, i32 3
  %36 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i44 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i44 to ptr
  %task1.i45 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %task1.i45 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task1.i45, align 8
  %mm2.i46 = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 53
  %40 = ptrtoint ptr %mm2.i46 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %mm2.i46, align 8
  %cmp.i47 = icmp eq ptr %41, %22
  br i1 %cmp.i47, label %if.then.i50, label %if.else.i51, !prof !218

if.then.i50:                                      ; preds = %mm_counter_file.exit
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i48 = getelementptr %struct.task_struct, ptr %39, i32 0, i32 56, i32 1, i32 %..i
  %42 = ptrtoint ptr %arrayidx.i48 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx.i48, align 4
  %add.i49 = add i32 %43, 1
  store i32 %add.i49, ptr %arrayidx.i48, align 4
  br label %add_mm_counter_fast.exit52

if.else.i51:                                      ; preds = %mm_counter_file.exit
  call void @__sanitizer_cov_trace_pc() #17
  %rss_stat.i54 = getelementptr inbounds %struct.anon.9, ptr %22, i32 0, i32 40
  %arrayidx.i55 = getelementptr [4 x %struct.atomic_t], ptr %rss_stat.i54, i32 0, i32 %..i
  %call.i.i.i56 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i55, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i55, i32 1, i32 3, i32 1) #15
  %44 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i55, ptr %arrayidx.i55, i32 1, ptr elementtype(i32) %arrayidx.i55) #15, !srcloc !224
  %asmresult.i.i.i.i.i57 = extractvalue { i32, i32 } %44, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %22, i32 noundef %..i, i32 noundef %asmresult.i.i.i.i.i57) #15
  br label %add_mm_counter_fast.exit52

add_mm_counter_fast.exit52:                       ; preds = %if.else.i51, %if.then.i50
  tail call void @page_add_file_rmap(ptr noundef %page, i1 noundef zeroext false) #15
  br label %if.end20

if.end20:                                         ; preds = %add_mm_counter_fast.exit52, %add_mm_counter_fast.exit
  %entry3.159 = phi i32 [ %entry3.160, %add_mm_counter_fast.exit52 ], [ %spec.select.i, %add_mm_counter_fast.exit ]
  %vm_mm21 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %45 = ptrtoint ptr %vm_mm21 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %vm_mm21, align 4
  %pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %47 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pte, align 4
  tail call void @set_pte_at(ptr noundef %46, i32 noundef %addr, ptr noundef %48, i32 noundef %entry3.159) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_add_file_rmap(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @finish_fault(ptr nocapture noundef %vmf) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %flags = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.else_crit_edge, label %land.lhs.true

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %4 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vm_flags, align 4
  %and2 = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.then, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %cow_page = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 5
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %page4 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %page.0.in = phi ptr [ %page4, %if.else ], [ %cow_page, %if.then ]
  %6 = ptrtoint ptr %page.0.in to i32
  call void @__asan_load4_noabort(i32 %6)
  %page.0 = load ptr, ptr %page.0.in, align 4
  %vm_flags5 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %7 = ptrtoint ptr %vm_flags5 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vm_flags5, align 4
  %and6 = and i32 %8, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %if.then8, label %if.end.if.end12_crit_edge

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12

if.then8:                                         ; preds = %if.end
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %9 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vm_mm, align 4
  %flags.i = getelementptr inbounds %struct.anon.9, ptr %10, i32 0, i32 43
  %11 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %flags.i, align 4
  %13 = lshr i32 %12, 21
  %14 = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool9.not = icmp eq i32 %14, 0
  br i1 %tobool9.not, label %if.then8.if.end12_crit_edge, label %if.then8.cleanup_crit_edge

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then8.if.end12_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12

if.end12:                                         ; preds = %if.then8.if.end12_crit_edge, %if.end.if.end12_crit_edge
  %pmd = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %15 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pmd, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool13.not = icmp eq i32 %18, 0
  br i1 %tobool13.not, label %if.then14, label %if.end12.if.end46_crit_edge

if.end12.if.end46_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end46

if.then14:                                        ; preds = %if.end12
  %prealloc_pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 9
  %19 = ptrtoint ptr %prealloc_pte to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prealloc_pte, align 4
  %tobool22.not = icmp eq ptr %20, null
  %vm_mm33 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %21 = ptrtoint ptr %vm_mm33 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vm_mm33, align 4
  br i1 %tobool22.not, label %land.rhs, label %if.then23

if.then23:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @pmd_install(ptr noundef %22, ptr noundef %16, ptr noundef %prealloc_pte)
  br label %if.end46

land.rhs:                                         ; preds = %if.then14
  %call35 = tail call i32 @__pte_alloc(ptr noundef %22, ptr noundef %16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %land.rhs.if.end46_crit_edge, label %land.rhs.cleanup_crit_edge, !prof !218

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.rhs.if.end46_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end46

if.end46:                                         ; preds = %land.rhs.if.end46_crit_edge, %if.then23, %if.end12.if.end46_crit_edge
  %23 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pmd, align 4
  %25 = load ptr, ptr @mem_map, align 4
  %26 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %24, align 4
  %shr.i = lshr i32 %27, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %28 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %shr.i, %28
  %ptl.i.i = getelementptr %struct.page, ptr %25, i32 %sub.i, i32 1, i32 0, i32 3
  %29 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ptl.i.i, align 4
  %add.ptr = getelementptr %struct.page, ptr %25, i32 %sub.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %31 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %31, 512
  %32 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %35, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %36 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 213
  %40 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %41, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr, i32 noundef %or.i) #15
  %address = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %42 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %address, align 4
  %shr.i122 = lshr i32 %43, 12
  %and.i = and i32 %shr.i122, 511
  %add.ptr59 = getelementptr i32, ptr %call.i.i, i32 %and.i
  %ptl = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %44 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %30, ptr %ptl, align 4
  tail call void @_raw_spin_lock(ptr noundef %30) #15
  %pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %45 = ptrtoint ptr %pte to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %add.ptr59, ptr %pte, align 4
  %46 = ptrtoint ptr %add.ptr59 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %add.ptr59, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool61.not = icmp eq i32 %47, 0
  br i1 %tobool61.not, label %if.then70, label %if.end46.if.end73_crit_edge, !prof !218

if.end46.if.end73_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end73

if.then70:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  %48 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %address, align 4
  tail call void @do_set_pte(ptr noundef %vmf, ptr noundef %page.0, i32 noundef %49)
  br label %if.end73

if.end73:                                         ; preds = %if.then70, %if.end46.if.end73_crit_edge
  %ret.0 = phi i32 [ 0, %if.then70 ], [ 256, %if.end46.if.end73_crit_edge ]
  %50 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ptl, align 4
  tail call void @_raw_spin_unlock(ptr noundef %51) #15
  %52 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %pte, align 4
  tail call void @kunmap_local_indexed(ptr noundef %53) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %54 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %54, -16384
  %55 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %55, i32 0, i32 2
  %56 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %57, i32 0, i32 213
  %58 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %59, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %60 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %63, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end73, %land.rhs.cleanup_crit_edge, %if.then8.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %if.end73 ], [ %14, %if.then8.cleanup_crit_edge ], [ 1, %land.rhs.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @fault_around_debugfs() #7 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @debugfs_create_file_unsafe(ptr noundef nonnull @.str.48, i16 noundef zeroext 420, ptr noundef null, ptr noundef null, ptr noundef nonnull @fault_around_bytes_fops) #15
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @numa_migrate_prep(ptr noundef %page, ptr nocapture noundef readnone %vma, i32 noundef %addr, i32 noundef %page_nid, ptr nocapture noundef %flags) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %2, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  %5 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %6, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !230

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %4, ptr noundef nonnull @.str.50) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #15, !srcloc !287
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #15
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #15, !srcloc !233
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@numa_migrate_prep, %if.then.i.i.i.i)) #15
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !217

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__page_ref_mod(ptr noundef %4, i32 noundef 1) #15
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %page_nid)
  %cmp = icmp eq i32 %page_nid, 0
  br i1 %cmp, label %do.end2, label %get_page.exit.if.end_crit_edge

get_page.exit.if.end_crit_edge:                   ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.end2:                                          ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %or = or i32 %9, 8
  store i32 %or, ptr %flags, align 4
  br label %if.end

if.end:                                           ; preds = %do.end2, %get_page.exit.if.end_crit_edge
  ret i32 -1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @handle_mm_fault(ptr noundef %vma, i32 noundef %address, i32 noundef %flags, ptr noundef %regs) #2 align 64 {
entry:
  %vmf.i = alloca %struct.vm_fault, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  br label %__here

__here:                                           ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 212
  %4 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 ptrtoint (ptr blockaddress(@handle_mm_fault, %__here) to i32), ptr %task_state_change, align 4
  %5 = load ptr, ptr %task, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 0, ptr %5, align 128
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !228
  %8 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i, align 4
  %arrayidx13.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx13.i, align 4
  %add.i = add i32 %13, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 20) to i32)
  %14 = inttoptr i32 %add.i to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add14.i = add i32 %16, 1
  store i32 %add14.i, ptr %14, align 4
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !229
  %and.i.i.i = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %__here.count_vm_event.exit_crit_edge, !prof !230

__here.count_vm_event.exit_crit_edge:             ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %count_vm_event.exit

if.then.i:                                        ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %count_vm_event.exit

count_vm_event.exit:                              ; preds = %if.then.i, %__here.count_vm_event.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #15, !srcloc !231
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %18 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vm_mm, align 4
  tail call fastcc void @count_memcg_event_mm(ptr noundef %19, i32 noundef 20)
  %20 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task, align 8
  %22 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i107 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i107 to ptr
  %task1.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %task1.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task1.i, align 8
  %cmp.not.i = icmp eq ptr %25, %21
  br i1 %cmp.not.i, label %if.end.i, label %count_vm_event.exit.check_sync_rss_stat.exit_crit_edge, !prof !218

count_vm_event.exit.check_sync_rss_stat.exit_crit_edge: ; preds = %count_vm_event.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %check_sync_rss_stat.exit

if.end.i:                                         ; preds = %count_vm_event.exit
  %rss_stat.i = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 56
  %26 = ptrtoint ptr %rss_stat.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rss_stat.i, align 8
  %inc.i = add i32 %27, 1
  store i32 %inc.i, ptr %rss_stat.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %27)
  %cmp3.i = icmp sgt i32 %27, 64
  br i1 %cmp3.i, label %if.then10.i, label %if.end.i.check_sync_rss_stat.exit_crit_edge, !prof !230

if.end.i.check_sync_rss_stat.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %check_sync_rss_stat.exit

if.then10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %mm.i = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 53
  %28 = ptrtoint ptr %mm.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mm.i, align 8
  tail call void @sync_mm_rss(ptr noundef %29) #15
  br label %check_sync_rss_stat.exit

check_sync_rss_stat.exit:                         ; preds = %if.then10.i, %if.end.i.check_sync_rss_stat.exit_crit_edge, %count_vm_event.exit.check_sync_rss_stat.exit_crit_edge
  %and61 = and i32 %flags, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61)
  %tobool62.not = icmp eq i32 %and61, 0
  br i1 %tobool62.not, label %check_sync_rss_stat.exit.if.end64_crit_edge, label %if.then63

check_sync_rss_stat.exit.if.end64_crit_edge:      ; preds = %check_sync_rss_stat.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64

if.then63:                                        ; preds = %check_sync_rss_stat.exit
  %30 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i108 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i108 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task.i, align 8
  %in_user_fault.i = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 65
  %34 = ptrtoint ptr %in_user_fault.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %bf.load.i = load i16, ptr %in_user_fault.i, align 8
  %35 = and i16 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %35)
  %tobool.not.i109 = icmp eq i16 %35, 0
  br i1 %tobool.not.i109, label %if.then63.mem_cgroup_enter_user_fault.exit_crit_edge, label %do.end.i, !prof !218

if.then63.mem_cgroup_enter_user_fault.exit_crit_edge: ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #17
  br label %mem_cgroup_enter_user_fault.exit

do.end.i:                                         ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.40, i32 noundef 907, i32 noundef 9, ptr noundef null) #15
  br label %mem_cgroup_enter_user_fault.exit

mem_cgroup_enter_user_fault.exit:                 ; preds = %do.end.i, %if.then63.mem_cgroup_enter_user_fault.exit_crit_edge
  %36 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task.i, align 8
  %in_user_fault22.i = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 65
  %38 = ptrtoint ptr %in_user_fault22.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %bf.load23.i = load i16, ptr %in_user_fault22.i, align 8
  %bf.set.i = or i16 %bf.load23.i, 4096
  store i16 %bf.set.i, ptr %in_user_fault22.i, align 8
  br label %if.end64

if.end64:                                         ; preds = %mem_cgroup_enter_user_fault.exit, %check_sync_rss_stat.exit.if.end64_crit_edge
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %vmf.i) #15
  %39 = ptrtoint ptr %vmf.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %vma, ptr %vmf.i, align 4
  %gfp_mask.i = getelementptr inbounds %struct.anon.73, ptr %vmf.i, i32 0, i32 1
  %vm_file1.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 14
  %40 = ptrtoint ptr %vm_file1.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %vm_file1.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %41, null
  br i1 %tobool.not.i.i, label %if.end64.__get_fault_gfp_mask.exit.i_crit_edge, label %if.then.i.i

if.end64.__get_fault_gfp_mask.exit.i_crit_edge:   ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #17
  br label %__get_fault_gfp_mask.exit.i

if.then.i.i:                                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #17
  %f_mapping.i.i = getelementptr inbounds %struct.file, ptr %41, i32 0, i32 18
  %42 = ptrtoint ptr %f_mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %f_mapping.i.i, align 4
  %gfp_mask.i.i.i = getelementptr inbounds %struct.address_space, ptr %43, i32 0, i32 3
  %44 = ptrtoint ptr %gfp_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %gfp_mask.i.i.i, align 4
  %or2.i.i = or i32 %45, 192
  br label %__get_fault_gfp_mask.exit.i

__get_fault_gfp_mask.exit.i:                      ; preds = %if.then.i.i, %if.end64.__get_fault_gfp_mask.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %or2.i.i, %if.then.i.i ], [ 3264, %if.end64.__get_fault_gfp_mask.exit.i_crit_edge ]
  %46 = ptrtoint ptr %gfp_mask.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %retval.0.i.i, ptr %gfp_mask.i, align 4
  %pgoff.i = getelementptr inbounds %struct.anon.73, ptr %vmf.i, i32 0, i32 2
  %47 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %vma, align 4
  %sub.i.i = sub i32 %address, %48
  %shr.i.i = lshr i32 %sub.i.i, 12
  %vm_pgoff.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 13
  %49 = ptrtoint ptr %vm_pgoff.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %vm_pgoff.i.i, align 4
  %add.i.i = add i32 %shr.i.i, %50
  %51 = ptrtoint ptr %pgoff.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %add.i.i, ptr %pgoff.i, align 4
  %address3.i = getelementptr inbounds %struct.anon.73, ptr %vmf.i, i32 0, i32 3
  %and.i111 = and i32 %address, -4096
  %52 = ptrtoint ptr %address3.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %and.i111, ptr %address3.i, align 4
  %flags4.i = getelementptr inbounds %struct.vm_fault, ptr %vmf.i, i32 0, i32 1
  %53 = ptrtoint ptr %flags4.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %flags, ptr %flags4.i, align 4
  %pmd.i = getelementptr inbounds %struct.vm_fault, ptr %vmf.i, i32 0, i32 2
  %54 = getelementptr inbounds %struct.vm_fault, ptr %vmf.i, i32 0, i32 4
  %page.i = getelementptr inbounds %struct.vm_fault, ptr %vmf.i, i32 0, i32 6
  %pte.i = getelementptr inbounds %struct.vm_fault, ptr %vmf.i, i32 0, i32 7
  %ptl.i = getelementptr inbounds %struct.vm_fault, ptr %vmf.i, i32 0, i32 8
  %prealloc_pte.i = getelementptr inbounds %struct.vm_fault, ptr %vmf.i, i32 0, i32 9
  %55 = call ptr @memset(ptr %pmd.i, i32 0, i32 32)
  %56 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %vm_mm, align 4
  %pgd6.i = getelementptr inbounds %struct.anon.9, ptr %57, i32 0, i32 8
  %58 = ptrtoint ptr %pgd6.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %pgd6.i, align 4
  %shr.i190.i = lshr i32 %address, 21
  %add.ptr.i.i = getelementptr [2 x i32], ptr %59, i32 %shr.i190.i
  %tobool.not.i112 = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool.not.i112, label %__get_fault_gfp_mask.exit.i.__handle_mm_fault.exit_crit_edge, label %if.end62.i

__get_fault_gfp_mask.exit.i.__handle_mm_fault.exit_crit_edge: ; preds = %__get_fault_gfp_mask.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__handle_mm_fault.exit

if.end62.i:                                       ; preds = %__get_fault_gfp_mask.exit.i
  %pud.i = getelementptr inbounds %struct.vm_fault, ptr %vmf.i, i32 0, i32 3
  %60 = ptrtoint ptr %pud.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %add.ptr.i.i, ptr %pud.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !288
  %61 = ptrtoint ptr %pmd.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %add.ptr.i.i, ptr %pmd.i, align 4
  %62 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %add.ptr.i.i, align 4
  %64 = ptrtoint ptr %54 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %54, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !289
  %65 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %add.ptr.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool.not.i191.i = icmp eq i32 %66, 0
  br i1 %tobool.not.i191.i, label %if.end62.i.if.end22.i.thread.i_crit_edge, label %if.else.i.i, !prof !230

if.end62.i.if.end22.i.thread.i_crit_edge:         ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22.i.thread.i

if.else.i.i:                                      ; preds = %if.end62.i
  %67 = load ptr, ptr @mem_map, align 4
  %shr.i193.i = lshr i32 %66, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %68 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i194.i = sub i32 %shr.i193.i, %68
  %add.ptr.i195.i = getelementptr %struct.page, ptr %67, i32 %sub.i194.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %69 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i.i = or i32 %69, 512
  %70 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i.i = and i32 %70, -16384
  %71 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %71, i32 0, i32 1
  %72 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %73, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %74 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i.i = and i32 %74, -16384
  %75 = inttoptr i32 %and.i.i.i1.i.i.i.i to ptr
  %task.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %75, i32 0, i32 2
  %76 = ptrtoint ptr %task.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %task.i.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %77, i32 0, i32 213
  %78 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %pagefault_disabled.i.i.i.i.i.i, align 8
  %inc.i.i.i.i.i.i = add i32 %79, 1
  store i32 %inc.i.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr.i195.i, i32 noundef %or.i.i.i) #15
  %80 = ptrtoint ptr %address3.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %address3.i, align 4
  %shr.i.i.i = lshr i32 %81, 12
  %and.i.i.i113 = and i32 %shr.i.i.i, 511
  %add.ptr11.i.i = getelementptr i32, ptr %call.i.i.i.i, i32 %and.i.i.i113
  %82 = ptrtoint ptr %pte.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %add.ptr11.i.i, ptr %pte.i, align 4
  %83 = ptrtoint ptr %add.ptr11.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %add.ptr11.i.i, align 4
  %85 = ptrtoint ptr %54 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %84, ptr %54, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !290
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %tobool14.not.i.i = icmp eq i32 %84, 0
  br i1 %tobool14.not.i.i, label %do.end.i.i, label %if.end22.i.i

do.end.i.i:                                       ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %86 = ptrtoint ptr %pte.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %pte.i, align 4
  tail call void @kunmap_local_indexed(ptr noundef %87) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %88 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i = and i32 %88, -16384
  %89 = inttoptr i32 %and.i.i.i1.i.i.i to ptr
  %task.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %89, i32 0, i32 2
  %90 = ptrtoint ptr %task.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %task.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %91, i32 0, i32 213
  %92 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %pagefault_disabled.i.i.i.i.i, align 8
  %dec.i.i.i.i.i = add i32 %93, -1
  store i32 %dec.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %94 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i = and i32 %94, -16384
  %95 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %95, i32 0, i32 1
  %96 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %sub.i.i.i.i = add i32 %97, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  br label %if.end22.i.thread.i

if.end22.i.thread.i:                              ; preds = %do.end.i.i, %if.end62.i.if.end22.i.thread.i_crit_edge
  %98 = ptrtoint ptr %pte.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store ptr null, ptr %pte.i, align 4
  br label %if.then25.i.i

if.end22.i.i:                                     ; preds = %if.else.i.i
  %tobool24.not.i.i = icmp eq ptr %add.ptr11.i.i, null
  br i1 %tobool24.not.i.i, label %if.end22.i.i.if.then25.i.i_crit_edge, label %cond.true.i.i

if.end22.i.i.if.then25.i.i_crit_edge:             ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then25.i.i

if.then25.i.i:                                    ; preds = %if.end22.i.i.if.then25.i.i_crit_edge, %if.end22.i.thread.i
  %99 = ptrtoint ptr %vmf.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %vmf.i, align 4
  %vm_ops.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %100, i32 0, i32 12
  %101 = ptrtoint ptr %vm_ops.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %vm_ops.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %102, null
  br i1 %tobool.not.i.i.i, label %if.then27.i.i, label %if.else29.i.i

if.then27.i.i:                                    ; preds = %if.then25.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call28.i.i = call fastcc i32 @do_anonymous_page(ptr noundef nonnull %vmf.i) #15
  br label %__handle_mm_fault.exit

if.else29.i.i:                                    ; preds = %if.then25.i.i
  %fault.i.i.i = getelementptr inbounds %struct.vm_operations_struct, ptr %102, i32 0, i32 5
  %103 = ptrtoint ptr %fault.i.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %fault.i.i.i, align 4
  %tobool.not.i165.i.i = icmp eq ptr %104, null
  br i1 %tobool.not.i165.i.i, label %if.then.i.i.i, label %if.else36.i.i.i

if.then.i.i.i:                                    ; preds = %if.else29.i.i
  %105 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %pmd.i, align 4
  %107 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %106, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %108)
  %tobool3.not.i.i.i = icmp eq i32 %108, 0
  br i1 %tobool3.not.i.i.i, label %if.then.i.i.i.if.end50.i.i.i_crit_edge, label %if.else.i.i.i, !prof !230

if.then.i.i.i.if.end50.i.i.i_crit_edge:           ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i.i.i

if.else.i.i.i:                                    ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %109 = load ptr, ptr @mem_map, align 4
  %shr.i.i.i.i = lshr i32 %108, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %110 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i.i166.i.i = sub i32 %shr.i.i.i.i, %110
  %ptl.i.i.i.i.i = getelementptr %struct.page, ptr %109, i32 %sub.i.i166.i.i, i32 1, i32 0, i32 3
  %111 = ptrtoint ptr %ptl.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %ptl.i.i.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr %struct.page, ptr %109, i32 %sub.i.i166.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %113 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i.i.i = or i32 %113, 512
  %114 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i.i.i = and i32 %114, -16384
  %115 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %115, i32 0, i32 1
  %116 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i = add i32 %117, 1
  store volatile i32 %add.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %118 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i.i.i.i = and i32 %118, -16384
  %119 = inttoptr i32 %and.i.i.i1.i.i.i.i.i to ptr
  %task.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %119, i32 0, i32 2
  %120 = ptrtoint ptr %task.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %task.i.i.i.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %121, i32 0, i32 213
  %122 = ptrtoint ptr %pagefault_disabled.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %pagefault_disabled.i.i.i.i.i.i.i, align 8
  %inc.i.i.i.i.i.i.i = add i32 %123, 1
  store i32 %inc.i.i.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i.i.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr.i.i.i, i32 noundef %or.i.i.i.i) #15
  %124 = ptrtoint ptr %address3.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %address3.i, align 4
  %shr.i76.i.i.i = lshr i32 %125, 12
  %and.i.i.i.i = and i32 %shr.i76.i.i.i, 511
  %add.ptr14.i.i.i = getelementptr i32, ptr %call.i.i.i.i.i, i32 %and.i.i.i.i
  %126 = ptrtoint ptr %ptl.i to i32
  call void @__asan_store4_noabort(i32 %126)
  store ptr %112, ptr %ptl.i, align 4
  tail call void @_raw_spin_lock(ptr noundef %112) #15
  %127 = ptrtoint ptr %pte.i to i32
  call void @__asan_store4_noabort(i32 %127)
  store ptr %add.ptr14.i.i.i, ptr %pte.i, align 4
  %128 = ptrtoint ptr %add.ptr14.i.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %add.ptr14.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %129)
  %tobool16.not.i.i.i = icmp eq i32 %129, 0
  %..i.i.i = select i1 %tobool16.not.i.i.i, i32 2, i32 256, !prof !230
  tail call void @_raw_spin_unlock(ptr noundef %112) #15
  tail call void @kunmap_local_indexed(ptr noundef %add.ptr14.i.i.i) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %130 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i167.i.i = and i32 %130, -16384
  %131 = inttoptr i32 %and.i.i.i1.i.i167.i.i to ptr
  %task.i.i.i.i168.i.i = getelementptr inbounds %struct.thread_info, ptr %131, i32 0, i32 2
  %132 = ptrtoint ptr %task.i.i.i.i168.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %task.i.i.i.i168.i.i, align 8
  %pagefault_disabled.i.i.i.i169.i.i = getelementptr inbounds %struct.task_struct, ptr %133, i32 0, i32 213
  %134 = ptrtoint ptr %pagefault_disabled.i.i.i.i169.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %pagefault_disabled.i.i.i.i169.i.i, align 8
  %dec.i.i.i.i.i.i = add i32 %135, -1
  store i32 %dec.i.i.i.i.i.i, ptr %pagefault_disabled.i.i.i.i169.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %136 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i170.i.i = and i32 %136, -16384
  %137 = inttoptr i32 %and.i.i.i.i.i170.i.i to ptr
  %preempt_count.i.i.i.i171.i.i = getelementptr inbounds %struct.thread_info, ptr %137, i32 0, i32 1
  %138 = ptrtoint ptr %preempt_count.i.i.i.i171.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile i32, ptr %preempt_count.i.i.i.i171.i.i, align 4
  %sub.i.i.i.i.i = add i32 %139, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i.i.i171.i.i, align 4
  br label %if.end50.i.i.i

if.else36.i.i.i:                                  ; preds = %if.else29.i.i
  %140 = ptrtoint ptr %flags4.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %flags4.i, align 4
  %and37.i.i.i = and i32 %141, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37.i.i.i)
  %tobool38.not.i.i.i = icmp eq i32 %and37.i.i.i, 0
  br i1 %tobool38.not.i.i.i, label %if.then39.i.i.i, label %if.else41.i.i.i

if.then39.i.i.i:                                  ; preds = %if.else36.i.i.i
  %map_pages.i.i.i.i = getelementptr inbounds %struct.vm_operations_struct, ptr %102, i32 0, i32 7
  %142 = ptrtoint ptr %map_pages.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %map_pages.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %143, null
  br i1 %tobool.not.i.i.i.i, label %if.then39.i.i.i.if.end11.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.then39.i.i.i.if.end11.i.i.i.i_crit_edge:       ; preds = %if.then39.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end11.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.then39.i.i.i
  %144 = load i32, ptr @fault_around_bytes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8191, i32 %144)
  %cmp.i.i.i.i = icmp ugt i32 %144, 8191
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %land.lhs.true.i.i.i.i.if.end11.i.i.i.i_crit_edge

land.lhs.true.i.i.i.i.if.end11.i.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end11.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.lhs.true.i.i.i.i
  %145 = ptrtoint ptr %address3.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %address3.i, align 4
  %147 = ptrtoint ptr %pgoff.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %pgoff.i, align 4
  %149 = load volatile i32, ptr @fault_around_bytes, align 4
  %shr.i.i.i.i.i = lshr i32 %149, 12
  %mul.i.i.i.i.i = and i32 %149, -4096
  %neg.i.i.i.i.i = sub i32 0, %mul.i.i.i.i.i
  %and2.i.i.i.i.i = and i32 %146, %neg.i.i.i.i.i
  %150 = ptrtoint ptr %100 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %100, align 4
  %152 = tail call i32 @llvm.umax.i32(i32 %and2.i.i.i.i.i, i32 %151) #15
  %sub5.i.i.i.i.i = sub i32 %146, %152
  %shr6.i.i.i.i.i = lshr i32 %sub5.i.i.i.i.i, 12
  %and7.i.i.i.i.i = and i32 %shr6.i.i.i.i.i, 511
  %sub8.i.i.i.i.i = sub i32 %148, %and7.i.i.i.i.i
  %shr9.i.i.i.i.i = lshr i32 %152, 12
  %and10.i.i.i.i.i = and i32 %shr9.i.i.i.i.i, 511
  %sub11.i.i.i.i.i = xor i32 %and10.i.i.i.i.i, 511
  %sub12.i.i.i.i.i = add i32 %sub8.i.i.i.i.i, %sub11.i.i.i.i.i
  %vm_end.i.i.i.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %100, i32 0, i32 1
  %153 = ptrtoint ptr %vm_end.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %vm_end.i.i.i.i.i.i, align 4
  %sub.i.i.i.i.i.i = sub i32 %154, %151
  %shr.i.i.i.i.i.i = lshr i32 %sub.i.i.i.i.i.i, 12
  %vm_pgoff.i.i.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %100, i32 0, i32 13
  %155 = ptrtoint ptr %vm_pgoff.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %vm_pgoff.i.i.i.i.i, align 4
  %add15.i.i.i.i.i = add i32 %156, -1
  %sub16.i.i.i.i.i = add i32 %add15.i.i.i.i.i, %shr.i.i.i.i.i.i
  %157 = tail call i32 @llvm.umin.i32(i32 %sub12.i.i.i.i.i, i32 %sub16.i.i.i.i.i) #15
  %add23.i.i.i.i.i = add nsw i32 %shr.i.i.i.i.i, -1
  %sub24.i.i.i.i.i = add i32 %add23.i.i.i.i.i, %sub8.i.i.i.i.i
  %158 = tail call i32 @llvm.umin.i32(i32 %157, i32 %sub24.i.i.i.i.i) #15
  %159 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %pmd.i, align 4
  %161 = ptrtoint ptr %160 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %160, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %162)
  %tobool.not.i.i.i.i.i = icmp eq i32 %162, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %if.then.i.i.i.i.do_fault_around.exit.i.i.i.i_crit_edge

if.then.i.i.i.i.do_fault_around.exit.i.i.i.i_crit_edge: ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do_fault_around.exit.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %if.then.i.i.i.i
  %call32.i.i.i.i.i = tail call fastcc ptr @pte_alloc_one() #15
  %163 = ptrtoint ptr %prealloc_pte.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store ptr %call32.i.i.i.i.i, ptr %prealloc_pte.i, align 4
  %tobool34.not.i.i.i.i.i = icmp eq ptr %call32.i.i.i.i.i, null
  br i1 %tobool34.not.i.i.i.i.i, label %if.then.i.i.i.i.i.__handle_mm_fault.exit_crit_edge, label %if.then.i.i.i.i.i.do_fault_around.exit.i.i.i.i_crit_edge

if.then.i.i.i.i.i.do_fault_around.exit.i.i.i.i_crit_edge: ; preds = %if.then.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do_fault_around.exit.i.i.i.i

if.then.i.i.i.i.i.__handle_mm_fault.exit_crit_edge: ; preds = %if.then.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__handle_mm_fault.exit

do_fault_around.exit.i.i.i.i:                     ; preds = %if.then.i.i.i.i.i.do_fault_around.exit.i.i.i.i_crit_edge, %if.then.i.i.i.i.do_fault_around.exit.i.i.i.i_crit_edge
  %164 = ptrtoint ptr %vmf.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %vmf.i, align 4
  %vm_ops.i.i.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %165, i32 0, i32 12
  %166 = ptrtoint ptr %vm_ops.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %vm_ops.i.i.i.i.i, align 4
  %map_pages.i.i.i.i.i = getelementptr inbounds %struct.vm_operations_struct, ptr %167, i32 0, i32 7
  %168 = ptrtoint ptr %map_pages.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %map_pages.i.i.i.i.i, align 4
  %call38.i.i.i.i.i = call i32 %169(ptr noundef nonnull %vmf.i, i32 noundef %sub8.i.i.i.i.i, i32 noundef %158) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38.i.i.i.i.i)
  %tobool8.not.i.i.i.i = icmp eq i32 %call38.i.i.i.i.i, 0
  br i1 %tobool8.not.i.i.i.i, label %do_fault_around.exit.i.i.i.i.if.end11.i.i.i.i_crit_edge, label %do_fault_around.exit.i.i.i.i.if.end50.i.i.i_crit_edge

do_fault_around.exit.i.i.i.i.if.end50.i.i.i_crit_edge: ; preds = %do_fault_around.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i.i.i

do_fault_around.exit.i.i.i.i.if.end11.i.i.i.i_crit_edge: ; preds = %do_fault_around.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end11.i.i.i.i

if.end11.i.i.i.i:                                 ; preds = %do_fault_around.exit.i.i.i.i.if.end11.i.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.if.end11.i.i.i.i_crit_edge, %if.then39.i.i.i.if.end11.i.i.i.i_crit_edge
  %call12.i.i.i.i = call fastcc i32 @__do_fault(ptr noundef nonnull %vmf.i) #15
  %and.i77.i.i.i = and i32 %call12.i.i.i.i, 3443
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i77.i.i.i)
  %tobool13.not.i.i.i.i = icmp eq i32 %and.i77.i.i.i, 0
  br i1 %tobool13.not.i.i.i.i, label %if.end21.i.i.i.i, label %if.end11.i.i.i.i.if.end50.i.i.i_crit_edge, !prof !218

if.end11.i.i.i.i.if.end50.i.i.i_crit_edge:        ; preds = %if.end11.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i.i.i

if.end21.i.i.i.i:                                 ; preds = %if.end11.i.i.i.i
  %call22.i.i.i.i = call i32 @finish_fault(ptr noundef nonnull %vmf.i) #15
  %or.i78.i.i.i = or i32 %call22.i.i.i.i, %call12.i.i.i.i
  %170 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %page.i, align 4
  call void @unlock_page(ptr noundef %171) #15
  %and23.i.i.i.i = and i32 %or.i78.i.i.i, 3443
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i.i.i.i)
  %tobool24.not.i.i.i.i = icmp eq i32 %and23.i.i.i.i, 0
  br i1 %tobool24.not.i.i.i.i, label %if.end21.i.i.i.i.if.end50.i.i.i_crit_edge, label %if.then31.i.i.i.i, !prof !218

if.end21.i.i.i.i.if.end50.i.i.i_crit_edge:        ; preds = %if.end21.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i.i.i

if.then31.i.i.i.i:                                ; preds = %if.end21.i.i.i.i
  %172 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %page.i, align 4
  %174 = getelementptr inbounds %struct.page, ptr %173, i32 0, i32 1
  %175 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load volatile i32, ptr %174, align 4
  %and.i.i153 = and i32 %176, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i153)
  %tobool.not.i.i154 = icmp eq i32 %and.i.i153, 0
  br i1 %tobool.not.i.i154, label %if.end.i.i157, label %if.then.i.i156, !prof !218

if.then.i.i156:                                   ; preds = %if.then31.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i155 = add i32 %176, -1
  br label %_compound_head.exit.i162

if.end.i.i157:                                    ; preds = %if.then31.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %177 = ptrtoint ptr %173 to i32
  br label %_compound_head.exit.i162

_compound_head.exit.i162:                         ; preds = %if.end.i.i157, %if.then.i.i156
  %retval.0.i.i158 = phi i32 [ %sub.i.i155, %if.then.i.i156 ], [ %177, %if.end.i.i157 ]
  %178 = inttoptr i32 %retval.0.i.i158 to ptr
  %_refcount.i.i.i.i.i159 = getelementptr inbounds %struct.page, ptr %178, i32 0, i32 3
  %call.i.i.i.i.i.i.i160 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i159, i32 noundef 4) #15
  %179 = ptrtoint ptr %_refcount.i.i.i.i.i159 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load volatile i32, ptr %_refcount.i.i.i.i.i159, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %180)
  %cmp.i.i.i.i161 = icmp eq i32 %180, 0
  br i1 %cmp.i.i.i.i161, label %if.then.i.i.i.i163, label %do.end5.i.i.i.i167, !prof !230

if.then.i.i.i.i163:                               ; preds = %_compound_head.exit.i162
  call void @__sanitizer_cov_trace_pc() #17
  call void @dump_page(ptr noundef %178, ptr noundef nonnull @.str.45) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i167:                               ; preds = %_compound_head.exit.i162
  %call.i.i.i10.i.i.i.i164 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i159, i32 noundef 4) #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i159, i32 1, i32 3, i32 1) #15
  %181 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i159, ptr %_refcount.i.i.i.i.i159, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i159) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i165 = extractvalue { i32, i32 } %181, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i165)
  %cmp.i.i.i.i.i.i.i166 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i165, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@handle_mm_fault, %if.then.i.i.i.i.i169)) #15
          to label %folio_put_testzero.exit.i.i170 [label %if.then.i.i.i.i.i169], !srcloc !217

if.then.i.i.i.i.i169:                             ; preds = %do.end5.i.i.i.i167
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i168 = zext i1 %cmp.i.i.i.i.i.i.i166 to i32
  call void @__page_ref_mod_and_test(ptr noundef %178, i32 noundef -1, i32 noundef %conv.i.i.i.i.i168) #15
  br label %folio_put_testzero.exit.i.i170

folio_put_testzero.exit.i.i170:                   ; preds = %if.then.i.i.i.i.i169, %do.end5.i.i.i.i167
  br i1 %cmp.i.i.i.i.i.i.i166, label %if.then.i4.i171, label %folio_put_testzero.exit.i.i170.if.end50.i.i.i_crit_edge

folio_put_testzero.exit.i.i170.if.end50.i.i.i_crit_edge: ; preds = %folio_put_testzero.exit.i.i170
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i.i.i

if.then.i4.i171:                                  ; preds = %folio_put_testzero.exit.i.i170
  call void @__sanitizer_cov_trace_pc() #17
  call void @__put_page(ptr noundef %178) #15
  br label %if.end50.i.i.i

if.else41.i.i.i:                                  ; preds = %if.else36.i.i.i
  %vm_flags.i.i.i = getelementptr inbounds %struct.vm_area_struct, ptr %100, i32 0, i32 8
  %182 = ptrtoint ptr %vm_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %vm_flags.i.i.i, align 4
  %and42.i.i.i = and i32 %183, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42.i.i.i)
  %tobool43.not.i.i.i = icmp eq i32 %and42.i.i.i, 0
  br i1 %tobool43.not.i.i.i, label %if.then44.i.i.i, label %if.else46.i.i.i

if.then44.i.i.i:                                  ; preds = %if.else41.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call45.i.i.i = call fastcc i32 @do_cow_fault(ptr noundef nonnull %vmf.i) #15
  br label %if.end50.i.i.i

if.else46.i.i.i:                                  ; preds = %if.else41.i.i.i
  %call.i.i172.i.i = call fastcc i32 @__do_fault(ptr noundef nonnull %vmf.i) #15
  %and.i79.i.i.i = and i32 %call.i.i172.i.i, 3443
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i79.i.i.i)
  %tobool.not.i80.i.i.i = icmp eq i32 %and.i79.i.i.i, 0
  br i1 %tobool.not.i80.i.i.i, label %if.end.i.i.i.i, label %if.else46.i.i.i.if.end50.i.i.i_crit_edge, !prof !218

if.else46.i.i.i.if.end50.i.i.i_crit_edge:         ; preds = %if.else46.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.else46.i.i.i
  %184 = ptrtoint ptr %vm_ops.i.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %vm_ops.i.i.i, align 4
  %page_mkwrite.i.i.i.i = getelementptr inbounds %struct.vm_operations_struct, ptr %185, i32 0, i32 9
  %186 = ptrtoint ptr %page_mkwrite.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %page_mkwrite.i.i.i.i, align 4
  %tobool4.not.i.i.i.i = icmp eq ptr %187, null
  br i1 %tobool4.not.i.i.i.i, label %if.end.i.i.i.i.if.end19.i.i.i.i_crit_edge, label %if.then5.i.i.i.i

if.end.i.i.i.i.if.end19.i.i.i.i_crit_edge:        ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19.i.i.i.i

if.then5.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %188 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %page.i, align 4
  call void @unlock_page(ptr noundef %189) #15
  %call6.i.i.i.i = call fastcc i32 @do_page_mkwrite(ptr noundef nonnull %vmf.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i.i.i)
  %tobool7.not.i.i.i.i = icmp eq i32 %call6.i.i.i.i, 0
  %and8.i.i.i.i = and i32 %call6.i.i.i.i, 2419
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i.i.i)
  %tobool9.i.i.i.i = icmp ne i32 %and8.i.i.i.i, 0
  %190 = or i1 %tobool7.not.i.i.i.i, %tobool9.i.i.i.i
  br i1 %190, label %if.then16.i.i.i.i, label %if.then5.i.i.i.i.if.end19.i.i.i.i_crit_edge, !prof !230

if.then5.i.i.i.i.if.end19.i.i.i.i_crit_edge:      ; preds = %if.then5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19.i.i.i.i

if.then16.i.i.i.i:                                ; preds = %if.then5.i.i.i.i
  %191 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %page.i, align 4
  %193 = getelementptr inbounds %struct.page, ptr %192, i32 0, i32 1
  %194 = ptrtoint ptr %193 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load volatile i32, ptr %193, align 4
  %and.i.i133 = and i32 %195, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i133)
  %tobool.not.i.i134 = icmp eq i32 %and.i.i133, 0
  br i1 %tobool.not.i.i134, label %if.end.i.i137, label %if.then.i.i136, !prof !218

if.then.i.i136:                                   ; preds = %if.then16.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i135 = add i32 %195, -1
  br label %_compound_head.exit.i142

if.end.i.i137:                                    ; preds = %if.then16.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %196 = ptrtoint ptr %192 to i32
  br label %_compound_head.exit.i142

_compound_head.exit.i142:                         ; preds = %if.end.i.i137, %if.then.i.i136
  %retval.0.i.i138 = phi i32 [ %sub.i.i135, %if.then.i.i136 ], [ %196, %if.end.i.i137 ]
  %197 = inttoptr i32 %retval.0.i.i138 to ptr
  %_refcount.i.i.i.i.i139 = getelementptr inbounds %struct.page, ptr %197, i32 0, i32 3
  %call.i.i.i.i.i.i.i140 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i139, i32 noundef 4) #15
  %198 = ptrtoint ptr %_refcount.i.i.i.i.i139 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load volatile i32, ptr %_refcount.i.i.i.i.i139, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %199)
  %cmp.i.i.i.i141 = icmp eq i32 %199, 0
  br i1 %cmp.i.i.i.i141, label %if.then.i.i.i.i143, label %do.end5.i.i.i.i147, !prof !230

if.then.i.i.i.i143:                               ; preds = %_compound_head.exit.i142
  call void @__sanitizer_cov_trace_pc() #17
  call void @dump_page(ptr noundef %197, ptr noundef nonnull @.str.45) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i147:                               ; preds = %_compound_head.exit.i142
  %call.i.i.i10.i.i.i.i144 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i139, i32 noundef 4) #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i139, i32 1, i32 3, i32 1) #15
  %200 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i139, ptr %_refcount.i.i.i.i.i139, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i139) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i145 = extractvalue { i32, i32 } %200, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i145)
  %cmp.i.i.i.i.i.i.i146 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i145, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@handle_mm_fault, %if.then.i.i.i.i.i149)) #15
          to label %folio_put_testzero.exit.i.i150 [label %if.then.i.i.i.i.i149], !srcloc !217

if.then.i.i.i.i.i149:                             ; preds = %do.end5.i.i.i.i147
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i148 = zext i1 %cmp.i.i.i.i.i.i.i146 to i32
  call void @__page_ref_mod_and_test(ptr noundef %197, i32 noundef -1, i32 noundef %conv.i.i.i.i.i148) #15
  br label %folio_put_testzero.exit.i.i150

folio_put_testzero.exit.i.i150:                   ; preds = %if.then.i.i.i.i.i149, %do.end5.i.i.i.i147
  br i1 %cmp.i.i.i.i.i.i.i146, label %if.then.i4.i151, label %folio_put_testzero.exit.i.i150.if.end50.i.i.i_crit_edge

folio_put_testzero.exit.i.i150.if.end50.i.i.i_crit_edge: ; preds = %folio_put_testzero.exit.i.i150
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i.i.i

if.then.i4.i151:                                  ; preds = %folio_put_testzero.exit.i.i150
  call void @__sanitizer_cov_trace_pc() #17
  call void @__put_page(ptr noundef %197) #15
  br label %if.end50.i.i.i

if.end19.i.i.i.i:                                 ; preds = %if.then5.i.i.i.i.if.end19.i.i.i.i_crit_edge, %if.end.i.i.i.i.if.end19.i.i.i.i_crit_edge
  %call20.i.i.i.i = call i32 @finish_fault(ptr noundef nonnull %vmf.i) #15
  %or.i83.i.i.i = or i32 %call20.i.i.i.i, %call.i.i172.i.i
  %and21.i.i.i.i = and i32 %or.i83.i.i.i, 3443
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i.i.i)
  %tobool22.not.i.i.i.i = icmp eq i32 %and21.i.i.i.i, 0
  br i1 %tobool22.not.i.i.i.i, label %if.end32.i.i.i.i, label %if.then29.i.i.i.i, !prof !218

if.then29.i.i.i.i:                                ; preds = %if.end19.i.i.i.i
  %201 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %page.i, align 4
  call void @unlock_page(ptr noundef %202) #15
  %203 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %page.i, align 4
  %205 = getelementptr inbounds %struct.page, ptr %204, i32 0, i32 1
  %206 = ptrtoint ptr %205 to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load volatile i32, ptr %205, align 4
  %and.i.i125 = and i32 %207, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i125)
  %tobool.not.i.i126 = icmp eq i32 %and.i.i125, 0
  br i1 %tobool.not.i.i126, label %if.end.i.i, label %if.then.i.i128, !prof !218

if.then.i.i128:                                   ; preds = %if.then29.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i127 = add i32 %207, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then29.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %208 = ptrtoint ptr %204 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i128
  %retval.0.i.i129 = phi i32 [ %sub.i.i127, %if.then.i.i128 ], [ %208, %if.end.i.i ]
  %209 = inttoptr i32 %retval.0.i.i129 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %209, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %210 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %211)
  %cmp.i.i.i.i130 = icmp eq i32 %211, 0
  br i1 %cmp.i.i.i.i130, label %if.then.i.i.i.i131, label %do.end5.i.i.i.i, !prof !230

if.then.i.i.i.i131:                               ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @dump_page(ptr noundef %209, ptr noundef nonnull @.str.45) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %212 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %212, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@handle_mm_fault, %if.then.i.i.i.i.i132)) #15
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i132], !srcloc !217

if.then.i.i.i.i.i132:                             ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %209, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #15
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i132, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.if.end50.i.i.i_crit_edge

folio_put_testzero.exit.i.i.if.end50.i.i.i_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i.i.i

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__put_page(ptr noundef %209) #15
  br label %if.end50.i.i.i

if.end32.i.i.i.i:                                 ; preds = %if.end19.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call33.i.i.i.i = call fastcc i32 @fault_dirty_shared_page(ptr noundef nonnull %vmf.i) #15
  %or34.i.i.i.i = or i32 %call33.i.i.i.i, %or.i83.i.i.i
  br label %if.end50.i.i.i

if.end50.i.i.i:                                   ; preds = %if.end32.i.i.i.i, %if.then.i4.i, %folio_put_testzero.exit.i.i.if.end50.i.i.i_crit_edge, %if.then.i4.i151, %folio_put_testzero.exit.i.i150.if.end50.i.i.i_crit_edge, %if.else46.i.i.i.if.end50.i.i.i_crit_edge, %if.then44.i.i.i, %if.then.i4.i171, %folio_put_testzero.exit.i.i170.if.end50.i.i.i_crit_edge, %if.end21.i.i.i.i.if.end50.i.i.i_crit_edge, %if.end11.i.i.i.i.if.end50.i.i.i_crit_edge, %do_fault_around.exit.i.i.i.i.if.end50.i.i.i_crit_edge, %if.else.i.i.i, %if.then.i.i.i.if.end50.i.i.i_crit_edge
  %ret.1.i.i.ph.i = phi i32 [ %call.i.i172.i.i, %if.else46.i.i.i.if.end50.i.i.i_crit_edge ], [ %or34.i.i.i.i, %if.end32.i.i.i.i ], [ %or.i78.i.i.i, %if.end21.i.i.i.i.if.end50.i.i.i_crit_edge ], [ %call12.i.i.i.i, %if.end11.i.i.i.i.if.end50.i.i.i_crit_edge ], [ %call38.i.i.i.i.i, %do_fault_around.exit.i.i.i.i.if.end50.i.i.i_crit_edge ], [ 2, %if.then.i.i.i.if.end50.i.i.i_crit_edge ], [ %..i.i.i, %if.else.i.i.i ], [ %call45.i.i.i, %if.then44.i.i.i ], [ %or.i78.i.i.i, %folio_put_testzero.exit.i.i170.if.end50.i.i.i_crit_edge ], [ %or.i78.i.i.i, %if.then.i4.i171 ], [ %call6.i.i.i.i, %folio_put_testzero.exit.i.i150.if.end50.i.i.i_crit_edge ], [ %call6.i.i.i.i, %if.then.i4.i151 ], [ %or.i83.i.i.i, %folio_put_testzero.exit.i.i.if.end50.i.i.i_crit_edge ], [ %or.i83.i.i.i, %if.then.i4.i ]
  %213 = ptrtoint ptr %prealloc_pte.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %.pr.i = load ptr, ptr %prealloc_pte.i, align 4
  %tobool51.not.i.i.i = icmp eq ptr %.pr.i, null
  br i1 %tobool51.not.i.i.i, label %if.end50.i.i.i.__handle_mm_fault.exit_crit_edge, label %if.then52.i.i.i

if.end50.i.i.i.__handle_mm_fault.exit_crit_edge:  ; preds = %if.end50.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__handle_mm_fault.exit

if.then52.i.i.i:                                  ; preds = %if.end50.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @pte_free(ptr noundef nonnull %.pr.i) #15
  br label %__handle_mm_fault.exit

cond.true.i.i:                                    ; preds = %if.end22.i.i
  %214 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %54, align 4
  %and32.i.i = and i32 %215, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32.i.i)
  %tobool33.not.i.i = icmp eq i32 %and32.i.i, 0
  br i1 %tobool33.not.i.i, label %if.then40.i.i, label %if.end42.i.i

if.then40.i.i:                                    ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call41.i.i = call i32 @do_swap_page(ptr noundef nonnull %vmf.i) #15
  br label %__handle_mm_fault.exit

if.end42.i.i:                                     ; preds = %cond.true.i.i
  %216 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %pmd.i, align 4
  %218 = load ptr, ptr @mem_map, align 4
  %219 = ptrtoint ptr %217 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %217, align 4
  %shr.i173.i.i = lshr i32 %220, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %221 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i.i.i = sub i32 %shr.i173.i.i, %221
  %ptl.i.i.i.i = getelementptr %struct.page, ptr %218, i32 %sub.i.i.i, i32 1, i32 0, i32 3
  %222 = ptrtoint ptr %ptl.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %ptl.i.i.i.i, align 4
  %224 = ptrtoint ptr %ptl.i to i32
  call void @__asan_store4_noabort(i32 %224)
  store ptr %223, ptr %ptl.i, align 4
  tail call void @_raw_spin_lock(ptr noundef %223) #15
  %225 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %54, align 4
  %227 = ptrtoint ptr %pte.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %pte.i, align 4
  %229 = ptrtoint ptr %228 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %228, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %230, i32 %226)
  %cmp.i.not.i.i = icmp eq i32 %230, %226
  br i1 %cmp.i.not.i.i, label %if.end69.i.i, label %if.end42.i.i.do.body106.i.i_crit_edge, !prof !218

if.end42.i.i.do.body106.i.i_crit_edge:            ; preds = %if.end42.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body106.i.i

if.end69.i.i:                                     ; preds = %if.end42.i.i
  %231 = ptrtoint ptr %flags4.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %flags4.i, align 4
  %and70.i.i = and i32 %232, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and70.i.i)
  %tobool71.not.i.i = icmp eq i32 %and70.i.i, 0
  br i1 %tobool71.not.i.i, label %if.end69.i.i.if.end79.i.i_crit_edge, label %if.then72.i.i

if.end69.i.i.if.end79.i.i_crit_edge:              ; preds = %if.end69.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end79.i.i

if.then72.i.i:                                    ; preds = %if.end69.i.i
  %and73.i.i = and i32 %226, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and73.i.i)
  %tobool74.not.i.i = icmp eq i32 %and73.i.i, 0
  br i1 %tobool74.not.i.i, label %if.end77.i.i, label %if.then75.i.i

if.then75.i.i:                                    ; preds = %if.then72.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call76.i.i = call fastcc i32 @do_wp_page(ptr noundef nonnull %vmf.i) #15
  br label %__handle_mm_fault.exit

if.end77.i.i:                                     ; preds = %if.then72.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %or.i.i174.i.i = or i32 %226, 64
  br label %if.end79.i.i

if.end79.i.i:                                     ; preds = %if.end77.i.i, %if.end69.i.i.if.end79.i.i_crit_edge
  %entry1.0.i.i = phi i32 [ %or.i.i174.i.i, %if.end77.i.i ], [ %226, %if.end69.i.i.if.end79.i.i_crit_edge ]
  %or.i.i175.i.i = or i32 %entry1.0.i.i, 2
  %233 = ptrtoint ptr %vmf.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %vmf.i, align 4
  %235 = ptrtoint ptr %address3.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %address3.i, align 4
  %call86.i.i = tail call i32 @ptep_set_access_flags(ptr noundef %234, i32 noundef %236, ptr noundef %228, i32 noundef %or.i.i175.i.i, i32 noundef %and70.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86.i.i)
  %tobool87.not.i.i = icmp eq i32 %call86.i.i, 0
  br i1 %tobool87.not.i.i, label %if.else92.i.i, label %if.end79.i.i.do.body106.i.i_crit_edge

if.end79.i.i.do.body106.i.i_crit_edge:            ; preds = %if.end79.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body106.i.i

if.else92.i.i:                                    ; preds = %if.end79.i.i
  %237 = ptrtoint ptr %flags4.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %flags4.i, align 4
  %239 = and i32 %238, 33
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %239)
  %.not.i.i = icmp eq i32 %239, 1
  br i1 %.not.i.i, label %if.then101.i.i, label %if.else92.i.i.do.body106.i.i_crit_edge

if.else92.i.i.do.body106.i.i_crit_edge:           ; preds = %if.else92.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body106.i.i

if.then101.i.i:                                   ; preds = %if.else92.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %240 = ptrtoint ptr %vmf.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %vmf.i, align 4
  %242 = ptrtoint ptr %address3.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %address3.i, align 4
  tail call void @flush_tlb_page(ptr noundef %241, i32 noundef %243) #15
  br label %do.body106.i.i

do.body106.i.i:                                   ; preds = %if.then101.i.i, %if.else92.i.i.do.body106.i.i_crit_edge, %if.end79.i.i.do.body106.i.i_crit_edge, %if.end42.i.i.do.body106.i.i_crit_edge
  %244 = ptrtoint ptr %ptl.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %ptl.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %245) #15
  %246 = ptrtoint ptr %pte.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %pte.i, align 4
  tail call void @kunmap_local_indexed(ptr noundef %247) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %248 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i176.i.i = and i32 %248, -16384
  %249 = inttoptr i32 %and.i.i.i1.i176.i.i to ptr
  %task.i.i.i177.i.i = getelementptr inbounds %struct.thread_info, ptr %249, i32 0, i32 2
  %250 = ptrtoint ptr %task.i.i.i177.i.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %task.i.i.i177.i.i, align 8
  %pagefault_disabled.i.i.i178.i.i = getelementptr inbounds %struct.task_struct, ptr %251, i32 0, i32 213
  %252 = ptrtoint ptr %pagefault_disabled.i.i.i178.i.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %pagefault_disabled.i.i.i178.i.i, align 8
  %dec.i.i.i179.i.i = add i32 %253, -1
  store i32 %dec.i.i.i179.i.i, ptr %pagefault_disabled.i.i.i178.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %254 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i180.i.i = and i32 %254, -16384
  %255 = inttoptr i32 %and.i.i.i.i180.i.i to ptr
  %preempt_count.i.i.i181.i.i = getelementptr inbounds %struct.thread_info, ptr %255, i32 0, i32 1
  %256 = ptrtoint ptr %preempt_count.i.i.i181.i.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load volatile i32, ptr %preempt_count.i.i.i181.i.i, align 4
  %sub.i.i182.i.i = add i32 %257, -1
  store volatile i32 %sub.i.i182.i.i, ptr %preempt_count.i.i.i181.i.i, align 4
  br label %__handle_mm_fault.exit

__handle_mm_fault.exit:                           ; preds = %do.body106.i.i, %if.then75.i.i, %if.then40.i.i, %if.then52.i.i.i, %if.end50.i.i.i.__handle_mm_fault.exit_crit_edge, %if.then.i.i.i.i.i.__handle_mm_fault.exit_crit_edge, %if.then27.i.i, %__get_fault_gfp_mask.exit.i.__handle_mm_fault.exit_crit_edge
  %retval.3.i = phi i32 [ 1, %__get_fault_gfp_mask.exit.i.__handle_mm_fault.exit_crit_edge ], [ 0, %do.body106.i.i ], [ %call76.i.i, %if.then75.i.i ], [ %call41.i.i, %if.then40.i.i ], [ %call28.i.i, %if.then27.i.i ], [ %ret.1.i.i.ph.i, %if.end50.i.i.i.__handle_mm_fault.exit_crit_edge ], [ %ret.1.i.i.ph.i, %if.then52.i.i.i ], [ 1, %if.then.i.i.i.i.i.__handle_mm_fault.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %vmf.i) #15
  br i1 %tobool62.not, label %__handle_mm_fault.exit.if.end88_crit_edge, label %if.then79

__handle_mm_fault.exit.if.end88_crit_edge:        ; preds = %__handle_mm_fault.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end88

if.then79:                                        ; preds = %__handle_mm_fault.exit
  %258 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i114 = and i32 %258, -16384
  %259 = inttoptr i32 %and.i.i114 to ptr
  %task.i115 = getelementptr inbounds %struct.thread_info, ptr %259, i32 0, i32 2
  %260 = ptrtoint ptr %task.i115 to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %task.i115, align 8
  %in_user_fault.i116 = getelementptr inbounds %struct.task_struct, ptr %261, i32 0, i32 65
  %262 = ptrtoint ptr %in_user_fault.i116 to i32
  call void @__asan_load2_noabort(i32 %262)
  %bf.load.i117 = load i16, ptr %in_user_fault.i116, align 8
  %263 = and i16 %bf.load.i117, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %263)
  %tobool.not.i118 = icmp eq i16 %263, 0
  br i1 %tobool.not.i118, label %do.end.i119, label %if.then79.mem_cgroup_exit_user_fault.exit_crit_edge, !prof !230

if.then79.mem_cgroup_exit_user_fault.exit_crit_edge: ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #17
  br label %mem_cgroup_exit_user_fault.exit

do.end.i119:                                      ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.40, i32 noundef 913, i32 noundef 9, ptr noundef null) #15
  br label %mem_cgroup_exit_user_fault.exit

mem_cgroup_exit_user_fault.exit:                  ; preds = %do.end.i119, %if.then79.mem_cgroup_exit_user_fault.exit_crit_edge
  %264 = ptrtoint ptr %task.i115 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %task.i115, align 8
  %in_user_fault23.i = getelementptr inbounds %struct.task_struct, ptr %265, i32 0, i32 65
  %266 = ptrtoint ptr %in_user_fault23.i to i32
  call void @__asan_load2_noabort(i32 %266)
  %bf.load24.i = load i16, ptr %in_user_fault23.i, align 8
  %bf.clear25.i = and i16 %bf.load24.i, -4097
  store i16 %bf.clear25.i, ptr %in_user_fault23.i, align 8
  %267 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %task, align 8
  %memcg_in_oom.i = getelementptr inbounds %struct.task_struct, ptr %268, i32 0, i32 202
  %269 = ptrtoint ptr %memcg_in_oom.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %memcg_in_oom.i, align 8
  %tobool.i = icmp ne ptr %270, null
  %and83 = and i32 %retval.3.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and83)
  %tobool84.not = icmp eq i32 %and83, 0
  %or.cond = select i1 %tobool.i, i1 %tobool84.not, i1 false
  br i1 %or.cond, label %if.then85, label %mem_cgroup_exit_user_fault.exit.if.end88_crit_edge

mem_cgroup_exit_user_fault.exit.if.end88_crit_edge: ; preds = %mem_cgroup_exit_user_fault.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end88

if.then85:                                        ; preds = %mem_cgroup_exit_user_fault.exit
  call void @__sanitizer_cov_trace_pc() #17
  %call86 = call zeroext i1 @mem_cgroup_oom_synchronize(i1 noundef zeroext false) #15
  br label %if.end88

if.end88:                                         ; preds = %if.then85, %mem_cgroup_exit_user_fault.exit.if.end88_crit_edge, %__handle_mm_fault.exit.if.end88_crit_edge
  %and.i121 = and i32 %retval.3.i, 3187
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i121)
  %tobool.not.i122 = icmp eq i32 %and.i121, 0
  br i1 %tobool.not.i122, label %if.end.i123, label %if.end88.mm_account_fault.exit_crit_edge

if.end88.mm_account_fault.exit_crit_edge:         ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #17
  br label %mm_account_fault.exit

if.end.i123:                                      ; preds = %if.end88
  %and1.i = and i32 %retval.3.i, 4
  %and3.i = and i32 %flags, 32
  %271 = or i32 %and1.i, %and3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %271)
  %.not.i = icmp eq i32 %271, 0
  %272 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i26.i = and i32 %272, -16384
  %273 = inttoptr i32 %and.i26.i to ptr
  %task8.i = getelementptr inbounds %struct.thread_info, ptr %273, i32 0, i32 2
  %274 = ptrtoint ptr %task8.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %task8.i, align 8
  br i1 %.not.i, label %if.end10.thread.i, label %if.end10.i

if.end10.i:                                       ; preds = %if.end.i123
  %maj_flt.i = getelementptr inbounds %struct.task_struct, ptr %275, i32 0, i32 95
  %276 = ptrtoint ptr %maj_flt.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %maj_flt.i, align 4
  %inc.i124 = add i32 %277, 1
  store i32 %inc.i124, ptr %maj_flt.i, align 4
  %tobool11.not.i = icmp eq ptr %regs, null
  br i1 %tobool11.not.i, label %if.end10.i.mm_account_fault.exit_crit_edge, label %if.then15.i

if.end10.i.mm_account_fault.exit_crit_edge:       ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %mm_account_fault.exit

if.end10.thread.i:                                ; preds = %if.end.i123
  %min_flt.i = getelementptr inbounds %struct.task_struct, ptr %275, i32 0, i32 94
  %278 = ptrtoint ptr %min_flt.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %min_flt.i, align 8
  %inc9.i = add i32 %279, 1
  store i32 %inc9.i, ptr %min_flt.i, align 8
  %tobool11.not27.i = icmp eq ptr %regs, null
  br i1 %tobool11.not27.i, label %if.end10.thread.i.mm_account_fault.exit_crit_edge, label %if.else16.i

if.end10.thread.i.mm_account_fault.exit_crit_edge: ; preds = %if.end10.thread.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %mm_account_fault.exit

if.then15.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ([12 x %struct.static_key], ptr @perf_swevent_enabled, i32 0, i32 6), ptr blockaddress(@handle_mm_fault, %cleanup.sink.split.i)) #15
          to label %mm_account_fault.exit [label %cleanup.sink.split.i], !srcloc !217

if.else16.i:                                      ; preds = %if.end10.thread.i
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ([12 x %struct.static_key], ptr @perf_swevent_enabled, i32 0, i32 5), ptr blockaddress(@handle_mm_fault, %cleanup.sink.split.i)) #15
          to label %mm_account_fault.exit [label %cleanup.sink.split.i], !srcloc !217

cleanup.sink.split.i:                             ; preds = %if.else16.i, %if.then15.i
  %.sink.i = phi i32 [ 6, %if.then15.i ], [ 5, %if.else16.i ]
  call void @__sanitizer_cov_trace_pc() #17
  %conv17.i = zext i32 %address to i64
  call void @__perf_sw_event(i32 noundef %.sink.i, i64 noundef 1, ptr noundef nonnull %regs, i64 noundef %conv17.i) #15
  br label %mm_account_fault.exit

mm_account_fault.exit:                            ; preds = %cleanup.sink.split.i, %if.else16.i, %if.then15.i, %if.end10.thread.i.mm_account_fault.exit_crit_edge, %if.end10.i.mm_account_fault.exit_crit_edge, %if.end88.mm_account_fault.exit_crit_edge
  ret i32 %retval.3.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mem_cgroup_oom_synchronize(i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @follow_invalidate_pte(ptr noundef %mm, i32 noundef %address, ptr noundef %range, ptr nocapture noundef writeonly %ptepp, ptr nocapture readnone %pmdpp, ptr nocapture noundef %ptlp) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pgd1 = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 8
  %0 = ptrtoint ptr %pgd1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pgd1, align 4
  %shr.i = lshr i32 %address, 21
  %add.ptr.i = getelementptr [2 x i32], ptr %1, i32 %shr.i
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool77.not = icmp ne i32 %3, 0
  %and79 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and79)
  %tobool80.not = icmp eq i32 %and79, 0
  %or.cond = and i1 %tobool77.not, %tobool80.not
  br i1 %or.cond, label %if.end88, label %entry.cleanup_crit_edge, !prof !291

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end88:                                         ; preds = %entry
  %tobool89.not = icmp eq ptr %range, null
  br i1 %tobool89.not, label %if.end88.if.end94_crit_edge, label %if.then90

if.end88.if.end94_crit_edge:                      ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end94

if.then90:                                        ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #17
  %and91 = and i32 %address, -4096
  %add93 = add i32 %and91, 4096
  %4 = ptrtoint ptr %range to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %range, align 4
  %event2.i = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 5
  %5 = ptrtoint ptr %event2.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %event2.i, align 4
  %mm3.i = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 1
  %6 = ptrtoint ptr %mm3.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %mm, ptr %mm3.i, align 4
  %start4.i = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 2
  %7 = ptrtoint ptr %start4.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %and91, ptr %start4.i, align 4
  %end5.i = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 3
  %8 = ptrtoint ptr %end5.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %add93, ptr %end5.i, align 4
  %flags6.i = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 4
  %9 = ptrtoint ptr %flags6.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %flags6.i, align 4
  tail call fastcc void @mmu_notifier_invalidate_range_start(ptr noundef nonnull %range)
  br label %if.end94

if.end94:                                         ; preds = %if.then90, %if.end88.if.end94_crit_edge
  %10 = load ptr, ptr @mem_map, align 4
  %11 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %add.ptr.i, align 4
  %shr.i168 = lshr i32 %12, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %13 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %shr.i168, %13
  %ptl.i.i = getelementptr %struct.page, ptr %10, i32 %sub.i, i32 1, i32 0, i32 3
  %14 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ptl.i.i, align 4
  %add.ptr = getelementptr %struct.page, ptr %10, i32 %sub.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %16 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %16, 512
  %17 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %20, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %21 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 213
  %25 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %26, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr, i32 noundef %or.i) #15
  %shr.i169 = lshr i32 %address, 12
  %and.i = and i32 %shr.i169, 511
  %add.ptr99 = getelementptr i32, ptr %call.i.i, i32 %and.i
  %27 = ptrtoint ptr %ptlp to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %15, ptr %ptlp, align 4
  tail call void @_raw_spin_lock(ptr noundef %15) #15
  %28 = ptrtoint ptr %add.ptr99 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %add.ptr99, align 4
  %and100 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and100)
  %tobool101.not = icmp eq i32 %and100, 0
  br i1 %tobool101.not, label %do.body110, label %if.end109

if.end109:                                        ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #17
  %30 = ptrtoint ptr %ptepp to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %add.ptr99, ptr %ptepp, align 4
  br label %cleanup

do.body110:                                       ; preds = %if.end94
  %31 = ptrtoint ptr %ptlp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ptlp, align 4
  tail call void @_raw_spin_unlock(ptr noundef %32) #15
  tail call void @kunmap_local_indexed(ptr noundef %add.ptr99) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %33 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 213
  %37 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %38, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %39 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %42, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br i1 %tobool89.not, label %do.body110.cleanup_crit_edge, label %if.then120

do.body110.cleanup_crit_edge:                     ; preds = %do.body110
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then120:                                       ; preds = %do.body110
  %flags.i.i = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 4
  %43 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then120.if.end.i_crit_edge, label %do.body.i

if.then120.if.end.i_crit_edge:                    ; preds = %if.then120
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

do.body.i:                                        ; preds = %if.then120
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__might_sleep(ptr noundef nonnull @.str.24, i32 noundef 482) #15
  br label %if.end.i

if.end.i:                                         ; preds = %do.body.i, %if.then120.if.end.i_crit_edge
  %mm.i = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 1
  %45 = ptrtoint ptr %mm.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %mm.i, align 4
  %notifier_subscriptions.i.i = getelementptr inbounds %struct.anon.9, ptr %46, i32 0, i32 49
  %47 = ptrtoint ptr %notifier_subscriptions.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %notifier_subscriptions.i.i, align 8
  %tobool.i8.not.i = icmp eq ptr %48, null
  br i1 %tobool.i8.not.i, label %if.end.i.cleanup_crit_edge, label %if.then4.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmu_notifier_invalidate_range_end(ptr noundef nonnull %range, i1 noundef zeroext false) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then4.i, %if.end.i.cleanup_crit_edge, %do.body110.cleanup_crit_edge, %if.end109, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end109 ], [ -22, %do.body110.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.i.cleanup_crit_edge ], [ -22, %if.then4.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @follow_pte(ptr noundef %mm, i32 noundef %address, ptr nocapture noundef writeonly %ptepp, ptr nocapture noundef %ptlp) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @follow_invalidate_pte(ptr noundef %mm, i32 noundef %address, ptr noundef null, ptr noundef %ptepp, ptr undef, ptr noundef %ptlp)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @follow_pfn(ptr nocapture noundef readonly %vma, i32 noundef %address, ptr nocapture noundef writeonly %pfn) #2 align 64 {
entry:
  %ptl = alloca ptr, align 4
  %ptep = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ptl) #15
  %0 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %ptl, align 4, !annotation !258
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ptep) #15
  %1 = ptrtoint ptr %ptep to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %ptep, align 4, !annotation !258
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags, align 4
  %and = and i32 %3, 17408
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 6
  %4 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vm_mm, align 4
  %call.i = call i32 @follow_invalidate_pte(ptr noundef %5, i32 noundef %address, ptr noundef null, ptr noundef nonnull %ptep, ptr undef, ptr noundef nonnull %ptl) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not = icmp eq i32 %call.i, 0
  br i1 %tobool1.not, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %6 = ptrtoint ptr %ptep to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ptep, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %shr = lshr i32 %9, 12
  %10 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %shr, ptr %pfn, align 4
  %11 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ptl, align 4
  tail call void @_raw_spin_unlock(ptr noundef %12) #15
  tail call void @kunmap_local_indexed(ptr noundef %7) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %13 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 213
  %17 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %18, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %19 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %22, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end3 ], [ -22, %entry.cleanup_crit_edge ], [ %call.i, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ptep) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ptl) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__access_remote_vm(ptr noundef %mm, i32 noundef %addr, ptr noundef %buf, i32 noundef %len, i32 noundef %gup_flags) local_unnamed_addr #2 align 64 {
entry:
  %vma = alloca ptr, align 4
  %page = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vma) #15
  %0 = ptrtoint ptr %vma to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %vma, align 4, !annotation !258
  %and = and i32 %gup_flags, 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_start_locking, i32 0, i32 1), ptr blockaddress(@__access_remote_vm, %if.then.i.i)) #15
          to label %__mmap_lock_trace_start_locking.exit.i [label %if.then.i.i], !srcloc !217

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmap_lock_do_trace_start_locking(ptr noundef %mm, i1 noundef zeroext false) #15
  br label %__mmap_lock_trace_start_locking.exit.i

__mmap_lock_trace_start_locking.exit.i:           ; preds = %if.then.i.i, %entry
  %mmap_lock.i = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 15
  %call.i = tail call i32 @down_read_killable(ptr noundef %mmap_lock.i) #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_acquire_returned, i32 0, i32 1), ptr blockaddress(@__access_remote_vm, %if.then.i4.i)) #15
          to label %mmap_read_lock_killable.exit [label %if.then.i4.i], !srcloc !217

if.then.i4.i:                                     ; preds = %__mmap_lock_trace_start_locking.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp eq i32 %call.i, 0
  tail call void @__mmap_lock_do_trace_acquire_returned(ptr noundef %mm, i1 noundef zeroext false, i1 noundef zeroext %cmp.i) #15
  br label %mmap_read_lock_killable.exit

mmap_read_lock_killable.exit:                     ; preds = %if.then.i4.i, %__mmap_lock_trace_start_locking.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %while.cond.preheader, label %mmap_read_lock_killable.exit.cleanup23_crit_edge

mmap_read_lock_killable.exit.cleanup23_crit_edge: ; preds = %mmap_read_lock_killable.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup23

while.cond.preheader:                             ; preds = %mmap_read_lock_killable.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool1.not62 = icmp eq i32 %len, 0
  br i1 %tobool1.not62, label %while.cond.preheader.while.end_crit_edge, label %while.body.lr.ph

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool10.not = icmp eq i32 %and, 0
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %addr.addr.066 = phi i32 [ %addr, %while.body.lr.ph ], [ %add, %cleanup.while.body_crit_edge ]
  %len.addr.065 = phi i32 [ %len, %while.body.lr.ph ], [ %sub17, %cleanup.while.body_crit_edge ]
  %buf.addr.063 = phi ptr [ %buf, %while.body.lr.ph ], [ %add.ptr18, %cleanup.while.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %page) #15
  %1 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %page, align 4
  %call2 = call i32 @get_user_pages_remote(ptr noundef %mm, i32 noundef %addr.addr.066, i32 noundef 1, i32 noundef %gup_flags, ptr noundef nonnull %page, ptr noundef nonnull %vma, ptr noundef null) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call2)
  %cmp = icmp slt i32 %call2, 1
  br i1 %cmp, label %cleanup.thread, label %if.else

cleanup.thread:                                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %page) #15
  br label %while.end

if.else:                                          ; preds = %while.body
  %and4 = and i32 %addr.addr.066, 4095
  %sub = sub nuw nsw i32 4096, %and4
  %2 = call i32 @llvm.umin.i32(i32 %len.addr.065, i32 %sub)
  %3 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %page, align 4
  call void @__might_sleep(ptr noundef nonnull @.str.52, i32 noundef 44) #15
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 4
  %shr.i.i = lshr i32 %6, 30
  %7 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.55)
  switch i32 %shr.i.i, label %if.else.if.then.i_crit_edge [
    i32 2, label %if.else.if.else.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i
  ]

if.else.if.else.i_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

if.else.if.then.i_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

is_highmem_idx.exit.i:                            ; preds = %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %8 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %8)
  %cmp2.i.not.i = icmp eq i32 %8, 2
  br i1 %cmp2.i.not.i, label %is_highmem_idx.exit.i.if.else.i_crit_edge, label %is_highmem_idx.exit.i.if.then.i_crit_edge

is_highmem_idx.exit.i.if.then.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

is_highmem_idx.exit.i.if.else.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

if.then.i:                                        ; preds = %is_highmem_idx.exit.i.if.then.i_crit_edge, %if.else.if.then.i_crit_edge
  %call5.i = call ptr @page_address(ptr noundef %4) #15
  br label %kmap.exit

if.else.i:                                        ; preds = %is_highmem_idx.exit.i.if.else.i_crit_edge, %if.else.if.else.i_crit_edge
  %call6.i = call ptr @kmap_high(ptr noundef %4) #15
  br label %kmap.exit

kmap.exit:                                        ; preds = %if.else.i, %if.then.i
  %addr.0.i = phi ptr [ %call6.i, %if.else.i ], [ %call5.i, %if.then.i ]
  br i1 %tobool10.not, label %do.body, label %if.then11

if.then11:                                        ; preds = %kmap.exit
  call void @__sanitizer_cov_trace_pc() #17
  %9 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vma, align 4
  %11 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %page, align 4
  %add.ptr = getelementptr i8, ptr %addr.0.i, i32 %and4
  call void @copy_to_user_page(ptr noundef %10, ptr noundef %12, i32 noundef %addr.addr.066, ptr noundef %add.ptr, ptr noundef %buf.addr.063, i32 noundef %2) #15
  %13 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %page, align 4
  %call12 = call i32 @set_page_dirty_lock(ptr noundef %14) #15
  br label %if.end15

do.body:                                          ; preds = %kmap.exit
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr14 = getelementptr i8, ptr %addr.0.i, i32 %and4
  %15 = call ptr @memcpy(ptr %buf.addr.063, ptr %add.ptr14, i32 %2)
  br label %if.end15

if.end15:                                         ; preds = %do.body, %if.then11
  %16 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %page, align 4
  call void @__might_sleep(ptr noundef nonnull @.str.52, i32 noundef 55) #15
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %shr.i.i47 = lshr i32 %19, 30
  %20 = zext i32 %shr.i.i47 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.56)
  switch i32 %shr.i.i47, label %if.end15.kunmap.exit_crit_edge [
    i32 2, label %if.end15.if.end.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i49
  ]

if.end15.if.end.i_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.end15.kunmap.exit_crit_edge:                   ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #17
  br label %kunmap.exit

is_highmem_idx.exit.i49:                          ; preds = %if.end15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %21 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %21)
  %cmp2.i.not.i48 = icmp eq i32 %21, 2
  br i1 %cmp2.i.not.i48, label %is_highmem_idx.exit.i49.if.end.i_crit_edge, label %is_highmem_idx.exit.i49.kunmap.exit_crit_edge

is_highmem_idx.exit.i49.kunmap.exit_crit_edge:    ; preds = %is_highmem_idx.exit.i49
  call void @__sanitizer_cov_trace_pc() #17
  br label %kunmap.exit

is_highmem_idx.exit.i49.if.end.i_crit_edge:       ; preds = %is_highmem_idx.exit.i49
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.end.i:                                         ; preds = %is_highmem_idx.exit.i49.if.end.i_crit_edge, %if.end15.if.end.i_crit_edge
  call void @kunmap_high(ptr noundef %17) #15
  br label %kunmap.exit

kunmap.exit:                                      ; preds = %if.end.i, %is_highmem_idx.exit.i49.kunmap.exit_crit_edge, %if.end15.kunmap.exit_crit_edge
  %22 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %page, align 4
  %24 = getelementptr inbounds %struct.page, ptr %23, i32 0, i32 1
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %24, align 4
  %and.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i50, !prof !218

if.then.i.i50:                                    ; preds = %kunmap.exit
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %26, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %kunmap.exit
  call void @__sanitizer_cov_trace_pc() #17
  %27 = ptrtoint ptr %23 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i50
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i50 ], [ %27, %if.end.i.i ]
  %28 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %28, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %29 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %cmp.i.i.i.i = icmp eq i32 %30, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !230

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %31 = inttoptr i32 %retval.0.i.i to ptr
  call void @dump_page(ptr noundef %31, ptr noundef nonnull @.str.45) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %32 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %32, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@__access_remote_vm, %if.then.i.i.i.i.i)) #15
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !217

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %28, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #15
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i51, label %folio_put_testzero.exit.i.i.cleanup_crit_edge

folio_put_testzero.exit.i.i.cleanup_crit_edge:    ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then.i4.i51:                                   ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__put_page(ptr noundef %28) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then.i4.i51, %folio_put_testzero.exit.i.i.cleanup_crit_edge
  %sub17 = sub i32 %len.addr.065, %2
  %add.ptr18 = getelementptr i8, ptr %buf.addr.063, i32 %2
  %add = add i32 %2, %addr.addr.066
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %page) #15
  %tobool1.not = icmp eq i32 %sub17, 0
  br i1 %tobool1.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %cleanup.thread, %while.cond.preheader.while.end_crit_edge
  %buf.addr.061 = phi ptr [ %buf.addr.063, %cleanup.thread ], [ %buf, %while.cond.preheader.while.end_crit_edge ], [ %add.ptr18, %cleanup.while.end_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@__access_remote_vm, %if.then.i.i52)) #15
          to label %mmap_read_unlock.exit [label %if.then.i.i52], !srcloc !217

if.then.i.i52:                                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #17
  call void @__mmap_lock_do_trace_released(ptr noundef %mm, i1 noundef zeroext false) #15
  br label %mmap_read_unlock.exit

mmap_read_unlock.exit:                            ; preds = %if.then.i.i52, %while.end
  call void @up_read(ptr noundef %mmap_lock.i) #15
  %sub.ptr.lhs.cast = ptrtoint ptr %buf.addr.061 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %buf to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  br label %cleanup23

cleanup23:                                        ; preds = %mmap_read_unlock.exit, %mmap_read_lock_killable.exit.cleanup23_crit_edge
  %retval.0 = phi i32 [ %sub.ptr.sub, %mmap_read_unlock.exit ], [ 0, %mmap_read_lock_killable.exit.cleanup23_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vma) #15
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_user_pages_remote(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @copy_to_user_page(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_page_dirty_lock(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @access_remote_vm(ptr noundef %mm, i32 noundef %addr, ptr noundef %buf, i32 noundef %len, i32 noundef %gup_flags) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__access_remote_vm(ptr noundef %mm, i32 noundef %addr, ptr noundef %buf, i32 noundef %len, i32 noundef %gup_flags)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @access_process_vm(ptr noundef %tsk, i32 noundef %addr, ptr noundef %buf, i32 noundef %len, i32 noundef %gup_flags) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @get_task_mm(ptr noundef %tsk) #15
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call1 = tail call i32 @__access_remote_vm(ptr noundef nonnull %call, i32 noundef %addr, ptr noundef %buf, i32 noundef %len, i32 noundef %gup_flags)
  tail call void @mmput(ptr noundef nonnull %call) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_task_mm(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mmput(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @print_vma_addr(ptr noundef %prefix, i32 noundef %ip) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %mm1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 53
  %4 = ptrtoint ptr %mm1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mm1, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_start_locking, i32 0, i32 1), ptr blockaddress(@print_vma_addr, %if.then.i.i)) #15
          to label %__mmap_lock_trace_start_locking.exit.i [label %if.then.i.i], !srcloc !217

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmap_lock_do_trace_start_locking(ptr noundef %5, i1 noundef zeroext false) #15
  br label %__mmap_lock_trace_start_locking.exit.i

__mmap_lock_trace_start_locking.exit.i:           ; preds = %if.then.i.i, %entry
  %mmap_lock.i = getelementptr inbounds %struct.anon.9, ptr %5, i32 0, i32 15
  %call.i = tail call i32 @down_read_trylock(ptr noundef %mmap_lock.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp ne i32 %call.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_acquire_returned, i32 0, i32 1), ptr blockaddress(@print_vma_addr, %if.then.i5.i)) #15
          to label %mmap_read_trylock.exit [label %if.then.i5.i], !srcloc !217

if.then.i5.i:                                     ; preds = %__mmap_lock_trace_start_locking.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmap_lock_do_trace_acquire_returned(ptr noundef %5, i1 noundef zeroext false, i1 noundef zeroext %cmp.i) #15
  br label %mmap_read_trylock.exit

mmap_read_trylock.exit:                           ; preds = %if.then.i5.i, %__mmap_lock_trace_start_locking.exit.i
  br i1 %cmp.i, label %if.end, label %mmap_read_trylock.exit.cleanup_crit_edge

mmap_read_trylock.exit.cleanup_crit_edge:         ; preds = %mmap_read_trylock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %mmap_read_trylock.exit
  %call3 = tail call ptr @find_vma(ptr noundef %5, i32 noundef %ip) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.if.end18_crit_edge, label %land.lhs.true

if.end.if.end18_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18

land.lhs.true:                                    ; preds = %if.end
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %call3, i32 0, i32 14
  %6 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vm_file, align 4
  %tobool4.not = icmp eq ptr %7, null
  br i1 %tobool4.not, label %land.lhs.true.if.end18_crit_edge, label %if.then5

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18

if.then5:                                         ; preds = %land.lhs.true
  %call7 = tail call i32 @__get_free_pages(i32 noundef 2048, i32 noundef 0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.then5.if.end18_crit_edge, label %if.then9

if.then5.if.end18_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18

if.then9:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #17
  %8 = inttoptr i32 %call7 to ptr
  %call10 = tail call ptr @file_path(ptr noundef nonnull %7, ptr noundef nonnull %8, i32 noundef 4096) #15
  %cmp.i31 = icmp ugt ptr %call10, inttoptr (i32 -4096 to ptr)
  %spec.select = select i1 %cmp.i31, ptr @.str.1, ptr %call10
  %call.i32 = tail call ptr @strrchr(ptr noundef %spec.select, i32 noundef 47) #15
  %tobool.not.i = icmp eq ptr %call.i32, null
  %add.ptr.i = getelementptr i8, ptr %call.i32, i32 1
  %cond.i = select i1 %tobool.not.i, ptr %spec.select, ptr %add.ptr.i
  %9 = ptrtoint ptr %call3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %call3, align 4
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %call3, i32 0, i32 1
  %11 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vm_end, align 4
  %sub = sub i32 %12, %10
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.2, ptr noundef %prefix, ptr noundef %cond.i, i32 noundef %10, i32 noundef %sub) #18
  tail call void @free_pages(i32 noundef %call7, i32 noundef 0) #15
  br label %if.end18

if.end18:                                         ; preds = %if.then9, %if.then5.if.end18_crit_edge, %land.lhs.true.if.end18_crit_edge, %if.end.if.end18_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@print_vma_addr, %if.then.i.i33)) #15
          to label %mmap_read_unlock.exit [label %if.then.i.i33], !srcloc !217

if.then.i.i33:                                    ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmap_lock_do_trace_released(ptr noundef %5, i1 noundef zeroext false) #15
  br label %mmap_read_unlock.exit

mmap_read_unlock.exit:                            ; preds = %if.then.i.i33, %if.end18
  tail call void @up_read(ptr noundef %mmap_lock.i) #15
  br label %cleanup

cleanup:                                          ; preds = %mmap_read_unlock.exit, %mmap_read_trylock.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @find_vma(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__get_free_pages(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @file_path(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__might_fault(ptr noundef %file, i32 noundef %line) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %pagefault_disabled.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 213
  %4 = ptrtoint ptr %pagefault_disabled.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pagefault_disabled.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.i.not = icmp eq i32 %5, 0
  br i1 %cmp.i.not, label %if.end, label %entry.if.end14_crit_edge

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

if.end:                                           ; preds = %entry
  tail call void @__might_sleep(ptr noundef %file, i32 noundef %line) #15
  %6 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task, align 8
  %mm = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 53
  %10 = ptrtoint ptr %mm to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mm, align 8
  %tobool.not = icmp eq ptr %11, null
  br i1 %tobool.not, label %if.end.if.end14_crit_edge, label %__here

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

__here:                                           ; preds = %if.end
  %dep_map = getelementptr inbounds %struct.anon.9, ptr %11, i32 0, i32 15, i32 6
  tail call void @lock_acquire(ptr noundef %dep_map, i32 noundef 0, i32 noundef 0, i32 noundef 1, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@__might_fault, %__here) to i32)) #15
  br label %__here12

__here12:                                         ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %mm9 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 53
  %14 = ptrtoint ptr %mm9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mm9, align 8
  %dep_map11 = getelementptr inbounds %struct.anon.9, ptr %15, i32 0, i32 15, i32 6
  tail call void @lock_release(ptr noundef %dep_map11, i32 noundef ptrtoint (ptr blockaddress(@__might_fault, %__here12) to i32)) #15
  br label %if.end14

if.end14:                                         ; preds = %__here12, %if.end.if.end14_crit_edge, %entry.if.end14_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @ptlock_cache_init() local_unnamed_addr #7 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.4, i32 noundef 44, i32 noundef 0, i32 noundef 262144, ptr noundef null) #15
  store ptr %call, ptr @page_ptl_cachep, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @ptlock_alloc(ptr nocapture noundef writeonly %page) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @page_ptl_cachep, align 4
  %call = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef 3264) #15
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %ptl1 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %1 = ptrtoint ptr %ptl1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call, ptr %ptl1, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %2 = xor i1 %tobool.not, true
  ret i1 %2
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ptlock_free(ptr nocapture noundef readonly %page) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @page_ptl_cachep, align 4
  %ptl = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %1 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ptl, align 4
  tail call void @kmem_cache_free(ptr noundef %0, ptr noundef %2) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rss_stat(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #9

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @pmd_clear_bad(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mod_lruvec_page_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__tlb_remove_page_size(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @tlb_flush_mmu(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__free_pages(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__virt_to_phys(i32 noundef) local_unnamed_addr #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_taint(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__mmu_notifier_invalidate_range_start(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_mm(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_pte_range(ptr noundef %dst_vma, ptr noundef %src_vma, ptr noundef %dst_pmd, ptr nocapture noundef readonly %src_pmd, i32 noundef %addr, i32 noundef %end) unnamed_addr #2 align 64 {
entry:
  %rss = alloca [4 x i32], align 4
  %prealloc = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %dst_vma, i32 0, i32 6
  %0 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vm_mm, align 4
  %vm_mm1 = getelementptr inbounds %struct.vm_area_struct, ptr %src_vma, i32 0, i32 6
  %2 = ptrtoint ptr %vm_mm1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_mm1, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %rss) #15
  %4 = getelementptr inbounds [4 x i32], ptr %rss, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %prealloc) #15
  %5 = ptrtoint ptr %prealloc to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %prealloc, align 4
  %vm_flags1.i = getelementptr inbounds %struct.vm_area_struct, ptr %dst_vma, i32 0, i32 8
  %mmlist.i = getelementptr inbounds %struct.anon.9, ptr %1, i32 0, i32 16
  %mmlist25.i = getelementptr inbounds %struct.anon.9, ptr %3, i32 0, i32 16
  %prev3.i.i.i = getelementptr inbounds %struct.anon.9, ptr %1, i32 0, i32 16, i32 1
  br label %again

again:                                            ; preds = %if.end288.again_crit_edge, %entry
  %entry2.sroa.0.0 = phi i32 [ 0, %entry ], [ %entry2.sroa.0.2, %if.end288.again_crit_edge ]
  %addr.addr.0 = phi i32 [ %addr, %entry ], [ %addr.addr.2, %if.end288.again_crit_edge ]
  %6 = call ptr @memset(ptr %rss, i32 0, i32 16)
  %7 = ptrtoint ptr %dst_pmd to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %dst_pmd, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %land.lhs.true, label %again.cond.end_crit_edge, !prof !230

again.cond.end_crit_edge:                         ; preds = %again
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

land.lhs.true:                                    ; preds = %again
  %call = tail call i32 @__pte_alloc(ptr noundef %1, ptr noundef %dst_pmd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool6.not = icmp eq i32 %call, 0
  br i1 %tobool6.not, label %land.lhs.true.cond.end_crit_edge, label %land.lhs.true.out_crit_edge

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

land.lhs.true.cond.end_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true.cond.end_crit_edge, %again.cond.end_crit_edge
  %9 = load ptr, ptr @mem_map, align 4
  %10 = ptrtoint ptr %dst_pmd to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dst_pmd, align 4
  %shr.i = lshr i32 %11, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %12 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %shr.i, %12
  %ptl.i.i = getelementptr %struct.page, ptr %9, i32 %sub.i, i32 1, i32 0, i32 3
  %13 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ptl.i.i, align 4
  %add.ptr = getelementptr %struct.page, ptr %9, i32 %sub.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %15 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %15, 512
  %16 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %19, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %20 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 213
  %24 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %25, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr, i32 noundef %or.i) #15
  %shr.i375 = lshr i32 %addr.addr.0, 12
  %and.i = and i32 %shr.i375, 511
  %add.ptr10 = getelementptr i32, ptr %call.i.i, i32 %and.i
  tail call void @_raw_spin_lock(ptr noundef %14) #15
  %tobool11.not = icmp eq ptr %add.ptr10, null
  br i1 %tobool11.not, label %cond.end.out_crit_edge, label %if.end

cond.end.out_crit_edge:                           ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end:                                           ; preds = %cond.end
  %26 = load ptr, ptr @mem_map, align 4
  %27 = ptrtoint ptr %src_pmd to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %src_pmd, align 4
  %shr13 = lshr i32 %28, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %29 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub14 = sub i32 %shr13, %29
  %add.ptr15 = getelementptr %struct.page, ptr %26, i32 %sub14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %30 = load i32, ptr @pgprot_kernel, align 4
  %or.i376 = or i32 %30, 512
  %31 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i377 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i.i377 to ptr
  %preempt_count.i.i.i.i378 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i.i378 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i.i378, align 4
  %add.i.i.i379 = add i32 %34, 1
  store volatile i32 %add.i.i.i379, ptr %preempt_count.i.i.i.i378, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %35 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i380 = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i.i1.i.i380 to ptr
  %task.i.i.i.i381 = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 2
  %37 = ptrtoint ptr %task.i.i.i.i381 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %task.i.i.i.i381, align 8
  %pagefault_disabled.i.i.i.i382 = getelementptr inbounds %struct.task_struct, ptr %38, i32 0, i32 213
  %39 = ptrtoint ptr %pagefault_disabled.i.i.i.i382 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %pagefault_disabled.i.i.i.i382, align 8
  %inc.i.i.i.i383 = add i32 %40, 1
  store i32 %inc.i.i.i.i383, ptr %pagefault_disabled.i.i.i.i382, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i384 = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr15, i32 noundef %or.i376) #15
  %add.ptr18 = getelementptr i32, ptr %call.i.i384, i32 %and.i
  %41 = load ptr, ptr @mem_map, align 4
  %42 = ptrtoint ptr %src_pmd to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %src_pmd, align 4
  %shr.i387 = lshr i32 %43, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %44 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i388 = sub i32 %shr.i387, %44
  %ptl.i.i389 = getelementptr %struct.page, ptr %41, i32 %sub.i388, i32 1, i32 0, i32 3
  %45 = ptrtoint ptr %ptl.i.i389 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %ptl.i.i389, align 4
  tail call void @_raw_spin_lock_nested(ptr noundef %46, i32 noundef 1) #15
  br label %do.body24

do.body24:                                        ; preds = %do.cond134.do.body24_crit_edge, %if.end
  %ret.1 = phi i32 [ 0, %if.end ], [ %ret.2, %do.cond134.do.body24_crit_edge ]
  %progress.0 = phi i32 [ 0, %if.end ], [ %add133, %do.cond134.do.body24_crit_edge ]
  %dst_pte.0 = phi ptr [ %add.ptr10, %if.end ], [ %incdec.ptr, %do.cond134.do.body24_crit_edge ]
  %src_pte.0 = phi ptr [ %add.ptr18, %if.end ], [ %incdec.ptr135, %do.cond134.do.body24_crit_edge ]
  %addr.addr.1 = phi i32 [ %addr.addr.0, %if.end ], [ %add136, %do.cond134.do.body24_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %progress.0)
  %cmp = icmp sgt i32 %progress.0, 31
  br i1 %cmp, label %if.then25, label %do.body24.if.end34_crit_edge

do.body24.if.end34_crit_edge:                     ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

if.then25:                                        ; preds = %do.body24
  %47 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i to ptr
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %48, align 16384
  %51 = and i32 %50, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.i.not = icmp eq i32 %51, 0
  br i1 %tobool.i.not, label %if.then25.if.end34_crit_edge, label %if.then25.do.end141_crit_edge

if.then25.do.end141_crit_edge:                    ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end141

if.then25.if.end34_crit_edge:                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

if.end34:                                         ; preds = %if.then25.if.end34_crit_edge, %do.body24.if.end34_crit_edge
  %progress.1 = phi i32 [ %progress.0, %do.body24.if.end34_crit_edge ], [ 0, %if.then25.if.end34_crit_edge ]
  %52 = ptrtoint ptr %src_pte.0 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %src_pte.0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool35.not = icmp eq i32 %53, 0
  br i1 %tobool35.not, label %if.end34.do.cond134_crit_edge, label %if.end37

if.end34.do.cond134_crit_edge:                    ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond134

if.end37:                                         ; preds = %if.end34
  %and38 = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38)
  %tobool39.not = icmp eq i32 %and38, 0
  br i1 %tobool39.not, label %if.then48, label %if.end112, !prof !230

if.then48:                                        ; preds = %if.end37
  %54 = ptrtoint ptr %vm_flags1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %vm_flags1.i, align 4
  %shr3.i.i = lshr i32 %53, 7
  %56 = shl i32 %53, 24
  %shl.i.i.i = and i32 %56, 2080374784
  %or.i.i.i = or i32 %shl.i.i.i, %shr3.i.i
  %.fca.0.insert.i = insertvalue [1 x i32] poison, i32 %or.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2013265920, i32 %or.i.i.i)
  %cmp.i.i = icmp ult i32 %or.i.i.i, 2013265920
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i, !prof !218

if.then.i:                                        ; preds = %if.then48
  %call9.i = tail call i32 @swap_duplicate([1 x i32] %.fca.0.insert.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %cmp.i = icmp slt i32 %call9.i, 0
  br i1 %cmp.i, label %if.then52, label %if.end.i

if.end.i:                                         ; preds = %if.then.i
  %57 = ptrtoint ptr %mmlist.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile ptr, ptr %mmlist.i, align 4
  %cmp.i1.not.i = icmp eq ptr %58, %mmlist.i
  br i1 %cmp.i1.not.i, label %if.then19.i, label %if.end.i.if.end27.i_crit_edge, !prof !230

if.end.i.if.end27.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end27.i

if.then19.i:                                      ; preds = %if.end.i
  tail call void @_raw_spin_lock(ptr noundef nonnull @mmlist_lock) #15
  %59 = ptrtoint ptr %mmlist.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile ptr, ptr %mmlist.i, align 4
  %cmp.i3.not.i = icmp eq ptr %60, %mmlist.i
  br i1 %cmp.i3.not.i, label %if.then23.i, label %if.then19.i.if.end26.i_crit_edge

if.then19.i.if.end26.i_crit_edge:                 ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end26.i

if.then23.i:                                      ; preds = %if.then19.i
  %61 = ptrtoint ptr %mmlist25.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %mmlist25.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mmlist.i, ptr noundef %mmlist25.i, ptr noundef %62) #15
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then23.i.if.end26.i_crit_edge

if.then23.i.if.end26.i_crit_edge:                 ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end26.i

if.end.i.i.i:                                     ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %mmlist.i, ptr %prev1.i.i.i, align 4
  %64 = ptrtoint ptr %mmlist.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %62, ptr %mmlist.i, align 4
  %65 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %mmlist25.i, ptr %prev3.i.i.i, align 4
  %66 = ptrtoint ptr %mmlist25.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile ptr %mmlist.i, ptr %mmlist25.i, align 4
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.end.i.i.i, %if.then23.i.if.end26.i_crit_edge, %if.then19.i.if.end26.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @mmlist_lock) #15
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.end26.i, %if.end.i.if.end27.i_crit_edge
  %67 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %4, align 4
  %inc.i = add i32 %68, 1
  store i32 %inc.i, ptr %4, align 4
  br label %if.then59

if.else.i:                                        ; preds = %if.then48
  %69 = and i32 %53, 120
  call void @__sanitizer_cov_trace_const_cmp4(i32 120, i32 %69)
  %.not.i = icmp eq i32 %69, 120
  br i1 %.not.i, label %if.then31.i, label %if.else.i.if.then59_crit_edge

if.else.i.if.then59_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then59

if.then31.i:                                      ; preds = %if.else.i
  %call33.i = tail call fastcc ptr @pfn_swap_entry_to_page([1 x i32] %.fca.0.insert.i) #15
  %call34.i = tail call fastcc i32 @mm_counter(ptr noundef %call33.i) #15
  %arrayidx35.i = getelementptr i32, ptr %rss, i32 %call34.i
  %70 = ptrtoint ptr %arrayidx35.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %arrayidx35.i, align 4
  %inc36.i = add i32 %71, 1
  store i32 %inc36.i, ptr %arrayidx35.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2080374784, i32 %shl.i.i.i)
  %cmp.i5.i = icmp eq i32 %shl.i.i.i, 2080374784
  %and.i.i390 = and i32 %55, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and.i.i390)
  %cmp.i6.i = icmp eq i32 %and.i.i390, 32
  %or.cond.i = select i1 %cmp.i5.i, i1 %cmp.i6.i, i1 false
  br i1 %or.cond.i, label %if.then41.i, label %if.then31.i.if.then59_crit_edge

if.then31.i.if.then59_crit_edge:                  ; preds = %if.then31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then59

if.then41.i:                                      ; preds = %if.then31.i
  call void @__sanitizer_cov_trace_pc() #17
  %shl6.i.i = and i32 %53, -128
  %or.i.i = or i32 %shl6.i.i, 120
  tail call void @set_pte_at(ptr noundef %3, i32 noundef %addr.addr.1, ptr noundef %src_pte.0, i32 noundef %or.i.i) #15
  br label %if.then59

if.then52:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %72 = ptrtoint ptr %src_pte.0 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %src_pte.0, align 4
  %shr3.i = lshr i32 %73, 7
  %74 = shl i32 %73, 24
  %shl.i.i = and i32 %74, 2080374784
  %or.i.i391 = or i32 %shl.i.i, %shr3.i
  br label %do.end141

if.then59:                                        ; preds = %if.then41.i, %if.then31.i.if.then59_crit_edge, %if.else.i.if.then59_crit_edge, %if.end27.i
  %pte.3.i = phi i32 [ %53, %if.end27.i ], [ %or.i.i, %if.then41.i ], [ %53, %if.then31.i.if.then59_crit_edge ], [ %53, %if.else.i.if.then59_crit_edge ]
  tail call void @set_pte_at(ptr noundef %1, i32 noundef %addr.addr.1, ptr noundef %dst_pte.0, i32 noundef %pte.3.i) #15
  br label %do.cond134

if.end112:                                        ; preds = %if.end37
  %call114 = call fastcc i32 @copy_present_pte(ptr noundef %dst_vma, ptr noundef %src_vma, ptr noundef %dst_pte.0, ptr noundef %src_pte.0, i32 noundef %addr.addr.1, ptr noundef nonnull %rss, ptr noundef nonnull %prealloc)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call114)
  %cmp115 = icmp eq i32 %call114, -11
  br i1 %cmp115, label %if.end112.do.end141_crit_edge, label %if.end123, !prof !230

if.end112.do.end141_crit_edge:                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end141

if.end123:                                        ; preds = %if.end112
  %75 = ptrtoint ptr %prealloc to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %prealloc, align 4
  %tobool124.not = icmp eq ptr %76, null
  br i1 %tobool124.not, label %if.end123.do.cond134_crit_edge, label %if.then131, !prof !218

if.end123.do.cond134_crit_edge:                   ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond134

if.then131:                                       ; preds = %if.end123
  %77 = getelementptr inbounds %struct.page, ptr %76, i32 0, i32 1
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %77, align 4
  %and.i.i392 = and i32 %79, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i392)
  %tobool.not.i.i = icmp eq i32 %and.i.i392, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %if.then131
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %79, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then131
  call void @__sanitizer_cov_trace_pc() #17
  %80 = ptrtoint ptr %76 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %80, %if.end.i.i ]
  %81 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %81, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %82 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %cmp.i.i.i.i = icmp eq i32 %83, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !230

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %84 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @dump_page(ptr noundef %84, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %85 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %85, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@copy_pte_range, %if.then.i.i.i.i.i)) #15
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !217

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %81, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #15
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %81) #15
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %86 = ptrtoint ptr %prealloc to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr null, ptr %prealloc, align 4
  br label %do.cond134

do.cond134:                                       ; preds = %put_page.exit, %if.end123.do.cond134_crit_edge, %if.then59, %if.end34.do.cond134_crit_edge
  %.sink = phi i32 [ 8, %if.then59 ], [ 1, %if.end34.do.cond134_crit_edge ], [ 8, %put_page.exit ], [ 8, %if.end123.do.cond134_crit_edge ]
  %ret.2 = phi i32 [ 0, %if.then59 ], [ %ret.1, %if.end34.do.cond134_crit_edge ], [ %call114, %put_page.exit ], [ %call114, %if.end123.do.cond134_crit_edge ]
  %add133 = add nsw i32 %progress.1, %.sink
  %incdec.ptr = getelementptr i32, ptr %dst_pte.0, i32 1
  %incdec.ptr135 = getelementptr i32, ptr %src_pte.0, i32 1
  %add136 = add i32 %addr.addr.1, 4096
  %cmp137.not = icmp eq i32 %add136, %end
  br i1 %cmp137.not, label %do.cond134.do.end141_crit_edge, label %do.cond134.do.body24_crit_edge

do.cond134.do.body24_crit_edge:                   ; preds = %do.cond134
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body24

do.cond134.do.end141_crit_edge:                   ; preds = %do.cond134
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end141

do.end141:                                        ; preds = %do.cond134.do.end141_crit_edge, %if.end112.do.end141_crit_edge, %if.then52, %if.then25.do.end141_crit_edge
  %ret.3 = phi i32 [ -5, %if.then52 ], [ %ret.2, %do.cond134.do.end141_crit_edge ], [ -11, %if.end112.do.end141_crit_edge ], [ %ret.1, %if.then25.do.end141_crit_edge ]
  %entry2.sroa.0.1 = phi i32 [ %or.i.i391, %if.then52 ], [ %entry2.sroa.0.0, %if.end112.do.end141_crit_edge ], [ %entry2.sroa.0.0, %if.then25.do.end141_crit_edge ], [ %entry2.sroa.0.0, %do.cond134.do.end141_crit_edge ]
  %addr.addr.2 = phi i32 [ %addr.addr.1, %if.then52 ], [ %end, %do.cond134.do.end141_crit_edge ], [ %addr.addr.1, %if.end112.do.end141_crit_edge ], [ %addr.addr.1, %if.then25.do.end141_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %46) #15
  tail call void @kunmap_local_indexed(ptr noundef %add.ptr18) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %87 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %87, -16384
  %88 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %88, i32 0, i32 2
  %89 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %90, i32 0, i32 213
  %91 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %92, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %93 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %93, -16384
  %94 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %94, i32 0, i32 1
  %95 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i393 = add i32 %96, -1
  store volatile i32 %sub.i.i393, ptr %preempt_count.i.i.i, align 4
  call fastcc void @add_mm_rss_vec(ptr noundef %1, ptr noundef nonnull %rss)
  tail call void @_raw_spin_unlock(ptr noundef %14) #15
  tail call void @kunmap_local_indexed(ptr noundef nonnull %add.ptr10) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %97 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i394 = and i32 %97, -16384
  %98 = inttoptr i32 %and.i.i.i1.i394 to ptr
  %task.i.i.i395 = getelementptr inbounds %struct.thread_info, ptr %98, i32 0, i32 2
  %99 = ptrtoint ptr %task.i.i.i395 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %task.i.i.i395, align 8
  %pagefault_disabled.i.i.i396 = getelementptr inbounds %struct.task_struct, ptr %100, i32 0, i32 213
  %101 = ptrtoint ptr %pagefault_disabled.i.i.i396 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %pagefault_disabled.i.i.i396, align 8
  %dec.i.i.i397 = add i32 %102, -1
  store i32 %dec.i.i.i397, ptr %pagefault_disabled.i.i.i396, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %103 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i398 = and i32 %103, -16384
  %104 = inttoptr i32 %and.i.i.i.i398 to ptr
  %preempt_count.i.i.i399 = getelementptr inbounds %struct.thread_info, ptr %104, i32 0, i32 1
  %105 = ptrtoint ptr %preempt_count.i.i.i399 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %preempt_count.i.i.i399, align 4
  %sub.i.i400 = add i32 %106, -1
  store volatile i32 %sub.i.i400, ptr %preempt_count.i.i.i399, align 4
  tail call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 1100, i32 noundef 0) #15
  %call.i = tail call i32 @__cond_resched() #15
  %107 = zext i32 %ret.3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %107, ptr @__sancov_gen_cov_switch_values.57)
  switch i32 %ret.3, label %land.end243 [
    i32 -5, label %if.then161
    i32 -16, label %do.end141.out_crit_edge
    i32 -11, label %if.then229
    i32 0, label %do.end141.if.end288_crit_edge
  ]

do.end141.if.end288_crit_edge:                    ; preds = %do.end141
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end288

do.end141.out_crit_edge:                          ; preds = %do.end141
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.then161:                                       ; preds = %do.end141
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %entry2.sroa.0.1)
  %tobool163.not = icmp eq i32 %entry2.sroa.0.1, 0
  br i1 %tobool163.not, label %land.rhs172, label %if.then161.if.end210_crit_edge

if.then161.if.end210_crit_edge:                   ; preds = %if.then161
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end210

land.rhs172:                                      ; preds = %if.then161
  %.b370373 = load i1, ptr @copy_pte_range.__already_done.26, align 1
  br i1 %.b370373, label %land.rhs172.if.end210_crit_edge, label %if.then183, !prof !218

land.rhs172.if.end210_crit_edge:                  ; preds = %land.rhs172
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end210

if.then183:                                       ; preds = %land.rhs172
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @copy_pte_range.__already_done.26, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1103, i32 noundef 9, ptr noundef null) #15
  br label %if.end210

if.end210:                                        ; preds = %if.then183, %land.rhs172.if.end210_crit_edge, %if.then161.if.end210_crit_edge
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %entry2.sroa.0.1, 0
  %call219 = tail call i32 @add_swap_count_continuation([1 x i32] %.fca.0.insert, i32 noundef 3264) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call219)
  %cmp220 = icmp slt i32 %call219, 0
  br i1 %cmp220, label %if.end210.out_crit_edge, label %if.end210.if.end288_crit_edge

if.end210.if.end288_crit_edge:                    ; preds = %if.end210
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end288

if.end210.out_crit_edge:                          ; preds = %if.end210
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.then229:                                       ; preds = %do.end141
  %call230 = tail call fastcc ptr @page_copy_prealloc(ptr noundef %3)
  %108 = ptrtoint ptr %prealloc to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr %call230, ptr %prealloc, align 4
  %tobool231.not = icmp eq ptr %call230, null
  br i1 %tobool231.not, label %if.then229.cleanup_crit_edge, label %if.then229.if.end288_crit_edge

if.then229.if.end288_crit_edge:                   ; preds = %if.then229
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end288

if.then229.cleanup_crit_edge:                     ; preds = %if.then229
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.end243:                                      ; preds = %do.end141
  %.b371372 = load i1, ptr @copy_pte_range.__already_done.27, align 1
  br i1 %.b371372, label %land.end243.if.end288_crit_edge, label %if.then250, !prof !218

land.end243.if.end288_crit_edge:                  ; preds = %land.end243
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end288

if.then250:                                       ; preds = %land.end243
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @copy_pte_range.__already_done.27, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1116, i32 noundef 9, ptr noundef null) #15
  br label %if.end288

if.end288:                                        ; preds = %if.then250, %land.end243.if.end288_crit_edge, %if.then229.if.end288_crit_edge, %if.end210.if.end288_crit_edge, %do.end141.if.end288_crit_edge
  %entry2.sroa.0.2 = phi i32 [ %entry2.sroa.0.1, %if.then229.if.end288_crit_edge ], [ 0, %if.end210.if.end288_crit_edge ], [ %entry2.sroa.0.1, %do.end141.if.end288_crit_edge ], [ %entry2.sroa.0.1, %if.then250 ], [ %entry2.sroa.0.1, %land.end243.if.end288_crit_edge ]
  %cmp289.not = icmp eq i32 %addr.addr.2, %end
  br i1 %cmp289.not, label %if.end288.out_crit_edge, label %if.end288.again_crit_edge

if.end288.again_crit_edge:                        ; preds = %if.end288
  call void @__sanitizer_cov_trace_pc() #17
  br label %again

if.end288.out_crit_edge:                          ; preds = %if.end288
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

out:                                              ; preds = %if.end288.out_crit_edge, %if.end210.out_crit_edge, %do.end141.out_crit_edge, %cond.end.out_crit_edge, %land.lhs.true.out_crit_edge
  %ret.4 = phi i32 [ 0, %if.end288.out_crit_edge ], [ -12, %cond.end.out_crit_edge ], [ -12, %if.end210.out_crit_edge ], [ %ret.3, %do.end141.out_crit_edge ], [ -12, %land.lhs.true.out_crit_edge ]
  %109 = ptrtoint ptr %prealloc to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %prealloc, align 4
  %tobool292.not = icmp eq ptr %110, null
  br i1 %tobool292.not, label %out.cleanup_crit_edge, label %if.then299, !prof !218

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then299:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @put_page(ptr noundef nonnull %110)
  br label %cleanup

cleanup:                                          ; preds = %if.then299, %out.cleanup_crit_edge, %if.then229.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.4, %if.then299 ], [ %ret.4, %out.cleanup_crit_edge ], [ -12, %if.then229.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %prealloc) #15
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %rss) #15
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_present_pte(ptr noundef %dst_vma, ptr noundef %src_vma, ptr noundef %dst_pte, ptr noundef %src_pte, i32 noundef %addr, ptr nocapture noundef %rss, ptr nocapture noundef %prealloc) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %src_vma, i32 0, i32 6
  %0 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vm_mm, align 4
  %vm_flags1 = getelementptr inbounds %struct.vm_area_struct, ptr %src_vma, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags1, align 4
  %4 = ptrtoint ptr %src_pte to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %src_pte, align 4
  %shr.i = lshr i32 %5, 12
  %and1.i = and i32 %3, 268436480
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not.i = icmp eq i32 %and1.i, 0
  br i1 %tobool.not.i, label %entry.if.end18.i_crit_edge, label %if.then.i, !prof !218

entry.if.end18.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i

if.then.i:                                        ; preds = %entry
  %and5.i = and i32 %3, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.else.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %call.i = tail call i32 @pfn_valid(i32 noundef %shr.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool8.not.i, label %if.then7.i.if.end6_crit_edge, label %if.then7.i.vm_normal_page.exit_crit_edge

if.then7.i.vm_normal_page.exit_crit_edge:         ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vm_normal_page.exit

if.then7.i.if.end6_crit_edge:                     ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end6

if.else.i:                                        ; preds = %if.then.i
  %6 = ptrtoint ptr %src_vma to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %src_vma, align 4
  %sub.i = sub i32 %addr, %7
  %shr10.i = lshr i32 %sub.i, 12
  %vm_pgoff.i = getelementptr inbounds %struct.vm_area_struct, ptr %src_vma, i32 0, i32 13
  %8 = ptrtoint ptr %vm_pgoff.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vm_pgoff.i, align 4
  %add.i = add i32 %shr10.i, %9
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i, i32 %add.i)
  %cmp.i = icmp ne i32 %shr.i, %add.i
  %and.i.i = and i32 %3, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and.i.i)
  %cmp.i.i = icmp eq i32 %and.i.i, 32
  %or.cond.i = select i1 %cmp.i, i1 %cmp.i.i, i1 false
  br i1 %or.cond.i, label %if.else.i.if.end18.i_crit_edge, label %if.else.i.if.end6_crit_edge

if.else.i.if.end6_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end6

if.else.i.if.end18.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.else.i.if.end18.i_crit_edge, %entry.if.end18.i_crit_edge
  %10 = load i32, ptr @zero_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %shr.i)
  %cmp.i45.not.i = icmp eq i32 %10, %shr.i
  br i1 %cmp.i45.not.i, label %if.end18.i.if.end6_crit_edge, label %check_pfn.i

if.end18.i.if.end6_crit_edge:                     ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end6

check_pfn.i:                                      ; preds = %if.end18.i
  %11 = load i32, ptr @highest_memmap_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i, i32 %11)
  %cmp23.i = icmp ugt i32 %shr.i, %11
  br i1 %cmp23.i, label %if.then30.i, label %check_pfn.i.vm_normal_page.exit_crit_edge, !prof !230

check_pfn.i.vm_normal_page.exit_crit_edge:        ; preds = %check_pfn.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %vm_normal_page.exit

if.then30.i:                                      ; preds = %check_pfn.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @print_bad_pte(ptr noundef %src_vma, i32 noundef %addr, i32 noundef %5, ptr noundef null) #15
  br label %if.end6

vm_normal_page.exit:                              ; preds = %check_pfn.i.vm_normal_page.exit_crit_edge, %if.then7.i.vm_normal_page.exit_crit_edge
  %12 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %13 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub32.i = sub i32 %shr.i, %13
  %add.ptr.i = getelementptr %struct.page, ptr %12, i32 %sub32.i
  %tobool.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not, label %vm_normal_page.exit.if.end6_crit_edge, label %if.then

vm_normal_page.exit.if.end6_crit_edge:            ; preds = %vm_normal_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end6

if.then:                                          ; preds = %vm_normal_page.exit
  %14 = ptrtoint ptr %vm_flags1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vm_flags1, align 4
  %and.i.i.i = and i32 %15, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and.i.i.i)
  %cmp.i.i.i = icmp eq i32 %and.i.i.i, 32
  br i1 %cmp.i.i.i, label %if.end.i.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i.i:                                       ; preds = %if.then
  %16 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vm_mm, align 4
  %flags.i.i = getelementptr inbounds %struct.anon.9, ptr %17, i32 0, i32 43
  %18 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %flags.i.i, align 4
  %20 = and i32 %19, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i.i, label %if.end.i.i.if.end_crit_edge, label %if.end3.i.i

if.end.i.i.if.end_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end3.i.i:                                      ; preds = %if.end.i.i
  %21 = getelementptr %struct.page, ptr %12, i32 %sub32.i, i32 1
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %21, align 4
  %and.i.i.i.i1.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i1.i)
  %tobool.not.i5.i.i.i.i = icmp eq i32 %and.i.i.i.i1.i, 0
  br i1 %tobool.not.i5.i.i.i.i, label %if.end.i.i.i.i.i, label %if.then.i.i.i.i.i, !prof !218

if.then.i.i.i.i.i:                                ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i.i = add i32 %23, -1
  br label %_compound_head.exit.i.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %24 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit.i.i.i.i

_compound_head.exit.i.i.i.i:                      ; preds = %if.end.i.i.i.i.i, %if.then.i.i.i.i.i
  %retval.0.i.i.i.i.i = phi i32 [ %sub.i.i.i.i.i, %if.then.i.i.i.i.i ], [ %24, %if.end.i.i.i.i.i ]
  %25 = inttoptr i32 %retval.0.i.i.i.i.i to ptr
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %25, align 4
  %28 = and i32 %27, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i.i.i.i.i = icmp eq i32 %28, 0
  br i1 %tobool.not.i.i.i.i.i, label %PageCompound.exit.i.i.i.i, label %_compound_head.exit.i.i.i.i.land.rhs.i.i.i.i_crit_edge

_compound_head.exit.i.i.i.i.land.rhs.i.i.i.i_crit_edge: ; preds = %_compound_head.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs.i.i.i.i

PageCompound.exit.i.i.i.i:                        ; preds = %_compound_head.exit.i.i.i.i
  %29 = getelementptr inbounds %struct.page, ptr %25, i32 0, i32 1
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %29, align 4
  %and.i.i.i.i.i.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i2.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i2.i, label %PageCompound.exit.i.i.i.i.if.end.i.i.i_crit_edge, label %PageCompound.exit.i.i.i.i.land.rhs.i.i.i.i_crit_edge

PageCompound.exit.i.i.i.i.land.rhs.i.i.i.i_crit_edge: ; preds = %PageCompound.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs.i.i.i.i

PageCompound.exit.i.i.i.i.if.end.i.i.i_crit_edge: ; preds = %PageCompound.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %PageCompound.exit.i.i.i.i.land.rhs.i.i.i.i_crit_edge, %_compound_head.exit.i.i.i.i.land.rhs.i.i.i.i_crit_edge
  %32 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %25, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %33)
  %cmp.i.not.i.i.i.i.i.i = icmp eq i32 %33, -1
  br i1 %cmp.i.not.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %PageHead.exit.i.i.i.i.i, !prof !230

if.then.i.i.i.i.i.i:                              ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %25, ptr noundef nonnull @.str.30) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #15, !srcloc !272
  unreachable

PageHead.exit.i.i.i.i.i:                          ; preds = %land.rhs.i.i.i.i
  %34 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %25, align 4
  %36 = and i32 %35, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i6.i.i.i.i = icmp eq i32 %36, 0
  br i1 %tobool.not.i6.i.i.i.i, label %PageHead.exit.i.i.i.i.i.if.end.i.i.i_crit_edge, label %hpage_pincount_available.exit.i.i.i

PageHead.exit.i.i.i.i.i.if.end.i.i.i_crit_edge:   ; preds = %PageHead.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

hpage_pincount_available.exit.i.i.i:              ; preds = %PageHead.exit.i.i.i.i.i
  %37 = getelementptr %struct.page, ptr %25, i32 1, i32 1
  %compound_order.i.i.i.i.i = getelementptr inbounds %struct.anon.89, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %compound_order.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %compound_order.i.i.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %39)
  %phi.cmp.i.i.i.i = icmp ugt i8 %39, 1
  br i1 %phi.cmp.i.i.i.i, label %if.then.i.i.i, label %hpage_pincount_available.exit.i.i.i.if.end.i.i.i_crit_edge

hpage_pincount_available.exit.i.i.i.if.end.i.i.i_crit_edge: ; preds = %hpage_pincount_available.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %hpage_pincount_available.exit.i.i.i
  %40 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %21, align 4
  %and.i.i.i7.i.i.i = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i7.i.i.i)
  %tobool.not.i5.i.i.i.i.i = icmp eq i32 %and.i.i.i7.i.i.i, 0
  br i1 %tobool.not.i5.i.i.i.i.i, label %if.end.i.i.i.i.i.i, label %if.then.i.i.i8.i.i.i, !prof !218

if.then.i.i.i8.i.i.i:                             ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i.i.i = add i32 %41, -1
  br label %_compound_head.exit.i.i.i.i.i

if.end.i.i.i.i.i.i:                               ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %42 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit.i.i.i.i.i

_compound_head.exit.i.i.i.i.i:                    ; preds = %if.end.i.i.i.i.i.i, %if.then.i.i.i8.i.i.i
  %retval.0.i.i.i.i.i.i = phi i32 [ %sub.i.i.i.i.i.i, %if.then.i.i.i8.i.i.i ], [ %42, %if.end.i.i.i.i.i.i ]
  %43 = inttoptr i32 %retval.0.i.i.i.i.i.i to ptr
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %43, align 4
  %46 = and i32 %45, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %46, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %PageCompound.exit.i.i.i.i.i, label %_compound_head.exit.i.i.i.i.i.land.rhs.i.i.i.i.i_crit_edge

_compound_head.exit.i.i.i.i.i.land.rhs.i.i.i.i.i_crit_edge: ; preds = %_compound_head.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs.i.i.i.i.i

PageCompound.exit.i.i.i.i.i:                      ; preds = %_compound_head.exit.i.i.i.i.i
  %47 = getelementptr inbounds %struct.page, ptr %43, i32 0, i32 1
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %47, align 4
  %and.i.i.i.i.i.i.i = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %tobool.not.i.i9.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i9.i.i.i, label %PageCompound.exit.i.i.i.i.i.if.then.i.i.i3.i_crit_edge, label %PageCompound.exit.i.i.i.i.i.land.rhs.i.i.i.i.i_crit_edge, !prof !246

PageCompound.exit.i.i.i.i.i.land.rhs.i.i.i.i.i_crit_edge: ; preds = %PageCompound.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs.i.i.i.i.i

PageCompound.exit.i.i.i.i.i.if.then.i.i.i3.i_crit_edge: ; preds = %PageCompound.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i.i3.i

land.rhs.i.i.i.i.i:                               ; preds = %PageCompound.exit.i.i.i.i.i.land.rhs.i.i.i.i.i_crit_edge, %_compound_head.exit.i.i.i.i.i.land.rhs.i.i.i.i.i_crit_edge
  %50 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %51)
  %cmp.i.not.i.i.i.i.i.i.i = icmp eq i32 %51, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i, label %PageHead.exit.i.i.i.i.i.i, !prof !230

if.then.i.i.i.i.i.i.i:                            ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %43, ptr noundef nonnull @.str.30) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #15, !srcloc !272
  unreachable

PageHead.exit.i.i.i.i.i.i:                        ; preds = %land.rhs.i.i.i.i.i
  %52 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %43, align 4
  %54 = and i32 %53, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.not.i6.i.i.i.i.i = icmp eq i32 %54, 0
  br i1 %tobool.not.i6.i.i.i.i.i, label %PageHead.exit.i.i.i.i.i.i.if.then.i.i.i3.i_crit_edge, label %hpage_pincount_available.exit.i.i.i.i, !prof !246

PageHead.exit.i.i.i.i.i.i.if.then.i.i.i3.i_crit_edge: ; preds = %PageHead.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i.i3.i

hpage_pincount_available.exit.i.i.i.i:            ; preds = %PageHead.exit.i.i.i.i.i.i
  %55 = getelementptr %struct.page, ptr %43, i32 1, i32 1
  %compound_order.i.i.i.i.i.i = getelementptr inbounds %struct.anon.89, ptr %55, i32 0, i32 2
  %56 = ptrtoint ptr %compound_order.i.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %compound_order.i.i.i.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %57)
  %phi.cmp.i.i.i.i.i = icmp ugt i8 %57, 1
  br i1 %phi.cmp.i.i.i.i.i, label %do.end6.i.i.i.i, label %hpage_pincount_available.exit.i.i.i.i.if.then.i.i.i3.i_crit_edge, !prof !218

hpage_pincount_available.exit.i.i.i.i.if.then.i.i.i3.i_crit_edge: ; preds = %hpage_pincount_available.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i.i3.i

if.then.i.i.i3.i:                                 ; preds = %hpage_pincount_available.exit.i.i.i.i.if.then.i.i.i3.i_crit_edge, %PageHead.exit.i.i.i.i.i.i.if.then.i.i.i3.i_crit_edge, %PageCompound.exit.i.i.i.i.i.if.then.i.i.i3.i_crit_edge
  tail call void @dump_page(ptr noundef nonnull %add.ptr.i, ptr noundef nonnull @.str.31) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 910, 0\0A.popsection", ""() #15, !srcloc !292
  unreachable

do.end6.i.i.i.i:                                  ; preds = %hpage_pincount_available.exit.i.i.i.i
  %58 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %21, align 4
  %and.i.i10.i.i.i = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i10.i.i.i)
  %tobool.not.i12.i.i.i.i = icmp eq i32 %and.i.i10.i.i.i, 0
  br i1 %tobool.not.i12.i.i.i.i, label %if.end.i.i13.i.i.i, label %if.then.i.i12.i.i.i, !prof !218

if.then.i.i12.i.i.i:                              ; preds = %do.end6.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i11.i.i.i = add i32 %59, -1
  br label %compound_pincount.exit.i.i.i

if.end.i.i13.i.i.i:                               ; preds = %do.end6.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %60 = ptrtoint ptr %add.ptr.i to i32
  br label %compound_pincount.exit.i.i.i

compound_pincount.exit.i.i.i:                     ; preds = %if.end.i.i13.i.i.i, %if.then.i.i12.i.i.i
  %retval.0.i.i14.i.i.i = phi i32 [ %sub.i.i11.i.i.i, %if.then.i.i12.i.i.i ], [ %60, %if.end.i.i13.i.i.i ]
  %61 = inttoptr i32 %retval.0.i.i14.i.i.i to ptr
  %hpage_pinned_refcount.i.i.i.i.i.i = getelementptr %struct.page, ptr %61, i32 2, i32 1, i32 0, i32 0, i32 1
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %hpage_pinned_refcount.i.i.i.i.i.i, i32 noundef 4) #15
  %62 = ptrtoint ptr %hpage_pinned_refcount.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %hpage_pinned_refcount.i.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %cmp.i6.i.i = icmp sgt i32 %63, 0
  br i1 %cmp.i6.i.i, label %compound_pincount.exit.i.i.i.if.end.i_crit_edge, label %compound_pincount.exit.i.i.i.if.end_crit_edge, !prof !230

compound_pincount.exit.i.i.i.if.end_crit_edge:    ; preds = %compound_pincount.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

compound_pincount.exit.i.i.i.if.end.i_crit_edge:  ; preds = %compound_pincount.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.end.i.i.i:                                     ; preds = %hpage_pincount_available.exit.i.i.i.if.end.i.i.i_crit_edge, %PageHead.exit.i.i.i.i.i.if.end.i.i.i_crit_edge, %PageCompound.exit.i.i.i.i.if.end.i.i.i_crit_edge
  %64 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %21, align 4
  %and.i.i.i.i = and i32 %65, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i16.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i16.i.i.i, label %if.end.i.i.i.i, label %if.then.i17.i.i.i, !prof !218

if.then.i17.i.i.i:                                ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i = add i32 %65, -1
  br label %page_needs_cow_for_dma.exit.i

if.end.i.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %66 = ptrtoint ptr %add.ptr.i to i32
  br label %page_needs_cow_for_dma.exit.i

page_needs_cow_for_dma.exit.i:                    ; preds = %if.end.i.i.i.i, %if.then.i17.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i17.i.i.i ], [ %66, %if.end.i.i.i.i ]
  %67 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %67, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  %68 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1023, i32 %69)
  %cmp4.i.i.i = icmp ugt i32 %69, 1023
  br i1 %cmp4.i.i.i, label %page_needs_cow_for_dma.exit.i.if.end.i_crit_edge, label %page_needs_cow_for_dma.exit.i.if.end_crit_edge, !prof !230

page_needs_cow_for_dma.exit.i.if.end_crit_edge:   ; preds = %page_needs_cow_for_dma.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

page_needs_cow_for_dma.exit.i.if.end.i_crit_edge: ; preds = %page_needs_cow_for_dma.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.end.i:                                         ; preds = %page_needs_cow_for_dma.exit.i.if.end.i_crit_edge, %compound_pincount.exit.i.i.i.if.end.i_crit_edge
  %70 = ptrtoint ptr %prealloc to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %prealloc, align 4
  %tobool3.not.i = icmp eq ptr %71, null
  br i1 %tobool3.not.i, label %if.end.i.cleanup23_crit_edge, label %if.end5.i

if.end.i.cleanup23_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup23

if.end5.i:                                        ; preds = %if.end.i
  %72 = ptrtoint ptr %prealloc to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr null, ptr %prealloc, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_user_fns, ptr @cpu_user, i32 0, i32 1) to i32))
  %73 = load ptr, ptr getelementptr inbounds (%struct.cpu_user_fns, ptr @cpu_user, i32 0, i32 1), align 4
  tail call void %73(ptr noundef nonnull %71, ptr noundef nonnull %add.ptr.i, i32 noundef %addr, ptr noundef %src_vma) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !293
  %74 = getelementptr inbounds %struct.page, ptr %71, i32 0, i32 1
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %74, align 4
  %and.i.i.i.i.i = and i32 %76, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %__SetPageUptodate.exit.i, label %if.then.i.i.i.i, !prof !218

if.then.i.i.i.i:                                  ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef nonnull %71, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

__SetPageUptodate.exit.i:                         ; preds = %if.end5.i
  %77 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %71, align 4
  %or.i.i.i.i = or i32 %78, 4
  store i32 %or.i.i.i.i, ptr %71, align 4
  tail call void @page_add_new_anon_rmap(ptr noundef nonnull %71, ptr noundef %dst_vma, i32 noundef %addr, i1 noundef zeroext false) #15
  tail call void @lru_cache_add_inactive_or_unevictable(ptr noundef nonnull %71, ptr noundef %dst_vma) #15
  %79 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %74, align 4
  %and.i2.i.i79 = and i32 %80, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i.i79)
  %tobool.not.i.i.i80 = icmp eq i32 %and.i2.i.i79, 0
  br i1 %tobool.not.i.i.i80, label %if.end.i.i.i83, label %if.then.i.i.i82, !prof !218

if.then.i.i.i82:                                  ; preds = %__SetPageUptodate.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i81 = add i32 %80, -1
  br label %PageAnon.exit.i88

if.end.i.i.i83:                                   ; preds = %__SetPageUptodate.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %81 = ptrtoint ptr %71 to i32
  br label %PageAnon.exit.i88

PageAnon.exit.i88:                                ; preds = %if.end.i.i.i83, %if.then.i.i.i82
  %retval.0.i.i.i84 = phi i32 [ %sub.i.i.i81, %if.then.i.i.i82 ], [ %81, %if.end.i.i.i83 ]
  %82 = inttoptr i32 %retval.0.i.i.i84 to ptr
  %mapping.i.i.i85 = getelementptr inbounds %struct.anon.101, ptr %82, i32 0, i32 2
  %83 = ptrtoint ptr %mapping.i.i.i85 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %mapping.i.i.i85, align 4
  %85 = ptrtoint ptr %84 to i32
  %and.i.i.i86 = and i32 %85, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i86)
  %cmp.i.i.not.i87 = icmp eq i32 %and.i.i.i86, 0
  br i1 %cmp.i.i.not.i87, label %if.end.i91, label %PageAnon.exit.i88.mm_counter.exit115_crit_edge

PageAnon.exit.i88.mm_counter.exit115_crit_edge:   ; preds = %PageAnon.exit.i88
  call void @__sanitizer_cov_trace_pc() #17
  br label %mm_counter.exit115

if.end.i91:                                       ; preds = %PageAnon.exit.i88
  %86 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %74, align 4
  %and.i.i.i.i89 = and i32 %87, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i89)
  %tobool.not.i.i.i.i90 = icmp eq i32 %and.i.i.i.i89, 0
  br i1 %tobool.not.i.i.i.i90, label %if.end.i.i.i.i94, label %if.then.i.i.i.i93, !prof !218

if.then.i.i.i.i93:                                ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i92 = add i32 %87, -1
  br label %_compound_head.exit.i.i.i99

if.end.i.i.i.i94:                                 ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #17
  %88 = ptrtoint ptr %71 to i32
  br label %_compound_head.exit.i.i.i99

_compound_head.exit.i.i.i99:                      ; preds = %if.end.i.i.i.i94, %if.then.i.i.i.i93
  %retval.0.i.i.i.i95 = phi i32 [ %sub.i.i.i.i92, %if.then.i.i.i.i93 ], [ %88, %if.end.i.i.i.i94 ]
  %89 = inttoptr i32 %retval.0.i.i.i.i95 to ptr
  %90 = ptrtoint ptr %89 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %89, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %91)
  %cmp.i.not.i.i.i96 = icmp eq i32 %91, -1
  %92 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %74, align 4
  %and.i16.i.i.i97 = and i32 %93, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i.i97)
  %tobool.not.i17.i.i.i98 = icmp eq i32 %and.i16.i.i.i97, 0
  br i1 %cmp.i.not.i.i.i96, label %if.then.i.i3.i100, label %do.end10.i.i.i106, !prof !230

if.then.i.i3.i100:                                ; preds = %_compound_head.exit.i.i.i99
  br i1 %tobool.not.i17.i.i.i98, label %if.end.i20.i.i.i103, label %if.then.i19.i.i.i102, !prof !218

if.then.i19.i.i.i102:                             ; preds = %if.then.i.i3.i100
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i.i101 = add i32 %93, -1
  br label %_compound_head.exit22.i.i.i105

if.end.i20.i.i.i103:                              ; preds = %if.then.i.i3.i100
  call void @__sanitizer_cov_trace_pc() #17
  %94 = ptrtoint ptr %71 to i32
  br label %_compound_head.exit22.i.i.i105

_compound_head.exit22.i.i.i105:                   ; preds = %if.end.i20.i.i.i103, %if.then.i19.i.i.i102
  %retval.0.i21.i.i.i104 = phi i32 [ %sub.i18.i.i.i101, %if.then.i19.i.i.i102 ], [ %94, %if.end.i20.i.i.i103 ]
  %95 = inttoptr i32 %retval.0.i21.i.i.i104 to ptr
  tail call void @dump_page(ptr noundef %95, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #15, !srcloc !248
  unreachable

do.end10.i.i.i106:                                ; preds = %_compound_head.exit.i.i.i99
  br i1 %tobool.not.i17.i.i.i98, label %if.end.i27.i.i.i109, label %if.then.i26.i.i.i108, !prof !218

if.then.i26.i.i.i108:                             ; preds = %do.end10.i.i.i106
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i.i107 = add i32 %93, -1
  br label %mm_counter_file.exit.i113

if.end.i27.i.i.i109:                              ; preds = %do.end10.i.i.i106
  call void @__sanitizer_cov_trace_pc() #17
  %96 = ptrtoint ptr %71 to i32
  br label %mm_counter_file.exit.i113

mm_counter_file.exit.i113:                        ; preds = %if.end.i27.i.i.i109, %if.then.i26.i.i.i108
  %retval.0.i28.i.i.i110 = phi i32 [ %sub.i25.i.i.i107, %if.then.i26.i.i.i108 ], [ %96, %if.end.i27.i.i.i109 ]
  %97 = inttoptr i32 %retval.0.i28.i.i.i110 to ptr
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load volatile i32, ptr %97, align 4
  %100 = and i32 %99, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %100)
  %tobool.not.i.i111 = icmp eq i32 %100, 0
  %..i.i112 = select i1 %tobool.not.i.i111, i32 0, i32 3
  br label %mm_counter.exit115

mm_counter.exit115:                               ; preds = %mm_counter_file.exit.i113, %PageAnon.exit.i88.mm_counter.exit115_crit_edge
  %retval.0.i114 = phi i32 [ %..i.i112, %mm_counter_file.exit.i113 ], [ 1, %PageAnon.exit.i88.mm_counter.exit115_crit_edge ]
  %arrayidx.i = getelementptr i32, ptr %rss, i32 %retval.0.i114
  %101 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %arrayidx.i, align 4
  %inc.i = add i32 %102, 1
  store i32 %inc.i, ptr %arrayidx.i, align 4
  %103 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %71 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %103 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %104 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i52 = add i32 %sub.ptr.div.i, %104
  %shl.i = shl i32 %add.i52, 12
  %vm_page_prot.i = getelementptr inbounds %struct.vm_area_struct, ptr %dst_vma, i32 0, i32 7
  %105 = ptrtoint ptr %vm_page_prot.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %vm_page_prot.i, align 4
  %or.i = or i32 %106, %shl.i
  %or.i.i.i = or i32 %or.i, 64
  %vm_flags.i4.i = getelementptr inbounds %struct.vm_area_struct, ptr %dst_vma, i32 0, i32 8
  %107 = ptrtoint ptr %vm_flags.i4.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %vm_flags.i4.i, align 4
  %and.i.i53 = and i32 %108, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i53)
  %tobool.not.i5.i = icmp eq i32 %and.i.i53, 0
  %and.i.i.i6.i = and i32 %or.i.i.i, -129
  %spec.select.i.i = select i1 %tobool.not.i5.i, i32 %or.i.i.i, i32 %and.i.i.i6.i, !prof !230
  br label %cleanup23.sink.split

if.end:                                           ; preds = %page_needs_cow_for_dma.exit.i.if.end_crit_edge, %compound_pincount.exit.i.i.i.if.end_crit_edge, %if.end.i.i.if.end_crit_edge, %if.then.if.end_crit_edge
  %109 = getelementptr %struct.page, ptr %12, i32 %sub32.i, i32 1
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %109, align 4
  %and.i.i54 = and i32 %111, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i54)
  %tobool.not.i.i55 = icmp eq i32 %and.i.i54, 0
  br i1 %tobool.not.i.i55, label %if.end.i.i56, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %111, -1
  br label %_compound_head.exit.i

if.end.i.i56:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %112 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i56, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %112, %if.end.i.i56 ]
  %113 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i57 = getelementptr inbounds %struct.page, ptr %113, i32 0, i32 3
  %call.i.i.i.i.i.i58 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i57, i32 noundef 4) #15
  %114 = ptrtoint ptr %_refcount.i.i.i.i57 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %_refcount.i.i.i.i57, align 4
  %add.i.i = add i32 %115, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i59 = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i59, label %if.then.i1.i, label %do.end5.i.i, !prof !230

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %113, ptr noundef nonnull @.str.50) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #15, !srcloc !287
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i57, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i57, i32 1, i32 3, i32 1) #15
  %116 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i57, ptr %_refcount.i.i.i.i57, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i57) #15, !srcloc !233
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@copy_present_pte, %if.then.i.i.i.i60)) #15
          to label %get_page.exit [label %if.then.i.i.i.i60], !srcloc !217

if.then.i.i.i.i60:                                ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__page_ref_mod(ptr noundef %113, i32 noundef 1) #15
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i60, %do.end5.i.i
  %117 = getelementptr %struct.page, ptr %12, i32 %sub32.i, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %117, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %117, i32 1, i32 3, i32 1) #15
  %118 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %117, ptr %117, i32 1, ptr elementtype(i32) %117) #15, !srcloc !233
  %119 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile i32, ptr %109, align 4
  %and.i2.i.i = and i32 %120, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i2.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i62, label %if.then.i.i.i61, !prof !218

if.then.i.i.i61:                                  ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i = add i32 %120, -1
  br label %PageAnon.exit.i

if.end.i.i.i62:                                   ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  %121 = ptrtoint ptr %add.ptr.i to i32
  br label %PageAnon.exit.i

PageAnon.exit.i:                                  ; preds = %if.end.i.i.i62, %if.then.i.i.i61
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i61 ], [ %121, %if.end.i.i.i62 ]
  %122 = inttoptr i32 %retval.0.i.i.i to ptr
  %mapping.i.i.i = getelementptr inbounds %struct.anon.101, ptr %122, i32 0, i32 2
  %123 = ptrtoint ptr %mapping.i.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %mapping.i.i.i, align 4
  %125 = ptrtoint ptr %124 to i32
  %and.i.i.i63 = and i32 %125, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i63)
  %cmp.i.i.not.i = icmp eq i32 %and.i.i.i63, 0
  br i1 %cmp.i.i.not.i, label %if.end.i66, label %PageAnon.exit.i.mm_counter.exit_crit_edge

PageAnon.exit.i.mm_counter.exit_crit_edge:        ; preds = %PageAnon.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %mm_counter.exit

if.end.i66:                                       ; preds = %PageAnon.exit.i
  %126 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load volatile i32, ptr %109, align 4
  %and.i.i.i.i64 = and i32 %127, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i64)
  %tobool.not.i.i.i.i65 = icmp eq i32 %and.i.i.i.i64, 0
  br i1 %tobool.not.i.i.i.i65, label %if.end.i.i.i.i69, label %if.then.i.i.i.i68, !prof !218

if.then.i.i.i.i68:                                ; preds = %if.end.i66
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i.i67 = add i32 %127, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i.i69:                                 ; preds = %if.end.i66
  call void @__sanitizer_cov_trace_pc() #17
  %128 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i.i69, %if.then.i.i.i.i68
  %retval.0.i.i.i.i70 = phi i32 [ %sub.i.i.i.i67, %if.then.i.i.i.i68 ], [ %128, %if.end.i.i.i.i69 ]
  %129 = inttoptr i32 %retval.0.i.i.i.i70 to ptr
  %130 = ptrtoint ptr %129 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %129, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %131)
  %cmp.i.not.i.i.i = icmp eq i32 %131, -1
  %132 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load volatile i32, ptr %109, align 4
  %and.i16.i.i.i = and i32 %133, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i.i)
  %tobool.not.i17.i.i.i = icmp eq i32 %and.i16.i.i.i, 0
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i3.i, label %do.end10.i.i.i, !prof !230

if.then.i.i3.i:                                   ; preds = %_compound_head.exit.i.i.i
  br i1 %tobool.not.i17.i.i.i, label %if.end.i20.i.i.i, label %if.then.i19.i.i.i, !prof !218

if.then.i19.i.i.i:                                ; preds = %if.then.i.i3.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i.i = add i32 %133, -1
  br label %_compound_head.exit22.i.i.i

if.end.i20.i.i.i:                                 ; preds = %if.then.i.i3.i
  call void @__sanitizer_cov_trace_pc() #17
  %134 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit22.i.i.i

_compound_head.exit22.i.i.i:                      ; preds = %if.end.i20.i.i.i, %if.then.i19.i.i.i
  %retval.0.i21.i.i.i = phi i32 [ %sub.i18.i.i.i, %if.then.i19.i.i.i ], [ %134, %if.end.i20.i.i.i ]
  %135 = inttoptr i32 %retval.0.i21.i.i.i to ptr
  tail call void @dump_page(ptr noundef %135, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #15, !srcloc !248
  unreachable

do.end10.i.i.i:                                   ; preds = %_compound_head.exit.i.i.i
  br i1 %tobool.not.i17.i.i.i, label %if.end.i27.i.i.i, label %if.then.i26.i.i.i, !prof !218

if.then.i26.i.i.i:                                ; preds = %do.end10.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i.i = add i32 %133, -1
  br label %mm_counter_file.exit.i

if.end.i27.i.i.i:                                 ; preds = %do.end10.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %136 = ptrtoint ptr %add.ptr.i to i32
  br label %mm_counter_file.exit.i

mm_counter_file.exit.i:                           ; preds = %if.end.i27.i.i.i, %if.then.i26.i.i.i
  %retval.0.i28.i.i.i = phi i32 [ %sub.i25.i.i.i, %if.then.i26.i.i.i ], [ %136, %if.end.i27.i.i.i ]
  %137 = inttoptr i32 %retval.0.i28.i.i.i to ptr
  %138 = ptrtoint ptr %137 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile i32, ptr %137, align 4
  %140 = and i32 %139, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %140)
  %tobool.not.i.i71 = icmp eq i32 %140, 0
  %..i.i = select i1 %tobool.not.i.i71, i32 0, i32 3
  br label %mm_counter.exit

mm_counter.exit:                                  ; preds = %mm_counter_file.exit.i, %PageAnon.exit.i.mm_counter.exit_crit_edge
  %retval.0.i72 = phi i32 [ %..i.i, %mm_counter_file.exit.i ], [ 1, %PageAnon.exit.i.mm_counter.exit_crit_edge ]
  %arrayidx = getelementptr i32, ptr %rss, i32 %retval.0.i72
  %141 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %arrayidx, align 4
  %inc = add i32 %142, 1
  store i32 %inc, ptr %arrayidx, align 4
  br label %if.end6

if.end6:                                          ; preds = %mm_counter.exit, %vm_normal_page.exit.if.end6_crit_edge, %if.then30.i, %if.end18.i.if.end6_crit_edge, %if.else.i.if.end6_crit_edge, %if.then7.i.if.end6_crit_edge
  %and.i = and i32 %3, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and.i)
  %cmp.i73 = icmp eq i32 %and.i, 32
  %and = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  %or.cond = and i1 %cmp.i73, %tobool8.not
  br i1 %or.cond, label %if.then9, label %if.end6.if.end11_crit_edge

if.end6.if.end11_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end11

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #17
  %143 = ptrtoint ptr %src_pte to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %src_pte, align 4
  %or.i.i.i74 = or i32 %144, 128
  tail call void @set_pte_at(ptr noundef %1, i32 noundef %addr, ptr noundef %src_pte, i32 noundef %or.i.i.i74) #15
  %or.i.i = or i32 %5, 128
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end6.if.end11_crit_edge
  %pte.0 = phi i32 [ %or.i.i, %if.then9 ], [ %5, %if.end6.if.end11_crit_edge ]
  %and12 = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  %and.i.i75 = and i32 %pte.0, -67
  %spec.select = select i1 %tobool13.not, i32 %pte.0, i32 %and.i.i75
  %and.i.i76 = and i32 %spec.select, -3
  br label %cleanup23.sink.split

cleanup23.sink.split:                             ; preds = %if.end11, %mm_counter.exit115
  %spec.select.i.i.sink = phi i32 [ %spec.select.i.i, %mm_counter.exit115 ], [ %and.i.i76, %if.end11 ]
  %vm_mm.i = getelementptr inbounds %struct.vm_area_struct, ptr %dst_vma, i32 0, i32 6
  %145 = ptrtoint ptr %vm_mm.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %vm_mm.i, align 4
  tail call void @set_pte_at(ptr noundef %146, i32 noundef %addr, ptr noundef %dst_pte, i32 noundef %spec.select.i.i.sink) #15
  br label %cleanup23

cleanup23:                                        ; preds = %cleanup23.sink.split, %if.end.i.cleanup23_crit_edge
  %retval.1 = phi i32 [ -11, %if.end.i.cleanup23_crit_edge ], [ 0, %cleanup23.sink.split ]
  ret i32 %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @add_mm_rss_vec(ptr noundef %mm, ptr nocapture noundef readonly %rss) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %mm1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 53
  %4 = ptrtoint ptr %mm1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mm1, align 8
  %cmp = icmp eq ptr %5, %mm
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @sync_mm_rss(ptr noundef %mm)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %6 = ptrtoint ptr %rss to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rss, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %if.end.for.inc_crit_edge, label %if.then3

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %rss_stat.i = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 40
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %rss_stat.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %rss_stat.i, i32 1, i32 3, i32 1) #15
  %8 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %rss_stat.i, ptr %rss_stat.i, i32 %7, ptr elementtype(i32) %rss_stat.i) #15, !srcloc !224
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %8, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef 0, i32 noundef %asmresult.i.i.i.i.i) #15
  br label %for.inc

for.inc:                                          ; preds = %if.then3, %if.end.for.inc_crit_edge
  %arrayidx.1 = getelementptr i32, ptr %rss, i32 1
  %9 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.1 = icmp eq i32 %10, 0
  br i1 %tobool.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then3.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.1

if.then3.1:                                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i.1 = getelementptr %struct.anon.9, ptr %mm, i32 0, i32 40, i32 0, i32 1
  %call.i.i.i.1 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.1, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.1, i32 1, i32 3, i32 1) #15
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.1, ptr %arrayidx.i.1, i32 %10, ptr elementtype(i32) %arrayidx.i.1) #15, !srcloc !224
  %asmresult.i.i.i.i.i.1 = extractvalue { i32, i32 } %11, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef 1, i32 noundef %asmresult.i.i.i.i.i.1) #15
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then3.1, %for.inc.for.inc.1_crit_edge
  %arrayidx.2 = getelementptr i32, ptr %rss, i32 2
  %12 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.2 = icmp eq i32 %13, 0
  br i1 %tobool.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then3.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.2

if.then3.2:                                       ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i.2 = getelementptr %struct.anon.9, ptr %mm, i32 0, i32 40, i32 0, i32 2
  %call.i.i.i.2 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.2, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.2, i32 1, i32 3, i32 1) #15
  %14 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.2, ptr %arrayidx.i.2, i32 %13, ptr elementtype(i32) %arrayidx.i.2) #15, !srcloc !224
  %asmresult.i.i.i.i.i.2 = extractvalue { i32, i32 } %14, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef 2, i32 noundef %asmresult.i.i.i.i.i.2) #15
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then3.2, %for.inc.1.for.inc.2_crit_edge
  %arrayidx.3 = getelementptr i32, ptr %rss, i32 3
  %15 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.3 = icmp eq i32 %16, 0
  br i1 %tobool.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then3.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.3

if.then3.3:                                       ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i.3 = getelementptr %struct.anon.9, ptr %mm, i32 0, i32 40, i32 0, i32 3
  %call.i.i.i.3 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.3, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.3, i32 1, i32 3, i32 1) #15
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.3, ptr %arrayidx.i.3, i32 %16, ptr elementtype(i32) %arrayidx.i.3) #15, !srcloc !224
  %asmresult.i.i.i.i.i.3 = extractvalue { i32, i32 } %17, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef 3, i32 noundef %asmresult.i.i.i.i.i.3) #15
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then3.3, %for.inc.2.for.inc.3_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @add_swap_count_continuation([1 x i32], i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @page_copy_prealloc(ptr noundef %src_mm) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 17829066, i32 noundef 0, i32 noundef 0, ptr noundef null) #15
  %tobool.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.page, ptr %call38.i.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !218

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %3 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %3, %if.end.i ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@page_copy_prealloc, %if.end5)) #15
          to label %mem_cgroup_charge.exit [label %if.end5], !srcloc !217

mem_cgroup_charge.exit:                           ; preds = %_compound_head.exit
  %4 = inttoptr i32 %retval.0.i to ptr
  %call1.i = tail call i32 @__mem_cgroup_charge(ptr noundef %4, ptr noundef %src_mm, i32 noundef 3264) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %phi.cmp = icmp eq i32 %call1.i, 0
  br i1 %phi.cmp, label %mem_cgroup_charge.exit.if.end5_crit_edge, label %if.then4

mem_cgroup_charge.exit.if.end5_crit_edge:         ; preds = %mem_cgroup_charge.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5

if.then4:                                         ; preds = %mem_cgroup_charge.exit
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %6, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #17
  %7 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %7, %if.end.i.i ]
  %8 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %8, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %9 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i.i.i.i = icmp eq i32 %10, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !230

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %8, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %11, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@page_copy_prealloc, %if.then.i.i.i.i.i)) #15
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !217

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %8, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #15
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.cleanup_crit_edge

folio_put_testzero.exit.i.i.cleanup_crit_edge:    ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %8) #15
  br label %cleanup

if.end5:                                          ; preds = %mem_cgroup_charge.exit.if.end5_crit_edge, %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@page_copy_prealloc, %cleanup)) #15
          to label %if.end.i3 [label %cleanup], !srcloc !217

if.end.i3:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__cgroup_throttle_swaprate(ptr noundef nonnull %call38.i.i.i, i32 noundef 3264) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end.i3, %if.end5, %if.then.i4.i, %folio_put_testzero.exit.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ null, %folio_put_testzero.exit.i.i.cleanup_crit_edge ], [ null, %if.then.i4.i ], [ %call38.i.i.i, %if.end5 ], [ %call38.i.i.i, %if.end.i3 ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @swap_duplicate([1 x i32]) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mm_counter(ptr noundef %page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i2.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i)
  %tobool.not.i.i = icmp eq i32 %and.i2.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %2, -1
  br label %PageAnon.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %3 = ptrtoint ptr %page to i32
  br label %PageAnon.exit

PageAnon.exit:                                    ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i to ptr
  %mapping.i.i = getelementptr inbounds %struct.anon.101, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mapping.i.i, align 4
  %7 = ptrtoint ptr %6 to i32
  %and.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %cmp.i.i.not, label %if.end, label %PageAnon.exit.return_crit_edge

PageAnon.exit.return_crit_edge:                   ; preds = %PageAnon.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %PageAnon.exit
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !218

if.then.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i = add i32 %9, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %10 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %10, %if.end.i.i.i ]
  %11 = inttoptr i32 %retval.0.i.i.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %cmp.i.not.i.i = icmp eq i32 %13, -1
  %14 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %0, align 4
  %and.i16.i.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i.i3, label %do.end10.i.i, !prof !230

if.then.i.i3:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i20.i.i, label %if.then.i19.i.i, !prof !218

if.then.i19.i.i:                                  ; preds = %if.then.i.i3
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i = add i32 %15, -1
  br label %_compound_head.exit22.i.i

if.end.i20.i.i:                                   ; preds = %if.then.i.i3
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.end.i20.i.i, %if.then.i19.i.i
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %16, %if.end.i20.i.i ]
  %17 = inttoptr i32 %retval.0.i21.i.i to ptr
  tail call void @dump_page(ptr noundef %17, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #15, !srcloc !248
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i27.i.i, label %if.then.i26.i.i, !prof !218

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i = add i32 %15, -1
  br label %mm_counter_file.exit

if.end.i27.i.i:                                   ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %18 = ptrtoint ptr %page to i32
  br label %mm_counter_file.exit

mm_counter_file.exit:                             ; preds = %if.end.i27.i.i, %if.then.i26.i.i
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %18, %if.end.i27.i.i ]
  %19 = inttoptr i32 %retval.0.i28.i.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  %22 = and i32 %21, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i = icmp eq i32 %22, 0
  %..i = select i1 %tobool.not.i, i32 0, i32 3
  br label %return

return:                                           ; preds = %mm_counter_file.exit, %PageAnon.exit.return_crit_edge
  %retval.0 = phi i32 [ %..i, %mm_counter_file.exit ], [ 1, %PageAnon.exit.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__mem_cgroup_charge(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmu_notifier_invalidate_range_end(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @set_page_dirty(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mark_page_accessed(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_remove_rmap(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @free_swap_and_cache([1 x i32]) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_rmapping(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__page_mapcount(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_tlb_mm(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_tlb_range(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmu_notifier_invalidate_range(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @uprobe_munmap(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmap_local_page_prot(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @down_read_trylock(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_start_locking(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_acquire_returned(ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @insert_page_into_pte_locked(ptr noundef %mm, ptr noundef %pte, i32 noundef %addr, ptr noundef %page, i32 noundef %prot) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pte, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %4, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %5 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %5, %if.end.i.i ]
  %6 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %6, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  %7 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %8, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !230

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %6, ptr noundef nonnull @.str.50) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #15, !srcloc !287
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #15
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #15, !srcloc !233
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@insert_page_into_pte_locked, %if.then.i.i.i.i)) #15
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !217

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__page_ref_mod(ptr noundef %6, i32 noundef 1) #15
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %2, align 4
  %and.i.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !218

if.then.i.i.i:                                    ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i = add i32 %11, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  %12 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %12, %if.end.i.i.i ]
  %13 = inttoptr i32 %retval.0.i.i.i to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %13, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %cmp.i.not.i.i = icmp eq i32 %15, -1
  %16 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %2, align 4
  %and.i16.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i.i6, label %do.end10.i.i, !prof !230

if.then.i.i6:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i20.i.i, label %if.then.i19.i.i, !prof !218

if.then.i19.i.i:                                  ; preds = %if.then.i.i6
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i = add i32 %17, -1
  br label %_compound_head.exit22.i.i

if.end.i20.i.i:                                   ; preds = %if.then.i.i6
  call void @__sanitizer_cov_trace_pc() #17
  %18 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.end.i20.i.i, %if.then.i19.i.i
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %18, %if.end.i20.i.i ]
  %19 = inttoptr i32 %retval.0.i21.i.i to ptr
  tail call void @dump_page(ptr noundef %19, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #15, !srcloc !248
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i27.i.i, label %if.then.i26.i.i, !prof !218

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i = add i32 %17, -1
  br label %mm_counter_file.exit

if.end.i27.i.i:                                   ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %page to i32
  br label %mm_counter_file.exit

mm_counter_file.exit:                             ; preds = %if.end.i27.i.i, %if.then.i26.i.i
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %20, %if.end.i27.i.i ]
  %21 = inttoptr i32 %retval.0.i28.i.i to ptr
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %21, align 4
  %24 = and i32 %23, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i = icmp eq i32 %24, 0
  %..i = select i1 %tobool.not.i, i32 0, i32 3
  %25 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i7 = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i7 to ptr
  %task1.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %task1.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task1.i, align 8
  %mm2.i = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 53
  %29 = ptrtoint ptr %mm2.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mm2.i, align 8
  %cmp.i = icmp eq ptr %30, %mm
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !prof !218

if.then.i:                                        ; preds = %mm_counter_file.exit
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i = getelementptr %struct.task_struct, ptr %28, i32 0, i32 56, i32 1, i32 %..i
  %31 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %32, 1
  store i32 %add.i, ptr %arrayidx.i, align 4
  br label %add_mm_counter_fast.exit

if.else.i:                                        ; preds = %mm_counter_file.exit
  call void @__sanitizer_cov_trace_pc() #17
  %rss_stat.i = getelementptr inbounds %struct.anon.9, ptr %mm, i32 0, i32 40
  %arrayidx.i8 = getelementptr [4 x %struct.atomic_t], ptr %rss_stat.i, i32 0, i32 %..i
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i8, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !223
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i8, i32 1, i32 3, i32 1) #15
  %33 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i8, ptr %arrayidx.i8, i32 1, ptr elementtype(i32) %arrayidx.i8) #15, !srcloc !224
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %33, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !225
  tail call fastcc void @trace_rss_stat(ptr noundef %mm, i32 noundef %..i, i32 noundef %asmresult.i.i.i.i.i) #15
  br label %add_mm_counter_fast.exit

add_mm_counter_fast.exit:                         ; preds = %if.else.i, %if.then.i
  tail call void @page_add_file_rmap(ptr noundef %page, i1 noundef zeroext false) #15
  %34 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %34 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %35 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %35
  %shl = shl i32 %add, 12
  %or = or i32 %shl, %prot
  tail call void @set_pte_at(ptr noundef %mm, i32 noundef %addr, ptr noundef %pte, i32 noundef %or) #15
  br label %return

return:                                           ; preds = %add_mm_counter_fast.exit, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %add_mm_counter_fast.exit ], [ -16, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_dcache_page(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ptep_set_access_flags(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_local_indexed(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_cache_page(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @vma_interval_tree_iter_first(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @vma_interval_tree_iter_next(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mem_cgroup_from_task(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__count_memcg_events(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__folio_lock_or_retry(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__cgroup_throttle_swaprate(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @handle_userfault(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_tlb_page(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wp_page_copy(ptr nocapture noundef %vmf) unnamed_addr #2 align 64 {
entry:
  %range = alloca %struct.mmu_notifier_range, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_mm, align 4
  %page = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %page, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %range) #15
  %6 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 1
  %7 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 2
  %8 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 3
  %9 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 4
  %10 = getelementptr inbounds %struct.mmu_notifier_range, ptr %range, i32 0, i32 5
  %anon_vma.i = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 11
  %11 = call ptr @memset(ptr %range, i32 255, i32 28)
  %12 = ptrtoint ptr %anon_vma.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %anon_vma.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %anon_vma_prepare.exit, label %entry.if.end_crit_edge, !prof !230

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

anon_vma_prepare.exit:                            ; preds = %entry
  %call.i = tail call i32 @__anon_vma_prepare(ptr noundef %1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %anon_vma_prepare.exit.if.end_crit_edge, label %anon_vma_prepare.exit.oom_crit_edge, !prof !218

anon_vma_prepare.exit.oom_crit_edge:              ; preds = %anon_vma_prepare.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %oom

anon_vma_prepare.exit.if.end_crit_edge:           ; preds = %anon_vma_prepare.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %anon_vma_prepare.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %14 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %shr = lshr i32 %16, 12
  %17 = load i32, ptr @zero_pfn, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %shr)
  %cmp.i.not = icmp eq i32 %17, %shr
  br i1 %cmp.i.not, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  %address = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %18 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %address, align 4
  %call38.i.i.i.i = tail call ptr @__alloc_pages(i32 noundef 17829066, i32 noundef 0, i32 noundef 0, ptr noundef null) #15
  %tobool.not.i215 = icmp eq ptr %call38.i.i.i.i, null
  br i1 %tobool.not.i215, label %if.then7.oom_crit_edge, label %alloc_zeroed_user_highpage_movable.exit

if.then7.oom_crit_edge:                           ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  br label %oom

alloc_zeroed_user_highpage_movable.exit:          ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cpu_user to i32))
  %20 = load ptr, ptr @cpu_user, align 4
  tail call void %20(ptr noundef nonnull %call38.i.i.i.i, i32 noundef %19) #15
  br label %if.end22

if.else:                                          ; preds = %if.end
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 17829066, i32 noundef 0, i32 noundef 0, ptr noundef null) #15
  %tobool13.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool13.not, label %if.else.oom_crit_edge, label %if.end15

if.else.oom_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %oom

if.end15:                                         ; preds = %if.else
  %21 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vmf, align 4
  %address.i = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %23 = ptrtoint ptr %address.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %address.i, align 4
  %tobool.not.i218 = icmp eq ptr %5, null
  br i1 %tobool.not.i218, label %if.end.i221, label %cow_user_page.exit.thread, !prof !230

cow_user_page.exit.thread:                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_user_fns, ptr @cpu_user, i32 0, i32 1) to i32))
  %25 = load ptr, ptr getelementptr inbounds (%struct.cpu_user_fns, ptr @cpu_user, i32 0, i32 1), align 4
  tail call void %25(ptr noundef nonnull %call38.i.i.i, ptr noundef nonnull %5, i32 noundef %24, ptr noundef %22) #15
  br label %if.end22

if.end.i221:                                      ; preds = %if.end15
  %call.i220 = tail call fastcc ptr @kmap_atomic(ptr noundef nonnull %call38.i.i.i) #15
  %and.i = and i32 %24, -4096
  %26 = inttoptr i32 %and.i to ptr
  %27 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %14, align 4
  %and5.i = and i32 %28, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.then13.i, label %if.end.i221.if.end40.i_crit_edge

if.end.i221.if.end40.i_crit_edge:                 ; preds = %if.end.i221
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end40.i

if.then13.i:                                      ; preds = %if.end.i221
  %pmd.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %29 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pmd.i, align 4
  %31 = load ptr, ptr @mem_map, align 4
  %32 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %30, align 4
  %shr.i.i222 = lshr i32 %33, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %34 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i.i223 = sub i32 %shr.i.i222, %34
  %ptl.i.i.i = getelementptr %struct.page, ptr %31, i32 %sub.i.i223, i32 1, i32 0, i32 3
  %35 = ptrtoint ptr %ptl.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ptl.i.i.i, align 4
  %add.ptr.i = getelementptr %struct.page, ptr %31, i32 %sub.i.i223
  %call18.i = tail call fastcc ptr @kmap_atomic(ptr noundef %add.ptr.i) #15
  %shr.i202.i = lshr i32 %24, 12
  %and.i.i224 = and i32 %shr.i202.i, 511
  %add.ptr20.i = getelementptr i32, ptr %call18.i, i32 %and.i.i224
  %ptl.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %37 = ptrtoint ptr %ptl.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %36, ptr %ptl.i, align 4
  tail call void @_raw_spin_lock(ptr noundef %36) #15
  %pte.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %38 = ptrtoint ptr %pte.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %add.ptr20.i, ptr %pte.i, align 4
  %39 = ptrtoint ptr %add.ptr20.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %add.ptr20.i, align 4
  %41 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %14, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %42)
  %cmp.i.not.i225 = icmp eq i32 %40, %42
  br i1 %cmp.i.not.i225, label %if.end32.i, label %if.then13.i.do.body122.i_crit_edge, !prof !218

if.then13.i.do.body122.i_crit_edge:               ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body122.i

if.end32.i:                                       ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #17
  %or.i.i.i226 = or i32 %40, 2
  %call35.i = tail call i32 @ptep_set_access_flags(ptr noundef %22, i32 noundef %24, ptr noundef %add.ptr20.i, i32 noundef %or.i.i.i226, i32 noundef 0) #15
  br label %if.end40.i

if.end40.i:                                       ; preds = %if.end32.i, %if.end.i221.if.end40.i_crit_edge
  %locked.0.i = phi i8 [ 0, %if.end.i221.if.end40.i_crit_edge ], [ 1, %if.end32.i ]
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %call.i220, i32 noundef 4096) #15
  %43 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i.i = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 4
  %45 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #9, !srcloc !294
  %and.i.i.i.i227 = and i32 %45, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i227, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #15, !srcloc !295
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !296
  %call1.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef %call.i220, ptr noundef %26, i32 noundef 4096) #15
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %45) #15, !srcloc !295
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !296
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool42.not.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool42.not.i, label %if.end40.i.pte_unlock.i_crit_edge, label %if.then43.i

if.end40.i.pte_unlock.i_crit_edge:                ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %pte_unlock.i

if.then43.i:                                      ; preds = %if.end40.i
  br i1 %tobool6.not.i, label %if.then43.i.land.end.i_crit_edge, label %if.end46.i

if.then43.i.land.end.i_crit_edge:                 ; preds = %if.then43.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i

if.end46.i:                                       ; preds = %if.then43.i
  %pmd48.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %46 = ptrtoint ptr %pmd48.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %pmd48.i, align 4
  %48 = load ptr, ptr @mem_map, align 4
  %49 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %47, align 4
  %shr.i203.i = lshr i32 %50, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %51 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i204.i = sub i32 %shr.i203.i, %51
  %ptl.i.i205.i = getelementptr %struct.page, ptr %48, i32 %sub.i204.i, i32 1, i32 0, i32 3
  %52 = ptrtoint ptr %ptl.i.i205.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %ptl.i.i205.i, align 4
  %add.ptr55.i = getelementptr %struct.page, ptr %48, i32 %sub.i204.i
  %call56.i = tail call fastcc ptr @kmap_atomic(ptr noundef %add.ptr55.i) #15
  %shr.i206.i = lshr i32 %24, 12
  %and.i207.i = and i32 %shr.i206.i, 511
  %add.ptr58.i = getelementptr i32, ptr %call56.i, i32 %and.i207.i
  %ptl59.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %54 = ptrtoint ptr %ptl59.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %53, ptr %ptl59.i, align 4
  tail call void @_raw_spin_lock(ptr noundef %53) #15
  %pte61.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %55 = ptrtoint ptr %pte61.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %add.ptr58.i, ptr %pte61.i, align 4
  %56 = ptrtoint ptr %add.ptr58.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %add.ptr58.i, align 4
  %58 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %14, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %57, i32 %59)
  %cmp.i208.not.i = icmp eq i32 %57, %59
  br i1 %cmp.i208.not.i, label %if.end73.i, label %if.end46.i.do.body122.i_crit_edge, !prof !218

if.end46.i.do.body122.i_crit_edge:                ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body122.i

if.end73.i:                                       ; preds = %if.end46.i
  %call.i.i196.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %call.i220, i32 noundef 4096) #15
  %60 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i197.i = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i.i.i197.i to ptr
  %cpu_domain.i.i.i.i198.i = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 4
  %62 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i198.i) #9, !srcloc !294
  %and.i.i.i199.i = and i32 %62, -13
  %or.i.i.i200.i = or i32 %and.i.i.i199.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i200.i) #15, !srcloc !295
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !296
  %call1.i.i201.i = tail call i32 @arm_copy_from_user(ptr noundef %call.i220, ptr noundef %26, i32 noundef 4096) #15
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %62) #15, !srcloc !295
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !296
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i201.i)
  %tobool75.not.i = icmp eq i32 %call1.i.i201.i, 0
  br i1 %tobool75.not.i, label %if.end22.critedge411, label %if.end73.i.land.end.i_crit_edge

if.end73.i.land.end.i_crit_edge:                  ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i

land.end.i:                                       ; preds = %if.end73.i.land.end.i_crit_edge, %if.then43.i.land.end.i_crit_edge
  %locked.1.i = phi i8 [ %locked.0.i, %if.then43.i.land.end.i_crit_edge ], [ 1, %if.end73.i.land.end.i_crit_edge ]
  %.b194.i = load i1, ptr @cow_user_page.__already_done, align 1
  br i1 %.b194.i, label %land.end.i.if.end110.i_crit_edge, label %if.then87.i, !prof !218

land.end.i.if.end110.i_crit_edge:                 ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end110.i

if.then87.i:                                      ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cow_user_page.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2831, i32 noundef 9, ptr noundef null) #15
  br label %if.end110.i

if.end110.i:                                      ; preds = %if.then87.i, %land.end.i.if.end110.i_crit_edge
  %63 = call ptr @memset(ptr %call.i220, i32 0, i32 4096)
  br label %pte_unlock.i

pte_unlock.i:                                     ; preds = %if.end110.i, %if.end40.i.pte_unlock.i_crit_edge
  %locked.2.i = phi i8 [ %locked.1.i, %if.end110.i ], [ %locked.0.i, %if.end40.i.pte_unlock.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %locked.2.i)
  %extract.t.not.i = icmp eq i8 %locked.2.i, 0
  br i1 %extract.t.not.i, label %if.end22.critedge, label %if.end22.critedge410

do.body122.i:                                     ; preds = %if.end46.i.do.body122.i_crit_edge, %if.then13.i.do.body122.i_crit_edge
  %ptl123.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %64 = ptrtoint ptr %ptl123.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %ptl123.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %65) #15
  %pte128.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %66 = ptrtoint ptr %pte128.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %pte128.i, align 4
  tail call fastcc void @__kunmap_atomic(ptr noundef %67) #15
  tail call fastcc void @__kunmap_atomic(ptr noundef %call.i220) #15
  tail call void @flush_dcache_page(ptr noundef nonnull %call38.i.i.i) #15
  %68 = getelementptr inbounds %struct.page, ptr %call38.i.i.i, i32 0, i32 1
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %68, align 4
  %and.i.i229 = and i32 %70, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i229)
  %tobool.not.i.i230 = icmp eq i32 %and.i.i229, 0
  br i1 %tobool.not.i.i230, label %if.end.i.i233, label %if.then.i.i232, !prof !218

if.then.i.i232:                                   ; preds = %do.body122.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i231 = add i32 %70, -1
  br label %_compound_head.exit.i235

if.end.i.i233:                                    ; preds = %do.body122.i
  call void @__sanitizer_cov_trace_pc() #17
  %71 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit.i235

_compound_head.exit.i235:                         ; preds = %if.end.i.i233, %if.then.i.i232
  %retval.0.i.i234 = phi i32 [ %sub.i.i231, %if.then.i.i232 ], [ %71, %if.end.i.i233 ]
  %72 = inttoptr i32 %retval.0.i.i234 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %72, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %73 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %cmp.i.i.i.i = icmp eq i32 %74, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !230

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i235
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %72, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i235
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %75 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %75, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@wp_page_copy, %if.then.i.i.i.i.i)) #15
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !217

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %72, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #15
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.cleanup_crit_edge

folio_put_testzero.exit.i.i.cleanup_crit_edge:    ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %72) #15
  br label %cleanup

if.end22.critedge:                                ; preds = %pte_unlock.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @__kunmap_atomic(ptr noundef %call.i220) #15
  tail call void @flush_dcache_page(ptr noundef nonnull %call38.i.i.i) #15
  br label %if.end22

if.end22.critedge410:                             ; preds = %pte_unlock.i
  call void @__sanitizer_cov_trace_pc() #17
  %ptl123.i.c = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %76 = ptrtoint ptr %ptl123.i.c to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %ptl123.i.c, align 4
  tail call void @_raw_spin_unlock(ptr noundef %77) #15
  %pte128.i.c = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %78 = ptrtoint ptr %pte128.i.c to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %pte128.i.c, align 4
  tail call fastcc void @__kunmap_atomic(ptr noundef %79) #15
  tail call fastcc void @__kunmap_atomic(ptr noundef %call.i220) #15
  tail call void @flush_dcache_page(ptr noundef nonnull %call38.i.i.i) #15
  br label %if.end22

if.end22.critedge411:                             ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #17
  %80 = ptrtoint ptr %ptl59.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ptl59.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %81) #15
  %82 = ptrtoint ptr %pte61.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %pte61.i, align 4
  tail call fastcc void @__kunmap_atomic(ptr noundef %83) #15
  tail call fastcc void @__kunmap_atomic(ptr noundef %call.i220) #15
  tail call void @flush_dcache_page(ptr noundef nonnull %call38.i.i.i) #15
  br label %if.end22

if.end22:                                         ; preds = %if.end22.critedge411, %if.end22.critedge410, %if.end22.critedge, %cow_user_page.exit.thread, %alloc_zeroed_user_highpage_movable.exit
  %new_page.0 = phi ptr [ %call38.i.i.i.i, %alloc_zeroed_user_highpage_movable.exit ], [ %call38.i.i.i, %cow_user_page.exit.thread ], [ %call38.i.i.i, %if.end22.critedge ], [ %call38.i.i.i, %if.end22.critedge410 ], [ %call38.i.i.i, %if.end22.critedge411 ]
  %84 = getelementptr inbounds %struct.page, ptr %new_page.0, i32 0, i32 1
  %85 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %84, align 4
  %and.i256 = and i32 %86, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i256)
  %tobool.not.i257 = icmp eq i32 %and.i256, 0
  br i1 %tobool.not.i257, label %if.end.i259, label %if.then.i258, !prof !218

if.then.i258:                                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i = add i32 %86, -1
  br label %_compound_head.exit

if.end.i259:                                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #17
  %87 = ptrtoint ptr %new_page.0 to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i259, %if.then.i258
  %retval.0.i260 = phi i32 [ %sub.i, %if.then.i258 ], [ %87, %if.end.i259 ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@wp_page_copy, %mem_cgroup_charge.exit)) #15
          to label %if.end.i261 [label %mem_cgroup_charge.exit], !srcloc !217

if.end.i261:                                      ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #17
  %88 = inttoptr i32 %retval.0.i260 to ptr
  %call1.i = tail call i32 @__mem_cgroup_charge(ptr noundef %88, ptr noundef %3, i32 noundef 3264) #15
  br label %mem_cgroup_charge.exit

mem_cgroup_charge.exit:                           ; preds = %if.end.i261, %_compound_head.exit
  %retval.0.i262 = phi i32 [ %call1.i, %if.end.i261 ], [ 0, %_compound_head.exit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i262)
  %tobool25.not = icmp eq i32 %retval.0.i262, 0
  br i1 %tobool25.not, label %if.end27, label %oom_free_new

if.end27:                                         ; preds = %mem_cgroup_charge.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@wp_page_copy, %cgroup_throttle_swaprate.exit)) #15
          to label %if.end.i263 [label %cgroup_throttle_swaprate.exit], !srcloc !217

if.end.i263:                                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__cgroup_throttle_swaprate(ptr noundef nonnull %new_page.0, i32 noundef 3264) #15
  br label %cgroup_throttle_swaprate.exit

cgroup_throttle_swaprate.exit:                    ; preds = %if.end.i263, %if.end27
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !293
  %89 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load volatile i32, ptr %84, align 4
  %and.i.i.i.i = and i32 %90, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %__SetPageUptodate.exit, label %if.then.i.i.i, !prof !218

if.then.i.i.i:                                    ; preds = %cgroup_throttle_swaprate.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef nonnull %new_page.0, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

__SetPageUptodate.exit:                           ; preds = %cgroup_throttle_swaprate.exit
  %91 = ptrtoint ptr %new_page.0 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %new_page.0, align 4
  %or.i.i.i = or i32 %92, 4
  store i32 %or.i.i.i, ptr %new_page.0, align 4
  %address28 = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %93 = ptrtoint ptr %address28 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %address28, align 4
  %and29 = and i32 %94, -4096
  %add = add i32 %and29, 4096
  %95 = ptrtoint ptr %range to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %1, ptr %range, align 4
  %96 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 1, ptr %10, align 4
  %97 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr %3, ptr %6, align 4
  %98 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %and29, ptr %7, align 4
  %99 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 %add, ptr %8, align 4
  %100 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 0, ptr %9, align 4
  call fastcc void @mmu_notifier_invalidate_range_start(ptr noundef nonnull %range)
  %pmd = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %101 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %pmd, align 4
  %103 = load ptr, ptr @mem_map, align 4
  %104 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %102, align 4
  %shr.i = lshr i32 %105, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %106 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i264 = sub i32 %shr.i, %106
  %ptl.i.i = getelementptr %struct.page, ptr %103, i32 %sub.i264, i32 1, i32 0, i32 3
  %107 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %ptl.i.i, align 4
  %add.ptr = getelementptr %struct.page, ptr %103, i32 %sub.i264
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %109 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %109, 512
  %110 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i = and i32 %110, -16384
  %111 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %111, i32 0, i32 1
  %112 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %113, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %114 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %114, -16384
  %115 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %115, i32 0, i32 2
  %116 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %117, i32 0, i32 213
  %118 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %119, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i = call ptr @__kmap_local_page_prot(ptr noundef %add.ptr, i32 noundef %or.i) #15
  %120 = ptrtoint ptr %address28 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %address28, align 4
  %shr.i265 = lshr i32 %121, 12
  %and.i266 = and i32 %shr.i265, 511
  %add.ptr39 = getelementptr i32, ptr %call.i.i, i32 %and.i266
  %ptl = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %122 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %122)
  store ptr %108, ptr %ptl, align 4
  call void @_raw_spin_lock(ptr noundef %108) #15
  %pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %123 = ptrtoint ptr %pte to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr %add.ptr39, ptr %pte, align 4
  %124 = ptrtoint ptr %add.ptr39 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %add.ptr39, align 4
  %126 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %14, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %125, i32 %127)
  %cmp.i267.not = icmp eq i32 %125, %127
  br i1 %cmp.i267.not, label %if.then49, label %__SetPageUptodate.exit.if.then88_crit_edge, !prof !218

__SetPageUptodate.exit.if.then88_crit_edge:       ; preds = %__SetPageUptodate.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then88

if.then49:                                        ; preds = %__SetPageUptodate.exit
  %tobool50.not = icmp eq ptr %5, null
  br i1 %tobool50.not, label %if.else56, label %if.then51

if.then51:                                        ; preds = %if.then49
  %128 = getelementptr inbounds %struct.page, ptr %5, i32 0, i32 1
  %129 = ptrtoint ptr %128 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load volatile i32, ptr %128, align 4
  %and.i2.i = and i32 %130, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i)
  %tobool.not.i.i = icmp eq i32 %and.i2.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %130, -1
  br label %PageAnon.exit

if.end.i.i:                                       ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #17
  %131 = ptrtoint ptr %5 to i32
  br label %PageAnon.exit

PageAnon.exit:                                    ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %131, %if.end.i.i ]
  %132 = inttoptr i32 %retval.0.i.i to ptr
  %mapping.i.i = getelementptr inbounds %struct.anon.101, ptr %132, i32 0, i32 2
  %133 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %mapping.i.i, align 4
  %135 = ptrtoint ptr %134 to i32
  %and.i.i = and i32 %135, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %cmp.i.i.not, label %if.then53, label %PageAnon.exit.if.end57_crit_edge

PageAnon.exit.if.end57_crit_edge:                 ; preds = %PageAnon.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

if.then53:                                        ; preds = %PageAnon.exit
  %136 = ptrtoint ptr %128 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load volatile i32, ptr %128, align 4
  %and.i.i.i = and i32 %137, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i269 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i269, label %if.end.i.i.i, label %if.then.i.i.i270, !prof !218

if.then.i.i.i270:                                 ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i = add i32 %137, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #17
  %138 = ptrtoint ptr %5 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i270
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i270 ], [ %138, %if.end.i.i.i ]
  %139 = inttoptr i32 %retval.0.i.i.i to ptr
  %140 = ptrtoint ptr %139 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %139, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %141)
  %cmp.i.not.i.i = icmp eq i32 %141, -1
  %142 = ptrtoint ptr %128 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load volatile i32, ptr %128, align 4
  %and.i16.i.i = and i32 %143, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i.i271, label %do.end10.i.i, !prof !230

if.then.i.i271:                                   ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i20.i.i, label %if.then.i19.i.i, !prof !218

if.then.i19.i.i:                                  ; preds = %if.then.i.i271
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i.i = add i32 %143, -1
  br label %_compound_head.exit22.i.i

if.end.i20.i.i:                                   ; preds = %if.then.i.i271
  call void @__sanitizer_cov_trace_pc() #17
  %144 = ptrtoint ptr %5 to i32
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.end.i20.i.i, %if.then.i19.i.i
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %144, %if.end.i20.i.i ]
  %145 = inttoptr i32 %retval.0.i21.i.i to ptr
  call void @dump_page(ptr noundef %145, ptr noundef nonnull @.str.32) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #15, !srcloc !248
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i27.i.i, label %if.then.i26.i.i, !prof !218

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i.i = add i32 %143, -1
  br label %mm_counter_file.exit

if.end.i27.i.i:                                   ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %146 = ptrtoint ptr %5 to i32
  br label %mm_counter_file.exit

mm_counter_file.exit:                             ; preds = %if.end.i27.i.i, %if.then.i26.i.i
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %146, %if.end.i27.i.i ]
  %147 = inttoptr i32 %retval.0.i28.i.i to ptr
  %148 = ptrtoint ptr %147 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load volatile i32, ptr %147, align 4
  %150 = and i32 %149, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %150)
  %tobool.not.i272 = icmp eq i32 %150, 0
  %..i = select i1 %tobool.not.i272, i32 0, i32 3
  %151 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i273 = and i32 %151, -16384
  %152 = inttoptr i32 %and.i.i273 to ptr
  %task1.i = getelementptr inbounds %struct.thread_info, ptr %152, i32 0, i32 2
  %153 = ptrtoint ptr %task1.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %task1.i, align 8
  %mm2.i = getelementptr inbounds %struct.task_struct, ptr %154, i32 0, i32 53
  %155 = ptrtoint ptr %mm2.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %mm2.i, align 8
  %cmp.i274 = icmp eq ptr %156, %3
  br i1 %cmp.i274, label %if.then.i275, label %if.else.i, !prof !218

if.then.i275:                                     ; preds = %mm_counter_file.exit
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i = getelementptr %struct.task_struct, ptr %154, i32 0, i32 56, i32 1, i32 %..i
  %157 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %158, -1
  store i32 %add.i, ptr %arrayidx.i, align 4
  br label %add_mm_counter_fast.exit

if.else.i:                                        ; preds = %mm_counter_file.exit
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @add_mm_counter(ptr noundef %3, i32 noundef %..i, i32 noundef -1) #15
  br label %add_mm_counter_fast.exit

add_mm_counter_fast.exit:                         ; preds = %if.else.i, %if.then.i275
  %159 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i277 = and i32 %159, -16384
  %160 = inttoptr i32 %and.i.i277 to ptr
  %task1.i278 = getelementptr inbounds %struct.thread_info, ptr %160, i32 0, i32 2
  %161 = ptrtoint ptr %task1.i278 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %task1.i278, align 8
  %mm2.i279 = getelementptr inbounds %struct.task_struct, ptr %162, i32 0, i32 53
  %163 = ptrtoint ptr %mm2.i279 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %mm2.i279, align 8
  %cmp.i280 = icmp eq ptr %164, %3
  br i1 %cmp.i280, label %if.then.i283, label %if.else.i284, !prof !218

if.then.i283:                                     ; preds = %add_mm_counter_fast.exit
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i281 = getelementptr %struct.task_struct, ptr %162, i32 0, i32 56, i32 1, i32 1
  %165 = ptrtoint ptr %arrayidx.i281 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %arrayidx.i281, align 4
  %add.i282 = add i32 %166, 1
  store i32 %add.i282, ptr %arrayidx.i281, align 4
  br label %if.end57

if.else.i284:                                     ; preds = %add_mm_counter_fast.exit
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @add_mm_counter(ptr noundef %3, i32 noundef 1, i32 noundef 1) #15
  br label %if.end57

if.else56:                                        ; preds = %if.then49
  %167 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i287 = and i32 %167, -16384
  %168 = inttoptr i32 %and.i.i287 to ptr
  %task1.i288 = getelementptr inbounds %struct.thread_info, ptr %168, i32 0, i32 2
  %169 = ptrtoint ptr %task1.i288 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %task1.i288, align 8
  %mm2.i289 = getelementptr inbounds %struct.task_struct, ptr %170, i32 0, i32 53
  %171 = ptrtoint ptr %mm2.i289 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %mm2.i289, align 8
  %cmp.i290 = icmp eq ptr %172, %3
  br i1 %cmp.i290, label %if.then.i293, label %if.else.i294, !prof !218

if.then.i293:                                     ; preds = %if.else56
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i291 = getelementptr %struct.task_struct, ptr %170, i32 0, i32 56, i32 1, i32 1
  %173 = ptrtoint ptr %arrayidx.i291 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %arrayidx.i291, align 4
  %add.i292 = add i32 %174, 1
  store i32 %add.i292, ptr %arrayidx.i291, align 4
  br label %if.end57

if.else.i294:                                     ; preds = %if.else56
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @add_mm_counter(ptr noundef %3, i32 noundef 1, i32 noundef 1) #15
  br label %if.end57

if.end57:                                         ; preds = %if.else.i294, %if.then.i293, %if.else.i284, %if.then.i283, %PageAnon.exit.if.end57_crit_edge
  %175 = ptrtoint ptr %address28 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %address28, align 4
  %177 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %14, align 4
  %shr60 = lshr i32 %178, 12
  call void @flush_cache_page(ptr noundef %1, i32 noundef %176, i32 noundef %shr60) #15
  %179 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %new_page.0 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %179 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %180 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add61 = add i32 %sub.ptr.div, %180
  %shl = shl i32 %add61, 12
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 7
  %181 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %vm_page_prot, align 4
  %or = or i32 %182, %shl
  %or.i.i = or i32 %or, 64
  %vm_flags.i = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %183 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %vm_flags.i, align 4
  %and.i297 = and i32 %184, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i297)
  %tobool.not.i298 = icmp eq i32 %and.i297, 0
  %and.i.i.i299 = and i32 %or.i.i, -129
  %spec.select.i = select i1 %tobool.not.i298, i32 %or.i.i, i32 %and.i.i.i299, !prof !230
  %185 = ptrtoint ptr %address28 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %address28, align 4
  %187 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %vm_mm, align 4
  %189 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %pte, align 4
  %call70 = call i32 @ptep_clear_flush(ptr noundef %1, i32 noundef %186, ptr noundef %190) #15
  %notifier_subscriptions.i.i = getelementptr inbounds %struct.anon.9, ptr %188, i32 0, i32 49
  %191 = ptrtoint ptr %notifier_subscriptions.i.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %notifier_subscriptions.i.i, align 8
  %tobool.i.not.i = icmp eq ptr %192, null
  br i1 %tobool.i.not.i, label %if.end57.mmu_notifier_invalidate_range.exit_crit_edge, label %if.then.i300

if.end57.mmu_notifier_invalidate_range.exit_crit_edge: ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #17
  br label %mmu_notifier_invalidate_range.exit

if.then.i300:                                     ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #17
  %and66 = and i32 %186, -4096
  %add71 = add i32 %and66, 4096
  call void @__mmu_notifier_invalidate_range(ptr noundef %188, i32 noundef %and66, i32 noundef %add71) #15
  br label %mmu_notifier_invalidate_range.exit

mmu_notifier_invalidate_range.exit:               ; preds = %if.then.i300, %if.end57.mmu_notifier_invalidate_range.exit_crit_edge
  %193 = ptrtoint ptr %address28 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %address28, align 4
  call void @page_add_new_anon_rmap(ptr noundef nonnull %new_page.0, ptr noundef %1, i32 noundef %194, i1 noundef zeroext false) #15
  call void @lru_cache_add_inactive_or_unevictable(ptr noundef nonnull %new_page.0, ptr noundef %1) #15
  %195 = ptrtoint ptr %address28 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %address28, align 4
  %notifier_subscriptions.i.i302 = getelementptr inbounds %struct.anon.9, ptr %3, i32 0, i32 49
  %197 = ptrtoint ptr %notifier_subscriptions.i.i302 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %notifier_subscriptions.i.i302, align 8
  %tobool.i.not.i303 = icmp eq ptr %198, null
  br i1 %tobool.i.not.i303, label %mmu_notifier_invalidate_range.exit.mmu_notifier_change_pte.exit_crit_edge, label %if.then.i304

mmu_notifier_invalidate_range.exit.mmu_notifier_change_pte.exit_crit_edge: ; preds = %mmu_notifier_invalidate_range.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %mmu_notifier_change_pte.exit

if.then.i304:                                     ; preds = %mmu_notifier_invalidate_range.exit
  call void @__sanitizer_cov_trace_pc() #17
  call void @__mmu_notifier_change_pte(ptr noundef %3, i32 noundef %196, i32 noundef %spec.select.i) #15
  br label %mmu_notifier_change_pte.exit

mmu_notifier_change_pte.exit:                     ; preds = %if.then.i304, %mmu_notifier_invalidate_range.exit.mmu_notifier_change_pte.exit_crit_edge
  %199 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %pte, align 4
  call void @set_pte_at(ptr noundef %3, i32 noundef %196, ptr noundef %200, i32 noundef %spec.select.i) #15
  br i1 %tobool50.not, label %mmu_notifier_change_pte.exit.do.body_crit_edge, label %if.then81

mmu_notifier_change_pte.exit.do.body_crit_edge:   ; preds = %mmu_notifier_change_pte.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body

if.then81:                                        ; preds = %mmu_notifier_change_pte.exit
  call void @__sanitizer_cov_trace_pc() #17
  call void @page_remove_rmap(ptr noundef nonnull %5, i1 noundef zeroext false) #15
  br label %if.then88

if.then88:                                        ; preds = %if.then81, %__SetPageUptodate.exit.if.then88_crit_edge
  %new_page.1.ph = phi ptr [ %new_page.0, %__SetPageUptodate.exit.if.then88_crit_edge ], [ %5, %if.then81 ]
  %201 = getelementptr inbounds %struct.page, ptr %new_page.1.ph, i32 0, i32 1
  %202 = ptrtoint ptr %201 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load volatile i32, ptr %201, align 4
  %and.i.i306 = and i32 %203, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i306)
  %tobool.not.i.i307 = icmp eq i32 %and.i.i306, 0
  br i1 %tobool.not.i.i307, label %if.end.i.i310, label %if.then.i.i309, !prof !218

if.then.i.i309:                                   ; preds = %if.then88
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i308 = add i32 %203, -1
  br label %_compound_head.exit.i315

if.end.i.i310:                                    ; preds = %if.then88
  call void @__sanitizer_cov_trace_pc() #17
  %204 = ptrtoint ptr %new_page.1.ph to i32
  br label %_compound_head.exit.i315

_compound_head.exit.i315:                         ; preds = %if.end.i.i310, %if.then.i.i309
  %retval.0.i.i311 = phi i32 [ %sub.i.i308, %if.then.i.i309 ], [ %204, %if.end.i.i310 ]
  %205 = inttoptr i32 %retval.0.i.i311 to ptr
  %_refcount.i.i.i.i.i312 = getelementptr inbounds %struct.page, ptr %205, i32 0, i32 3
  %call.i.i.i.i.i.i.i313 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i312, i32 noundef 4) #15
  %206 = ptrtoint ptr %_refcount.i.i.i.i.i312 to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load volatile i32, ptr %_refcount.i.i.i.i.i312, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %207)
  %cmp.i.i.i.i314 = icmp eq i32 %207, 0
  br i1 %cmp.i.i.i.i314, label %if.then.i.i.i.i316, label %do.end5.i.i.i.i320, !prof !230

if.then.i.i.i.i316:                               ; preds = %_compound_head.exit.i315
  call void @__sanitizer_cov_trace_pc() #17
  call void @dump_page(ptr noundef %205, ptr noundef nonnull @.str.45) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i320:                               ; preds = %_compound_head.exit.i315
  %call.i.i.i10.i.i.i.i317 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i312, i32 noundef 4) #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i312, i32 1, i32 3, i32 1) #15
  %208 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i312, ptr %_refcount.i.i.i.i.i312, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i312) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i318 = extractvalue { i32, i32 } %208, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i318)
  %cmp.i.i.i.i.i.i.i319 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i318, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@wp_page_copy, %if.then.i.i.i.i.i322)) #15
          to label %folio_put_testzero.exit.i.i323 [label %if.then.i.i.i.i.i322], !srcloc !217

if.then.i.i.i.i.i322:                             ; preds = %do.end5.i.i.i.i320
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i321 = zext i1 %cmp.i.i.i.i.i.i.i319 to i32
  call void @__page_ref_mod_and_test(ptr noundef %205, i32 noundef -1, i32 noundef %conv.i.i.i.i.i321) #15
  br label %folio_put_testzero.exit.i.i323

folio_put_testzero.exit.i.i323:                   ; preds = %if.then.i.i.i.i.i322, %do.end5.i.i.i.i320
  br i1 %cmp.i.i.i.i.i.i.i319, label %if.then.i4.i324, label %folio_put_testzero.exit.i.i323.do.body_crit_edge

folio_put_testzero.exit.i.i323.do.body_crit_edge: ; preds = %folio_put_testzero.exit.i.i323
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body

if.then.i4.i324:                                  ; preds = %folio_put_testzero.exit.i.i323
  call void @__sanitizer_cov_trace_pc() #17
  call void @__put_page(ptr noundef %205) #15
  br label %do.body

do.body:                                          ; preds = %if.then.i4.i324, %folio_put_testzero.exit.i.i323.do.body_crit_edge, %mmu_notifier_change_pte.exit.do.body_crit_edge
  %209 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %ptl, align 4
  call void @_raw_spin_unlock(ptr noundef %210) #15
  %211 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %pte, align 4
  call void @kunmap_local_indexed(ptr noundef %212) #15
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %213 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %213, -16384
  %214 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %214, i32 0, i32 2
  %215 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %216, i32 0, i32 213
  %217 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %218, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %219 = call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i326 = and i32 %219, -16384
  %220 = inttoptr i32 %and.i.i.i.i326 to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %220, i32 0, i32 1
  %221 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i327 = add i32 %222, -1
  store volatile i32 %sub.i.i327, ptr %preempt_count.i.i.i, align 4
  %223 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %6, align 4
  %notifier_subscriptions.i.i328 = getelementptr inbounds %struct.anon.9, ptr %224, i32 0, i32 49
  %225 = ptrtoint ptr %notifier_subscriptions.i.i328 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %notifier_subscriptions.i.i328, align 8
  %tobool.i.not.i329 = icmp eq ptr %226, null
  br i1 %tobool.i.not.i329, label %do.body.mmu_notifier_invalidate_range_only_end.exit_crit_edge, label %if.then.i330

do.body.mmu_notifier_invalidate_range_only_end.exit_crit_edge: ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %mmu_notifier_invalidate_range_only_end.exit

if.then.i330:                                     ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  call void @__mmu_notifier_invalidate_range_end(ptr noundef nonnull %range, i1 noundef zeroext true) #15
  br label %mmu_notifier_invalidate_range_only_end.exit

mmu_notifier_invalidate_range_only_end.exit:      ; preds = %if.then.i330, %do.body.mmu_notifier_invalidate_range_only_end.exit_crit_edge
  %tobool98.not = icmp eq ptr %5, null
  br i1 %tobool98.not, label %mmu_notifier_invalidate_range_only_end.exit.if.end113_crit_edge, label %if.then99

mmu_notifier_invalidate_range_only_end.exit.if.end113_crit_edge: ; preds = %mmu_notifier_invalidate_range_only_end.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end113

if.then99:                                        ; preds = %mmu_notifier_invalidate_range_only_end.exit
  br i1 %cmp.i267.not, label %land.lhs.true, label %if.then99.if.end112_crit_edge

if.then99.if.end112_crit_edge:                    ; preds = %if.then99
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end112

land.lhs.true:                                    ; preds = %if.then99
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %227 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %vm_flags, align 4
  %and101 = and i32 %228, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and101)
  %tobool102.not = icmp eq i32 %and101, 0
  br i1 %tobool102.not, label %land.lhs.true.if.then111_crit_edge, label %if.then103

land.lhs.true.if.then111_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then111

if.then103:                                       ; preds = %land.lhs.true
  call void @__might_sleep(ptr noundef nonnull @.str.44, i32 noundef 788) #15
  %229 = getelementptr inbounds %struct.page, ptr %5, i32 0, i32 1
  %230 = ptrtoint ptr %229 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load volatile i32, ptr %229, align 4
  %and.i.i332 = and i32 %231, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i332)
  %tobool.not.i.i333 = icmp eq i32 %and.i.i332, 0
  br i1 %tobool.not.i.i333, label %if.end.i.i336, label %if.then.i.i335, !prof !218

if.then.i.i335:                                   ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i334 = add i32 %231, -1
  br label %_compound_head.exit.i340

if.end.i.i336:                                    ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #17
  %232 = ptrtoint ptr %5 to i32
  br label %_compound_head.exit.i340

_compound_head.exit.i340:                         ; preds = %if.end.i.i336, %if.then.i.i335
  %retval.0.i.i337 = phi i32 [ %sub.i.i334, %if.then.i.i335 ], [ %232, %if.end.i.i336 ]
  %233 = inttoptr i32 %retval.0.i.i337 to ptr
  %234 = getelementptr inbounds %struct.page, ptr %233, i32 0, i32 1
  %235 = ptrtoint ptr %234 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load volatile i32, ptr %234, align 4
  %and.i.i.i.i338 = and i32 %236, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i338)
  %tobool.not.i.i.i339 = icmp eq i32 %and.i.i.i.i338, 0
  br i1 %tobool.not.i.i.i339, label %folio_flags.exit.i.i, label %if.then.i.i.i341, !prof !218

if.then.i.i.i341:                                 ; preds = %_compound_head.exit.i340
  call void @__sanitizer_cov_trace_pc() #17
  call void @dump_page(ptr noundef %233, ptr noundef nonnull @.str.28) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i340
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %233, i32 noundef 4) #15
  %237 = ptrtoint ptr %233 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load volatile i32, ptr %233, align 4
  %and.i.i4.i.i = and i32 %238, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_trylock.exit.i, label %folio_flags.exit.i.i.if.then.i342_crit_edge

folio_flags.exit.i.i.if.then.i342_crit_edge:      ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i342

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i
  call void @llvm.prefetch.p0(ptr %233, i32 1, i32 3, i32 1) #15
  %239 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %233, ptr %233, i32 1, ptr elementtype(i32) %233) #15, !srcloc !277
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %239, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !278
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.lock_page.exit_crit_edge, label %folio_trylock.exit.i.if.then.i342_crit_edge

folio_trylock.exit.i.if.then.i342_crit_edge:      ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i342

folio_trylock.exit.i.lock_page.exit_crit_edge:    ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %lock_page.exit

if.then.i342:                                     ; preds = %folio_trylock.exit.i.if.then.i342_crit_edge, %folio_flags.exit.i.i.if.then.i342_crit_edge
  call void @__folio_lock(ptr noundef %233) #15
  br label %lock_page.exit

lock_page.exit:                                   ; preds = %if.then.i342, %folio_trylock.exit.i.lock_page.exit_crit_edge
  %240 = ptrtoint ptr %229 to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load volatile i32, ptr %229, align 4
  %and.i.i209 = and i32 %241, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i209)
  %tobool.not.i.i210 = icmp eq i32 %and.i.i209, 0
  br i1 %tobool.not.i.i210, label %if.end.i.i213, label %if.then.i.i212, !prof !218

if.then.i.i212:                                   ; preds = %lock_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i211 = add i32 %241, -1
  br label %_compound_head.exit.i

if.end.i.i213:                                    ; preds = %lock_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  %242 = ptrtoint ptr %5 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i213, %if.then.i.i212
  %retval.0.i.i214 = phi i32 [ %sub.i.i211, %if.then.i.i212 ], [ %242, %if.end.i.i213 ]
  %243 = inttoptr i32 %retval.0.i.i214 to ptr
  %244 = ptrtoint ptr %243 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load volatile i32, ptr %243, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %245)
  %cmp.i.not.i = icmp eq i32 %245, -1
  %246 = ptrtoint ptr %229 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load volatile i32, ptr %229, align 4
  %and.i16.i = and i32 %247, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !230

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !218

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i = add i32 %247, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %248 = ptrtoint ptr %5 to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %248, %if.end.i20.i ]
  %249 = inttoptr i32 %retval.0.i21.i to ptr
  call void @dump_page(ptr noundef %249, ptr noundef nonnull @.str.32) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 504, 0\0A.popsection", ""() #15, !srcloc !280
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !218

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i = add i32 %247, -1
  br label %PageMlocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  %250 = ptrtoint ptr %5 to i32
  br label %PageMlocked.exit

PageMlocked.exit:                                 ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %250, %if.end.i27.i ]
  %251 = inttoptr i32 %retval.0.i28.i to ptr
  %252 = ptrtoint ptr %251 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load volatile i32, ptr %251, align 4
  %254 = and i32 %253, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %254)
  %tobool105.not = icmp eq i32 %254, 0
  br i1 %tobool105.not, label %PageMlocked.exit.if.end108_crit_edge, label %if.then106

PageMlocked.exit.if.end108_crit_edge:             ; preds = %PageMlocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end108

if.then106:                                       ; preds = %PageMlocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  %call107 = call i32 @munlock_vma_page(ptr noundef nonnull %5) #15
  br label %if.end108

if.end108:                                        ; preds = %if.then106, %PageMlocked.exit.if.end108_crit_edge
  call void @unlock_page(ptr noundef nonnull %5) #15
  br label %if.then111

if.then111:                                       ; preds = %if.end108, %land.lhs.true.if.then111_crit_edge
  call void @free_swap_cache(ptr noundef nonnull %5) #15
  br label %if.end112

if.end112:                                        ; preds = %if.then111, %if.then99.if.end112_crit_edge
  %255 = getelementptr inbounds %struct.page, ptr %5, i32 0, i32 1
  %256 = ptrtoint ptr %255 to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load volatile i32, ptr %255, align 4
  %and.i.i344 = and i32 %257, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i344)
  %tobool.not.i.i345 = icmp eq i32 %and.i.i344, 0
  br i1 %tobool.not.i.i345, label %if.end.i.i348, label %if.then.i.i347, !prof !218

if.then.i.i347:                                   ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i346 = add i32 %257, -1
  br label %_compound_head.exit.i353

if.end.i.i348:                                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #17
  %258 = ptrtoint ptr %5 to i32
  br label %_compound_head.exit.i353

_compound_head.exit.i353:                         ; preds = %if.end.i.i348, %if.then.i.i347
  %retval.0.i.i349 = phi i32 [ %sub.i.i346, %if.then.i.i347 ], [ %258, %if.end.i.i348 ]
  %259 = inttoptr i32 %retval.0.i.i349 to ptr
  %_refcount.i.i.i.i.i350 = getelementptr inbounds %struct.page, ptr %259, i32 0, i32 3
  %call.i.i.i.i.i.i.i351 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i350, i32 noundef 4) #15
  %260 = ptrtoint ptr %_refcount.i.i.i.i.i350 to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load volatile i32, ptr %_refcount.i.i.i.i.i350, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %261)
  %cmp.i.i.i.i352 = icmp eq i32 %261, 0
  br i1 %cmp.i.i.i.i352, label %if.then.i.i.i.i354, label %do.end5.i.i.i.i358, !prof !230

if.then.i.i.i.i354:                               ; preds = %_compound_head.exit.i353
  call void @__sanitizer_cov_trace_pc() #17
  call void @dump_page(ptr noundef %259, ptr noundef nonnull @.str.45) #15
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i358:                               ; preds = %_compound_head.exit.i353
  %call.i.i.i10.i.i.i.i355 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i350, i32 noundef 4) #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i350, i32 1, i32 3, i32 1) #15
  %262 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i350, ptr %_refcount.i.i.i.i.i350, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i350) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i356 = extractvalue { i32, i32 } %262, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i356)
  %cmp.i.i.i.i.i.i.i357 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i356, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@wp_page_copy, %if.then.i.i.i.i.i360)) #15
          to label %folio_put_testzero.exit.i.i361 [label %if.then.i.i.i.i.i360], !srcloc !217

if.then.i.i.i.i.i360:                             ; preds = %do.end5.i.i.i.i358
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i359 = zext i1 %cmp.i.i.i.i.i.i.i357 to i32
  call void @__page_ref_mod_and_test(ptr noundef %259, i32 noundef -1, i32 noundef %conv.i.i.i.i.i359) #15
  br label %folio_put_testzero.exit.i.i361

folio_put_testzero.exit.i.i361:                   ; preds = %if.then.i.i.i.i.i360, %do.end5.i.i.i.i358
  br i1 %cmp.i.i.i.i.i.i.i357, label %if.then.i4.i362, label %folio_put_testzero.exit.i.i361.if.end113_crit_edge

folio_put_testzero.exit.i.i361.if.end113_crit_edge: ; preds = %folio_put_testzero.exit.i.i361
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end113

if.then.i4.i362:                                  ; preds = %folio_put_testzero.exit.i.i361
  call void @__sanitizer_cov_trace_pc() #17
  call void @__put_page(ptr noundef %259) #15
  br label %if.end113

if.end113:                                        ; preds = %if.then.i4.i362, %folio_put_testzero.exit.i.i361.if.end113_crit_edge, %mmu_notifier_invalidate_range_only_end.exit.if.end113_crit_edge
  %cond = select i1 %cmp.i267.not, i32 8, i32 0
  br label %cleanup

oom_free_new:                                     ; preds = %mem_cgroup_charge.exit
  %263 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load volatile i32, ptr %84, align 4
  %and.i.i364 = and i32 %264, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i364)
  %tobool.not.i.i365 = icmp eq i32 %and.i.i364, 0
  br i1 %tobool.not.i.i365, label %if.end.i.i368, label %if.then.i.i367, !prof !218

if.then.i.i367:                                   ; preds = %oom_free_new
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i366 = add i32 %264, -1
  br label %_compound_head.exit.i373

if.end.i.i368:                                    ; preds = %oom_free_new
  call void @__sanitizer_cov_trace_pc() #17
  %265 = ptrtoint ptr %new_page.0 to i32
  br label %_compound_head.exit.i373

_compound_head.exit.i373:                         ; preds = %if.end.i.i368, %if.then.i.i367
  %retval.0.i.i369 = phi i32 [ %sub.i.i366, %if.then.i.i367 ], [ %265, %if.end.i.i368 ]
  %266 = inttoptr i32 %retval.0.i.i369 to ptr
  %_refcount.i.i.i.i.i370 = getelementptr inbounds %struct.page, ptr %266, i32 0, i32 3
  %call.i.i.i.i.i.i.i371 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i370, i32 noundef 4) #15
  %267 = ptrtoint ptr %_refcount.i.i.i.i.i370 to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load volatile i32, ptr %_refcount.i.i.i.i.i370, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %268)
  %cmp.i.i.i.i372 = icmp eq i32 %268, 0
  br i1 %cmp.i.i.i.i372, label %if.then.i.i.i.i374, label %do.end5.i.i.i.i378, !prof !230

if.then.i.i.i.i374:                               ; preds = %_compound_head.exit.i373
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %266, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i378:                               ; preds = %_compound_head.exit.i373
  %call.i.i.i10.i.i.i.i375 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i370, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i370, i32 1, i32 3, i32 1) #15
  %269 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i370, ptr %_refcount.i.i.i.i.i370, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i370) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i376 = extractvalue { i32, i32 } %269, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i376)
  %cmp.i.i.i.i.i.i.i377 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i376, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@wp_page_copy, %if.then.i.i.i.i.i380)) #15
          to label %folio_put_testzero.exit.i.i381 [label %if.then.i.i.i.i.i380], !srcloc !217

if.then.i.i.i.i.i380:                             ; preds = %do.end5.i.i.i.i378
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i379 = zext i1 %cmp.i.i.i.i.i.i.i377 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %266, i32 noundef -1, i32 noundef %conv.i.i.i.i.i379) #15
  br label %folio_put_testzero.exit.i.i381

folio_put_testzero.exit.i.i381:                   ; preds = %if.then.i.i.i.i.i380, %do.end5.i.i.i.i378
  br i1 %cmp.i.i.i.i.i.i.i377, label %if.then.i4.i382, label %folio_put_testzero.exit.i.i381.oom_crit_edge

folio_put_testzero.exit.i.i381.oom_crit_edge:     ; preds = %folio_put_testzero.exit.i.i381
  call void @__sanitizer_cov_trace_pc() #17
  br label %oom

if.then.i4.i382:                                  ; preds = %folio_put_testzero.exit.i.i381
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %266) #15
  br label %oom

oom:                                              ; preds = %if.then.i4.i382, %folio_put_testzero.exit.i.i381.oom_crit_edge, %if.else.oom_crit_edge, %if.then7.oom_crit_edge, %anon_vma_prepare.exit.oom_crit_edge
  %tobool115.not = icmp eq ptr %5, null
  br i1 %tobool115.not, label %oom.cleanup_crit_edge, label %if.then116

oom.cleanup_crit_edge:                            ; preds = %oom
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then116:                                       ; preds = %oom
  %270 = getelementptr inbounds %struct.page, ptr %5, i32 0, i32 1
  %271 = ptrtoint ptr %270 to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load volatile i32, ptr %270, align 4
  %and.i.i384 = and i32 %272, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i384)
  %tobool.not.i.i385 = icmp eq i32 %and.i.i384, 0
  br i1 %tobool.not.i.i385, label %if.end.i.i388, label %if.then.i.i387, !prof !218

if.then.i.i387:                                   ; preds = %if.then116
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i386 = add i32 %272, -1
  br label %_compound_head.exit.i393

if.end.i.i388:                                    ; preds = %if.then116
  call void @__sanitizer_cov_trace_pc() #17
  %273 = ptrtoint ptr %5 to i32
  br label %_compound_head.exit.i393

_compound_head.exit.i393:                         ; preds = %if.end.i.i388, %if.then.i.i387
  %retval.0.i.i389 = phi i32 [ %sub.i.i386, %if.then.i.i387 ], [ %273, %if.end.i.i388 ]
  %274 = inttoptr i32 %retval.0.i.i389 to ptr
  %_refcount.i.i.i.i.i390 = getelementptr inbounds %struct.page, ptr %274, i32 0, i32 3
  %call.i.i.i.i.i.i.i391 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i390, i32 noundef 4) #15
  %275 = ptrtoint ptr %_refcount.i.i.i.i.i390 to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load volatile i32, ptr %_refcount.i.i.i.i.i390, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %276)
  %cmp.i.i.i.i392 = icmp eq i32 %276, 0
  br i1 %cmp.i.i.i.i392, label %if.then.i.i.i.i394, label %do.end5.i.i.i.i398, !prof !230

if.then.i.i.i.i394:                               ; preds = %_compound_head.exit.i393
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %274, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i398:                               ; preds = %_compound_head.exit.i393
  %call.i.i.i10.i.i.i.i395 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i390, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i390, i32 1, i32 3, i32 1) #15
  %277 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i390, ptr %_refcount.i.i.i.i.i390, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i390) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i396 = extractvalue { i32, i32 } %277, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i396)
  %cmp.i.i.i.i.i.i.i397 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i396, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@wp_page_copy, %if.then.i.i.i.i.i400)) #15
          to label %folio_put_testzero.exit.i.i401 [label %if.then.i.i.i.i.i400], !srcloc !217

if.then.i.i.i.i.i400:                             ; preds = %do.end5.i.i.i.i398
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i399 = zext i1 %cmp.i.i.i.i.i.i.i397 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %274, i32 noundef -1, i32 noundef %conv.i.i.i.i.i399) #15
  br label %folio_put_testzero.exit.i.i401

folio_put_testzero.exit.i.i401:                   ; preds = %if.then.i.i.i.i.i400, %do.end5.i.i.i.i398
  br i1 %cmp.i.i.i.i.i.i.i397, label %if.then.i4.i402, label %folio_put_testzero.exit.i.i401.cleanup_crit_edge

folio_put_testzero.exit.i.i401.cleanup_crit_edge: ; preds = %folio_put_testzero.exit.i.i401
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then.i4.i402:                                  ; preds = %folio_put_testzero.exit.i.i401
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %274) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then.i4.i402, %folio_put_testzero.exit.i.i401.cleanup_crit_edge, %oom.cleanup_crit_edge, %if.end113, %if.then.i4.i, %folio_put_testzero.exit.i.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond, %if.end113 ], [ 1, %oom.cleanup_crit_edge ], [ 0, %folio_put_testzero.exit.i.i.cleanup_crit_edge ], [ 0, %if.then.i4.i ], [ 1, %folio_put_testzero.exit.i.i401.cleanup_crit_edge ], [ 1, %if.then.i4.i402 ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %range) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wp_page_shared(ptr noundef %vmf) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %page = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %page, align 4
  %4 = getelementptr inbounds %struct.page, ptr %3, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  %and.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %6, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %7 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %7, %if.end.i.i ]
  %8 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %8, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  %9 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %10, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !230

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %8, ptr noundef nonnull @.str.50) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #15, !srcloc !287
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #15
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #15, !srcloc !233
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@wp_page_shared, %if.then.i.i.i.i)) #15
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !217

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__page_ref_mod(ptr noundef %8, i32 noundef 1) #15
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 12
  %12 = ptrtoint ptr %vm_ops to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vm_ops, align 4
  %tobool.not = icmp eq ptr %13, null
  br i1 %tobool.not, label %get_page.exit.if.else_crit_edge, label %land.lhs.true

get_page.exit.if.else_crit_edge:                  ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

land.lhs.true:                                    ; preds = %get_page.exit
  %page_mkwrite = getelementptr inbounds %struct.vm_operations_struct, ptr %13, i32 0, i32 9
  %14 = ptrtoint ptr %page_mkwrite to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %page_mkwrite, align 4
  %tobool3.not = icmp eq ptr %15, null
  br i1 %tobool3.not, label %land.lhs.true.if.else_crit_edge, label %if.then

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  %ptl = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %16 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ptl, align 4
  tail call void @_raw_spin_unlock(ptr noundef %17) #15
  %pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %18 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pte, align 4
  tail call void @kunmap_local_indexed(ptr noundef %19) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %20 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 213
  %24 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %25, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %26 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i53 = add i32 %29, -1
  store volatile i32 %sub.i.i53, ptr %preempt_count.i.i.i, align 4
  %call = tail call fastcc i32 @do_page_mkwrite(ptr noundef %vmf)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool10.not = icmp eq i32 %call, 0
  %and = and i32 %call, 2419
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool11 = icmp ne i32 %and, 0
  %30 = or i1 %tobool10.not, %tobool11
  br i1 %30, label %if.then14, label %if.end, !prof !230

if.then14:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %31 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %page, align 4
  tail call fastcc void @put_page(ptr noundef %32)
  br label %cleanup33

if.end:                                           ; preds = %if.then
  %call16 = tail call i32 @finish_mkwrite_fault(ptr noundef %vmf)
  %and17 = and i32 %call16, 2419
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17)
  %tobool18.not = icmp eq i32 %and17, 0
  br i1 %tobool18.not, label %if.end.if.end30_crit_edge, label %if.then25, !prof !218

if.end.if.end30_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end30

if.then25:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %33 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %page, align 4
  tail call void @unlock_page(ptr noundef %34) #15
  %35 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %page, align 4
  tail call fastcc void @put_page(ptr noundef %36)
  br label %cleanup33

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %get_page.exit.if.else_crit_edge
  tail call fastcc void @wp_page_reuse(ptr noundef %vmf)
  %37 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %page, align 4
  tail call void @__might_sleep(ptr noundef nonnull @.str.44, i32 noundef 788) #15
  %39 = getelementptr inbounds %struct.page, ptr %38, i32 0, i32 1
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %39, align 4
  %and.i.i54 = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i54)
  %tobool.not.i.i55 = icmp eq i32 %and.i.i54, 0
  br i1 %tobool.not.i.i55, label %if.end.i.i58, label %if.then.i.i57, !prof !218

if.then.i.i57:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i56 = add i32 %41, -1
  br label %_compound_head.exit.i61

if.end.i.i58:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %42 = ptrtoint ptr %38 to i32
  br label %_compound_head.exit.i61

_compound_head.exit.i61:                          ; preds = %if.end.i.i58, %if.then.i.i57
  %retval.0.i.i59 = phi i32 [ %sub.i.i56, %if.then.i.i57 ], [ %42, %if.end.i.i58 ]
  %43 = inttoptr i32 %retval.0.i.i59 to ptr
  %44 = getelementptr inbounds %struct.page, ptr %43, i32 0, i32 1
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %44, align 4
  %and.i.i.i.i60 = and i32 %46, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i60)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i60, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !218

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i61
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %43, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i61
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %43, i32 noundef 4) #15
  %47 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %43, align 4
  %and.i.i4.i.i = and i32 %48, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_trylock.exit.i, label %folio_flags.exit.i.i.if.then.i_crit_edge

folio_flags.exit.i.i.if.then.i_crit_edge:         ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %43, i32 1, i32 3, i32 1) #15
  %49 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %43, ptr %43, i32 1, ptr elementtype(i32) %43) #15, !srcloc !277
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %49, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !278
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.if.end30_crit_edge, label %folio_trylock.exit.i.if.then.i_crit_edge

folio_trylock.exit.i.if.then.i_crit_edge:         ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

folio_trylock.exit.i.if.end30_crit_edge:          ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end30

if.then.i:                                        ; preds = %folio_trylock.exit.i.if.then.i_crit_edge, %folio_flags.exit.i.i.if.then.i_crit_edge
  tail call void @__folio_lock(ptr noundef %43) #15
  br label %if.end30

if.end30:                                         ; preds = %if.then.i, %folio_trylock.exit.i.if.end30_crit_edge, %if.end.if.end30_crit_edge
  %call31 = tail call fastcc i32 @fault_dirty_shared_page(ptr noundef %vmf)
  %or = or i32 %call31, 8
  %50 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %page, align 4
  %52 = getelementptr inbounds %struct.page, ptr %51, i32 0, i32 1
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %52, align 4
  %and.i.i62 = and i32 %54, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i62)
  %tobool.not.i.i63 = icmp eq i32 %and.i.i62, 0
  br i1 %tobool.not.i.i63, label %if.end.i.i66, label %if.then.i.i65, !prof !218

if.then.i.i65:                                    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i64 = add i32 %54, -1
  br label %_compound_head.exit.i68

if.end.i.i66:                                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #17
  %55 = ptrtoint ptr %51 to i32
  br label %_compound_head.exit.i68

_compound_head.exit.i68:                          ; preds = %if.end.i.i66, %if.then.i.i65
  %retval.0.i.i67 = phi i32 [ %sub.i.i64, %if.then.i.i65 ], [ %55, %if.end.i.i66 ]
  %56 = inttoptr i32 %retval.0.i.i67 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %56, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %57 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %cmp.i.i.i.i = icmp eq i32 %58, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i69, label %do.end5.i.i.i.i, !prof !230

if.then.i.i.i.i69:                                ; preds = %_compound_head.exit.i68
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %56, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i68
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %59 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %59, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@wp_page_shared, %if.then.i.i.i.i.i)) #15
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !217

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %56, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #15
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.cleanup33_crit_edge

folio_put_testzero.exit.i.i.cleanup33_crit_edge:  ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup33

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %56) #15
  br label %cleanup33

cleanup33:                                        ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.cleanup33_crit_edge, %if.then25, %if.then14
  %retval.1 = phi i32 [ %or, %folio_put_testzero.exit.i.i.cleanup33_crit_edge ], [ %or, %if.then.i4.i ], [ %call16, %if.then25 ], [ %call, %if.then14 ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ptep_clear_flush(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @lock_page(ptr noundef %page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__might_sleep(ptr noundef nonnull @.str.44, i32 noundef 788) #15
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !218

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %3, %if.end.i ]
  %4 = inttoptr i32 %retval.0.i to ptr
  %5 = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %and.i.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_flags.exit.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %4, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

folio_flags.exit.i:                               ; preds = %_compound_head.exit
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %4, i32 noundef 4) #15
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %4, align 4
  %and.i.i4.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool.not.i.i.i, label %folio_trylock.exit, label %folio_flags.exit.i.if.then_crit_edge

folio_flags.exit.i.if.then_crit_edge:             ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

folio_trylock.exit:                               ; preds = %folio_flags.exit.i
  tail call void @llvm.prefetch.p0(ptr %4, i32 1, i32 3, i32 1) #15
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %4, ptr %4, i32 1, ptr elementtype(i32) %4) #15, !srcloc !277
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !278
  %and1.i.i.i = and i32 %asmresult.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %phi.cmp.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %phi.cmp.i.i, label %folio_trylock.exit.if.end_crit_edge, label %folio_trylock.exit.if.then_crit_edge

folio_trylock.exit.if.then_crit_edge:             ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

folio_trylock.exit.if.end_crit_edge:              ; preds = %folio_trylock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %folio_trylock.exit.if.then_crit_edge, %folio_flags.exit.i.if.then_crit_edge
  tail call void @__folio_lock(ptr noundef %4) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %folio_trylock.exit.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @munlock_vma_page(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_swap_cache(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__anon_vma_prepare(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmu_notifier_change_pte(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__folio_lock(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_page_mkwrite(ptr noundef %vmf) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %page1 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %0 = ptrtoint ptr %page1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %page1, align 4
  %flags = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  store i32 3, ptr %flags, align 4
  %4 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vmf, align 4
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %5, i32 0, i32 14
  %6 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vm_file, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %f_mapping = getelementptr inbounds %struct.file, ptr %7, i32 0, i32 18
  %8 = ptrtoint ptr %f_mapping to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %f_mapping, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %i_flags = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %i_flags, align 4
  %and = and i32 %13, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, ptr %5, i32 0, i32 12
  %14 = ptrtoint ptr %vm_ops to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vm_ops, align 4
  %page_mkwrite = getelementptr inbounds %struct.vm_operations_struct, ptr %15, i32 0, i32 9
  %16 = ptrtoint ptr %page_mkwrite to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %page_mkwrite, align 4
  %call = tail call i32 %17(ptr noundef %vmf) #15
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %3, ptr %flags, align 4
  %and8 = and i32 %call, 2419
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end13, label %if.end.cleanup_crit_edge, !prof !218

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %and14 = and i32 %call, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %if.then24, label %do.body, !prof !230

if.then24:                                        ; preds = %if.end13
  tail call fastcc void @lock_page(ptr noundef %1)
  %mapping = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 1
  %19 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mapping, align 4
  %tobool25.not = icmp eq ptr %20, null
  br i1 %tobool25.not, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @unlock_page(ptr noundef %1) #15
  br label %cleanup

if.end27:                                         ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #17
  %or = or i32 %call, 512
  br label %cleanup

do.body:                                          ; preds = %if.end13
  %21 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %21, align 4
  %and.i.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %23, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  %24 = ptrtoint ptr %1 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %24, %if.end.i.i ]
  %25 = inttoptr i32 %retval.0.i.i to ptr
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %25, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %27)
  %cmp.i.not.i = icmp eq i32 %27, -1
  %28 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %21, align 4
  %and.i16.i = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !230

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !218

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i = add i32 %29, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %30 = ptrtoint ptr %1 to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %30, %if.end.i20.i ]
  %31 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %31, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #15, !srcloc !249
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !218

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i = add i32 %29, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  %32 = ptrtoint ptr %1 to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %32, %if.end.i27.i ]
  %33 = inttoptr i32 %retval.0.i28.i to ptr
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  %and1.i.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool29.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool29.not, label %if.then38, label %PageLocked.exit.cleanup_crit_edge, !prof !230

PageLocked.exit.cleanup_crit_edge:                ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then38:                                        ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %1, ptr noundef nonnull @.str.46) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2892, 0\0A.popsection", ""() #15, !srcloc !297
  unreachable

cleanup:                                          ; preds = %PageLocked.exit.cleanup_crit_edge, %if.end27, %if.then26, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then26 ], [ 2, %land.lhs.true.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ], [ %or, %if.end27 ], [ %call, %PageLocked.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @fault_dirty_shared_page(ptr nocapture noundef readonly %vmf) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %page2 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %2 = ptrtoint ptr %page2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %page2, align 4
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 12
  %4 = ptrtoint ptr %vm_ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vm_ops, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.land.end_crit_edge, label %land.rhs

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end

land.rhs:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %page_mkwrite4 = getelementptr inbounds %struct.vm_operations_struct, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %page_mkwrite4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %page_mkwrite4, align 4
  %tobool5 = icmp ne ptr %7, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry.land.end_crit_edge
  %8 = phi i1 [ false, %entry.land.end_crit_edge ], [ %tobool5, %land.rhs ]
  %call = tail call zeroext i1 @set_page_dirty(ptr noundef %3) #15
  %9 = getelementptr inbounds %struct.page, ptr %3, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %9, align 4
  %and.i2.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i)
  %tobool.not.i.i = icmp eq i32 %and.i2.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %11, -1
  br label %PageAnon.exit

if.end.i.i:                                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #17
  %12 = ptrtoint ptr %3 to i32
  br label %PageAnon.exit

PageAnon.exit:                                    ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %12, %if.end.i.i ]
  %13 = inttoptr i32 %retval.0.i.i to ptr
  %mapping.i.i = getelementptr inbounds %struct.anon.101, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mapping.i.i, align 4
  %16 = ptrtoint ptr %15 to i32
  %and.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %cmp.i.i.not, label %do.end15, label %if.then, !prof !218

if.then:                                          ; preds = %PageAnon.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %3, ptr noundef nonnull @.str.47) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2910, 0\0A.popsection", ""() #15, !srcloc !298
  unreachable

do.end15:                                         ; preds = %PageAnon.exit
  %call16 = tail call ptr @page_rmapping(ptr noundef %3) #15
  tail call void @unlock_page(ptr noundef %3) #15
  br i1 %8, label %do.end15.if.end20_crit_edge, label %if.then18

do.end15.if.end20_crit_edge:                      ; preds = %do.end15
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end20

if.then18:                                        ; preds = %do.end15
  call void @__sanitizer_cov_trace_pc() #17
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 14
  %17 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %vm_file, align 4
  %call19 = tail call i32 @file_update_time(ptr noundef %18) #15
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %do.end15.if.end20_crit_edge
  %brmerge = select i1 %call, i1 true, i1 %8
  %brmerge.not = xor i1 %brmerge, true
  %tobool23.not = icmp eq ptr %call16, null
  %or.cond = select i1 %brmerge.not, i1 true, i1 %tobool23.not
  br i1 %or.cond, label %if.end20.cleanup30_crit_edge, label %if.then24

if.end20.cleanup30_crit_edge:                     ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup30

if.then24:                                        ; preds = %if.end20
  %flags1.i = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %19 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags1.i, align 4
  %21 = and i32 %20, 44
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %21)
  %22 = icmp eq i32 %21, 4
  br i1 %22, label %if.then3.i, label %maybe_unlock_mmap_for_io.exit.thread

maybe_unlock_mmap_for_io.exit.thread:             ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @balance_dirty_pages_ratelimited(ptr noundef nonnull %call16) #15
  br label %cleanup30

if.then3.i:                                       ; preds = %if.then24
  %23 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %vmf, align 4
  %vm_file.i = getelementptr inbounds %struct.vm_area_struct, ptr %24, i32 0, i32 14
  %25 = ptrtoint ptr %vm_file.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %vm_file.i, align 4
  %f_count.i.i = getelementptr inbounds %struct.file, ptr %26, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %f_count.i.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %f_count.i.i, i32 1, i32 3, i32 1) #15
  %27 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %f_count.i.i, ptr %f_count.i.i, i32 1, ptr elementtype(i32) %f_count.i.i) #15, !srcloc !233
  %28 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vmf, align 4
  %vm_mm.i = getelementptr inbounds %struct.vm_area_struct, ptr %29, i32 0, i32 6
  %30 = ptrtoint ptr %vm_mm.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %vm_mm.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), ptr blockaddress(@fault_dirty_shared_page, %if.then.i.i.i)) #15
          to label %maybe_unlock_mmap_for_io.exit [label %if.then.i.i.i], !srcloc !217

if.then.i.i.i:                                    ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__mmap_lock_do_trace_released(ptr noundef %31, i1 noundef zeroext false) #15
  br label %maybe_unlock_mmap_for_io.exit

maybe_unlock_mmap_for_io.exit:                    ; preds = %if.then.i.i.i, %if.then3.i
  %mmap_lock.i.i = getelementptr inbounds %struct.anon.9, ptr %31, i32 0, i32 15
  tail call void @up_read(ptr noundef %mmap_lock.i.i) #15
  tail call void @balance_dirty_pages_ratelimited(ptr noundef nonnull %call16) #15
  %tobool26.not = icmp eq ptr %26, null
  br i1 %tobool26.not, label %maybe_unlock_mmap_for_io.exit.cleanup30_crit_edge, label %if.then27

maybe_unlock_mmap_for_io.exit.cleanup30_crit_edge: ; preds = %maybe_unlock_mmap_for_io.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup30

if.then27:                                        ; preds = %maybe_unlock_mmap_for_io.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @fput(ptr noundef nonnull %26) #15
  br label %cleanup30

cleanup30:                                        ; preds = %if.then27, %maybe_unlock_mmap_for_io.exit.cleanup30_crit_edge, %maybe_unlock_mmap_for_io.exit.thread, %if.end20.cleanup30_crit_edge
  %retval.1 = phi i32 [ 1024, %if.then27 ], [ 0, %if.end20.cleanup30_crit_edge ], [ 0, %maybe_unlock_mmap_for_io.exit.cleanup30_crit_edge ], [ 0, %maybe_unlock_mmap_for_io.exit.thread ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @file_update_time(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @balance_dirty_pages_ratelimited(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @debugfs_create_file_unsafe(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @no_llseek(ptr noundef, i64 noundef, i32 noundef) #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debugfs_attr_read(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debugfs_attr_write(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @fault_around_bytes_fops_open(ptr noundef %inode, ptr noundef %file) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @simple_attr_open(ptr noundef %inode, ptr noundef %file, ptr noundef nonnull @fault_around_bytes_get, ptr noundef nonnull @fault_around_bytes_set, ptr noundef nonnull @.str.49) #15
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_attr_release(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_attr_open(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @fault_around_bytes_get(ptr nocapture noundef readnone %data, ptr nocapture noundef writeonly %val) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fault_around_bytes, align 4
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %val to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %conv, ptr %val, align 8
  ret i32 0
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @fault_around_bytes_set(ptr nocapture noundef readnone %data, i64 noundef %val) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp8(i64 2101247, i64 %val)
  %cmp = icmp ugt i64 %val, 2101247
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_const_cmp8(i64 4096, i64 %val)
  %cmp1 = icmp ugt i64 %val, 4096
  %conv = trunc i64 %val to i32
  %0 = tail call i32 @llvm.ctlz.i32(i32 %conv, i1 true) #15, !range !299
  %sub.i.i.op.i = xor i32 %0, 31
  %sub.i.i.op.op.i = shl nuw i32 1, %sub.i.i.op.i
  %storemerge = select i1 %cmp1, i32 %sub.i.i.op.op.i, i32 4096
  store i32 %storemerge, ptr @fault_around_bytes, align 4
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #13

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_anonymous_page(ptr noundef %vmf) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_flags, align 4
  %and = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %pmd = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %4 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pmd, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool3.not = icmp eq i32 %7, 0
  br i1 %tobool3.not, label %land.lhs.true, label %if.end.if.end10_crit_edge, !prof !230

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10

land.lhs.true:                                    ; preds = %if.end
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %8 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vm_mm, align 4
  %call = tail call i32 @__pte_alloc(ptr noundef %9, ptr noundef %5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool8.not = icmp eq i32 %call, 0
  br i1 %tobool8.not, label %land.lhs.true.if.end10_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true.if.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10

if.end10:                                         ; preds = %land.lhs.true.if.end10_crit_edge, %if.end.if.end10_crit_edge
  %flags = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 1
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 4
  %and22 = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22)
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %if.then24, label %if.end59

if.then24:                                        ; preds = %if.end10
  %address = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %12 = load i32, ptr @zero_pfn, align 4
  %shl = shl i32 %12, 12
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 7
  %13 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vm_page_prot, align 4
  %or = or i32 %shl, %14
  %15 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pmd, align 4
  %17 = load ptr, ptr @mem_map, align 4
  %18 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %16, align 4
  %shr.i = lshr i32 %19, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %20 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %shr.i, %20
  %ptl.i.i = getelementptr %struct.page, ptr %17, i32 %sub.i, i32 1, i32 0, i32 3
  %21 = ptrtoint ptr %ptl.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ptl.i.i, align 4
  %add.ptr = getelementptr %struct.page, ptr %17, i32 %sub.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %23 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %23, 512
  %24 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %27, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %28 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 213
  %32 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %33, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr, i32 noundef %or.i) #15
  %34 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %address, align 4
  %shr.i226 = lshr i32 %35, 12
  %and.i = and i32 %shr.i226, 511
  %add.ptr35 = getelementptr i32, ptr %call.i.i, i32 %and.i
  %ptl = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %36 = ptrtoint ptr %ptl to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %22, ptr %ptl, align 4
  tail call void @_raw_spin_lock(ptr noundef %22) #15
  %pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %37 = ptrtoint ptr %pte to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %add.ptr35, ptr %pte, align 4
  %38 = ptrtoint ptr %add.ptr35 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %add.ptr35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool37.not = icmp eq i32 %39, 0
  br i1 %tobool37.not, label %if.end41, label %if.then24.do.body142_crit_edge

if.then24.do.body142_crit_edge:                   ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body142

if.end41:                                         ; preds = %if.then24
  %vm_mm27 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %40 = ptrtoint ptr %vm_mm27 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %vm_mm27, align 4
  %flags.i = getelementptr inbounds %struct.anon.9, ptr %41, i32 0, i32 43
  %42 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %flags.i, align 4
  %44 = lshr i32 %43, 21
  %45 = and i32 %44, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool44.not = icmp eq i32 %45, 0
  br i1 %tobool44.not, label %if.end46, label %if.end41.do.body142_crit_edge

if.end41.do.body142_crit_edge:                    ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body142

if.end46:                                         ; preds = %if.end41
  %46 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %vm_flags, align 4
  %and.i227 = and i32 %47, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i227)
  %tobool.i.not = icmp eq i32 %and.i227, 0
  br i1 %tobool.i.not, label %if.end46.setpte_crit_edge, label %do.body

if.end46.setpte_crit_edge:                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  br label %setpte

do.body:                                          ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  %48 = ptrtoint ptr %ptl to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %ptl, align 4
  tail call void @_raw_spin_unlock(ptr noundef %49) #15
  %50 = ptrtoint ptr %pte to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %pte, align 4
  tail call fastcc void @__kunmap_atomic(ptr noundef %51)
  %call57 = tail call i32 @handle_userfault(ptr noundef %vmf, i32 noundef 512) #15
  br label %cleanup

if.end59:                                         ; preds = %if.end10
  %anon_vma.i = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 11
  %52 = ptrtoint ptr %anon_vma.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %anon_vma.i, align 4
  %tobool.not.i = icmp eq ptr %53, null
  br i1 %tobool.not.i, label %anon_vma_prepare.exit, label %if.end59.if.end69_crit_edge, !prof !230

if.end59.if.end69_crit_edge:                      ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

anon_vma_prepare.exit:                            ; preds = %if.end59
  %call.i = tail call i32 @__anon_vma_prepare(ptr noundef %1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool61.not = icmp eq i32 %call.i, 0
  br i1 %tobool61.not, label %anon_vma_prepare.exit.if.end69_crit_edge, label %anon_vma_prepare.exit.cleanup_crit_edge, !prof !218

anon_vma_prepare.exit.cleanup_crit_edge:          ; preds = %anon_vma_prepare.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

anon_vma_prepare.exit.if.end69_crit_edge:         ; preds = %anon_vma_prepare.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end69:                                         ; preds = %anon_vma_prepare.exit.if.end69_crit_edge, %if.end59.if.end69_crit_edge
  %address70 = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %54 = ptrtoint ptr %address70 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %address70, align 4
  %call38.i.i.i.i = tail call ptr @__alloc_pages(i32 noundef 17829066, i32 noundef 0, i32 noundef 0, ptr noundef null) #15
  %tobool.not.i228 = icmp eq ptr %call38.i.i.i.i, null
  br i1 %tobool.not.i228, label %if.end69.cleanup_crit_edge, label %if.end74

if.end69.cleanup_crit_edge:                       ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end74:                                         ; preds = %if.end69
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cpu_user to i32))
  %56 = load ptr, ptr @cpu_user, align 4
  tail call void %56(ptr noundef nonnull %call38.i.i.i.i, i32 noundef %55) #15
  %57 = getelementptr inbounds %struct.page, ptr %call38.i.i.i.i, i32 0, i32 1
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %57, align 4
  %and.i230 = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i230)
  %tobool.not.i231 = icmp eq i32 %and.i230, 0
  br i1 %tobool.not.i231, label %if.end.i234, label %if.then.i233, !prof !218

if.then.i233:                                     ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i232 = add i32 %59, -1
  br label %_compound_head.exit

if.end.i234:                                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #17
  %60 = ptrtoint ptr %call38.i.i.i.i to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i234, %if.then.i233
  %retval.0.i235 = phi i32 [ %sub.i232, %if.then.i233 ], [ %60, %if.end.i234 ]
  %vm_mm76 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %61 = ptrtoint ptr %vm_mm76 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %vm_mm76, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@do_anonymous_page, %if.end80)) #15
          to label %mem_cgroup_charge.exit [label %if.end80], !srcloc !217

mem_cgroup_charge.exit:                           ; preds = %_compound_head.exit
  %63 = inttoptr i32 %retval.0.i235 to ptr
  %call1.i = tail call i32 @__mem_cgroup_charge(ptr noundef %63, ptr noundef %62, i32 noundef 3264) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %phi.cmp = icmp eq i32 %call1.i, 0
  br i1 %phi.cmp, label %mem_cgroup_charge.exit.if.end80_crit_edge, label %oom_free_page

mem_cgroup_charge.exit.if.end80_crit_edge:        ; preds = %mem_cgroup_charge.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end80

if.end80:                                         ; preds = %mem_cgroup_charge.exit.if.end80_crit_edge, %_compound_head.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@do_anonymous_page, %cgroup_throttle_swaprate.exit)) #15
          to label %if.end.i238 [label %cgroup_throttle_swaprate.exit], !srcloc !217

if.end.i238:                                      ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__cgroup_throttle_swaprate(ptr noundef nonnull %call38.i.i.i.i, i32 noundef 3264) #15
  br label %cgroup_throttle_swaprate.exit

cgroup_throttle_swaprate.exit:                    ; preds = %if.end.i238, %if.end80
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !293
  %64 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %57, align 4
  %and.i.i.i.i = and i32 %65, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %__SetPageUptodate.exit, label %if.then.i.i.i, !prof !218

if.then.i.i.i:                                    ; preds = %cgroup_throttle_swaprate.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef nonnull %call38.i.i.i.i, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

__SetPageUptodate.exit:                           ; preds = %cgroup_throttle_swaprate.exit
  %66 = ptrtoint ptr %call38.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %call38.i.i.i.i, align 4
  %or.i.i.i = or i32 %67, 4
  store i32 %or.i.i.i, ptr %call38.i.i.i.i, align 4
  %68 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %call38.i.i.i.i to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %68 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %69 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %69
  %shl81 = shl i32 %add, 12
  %vm_page_prot82 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 7
  %70 = ptrtoint ptr %vm_page_prot82 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %vm_page_prot82, align 4
  %or83 = or i32 %shl81, %71
  %72 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %vm_flags, align 4
  %and86 = and i32 %73, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86)
  %tobool87.not = icmp eq i32 %and86, 0
  %or.i.i = and i32 %or83, -193
  %and.i.i = or i32 %or.i.i, 64
  %entry2.0 = select i1 %tobool87.not, i32 %or83, i32 %and.i.i
  %74 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %pmd, align 4
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %75, align 4
  %shr.i239 = lshr i32 %77, 12
  %sub.i240 = sub i32 %shr.i239, %69
  %ptl.i.i241 = getelementptr %struct.page, ptr %68, i32 %sub.i240, i32 1, i32 0, i32 3
  %78 = ptrtoint ptr %ptl.i.i241 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %ptl.i.i241, align 4
  %add.ptr101 = getelementptr %struct.page, ptr %68, i32 %sub.i240
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %80 = load i32, ptr @pgprot_kernel, align 4
  %or.i242 = or i32 %80, 512
  %81 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i.i243 = and i32 %81, -16384
  %82 = inttoptr i32 %and.i.i.i.i.i243 to ptr
  %preempt_count.i.i.i.i244 = getelementptr inbounds %struct.thread_info, ptr %82, i32 0, i32 1
  %83 = ptrtoint ptr %preempt_count.i.i.i.i244 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %preempt_count.i.i.i.i244, align 4
  %add.i.i.i245 = add i32 %84, 1
  store volatile i32 %add.i.i.i245, ptr %preempt_count.i.i.i.i244, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !244
  %85 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i.i246 = and i32 %85, -16384
  %86 = inttoptr i32 %and.i.i.i1.i.i246 to ptr
  %task.i.i.i.i247 = getelementptr inbounds %struct.thread_info, ptr %86, i32 0, i32 2
  %87 = ptrtoint ptr %task.i.i.i.i247 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %task.i.i.i.i247, align 8
  %pagefault_disabled.i.i.i.i248 = getelementptr inbounds %struct.task_struct, ptr %88, i32 0, i32 213
  %89 = ptrtoint ptr %pagefault_disabled.i.i.i.i248 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %pagefault_disabled.i.i.i.i248, align 8
  %inc.i.i.i.i249 = add i32 %90, 1
  store i32 %inc.i.i.i.i249, ptr %pagefault_disabled.i.i.i.i248, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !245
  %call.i.i250 = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr101, i32 noundef %or.i242) #15
  %91 = ptrtoint ptr %address70 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %address70, align 4
  %shr.i251 = lshr i32 %92, 12
  %and.i252 = and i32 %shr.i251, 511
  %add.ptr105 = getelementptr i32, ptr %call.i.i250, i32 %and.i252
  %ptl106 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %93 = ptrtoint ptr %ptl106 to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %79, ptr %ptl106, align 4
  tail call void @_raw_spin_lock(ptr noundef %79) #15
  %pte108 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %94 = ptrtoint ptr %pte108 to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %add.ptr105, ptr %pte108, align 4
  %95 = ptrtoint ptr %add.ptr105 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %add.ptr105, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %tobool110.not = icmp eq i32 %96, 0
  br i1 %tobool110.not, label %if.end114, label %__SetPageUptodate.exit.release_crit_edge

__SetPageUptodate.exit.release_crit_edge:         ; preds = %__SetPageUptodate.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %release

if.end114:                                        ; preds = %__SetPageUptodate.exit
  %97 = ptrtoint ptr %vm_mm76 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %vm_mm76, align 4
  %flags.i253 = getelementptr inbounds %struct.anon.9, ptr %98, i32 0, i32 43
  %99 = ptrtoint ptr %flags.i253 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %flags.i253, align 4
  %101 = lshr i32 %100, 21
  %102 = and i32 %101, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %102)
  %tobool117.not = icmp eq i32 %102, 0
  br i1 %tobool117.not, label %if.end119, label %if.end114.release_crit_edge

if.end114.release_crit_edge:                      ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #17
  br label %release

if.end119:                                        ; preds = %if.end114
  %103 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %vm_flags, align 4
  %and.i255 = and i32 %104, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i255)
  %tobool.i256.not = icmp eq i32 %and.i255, 0
  br i1 %tobool.i256.not, label %if.end134, label %do.body122

do.body122:                                       ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #17
  %105 = ptrtoint ptr %ptl106 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %ptl106, align 4
  tail call void @_raw_spin_unlock(ptr noundef %106) #15
  %107 = ptrtoint ptr %pte108 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %pte108, align 4
  tail call fastcc void @__kunmap_atomic(ptr noundef %108)
  tail call fastcc void @put_page(ptr noundef nonnull %call38.i.i.i.i)
  %call133 = tail call i32 @handle_userfault(ptr noundef %vmf, i32 noundef 512) #15
  br label %cleanup

if.end134:                                        ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @add_mm_counter_fast(ptr noundef %98, i32 noundef 1, i32 noundef 1)
  %109 = ptrtoint ptr %address70 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %address70, align 4
  tail call void @page_add_new_anon_rmap(ptr noundef nonnull %call38.i.i.i.i, ptr noundef %1, i32 noundef %110, i1 noundef zeroext false) #15
  tail call void @lru_cache_add_inactive_or_unevictable(ptr noundef nonnull %call38.i.i.i.i, ptr noundef %1) #15
  br label %setpte

setpte:                                           ; preds = %if.end134, %if.end46.setpte_crit_edge
  %entry2.1 = phi i32 [ %entry2.0, %if.end134 ], [ %or, %if.end46.setpte_crit_edge ]
  %vm_mm137 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %111 = ptrtoint ptr %vm_mm137 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %vm_mm137, align 4
  %address138 = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %113 = ptrtoint ptr %address138 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %address138, align 4
  %pte139 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %115 = ptrtoint ptr %pte139 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %pte139, align 4
  tail call void @set_pte_at(ptr noundef %112, i32 noundef %114, ptr noundef %116, i32 noundef %entry2.1) #15
  br label %do.body142

do.body142:                                       ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.do.body142_crit_edge, %setpte, %if.end41.do.body142_crit_edge, %if.then24.do.body142_crit_edge
  %ret.1 = phi i32 [ 0, %setpte ], [ %45, %if.end41.do.body142_crit_edge ], [ 0, %if.then24.do.body142_crit_edge ], [ %ret.2, %folio_put_testzero.exit.i.i.do.body142_crit_edge ], [ %ret.2, %if.then.i4.i ]
  %ptl143 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 8
  %117 = ptrtoint ptr %ptl143 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %ptl143, align 4
  tail call void @_raw_spin_unlock(ptr noundef %118) #15
  %pte148 = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 7
  %119 = ptrtoint ptr %pte148 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %pte148, align 4
  tail call void @kunmap_local_indexed(ptr noundef %120) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !251
  %121 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i1.i = and i32 %121, -16384
  %122 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %122, i32 0, i32 2
  %123 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %124, i32 0, i32 213
  %125 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %126, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !252
  %127 = tail call i32 @llvm.read_register.i32(metadata !207) #15
  %and.i.i.i.i257 = and i32 %127, -16384
  %128 = inttoptr i32 %and.i.i.i.i257 to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %128, i32 0, i32 1
  %129 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %130, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br label %cleanup

release:                                          ; preds = %if.end114.release_crit_edge, %__SetPageUptodate.exit.release_crit_edge
  %ret.2 = phi i32 [ %102, %if.end114.release_crit_edge ], [ 0, %__SetPageUptodate.exit.release_crit_edge ]
  %131 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load volatile i32, ptr %57, align 4
  %and.i.i258 = and i32 %132, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i258)
  %tobool.not.i.i = icmp eq i32 %and.i.i258, 0
  br i1 %tobool.not.i.i, label %release._compound_head.exit.i_crit_edge, label %if.then.i.i, !prof !218

release._compound_head.exit.i_crit_edge:          ; preds = %release
  call void @__sanitizer_cov_trace_pc() #17
  br label %_compound_head.exit.i

if.then.i.i:                                      ; preds = %release
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i259 = add i32 %132, -1
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.then.i.i, %release._compound_head.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %sub.i.i259, %if.then.i.i ], [ %sub.ptr.lhs.cast, %release._compound_head.exit.i_crit_edge ]
  %133 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %133, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %134 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %135)
  %cmp.i.i.i.i = icmp eq i32 %135, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !230

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %133, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %136 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %136, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_anonymous_page, %if.then.i.i.i.i.i)) #15
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !217

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %133, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #15
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.do.body142_crit_edge

folio_put_testzero.exit.i.i.do.body142_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body142

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %133) #15
  br label %do.body142

oom_free_page:                                    ; preds = %mem_cgroup_charge.exit
  %137 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %57, align 4
  %and.i.i260 = and i32 %138, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i260)
  %tobool.not.i.i261 = icmp eq i32 %and.i.i260, 0
  br i1 %tobool.not.i.i261, label %if.end.i.i264, label %if.then.i.i263, !prof !218

if.then.i.i263:                                   ; preds = %oom_free_page
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i262 = add i32 %138, -1
  br label %_compound_head.exit.i269

if.end.i.i264:                                    ; preds = %oom_free_page
  call void @__sanitizer_cov_trace_pc() #17
  %139 = ptrtoint ptr %call38.i.i.i.i to i32
  br label %_compound_head.exit.i269

_compound_head.exit.i269:                         ; preds = %if.end.i.i264, %if.then.i.i263
  %retval.0.i.i265 = phi i32 [ %sub.i.i262, %if.then.i.i263 ], [ %139, %if.end.i.i264 ]
  %140 = inttoptr i32 %retval.0.i.i265 to ptr
  %_refcount.i.i.i.i.i266 = getelementptr inbounds %struct.page, ptr %140, i32 0, i32 3
  %call.i.i.i.i.i.i.i267 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i266, i32 noundef 4) #15
  %141 = ptrtoint ptr %_refcount.i.i.i.i.i266 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load volatile i32, ptr %_refcount.i.i.i.i.i266, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %142)
  %cmp.i.i.i.i268 = icmp eq i32 %142, 0
  br i1 %cmp.i.i.i.i268, label %if.then.i.i.i.i270, label %do.end5.i.i.i.i274, !prof !230

if.then.i.i.i.i270:                               ; preds = %_compound_head.exit.i269
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %140, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i274:                               ; preds = %_compound_head.exit.i269
  %call.i.i.i10.i.i.i.i271 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i266, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i266, i32 1, i32 3, i32 1) #15
  %143 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i266, ptr %_refcount.i.i.i.i.i266, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i266) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i272 = extractvalue { i32, i32 } %143, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i272)
  %cmp.i.i.i.i.i.i.i273 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i272, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_anonymous_page, %if.then.i.i.i.i.i276)) #15
          to label %folio_put_testzero.exit.i.i277 [label %if.then.i.i.i.i.i276], !srcloc !217

if.then.i.i.i.i.i276:                             ; preds = %do.end5.i.i.i.i274
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i275 = zext i1 %cmp.i.i.i.i.i.i.i273 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %140, i32 noundef -1, i32 noundef %conv.i.i.i.i.i275) #15
  br label %folio_put_testzero.exit.i.i277

folio_put_testzero.exit.i.i277:                   ; preds = %if.then.i.i.i.i.i276, %do.end5.i.i.i.i274
  br i1 %cmp.i.i.i.i.i.i.i273, label %if.then.i4.i278, label %folio_put_testzero.exit.i.i277.cleanup_crit_edge

folio_put_testzero.exit.i.i277.cleanup_crit_edge: ; preds = %folio_put_testzero.exit.i.i277
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then.i4.i278:                                  ; preds = %folio_put_testzero.exit.i.i277
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %140) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then.i4.i278, %folio_put_testzero.exit.i.i277.cleanup_crit_edge, %do.body142, %do.body122, %if.end69.cleanup_crit_edge, %anon_vma_prepare.exit.cleanup_crit_edge, %do.body, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1, %do.body142 ], [ %call133, %do.body122 ], [ %call57, %do.body ], [ 2, %entry.cleanup_crit_edge ], [ 1, %land.lhs.true.cleanup_crit_edge ], [ 1, %anon_vma_prepare.exit.cleanup_crit_edge ], [ 1, %folio_put_testzero.exit.i.i277.cleanup_crit_edge ], [ 1, %if.then.i4.i278 ], [ 1, %if.end69.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_cow_fault(ptr noundef %vmf) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %anon_vma.i = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %anon_vma.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %anon_vma.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %anon_vma_prepare.exit, label %entry.if.end_crit_edge, !prof !230

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

anon_vma_prepare.exit:                            ; preds = %entry
  %call.i = tail call i32 @__anon_vma_prepare(ptr noundef %1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %anon_vma_prepare.exit.if.end_crit_edge, label %anon_vma_prepare.exit.cleanup_crit_edge, !prof !218

anon_vma_prepare.exit.cleanup_crit_edge:          ; preds = %anon_vma_prepare.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

anon_vma_prepare.exit.if.end_crit_edge:           ; preds = %anon_vma_prepare.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %anon_vma_prepare.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 17829066, i32 noundef 0, i32 noundef 0, ptr noundef null) #15
  %cow_page = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 5
  %4 = ptrtoint ptr %cow_page to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call38.i.i.i, ptr %cow_page, align 4
  %tobool6.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool6.not, label %if.end.cleanup_crit_edge, label %if.end8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %5 = getelementptr inbounds %struct.page, ptr %call38.i.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %and.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i70 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i70, label %if.end.i71, label %if.then.i, !prof !218

if.then.i:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i = add i32 %7, -1
  br label %_compound_head.exit

if.end.i71:                                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  %8 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i71, %if.then.i
  %retval.0.i72 = phi i32 [ %sub.i, %if.then.i ], [ %8, %if.end.i71 ]
  %vm_mm = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %9 = ptrtoint ptr %vm_mm to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vm_mm, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@do_cow_fault, %if.end15)) #15
          to label %mem_cgroup_charge.exit [label %if.end15], !srcloc !217

mem_cgroup_charge.exit:                           ; preds = %_compound_head.exit
  %11 = inttoptr i32 %retval.0.i72 to ptr
  %call1.i = tail call i32 @__mem_cgroup_charge(ptr noundef %11, ptr noundef %10, i32 noundef 3264) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %phi.cmp = icmp eq i32 %call1.i, 0
  br i1 %phi.cmp, label %mem_cgroup_charge.exit.if.end15_crit_edge, label %if.then13

mem_cgroup_charge.exit.if.end15_crit_edge:        ; preds = %mem_cgroup_charge.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15

if.then13:                                        ; preds = %mem_cgroup_charge.exit
  %12 = ptrtoint ptr %cow_page to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cow_page, align 4
  %14 = getelementptr inbounds %struct.page, ptr %13, i32 0, i32 1
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %16, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #17
  %17 = ptrtoint ptr %13 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %17, %if.end.i.i ]
  %18 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %18, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  %19 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.i.i.i.i = icmp eq i32 %20, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !230

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %18, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #15
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %21, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_cow_fault, %if.then.i.i.i.i.i)) #15
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !217

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %18, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #15
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.cleanup_crit_edge

folio_put_testzero.exit.i.i.cleanup_crit_edge:    ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %18) #15
  br label %cleanup

if.end15:                                         ; preds = %mem_cgroup_charge.exit.if.end15_crit_edge, %_compound_head.exit
  %22 = ptrtoint ptr %cow_page to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %cow_page, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@do_cow_fault, %cgroup_throttle_swaprate.exit)) #15
          to label %if.end.i75 [label %cgroup_throttle_swaprate.exit], !srcloc !217

if.end.i75:                                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__cgroup_throttle_swaprate(ptr noundef %23, i32 noundef 3264) #15
  br label %cgroup_throttle_swaprate.exit

cgroup_throttle_swaprate.exit:                    ; preds = %if.end.i75, %if.end15
  %call17 = tail call fastcc i32 @__do_fault(ptr noundef %vmf)
  %and = and i32 %call17, 3443
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool18.not = icmp eq i32 %and, 0
  br i1 %tobool18.not, label %if.end26, label %cgroup_throttle_swaprate.exit.uncharge_out_crit_edge, !prof !218

cgroup_throttle_swaprate.exit.uncharge_out_crit_edge: ; preds = %cgroup_throttle_swaprate.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %uncharge_out

if.end26:                                         ; preds = %cgroup_throttle_swaprate.exit
  %and27 = and i32 %call17, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27)
  %tobool28.not = icmp eq i32 %and27, 0
  br i1 %tobool28.not, label %if.end30, label %if.end26.cleanup_crit_edge

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end30:                                         ; preds = %if.end26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_user_fns, ptr @cpu_user, i32 0, i32 1) to i32))
  %24 = load ptr, ptr getelementptr inbounds (%struct.cpu_user_fns, ptr @cpu_user, i32 0, i32 1), align 4
  %25 = ptrtoint ptr %cow_page to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %cow_page, align 4
  %page = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %27 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %page, align 4
  %address = getelementptr inbounds %struct.anon.73, ptr %vmf, i32 0, i32 3
  %29 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %address, align 4
  tail call void %24(ptr noundef %26, ptr noundef %28, i32 noundef %30, ptr noundef %1) #15
  %31 = ptrtoint ptr %cow_page to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %cow_page, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !293
  %33 = getelementptr inbounds %struct.page, ptr %32, i32 0, i32 1
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  %and.i.i.i.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %__SetPageUptodate.exit, label %if.then.i.i.i, !prof !218

if.then.i.i.i:                                    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %32, ptr noundef nonnull @.str.28) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #15, !srcloc !270
  unreachable

__SetPageUptodate.exit:                           ; preds = %if.end30
  %36 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %32, align 4
  %or.i.i.i = or i32 %37, 4
  store i32 %or.i.i.i, ptr %32, align 4
  %call33 = tail call i32 @finish_fault(ptr noundef %vmf)
  %or = or i32 %call33, %call17
  %38 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %page, align 4
  tail call void @unlock_page(ptr noundef %39) #15
  %40 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %page, align 4
  %42 = getelementptr inbounds %struct.page, ptr %41, i32 0, i32 1
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %42, align 4
  %and.i.i76 = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i76)
  %tobool.not.i.i77 = icmp eq i32 %and.i.i76, 0
  br i1 %tobool.not.i.i77, label %if.end.i.i80, label %if.then.i.i79, !prof !218

if.then.i.i79:                                    ; preds = %__SetPageUptodate.exit
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i78 = add i32 %44, -1
  br label %_compound_head.exit.i85

if.end.i.i80:                                     ; preds = %__SetPageUptodate.exit
  call void @__sanitizer_cov_trace_pc() #17
  %45 = ptrtoint ptr %41 to i32
  br label %_compound_head.exit.i85

_compound_head.exit.i85:                          ; preds = %if.end.i.i80, %if.then.i.i79
  %retval.0.i.i81 = phi i32 [ %sub.i.i78, %if.then.i.i79 ], [ %45, %if.end.i.i80 ]
  %46 = inttoptr i32 %retval.0.i.i81 to ptr
  %_refcount.i.i.i.i.i82 = getelementptr inbounds %struct.page, ptr %46, i32 0, i32 3
  %call.i.i.i.i.i.i.i83 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i82, i32 noundef 4) #15
  %47 = ptrtoint ptr %_refcount.i.i.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %_refcount.i.i.i.i.i82, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp.i.i.i.i84 = icmp eq i32 %48, 0
  br i1 %cmp.i.i.i.i84, label %if.then.i.i.i.i86, label %do.end5.i.i.i.i90, !prof !230

if.then.i.i.i.i86:                                ; preds = %_compound_head.exit.i85
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %46, ptr noundef nonnull @.str.45) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #15, !srcloc !281
  unreachable

do.end5.i.i.i.i90:                                ; preds = %_compound_head.exit.i85
  %call.i.i.i10.i.i.i.i87 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i82, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !282
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i82, i32 1, i32 3, i32 1) #15
  %49 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i82, ptr %_refcount.i.i.i.i.i82, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i82) #15, !srcloc !283
  %asmresult.i.i.i.i.i.i.i.i.i.i88 = extractvalue { i32, i32 } %49, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !284
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i88)
  %cmp.i.i.i.i.i.i.i89 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i88, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@do_cow_fault, %if.then.i.i.i.i.i92)) #15
          to label %folio_put_testzero.exit.i.i93 [label %if.then.i.i.i.i.i92], !srcloc !217

if.then.i.i.i.i.i92:                              ; preds = %do.end5.i.i.i.i90
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i.i.i.i91 = zext i1 %cmp.i.i.i.i.i.i.i89 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %46, i32 noundef -1, i32 noundef %conv.i.i.i.i.i91) #15
  br label %folio_put_testzero.exit.i.i93

folio_put_testzero.exit.i.i93:                    ; preds = %if.then.i.i.i.i.i92, %do.end5.i.i.i.i90
  br i1 %cmp.i.i.i.i.i.i.i89, label %if.then.i4.i94, label %folio_put_testzero.exit.i.i93.put_page.exit95_crit_edge

folio_put_testzero.exit.i.i93.put_page.exit95_crit_edge: ; preds = %folio_put_testzero.exit.i.i93
  call void @__sanitizer_cov_trace_pc() #17
  br label %put_page.exit95

if.then.i4.i94:                                   ; preds = %folio_put_testzero.exit.i.i93
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__put_page(ptr noundef %46) #15
  br label %put_page.exit95

put_page.exit95:                                  ; preds = %if.then.i4.i94, %folio_put_testzero.exit.i.i93.put_page.exit95_crit_edge
  %and36 = and i32 %or, 3443
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  br i1 %tobool37.not, label %put_page.exit95.cleanup_crit_edge, label %put_page.exit95.uncharge_out_crit_edge, !prof !218

put_page.exit95.uncharge_out_crit_edge:           ; preds = %put_page.exit95
  call void @__sanitizer_cov_trace_pc() #17
  br label %uncharge_out

put_page.exit95.cleanup_crit_edge:                ; preds = %put_page.exit95
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

uncharge_out:                                     ; preds = %put_page.exit95.uncharge_out_crit_edge, %cgroup_throttle_swaprate.exit.uncharge_out_crit_edge
  %ret.0 = phi i32 [ %call17, %cgroup_throttle_swaprate.exit.uncharge_out_crit_edge ], [ %or, %put_page.exit95.uncharge_out_crit_edge ]
  %50 = ptrtoint ptr %cow_page to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %cow_page, align 4
  tail call fastcc void @put_page(ptr noundef %51)
  br label %cleanup

cleanup:                                          ; preds = %uncharge_out, %put_page.exit95.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.then.i4.i, %folio_put_testzero.exit.i.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %anon_vma_prepare.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %uncharge_out ], [ 1, %anon_vma_prepare.exit.cleanup_crit_edge ], [ 1, %if.end.cleanup_crit_edge ], [ %call17, %if.end26.cleanup_crit_edge ], [ %or, %put_page.exit95.cleanup_crit_edge ], [ 1, %folio_put_testzero.exit.i.i.cleanup_crit_edge ], [ 1, %if.then.i4.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__do_fault(ptr noundef %vmf) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vmf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vmf, align 4
  %pmd = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 2
  %2 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pmd, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end7_crit_edge

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

land.lhs.true:                                    ; preds = %entry
  %prealloc_pte = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 9
  %6 = ptrtoint ptr %prealloc_pte to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prealloc_pte, align 4
  %tobool2.not = icmp eq ptr %7, null
  br i1 %tobool2.not, label %if.then, label %land.lhs.true.if.end7_crit_edge

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

if.then:                                          ; preds = %land.lhs.true
  %call = tail call fastcc ptr @pte_alloc_one()
  %8 = ptrtoint ptr %prealloc_pte to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call, ptr %prealloc_pte, align 4
  %tobool5.not = icmp eq ptr %call, null
  br i1 %tobool5.not, label %if.then.cleanup_crit_edge, label %if.then.if.end7_crit_edge

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end7:                                          ; preds = %if.then.if.end7_crit_edge, %land.lhs.true.if.end7_crit_edge, %entry.if.end7_crit_edge
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 12
  %9 = ptrtoint ptr %vm_ops to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vm_ops, align 4
  %fault = getelementptr inbounds %struct.vm_operations_struct, ptr %10, i32 0, i32 5
  %11 = ptrtoint ptr %fault to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %fault, align 4
  %call8 = tail call i32 %12(ptr noundef %vmf) #15
  %and = and i32 %call8, 7539
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool9.not = icmp eq i32 %and, 0
  br i1 %tobool9.not, label %if.end13, label %if.end7.cleanup_crit_edge, !prof !218

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end13:                                         ; preds = %if.end7
  %page = getelementptr inbounds %struct.vm_fault, ptr %vmf, i32 0, i32 6
  %and31 = and i32 %call8, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  %13 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %page, align 4
  br i1 %tobool32.not, label %if.then41, label %do.body, !prof !230

if.then41:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @lock_page(ptr noundef %14)
  br label %cleanup

do.body:                                          ; preds = %if.end13
  %15 = getelementptr inbounds %struct.page, ptr %14, i32 0, i32 1
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %and.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !218

if.then.i.i:                                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = add i32 %17, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  %18 = ptrtoint ptr %14 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %18, %if.end.i.i ]
  %19 = inttoptr i32 %retval.0.i.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %cmp.i.not.i = icmp eq i32 %21, -1
  %22 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %15, align 4
  %and.i16.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !230

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !218

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i18.i = add i32 %23, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %24 = ptrtoint ptr %14 to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %24, %if.end.i20.i ]
  %25 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %25, ptr noundef nonnull @.str.32) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #15, !srcloc !249
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !218

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i25.i = add i32 %23, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  %26 = ptrtoint ptr %14 to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %26, %if.end.i27.i ]
  %27 = inttoptr i32 %retval.0.i28.i to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  %and1.i.i = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool45.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool45.not, label %if.then54, label %PageLocked.exit.cleanup_crit_edge, !prof !230

PageLocked.exit.cleanup_crit_edge:                ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then54:                                        ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dump_page(ptr noundef %14, ptr noundef nonnull @.str.51) #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/memory.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3884, 0\0A.popsection", ""() #15, !srcloc !300
  unreachable

cleanup:                                          ; preds = %PageLocked.exit.cleanup_crit_edge, %if.then41, %if.end7.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.then.cleanup_crit_edge ], [ %call8, %if.end7.cleanup_crit_edge ], [ %call8, %PageLocked.exit.cleanup_crit_edge ], [ %call8, %if.then41 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__perf_sw_event(i32 noundef, i64 noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @down_read_killable(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmap_high(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_high(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_released(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #13

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #13

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #13

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #13

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #13

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #15

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #16 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 53)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #16 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 53)
  ret void
}

attributes #0 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #5 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nounwind readonly }
attributes #10 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #11 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nounwind }
attributes #16 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #17 = { nomerge }
attributes #18 = { cold nounwind }
attributes #19 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !37, !39, !41, !43, !45, !47, !49, !51, !53, !55, !57, !59, !61, !63, !65, !67, !68, !69, !70, !72, !74, !76, !78, !80, !82, !84, !86, !87, !89, !90, !91, !92, !94, !95, !97, !99, !101, !102, !103, !105, !107, !109, !111, !112, !113, !114, !116, !117, !118, !120, !122, !123, !124, !126, !127, !128, !130, !132, !134, !136, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !170, !172, !174, !176, !177, !179, !180, !181, !183, !184, !186, !188, !190, !192, !194, !196, !198, !199, !201, !203, !205}
!llvm.named.register.sp = !{!207}
!llvm.module.flags = !{!208, !209, !210, !211, !212, !213, !214, !215}
!llvm.ident = !{!216}

!0 = !{ptr @__ksymtab_max_mapnr, !1, !"__ksymtab_max_mapnr", i1 false, i1 false}
!1 = !{!"../mm/memory.c", i32 96, i32 1}
!2 = !{ptr @__ksymtab_mem_map, !3, !"__ksymtab_mem_map", i1 false, i1 false}
!3 = !{!"../mm/memory.c", i32 99, i32 1}
!4 = !{ptr @__ksymtab_high_memory, !5, !"__ksymtab_high_memory", i1 false, i1 false}
!5 = !{!"../mm/memory.c", i32 110, i32 1}
!6 = !{ptr @randomize_va_space, !7, !"randomize_va_space", i1 false, i1 false}
!7 = !{!"../mm/memory.c", i32 118, i32 5}
!8 = !{ptr @__setup_disable_randmaps, !9, !"__setup_disable_randmaps", i1 false, i1 false}
!9 = !{!"../mm/memory.c", i32 154, i32 1}
!10 = !{ptr @__ksymtab_zero_pfn, !11, !"__ksymtab_zero_pfn", i1 false, i1 false}
!11 = !{!"../mm/memory.c", i32 157, i32 1}
!12 = !{ptr @__initcall__kmod_memory__339_169_init_zero_pfnearly, !13, !"__initcall__kmod_memory__339_169_init_zero_pfnearly", i1 false, i1 false}
!13 = !{!"../mm/memory.c", i32 169, i32 1}
!14 = !{ptr @__ksymtab_zap_vma_ptes, !15, !"__ksymtab_zap_vma_ptes", i1 false, i1 false}
!15 = !{!"../mm/memory.c", i32 1714, i32 1}
!16 = !{ptr @__ksymtab_vm_insert_pages, !17, !"__ksymtab_vm_insert_pages", i1 false, i1 false}
!17 = !{!"../mm/memory.c", i32 1912, i32 1}
!18 = !{ptr @__ksymtab_vm_insert_page, !19, !"__ksymtab_vm_insert_page", i1 false, i1 false}
!19 = !{!"../mm/memory.c", i32 1957, i32 1}
!20 = !{ptr @__ksymtab_vm_map_pages, !21, !"__ksymtab_vm_map_pages", i1 false, i1 false}
!21 = !{!"../mm/memory.c", i32 2018, i32 1}
!22 = !{ptr @__ksymtab_vm_map_pages_zero, !23, !"__ksymtab_vm_map_pages_zero", i1 false, i1 false}
!23 = !{!"../mm/memory.c", i32 2038, i32 1}
!24 = !{ptr @__ksymtab_vmf_insert_pfn_prot, !25, !"__ksymtab_vmf_insert_pfn_prot", i1 false, i1 false}
!25 = !{!"../mm/memory.c", i32 2140, i32 1}
!26 = !{ptr @__ksymtab_vmf_insert_pfn, !27, !"__ksymtab_vmf_insert_pfn", i1 false, i1 false}
!27 = !{!"../mm/memory.c", i32 2167, i32 1}
!28 = !{ptr @__ksymtab_vmf_insert_mixed_prot, !29, !"__ksymtab_vmf_insert_mixed_prot", i1 false, i1 false}
!29 = !{!"../mm/memory.c", i32 2260, i32 1}
!30 = !{ptr @__ksymtab_vmf_insert_mixed, !31, !"__ksymtab_vmf_insert_mixed", i1 false, i1 false}
!31 = !{!"../mm/memory.c", i32 2267, i32 1}
!32 = !{ptr @__ksymtab_vmf_insert_mixed_mkwrite, !33, !"__ksymtab_vmf_insert_mixed_mkwrite", i1 false, i1 false}
!33 = !{!"../mm/memory.c", i32 2279, i32 1}
!34 = distinct !{null, !35, !"__already_done", i1 false, i1 false}
!35 = !{!"../mm/memory.c", i32 2392, i32 6}
!36 = !{ptr @.str, !35, !"<string literal>", i1 false, i1 false}
!37 = !{ptr @__ksymtab_remap_pfn_range, !38, !"__ksymtab_remap_pfn_range", i1 false, i1 false}
!38 = !{!"../mm/memory.c", i32 2462, i32 1}
!39 = !{ptr @__ksymtab_vm_iomap_memory, !40, !"__ksymtab_vm_iomap_memory", i1 false, i1 false}
!40 = !{!"../mm/memory.c", i32 2511, i32 1}
!41 = !{ptr @__ksymtab_apply_to_page_range, !42, !"__ksymtab_apply_to_page_range", i1 false, i1 false}
!42 = !{!"../mm/memory.c", i32 2712, i32 1}
!43 = !{ptr @__ksymtab_apply_to_existing_page_range, !44, !"__ksymtab_apply_to_existing_page_range", i1 false, i1 false}
!44 = !{!"../mm/memory.c", i32 2726, i32 1}
!45 = distinct !{null, !46, !"__already_done", i1 false, i1 false}
!46 = !{!"../mm/memory.c", i32 3162, i32 2}
!47 = !{ptr @__ksymtab_unmap_mapping_pages, !48, !"__ksymtab_unmap_mapping_pages", i1 false, i1 false}
!48 = !{!"../mm/memory.c", i32 3419, i32 1}
!49 = !{ptr @__ksymtab_unmap_mapping_range, !50, !"__ksymtab_unmap_mapping_range", i1 false, i1 false}
!50 = !{!"../mm/memory.c", i32 3454, i32 1}
!51 = !{ptr @__initcall__kmod_memory__383_4105_fault_around_debugfs7, !52, !"__initcall__kmod_memory__383_4105_fault_around_debugfs7", i1 false, i1 false}
!52 = !{!"../mm/memory.c", i32 4105, i32 1}
!53 = distinct !{null, !54, !"__already_done", i1 false, i1 false}
!54 = !{!"../mm/memory.c", i32 4780, i32 2}
!55 = !{ptr @__ksymtab_handle_mm_fault, !56, !"__ksymtab_handle_mm_fault", i1 false, i1 false}
!56 = !{!"../mm/memory.c", i32 4821, i32 1}
!57 = !{ptr @__ksymtab_follow_pte, !58, !"__ksymtab_follow_pte", i1 false, i1 false}
!58 = !{!"../mm/memory.c", i32 4987, i32 1}
!59 = !{ptr @__ksymtab_follow_pfn, !60, !"__ksymtab_follow_pfn", i1 false, i1 false}
!60 = !{!"../mm/memory.c", i32 5019, i32 1}
!61 = !{ptr @__ksymtab_access_process_vm, !62, !"__ksymtab_access_process_vm", i1 false, i1 false}
!62 = !{!"../mm/memory.c", i32 5221, i32 1}
!63 = !{ptr @.str.1, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../mm/memory.c", i32 5246, i32 9}
!65 = !{ptr @.str.2, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../mm/memory.c", i32 5247, i32 4}
!67 = !{ptr @.str.3, !66, !"<string literal>", i1 false, i1 false}
!68 = !{ptr @print_vma_addr._entry, !66, !"_entry", i1 false, i1 false}
!69 = !{ptr @print_vma_addr._entry_ptr, !66, !"_entry_ptr", i1 false, i1 false}
!70 = !{ptr @__ksymtab___might_fault, !71, !"__ksymtab___might_fault", i1 false, i1 false}
!71 = !{!"../mm/memory.c", i32 5275, i32 1}
!72 = !{ptr @.str.4, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../mm/memory.c", i32 5459, i32 38}
!74 = !{ptr @max_mapnr, !75, !"max_mapnr", i1 false, i1 false}
!75 = !{!"../mm/memory.c", i32 95, i32 15}
!76 = !{ptr @mem_map, !77, !"mem_map", i1 false, i1 false}
!77 = !{!"../mm/memory.c", i32 98, i32 14}
!78 = !{ptr @high_memory, !79, !"high_memory", i1 false, i1 false}
!79 = !{!"../mm/memory.c", i32 109, i32 7}
!80 = !{ptr @zero_pfn, !81, !"zero_pfn", i1 false, i1 false}
!81 = !{!"../mm/memory.c", i32 156, i32 15}
!82 = !{ptr @highest_memmap_pfn, !83, !"highest_memmap_pfn", i1 false, i1 false}
!83 = !{!"../mm/memory.c", i32 159, i32 15}
!84 = !{ptr @page_ptl_cachep, !85, !"page_ptl_cachep", i1 false, i1 false}
!85 = !{!"../mm/memory.c", i32 5455, i32 27}
!86 = !{ptr @__setup_str_disable_randmaps, !9, !"__setup_str_disable_randmaps", i1 false, i1 false}
!87 = distinct !{null, !88, !"__already_done", i1 false, i1 false}
!88 = !{!"../include/trace/events/kmem.h", i32 366, i32 1}
!89 = !{ptr @.str.5, !88, !"<string literal>", i1 false, i1 false}
!90 = distinct !{null, !88, !"__warned", i1 false, i1 false}
!91 = !{ptr @.str.6, !88, !"<string literal>", i1 false, i1 false}
!92 = distinct !{null, !93, !"__already_done", i1 false, i1 false}
!93 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!94 = !{ptr @.str.7, !93, !"<string literal>", i1 false, i1 false}
!95 = !{ptr @.str.8, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../include/linux/page-flags.h", i32 912, i32 1}
!97 = !{ptr @.str.9, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../include/linux/mm.h", i32 2299, i32 2}
!99 = !{ptr @ptlock_init.__key, !100, !"__key", i1 false, i1 false}
!100 = !{!"../include/linux/mm.h", i32 2302, i32 2}
!101 = !{ptr @.str.10, !100, !"<string literal>", i1 false, i1 false}
!102 = !{ptr @.str.11, !96, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @print_bad_pte.resume, !104, !"resume", i1 false, i1 false}
!104 = !{!"../mm/memory.c", i32 525, i32 23}
!105 = !{ptr @print_bad_pte.nr_shown, !106, !"nr_shown", i1 false, i1 false}
!106 = !{!"../mm/memory.c", i32 526, i32 23}
!107 = !{ptr @print_bad_pte.nr_unshown, !108, !"nr_unshown", i1 false, i1 false}
!108 = !{!"../mm/memory.c", i32 527, i32 23}
!109 = !{ptr @.str.12, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../mm/memory.c", i32 539, i32 4}
!111 = !{ptr @.str.13, !110, !"<string literal>", i1 false, i1 false}
!112 = !{ptr @print_bad_pte._entry, !110, !"_entry", i1 false, i1 false}
!113 = !{ptr @print_bad_pte._entry_ptr, !110, !"_entry_ptr", i1 false, i1 false}
!114 = !{ptr @.str.15, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../mm/memory.c", i32 551, i32 2}
!116 = !{ptr @print_bad_pte._entry.14, !115, !"_entry", i1 false, i1 false}
!117 = !{ptr @print_bad_pte._entry_ptr.16, !115, !"_entry_ptr", i1 false, i1 false}
!118 = !{ptr @.str.17, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../mm/memory.c", i32 555, i32 19}
!120 = !{ptr @.str.19, !121, !"<string literal>", i1 false, i1 false}
!121 = !{!"../mm/memory.c", i32 556, i32 2}
!122 = !{ptr @print_bad_pte._entry.18, !121, !"_entry", i1 false, i1 false}
!123 = !{ptr @print_bad_pte._entry_ptr.20, !121, !"_entry_ptr", i1 false, i1 false}
!124 = !{ptr @.str.22, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../mm/memory.c", i32 558, i32 2}
!126 = !{ptr @print_bad_pte._entry.21, !125, !"_entry", i1 false, i1 false}
!127 = !{ptr @print_bad_pte._entry_ptr.23, !125, !"_entry_ptr", i1 false, i1 false}
!128 = !{ptr @.str.24, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../include/linux/mmu_notifier.h", i32 454, i32 2}
!130 = !{ptr @.str.25, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../include/linux/mmap_lock.h", i32 161, i32 2}
!132 = distinct !{null, !133, !"__already_done", i1 false, i1 false}
!133 = !{!"../mm/memory.c", i32 1071, i32 4}
!134 = distinct !{null, !135, !"__already_done", i1 false, i1 false}
!135 = !{!"../mm/memory.c", i32 1103, i32 3}
!136 = distinct !{null, !137, !"__already_done", i1 false, i1 false}
!137 = !{!"../mm/memory.c", i32 1116, i32 3}
!138 = !{ptr @.str.28, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../include/linux/page-flags.h", i32 260, i32 2}
!140 = distinct !{null, !141, !"<string literal>", i1 false, i1 false}
!141 = !{!"../include/linux/page-flags.h", i32 261, i32 2}
!142 = distinct !{null, !143, !"__already_done", i1 false, i1 false}
!143 = !{!"../mm/memory.c", i32 734, i32 3}
!144 = !{ptr @.str.30, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../include/linux/page-flags.h", i32 698, i32 1}
!146 = !{ptr @.str.31, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../include/linux/mm.h", i32 910, i32 2}
!148 = !{ptr @.str.32, !149, !"<string literal>", i1 false, i1 false}
!149 = !{!"../include/linux/page-flags.h", i32 428, i32 1}
!150 = distinct !{null, !151, !"__already_done", i1 false, i1 false}
!151 = !{!"../mm/memory.c", i32 2063, i32 5}
!152 = distinct !{null, !153, !"__already_done", i1 false, i1 false}
!153 = !{!"../mm/memory.c", i32 2684, i32 7}
!154 = distinct !{null, !155, !"__already_done", i1 false, i1 false}
!155 = !{!"../mm/memory.c", i32 2686, i32 26}
!156 = distinct !{null, !157, !"__already_done", i1 false, i1 false}
!157 = !{!"../mm/memory.c", i32 2650, i32 7}
!158 = distinct !{null, !159, !"__already_done", i1 false, i1 false}
!159 = !{!"../mm/memory.c", i32 2652, i32 26}
!160 = distinct !{null, !161, !"__already_done", i1 false, i1 false}
!161 = !{!"../mm/memory.c", i32 2614, i32 7}
!162 = distinct !{null, !163, !"__already_done", i1 false, i1 false}
!163 = !{!"../mm/memory.c", i32 2616, i32 26}
!164 = distinct !{null, !165, !"__already_done", i1 false, i1 false}
!165 = !{!"../mm/memory.c", i32 2578, i32 7}
!166 = distinct !{null, !167, !"__already_done", i1 false, i1 false}
!167 = !{!"../mm/memory.c", i32 2580, i32 26}
!168 = !{ptr @.str.37, !169, !"<string literal>", i1 false, i1 false}
!169 = !{!"../include/linux/mm.h", i32 1368, i32 10}
!170 = distinct !{null, !171, !"<string literal>", i1 false, i1 false}
!171 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!172 = !{ptr @.str.39, !173, !"<string literal>", i1 false, i1 false}
!173 = !{!"../include/linux/page-flags.h", i32 414, i32 1}
!174 = distinct !{null, !175, !"__warned", i1 false, i1 false}
!175 = !{!"../include/linux/memcontrol.h", i32 1059, i32 31}
!176 = !{ptr @.str.40, !175, !"<string literal>", i1 false, i1 false}
!177 = distinct !{null, !178, !"__warned", i1 false, i1 false}
!178 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!179 = !{ptr @.str.41, !178, !"<string literal>", i1 false, i1 false}
!180 = !{ptr @.str.42, !178, !"<string literal>", i1 false, i1 false}
!181 = distinct !{null, !182, !"__warned", i1 false, i1 false}
!182 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!183 = !{ptr @.str.43, !182, !"<string literal>", i1 false, i1 false}
!184 = !{ptr @.str.44, !185, !"<string literal>", i1 false, i1 false}
!185 = !{!"../include/linux/pagemap.h", i32 824, i32 2}
!186 = !{ptr @.str.45, !187, !"<string literal>", i1 false, i1 false}
!187 = !{!"../include/linux/mm.h", i32 717, i32 2}
!188 = distinct !{null, !189, !"__already_done", i1 false, i1 false}
!189 = !{!"../mm/memory.c", i32 2831, i32 4}
!190 = !{ptr @.str.46, !191, !"<string literal>", i1 false, i1 false}
!191 = !{!"../mm/memory.c", i32 2892, i32 3}
!192 = !{ptr @.str.47, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../mm/memory.c", i32 2910, i32 2}
!194 = !{ptr @.str.48, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../mm/memory.c", i32 4101, i32 29}
!196 = !{ptr @fault_around_bytes_fops, !197, !"fault_around_bytes_fops", i1 false, i1 false}
!197 = !{!"../mm/memory.c", i32 4096, i32 1}
!198 = !{ptr @.str.49, !197, !"<string literal>", i1 false, i1 false}
!199 = !{ptr @fault_around_bytes, !200, !"fault_around_bytes", i1 false, i1 false}
!200 = !{!"../mm/memory.c", i32 4072, i32 22}
!201 = !{ptr @.str.50, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../include/linux/mm.h", i32 1160, i32 2}
!203 = !{ptr @.str.51, !204, !"<string literal>", i1 false, i1 false}
!204 = !{!"../mm/memory.c", i32 3884, i32 3}
!205 = !{ptr @.str.52, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"./../include/linux/highmem-internal.h", i32 44, i32 2}
!207 = !{!"sp"}
!208 = !{i32 1, !"wchar_size", i32 2}
!209 = !{i32 1, !"min_enum_size", i32 4}
!210 = !{i32 8, !"branch-target-enforcement", i32 0}
!211 = !{i32 8, !"sign-return-address", i32 0}
!212 = !{i32 8, !"sign-return-address-all", i32 0}
!213 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!214 = !{i32 7, !"uwtable", i32 1}
!215 = !{i32 7, !"frame-pointer", i32 2}
!216 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!217 = !{i64 2148977678, i64 2148977683, i64 2148977696, i64 2148977740, i64 2148977774, i64 2148977795}
!218 = !{!"branch_weights", i32 2000, i32 1}
!219 = !{i64 2156001620}
!220 = !{i64 2156005894}
!221 = !{i64 2149451341}
!222 = !{i64 2149452377}
!223 = !{i64 2148581238}
!224 = !{i64 2148496523, i64 2148496555, i64 2148496584, i64 2148496618, i64 2148496649, i64 2148496672}
!225 = !{i64 2148581467}
!226 = !{i64 2152273916, i64 2152273929}
!227 = !{i64 2151683215, i64 2151683706, i64 2151683252, i64 2151683308, i64 2151683342, i64 2151683366, i64 2151683407, i64 2151683428, i64 2151683456, i64 2151683490}
!228 = !{i64 898706, i64 898767}
!229 = !{i64 901438}
!230 = !{!"branch_weights", i32 1, i32 2000}
!231 = !{i64 901723}
!232 = !{i64 2148498268, i64 2148498294, i64 2148498323, i64 2148498357, i64 2148498388, i64 2148498411}
!233 = !{i64 2148495803, i64 2148495829, i64 2148495858, i64 2148495892, i64 2148495923, i64 2148495946}
!234 = !{i64 2156118163}
!235 = !{i64 2152267255, i64 2152267268}
!236 = !{i64 2152273421}
!237 = !{i64 2153828043, i64 2153828527, i64 2153828080, i64 2153828136, i64 2153828170, i64 2153828194, i64 2153828235, i64 2153828256, i64 2153828284, i64 2153828318}
!238 = !{i64 2151681164, i64 2151681655, i64 2151681201, i64 2151681257, i64 2151681291, i64 2151681315, i64 2151681356, i64 2151681377, i64 2151681405, i64 2151681439}
!239 = !{i64 2156118408}
!240 = !{i64 2152845549, i64 2152846039, i64 2152845586, i64 2152845642, i64 2152845676, i64 2152845700, i64 2152845741, i64 2152845762, i64 2152845790, i64 2152845824}
!241 = !{i64 2150361902}
!242 = !{i64 2150362227}
!243 = !{i64 2156177469, i64 2156177946, i64 2156177506, i64 2156177562, i64 2156177596, i64 2156177620, i64 2156177661, i64 2156177682, i64 2156177710, i64 2156177744}
!244 = !{i64 2154283487}
!245 = !{i64 2153325979}
!246 = !{!"branch_weights", i32 1073205, i32 2146410443}
!247 = !{!"branch_weights", i32 2146410443, i32 1073205}
!248 = !{i64 2151298987, i64 2151299478, i64 2151299024, i64 2151299080, i64 2151299114, i64 2151299138, i64 2151299179, i64 2151299200, i64 2151299228, i64 2151299262}
!249 = !{i64 2150882967, i64 2150883458, i64 2150883004, i64 2150883060, i64 2150883094, i64 2150883118, i64 2150883159, i64 2150883180, i64 2150883208, i64 2150883242}
!250 = !{i64 2155258813, i64 2155259301, i64 2155258850, i64 2155258906, i64 2155258940, i64 2155258964, i64 2155259005, i64 2155259026, i64 2155259054, i64 2155259088}
!251 = !{i64 2153326186}
!252 = !{i64 2154286258}
!253 = !{i64 2156201742, i64 2156202219, i64 2156201779, i64 2156201835, i64 2156201869, i64 2156201893, i64 2156201934, i64 2156201955, i64 2156201983, i64 2156202017}
!254 = !{i64 2156203340, i64 2156203817, i64 2156203377, i64 2156203433, i64 2156203467, i64 2156203491, i64 2156203532, i64 2156203553, i64 2156203581, i64 2156203615}
!255 = !{i64 2151088482, i64 2151088973, i64 2151088519, i64 2151088575, i64 2151088609, i64 2151088633, i64 2151088674, i64 2151088695, i64 2151088723, i64 2151088757}
!256 = !{i64 2156206378, i64 2156206855, i64 2156206415, i64 2156206471, i64 2156206505, i64 2156206529, i64 2156206570, i64 2156206591, i64 2156206619, i64 2156206653}
!257 = !{i64 2156207976, i64 2156208453, i64 2156208013, i64 2156208069, i64 2156208103, i64 2156208127, i64 2156208168, i64 2156208189, i64 2156208217, i64 2156208251}
!258 = !{!"auto-init"}
!259 = !{!"branch_weights", i32 4000000, i32 2001, i32 2000}
!260 = !{i64 2156216948, i64 2156217425, i64 2156216985, i64 2156217041, i64 2156217075, i64 2156217099, i64 2156217140, i64 2156217161, i64 2156217189, i64 2156217223}
!261 = !{i64 2156218691, i64 2156219168, i64 2156218728, i64 2156218784, i64 2156218818, i64 2156218842, i64 2156218883, i64 2156218904, i64 2156218932, i64 2156218966}
!262 = !{!"branch_weights", i32 1, i32 4001}
!263 = !{i64 2156220361, i64 2156220838, i64 2156220398, i64 2156220454, i64 2156220488, i64 2156220512, i64 2156220553, i64 2156220574, i64 2156220602, i64 2156220636}
!264 = !{i64 2156222001, i64 2156222478, i64 2156222038, i64 2156222094, i64 2156222128, i64 2156222152, i64 2156222193, i64 2156222214, i64 2156222242, i64 2156222276}
!265 = !{i64 2156226576, i64 2156227053, i64 2156226613, i64 2156226669, i64 2156226703, i64 2156226727, i64 2156226768, i64 2156226789, i64 2156226817, i64 2156226851}
!266 = !{i64 2156246491, i64 2156246968, i64 2156246528, i64 2156246584, i64 2156246618, i64 2156246642, i64 2156246683, i64 2156246704, i64 2156246732, i64 2156246766}
!267 = !{i64 2156238790, i64 2156239267, i64 2156238827, i64 2156238883, i64 2156238917, i64 2156238941, i64 2156238982, i64 2156239003, i64 2156239031, i64 2156239065}
!268 = !{i64 2149185974, i64 2149185997, i64 2149186029, i64 2149186061, i64 2149186099, i64 2149186129}
!269 = !{i64 2153738683, i64 2153739167, i64 2153738720, i64 2153738776, i64 2153738810, i64 2153738834, i64 2153738875, i64 2153738896, i64 2153738924, i64 2153738958}
!270 = !{i64 2150875534, i64 2150876025, i64 2150875571, i64 2150875627, i64 2150875661, i64 2150875685, i64 2150875726, i64 2150875747, i64 2150875775, i64 2150875809}
!271 = !{i64 2156311460, i64 2156311937, i64 2156311497, i64 2156311553, i64 2156311587, i64 2156311611, i64 2156311652, i64 2156311673, i64 2156311701, i64 2156311735}
!272 = !{i64 2151638259, i64 2151638750, i64 2151638296, i64 2151638352, i64 2151638386, i64 2151638410, i64 2151638451, i64 2151638472, i64 2151638500, i64 2151638534}
!273 = !{i64 2150885801, i64 2150886292, i64 2150885838, i64 2150885894, i64 2150885928, i64 2150885952, i64 2150885993, i64 2150886014, i64 2150886042, i64 2150886076}
!274 = !{i64 2150888181, i64 2150888672, i64 2150888218, i64 2150888274, i64 2150888308, i64 2150888332, i64 2150888373, i64 2150888394, i64 2150888422, i64 2150888456}
!275 = !{i64 2151328878, i64 2151329369, i64 2151328915, i64 2151328971, i64 2151329005, i64 2151329029, i64 2151329070, i64 2151329091, i64 2151329119, i64 2151329153}
!276 = !{i64 2151331258, i64 2151331749, i64 2151331295, i64 2151331351, i64 2151331385, i64 2151331409, i64 2151331450, i64 2151331471, i64 2151331499, i64 2151331533}
!277 = !{i64 2148504661, i64 2148504693, i64 2148504722, i64 2148504756, i64 2148504787, i64 2148504810}
!278 = !{i64 2148593766}
!279 = !{i64 2151625426}
!280 = !{i64 2151553066, i64 2151553557, i64 2151553103, i64 2151553159, i64 2151553193, i64 2151553217, i64 2151553258, i64 2151553279, i64 2151553307, i64 2151553341}
!281 = !{i64 2153712989, i64 2153713472, i64 2153713026, i64 2153713082, i64 2153713116, i64 2153713140, i64 2153713181, i64 2153713202, i64 2153713230, i64 2153713264}
!282 = !{i64 2148584279}
!283 = !{i64 2148498988, i64 2148499020, i64 2148499049, i64 2148499083, i64 2148499114, i64 2148499137}
!284 = !{i64 2148584508}
!285 = !{i64 2149442782}
!286 = !{i64 2149443048}
!287 = !{i64 2153732901, i64 2153733385, i64 2153732938, i64 2153732994, i64 2153733028, i64 2153733052, i64 2153733093, i64 2153733114, i64 2153733142, i64 2153733176}
!288 = !{i64 2156401074}
!289 = !{i64 2156401334}
!290 = !{i64 2156396520}
!291 = !{!"branch_weights", i32 2000, i32 2002}
!292 = !{i64 2153724130, i64 2153724613, i64 2153724167, i64 2153724223, i64 2153724257, i64 2153724281, i64 2153724322, i64 2153724343, i64 2153724371, i64 2153724405}
!293 = !{i64 2151626115}
!294 = !{i64 5818717}
!295 = !{i64 5818914}
!296 = !{i64 2153304147}
!297 = !{i64 2156285110, i64 2156285587, i64 2156285147, i64 2156285203, i64 2156285237, i64 2156285261, i64 2156285302, i64 2156285323, i64 2156285351, i64 2156285385}
!298 = !{i64 2156286843, i64 2156287320, i64 2156286880, i64 2156286936, i64 2156286970, i64 2156286994, i64 2156287035, i64 2156287056, i64 2156287084, i64 2156287118}
!299 = !{i32 0, i32 33}
!300 = !{i64 2156348205, i64 2156348682, i64 2156348242, i64 2156348298, i64 2156348332, i64 2156348356, i64 2156348397, i64 2156348418, i64 2156348446, i64 2156348480}
