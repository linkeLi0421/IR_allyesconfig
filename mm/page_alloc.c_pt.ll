; ModuleID = '/llk/IR_all_yes/mm/page_alloc.c_pt.bc'
source_filename = "../mm/page_alloc.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+node_states\22, \22a\22\09"
module asm "\09.weak\09__crc_node_states\09\09\09\09"
module asm "\09.long\09__crc_node_states\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_node_states:\09\09\09\09\09"
module asm "\09.asciz \09\22node_states\22\09\09\09\09\09"
module asm "__kstrtabns_node_states:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+_totalram_pages\22, \22a\22\09"
module asm "\09.weak\09__crc__totalram_pages\09\09\09\09"
module asm "\09.long\09__crc__totalram_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab__totalram_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22_totalram_pages\22\09\09\09\09\09"
module asm "__kstrtabns__totalram_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+init_on_alloc\22, \22a\22\09"
module asm "\09.weak\09__crc_init_on_alloc\09\09\09\09"
module asm "\09.long\09__crc_init_on_alloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_init_on_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22init_on_alloc\22\09\09\09\09\09"
module asm "__kstrtabns_init_on_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+init_on_free\22, \22a\22\09"
module asm "\09.weak\09__crc_init_on_free\09\09\09\09"
module asm "\09.long\09__crc_init_on_free\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_init_on_free:\09\09\09\09\09"
module asm "\09.asciz \09\22init_on_free\22\09\09\09\09\09"
module asm "__kstrtabns_init_on_free:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+movable_zone\22, \22a\22\09"
module asm "\09.weak\09__crc_movable_zone\09\09\09\09"
module asm "\09.long\09__crc_movable_zone\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_movable_zone:\09\09\09\09\09"
module asm "\09.asciz \09\22movable_zone\22\09\09\09\09\09"
module asm "__kstrtabns_movable_zone:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+split_page\22, \22a\22\09"
module asm "\09.weak\09__crc_split_page\09\09\09\09"
module asm "\09.long\09__crc_split_page\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_split_page:\09\09\09\09\09"
module asm "\09.asciz \09\22split_page\22\09\09\09\09\09"
module asm "__kstrtabns_split_page:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+fs_reclaim_acquire\22, \22a\22\09"
module asm "\09.weak\09__crc_fs_reclaim_acquire\09\09\09\09"
module asm "\09.long\09__crc_fs_reclaim_acquire\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_fs_reclaim_acquire:\09\09\09\09\09"
module asm "\09.asciz \09\22fs_reclaim_acquire\22\09\09\09\09\09"
module asm "__kstrtabns_fs_reclaim_acquire:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+fs_reclaim_release\22, \22a\22\09"
module asm "\09.weak\09__crc_fs_reclaim_release\09\09\09\09"
module asm "\09.long\09__crc_fs_reclaim_release\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_fs_reclaim_release:\09\09\09\09\09"
module asm "\09.asciz \09\22fs_reclaim_release\22\09\09\09\09\09"
module asm "__kstrtabns_fs_reclaim_release:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__alloc_pages_bulk\22, \22a\22\09"
module asm "\09.weak\09__crc___alloc_pages_bulk\09\09\09\09"
module asm "\09.long\09__crc___alloc_pages_bulk\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___alloc_pages_bulk:\09\09\09\09\09"
module asm "\09.asciz \09\22__alloc_pages_bulk\22\09\09\09\09\09"
module asm "__kstrtabns___alloc_pages_bulk:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__alloc_pages\22, \22a\22\09"
module asm "\09.weak\09__crc___alloc_pages\09\09\09\09"
module asm "\09.long\09__crc___alloc_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___alloc_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22__alloc_pages\22\09\09\09\09\09"
module asm "__kstrtabns___alloc_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__folio_alloc\22, \22a\22\09"
module asm "\09.weak\09__crc___folio_alloc\09\09\09\09"
module asm "\09.long\09__crc___folio_alloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___folio_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22__folio_alloc\22\09\09\09\09\09"
module asm "__kstrtabns___folio_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__get_free_pages\22, \22a\22\09"
module asm "\09.weak\09__crc___get_free_pages\09\09\09\09"
module asm "\09.long\09__crc___get_free_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___get_free_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22__get_free_pages\22\09\09\09\09\09"
module asm "__kstrtabns___get_free_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+get_zeroed_page\22, \22a\22\09"
module asm "\09.weak\09__crc_get_zeroed_page\09\09\09\09"
module asm "\09.long\09__crc_get_zeroed_page\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_get_zeroed_page:\09\09\09\09\09"
module asm "\09.asciz \09\22get_zeroed_page\22\09\09\09\09\09"
module asm "__kstrtabns_get_zeroed_page:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__free_pages\22, \22a\22\09"
module asm "\09.weak\09__crc___free_pages\09\09\09\09"
module asm "\09.long\09__crc___free_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___free_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22__free_pages\22\09\09\09\09\09"
module asm "__kstrtabns___free_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+free_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_free_pages\09\09\09\09"
module asm "\09.long\09__crc_free_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_free_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22free_pages\22\09\09\09\09\09"
module asm "__kstrtabns_free_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__page_frag_cache_drain\22, \22a\22\09"
module asm "\09.weak\09__crc___page_frag_cache_drain\09\09\09\09"
module asm "\09.long\09__crc___page_frag_cache_drain\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___page_frag_cache_drain:\09\09\09\09\09"
module asm "\09.asciz \09\22__page_frag_cache_drain\22\09\09\09\09\09"
module asm "__kstrtabns___page_frag_cache_drain:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+page_frag_alloc_align\22, \22a\22\09"
module asm "\09.weak\09__crc_page_frag_alloc_align\09\09\09\09"
module asm "\09.long\09__crc_page_frag_alloc_align\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_frag_alloc_align:\09\09\09\09\09"
module asm "\09.asciz \09\22page_frag_alloc_align\22\09\09\09\09\09"
module asm "__kstrtabns_page_frag_alloc_align:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+page_frag_free\22, \22a\22\09"
module asm "\09.weak\09__crc_page_frag_free\09\09\09\09"
module asm "\09.long\09__crc_page_frag_free\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_page_frag_free:\09\09\09\09\09"
module asm "\09.asciz \09\22page_frag_free\22\09\09\09\09\09"
module asm "__kstrtabns_page_frag_free:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+alloc_pages_exact\22, \22a\22\09"
module asm "\09.weak\09__crc_alloc_pages_exact\09\09\09\09"
module asm "\09.long\09__crc_alloc_pages_exact\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_alloc_pages_exact:\09\09\09\09\09"
module asm "\09.asciz \09\22alloc_pages_exact\22\09\09\09\09\09"
module asm "__kstrtabns_alloc_pages_exact:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+free_pages_exact\22, \22a\22\09"
module asm "\09.weak\09__crc_free_pages_exact\09\09\09\09"
module asm "\09.long\09__crc_free_pages_exact\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_free_pages_exact:\09\09\09\09\09"
module asm "\09.asciz \09\22free_pages_exact\22\09\09\09\09\09"
module asm "__kstrtabns_free_pages_exact:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nr_free_buffer_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_nr_free_buffer_pages\09\09\09\09"
module asm "\09.long\09__crc_nr_free_buffer_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nr_free_buffer_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22nr_free_buffer_pages\22\09\09\09\09\09"
module asm "__kstrtabns_nr_free_buffer_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+si_mem_available\22, \22a\22\09"
module asm "\09.weak\09__crc_si_mem_available\09\09\09\09"
module asm "\09.long\09__crc_si_mem_available\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_si_mem_available:\09\09\09\09\09"
module asm "\09.asciz \09\22si_mem_available\22\09\09\09\09\09"
module asm "__kstrtabns_si_mem_available:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+si_meminfo\22, \22a\22\09"
module asm "\09.weak\09__crc_si_meminfo\09\09\09\09"
module asm "\09.long\09__crc_si_meminfo\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_si_meminfo:\09\09\09\09\09"
module asm "\09.asciz \09\22si_meminfo\22\09\09\09\09\09"
module asm "__kstrtabns_si_meminfo:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+adjust_managed_page_count\22, \22a\22\09"
module asm "\09.weak\09__crc_adjust_managed_page_count\09\09\09\09"
module asm "\09.long\09__crc_adjust_managed_page_count\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_adjust_managed_page_count:\09\09\09\09\09"
module asm "\09.asciz \09\22adjust_managed_page_count\22\09\09\09\09\09"
module asm "__kstrtabns_adjust_managed_page_count:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+alloc_contig_range\22, \22a\22\09"
module asm "\09.weak\09__crc_alloc_contig_range\09\09\09\09"
module asm "\09.long\09__crc_alloc_contig_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_alloc_contig_range:\09\09\09\09\09"
module asm "\09.asciz \09\22alloc_contig_range\22\09\09\09\09\09"
module asm "__kstrtabns_alloc_contig_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+free_contig_range\22, \22a\22\09"
module asm "\09.weak\09__crc_free_contig_range\09\09\09\09"
module asm "\09.long\09__crc_free_contig_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_free_contig_range:\09\09\09\09\09"
module asm "\09.asciz \09\22free_contig_range\22\09\09\09\09\09"
module asm "__kstrtabns_free_contig_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.pagesets = type { %struct.local_lock_t }
%struct.local_lock_t = type { %struct.lockdep_map, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.atomic_t = type { i32 }
%struct.nodemask_t = type { [1 x i32] }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t, %union.anon.32 }
%union.anon.32 = type { i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.cpumask = type { [1 x i32] }
%struct.spinlock = type { %union.anon.9 }
%union.anon.9 = type { %struct.raw_spinlock }
%struct.per_cpu_pages = type { i32, i32, i32, i16, [12 x %struct.list_head] }
%struct.per_cpu_zonestat = type { [11 x i8], i8 }
%struct.pcpu_drain = type { ptr, %struct.work_struct }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.per_cpu_nodestat = type { i8, [40 x i8] }
%struct.static_key_true = type { %struct.static_key }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pglist_data = type { [4 x %struct.zone], [1 x %struct.zonelist], i32, ptr, ptr, i32, i32, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, [4 x %struct.wait_queue_head], %struct.atomic_t, i32, ptr, i32, i32, i32, i32, i32, %struct.wait_queue_head, ptr, i8, i32, [36 x i8], %struct.zone_padding, %struct.lruvec, i32, [12 x i8], %struct.zone_padding, ptr, [40 x %struct.atomic_t], [92 x i8] }
%struct.zone = type { [3 x i32], i32, i32, [4 x i32], ptr, ptr, ptr, i32, i32, ptr, i32, %struct.atomic_t, i32, i32, i32, ptr, i32, i32, [36 x i8], %struct.zone_padding, [12 x %struct.free_area], i32, %struct.spinlock, [96 x i8], %struct.zone_padding, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i8, i8, [90 x i8], %struct.zone_padding, [11 x %struct.atomic_t], [0 x %struct.atomic_t], [84 x i8] }
%struct.free_area = type { [6 x %struct.list_head], i32 }
%struct.zonelist = type { [5 x %struct.zoneref] }
%struct.zoneref = type { ptr, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.lruvec = type { [5 x %struct.list_head], %struct.spinlock, i32, i32, %struct.atomic_t, [2 x i32], i32, ptr }
%struct.zone_padding = type { [0 x i8] }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.vm_event_state = type { [76 x i32] }
%struct.anon.86 = type { %struct.fault_attr, i8, i8, i32 }
%struct.fault_attr = type { i32, i32, %struct.atomic_t, %struct.atomic_t, i32, i8, i32, i32, i32, i32, i32, i32, %struct.ratelimit_state, ptr }
%struct.memblock = type { i8, i32, %struct.memblock_type, %struct.memblock_type }
%struct.memblock_type = type { i32, i32, i32, ptr, ptr }
%struct.page = type { i32, %union.anon.7, %union.anon.52, %struct.atomic_t, i32 }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.52 = type { %struct.atomic_t }
%struct.anon.46 = type { i32, i8, i8, %struct.atomic_t, i32 }
%struct.anon.85 = type { i32, %struct.list_head, ptr, i32, ptr, %struct.atomic_t, %struct.atomic_t, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.74, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.0 }
%struct.llist_node = type { ptr }
%union.anon.0 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.53 }
%union.anon.53 = type { %struct.anon.54 }
%struct.anon.54 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.74 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.capture_control = type { ptr, ptr }
%struct.compact_control = type { %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, ptr, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.va_format = type { ptr, ptr }
%struct.__va_list = type { ptr }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], %struct.pacct_struct, ptr, i32, ptr, i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.hlist_head = type { ptr }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.atomic64_t = type { i64 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i32, i32 }
%struct.pacct_struct = type { i32, i32, i32, i64, i64, i32, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.alloc_context = type { ptr, ptr, ptr, i32, i32, i8 }
%struct.oom_control = type { ptr, ptr, ptr, i32, i32, i32, ptr, i32, i32 }
%struct.page_frag_cache = type { ptr, i16, i16, i32, i8 }
%struct.sysinfo = type { i32, [3 x i32], i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, [8 x i8] }
%struct.memblock_region = type { i32, i32, i32 }
%struct.migration_target_control = type { i32, ptr, i32 }

@.str = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"lock\00", [27 x i8] zeroinitializer }, align 32
@pagesets = weak dso_local global %struct.pagesets { %struct.local_lock_t { %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str, i8 0, i8 3, i8 1, i32 0, i32 0 }, ptr null } }, section ".data..percpu", align 4
@vm_numa_stat_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@node_states = dso_local global [7 x %struct.nodemask_t] [%struct.nodemask_t { [1 x i32] [i32 1] }, %struct.nodemask_t { [1 x i32] [i32 1] }, %struct.nodemask_t { [1 x i32] [i32 1] }, %struct.nodemask_t { [1 x i32] [i32 1] }, %struct.nodemask_t { [1 x i32] [i32 1] }, %struct.nodemask_t { [1 x i32] [i32 1] }, %struct.nodemask_t zeroinitializer], section ".data..read_mostly", align 4
@__kstrtab_node_states = external dso_local constant [0 x i8], align 1
@__kstrtabns_node_states = external dso_local constant [0 x i8], align 1
@__ksymtab_node_states = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @node_states to i32), ptr @__kstrtab_node_states, ptr @__kstrtabns_node_states }, section "___ksymtab+node_states", align 4
@_totalram_pages = dso_local global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@__kstrtab__totalram_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns__totalram_pages = external dso_local constant [0 x i8], align 1
@__ksymtab__totalram_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @_totalram_pages to i32), ptr @__kstrtab__totalram_pages, ptr @__kstrtabns__totalram_pages }, section "___ksymtab+_totalram_pages", align 4
@gfp_allowed_mask = dso_local local_unnamed_addr global i32 67105599, section ".data..read_mostly", align 4
@init_on_alloc = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_init_on_alloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_init_on_alloc = external dso_local constant [0 x i8], align 1
@__ksymtab_init_on_alloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @init_on_alloc to i32), ptr @__kstrtab_init_on_alloc, ptr @__kstrtabns_init_on_alloc }, section "___ksymtab+init_on_alloc", align 4
@init_on_free = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_init_on_free = external dso_local constant [0 x i8], align 1
@__kstrtabns_init_on_free = external dso_local constant [0 x i8], align 1
@__ksymtab_init_on_free = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @init_on_free to i32), ptr @__kstrtab_init_on_free, ptr @__kstrtabns_init_on_free }, section "___ksymtab+init_on_free", align 4
@__setup_str_early_init_on_alloc = internal constant [14 x i8] c"init_on_alloc\00", section ".init.rodata", align 1
@__setup_early_init_on_alloc = internal global %struct.obs_kernel_param { ptr @__setup_str_early_init_on_alloc, ptr @early_init_on_alloc, i32 1 }, section ".init.setup", align 4
@__setup_str_early_init_on_free = internal constant [13 x i8] c"init_on_free\00", section ".init.rodata", align 1
@__setup_early_init_on_free = internal global %struct.obs_kernel_param { ptr @__setup_str_early_init_on_free, ptr @early_init_on_free, i32 1 }, section ".init.setup", align 4
@system_transition_mutex = external dso_local global %struct.mutex, align 4
@.str.1 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mm/page_alloc.c\00", [16 x i8] zeroinitializer }, align 32
@saved_gfp_mask = internal global { i32, [28 x i8] } zeroinitializer, align 32
@sysctl_lowmem_reserve_ratio = dso_local global { [4 x i32], [16 x i8] } { [4 x i32] [i32 256, i32 32, i32 0, i32 0], [16 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Unmovable\00", [22 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Movable\00", [24 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Reclaimable\00", [20 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"HighAtomic\00", [21 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"CMA\00", [28 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Isolate\00", [24 x i8] zeroinitializer }, align 32
@migratetype_names = dso_local constant { [6 x ptr], [40 x i8] } { [6 x ptr] [ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7], [40 x i8] zeroinitializer }, align 32
@compound_page_dtors = dso_local constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr null, ptr @free_compound_page], [24 x i8] zeroinitializer }, align 32
@min_free_kbytes = dso_local global { i32, [28 x i8] } { i32 1024, [28 x i8] zeroinitializer }, align 32
@user_min_free_kbytes = dso_local global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@watermark_boost_factor = dso_local local_unnamed_addr global i32 15000, section ".data..read_mostly", align 4
@watermark_scale_factor = dso_local global { i32, [28 x i8] } { i32 10, [28 x i8] zeroinitializer }, align 32
@movable_zone = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__kstrtab_movable_zone = external dso_local constant [0 x i8], align 1
@__kstrtabns_movable_zone = external dso_local constant [0 x i8], align 1
@__ksymtab_movable_zone = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @movable_zone to i32), ptr @__kstrtab_movable_zone, ptr @__kstrtabns_movable_zone }, section "___ksymtab+movable_zone", align 4
@.str.8 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"VM_BUG_ON_PAGE(!zone_spans_pfn(page_zone(page), pfn))\00", [42 x i8] zeroinitializer }, align 32
@page_group_by_mobility_disabled = dso_local local_unnamed_addr global i32 0, section ".data..read_mostly", align 4
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@_page_poisoning_enabled = external dso_local global %struct.static_key_false, align 4
@_init_on_alloc_enabled_early = internal global i8 1, section ".data..read_mostly", align 1
@_init_on_free_enabled_early = internal global i8 1, section ".data..read_mostly", align 1
@init_mem_debugging_and_hardening._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.10, ptr @.str.1, i32 855, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [104 x i8], [56 x i8] } { [104 x i8] c"\016mem auto-init: CONFIG_PAGE_POISONING is on, will take precedence over init_on_alloc and init_on_free\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"init_mem_debugging_and_hardening\00", [63 x i8] zeroinitializer }, align 32
@init_mem_debugging_and_hardening._entry_ptr = internal global ptr @init_mem_debugging_and_hardening._entry, section ".printk_index", align 4
@fallbacks = internal constant { [6 x [3 x i32]], [56 x i8] } { [6 x [3 x i32]] [[3 x i32] [i32 2, i32 1, i32 6], [3 x i32] [i32 2, i32 0, i32 6], [3 x i32] [i32 0, i32 1, i32 6], [3 x i32] zeroinitializer, [3 x i32] [i32 6, i32 0, i32 0], [3 x i32] [i32 6, i32 0, i32 0]], [56 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str.11 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(PageCompound(page))\00", [61 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"VM_BUG_ON_PAGE(!page_count(page))\00", [62 x i8] zeroinitializer }, align 32
@__kstrtab_split_page = external dso_local constant [0 x i8], align 1
@__kstrtabns_split_page = external dso_local constant [0 x i8], align 1
@__ksymtab_split_page = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @split_page to i32), ptr @__kstrtab_split_page, ptr @__kstrtabns_split_page }, section "___ksymtab_gpl+split_page", align 4
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@__setup_str_setup_fail_page_alloc = internal constant [17 x i8] c"fail_page_alloc=\00", section ".init.rodata", align 1
@__setup_setup_fail_page_alloc = internal global %struct.obs_kernel_param { ptr @__setup_str_setup_fail_page_alloc, ptr @setup_fail_page_alloc, i32 0 }, section ".init.setup", align 4
@__initcall__kmod_page_alloc__395_3807_fail_page_alloc_debugfs7 = internal global ptr @fail_page_alloc_debugfs, section ".initcall7.init", align 4
@warn_alloc.nopage_rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.13, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 1000, i32 1, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"nopage_rs.lock\00", [17 x i8] zeroinitializer }, align 32
@__func__.warn_alloc = private unnamed_addr constant [11 x i8] c"warn_alloc\00", align 1
@warn_alloc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @__func__.warn_alloc, ptr @.str.1, i32 4233, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014%s: %pV, mode:%#x(%pGg), nodemask=%*pbl\00", [54 x i8] zeroinitializer }, align 32
@warn_alloc._entry_ptr = internal global ptr @warn_alloc._entry, section ".printk_index", align 4
@warn_alloc._entry.15 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.16, ptr @__func__.warn_alloc, ptr @.str.1, i32 4237, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"\01c\0A\00", [28 x i8] zeroinitializer }, align 32
@warn_alloc._entry_ptr.17 = internal global ptr @warn_alloc._entry.15, section ".printk_index", align 4
@__fs_reclaim_map = internal global %struct.lockdep_map { ptr @__fs_reclaim_map, [2 x ptr] zeroinitializer, ptr @.str.143, i8 0, i8 0, i8 0, i32 0, i32 0 }, align 4
@__mmu_notifier_invalidate_range_start_map = external dso_local global %struct.lockdep_map, align 4
@__kstrtab_fs_reclaim_acquire = external dso_local constant [0 x i8], align 1
@__kstrtabns_fs_reclaim_acquire = external dso_local constant [0 x i8], align 1
@__ksymtab_fs_reclaim_acquire = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @fs_reclaim_acquire to i32), ptr @__kstrtab_fs_reclaim_acquire, ptr @__kstrtabns_fs_reclaim_acquire }, section "___ksymtab_gpl+fs_reclaim_acquire", align 4
@__kstrtab_fs_reclaim_release = external dso_local constant [0 x i8], align 1
@__kstrtabns_fs_reclaim_release = external dso_local constant [0 x i8], align 1
@__ksymtab_fs_reclaim_release = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @fs_reclaim_release to i32), ptr @__kstrtab_fs_reclaim_release, ptr @__kstrtabns_fs_reclaim_release }, section "___ksymtab_gpl+fs_reclaim_release", align 4
@page_owner_inited = external dso_local global %struct.static_key_false, align 4
@__kstrtab___alloc_pages_bulk = external dso_local constant [0 x i8], align 1
@__kstrtabns___alloc_pages_bulk = external dso_local constant [0 x i8], align 1
@__ksymtab___alloc_pages_bulk = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__alloc_pages_bulk to i32), ptr @__kstrtab___alloc_pages_bulk, ptr @__kstrtabns___alloc_pages_bulk }, section "___ksymtab_gpl+__alloc_pages_bulk", align 4
@__alloc_pages.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab___alloc_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns___alloc_pages = external dso_local constant [0 x i8], align 1
@__ksymtab___alloc_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__alloc_pages to i32), ptr @__kstrtab___alloc_pages, ptr @__kstrtabns___alloc_pages }, section "___ksymtab+__alloc_pages", align 4
@__kstrtab___folio_alloc = external dso_local constant [0 x i8], align 1
@__kstrtabns___folio_alloc = external dso_local constant [0 x i8], align 1
@__ksymtab___folio_alloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__folio_alloc to i32), ptr @__kstrtab___folio_alloc, ptr @__kstrtabns___folio_alloc }, section "___ksymtab+__folio_alloc", align 4
@__kstrtab___get_free_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns___get_free_pages = external dso_local constant [0 x i8], align 1
@__ksymtab___get_free_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__get_free_pages to i32), ptr @__kstrtab___get_free_pages, ptr @__kstrtabns___get_free_pages }, section "___ksymtab+__get_free_pages", align 4
@__kstrtab_get_zeroed_page = external dso_local constant [0 x i8], align 1
@__kstrtabns_get_zeroed_page = external dso_local constant [0 x i8], align 1
@__ksymtab_get_zeroed_page = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @get_zeroed_page to i32), ptr @__kstrtab_get_zeroed_page, ptr @__kstrtabns_get_zeroed_page }, section "___ksymtab+get_zeroed_page", align 4
@__kstrtab___free_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns___free_pages = external dso_local constant [0 x i8], align 1
@__ksymtab___free_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__free_pages to i32), ptr @__kstrtab___free_pages, ptr @__kstrtabns___free_pages }, section "___ksymtab+__free_pages", align 4
@high_memory = external dso_local local_unnamed_addr global ptr, align 4
@__kstrtab_free_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_free_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_free_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @free_pages to i32), ptr @__kstrtab_free_pages, ptr @__kstrtabns_free_pages }, section "___ksymtab+free_pages", align 4
@.str.18 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__kstrtab___page_frag_cache_drain = external dso_local constant [0 x i8], align 1
@__kstrtabns___page_frag_cache_drain = external dso_local constant [0 x i8], align 1
@__ksymtab___page_frag_cache_drain = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__page_frag_cache_drain to i32), ptr @__kstrtab___page_frag_cache_drain, ptr @__kstrtabns___page_frag_cache_drain }, section "___ksymtab+__page_frag_cache_drain", align 4
@__kstrtab_page_frag_alloc_align = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_frag_alloc_align = external dso_local constant [0 x i8], align 1
@__ksymtab_page_frag_alloc_align = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_frag_alloc_align to i32), ptr @__kstrtab_page_frag_alloc_align, ptr @__kstrtabns_page_frag_alloc_align }, section "___ksymtab+page_frag_alloc_align", align 4
@__kstrtab_page_frag_free = external dso_local constant [0 x i8], align 1
@__kstrtabns_page_frag_free = external dso_local constant [0 x i8], align 1
@__ksymtab_page_frag_free = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @page_frag_free to i32), ptr @__kstrtab_page_frag_free, ptr @__kstrtabns_page_frag_free }, section "___ksymtab+page_frag_free", align 4
@alloc_pages_exact.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_alloc_pages_exact = external dso_local constant [0 x i8], align 1
@__kstrtabns_alloc_pages_exact = external dso_local constant [0 x i8], align 1
@__ksymtab_alloc_pages_exact = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @alloc_pages_exact to i32), ptr @__kstrtab_alloc_pages_exact, ptr @__kstrtabns_alloc_pages_exact }, section "___ksymtab+alloc_pages_exact", align 4
@alloc_pages_exact_nid.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_free_pages_exact = external dso_local constant [0 x i8], align 1
@__kstrtabns_free_pages_exact = external dso_local constant [0 x i8], align 1
@__ksymtab_free_pages_exact = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @free_pages_exact to i32), ptr @__kstrtab_free_pages_exact, ptr @__kstrtabns_free_pages_exact }, section "___ksymtab+free_pages_exact", align 4
@__kstrtab_nr_free_buffer_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_nr_free_buffer_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_nr_free_buffer_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nr_free_buffer_pages to i32), ptr @__kstrtab_nr_free_buffer_pages, ptr @__kstrtabns_nr_free_buffer_pages }, section "___ksymtab_gpl+nr_free_buffer_pages", align 4
@totalreserve_pages = dso_local local_unnamed_addr global i32 0, section ".data..read_mostly", align 4
@__kstrtab_si_mem_available = external dso_local constant [0 x i8], align 1
@__kstrtabns_si_mem_available = external dso_local constant [0 x i8], align 1
@__ksymtab_si_mem_available = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @si_mem_available to i32), ptr @__kstrtab_si_mem_available, ptr @__kstrtabns_si_mem_available }, section "___ksymtab_gpl+si_mem_available", align 4
@__kstrtab_si_meminfo = external dso_local constant [0 x i8], align 1
@__kstrtabns_si_meminfo = external dso_local constant [0 x i8], align 1
@__ksymtab_si_meminfo = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @si_meminfo to i32), ptr @__kstrtab_si_meminfo, ptr @__kstrtabns_si_meminfo }, section "___ksymtab+si_meminfo", align 4
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@show_free_areas._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.20, ptr @.str.1, i32 5937, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [305 x i8], [79 x i8] } { [305 x i8] c"active_anon:%lu inactive_anon:%lu isolated_anon:%lu\0A active_file:%lu inactive_file:%lu isolated_file:%lu\0A unevictable:%lu dirty:%lu writeback:%lu\0A slab_reclaimable:%lu slab_unreclaimable:%lu\0A mapped:%lu shmem:%lu pagetables:%lu bounce:%lu\0A kernel_misc_reclaimable:%lu\0A free:%lu free_pcp:%lu free_cma:%lu\0A\00", [79 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"show_free_areas\00", [16 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr = internal global ptr @show_free_areas._entry, section ".printk_index", align 4
@show_free_areas._entry.21 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.20, ptr @.str.1, i32 5992, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [276 x i8], [76 x i8] } { [276 x i8] c"Node %d active_anon:%lukB inactive_anon:%lukB active_file:%lukB inactive_file:%lukB unevictable:%lukB isolated(anon):%lukB isolated(file):%lukB mapped:%lukB dirty:%lukB writeback:%lukB shmem:%lukB writeback_tmp:%lukB kernel_stack:%lukB pagetables:%lukB all_unreclaimable? %s\0A\00", [76 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr.23 = internal global ptr @show_free_areas._entry.21, section ".printk_index", align 4
@.str.24 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"yes\00", [28 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"no\00", [29 x i8] zeroinitializer }, align 32
@show_free_areas._entry.26 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.20, ptr @.str.1, i32 6047, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [299 x i8], [85 x i8] } { [299 x i8] c"\01c%s free:%lukB boost:%lukB min:%lukB low:%lukB high:%lukB reserved_highatomic:%luKB active_anon:%lukB inactive_anon:%lukB active_file:%lukB inactive_file:%lukB unevictable:%lukB writepending:%lukB present:%lukB managed:%lukB mlocked:%lukB bounce:%lukB free_pcp:%lukB local_pcp:%ukB free_cma:%lukB\0A\00", [85 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr.28 = internal global ptr @show_free_areas._entry.26, section ".printk_index", align 4
@show_free_areas._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.20, ptr @.str.1, i32 6048, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"lowmem_reserve[]:\00", [46 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr.31 = internal global ptr @show_free_areas._entry.29, section ".printk_index", align 4
@show_free_areas._entry.32 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.20, ptr @.str.1, i32 6050, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"\01c %ld\00", [25 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr.34 = internal global ptr @show_free_areas._entry.32, section ".printk_index", align 4
@show_free_areas._entry.35 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.16, ptr @.str.20, ptr @.str.1, i32 6051, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr.36 = internal global ptr @show_free_areas._entry.35, section ".printk_index", align 4
@show_free_areas._entry.37 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.20, ptr @.str.1, i32 6062, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"\01c%s: \00", [25 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr.39 = internal global ptr @show_free_areas._entry.37, section ".printk_index", align 4
@show_free_areas._entry.40 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.20, ptr @.str.1, i32 6081, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"\01c%lu*%lukB \00", [19 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr.42 = internal global ptr @show_free_areas._entry.40, section ".printk_index", align 4
@show_free_areas._entry.43 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.20, ptr @.str.1, i32 6085, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"\01c= %lukB\0A\00", [21 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr.45 = internal global ptr @show_free_areas._entry.43, section ".printk_index", align 4
@show_free_areas._entry.46 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.47, ptr @.str.20, ptr @.str.1, i32 6090, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%ld total pagecache pages\0A\00", [37 x i8] zeroinitializer }, align 32
@show_free_areas._entry_ptr.48 = internal global ptr @show_free_areas._entry.46, section ".printk_index", align 4
@system_state = external dso_local local_unnamed_addr global i32, align 4
@build_all_zonelists._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.50, ptr @.str.1, i32 6488, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\016Built %u zonelists, mobility grouping %s.  Total pages: %ld\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"build_all_zonelists\00", [44 x i8] zeroinitializer }, align 32
@build_all_zonelists._entry_ptr = internal global ptr @build_all_zonelists._entry, section ".printk_index", align 4
@.str.51 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"off\00", [28 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"on\00", [29 x i8] zeroinitializer }, align 32
@highest_memmap_pfn = external dso_local local_unnamed_addr global i32, align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@mminit_loglevel = external dso_local local_unnamed_addr global i32, align 4
@init_currently_empty_zone._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.53, ptr @.str.54, ptr @.str.1, i32 7091, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\017mminit::memmap_init Initialising map node %d zone %lu pfns %lu -> %lu\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"init_currently_empty_zone\00", [38 x i8] zeroinitializer }, align 32
@init_currently_empty_zone._entry_ptr = internal global ptr @init_currently_empty_zone._entry, section ".printk_index", align 4
@arch_zone_lowest_possible_pfn = internal unnamed_addr global [4 x i32] zeroinitializer, section ".init.data", align 4
@arch_zone_highest_possible_pfn = internal unnamed_addr global [4 x i32] zeroinitializer, section ".init.data", align 4
@zone_movable_pfn = internal unnamed_addr global [1 x i32] zeroinitializer, section ".init.data", align 4
@free_area_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.56, ptr @.str.1, i32 8059, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"\016Zone ranges:\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"free_area_init\00", [17 x i8] zeroinitializer }, align 32
@free_area_init._entry_ptr = internal global ptr @free_area_init._entry, section ".printk_index", align 4
@free_area_init._entry.57 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.58, ptr @.str.56, ptr @.str.1, i32 8063, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"\016  %-8s \00", [22 x i8] zeroinitializer }, align 32
@free_area_init._entry_ptr.59 = internal global ptr @free_area_init._entry.57, section ".printk_index", align 4
@zone_names = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.3], [16 x i8] zeroinitializer }, align 32
@free_area_init._entry.60 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.56, ptr @.str.1, i32 8066, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"\01cempty\0A\00", [23 x i8] zeroinitializer }, align 32
@free_area_init._entry_ptr.62 = internal global ptr @free_area_init._entry.60, section ".printk_index", align 4
@free_area_init._entry.63 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.64, ptr @.str.56, ptr @.str.1, i32 8072, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\01c[mem %#018Lx-%#018Lx]\0A\00", [39 x i8] zeroinitializer }, align 32
@free_area_init._entry_ptr.65 = internal global ptr @free_area_init._entry.63, section ".printk_index", align 4
@free_area_init._entry.66 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.56, ptr @.str.1, i32 8076, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\016Movable zone start for each node\0A\00", [60 x i8] zeroinitializer }, align 32
@free_area_init._entry_ptr.68 = internal global ptr @free_area_init._entry.66, section ".printk_index", align 4
@free_area_init._entry.69 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.56, ptr @.str.1, i32 8080, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\016  Node %d: %#018Lx\0A\00", [42 x i8] zeroinitializer }, align 32
@free_area_init._entry_ptr.71 = internal global ptr @free_area_init._entry.69, section ".printk_index", align 4
@free_area_init._entry.72 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.56, ptr @.str.1, i32 8088, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\016Early memory node ranges\0A\00", [36 x i8] zeroinitializer }, align 32
@free_area_init._entry_ptr.74 = internal global ptr @free_area_init._entry.72, section ".printk_index", align 4
@free_area_init._entry.75 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.76, ptr @.str.56, ptr @.str.1, i32 8092, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016  node %3d: [mem %#018Lx-%#018Lx]\0A\00", [59 x i8] zeroinitializer }, align 32
@free_area_init._entry_ptr.77 = internal global ptr @free_area_init._entry.75, section ".printk_index", align 4
@__setup_str_cmdline_parse_kernelcore = internal constant [11 x i8] c"kernelcore\00", section ".init.rodata", align 1
@__setup_cmdline_parse_kernelcore = internal global %struct.obs_kernel_param { ptr @__setup_str_cmdline_parse_kernelcore, ptr @cmdline_parse_kernelcore, i32 1 }, section ".init.setup", align 4
@__setup_str_cmdline_parse_movablecore = internal constant [12 x i8] c"movablecore\00", section ".init.rodata", align 1
@__setup_cmdline_parse_movablecore = internal global %struct.obs_kernel_param { ptr @__setup_str_cmdline_parse_movablecore, ptr @cmdline_parse_movablecore, i32 1 }, section ".init.setup", align 4
@__kstrtab_adjust_managed_page_count = external dso_local constant [0 x i8], align 1
@__kstrtabns_adjust_managed_page_count = external dso_local constant [0 x i8], align 1
@__ksymtab_adjust_managed_page_count = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @adjust_managed_page_count to i32), ptr @__kstrtab_adjust_managed_page_count, ptr @__kstrtabns_adjust_managed_page_count }, section "___ksymtab+adjust_managed_page_count", align 4
@free_reserved_area._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.79, ptr @.str.1, i32 8210, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\016Freeing %s memory: %ldK\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"free_reserved_area\00", [45 x i8] zeroinitializer }, align 32
@free_reserved_area._entry_ptr = internal global ptr @free_reserved_area._entry, section ".printk_index", align 4
@_etext = external dso_local global [0 x i8], align 1
@_stext = external dso_local global [0 x i8], align 1
@_edata = external dso_local global [0 x i8], align 1
@_sdata = external dso_local global [0 x i8], align 1
@__end_rodata = external dso_local global [0 x i8], align 1
@__start_rodata = external dso_local global [0 x i8], align 1
@__bss_stop = external dso_local global [0 x i8], align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__init_end = external dso_local global [0 x i8], align 1
@__init_begin = external dso_local global [0 x i8], align 1
@_einittext = external dso_local global [0 x i8], align 1
@_sinittext = external dso_local global [0 x i8], align 1
@mem_init_print_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.80, ptr @.str.81, ptr @.str.1, i32 8263, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [145 x i8], [47 x i8] } { [145 x i8] c"\016Memory: %luK/%luK available (%luK kernel code, %luK rwdata, %luK rodata, %luK init, %luK bss, %luK reserved, %luK cma-reserved, %luK highmem)\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"mem_init_print_info\00", [44 x i8] zeroinitializer }, align 32
@mem_init_print_info._entry_ptr = internal global ptr @mem_init_print_info._entry, section ".printk_index", align 4
@totalcma_pages = dso_local local_unnamed_addr global i32 0, section ".data..read_mostly", align 4
@dma_reserve = internal unnamed_addr global i32 0, section ".init.data", align 4
@.str.82 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"mm/page_alloc:pcp\00", [46 x i8] zeroinitializer }, align 32
@setup_per_zone_wmarks.lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.9 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@calculate_min_free_kbytes._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.83, ptr @.str.84, ptr @.str.1, i32 8546, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\014min_free_kbytes is not updated to %d because user defined value %d is preferred\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"calculate_min_free_kbytes\00", [38 x i8] zeroinitializer }, align 32
@calculate_min_free_kbytes._entry_ptr = internal global ptr @calculate_min_free_kbytes._entry, section ".printk_index", align 4
@__initcall__kmod_page_alloc__500_8566_init_per_zone_wmark_min2 = internal global ptr @init_per_zone_wmark_min, section ".initcall2.init", align 4
@pcp_batch_high_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.185, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @pcp_batch_high_lock, i64 52), ptr getelementptr (i8, ptr @pcp_batch_high_lock, i64 52) }, ptr @pcp_batch_high_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.186, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@percpu_pagelist_high_fraction = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@nr_kernel_pages = internal unnamed_addr global i32 0, section ".init.data", align 4
@nr_all_pages = internal unnamed_addr global i32 0, section ".init.data", align 4
@.str.85 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Failed to allocate %s hash table\0A\00", [62 x i8] zeroinitializer }, align 32
@alloc_large_system_hash._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.87, ptr @.str.1, i32 8857, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\016%s hash table entries: %ld (order: %d, %lu bytes, %s)\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"alloc_large_system_hash\00", [40 x i8] zeroinitializer }, align 32
@alloc_large_system_hash._entry_ptr = internal global ptr @alloc_large_system_hash._entry, section ".printk_index", align 4
@.str.88 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"vmalloc hugepage\00", [47 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"vmalloc\00", [24 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"linear\00", [25 x i8] zeroinitializer }, align 32
@__kstrtab_alloc_contig_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_alloc_contig_range = external dso_local constant [0 x i8], align 1
@__ksymtab_alloc_contig_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @alloc_contig_range to i32), ptr @__kstrtab_alloc_contig_range, ptr @__kstrtabns_alloc_contig_range }, section "___ksymtab+alloc_contig_range", align 4
@.str.91 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%lu pages are still in use!\0A\00", [35 x i8] zeroinitializer }, align 32
@__kstrtab_free_contig_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_free_contig_range = external dso_local constant [0 x i8], align 1
@__ksymtab_free_contig_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @free_contig_range to i32), ptr @__kstrtab_free_contig_range, ptr @__kstrtabns_free_contig_range }, section "___ksymtab+free_contig_range", align 4
@boot_pageset = weak dso_local global %struct.per_cpu_pages zeroinitializer, section ".data..percpu", align 4
@boot_zonestats = weak dso_local global %struct.per_cpu_zonestat zeroinitializer, section ".data..percpu", align 1
@__pcpu_unique_pagesets = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_pcpu_drain = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@pcpu_drain = weak dso_local global %struct.pcpu_drain zeroinitializer, section ".data..percpu", align 4
@__pcpu_unique_boot_pageset = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_boot_zonestats = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_boot_nodestats = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@boot_nodestats = weak dso_local global %struct.per_cpu_nodestat zeroinitializer, section ".data..percpu", align 1
@.str.92 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(p))\00", [32 x i8] zeroinitializer }, align 32
@memory_cgrp_subsys_enabled_key = external dso_local global %struct.static_key_true, align 4
@.str.93 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(page))\00", [61 x i8] zeroinitializer }, align 32
@_page_poisoning_enabled_early = external dso_local local_unnamed_addr global i8, align 1
@.str.95 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"VM_BUG_ON_PAGE(1 && PageCompound(page))\00", [56 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_set = external dso_local global %struct.tracepoint, align 4
@.str.96 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"VM_BUG_ON_PAGE(compound && compound_order(page) != order)\00", [38 x i8] zeroinitializer }, align 32
@__tracepoint_mm_page_free = external dso_local global %struct.tracepoint, align 4
@.str.98 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/trace/events/kmem.h\00", [36 x i8] zeroinitializer }, align 32
@trace_mm_page_free.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.99 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.100 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"VM_BUG_ON_PAGE(PageTail(&folio->page))\00", [57 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"VM_BUG_ON_FOLIO(folio->memcg_data & MEMCG_DATA_OBJCGS)\00", [41 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"nonzero compound_mapcount\00", [38 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"corrupted mapping in tail page\00", [33 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"PageTail not set\00", [47 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"compound_head not consistent\00", [35 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"VM_BUG_ON_PAGE(!PageCompound(page))\00", [60 x i8] zeroinitializer }, align 32
@bad_page.resume = internal global { i32, [28 x i8] } zeroinitializer, align 32
@bad_page.nr_shown = internal global { i32, [28 x i8] } zeroinitializer, align 32
@bad_page.nr_unshown = internal global { i32, [28 x i8] } zeroinitializer, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@bad_page._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.109, ptr @.str.1, i32 642, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\011BUG: Bad page state: %lu messages suppressed\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bad_page\00", [23 x i8] zeroinitializer }, align 32
@bad_page._entry_ptr = internal global ptr @bad_page._entry, section ".printk_index", align 4
@bad_page._entry.110 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.111, ptr @.str.109, ptr @.str.1, i32 651, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\011BUG: Bad page state in process %s  pfn:%05lx\0A\00", [48 x i8] zeroinitializer }, align 32
@bad_page._entry_ptr.112 = internal global ptr @bad_page._entry.110, section ".printk_index", align 4
@.str.113 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"nonzero mapcount\00", [47 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"non-NULL mapping\00", [47 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"nonzero _refcount\00", [46 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"PAGE_FLAGS_CHECK_AT_PREP flag(s) set\00", [59 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"PAGE_FLAGS_CHECK_AT_FREE flag(s) set\00", [59 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"page still charged to cgroup\00", [35 x i8] zeroinitializer }, align 32
@page_alloc_shuffle_key = external dso_local global %struct.static_key_false, align 4
@contig_page_data = external dso_local global %struct.pglist_data, align 128
@.str.119 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page))\00", [59 x i8] zeroinitializer }, align 32
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@.str.121 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"VM_BUG_ON_PAGE(page_zone(page) != zone)\00", [56 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"VM_BUG_ON_PAGE(is_migrate_isolate(mt))\00", [57 x i8] zeroinitializer }, align 32
@__tracepoint_mm_page_pcpu_drain = external dso_local global %struct.tracepoint, align 4
@trace_mm_page_pcpu_drain.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__drain_all_pages.cpus_with_pcps = internal global %struct.cpumask zeroinitializer, align 4
@__drain_all_pages.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mm_percpu_wq = external dso_local local_unnamed_addr global ptr, align 4
@pcpu_drain_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.124, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @pcpu_drain_mutex, i64 52), ptr getelementptr (i8, ptr @pcpu_drain_mutex, i64 52) }, ptr @pcpu_drain_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.125, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@__drain_all_pages.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.123 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"(work_completion)(&drain->work)\00", [32 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"pcpu_drain_mutex.wait_lock\00", [37 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"pcpu_drain_mutex\00", [47 x i8] zeroinitializer }, align 32
@oops_in_progress = external dso_local local_unnamed_addr global i32, align 4
@debug_locks_silent = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.126 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"include/linux/local_lock_internal.h\00", [60 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"DEBUG_LOCKS_WARN_ON(%s)\00", [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"l->owner\00", [23 x i8] zeroinitializer }, align 32
@vm_event_states = external dso_local global %struct.vm_event_state, section ".data..percpu", align 4
@.str.129 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"l->owner != current\00", [44 x i8] zeroinitializer }, align 32
@__tracepoint_mm_page_free_batched = external dso_local global %struct.tracepoint, align 4
@trace_mm_page_free_batched.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@page_reporting_enabled = external dso_local global %struct.static_key_false, align 4
@.str.130 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"VM_BUG_ON_PAGE(!PageBuddy(page))\00", [63 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"VM_BUG_ON_PAGE(page->flags & (((1UL << 22) - 1) & ~0))\00", [41 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"VM_BUG_ON_PAGE(pfn & ((1 << order) - 1))\00", [55 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"VM_BUG_ON_PAGE(bad_range(zone, page))\00", [58 x i8] zeroinitializer }, align 32
@page_outside_zone_boundaries._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.135, ptr @.str.1, i32 593, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013page 0x%lx outside node %d zone %s [ 0x%lx - 0x%lx ]\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"page_outside_zone_boundaries\00", [35 x i8] zeroinitializer }, align 32
@page_outside_zone_boundaries._entry_ptr = internal global ptr @page_outside_zone_boundaries._entry, section ".printk_index", align 4
@.str.136 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"VM_BUG_ON_PAGE(page_count(buddy) != 0)\00", [57 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"VM_BUG_ON_PAGE(!((page->page_type & (0xf0000000 | 0)) == 0xf0000000))\00", [58 x i8] zeroinitializer }, align 32
@page_reporting_order = external dso_local local_unnamed_addr global i32, align 4
@fail_page_alloc = internal global { %struct.anon.86, [32 x i8] } { %struct.anon.86 { %struct.fault_attr { i32 0, i32 1, %struct.atomic_t { i32 1 }, %struct.atomic_t zeroinitializer, i32 2, i8 0, i32 32, i32 0, i32 -1, i32 0, i32 0, i32 0, %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.138, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 0, i32 10, i32 0, i32 0, i32 0, i32 0 }, ptr null }, i8 1, i8 1, i32 1 }, [32 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ratelimit_state.lock\00", [43 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"fail_page_alloc\00", [16 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"ignore-gfp-wait\00", [16 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"ignore-gfp-highmem\00", [45 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"min-order\00", [22 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"fs_reclaim\00", [21 x i8] zeroinitializer }, align 32
@memcg_kmem_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.144 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"include/linux/gfp.h\00", [44 x i8] zeroinitializer }, align 32
@cpusets_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.145 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"VM_BUG_ON_PAGE(bad_range(zone, &page[size]))\00", [51 x i8] zeroinitializer }, align 32
@__tracepoint_mm_page_alloc_extfrag = external dso_local global %struct.tracepoint, align 4
@trace_mm_page_alloc_extfrag.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_mm_page_alloc_zone_locked = external dso_local global %struct.tracepoint, align 4
@trace_mm_page_alloc_zone_locked.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rmqueue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.146 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"VM_BUG_ON_PAGE(page && bad_range(zone, page))\00", [50 x i8] zeroinitializer }, align 32
@__alloc_pages_slowpath.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__alloc_pages_slowpath.__already_done.147 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__alloc_pages_slowpath.__already_done.148 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__alloc_pages_slowpath.__already_done.149 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.150 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"page allocation failure: order:%u\00", [62 x i8] zeroinitializer }, align 32
@cpusets_pre_enable_key = external dso_local global %struct.static_key_false, align 4
@cpusets_insane_config_key = external dso_local global %struct.static_key_false, align 4
@delayacct_key = external dso_local global %struct.static_key_false, align 4
@cpuset_memory_pressure_enabled = external dso_local local_unnamed_addr global i32, align 4
@__tracepoint_reclaim_retry_zone = external dso_local global %struct.tracepoint, align 4
@.str.151 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/oom.h\00", [37 x i8] zeroinitializer }, align 32
@trace_reclaim_retry_zone.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_compact_retry = external dso_local global %struct.tracepoint, align 4
@trace_compact_retry.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@oom_lock = external dso_local global %struct.mutex, align 4
@__alloc_pages_may_oom.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_mm_page_alloc = external dso_local global %struct.tracepoint, align 4
@trace_mm_page_alloc.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@vm_zone_stat = external dso_local global [11 x %struct.atomic_t], align 4
@vm_node_stat = external dso_local global [40 x %struct.atomic_t], align 4
@_totalhigh_pages = external dso_local global %struct.atomic_t, align 4
@show_migration_types._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.154, ptr @.str.1, i32 5885, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"\01c(%s) \00", [24 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"show_migration_types\00", [43 x i8] zeroinitializer }, align 32
@show_migration_types._entry_ptr = internal global ptr @show_migration_types._entry, section ".printk_index", align 4
@__build_all_zonelists.lock = internal global %struct.spinlock { %union.anon.9 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, align 4
@overlap_memmap_init.r = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@mirrored_kernelcore = internal unnamed_addr global i1 false, section ".meminit.data", align 1
@memblock = external dso_local local_unnamed_addr global %struct.memblock, align 4
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@free_area_init_node._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.155, ptr @.str.156, ptr @.str.1, i32 7662, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016Initmem setup node %d [mem %#018Lx-%#018Lx]\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"free_area_init_node\00", [44 x i8] zeroinitializer }, align 32
@free_area_init_node._entry_ptr = internal global ptr @free_area_init_node._entry, section ".printk_index", align 4
@calculate_node_totalpages.__UNIQUE_ID_ddebug466 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.157, ptr @.str.158, ptr @.str.1, ptr @.str.159, i8 7, i8 44, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.157 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"page_alloc\00", [21 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"calculate_node_totalpages\00", [38 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"On node %d totalpages: %lu\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"Failed to allocate %ld bytes for node %d memory map\0A\00", [43 x i8] zeroinitializer }, align 32
@alloc_node_mem_map.__UNIQUE_ID_ddebug469 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.157, ptr @.str.161, ptr @.str.1, ptr @.str.162, i8 7, i8 113, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.161 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"alloc_node_mem_map\00", [45 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: node %d, pgdat %08lx, node_mem_map %08lx\0A\00", [50 x i8] zeroinitializer }, align 32
@free_area_init_core.__UNIQUE_ID_ddebug467 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.157, ptr @.str.163, ptr @.str.1, ptr @.str.164, i8 7, i8 95, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.163 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"free_area_init_core\00", [44 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"  %s zone: %lu pages used for memmap\0A\00", [58 x i8] zeroinitializer }, align 32
@free_area_init_core._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.165, ptr @.str.163, ptr @.str.1, i32 7554, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014  %s zone: %lu memmap pages exceeds freesize %lu\0A\00", [44 x i8] zeroinitializer }, align 32
@free_area_init_core._entry_ptr = internal global ptr @free_area_init_core._entry, section ".printk_index", align 4
@free_area_init_core.__UNIQUE_ID_ddebug468 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.157, ptr @.str.163, ptr @.str.1, ptr @.str.166, i8 7, i8 98, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.166 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"  %s zone: %lu pages reserved\0A\00", [33 x i8] zeroinitializer }, align 32
@pgdat_init_internals.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.167 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&pgdat->kswapd_wait\00", [44 x i8] zeroinitializer }, align 32
@pgdat_init_internals.__key.168 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.169 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&pgdat->pfmemalloc_wait\00", [40 x i8] zeroinitializer }, align 32
@pgdat_init_internals.__key.170 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.171 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&pgdat->reclaim_wait[i]\00", [40 x i8] zeroinitializer }, align 32
@pgdat_init_kcompactd.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.172 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&pgdat->kcompactd_wait\00", [41 x i8] zeroinitializer }, align 32
@zone_init_internals.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.173 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&zone->lock\00", [20 x i8] zeroinitializer }, align 32
@zone_pcp_init.__UNIQUE_ID_ddebug423 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.157, ptr @.str.174, ptr @.str.1, ptr @.str.175, i8 6, i8 -24, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.174 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"zone_pcp_init\00", [18 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"  %s zone: %lu pages, LIFO batch:%u\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"Failed to allocate %ld bytes for zone %s pageblock flags on node %d\0A\00", [59 x i8] zeroinitializer }, align 32
@find_zone_movable_pfns_for_nodes._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.178, ptr @.str.1, i32 7836, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014This configuration results in unmirrored kernel memory.\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"find_zone_movable_pfns_for_nodes\00", [63 x i8] zeroinitializer }, align 32
@find_zone_movable_pfns_for_nodes._entry_ptr = internal global ptr @find_zone_movable_pfns_for_nodes._entry, section ".printk_index", align 4
@required_kernelcore_percent = internal global i32 0, section ".init.data", align 4
@required_kernelcore = internal global i32 0, section ".init.data", align 4
@required_movablecore_percent = internal global i32 0, section ".init.data", align 4
@required_movablecore = internal global i32 0, section ".init.data", align 4
@.str.179 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"DMA\00", [28 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Normal\00", [25 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"HighMem\00", [24 x i8] zeroinitializer }, align 32
@init_unavailable_range._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.182, ptr @.str.183, ptr @.str.1, i32 6748, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016On node %d, zone %s: %lld pages in unavailable ranges\00", [40 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"init_unavailable_range\00", [41 x i8] zeroinitializer }, align 32
@init_unavailable_range._entry_ptr = internal global ptr @init_unavailable_range._entry, section ".printk_index", align 4
@.str.184 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"mirror\00", [25 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"pcp_batch_high_lock.wait_lock\00", [34 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"pcp_batch_high_lock\00", [44 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(((typeof(page))_compound_head(page))))\00", [61 x i8] zeroinitializer }, align 32
@lru_disable_count = external dso_local global %struct.atomic_t, align 4
@alloc_contig_dump_pages.descriptor = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.157, ptr @.str.188, ptr @.str.1, ptr @.str.189, i8 8, i8 -53, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.188 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"alloc_contig_dump_pages\00", [40 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"migrate failure\00", [16 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"migration failure\00", [46 x i8] zeroinitializer }, align 32
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 132, i32 10 }
@___asan_gen_.194 = private unnamed_addr constant [17 x i8] c"vm_numa_stat_key\00", align 1
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 140, i32 1 }
@___asan_gen_.197 = private unnamed_addr constant [14 x i8] c"init_on_alloc\00", align 1
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 190, i32 1 }
@___asan_gen_.200 = private unnamed_addr constant [13 x i8] c"init_on_free\00", align 1
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 193, i32 1 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 246, i32 2 }
@___asan_gen_.206 = private unnamed_addr constant [15 x i8] c"saved_gfp_mask\00", align 1
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 242, i32 14 }
@___asan_gen_.209 = private unnamed_addr constant [28 x i8] c"sysctl_lowmem_reserve_ratio\00", align 1
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 287, i32 5 }
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 319, i32 2 }
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 320, i32 2 }
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 321, i32 2 }
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 322, i32 2 }
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 324, i32 2 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 327, i32 2 }
@___asan_gen_.230 = private unnamed_addr constant [18 x i8] c"migratetype_names\00", align 1
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 318, i32 20 }
@___asan_gen_.233 = private unnamed_addr constant [20 x i8] c"compound_page_dtors\00", align 1
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 331, i32 28 }
@___asan_gen_.236 = private unnamed_addr constant [16 x i8] c"min_free_kbytes\00", align 1
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 342, i32 5 }
@___asan_gen_.239 = private unnamed_addr constant [21 x i8] c"user_min_free_kbytes\00", align 1
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 343, i32 5 }
@___asan_gen_.242 = private unnamed_addr constant [23 x i8] c"watermark_scale_factor\00", align 1
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 345, i32 5 }
@___asan_gen_.245 = private unnamed_addr constant [13 x i8] c"movable_zone\00", align 1
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 361, i32 5 }
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 550, i32 2 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 854, i32 3 }
@___asan_gen_.260 = private unnamed_addr constant [10 x i8] c"fallbacks\00", align 1
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 2483, i32 12 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3501, i32 2 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3502, i32 2 }
@___asan_gen_.269 = private unnamed_addr constant [10 x i8] c"nopage_rs\00", align 1
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 4221, i32 9 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 4231, i32 2 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 4237, i32 2 }
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 5525, i32 2 }
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 5912, i32 2 }
@___asan_gen_.310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 5943, i32 3 }
@___asan_gen_.316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6006, i32 3 }
@___asan_gen_.322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6048, i32 3 }
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6050, i32 4 }
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6051, i32 3 }
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6062, i32 3 }
@___asan_gen_.343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6080, i32 4 }
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6085, i32 3 }
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6090, i32 2 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6485, i32 2 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7087, i32 2 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8059, i32 2 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8063, i32 3 }
@___asan_gen_.395 = private unnamed_addr constant [11 x i8] c"zone_names\00", align 1
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 301, i32 21 }
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8066, i32 4 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8068, i32 4 }
@___asan_gen_.415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8076, i32 2 }
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8079, i32 4 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8088, i32 2 }
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8090, i32 3 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8210, i32 3 }
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8250, i32 2 }
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8344, i32 6 }
@___asan_gen_.455 = private unnamed_addr constant [5 x i8] c"lock\00", align 1
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8496, i32 9 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8545, i32 3 }
@___asan_gen_.467 = private unnamed_addr constant [20 x i8] c"pcp_batch_high_lock\00", align 1
@___asan_gen_.470 = private unnamed_addr constant [30 x i8] c"percpu_pagelist_high_fraction\00", align 1
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 188, i32 5 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8853, i32 9 }
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8855, i32 2 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 9337, i32 2 }
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.540, i32 1368, i32 10 }
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.810, i32 698, i32 1 }
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.810, i32 442, i32 2 }
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1301, i32 2 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1325, i32 3 }
@___asan_gen_.516 = private unnamed_addr constant [31 x i8] c"../include/trace/events/kmem.h\00", align 1
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.516, i32 160, i32 1 }
@___asan_gen_.519 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.519, i32 108, i32 2 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.525, i32 537, i32 2 }
@___asan_gen_.525 = private unnamed_addr constant [30 x i8] c"../include/linux/memcontrol.h\00", align 1
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.525, i32 538, i32 2 }
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1242, i32 19 }
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1254, i32 19 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1260, i32 18 }
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1264, i32 18 }
@___asan_gen_.540 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.540, i32 789, i32 2 }
@___asan_gen_.542 = private unnamed_addr constant [7 x i8] c"resume\00", align 1
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 626, i32 23 }
@___asan_gen_.545 = private unnamed_addr constant [9 x i8] c"nr_shown\00", align 1
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 627, i32 23 }
@___asan_gen_.548 = private unnamed_addr constant [11 x i8] c"nr_unshown\00", align 1
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 628, i32 23 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 640, i32 4 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 650, i32 2 }
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1190, i32 16 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1192, i32 16 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1194, i32 16 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1197, i32 17 }
@___asan_gen_.580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1199, i32 17 }
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1203, i32 16 }
@___asan_gen_.585 = private unnamed_addr constant [17 x i8] c"../mm/internal.h\00", align 1
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.585, i32 145, i32 2 }
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 2537, i32 3 }
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1541, i32 3 }
@___asan_gen_.593 = private unnamed_addr constant [17 x i8] c"pcpu_drain_mutex\00", align 1
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3244, i32 3 }
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 158, i32 8 }
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.615, i32 30, i32 2 }
@___asan_gen_.615 = private unnamed_addr constant [39 x i8] c"../include/linux/local_lock_internal.h\00", align 1
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.615, i32 36, i32 2 }
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1084, i32 2 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1090, i32 2 }
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 1091, i32 2 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 591, i32 3 }
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 918, i32 2 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.810, i32 878, i32 1 }
@___asan_gen_.644 = private unnamed_addr constant [16 x i8] c"fail_page_alloc\00", align 1
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3760, i32 3 }
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3761, i32 10 }
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3795, i32 34 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3798, i32 22 }
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3800, i32 22 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3802, i32 21 }
@___asan_gen_.664 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 4535, i32 2 }
@___asan_gen_.666 = private unnamed_addr constant [23 x i8] c"../include/linux/gfp.h\00", align 1
@___asan_gen_.667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.666, i32 347, i32 2 }
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 2304, i32 3 }
@___asan_gen_.673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 3744, i32 2 }
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 5134, i32 4 }
@___asan_gen_.678 = private unnamed_addr constant [30 x i8] c"../include/trace/events/oom.h\00", align 1
@___asan_gen_.679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.678, i32 32, i32 1 }
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 5885, i32 2 }
@___asan_gen_.689 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6498, i32 33 }
@___asan_gen_.700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7660, i32 2 }
@___asan_gen_.709 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7345, i32 2 }
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7614, i32 10 }
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7618, i32 2 }
@___asan_gen_.724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7550, i32 6 }
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7553, i32 5 }
@___asan_gen_.733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7560, i32 4 }
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7475, i32 2 }
@___asan_gen_.745 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7476, i32 2 }
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7479, i32 3 }
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7460, i32 2 }
@___asan_gen_.758 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.763 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7492, i32 2 }
@___asan_gen_.769 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7071, i32 3 }
@___asan_gen_.772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7379, i32 10 }
@___asan_gen_.781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 7836, i32 4 }
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 303, i32 3 }
@___asan_gen_.787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 308, i32 3 }
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 310, i32 3 }
@___asan_gen_.791 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 6747, i32 3 }
@___asan_gen_.802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 8146, i32 26 }
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 125, i32 8 }
@___asan_gen_.810 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.810, i32 422, i32 1 }
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 9004, i32 2 }
@___asan_gen_.818 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.819 = private constant [19 x i8] c"../mm/page_alloc.c\00", align 1
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.819, i32 9011, i32 20 }
@llvm.compiler.used = appending global [278 x ptr] [ptr @__initcall__kmod_page_alloc__395_3807_fail_page_alloc_debugfs7, ptr @__initcall__kmod_page_alloc__500_8566_init_per_zone_wmark_min2, ptr @__ksymtab___alloc_pages, ptr @__ksymtab___alloc_pages_bulk, ptr @__ksymtab___folio_alloc, ptr @__ksymtab___free_pages, ptr @__ksymtab___get_free_pages, ptr @__ksymtab___page_frag_cache_drain, ptr @__ksymtab__totalram_pages, ptr @__ksymtab_adjust_managed_page_count, ptr @__ksymtab_alloc_contig_range, ptr @__ksymtab_alloc_pages_exact, ptr @__ksymtab_free_contig_range, ptr @__ksymtab_free_pages, ptr @__ksymtab_free_pages_exact, ptr @__ksymtab_fs_reclaim_acquire, ptr @__ksymtab_fs_reclaim_release, ptr @__ksymtab_get_zeroed_page, ptr @__ksymtab_init_on_alloc, ptr @__ksymtab_init_on_free, ptr @__ksymtab_movable_zone, ptr @__ksymtab_node_states, ptr @__ksymtab_nr_free_buffer_pages, ptr @__ksymtab_page_frag_alloc_align, ptr @__ksymtab_page_frag_free, ptr @__ksymtab_si_mem_available, ptr @__ksymtab_si_meminfo, ptr @__ksymtab_split_page, ptr @__setup_cmdline_parse_kernelcore, ptr @__setup_cmdline_parse_movablecore, ptr @__setup_early_init_on_alloc, ptr @__setup_early_init_on_free, ptr @__setup_setup_fail_page_alloc, ptr @alloc_large_system_hash._entry, ptr @alloc_large_system_hash._entry_ptr, ptr @bad_page._entry, ptr @bad_page._entry.110, ptr @bad_page._entry_ptr, ptr @bad_page._entry_ptr.112, ptr @build_all_zonelists._entry, ptr @build_all_zonelists._entry_ptr, ptr @calculate_min_free_kbytes._entry, ptr @calculate_min_free_kbytes._entry_ptr, ptr @find_zone_movable_pfns_for_nodes._entry, ptr @find_zone_movable_pfns_for_nodes._entry_ptr, ptr @free_area_init._entry, ptr @free_area_init._entry.57, ptr @free_area_init._entry.60, ptr @free_area_init._entry.63, ptr @free_area_init._entry.66, ptr @free_area_init._entry.69, ptr @free_area_init._entry.72, ptr @free_area_init._entry.75, ptr @free_area_init._entry_ptr, ptr @free_area_init._entry_ptr.59, ptr @free_area_init._entry_ptr.62, ptr @free_area_init._entry_ptr.65, ptr @free_area_init._entry_ptr.68, ptr @free_area_init._entry_ptr.71, ptr @free_area_init._entry_ptr.74, ptr @free_area_init._entry_ptr.77, ptr @free_area_init_core._entry, ptr @free_area_init_core._entry_ptr, ptr @free_area_init_node._entry, ptr @free_area_init_node._entry_ptr, ptr @free_reserved_area._entry, ptr @free_reserved_area._entry_ptr, ptr @init_currently_empty_zone._entry, ptr @init_currently_empty_zone._entry_ptr, ptr @init_mem_debugging_and_hardening._entry, ptr @init_mem_debugging_and_hardening._entry_ptr, ptr @init_unavailable_range._entry, ptr @init_unavailable_range._entry_ptr, ptr @mem_init_print_info._entry, ptr @mem_init_print_info._entry_ptr, ptr @page_outside_zone_boundaries._entry, ptr @page_outside_zone_boundaries._entry_ptr, ptr @show_free_areas._entry, ptr @show_free_areas._entry.21, ptr @show_free_areas._entry.26, ptr @show_free_areas._entry.29, ptr @show_free_areas._entry.32, ptr @show_free_areas._entry.35, ptr @show_free_areas._entry.37, ptr @show_free_areas._entry.40, ptr @show_free_areas._entry.43, ptr @show_free_areas._entry.46, ptr @show_free_areas._entry_ptr, ptr @show_free_areas._entry_ptr.23, ptr @show_free_areas._entry_ptr.28, ptr @show_free_areas._entry_ptr.31, ptr @show_free_areas._entry_ptr.34, ptr @show_free_areas._entry_ptr.36, ptr @show_free_areas._entry_ptr.39, ptr @show_free_areas._entry_ptr.42, ptr @show_free_areas._entry_ptr.45, ptr @show_free_areas._entry_ptr.48, ptr @show_migration_types._entry, ptr @show_migration_types._entry_ptr, ptr @warn_alloc._entry, ptr @warn_alloc._entry.15, ptr @warn_alloc._entry_ptr, ptr @warn_alloc._entry_ptr.17, ptr @.str, ptr @vm_numa_stat_key, ptr @init_on_alloc, ptr @init_on_free, ptr @.str.1, ptr @saved_gfp_mask, ptr @sysctl_lowmem_reserve_ratio, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @migratetype_names, ptr @compound_page_dtors, ptr @min_free_kbytes, ptr @user_min_free_kbytes, ptr @watermark_scale_factor, ptr @movable_zone, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @fallbacks, ptr @.str.11, ptr @.str.12, ptr @warn_alloc.nopage_rs, ptr @.str.13, ptr @.str.14, ptr @.str.16, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.22, ptr @.str.24, ptr @.str.25, ptr @.str.27, ptr @.str.30, ptr @.str.33, ptr @.str.38, ptr @.str.41, ptr @.str.44, ptr @.str.47, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.58, ptr @zone_names, ptr @.str.61, ptr @.str.64, ptr @.str.67, ptr @.str.70, ptr @.str.73, ptr @.str.76, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @setup_per_zone_wmarks.lock, ptr @.str.83, ptr @.str.84, ptr @pcp_batch_high_lock, ptr @percpu_pagelist_high_fraction, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @bad_page.resume, ptr @bad_page.nr_shown, ptr @bad_page.nr_unshown, ptr @.str.108, ptr @.str.109, ptr @.str.111, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.121, ptr @.str.122, ptr @pcpu_drain_mutex, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @fail_page_alloc, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.150, ptr @.str.151, ptr @.str.153, ptr @.str.154, ptr @overlap_memmap_init.r, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @pgdat_init_internals.__key, ptr @.str.167, ptr @pgdat_init_internals.__key.168, ptr @.str.169, ptr @pgdat_init_internals.__key.170, ptr @.str.171, ptr @pgdat_init_kcompactd.__key, ptr @.str.172, ptr @zone_init_internals.__key, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190], section "llvm.metadata"
@0 = internal global [210 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vm_numa_stat_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.194 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_on_alloc to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.197 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_on_free to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @saved_gfp_mask to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sysctl_lowmem_reserve_ratio to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @migratetype_names to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @compound_page_dtors to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @min_free_kbytes to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @user_min_free_kbytes to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @watermark_scale_factor to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @movable_zone to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_mem_debugging_and_hardening._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fallbacks to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @warn_alloc.nopage_rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @warn_alloc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @warn_alloc._entry.15 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 305, i32 384, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry.21 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 276, i32 352, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 299, i32 384, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry.32 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry.37 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry.40 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry.43 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_free_areas._entry.46 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @build_all_zonelists._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_currently_empty_zone._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init._entry.57 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @zone_names to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init._entry.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init._entry.63 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init._entry.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init._entry.69 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init._entry.72 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init._entry.75 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_reserved_area._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mem_init_print_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 145, i32 192, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @setup_per_zone_wmarks.lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @calculate_min_free_kbytes._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcp_batch_high_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @percpu_pagelist_high_fraction to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_large_system_hash._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bad_page.resume to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bad_page.nr_shown to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bad_page.nr_unshown to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bad_page._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bad_page._entry.110 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcpu_drain_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @page_outside_zone_boundaries._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fail_page_alloc to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_migration_types._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @overlap_memmap_init.r to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init_node._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_area_init_core._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pgdat_init_internals.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pgdat_init_internals.__key.168 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pgdat_init_internals.__key.170 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pgdat_init_kcompactd.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @zone_init_internals.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @find_zone_movable_pfns_for_nodes._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_unavailable_range._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @early_init_on_alloc(ptr noundef %buf) #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @kstrtobool(ptr noundef %buf, ptr noundef nonnull @_init_on_alloc_enabled_early) #27
  ret i32 %call
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @early_init_on_free(ptr noundef %buf) #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @kstrtobool(ptr noundef %buf, ptr noundef nonnull @_init_on_free_enabled_early) #27
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pm_restore_gfp_mask() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @system_transition_mutex) #27
  br i1 %call, label %if.end, label %do.end, !prof !582

do.end:                                           ; preds = %entry
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 246, i32 noundef 9, ptr noundef null) #27
  br label %if.end

if.end:                                           ; preds = %do.end, %entry
  %0 = load i32, ptr @saved_gfp_mask, align 4
  %tobool20.not = icmp eq i32 %0, 0
  br i1 %tobool20.not, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.end
  store i32 %0, ptr @gfp_allowed_mask, align 4
  store i32 0, ptr @saved_gfp_mask, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.end
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mutex_is_locked(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pm_restrict_gfp_mask() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @system_transition_mutex) #27
  br i1 %call, label %if.end, label %do.end, !prof !582

do.end:                                           ; preds = %entry
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 255, i32 noundef 9, ptr noundef null) #27
  br label %if.end

if.end:                                           ; preds = %do.end, %entry
  %0 = load i32, ptr @saved_gfp_mask, align 4
  %tobool21.not = icmp eq i32 %0, 0
  br i1 %tobool21.not, label %if.end43, label %do.end37, !prof !582

do.end37:                                         ; preds = %if.end
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 256, i32 noundef 9, ptr noundef null) #27
  br label %if.end43

if.end43:                                         ; preds = %do.end37, %if.end
  %1 = load i32, ptr @gfp_allowed_mask, align 4
  store i32 %1, ptr @saved_gfp_mask, align 4
  %and = and i32 %1, -193
  store i32 %and, ptr @gfp_allowed_mask, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @pm_suspended_storage() local_unnamed_addr #4 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @gfp_allowed_mask, align 4
  %and = and i32 %0, 192
  %cmp = icmp ne i32 %and, 192
  ret i1 %cmp
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_compound_page(ptr noundef %page) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %2, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %entry
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %3, %if.end.i ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@free_compound_page, %mem_cgroup_uncharge.exit)) #27
          to label %if.end.i4 [label %mem_cgroup_uncharge.exit], !srcloc !583

if.end.i4:                                        ; preds = %_compound_head.exit
  %4 = inttoptr i32 %retval.0.i to ptr
  tail call void @__mem_cgroup_uncharge(ptr noundef %4) #27
  br label %mem_cgroup_uncharge.exit

mem_cgroup_uncharge.exit:                         ; preds = %if.end.i4, %_compound_head.exit
  %5 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %6, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %PageHead.exit.i, !prof !584

if.then.i.i:                                      ; preds = %mem_cgroup_uncharge.exit
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #27, !srcloc !585
  unreachable

PageHead.exit.i:                                  ; preds = %mem_cgroup_uncharge.exit
  %7 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %page, align 4
  %9 = and i32 %8, 65536
  %tobool.not.i5 = icmp eq i32 %9, 0
  br i1 %tobool.not.i5, label %if.then.i8, label %compound_order.exit

compound_order.exit:                              ; preds = %PageHead.exit.i
  %10 = getelementptr %struct.page, ptr %page, i32 1, i32 1
  %compound_order.i = getelementptr inbounds %struct.anon.46, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %compound_order.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %compound_order.i, align 1
  %conv.i = zext i8 %12 to i32
  %cmp.i.i = icmp ult i8 %12, 4
  br i1 %cmp.i.i, label %if.then.i8, label %if.else.i

if.then.i8:                                       ; preds = %compound_order.exit, %PageHead.exit.i
  %retval.0.i712 = phi i32 [ %conv.i, %compound_order.exit ], [ 0, %PageHead.exit.i ]
  tail call void @free_unref_page(ptr noundef %page, i32 noundef %retval.0.i712) #27
  br label %free_the_page.exit

if.else.i:                                        ; preds = %compound_order.exit
  tail call fastcc void @__free_pages_ok(ptr noundef %page, i32 noundef %conv.i, i32 noundef 0) #27
  br label %free_the_page.exit

free_the_page.exit:                               ; preds = %if.else.i, %if.then.i8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @get_pfnblock_flags_mask(ptr noundef %page, i32 noundef %pfn, i32 noundef %mask) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %get_pageblock_bitmap.exit.i, !prof !584

if.then.i.i.i.i:                                  ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i:                      ; preds = %entry
  %shr.i.i.i.i = lshr i32 %1, 30
  %pageblock_flags.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i, i32 9
  %2 = ptrtoint ptr %pageblock_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pageblock_flags.i.i, align 8
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i8.i = icmp eq i32 %5, -1
  br i1 %cmp.i.not.i.i.i8.i, label %if.then.i.i.i9.i, label %__get_pfnblock_flags_mask.exit, !prof !584

if.then.i.i.i9.i:                                 ; preds = %get_pageblock_bitmap.exit.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

__get_pfnblock_flags_mask.exit:                   ; preds = %get_pageblock_bitmap.exit.i
  %shr.i.i.i10.i = lshr i32 %5, 30
  %zone_start_pfn.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i, i32 10
  %6 = ptrtoint ptr %zone_start_pfn.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %zone_start_pfn.i.i, align 4
  %and.i.i = and i32 %7, -2048
  %sub.i.i = sub i32 %pfn, %and.i.i
  %8 = lshr i32 %sub.i.i, 9
  %div7.i = lshr i32 %sub.i.i, 14
  %and.i = and i32 %8, 28
  %arrayidx.i = getelementptr i32, ptr %3, i32 %div7.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %shr.i = lshr i32 %10, %and.i
  %and2.i = and i32 %shr.i, %mask
  ret i32 %and2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @set_pfnblock_flags_mask(ptr noundef %page, i32 noundef %flags, i32 noundef %pfn, i32 noundef %mask) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %get_pageblock_bitmap.exit, !prof !584

if.then.i.i.i:                                    ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit:                        ; preds = %entry
  %shr.i.i.i = lshr i32 %1, 30
  %pageblock_flags.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i, i32 9
  %2 = ptrtoint ptr %pageblock_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pageblock_flags.i, align 8
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i62 = icmp eq i32 %5, -1
  br i1 %cmp.i.not.i.i.i62, label %if.then.i.i.i63, label %pfn_to_bitidx.exit, !prof !584

if.then.i.i.i63:                                  ; preds = %get_pageblock_bitmap.exit
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

pfn_to_bitidx.exit:                               ; preds = %get_pageblock_bitmap.exit
  %shr.i.i.i64 = lshr i32 %5, 30
  %zone_start_pfn.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i64, i32 10
  %6 = ptrtoint ptr %zone_start_pfn.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %zone_start_pfn.i, align 4
  %and.i = and i32 %7, -2048
  %sub.i = sub i32 %pfn, %and.i
  %8 = lshr i32 %sub.i, 9
  %9 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %10, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %pfn_to_bitidx.exit
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %pfn_to_bitidx.exit
  %shr.i.i = lshr i32 %10, 30
  %zone_start_pfn.i65 = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 10
  %11 = ptrtoint ptr %zone_start_pfn.i65 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %zone_start_pfn.i65, align 4
  %cmp.not.i = icmp ugt i32 %12, %pfn
  br i1 %cmp.not.i, label %if.then, label %zone_spans_pfn.exit, !prof !587

zone_spans_pfn.exit:                              ; preds = %page_zone.exit
  %spanned_pages.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 12
  %13 = ptrtoint ptr %spanned_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %spanned_pages.i.i, align 4
  %add.i.i = add i32 %14, %12
  %cmp1.i = icmp ugt i32 %add.i.i, %pfn
  br i1 %cmp1.i, label %do.end17, label %if.then, !prof !582

if.then:                                          ; preds = %zone_spans_pfn.exit, %page_zone.exit
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.8) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 550, 0\0A.popsection", ""() #27, !srcloc !588
  unreachable

do.end17:                                         ; preds = %zone_spans_pfn.exit
  %and = and i32 %8, 28
  %div61 = lshr i32 %sub.i, 14
  %shl = shl i32 %mask, %and
  %shl18 = shl i32 %flags, %and
  %arrayidx = getelementptr i32, ptr %3, i32 %div61
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %arrayidx, align 4
  %neg = xor i32 %shl, -1
  br label %for.cond

for.cond:                                         ; preds = %__cmpxchg.exit, %do.end17
  %word.0 = phi i32 [ %16, %do.end17 ], [ %asmresult1.i, %__cmpxchg.exit ]
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 4) #27
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !589
  %and34 = and i32 %word.0, %neg
  %or = or i32 %and34, %shl18
  tail call void @llvm.prefetch.p0(ptr %arrayidx, i32 1, i32 3, i32 1) #27
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %for.cond
  %17 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %arrayidx, i32 %word.0, i32 %or) #27, !srcloc !590
  %asmresult.i = extractvalue { i32, i32 } %17, 0
  %tobool.not.i = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i, label %__cmpxchg.exit, label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  %asmresult1.i = extractvalue { i32, i32 } %17, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !591
  %cmp = icmp eq i32 %word.0, %asmresult1.i
  br i1 %cmp, label %for.end, label %for.cond

for.end:                                          ; preds = %__cmpxchg.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @set_pageblock_migratetype(ptr noundef %page, i32 noundef %migratetype) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not = icmp ne i32 %0, 0
  %cmp = icmp slt i32 %migratetype, 3
  %spec.select = and i1 %cmp, %tobool.not
  br i1 %spec.select, label %if.then, label %if.end, !prof !584

if.then:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %migratetype.addr.0 = phi i32 [ 0, %if.then ], [ %migratetype, %entry ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %1 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %2 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %2
  tail call void @set_pfnblock_flags_mask(ptr noundef %page, i32 noundef %migratetype.addr.0, i32 noundef %add, i32 noundef 7)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_the_page(ptr noundef %page, i32 noundef %order) unnamed_addr #5 align 64 {
entry:
  %cmp.i = icmp ult i32 %order, 4
  br i1 %cmp.i, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void @free_unref_page(ptr noundef %page, i32 noundef %order)
  br label %if.end

if.else:                                          ; preds = %entry
  tail call fastcc void @__free_pages_ok(ptr noundef %page, i32 noundef %order, i32 noundef 0)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @compound_order(ptr noundef %page) unnamed_addr #5 align 64 {
entry:
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PageHead.exit, !prof !584

if.then.i:                                        ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #27, !srcloc !585
  unreachable

PageHead.exit:                                    ; preds = %entry
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  %4 = and i32 %3, 65536
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %PageHead.exit
  %5 = getelementptr %struct.page, ptr %page, i32 1, i32 1
  %compound_order = getelementptr inbounds %struct.anon.46, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %compound_order to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %compound_order, align 1
  %conv = zext i8 %7 to i32
  br label %return

return:                                           ; preds = %if.end, %PageHead.exit
  %retval.0 = phi i32 [ %conv, %if.end ], [ 0, %PageHead.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @prep_compound_page(ptr noundef %page, i32 noundef %order) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %shl = shl nuw i32 1, %order
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %__SetPageHead.exit, !prof !584

if.then.i:                                        ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #27, !srcloc !592
  unreachable

__SetPageHead.exit:                               ; preds = %entry
  %or.i.i = or i32 %1, 65536
  %2 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or.i.i, ptr %page, align 4
  %cmp7 = icmp sgt i32 %shl, 1
  br i1 %cmp7, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %__SetPageHead.exit
  %3 = ptrtoint ptr %page to i32
  %add.i.i = add i32 %3, 1
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.08 = phi i32 [ 1, %for.body.lr.ph ], [ %inc, %for.body ]
  %mapping.i = getelementptr %struct.page, ptr %page, i32 %i.08, i32 1, i32 0, i32 1
  %4 = ptrtoint ptr %mapping.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 1024 to ptr), ptr %mapping.i, align 4
  %5 = getelementptr %struct.page, ptr %page, i32 %i.08, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 %add.i.i, ptr %5, align 4
  %inc = add nuw nsw i32 %i.08, 1
  %exitcond.not = icmp eq i32 %inc, %shl
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %__SetPageHead.exit
  %compound_dtor6.i.i = getelementptr %struct.page, ptr %page, i32 1, i32 1, i32 0, i32 0, i32 1
  %7 = ptrtoint ptr %compound_dtor6.i.i to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 1, ptr %compound_dtor6.i.i, align 4
  %conv.i.i = trunc i32 %order to i8
  %8 = getelementptr %struct.page, ptr %page, i32 1, i32 1
  %compound_order.i.i = getelementptr inbounds %struct.anon.46, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %compound_order.i.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %conv.i.i, ptr %compound_order.i.i, align 1
  %compound_nr.i.i = getelementptr %struct.page, ptr %page, i32 1, i32 1, i32 0, i32 2
  %10 = ptrtoint ptr %compound_nr.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %shl, ptr %compound_nr.i.i, align 4
  %compound_mapcount.i.i = getelementptr %struct.page, ptr %page, i32 1, i32 1, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %compound_mapcount.i.i, i32 noundef 4) #27
  %11 = ptrtoint ptr %compound_mapcount.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 -1, ptr %compound_mapcount.i.i, align 4
  %12 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and.i.i.i = and i32 %14, 1
  %tobool.not.i5.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i5.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !582

if.then.i.i.i:                                    ; preds = %for.end
  %sub.i.i.i = add i32 %14, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %for.end
  %15 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %15, %if.end.i.i.i ]
  %16 = inttoptr i32 %retval.0.i.i.i to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  %19 = and i32 %18, 65536
  %tobool.not.i.i.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i.i.i, label %PageCompound.exit.i.i, label %land.rhs.i.i

PageCompound.exit.i.i:                            ; preds = %_compound_head.exit.i.i
  %20 = getelementptr inbounds %struct.page, ptr %16, i32 0, i32 1
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  %and.i.i.i.i = and i32 %22, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %prep_compound_head.exit, label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %PageCompound.exit.i.i, %_compound_head.exit.i.i
  %23 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %16, align 4
  %cmp.i.not.i.i.i.i = icmp eq i32 %24, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %PageHead.exit.i.i.i, !prof !584

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i
  tail call void @dump_page(ptr noundef %16, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #27, !srcloc !585
  unreachable

PageHead.exit.i.i.i:                              ; preds = %land.rhs.i.i
  %25 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %16, align 4
  %27 = and i32 %26, 65536
  %tobool.not.i6.i.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i6.i.i, label %prep_compound_head.exit, label %hpage_pincount_available.exit.i

hpage_pincount_available.exit.i:                  ; preds = %PageHead.exit.i.i.i
  %28 = getelementptr %struct.page, ptr %16, i32 1, i32 1
  %compound_order.i.i.i = getelementptr inbounds %struct.anon.46, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %compound_order.i.i.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %compound_order.i.i.i, align 1
  %phi.cmp.i.i = icmp ugt i8 %30, 1
  br i1 %phi.cmp.i.i, label %if.then.i6, label %prep_compound_head.exit

if.then.i6:                                       ; preds = %hpage_pincount_available.exit.i
  %hpage_pinned_refcount.i.i = getelementptr %struct.page, ptr %page, i32 2, i32 1, i32 0, i32 0, i32 1
  %call.i.i7.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %hpage_pinned_refcount.i.i, i32 noundef 4) #27
  %31 = ptrtoint ptr %hpage_pinned_refcount.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile i32 0, ptr %hpage_pinned_refcount.i.i, align 4
  br label %prep_compound_head.exit

prep_compound_head.exit:                          ; preds = %if.then.i6, %hpage_pincount_available.exit.i, %PageHead.exit.i.i.i, %PageCompound.exit.i.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @init_mem_debugging_and_hardening() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @_page_poisoning_enabled_early to i32))
  %0 = load i8, ptr @_page_poisoning_enabled_early, align 1, !range !593
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %if.end.thread, label %if.end

if.end:                                           ; preds = %entry
  tail call void @static_key_enable(ptr noundef nonnull @_page_poisoning_enabled) #27
  %1 = load i8, ptr @_init_on_alloc_enabled_early, align 1, !range !593
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %lor.lhs.false2, label %if.end7.thread17

if.end.thread:                                    ; preds = %entry
  %2 = load i8, ptr @_init_on_alloc_enabled_early, align 1
  %tobool.not15 = icmp eq i8 %2, 0
  br i1 %tobool.not15, label %if.else, label %if.then9

lor.lhs.false2:                                   ; preds = %if.end
  %3 = load i8, ptr @_init_on_free_enabled_early, align 1, !range !593
  %tobool3.not = icmp eq i8 %3, 0
  br i1 %tobool3.not, label %if.end7, label %if.end7.thread17

if.end7.thread17:                                 ; preds = %lor.lhs.false2, %if.end
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9) #29
  store i8 0, ptr @_init_on_alloc_enabled_early, align 1
  store i8 0, ptr @_init_on_free_enabled_early, align 1
  br label %if.else

if.end7:                                          ; preds = %lor.lhs.false2
  %.pr.pr = load i8, ptr @_init_on_alloc_enabled_early, align 1
  %tobool8.not = icmp eq i8 %.pr.pr, 0
  br i1 %tobool8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end7, %if.end.thread
  tail call void @static_key_enable(ptr noundef nonnull @init_on_alloc) #27
  br label %if.end10

if.else:                                          ; preds = %if.end7, %if.end7.thread17, %if.end.thread
  tail call void @static_key_disable(ptr noundef nonnull @init_on_alloc) #27
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then9
  %4 = load i8, ptr @_init_on_free_enabled_early, align 1, !range !593
  %tobool11.not = icmp eq i8 %4, 0
  br i1 %tobool11.not, label %if.else13, label %if.then12

if.then12:                                        ; preds = %if.end10
  tail call void @static_key_enable(ptr noundef nonnull @init_on_free) #27
  br label %if.end14

if.else13:                                        ; preds = %if.end10
  tail call void @static_key_disable(ptr noundef nonnull @init_on_free) #27
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.then12
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_enable(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_disable(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @reserve_bootmem_region(i32 noundef %start, i32 noundef %end) local_unnamed_addr #0 section ".meminit.text" align 64 {
entry:
  %shr = lshr i32 %start, 12
  %sub = add i32 %end, 4095
  %shr1 = lshr i32 %sub, 12
  %cmp9 = icmp ult i32 %shr, %shr1
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.inc, %entry
  %start_pfn.010 = phi i32 [ %inc, %for.inc ], [ %shr, %entry ]
  %call = tail call i32 @pfn_valid(i32 noundef %start_pfn.010) #27
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub2 = sub i32 %start_pfn.010, %1
  %add.ptr = getelementptr %struct.page, ptr %0, i32 %sub2
  %2 = getelementptr %struct.page, ptr %0, i32 %sub2, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %2, ptr %2, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %2, ptr %prev.i, align 4
  %5 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %add.ptr, align 4
  %7 = and i32 %6, 65536
  %tobool.not.i.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %if.then.i

PageCompound.exit.i:                              ; preds = %if.then
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %2, align 4
  %and.i.i.i = and i32 %9, 1
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %PageCompound.exit.i, %if.then
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.95) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 442, 0\0A.popsection", ""() #27, !srcloc !594
  unreachable

do.body7.i:                                       ; preds = %PageCompound.exit.i
  %10 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %add.ptr, align 4
  %cmp.i.not.i = icmp eq i32 %11, -1
  br i1 %cmp.i.not.i, label %if.then16.i, label %__SetPageReserved.exit, !prof !584

if.then16.i:                                      ; preds = %do.body7.i
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 442, 0\0A.popsection", ""() #27, !srcloc !595
  unreachable

__SetPageReserved.exit:                           ; preds = %do.body7.i
  %or.i.i = or i32 %11, 4096
  %12 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or.i.i, ptr %add.ptr, align 4
  br label %for.inc

for.inc:                                          ; preds = %__SetPageReserved.exit, %for.body
  %inc = add nuw nsw i32 %start_pfn.010, 1
  %exitcond.not = icmp eq i32 %inc, %shr1
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pfn_valid(i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__free_pages_core(ptr noundef %page, i32 noundef %order) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %shl = shl nuw i32 1, %order
  tail call void @llvm.prefetch.p0(ptr %page, i32 1, i32 3, i32 1)
  %sub = add i32 %shl, -1
  %cmp30.not = icmp eq i32 %sub, 0
  br i1 %cmp30.not, label %for.end, label %for.body

for.body:                                         ; preds = %set_page_count.exit, %entry
  %loop.032 = phi i32 [ %inc, %set_page_count.exit ], [ 0, %entry ]
  %p.031 = phi ptr [ %add.ptr, %set_page_count.exit ], [ %page, %entry ]
  %add.ptr = getelementptr %struct.page, ptr %p.031, i32 1
  tail call void @llvm.prefetch.p0(ptr %add.ptr, i32 1, i32 3, i32 1)
  %0 = ptrtoint ptr %p.031 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %p.031, align 4
  %2 = and i32 %1, 65536
  %tobool.not.i.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %if.then.i

PageCompound.exit.i:                              ; preds = %for.body
  %3 = getelementptr inbounds %struct.page, ptr %p.031, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i.i = and i32 %5, 1
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %PageCompound.exit.i, %for.body
  tail call void @dump_page(ptr noundef %p.031, ptr noundef nonnull @.str.95) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 441, 0\0A.popsection", ""() #27, !srcloc !596
  unreachable

do.body7.i:                                       ; preds = %PageCompound.exit.i
  %6 = ptrtoint ptr %p.031 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %p.031, align 4
  %cmp.i.not.i = icmp eq i32 %7, -1
  br i1 %cmp.i.not.i, label %if.then16.i, label %__ClearPageReserved.exit, !prof !584

if.then16.i:                                      ; preds = %do.body7.i
  tail call void @dump_page(ptr noundef %p.031, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 441, 0\0A.popsection", ""() #27, !srcloc !597
  unreachable

__ClearPageReserved.exit:                         ; preds = %do.body7.i
  %and.i.i = and i32 %7, -4097
  %8 = ptrtoint ptr %p.031 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %and.i.i, ptr %p.031, align 4
  %_refcount.i = getelementptr inbounds %struct.page, ptr %p.031, i32 0, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i, i32 noundef 4) #27
  %9 = ptrtoint ptr %_refcount.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 0, ptr %_refcount.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_set, i32 0, i32 1), ptr blockaddress(@__free_pages_core, %if.then.i22)) #27
          to label %set_page_count.exit [label %if.then.i22], !srcloc !583

if.then.i22:                                      ; preds = %__ClearPageReserved.exit
  tail call void @__page_ref_set(ptr noundef %p.031, i32 noundef 0) #27
  br label %set_page_count.exit

set_page_count.exit:                              ; preds = %if.then.i22, %__ClearPageReserved.exit
  %inc = add nuw i32 %loop.032, 1
  %exitcond.not = icmp eq i32 %inc, %sub
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %set_page_count.exit, %entry
  %p.0.lcssa = phi ptr [ %page, %entry ], [ %add.ptr, %set_page_count.exit ]
  %10 = ptrtoint ptr %p.0.lcssa to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %p.0.lcssa, align 4
  %12 = and i32 %11, 65536
  %tobool.not.i.i12 = icmp eq i32 %12, 0
  br i1 %tobool.not.i.i12, label %PageCompound.exit.i15, label %if.then.i16

PageCompound.exit.i15:                            ; preds = %for.end
  %13 = getelementptr inbounds %struct.page, ptr %p.0.lcssa, i32 0, i32 1
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %13, align 4
  %and.i.i.i13 = and i32 %15, 1
  %tobool.not.i14 = icmp eq i32 %and.i.i.i13, 0
  br i1 %tobool.not.i14, label %do.body7.i18, label %if.then.i16, !prof !582

if.then.i16:                                      ; preds = %PageCompound.exit.i15, %for.end
  tail call void @dump_page(ptr noundef %p.0.lcssa, ptr noundef nonnull @.str.95) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 441, 0\0A.popsection", ""() #27, !srcloc !596
  unreachable

do.body7.i18:                                     ; preds = %PageCompound.exit.i15
  %16 = ptrtoint ptr %p.0.lcssa to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %p.0.lcssa, align 4
  %cmp.i.not.i17 = icmp eq i32 %17, -1
  br i1 %cmp.i.not.i17, label %if.then16.i19, label %__ClearPageReserved.exit21, !prof !584

if.then16.i19:                                    ; preds = %do.body7.i18
  tail call void @dump_page(ptr noundef %p.0.lcssa, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 441, 0\0A.popsection", ""() #27, !srcloc !597
  unreachable

__ClearPageReserved.exit21:                       ; preds = %do.body7.i18
  %and.i.i20 = and i32 %17, -4097
  %18 = ptrtoint ptr %p.0.lcssa to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %and.i.i20, ptr %p.0.lcssa, align 4
  %_refcount.i23 = getelementptr inbounds %struct.page, ptr %p.0.lcssa, i32 0, i32 3
  %call.i.i.i24 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i23, i32 noundef 4) #27
  %19 = ptrtoint ptr %_refcount.i23 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile i32 0, ptr %_refcount.i23, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_set, i32 0, i32 1), ptr blockaddress(@__free_pages_core, %if.then.i25)) #27
          to label %set_page_count.exit26 [label %if.then.i25], !srcloc !583

if.then.i25:                                      ; preds = %__ClearPageReserved.exit21
  tail call void @__page_ref_set(ptr noundef %p.0.lcssa, i32 noundef 0) #27
  br label %set_page_count.exit26

set_page_count.exit26:                            ; preds = %if.then.i25, %__ClearPageReserved.exit21
  %20 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %21, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %set_page_count.exit26
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %set_page_count.exit26
  %shr.i.i = lshr i32 %21, 30
  %managed_pages = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 11
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %managed_pages, i32 noundef 4) #27
  tail call void @llvm.prefetch.p0(ptr %managed_pages, i32 1, i32 3, i32 1) #27
  %22 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %managed_pages, ptr %managed_pages, i32 %shl, ptr elementtype(i32) %managed_pages) #27, !srcloc !598
  tail call fastcc void @__free_pages_ok(ptr noundef %page, i32 noundef %order, i32 noundef 6)
  ret void
}

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #7

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_page_count(ptr noundef %page, i32 noundef %v) unnamed_addr #5 align 64 {
entry:
  %_refcount = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount, i32 noundef 4) #27
  %0 = ptrtoint ptr %_refcount to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile i32 %v, ptr %_refcount, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_set, i32 0, i32 1), ptr blockaddress(@set_page_count, %if.then)) #27
          to label %if.end [label %if.then], !srcloc !583

if.then:                                          ; preds = %entry
  tail call void @__page_ref_set(ptr noundef %page, i32 noundef %v) #27
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__free_pages_ok(ptr noundef %page, i32 noundef %order, i32 noundef %fpi_flags) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %1
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i55, label %page_zone.exit, !prof !584

if.then.i.i55:                                    ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %entry
  %shr.i.i56 = lshr i32 %3, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i56
  %4 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  %and.i.i = and i32 %6, 1
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.end10.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %page_zone.exit
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.96) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1301, 0\0A.popsection", ""() #27, !srcloc !599
  unreachable

do.end10.i:                                       ; preds = %page_zone.exit
  tail call fastcc void @trace_mm_page_free(ptr noundef %page, i32 noundef %order) #27
  %tobool27.not.i = icmp eq i32 %order, 0
  br i1 %tobool27.not.i, label %if.end81.i, label %if.then34.i, !prof !582

if.then34.i:                                      ; preds = %do.end10.i
  %7 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %page, align 4
  %9 = and i32 %8, 65536
  %tobool.not.i.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %land.rhs.i

PageCompound.exit.i:                              ; preds = %if.then34.i
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %4, align 4
  %and.i.i.i = and i32 %11, 1
  %tobool36.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool36.not.i, label %if.end61.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %PageCompound.exit.i, %if.then34.i
  %call41.i = tail call fastcc i32 @compound_order(ptr noundef %page) #27
  %cmp.not.i = icmp eq i32 %call41.i, %order
  br i1 %cmp.not.i, label %if.end61.i, label %if.then49.i, !prof !582

if.then49.i:                                      ; preds = %land.rhs.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.97) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1325, 0\0A.popsection", ""() #27, !srcloc !600
  unreachable

if.end61.i:                                       ; preds = %land.rhs.i, %PageCompound.exit.i
  %tobool36.not14.i = phi i1 [ true, %PageCompound.exit.i ], [ false, %land.rhs.i ]
  %shl.i = shl nuw i32 1, %order
  %cmp6221.i = icmp sgt i32 %shl.i, 1
  br i1 %cmp6221.i, label %for.body.i, label %if.end81.i

for.body.i:                                       ; preds = %for.inc.i, %if.end61.i
  %i.023.i = phi i32 [ %inc80.i, %for.inc.i ], [ 1, %if.end61.i ]
  %bad.022.i = phi i32 [ %bad.2.i, %for.inc.i ], [ 0, %if.end61.i ]
  br i1 %tobool36.not14.i, label %if.end67.i, label %if.then65.i

if.then65.i:                                      ; preds = %for.body.i
  %add.ptr.i = getelementptr %struct.page, ptr %page, i32 %i.023.i
  %call66.i = tail call fastcc i32 @free_tail_pages_check(ptr noundef %page, ptr noundef %add.ptr.i) #27
  %add.i = add i32 %call66.i, %bad.022.i
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.then65.i, %for.body.i
  %bad.1.i = phi i32 [ %add.i, %if.then65.i ], [ %bad.022.i, %for.body.i ]
  %add.ptr68.i = getelementptr %struct.page, ptr %page, i32 %i.023.i
  %call69.i = tail call fastcc i32 @check_free_page(ptr noundef %add.ptr68.i) #27
  %tobool70.not.i = icmp eq i32 %call69.i, 0
  br i1 %tobool70.not.i, label %if.end78.i, label %if.then77.i, !prof !582

if.then77.i:                                      ; preds = %if.end67.i
  %inc.i = add i32 %bad.1.i, 1
  br label %for.inc.i

if.end78.i:                                       ; preds = %if.end67.i
  %12 = ptrtoint ptr %add.ptr68.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %add.ptr68.i, align 4
  %and.i = and i32 %13, -4194304
  store i32 %and.i, ptr %add.ptr68.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end78.i, %if.then77.i
  %bad.2.i = phi i32 [ %inc.i, %if.then77.i ], [ %bad.1.i, %if.end78.i ]
  %inc80.i = add nuw nsw i32 %i.023.i, 1
  %exitcond.not.i = icmp eq i32 %inc80.i, %shl.i
  br i1 %exitcond.not.i, label %if.end81.i, label %for.body.i

if.end81.i:                                       ; preds = %for.inc.i, %if.end61.i, %do.end10.i
  %bad.3.i = phi i32 [ 0, %do.end10.i ], [ 0, %if.end61.i ], [ %bad.2.i, %for.inc.i ]
  %mapping.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %14 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mapping.i.i, align 4
  %16 = ptrtoint ptr %15 to i32
  %and.i1.i = and i32 %16, 3
  %cmp.i.not.i = icmp eq i32 %and.i1.i, 0
  br i1 %cmp.i.not.i, label %if.end85.i, label %if.then84.i

if.then84.i:                                      ; preds = %if.end81.i
  %17 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %mapping.i.i, align 4
  br label %if.end85.i

if.end85.i:                                       ; preds = %if.then84.i, %if.end81.i
  callbr void asm sideeffect "1:\0A\09b ${1:l}\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memcg_kmem_enabled_key, i32 1), ptr blockaddress(@__free_pages_ok, %if.then94.i)) #27
          to label %land.lhs.true88.i [label %if.then94.i], !srcloc !601

land.lhs.true88.i:                                ; preds = %if.end85.i
  %18 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %4, align 4
  %and.i.i2.i = and i32 %19, 1
  %tobool.not.i.i.i = icmp eq i32 %and.i.i2.i, 0
  br i1 %tobool.not.i.i.i, label %_compound_head.exit.i.i, label %if.then.i.i.i, !prof !582

if.then.i.i.i:                                    ; preds = %land.lhs.true88.i
  %sub.i.i.i = add i32 %19, -1
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.then.i.i.i, %land.lhs.true88.i
  %retval.0.i.i3.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %sub.ptr.lhs.cast, %land.lhs.true88.i ]
  %20 = inttoptr i32 %retval.0.i.i3.i to ptr
  %21 = getelementptr inbounds %struct.page, ptr %20, i32 0, i32 1
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %21, align 4
  %and.i.i.i.i = and i32 %23, 1
  %tobool.not.i2.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i2.i.i, label %do.body7.i.i.i, label %if.then.i3.i.i, !prof !582

if.then.i3.i.i:                                   ; preds = %_compound_head.exit.i.i
  tail call void @dump_page(ptr noundef %20, ptr noundef nonnull @.str.101) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 537, 0\0A.popsection", ""() #27, !srcloc !602
  unreachable

do.body7.i.i.i:                                   ; preds = %_compound_head.exit.i.i
  %memcg_data.i.i.i = getelementptr inbounds %struct.anon.85, ptr %20, i32 0, i32 7
  %24 = ptrtoint ptr %memcg_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %memcg_data.i.i.i, align 4
  %and.i4.i.i = and i32 %25, 1
  %tobool8.not.i.i.i = icmp eq i32 %and.i4.i.i, 0
  br i1 %tobool8.not.i.i.i, label %PageMemcgKmem.exit.i, label %if.then15.i.i.i, !prof !582

if.then15.i.i.i:                                  ; preds = %do.body7.i.i.i
  tail call void @dump_page(ptr noundef %20, ptr noundef nonnull @.str.102) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 538, 0\0A.popsection", ""() #27, !srcloc !603
  unreachable

PageMemcgKmem.exit.i:                             ; preds = %do.body7.i.i.i
  %and23.i.i.i = and i32 %25, 2
  %tobool24.i.i.not.i = icmp eq i32 %and23.i.i.i, 0
  br i1 %tobool24.i.i.not.i, label %if.then94.i, label %if.then91.i

if.then91.i:                                      ; preds = %PageMemcgKmem.exit.i
  tail call void @__memcg_kmem_uncharge_page(ptr noundef %page, i32 noundef %order) #27
  br label %if.then94.i

if.then94.i:                                      ; preds = %if.then91.i, %PageMemcgKmem.exit.i, %if.end85.i
  %26 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 2
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %26, i32 noundef 4) #27
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  %cmp.not.i.i.i = icmp eq i32 %28, -1
  br i1 %cmp.not.i.i.i, label %page_expected_state.exit.i.i, label %if.end.i.i, !prof !582

page_expected_state.exit.i.i:                     ; preds = %if.then94.i
  %29 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mapping.i.i, align 4
  %31 = ptrtoint ptr %30 to i32
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #27
  %32 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %or.i.i.i = or i32 %33, %31
  %memcg_data.i.i4.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 4
  %34 = ptrtoint ptr %memcg_data.i.i4.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %memcg_data.i.i4.i, align 4
  %or3.i.i.i = or i32 %or.i.i.i, %35
  %36 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %page, align 4
  %and.i.i5.i = and i32 %37, 3207729
  %or4.i.i.i = or i32 %or3.i.i.i, %and.i.i5.i
  %tobool5.not.i.i.i = icmp eq i32 %or4.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %check_free_page.exit.i, label %if.end.i.i, !prof !582

if.end.i.i:                                       ; preds = %page_expected_state.exit.i.i, %if.then94.i
  tail call fastcc void @check_free_page_bad(ptr noundef %page) #27
  br label %check_free_page.exit.i

check_free_page.exit.i:                           ; preds = %if.end.i.i, %page_expected_state.exit.i.i
  %retval.0.i.neg.i = phi i32 [ -1, %if.end.i.i ], [ 0, %page_expected_state.exit.i.i ]
  %tobool98.not.i = icmp eq i32 %bad.3.i, %retval.0.i.neg.i
  br i1 %tobool98.not.i, label %if.end100.i, label %cleanup

if.end100.i:                                      ; preds = %check_free_page.exit.i
  %38 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %page, align 4
  %and102.i = and i32 %39, -4194304
  store i32 %and102.i, ptr %page, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @page_owner_inited, ptr blockaddress(@__free_pages_ok, %if.then.i.i)) #27
          to label %reset_page_owner.exit.i [label %if.then.i.i], !srcloc !583

if.then.i.i:                                      ; preds = %if.end100.i
  %conv103.i = trunc i32 %order to i16
  tail call void @__reset_page_owner(ptr noundef %page, i16 noundef zeroext %conv103.i) #27
  br label %reset_page_owner.exit.i

reset_page_owner.exit.i:                          ; preds = %if.then.i.i, %if.end100.i
  %40 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %page, align 4
  %shr.i.i = lshr i32 %41, 30
  switch i32 %shr.i.i, label %if.then107.i [
    i32 2, label %if.end112.i
    i32 3, label %is_highmem_idx.exit.i
  ]

is_highmem_idx.exit.i:                            ; preds = %reset_page_owner.exit.i
  %42 = load i32, ptr @movable_zone, align 4
  %cmp2.i.not.i = icmp eq i32 %42, 2
  br i1 %cmp2.i.not.i, label %if.end112.i, label %if.then107.i

if.then107.i:                                     ; preds = %is_highmem_idx.exit.i, %reset_page_owner.exit.i
  %call108.i = tail call ptr @page_address(ptr noundef %page) #27
  %shl109.i = shl i32 4096, %order
  tail call void @debug_check_no_locks_freed(ptr noundef %call108.i, i32 noundef %shl109.i) #27
  %call110.i = tail call ptr @page_address(ptr noundef %page) #27
  tail call void @debug_check_no_obj_freed(ptr noundef %call110.i, i32 noundef %shl109.i) #27
  br label %if.end112.i

if.end112.i:                                      ; preds = %if.then107.i, %is_highmem_idx.exit.i, %reset_page_owner.exit.i
  %shl113.i = shl nuw i32 1, %order
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @_page_poisoning_enabled, ptr blockaddress(@__free_pages_ok, %if.then.i7.i)) #27
          to label %kernel_poison_pages.exit.i [label %if.then.i7.i], !srcloc !583

if.then.i7.i:                                     ; preds = %if.end112.i
  tail call void @__kernel_poison_pages(ptr noundef %page, i32 noundef %shl113.i) #27
  br label %kernel_poison_pages.exit.i

kernel_poison_pages.exit.i:                       ; preds = %if.then.i7.i, %if.end112.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @init_on_free, i32 1), ptr blockaddress(@__free_pages_ok, %if.end)) #27
          to label %if.then122.i [label %if.end], !srcloc !583

if.then122.i:                                     ; preds = %kernel_poison_pages.exit.i
  tail call void @kasan_disable_current() #27
  %cmp224.i.not.i = icmp eq i32 %order, 31
  br i1 %cmp224.i.not.i, label %kernel_init_free_pages.exit.i, label %for.body3.i.i

for.body3.i.i:                                    ; preds = %for.body3.i.i, %if.then122.i
  %i.125.i.i = phi i32 [ %inc9.i.i, %for.body3.i.i ], [ 0, %if.then122.i ]
  %add.ptr4.i.i = getelementptr %struct.page, ptr %page, i32 %i.125.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %43 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i.i.i = or i32 %43, 512
  %call.i.i.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr4.i.i, i32 noundef %or.i.i.i.i) #27
  %44 = call ptr @memset(ptr %call.i.i.i.i, i32 0, i32 4096)
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i.i.i) #27
  %inc9.i.i = add nuw nsw i32 %i.125.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc9.i.i, %shl113.i
  br i1 %exitcond.not.i.i, label %kernel_init_free_pages.exit.i, label %for.body3.i.i

kernel_init_free_pages.exit.i:                    ; preds = %for.body3.i.i, %if.then122.i
  tail call void @kasan_enable_current() #27
  br label %if.end

if.end:                                           ; preds = %kernel_init_free_pages.exit.i, %kernel_poison_pages.exit.i
  %retval.0.i.i1020.i = phi i1 [ true, %kernel_init_free_pages.exit.i ], [ false, %kernel_poison_pages.exit.i ]
  tail call void @__kasan_poison_pages(ptr noundef %page, i32 noundef %order, i1 noundef zeroext %retval.0.i.i1020.i) #27
  %45 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %46, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %get_pageblock_bitmap.exit.i.i, !prof !584

if.then.i.i.i.i.i:                                ; preds = %if.end
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i:                    ; preds = %if.end
  %shr.i.i.i.i.i = lshr i32 %46, 30
  %pageblock_flags.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i, i32 9
  %47 = ptrtoint ptr %pageblock_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pageblock_flags.i.i.i, align 8
  %49 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i8.i.i = icmp eq i32 %50, -1
  br i1 %cmp.i.not.i.i.i8.i.i, label %if.then.i.i.i9.i.i, label %get_pfnblock_migratetype.exit, !prof !584

if.then.i.i.i9.i.i:                               ; preds = %get_pageblock_bitmap.exit.i.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pfnblock_migratetype.exit:                    ; preds = %get_pageblock_bitmap.exit.i.i
  %shr.i.i.i10.i.i = lshr i32 %50, 30
  %zone_start_pfn.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i, i32 10
  %51 = ptrtoint ptr %zone_start_pfn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %zone_start_pfn.i.i.i, align 4
  %and.i.i.i34 = and i32 %52, -2048
  %sub.i.i.i35 = sub i32 %add, %and.i.i.i34
  %53 = lshr i32 %sub.i.i.i35, 9
  %div7.i.i = lshr i32 %sub.i.i.i35, 14
  %and.i.i36 = and i32 %53, 28
  %arrayidx.i.i = getelementptr i32, ptr %48, i32 %div7.i.i
  %54 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx.i.i, align 4
  %shr.i.i37 = lshr i32 %55, %and.i.i36
  %and2.i.i = and i32 %shr.i.i37, 7
  %lock = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i56, i32 22
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #27
  %nr_isolate_pageblock.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i56, i32 16
  %56 = ptrtoint ptr %nr_isolate_pageblock.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %nr_isolate_pageblock.i, align 4
  %tobool.i = icmp ne i32 %57, 0
  %cmp.i = icmp eq i32 %and2.i.i, 5
  %or.cond = select i1 %tobool.i, i1 true, i1 %cmp.i
  br i1 %or.cond, label %if.then13, label %if.end15, !prof !604

if.then13:                                        ; preds = %get_pfnblock_migratetype.exit
  %58 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i.i.i38 = icmp eq i32 %59, -1
  br i1 %cmp.i.not.i.i.i.i.i38, label %if.then.i.i.i.i.i39, label %get_pageblock_bitmap.exit.i.i43, !prof !584

if.then.i.i.i.i.i39:                              ; preds = %if.then13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i43:                  ; preds = %if.then13
  %shr.i.i.i.i.i40 = lshr i32 %59, 30
  %pageblock_flags.i.i.i41 = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i40, i32 9
  %60 = ptrtoint ptr %pageblock_flags.i.i.i41 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %pageblock_flags.i.i.i41, align 8
  %62 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i8.i.i42 = icmp eq i32 %63, -1
  br i1 %cmp.i.not.i.i.i8.i.i42, label %if.then.i.i.i9.i.i44, label %get_pfnblock_migratetype.exit54, !prof !584

if.then.i.i.i9.i.i44:                             ; preds = %get_pageblock_bitmap.exit.i.i43
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pfnblock_migratetype.exit54:                  ; preds = %get_pageblock_bitmap.exit.i.i43
  %shr.i.i.i10.i.i45 = lshr i32 %63, 30
  %zone_start_pfn.i.i.i46 = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i45, i32 10
  %64 = ptrtoint ptr %zone_start_pfn.i.i.i46 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %zone_start_pfn.i.i.i46, align 4
  %and.i.i.i47 = and i32 %65, -2048
  %sub.i.i.i48 = sub i32 %add, %and.i.i.i47
  %66 = lshr i32 %sub.i.i.i48, 9
  %div7.i.i49 = lshr i32 %sub.i.i.i48, 14
  %and.i.i50 = and i32 %66, 28
  %arrayidx.i.i51 = getelementptr i32, ptr %61, i32 %div7.i.i49
  %67 = ptrtoint ptr %arrayidx.i.i51 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx.i.i51, align 4
  %shr.i.i52 = lshr i32 %68, %and.i.i50
  %and2.i.i53 = and i32 %shr.i.i52, 7
  br label %if.end15

if.end15:                                         ; preds = %get_pfnblock_migratetype.exit54, %get_pfnblock_migratetype.exit
  %migratetype.0 = phi i32 [ %and2.i.i53, %get_pfnblock_migratetype.exit54 ], [ %and2.i.i, %get_pfnblock_migratetype.exit ]
  tail call fastcc void @__free_one_page(ptr noundef %page, i32 noundef %add, ptr noundef %arrayidx.i, i32 noundef %order, i32 noundef %migratetype.0, i32 noundef %fpi_flags)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call5) #27
  %69 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i57 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i57 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 3
  %71 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %cpu.i, align 4
  %arrayidx7.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %72
  %73 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx7.i, align 4
  %add.i58 = add i32 %74, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 16) to i32)
  %75 = inttoptr i32 %add.i58 to ptr
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %75, align 4
  %add8.i = add i32 %77, %shl113.i
  store i32 %add8.i, ptr %75, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %check_free_page.exit.i
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @memblock_free_pages(ptr noundef %page, i32 noundef %pfn, i32 noundef %order) local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__free_pages_core(ptr noundef %page, i32 noundef %order)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__pageblock_pfn_to_page(i32 noundef %start_pfn, i32 noundef %end_pfn, ptr noundef readnone %zone) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %dec = add i32 %end_pfn, -1
  %call = tail call i32 @pfn_valid(i32 noundef %start_pfn) #27
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @pfn_valid(i32 noundef %dec) #27
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call i32 @pfn_valid(i32 noundef %start_pfn) #27
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %cleanup, label %if.end6

if.end6:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub = sub i32 %start_pfn, %1
  %add.ptr = getelementptr %struct.page, ptr %0, i32 %sub
  %tobool7.not = icmp eq ptr %add.ptr, null
  br i1 %tobool7.not, label %cleanup, label %if.end9

if.end9:                                          ; preds = %if.end6
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %add.ptr, align 4
  %cmp.i.not.i.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %if.end9
  tail call void @dump_page(ptr noundef nonnull %add.ptr, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %if.end9
  %shr.i.i = lshr i32 %3, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i
  %cmp.not = icmp eq ptr %arrayidx.i, %zone
  br i1 %cmp.not, label %if.end12, label %cleanup

if.end12:                                         ; preds = %page_zone.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %4 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %5 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub13 = sub i32 %dec, %5
  %add.ptr14 = getelementptr %struct.page, ptr %4, i32 %sub13
  %6 = ptrtoint ptr %add.ptr14 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %add.ptr14, align 4
  %shr.i28 = lshr i32 %7, 30
  %cmp17.not = icmp eq i32 %shr.i.i, %shr.i28
  %___page.0. = select i1 %cmp17.not, ptr %add.ptr, ptr null
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %page_zone.exit, %if.end6, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi ptr [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end6 ], [ null, %page_zone.exit ], [ %___page.0., %if.end12 ], [ null, %if.end ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @set_zone_contiguous(ptr noundef %zone) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %zone_start_pfn = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %0 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %zone_start_pfn, align 4
  %spanned_pages.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %2 = ptrtoint ptr %spanned_pages.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %spanned_pages.i, align 4
  %add.i23 = add i32 %3, %1
  %cmp24 = icmp ult i32 %1, %add.i23
  br i1 %cmp24, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %add1 = add i32 %1, 2048
  %and = and i32 %add1, -2048
  br label %for.body

for.body:                                         ; preds = %if.end, %for.body.preheader
  %add.i27 = phi i32 [ %add.i, %if.end ], [ %add.i23, %for.body.preheader ]
  %block_start_pfn.026 = phi i32 [ %4, %if.end ], [ %1, %for.body.preheader ]
  %block_end_pfn.025 = phi i32 [ %add7, %if.end ], [ %and, %for.body.preheader ]
  %4 = tail call i32 @llvm.umin.i32(i32 %block_end_pfn.025, i32 %add.i27)
  %call4 = tail call ptr @__pageblock_pfn_to_page(i32 noundef %block_start_pfn.026, i32 noundef %4, ptr noundef %zone)
  %tobool.not = icmp eq ptr %call4, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %for.body
  tail call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 1813, i32 noundef 0) #27
  %call.i = tail call i32 @__cond_resched() #27
  %add7 = add i32 %4, 2048
  %5 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %zone_start_pfn, align 4
  %7 = ptrtoint ptr %spanned_pages.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %spanned_pages.i, align 4
  %add.i = add i32 %8, %6
  %cmp = icmp ult i32 %4, %add.i
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %if.end, %entry
  %contiguous = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 34
  %9 = ptrtoint ptr %contiguous to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 1, ptr %contiguous, align 1
  br label %cleanup

cleanup:                                          ; preds = %for.end, %for.body
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @clear_zone_contiguous(ptr nocapture noundef writeonly %zone) local_unnamed_addr #8 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %contiguous = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 34
  %0 = ptrtoint ptr %contiguous to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %contiguous, align 1
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @page_alloc_init_late() local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @buffer_init() #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @page_alloc_shuffle_key, ptr blockaddress(@page_alloc_init_late, %if.end.i)) #27
          to label %shuffle_free_memory.exit [label %if.end.i], !srcloc !583

if.end.i:                                         ; preds = %entry
  tail call void @__shuffle_free_memory(ptr noundef nonnull @contig_page_data) #27
  br label %shuffle_free_memory.exit

shuffle_free_memory.exit:                         ; preds = %if.end.i, %entry
  %call1 = tail call ptr @first_online_pgdat() #27
  %tobool.not12 = icmp eq ptr %call1, null
  br i1 %tobool.not12, label %for.end7, label %for.body3

for.body3:                                        ; preds = %for.inc5, %shuffle_free_memory.exit
  %zone.013 = phi ptr [ %call6, %for.inc5 ], [ %call1, %shuffle_free_memory.exit ]
  %present_pages.i = getelementptr inbounds %struct.zone, ptr %zone.013, i32 0, i32 13
  %0 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %present_pages.i, align 8
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %for.inc5, label %if.else

if.else:                                          ; preds = %for.body3
  tail call void @set_zone_contiguous(ptr noundef nonnull %zone.013)
  br label %for.inc5

for.inc5:                                         ; preds = %if.else, %for.body3
  %call6 = tail call ptr @next_zone(ptr noundef nonnull %zone.013) #27
  %tobool.not = icmp eq ptr %call6, null
  br i1 %tobool.not, label %for.end7, label %for.body3

for.end7:                                         ; preds = %for.inc5, %shuffle_free_memory.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @buffer_init() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @first_online_pgdat() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @next_zone(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @init_cma_reserved_pageblock(ptr noundef %page) local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  br label %do.body

do.body:                                          ; preds = %set_page_count.exit, %entry
  %i.0 = phi i32 [ 2048, %entry ], [ %dec, %set_page_count.exit ]
  %p.0 = phi ptr [ %page, %entry ], [ %incdec.ptr, %set_page_count.exit ]
  %0 = ptrtoint ptr %p.0 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %p.0, align 4
  %2 = and i32 %1, 65536
  %tobool.not.i.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %if.then.i

PageCompound.exit.i:                              ; preds = %do.body
  %3 = getelementptr inbounds %struct.page, ptr %p.0, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i.i = and i32 %5, 1
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %PageCompound.exit.i, %do.body
  tail call void @dump_page(ptr noundef %p.0, ptr noundef nonnull @.str.95) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 441, 0\0A.popsection", ""() #27, !srcloc !596
  unreachable

do.body7.i:                                       ; preds = %PageCompound.exit.i
  %6 = ptrtoint ptr %p.0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %p.0, align 4
  %cmp.i.not.i = icmp eq i32 %7, -1
  br i1 %cmp.i.not.i, label %if.then16.i, label %__ClearPageReserved.exit, !prof !584

if.then16.i:                                      ; preds = %do.body7.i
  tail call void @dump_page(ptr noundef %p.0, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 441, 0\0A.popsection", ""() #27, !srcloc !597
  unreachable

__ClearPageReserved.exit:                         ; preds = %do.body7.i
  %and.i.i = and i32 %7, -4097
  %8 = ptrtoint ptr %p.0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %and.i.i, ptr %p.0, align 4
  %_refcount.i = getelementptr inbounds %struct.page, ptr %p.0, i32 0, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i, i32 noundef 4) #27
  %9 = ptrtoint ptr %_refcount.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 0, ptr %_refcount.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_set, i32 0, i32 1), ptr blockaddress(@init_cma_reserved_pageblock, %if.then.i8)) #27
          to label %set_page_count.exit [label %if.then.i8], !srcloc !583

if.then.i8:                                       ; preds = %__ClearPageReserved.exit
  tail call void @__page_ref_set(ptr noundef %p.0, i32 noundef 0) #27
  br label %set_page_count.exit

set_page_count.exit:                              ; preds = %if.then.i8, %__ClearPageReserved.exit
  %incdec.ptr = getelementptr %struct.page, ptr %p.0, i32 1
  %dec = add nsw i32 %i.0, -1
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %do.end, label %do.body

do.end:                                           ; preds = %set_page_count.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %10 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %10 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %11 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i = add i32 %sub.ptr.div.i, %11
  tail call void @set_pfnblock_flags_mask(ptr noundef %page, i32 noundef 4, i32 noundef %add.i, i32 noundef 7) #27
  %12 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and.i.i10 = and i32 %14, 1
  %tobool.not.i11 = icmp eq i32 %and.i.i10, 0
  br i1 %tobool.not.i11, label %do.body7.i13, label %if.then.i12, !prof !582

if.then.i12:                                      ; preds = %do.end
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.96) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/internal.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #27, !srcloc !605
  unreachable

do.body7.i13:                                     ; preds = %do.end
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %15 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %_refcount.i.i, align 4
  %tobool9.not.i = icmp eq i32 %16, 0
  br i1 %tobool9.not.i, label %do.end22.i, label %if.then16.i14, !prof !582

if.then16.i14:                                    ; preds = %do.body7.i13
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.119) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/internal.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 145, 0\0A.popsection", ""() #27, !srcloc !606
  unreachable

do.end22.i:                                       ; preds = %do.body7.i13
  %call.i.i.i28.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %17 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 1, ptr %_refcount.i.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_set, i32 0, i32 1), ptr blockaddress(@init_cma_reserved_pageblock, %if.then.i.i)) #27
          to label %set_page_refcounted.exit [label %if.then.i.i], !srcloc !583

if.then.i.i:                                      ; preds = %do.end22.i
  tail call void @__page_ref_set(ptr noundef %page, i32 noundef 1) #27
  br label %set_page_refcounted.exit

set_page_refcounted.exit:                         ; preds = %if.then.i.i, %do.end22.i
  tail call void @__free_pages(ptr noundef %page, i32 noundef 11)
  tail call void @adjust_managed_page_count(ptr noundef %page, i32 noundef 2048)
  %18 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %19, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i15, label %page_zone.exit, !prof !584

if.then.i.i15:                                    ; preds = %set_page_refcounted.exit
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %set_page_refcounted.exit
  %shr.i.i = lshr i32 %19, 30
  %cma_pages = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 14
  %20 = ptrtoint ptr %cma_pages to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cma_pages, align 4
  %add = add i32 %21, 2048
  store i32 %add, ptr %cma_pages, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__free_pages(ptr noundef %page, i32 noundef %order) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %0 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %_refcount.i.i, align 4
  %cmp.i = icmp eq i32 %1, 0
  br i1 %cmp.i, label %if.then.i11, label %do.end5.i, !prof !584

if.then.i11:                                      ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.18) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #27, !srcloc !607
  unreachable

do.end5.i:                                        ; preds = %entry
  %call.i.i.i10.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !608
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i, i32 1, i32 3, i32 1) #27
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i, ptr %_refcount.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i) #27, !srcloc !609
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %2, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !610
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@__free_pages, %if.then.i.i)) #27
          to label %put_page_testzero.exit [label %if.then.i.i], !srcloc !583

if.then.i.i:                                      ; preds = %do.end5.i
  %conv.i.i = zext i1 %cmp.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %page, i32 noundef -1, i32 noundef %conv.i.i) #27
  br label %put_page_testzero.exit

put_page_testzero.exit:                           ; preds = %if.then.i.i, %do.end5.i
  br i1 %cmp.i.i.i.i, label %if.then, label %if.else

if.then:                                          ; preds = %put_page_testzero.exit
  %cmp.i.i = icmp ult i32 %order, 4
  br i1 %cmp.i.i, label %if.then.i12, label %if.else.i

if.then.i12:                                      ; preds = %if.then
  tail call void @free_unref_page(ptr noundef %page, i32 noundef %order) #27
  br label %if.end4

if.else.i:                                        ; preds = %if.then
  tail call fastcc void @__free_pages_ok(ptr noundef %page, i32 noundef %order, i32 noundef 0) #27
  br label %if.end4

if.else:                                          ; preds = %put_page_testzero.exit
  %3 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i = icmp eq i32 %4, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PageHead.exit, !prof !584

if.then.i:                                        ; preds = %if.else
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #27, !srcloc !585
  unreachable

PageHead.exit:                                    ; preds = %if.else
  %5 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %page, align 4
  %7 = and i32 %6, 65536
  %tobool2.not = icmp ne i32 %7, 0
  %cmp.not17 = icmp eq i32 %order, 0
  %or.cond = or i1 %tobool2.not, %cmp.not17
  br i1 %or.cond, label %if.end4, label %while.body

while.body:                                       ; preds = %free_the_page.exit16, %PageHead.exit
  %order.addr.018 = phi i32 [ %dec, %free_the_page.exit16 ], [ %order, %PageHead.exit ]
  %dec = add i32 %order.addr.018, -1
  %shl = shl nuw i32 1, %dec
  %add.ptr = getelementptr %struct.page, ptr %page, i32 %shl
  %cmp.i.i13 = icmp ult i32 %dec, 4
  br i1 %cmp.i.i13, label %if.then.i14, label %if.else.i15

if.then.i14:                                      ; preds = %while.body
  tail call void @free_unref_page(ptr noundef %add.ptr, i32 noundef %dec) #27
  br label %free_the_page.exit16

if.else.i15:                                      ; preds = %while.body
  tail call fastcc void @__free_pages_ok(ptr noundef %add.ptr, i32 noundef %dec, i32 noundef 0) #27
  br label %free_the_page.exit16

free_the_page.exit16:                             ; preds = %if.else.i15, %if.then.i14
  %cmp.not = icmp eq i32 %dec, 0
  br i1 %cmp.not, label %if.end4, label %while.body

if.end4:                                          ; preds = %free_the_page.exit16, %PageHead.exit, %if.else.i, %if.then.i12
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @adjust_managed_page_count(ptr noundef %page, i32 noundef %count) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %entry
  %shr.i.i = lshr i32 %1, 30
  %managed_pages = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 11
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %managed_pages, i32 noundef 4) #27
  tail call void @llvm.prefetch.p0(ptr %managed_pages, i32 1, i32 3, i32 1) #27
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %managed_pages, ptr %managed_pages, i32 %count, ptr elementtype(i32) %managed_pages) #27, !srcloc !598
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @_totalram_pages, i32 noundef 4) #27
  tail call void @llvm.prefetch.p0(ptr nonnull @_totalram_pages, i32 1, i32 3, i32 1) #27
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @_totalram_pages, ptr nonnull @_totalram_pages, i32 %count, ptr nonnull elementtype(i32) @_totalram_pages) #27, !srcloc !598
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %page, align 4
  %shr.i = lshr i32 %5, 30
  switch i32 %shr.i, label %if.end [
    i32 2, label %if.then
    i32 3, label %is_highmem_idx.exit
  ]

is_highmem_idx.exit:                              ; preds = %page_zone.exit
  %6 = load i32, ptr @movable_zone, align 4
  %cmp2.i.not = icmp eq i32 %6, 2
  br i1 %cmp2.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %is_highmem_idx.exit, %page_zone.exit
  %call.i.i.i6 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @_totalhigh_pages, i32 noundef 4) #27
  tail call void @llvm.prefetch.p0(ptr nonnull @_totalhigh_pages, i32 1, i32 3, i32 1) #27
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @_totalhigh_pages, ptr nonnull @_totalhigh_pages, i32 %count, ptr nonnull elementtype(i32) @_totalhigh_pages) #27, !srcloc !598
  br label %if.end

if.end:                                           ; preds = %if.then, %is_highmem_idx.exit, %page_zone.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @post_alloc_hook(ptr noundef %page, i32 noundef %order, i32 noundef %gfp_flags) local_unnamed_addr #5 align 64 {
entry:
  %private1.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %0 = ptrtoint ptr %private1.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %private1.i, align 4
  %1 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %1, align 4
  %and.i.i = and i32 %3, 1
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.96) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/internal.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #27, !srcloc !605
  unreachable

do.body7.i:                                       ; preds = %entry
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %4 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %_refcount.i.i, align 4
  %tobool9.not.i = icmp eq i32 %5, 0
  br i1 %tobool9.not.i, label %do.end22.i, label %if.then16.i, !prof !582

if.then16.i:                                      ; preds = %do.body7.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.119) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/internal.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 145, 0\0A.popsection", ""() #27, !srcloc !606
  unreachable

do.end22.i:                                       ; preds = %do.body7.i
  %call.i.i.i28.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %6 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 1, ptr %_refcount.i.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_set, i32 0, i32 1), ptr blockaddress(@post_alloc_hook, %if.then.i.i)) #27
          to label %set_page_refcounted.exit [label %if.then.i.i], !srcloc !583

if.then.i.i:                                      ; preds = %do.end22.i
  tail call void @__page_ref_set(ptr noundef %page, i32 noundef 1) #27
  br label %set_page_refcounted.exit

set_page_refcounted.exit:                         ; preds = %if.then.i.i, %do.end22.i
  %shl = shl nuw i32 1, %order
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @_page_poisoning_enabled, ptr blockaddress(@post_alloc_hook, %if.then.i29)) #27
          to label %kernel_unpoison_pages.exit [label %if.then.i29], !srcloc !583

if.then.i29:                                      ; preds = %set_page_refcounted.exit
  tail call void @__kernel_unpoison_pages(ptr noundef %page, i32 noundef %shl) #27
  br label %kernel_unpoison_pages.exit

kernel_unpoison_pages.exit:                       ; preds = %if.then.i29, %set_page_refcounted.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @init_on_free, i32 1), ptr blockaddress(@post_alloc_hook, %land.rhs)) #27
          to label %if.end.critedge [label %land.rhs], !srcloc !583

land.rhs:                                         ; preds = %kernel_unpoison_pages.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @init_on_alloc, i32 1), ptr blockaddress(@post_alloc_hook, %7)) #27
          to label %want_init_on_alloc.exit [label %7], !srcloc !583

7:                                                ; preds = %land.rhs
  %and17.i = and i32 %gfp_flags, 256
  %tobool1518.i = icmp ne i32 %and17.i, 0
  tail call void @__kasan_unpoison_pages(ptr noundef %page, i32 noundef %order, i1 noundef zeroext %tobool1518.i) #27
  %8 = and i32 %gfp_flags, 8388864
  %9 = icmp eq i32 %8, 256
  br i1 %9, label %if.end.i, label %if.end8

want_init_on_alloc.exit:                          ; preds = %land.rhs
  tail call void @__kasan_unpoison_pages(ptr noundef %page, i32 noundef %order, i1 noundef zeroext true) #27
  %and.old = and i32 %gfp_flags, 8388608
  %tobool7.old.not = icmp eq i32 %and.old, 0
  br i1 %tobool7.old.not, label %if.end.i, label %if.end8

if.end.i:                                         ; preds = %want_init_on_alloc.exit, %7
  tail call void @kasan_disable_current() #27
  %cmp224.i.not = icmp eq i32 %order, 31
  br i1 %cmp224.i.not, label %for.end10.i, label %for.body3.i

for.body3.i:                                      ; preds = %for.body3.i, %if.end.i
  %i.125.i = phi i32 [ %inc9.i, %for.body3.i ], [ 0, %if.end.i ]
  %add.ptr4.i = getelementptr %struct.page, ptr %page, i32 %i.125.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %10 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i.i = or i32 %10, 512
  %call.i.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr4.i, i32 noundef %or.i.i.i) #27
  %11 = call ptr @memset(ptr %call.i.i.i, i32 0, i32 4096)
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i.i) #27
  %inc9.i = add nuw nsw i32 %i.125.i, 1
  %exitcond.not.i = icmp eq i32 %inc9.i, %shl
  br i1 %exitcond.not.i, label %for.end10.i, label %for.body3.i

for.end10.i:                                      ; preds = %for.body3.i, %if.end.i
  tail call void @kasan_enable_current() #27
  br label %if.end8

if.end.critedge:                                  ; preds = %kernel_unpoison_pages.exit
  tail call void @__kasan_unpoison_pages(ptr noundef %page, i32 noundef %order, i1 noundef zeroext false) #27
  br label %if.end8

if.end8:                                          ; preds = %if.end.critedge, %for.end10.i, %want_init_on_alloc.exit, %7
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @page_owner_inited, ptr blockaddress(@post_alloc_hook, %if.then.i30)) #27
          to label %set_page_owner.exit [label %if.then.i30], !srcloc !583

if.then.i30:                                      ; preds = %if.end8
  %conv = trunc i32 %order to i16
  tail call void @__set_page_owner(ptr noundef %page, i16 noundef zeroext %conv, i32 noundef %gfp_flags) #27
  br label %set_page_owner.exit

set_page_owner.exit:                              ; preds = %if.then.i30, %if.end8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @move_freepages_block(ptr noundef %zone, ptr noundef %page, i32 noundef %migratetype, ptr noundef %num_movable) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %num_movable, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = ptrtoint ptr %num_movable to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %num_movable, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %1 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %2 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %2
  %and = and i32 %add, -2048
  %sub = or i32 %add, 2047
  %zone_start_pfn.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %3 = ptrtoint ptr %zone_start_pfn.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %zone_start_pfn.i, align 4
  %cmp.not.i = icmp ugt i32 %4, %and
  br i1 %cmp.not.i, label %zone_spans_pfn.exit.thread, label %zone_spans_pfn.exit

zone_spans_pfn.exit:                              ; preds = %if.end
  %spanned_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %5 = ptrtoint ptr %spanned_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %spanned_pages.i.i, align 4
  %add.i.i = add i32 %6, %4
  %cmp1.i = icmp ugt i32 %add.i.i, %and
  %spec.select = select i1 %cmp1.i, i32 %and, i32 %add
  br label %zone_spans_pfn.exit.thread

zone_spans_pfn.exit.thread:                       ; preds = %zone_spans_pfn.exit, %if.end
  %7 = phi i32 [ %add, %if.end ], [ %spec.select, %zone_spans_pfn.exit ]
  %cmp.not.i19 = icmp ugt i32 %4, %sub
  br i1 %cmp.not.i19, label %cleanup, label %zone_spans_pfn.exit24

zone_spans_pfn.exit24:                            ; preds = %zone_spans_pfn.exit.thread
  %spanned_pages.i.i20 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %8 = ptrtoint ptr %spanned_pages.i.i20 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %spanned_pages.i.i20, align 4
  %add.i.i21 = add i32 %9, %4
  %cmp1.i22 = icmp ule i32 %add.i.i21, %sub
  %cmp.not8386.i = icmp ugt i32 %7, %sub
  %or.cond = select i1 %cmp1.i22, i1 true, i1 %cmp.not8386.i
  br i1 %or.cond, label %cleanup, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %move_to_free_list.exit.i, %zone_spans_pfn.exit24
  %pages_moved.0.ph88.i = phi i32 [ %add43.i, %move_to_free_list.exit.i ], [ 0, %zone_spans_pfn.exit24 ]
  %pfn.0.ph87.i = phi i32 [ %add.i, %move_to_free_list.exit.i ], [ %7, %zone_spans_pfn.exit24 ]
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i, %for.body.lr.ph.i
  %pfn.084.i = phi i32 [ %pfn.0.ph87.i, %for.body.lr.ph.i ], [ %inc7.i, %if.end.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %10 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %11 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %pfn.084.i, %11
  %add.ptr.i = getelementptr %struct.page, ptr %10, i32 %sub.i
  %12 = getelementptr %struct.page, ptr %10, i32 %sub.i, i32 2
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %and.i.i = and i32 %14, -268435328
  %cmp.i.not.i = icmp eq i32 %and.i.i, -268435456
  br i1 %cmp.i.not.i, label %do.body.i, label %if.then.i

if.then.i:                                        ; preds = %for.body.i
  br i1 %tobool.not, label %if.end.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then.i
  %15 = getelementptr %struct.page, ptr %10, i32 %sub.i, i32 1
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %and.i.i.i = and i32 %17, 1
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !582

if.then.i.i.i:                                    ; preds = %land.lhs.true.i
  %sub.i.i.i = add i32 %17, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i
  %18 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %18, %if.end.i.i.i ]
  %19 = inttoptr i32 %retval.0.i.i.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  %cmp.i.not.i.i = icmp eq i32 %21, -1
  %22 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %15, align 4
  %and.i13.i.i = and i32 %23, 1
  %tobool.not.i14.i.i = icmp eq i32 %and.i13.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %do.end8.i.i, !prof !584

if.then.i.i:                                      ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i14.i.i, label %if.end.i17.i.i, label %if.then.i16.i.i, !prof !582

if.then.i16.i.i:                                  ; preds = %if.then.i.i
  %sub.i15.i.i = add i32 %23, -1
  br label %_compound_head.exit19.i.i

if.end.i17.i.i:                                   ; preds = %if.then.i.i
  %24 = ptrtoint ptr %add.ptr.i to i32
  br label %_compound_head.exit19.i.i

_compound_head.exit19.i.i:                        ; preds = %if.end.i17.i.i, %if.then.i16.i.i
  %retval.0.i18.i.i = phi i32 [ %sub.i15.i.i, %if.then.i16.i.i ], [ %24, %if.end.i17.i.i ]
  %25 = inttoptr i32 %retval.0.i18.i.i to ptr
  tail call void @dump_page(ptr noundef %25, ptr noundef nonnull @.str.187) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #27, !srcloc !611
  unreachable

do.end8.i.i:                                      ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i14.i.i, label %if.end.i24.i.i, label %if.then.i23.i.i, !prof !582

if.then.i23.i.i:                                  ; preds = %do.end8.i.i
  %sub.i22.i.i = add i32 %23, -1
  br label %PageLRU.exit.i

if.end.i24.i.i:                                   ; preds = %do.end8.i.i
  %26 = ptrtoint ptr %add.ptr.i to i32
  br label %PageLRU.exit.i

PageLRU.exit.i:                                   ; preds = %if.end.i24.i.i, %if.then.i23.i.i
  %retval.0.i25.i.i = phi i32 [ %sub.i22.i.i, %if.then.i23.i.i ], [ %26, %if.end.i24.i.i ]
  %27 = inttoptr i32 %retval.0.i25.i.i to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  %30 = and i32 %29, 16
  %tobool3.not.i = icmp eq i32 %30, 0
  br i1 %tobool3.not.i, label %lor.lhs.false.i, label %if.then6.i

lor.lhs.false.i:                                  ; preds = %PageLRU.exit.i
  %mapping.i.i = getelementptr %struct.page, ptr %10, i32 %sub.i, i32 1, i32 0, i32 1
  %31 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %mapping.i.i, align 4
  %33 = ptrtoint ptr %32 to i32
  %and.i61.i = and i32 %33, 3
  %cmp.i62.not.i = icmp eq i32 %and.i61.i, 2
  br i1 %cmp.i62.not.i, label %if.then6.i, label %if.end.i

if.then6.i:                                       ; preds = %lor.lhs.false.i, %PageLRU.exit.i
  %34 = ptrtoint ptr %num_movable to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %num_movable, align 4
  %inc.i = add i32 %35, 1
  store i32 %inc.i, ptr %num_movable, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then6.i, %lor.lhs.false.i, %if.then.i
  %inc7.i = add i32 %pfn.084.i, 1
  %cmp.not.i25 = icmp ugt i32 %inc7.i, %sub
  br i1 %cmp.not.i25, label %cleanup, label %for.body.i

do.body.i:                                        ; preds = %for.body.i
  %36 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %add.ptr.i, align 4
  %cmp.i.not.i64.i = icmp eq i32 %37, -1
  br i1 %cmp.i.not.i64.i, label %if.then.i65.i, label %page_to_nid.exit.i, !prof !584

if.then.i65.i:                                    ; preds = %do.body.i
  tail call void @dump_page(ptr noundef %add.ptr.i, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_to_nid.exit.i:                               ; preds = %do.body.i
  %38 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %add.ptr.i, align 4
  %cmp.i.not.i.i.i = icmp eq i32 %39, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i67.i, label %page_zone.exit.i, !prof !584

if.then.i.i67.i:                                  ; preds = %page_to_nid.exit.i
  tail call void @dump_page(ptr noundef %add.ptr.i, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit.i:                                 ; preds = %page_to_nid.exit.i
  %shr.i.i68.i = lshr i32 %39, 30
  %arrayidx.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i68.i
  %cmp24.not.i = icmp eq ptr %arrayidx.i.i, %zone
  br i1 %cmp24.not.i, label %do.end40.i, label %if.then31.i, !prof !582

if.then31.i:                                      ; preds = %page_zone.exit.i
  tail call void @dump_page(ptr noundef %add.ptr.i, ptr noundef nonnull @.str.121) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2537, 0\0A.popsection", ""() #27, !srcloc !612
  unreachable

do.end40.i:                                       ; preds = %page_zone.exit.i
  %private.i.i = getelementptr %struct.page, ptr %10, i32 %sub.i, i32 1, i32 0, i32 3
  %40 = ptrtoint ptr %private.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %private.i.i, align 4
  %arrayidx.i69.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %41
  %42 = getelementptr %struct.page, ptr %10, i32 %sub.i, i32 1
  %arrayidx1.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i69.i, i32 0, i32 %migratetype
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %42) #27
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %do.end40.i
  %prev.i.i.i.i = getelementptr %struct.page, ptr %10, i32 %sub.i, i32 1, i32 0, i32 0, i32 1
  %43 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %prev.i.i.i.i, align 4
  %45 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %42, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %44, ptr %prev1.i.i.i.i.i, align 4
  %48 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile ptr %46, ptr %44, align 4
  br label %__list_del_entry.exit.i.i.i

__list_del_entry.exit.i.i.i:                      ; preds = %if.end.i.i.i.i, %do.end40.i
  %prev.i2.i.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i69.i, i32 0, i32 %migratetype, i32 1
  %49 = ptrtoint ptr %prev.i2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %prev.i2.i.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %42, ptr noundef %50, ptr noundef %arrayidx1.i.i) #27
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i.i.i, label %move_to_free_list.exit.i

if.end.i.i.i.i.i:                                 ; preds = %__list_del_entry.exit.i.i.i
  %51 = ptrtoint ptr %prev.i2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %42, ptr %prev.i2.i.i.i, align 4
  %52 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %arrayidx1.i.i, ptr %42, align 4
  %prev3.i.i.i.i.i = getelementptr %struct.page, ptr %10, i32 %sub.i, i32 1, i32 0, i32 0, i32 1
  %53 = ptrtoint ptr %prev3.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %50, ptr %prev3.i.i.i.i.i, align 4
  %54 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %42, ptr %50, align 4
  br label %move_to_free_list.exit.i

move_to_free_list.exit.i:                         ; preds = %if.end.i.i.i.i.i, %__list_del_entry.exit.i.i.i
  %shl.i = shl nuw i32 1, %41
  %add.i = add i32 %shl.i, %pfn.084.i
  %add43.i = add i32 %shl.i, %pages_moved.0.ph88.i
  %cmp.not83.i = icmp ugt i32 %add.i, %sub
  br i1 %cmp.not83.i, label %cleanup, label %for.body.lr.ph.i

cleanup:                                          ; preds = %move_to_free_list.exit.i, %if.end.i, %zone_spans_pfn.exit24, %zone_spans_pfn.exit.thread
  %retval.0 = phi i32 [ 0, %zone_spans_pfn.exit24 ], [ 0, %zone_spans_pfn.exit.thread ], [ %pages_moved.0.ph88.i, %if.end.i ], [ %add43.i, %move_to_free_list.exit.i ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_suitable_fallback(ptr noundef %area, i32 noundef %order, i32 noundef %migratetype, i1 noundef zeroext %only_stealable, ptr nocapture noundef %can_steal) local_unnamed_addr #9 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_free = getelementptr inbounds %struct.free_area, ptr %area, i32 0, i32 1
  %0 = ptrtoint ptr %nr_free to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_free, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %can_steal to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %can_steal, align 1
  %3 = and i32 %migratetype, 1073741822
  %4 = icmp eq i32 %3, 4
  br i1 %4, label %cleanup, label %if.end4.lr.ph

if.end4.lr.ph:                                    ; preds = %if.end
  %arrayidx125 = getelementptr [6 x [3 x i32]], ptr @fallbacks, i32 0, i32 %migratetype, i32 0
  %5 = ptrtoint ptr %arrayidx125 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx125, align 4
  %cmp1.i = icmp ugt i32 %order, 4
  br label %if.end4

if.end4:                                          ; preds = %for.inc, %if.end4.lr.ph
  %7 = phi i32 [ %6, %if.end4.lr.ph ], [ %15, %for.inc ]
  %i.027 = phi i32 [ 0, %if.end4.lr.ph ], [ %inc, %for.inc ]
  %arrayidx.i = getelementptr [6 x %struct.list_head], ptr %area, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %arrayidx.i, align 4
  %cmp.i.i = icmp eq ptr %9, %arrayidx.i
  br i1 %cmp.i.i, label %for.inc, label %if.end6

if.end6:                                          ; preds = %if.end4
  br i1 %cmp1.i, label %if.then8, label %switch.early.test.i

switch.early.test.i:                              ; preds = %if.end6
  switch i32 %migratetype, label %can_steal_fallback.exit [
    i32 2, label %if.then8
    i32 0, label %if.then8
  ]

can_steal_fallback.exit:                          ; preds = %switch.early.test.i
  %10 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i.not = icmp eq i32 %10, 0
  br i1 %tobool.not.i.not, label %if.end9, label %if.then8

if.then8:                                         ; preds = %can_steal_fallback.exit, %switch.early.test.i, %switch.early.test.i, %if.end6
  %11 = ptrtoint ptr %can_steal to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 1, ptr %can_steal, align 1
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %can_steal_fallback.exit
  br i1 %only_stealable, label %if.end11, label %cleanup

if.end11:                                         ; preds = %if.end9
  %12 = ptrtoint ptr %can_steal to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %can_steal, align 1, !range !593
  %tobool12.not = icmp eq i8 %13, 0
  br i1 %tobool12.not, label %for.inc, label %cleanup

for.inc:                                          ; preds = %if.end11, %if.end4
  %inc = add i32 %i.027, 1
  %arrayidx1 = getelementptr [6 x [3 x i32]], ptr @fallbacks, i32 0, i32 %migratetype, i32 %inc
  %14 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx1, align 4
  %cmp2 = icmp eq i32 %15, 6
  br i1 %cmp2, label %cleanup, label %if.end4

cleanup:                                          ; preds = %for.inc, %if.end11, %if.end9, %if.end, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ -1, %if.end ], [ %7, %if.end9 ], [ %7, %if.end11 ], [ -1, %for.inc ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @drain_local_pages(ptr noundef %zone) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu1 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu1, align 4
  %tobool.not = icmp eq ptr %zone, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @drain_pages_zone(i32 noundef %3, ptr noundef nonnull %zone)
  br label %if.end

if.else:                                          ; preds = %entry
  %call.i = tail call ptr @first_online_pgdat() #27
  %tobool.not6.i = icmp eq ptr %call.i, null
  br i1 %tobool.not6.i, label %if.end, label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %if.else
  %zone.07.i = phi ptr [ %call2.i, %for.inc.i ], [ %call.i, %if.else ]
  %present_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone.07.i, i32 0, i32 13
  %4 = ptrtoint ptr %present_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %present_pages.i.i, align 8
  %tobool.i.not.i = icmp eq i32 %5, 0
  br i1 %tobool.i.not.i, label %for.inc.i, label %if.else.i

if.else.i:                                        ; preds = %for.body.i
  tail call fastcc void @drain_pages_zone(i32 noundef %3, ptr noundef nonnull %zone.07.i) #27
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else.i, %for.body.i
  %call2.i = tail call ptr @next_zone(ptr noundef nonnull %zone.07.i) #27
  %tobool.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool.not.i, label %if.end, label %for.body.i

if.end:                                           ; preds = %for.inc.i, %if.else, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @drain_pages_zone(i32 noundef %cpu, ptr noundef %zone) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %and.i = and i32 %0, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %do.body12

if.then:                                          ; preds = %entry
  tail call void @trace_hardirqs_off() #27
  br label %do.body12

do.body12:                                        ; preds = %if.then, %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i84 = and i32 %1, -16384
  %2 = inttoptr i32 %and.i84 to ptr
  %cpu18 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu18 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu18, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr @pagesets to i32)
  %7 = inttoptr i32 %add to ptr
  tail call fastcc void @local_lock_acquire(ptr noundef %7)
  %per_cpu_pageset = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 5
  %8 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %per_cpu_pageset, align 8
  %10 = ptrtoint ptr %9 to i32
  %arrayidx28 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %11 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx28, align 4
  %add29 = add i32 %12, %10
  %13 = inttoptr i32 %add29 to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %tobool30.not = icmp eq i32 %15, 0
  br i1 %tobool30.not, label %do.body35, label %if.then31

if.then31:                                        ; preds = %do.body12
  tail call fastcc void @free_pcppages_bulk(ptr noundef %zone, i32 noundef %15, ptr noundef %13)
  br label %do.body35

do.body35:                                        ; preds = %if.then31, %do.body12
  %16 = ptrtoint ptr %cpu18 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpu18, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %19, ptrtoint (ptr @pagesets to i32)
  %20 = inttoptr i32 %add45 to ptr
  tail call fastcc void @local_lock_release(ptr noundef %20)
  br i1 %tobool.not, label %if.then55, label %do.body57

if.then55:                                        ; preds = %do.body35
  tail call void @trace_hardirqs_on() #27
  br label %do.body57

do.body57:                                        ; preds = %if.then55, %do.body35
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i = and i32 %21, 128
  %tobool65.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool65.not, label %if.then69, label %do.end72, !prof !584

if.then69:                                        ; preds = %do.body57
  tail call void @warn_bogus_irq_restore() #27
  br label %do.end72

do.end72:                                         ; preds = %if.then69, %do.body57
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #27, !srcloc !615
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @drain_all_pages(ptr noundef %zone) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__drain_all_pages(ptr noundef %zone, i1 noundef zeroext false)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__drain_all_pages(ptr noundef %zone, i1 noundef zeroext %force_all_cpus) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mm_percpu_wq to i32))
  %0 = load ptr, ptr @mm_percpu_wq, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %land.rhs, label %if.end40

land.rhs:                                         ; preds = %entry
  %.b167 = load i1, ptr @__drain_all_pages.__already_done, align 1
  br i1 %.b167, label %cleanup, label %if.then, !prof !582

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @__drain_all_pages.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3189, i32 noundef 9, ptr noundef null) #27
  br label %cleanup

if.end40:                                         ; preds = %entry
  %call = tail call i32 @mutex_trylock(ptr noundef nonnull @pcpu_drain_mutex) #27
  %tobool41.not = icmp eq i32 %call, 0
  br i1 %tobool41.not, label %if.then50, label %if.end54, !prof !584

if.then50:                                        ; preds = %if.end40
  %tobool51.not = icmp eq ptr %zone, null
  br i1 %tobool51.not, label %cleanup, label %if.end53

if.end53:                                         ; preds = %if.then50
  tail call void @mutex_lock_nested(ptr noundef nonnull @pcpu_drain_mutex, i32 noundef 0) #27
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end40
  %call55177 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1 = load i32, ptr @nr_cpu_ids, align 4
  %cmp178 = icmp ult i32 %call55177, %1
  br i1 %cmp178, label %for.body.lr.ph, label %for.cond99.preheader

for.body.lr.ph:                                   ; preds = %if.end54
  %tobool58.not = icmp eq ptr %zone, null
  %per_cpu_pageset = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 5
  br label %for.body

for.cond99.preheader:                             ; preds = %if.end97, %if.end54
  %call100180 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__drain_all_pages.cpus_with_pcps) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %cmp101181 = icmp ult i32 %call100180, %2
  br i1 %cmp101181, label %for.body102, label %for.cond124.preheader

for.body:                                         ; preds = %if.end97, %for.body.lr.ph
  %call55179 = phi i32 [ %call55177, %for.body.lr.ph ], [ %call55, %if.end97 ]
  br i1 %force_all_cpus, label %if.then95, label %if.else

if.else:                                          ; preds = %for.body
  br i1 %tobool58.not, label %if.else68, label %do.body60

do.body60:                                        ; preds = %if.else
  %3 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %per_cpu_pageset, align 8
  %5 = ptrtoint ptr %4 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call55179
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %add = add i32 %7, %5
  %8 = inttoptr i32 %add to ptr
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %tobool65.not.not = icmp eq i32 %10, 0
  br i1 %tobool65.not.not, label %if.else96, label %if.then95

if.else68:                                        ; preds = %if.else
  %call69 = tail call ptr @first_online_pgdat() #27
  %tobool71.not174 = icmp eq ptr %call69, null
  br i1 %tobool71.not174, label %if.else96, label %for.body72.lr.ph

for.body72.lr.ph:                                 ; preds = %if.else68
  %arrayidx84 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call55179
  br label %for.body72

for.body72:                                       ; preds = %for.inc, %for.body72.lr.ph
  %z.0175 = phi ptr [ %call69, %for.body72.lr.ph ], [ %call91, %for.inc ]
  %present_pages.i = getelementptr inbounds %struct.zone, ptr %z.0175, i32 0, i32 13
  %11 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %present_pages.i, align 8
  %tobool.i.not = icmp eq i32 %12, 0
  br i1 %tobool.i.not, label %for.inc, label %do.body76

do.body76:                                        ; preds = %for.body72
  %per_cpu_pageset82 = getelementptr inbounds %struct.zone, ptr %z.0175, i32 0, i32 5
  %13 = ptrtoint ptr %per_cpu_pageset82 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %per_cpu_pageset82, align 8
  %15 = ptrtoint ptr %14 to i32
  %16 = ptrtoint ptr %arrayidx84 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx84, align 4
  %add85 = add i32 %17, %15
  %18 = inttoptr i32 %add85 to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  %tobool87.not = icmp eq i32 %20, 0
  br i1 %tobool87.not, label %for.inc, label %if.then95

for.inc:                                          ; preds = %do.body76, %for.body72
  %call91 = tail call ptr @next_zone(ptr noundef nonnull %z.0175) #27
  %tobool71.not = icmp eq ptr %call91, null
  br i1 %tobool71.not, label %if.else96, label %for.body72

if.then95:                                        ; preds = %do.body76, %do.body60, %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i = icmp ugt i32 %21, %call55179
  br i1 %cmp.not.i.i.i, label %cpumask_set_cpu.exit, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.then95
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %cpumask_set_cpu.exit, label %if.then.i.i.i, !prof !582

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpumask_set_cpu.exit

cpumask_set_cpu.exit:                             ; preds = %if.then.i.i.i, %land.rhs.i.i.i, %if.then95
  tail call void @_set_bit(i32 noundef %call55179, ptr noundef nonnull @__drain_all_pages.cpus_with_pcps) #27
  br label %if.end97

if.else96:                                        ; preds = %for.inc, %if.else68, %do.body60
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %22 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i170 = icmp ugt i32 %22, %call55179
  br i1 %cmp.not.i.i.i170, label %cpumask_clear_cpu.exit, label %land.rhs.i.i.i172

land.rhs.i.i.i172:                                ; preds = %if.else96
  %.b37.i.i.i171 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i171, label %cpumask_clear_cpu.exit, label %if.then.i.i.i173, !prof !582

if.then.i.i.i173:                                 ; preds = %land.rhs.i.i.i172
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpumask_clear_cpu.exit

cpumask_clear_cpu.exit:                           ; preds = %if.then.i.i.i173, %land.rhs.i.i.i172, %if.else96
  tail call void @_clear_bit(i32 noundef %call55179, ptr noundef nonnull @__drain_all_pages.cpus_with_pcps) #27
  br label %if.end97

if.end97:                                         ; preds = %cpumask_clear_cpu.exit, %cpumask_set_cpu.exit
  %call55 = tail call i32 @cpumask_next(i32 noundef %call55179, ptr noundef nonnull @__cpu_online_mask) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %23 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call55, %23
  br i1 %cmp, label %for.body, label %for.cond99.preheader

for.cond124.preheader:                            ; preds = %for.body102, %for.cond99.preheader
  %call125183 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__drain_all_pages.cpus_with_pcps) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %24 = load i32, ptr @nr_cpu_ids, align 4
  %cmp126184 = icmp ult i32 %call125183, %24
  br i1 %cmp126184, label %do.body128, label %for.end139

for.body102:                                      ; preds = %for.body102, %for.cond99.preheader
  %call100182 = phi i32 [ %call100, %for.body102 ], [ %call100180, %for.cond99.preheader ]
  %arrayidx110 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call100182
  %25 = ptrtoint ptr %arrayidx110 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx110, align 4
  %add111 = add i32 %26, ptrtoint (ptr @pcpu_drain to i32)
  %27 = inttoptr i32 %add111 to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %zone, ptr %27, align 4
  %work = getelementptr inbounds %struct.pcpu_drain, ptr %27, i32 0, i32 1
  tail call void @__init_work(ptr noundef %work, i32 noundef 0) #27
  %29 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 -64, ptr %work, align 4
  %lockdep_map = getelementptr inbounds %struct.pcpu_drain, ptr %27, i32 0, i32 1, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.123, ptr noundef nonnull @__drain_all_pages.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #27
  %entry117 = getelementptr inbounds %struct.pcpu_drain, ptr %27, i32 0, i32 1, i32 1
  %30 = ptrtoint ptr %entry117 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %entry117, ptr %entry117, align 4
  %prev.i = getelementptr inbounds %struct.pcpu_drain, ptr %27, i32 0, i32 1, i32 1, i32 1
  %31 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %entry117, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.pcpu_drain, ptr %27, i32 0, i32 1, i32 2
  %32 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @drain_local_pages_wq, ptr %func, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mm_percpu_wq to i32))
  %33 = load ptr, ptr @mm_percpu_wq, align 4
  %call122 = tail call zeroext i1 @queue_work_on(i32 noundef %call100182, ptr noundef %33, ptr noundef %work) #27
  %call100 = tail call i32 @cpumask_next(i32 noundef %call100182, ptr noundef nonnull @__drain_all_pages.cpus_with_pcps) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %34 = load i32, ptr @nr_cpu_ids, align 4
  %cmp101 = icmp ult i32 %call100, %34
  br i1 %cmp101, label %for.body102, label %for.cond124.preheader

do.body128:                                       ; preds = %do.body128, %for.cond124.preheader
  %call125185 = phi i32 [ %call125, %do.body128 ], [ %call125183, %for.cond124.preheader ]
  %arrayidx135 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call125185
  %35 = ptrtoint ptr %arrayidx135 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx135, align 4
  %add136 = add i32 %36, ptrtoint (ptr @pcpu_drain to i32)
  %37 = inttoptr i32 %add136 to ptr
  %work137 = getelementptr inbounds %struct.pcpu_drain, ptr %37, i32 0, i32 1
  %call138 = tail call zeroext i1 @flush_work(ptr noundef %work137) #27
  %call125 = tail call i32 @cpumask_next(i32 noundef %call125185, ptr noundef nonnull @__drain_all_pages.cpus_with_pcps) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %38 = load i32, ptr @nr_cpu_ids, align 4
  %cmp126 = icmp ult i32 %call125, %38
  br i1 %cmp126, label %do.body128, label %for.end139

for.end139:                                       ; preds = %do.body128, %for.cond124.preheader
  tail call void @mutex_unlock(ptr noundef nonnull @pcpu_drain_mutex) #27
  br label %cleanup

cleanup:                                          ; preds = %for.end139, %if.then50, %if.then, %land.rhs
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mark_free_pages(ptr noundef %zone) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %spanned_pages.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %0 = ptrtoint ptr %spanned_pages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spanned_pages.i, align 4
  %cmp.i = icmp eq i32 %1, 0
  br i1 %cmp.i, label %cleanup, label %do.body1

do.body1:                                         ; preds = %entry
  %lock = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 22
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #27
  %zone_start_pfn.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %2 = ptrtoint ptr %zone_start_pfn.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %zone_start_pfn.i, align 4
  %4 = ptrtoint ptr %spanned_pages.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %spanned_pages.i, align 4
  %add.i = add i32 %5, %3
  %cmp7105 = icmp ult i32 %3, %add.i
  br i1 %cmp7105, label %for.body, label %for.cond28.preheader.preheader

for.body:                                         ; preds = %for.inc, %do.body1
  %pfn.0107 = phi i32 [ %inc, %for.inc ], [ %3, %do.body1 ]
  %page_count.0106 = phi i32 [ %page_count.2, %for.inc ], [ 131072, %do.body1 ]
  %call9 = tail call i32 @pfn_valid(i32 noundef %pfn.0107) #27
  %tobool.not = icmp eq i32 %call9, 0
  br i1 %tobool.not, label %for.inc, label %if.then10

if.then10:                                        ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %6 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %7 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub = sub i32 %pfn.0107, %7
  %add.ptr = getelementptr %struct.page, ptr %6, i32 %sub
  %dec = add i32 %page_count.0106, -1
  %tobool11.not = icmp eq i32 %dec, 0
  br i1 %tobool11.not, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then10
  tail call void @touch_softlockup_watchdog() #27
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.then10
  %page_count.1 = phi i32 [ %dec, %if.then10 ], [ 131072, %if.then12 ]
  %8 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %add.ptr, align 4
  %cmp.i.not.i.i = icmp eq i32 %9, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %if.end13
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %if.end13
  %shr.i.i = lshr i32 %9, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i
  %cmp15.not = icmp eq ptr %arrayidx.i, %zone
  br i1 %cmp15.not, label %if.end18, label %for.inc

if.end18:                                         ; preds = %page_zone.exit
  %call19 = tail call i32 @swsusp_page_is_forbidden(ptr noundef %add.ptr) #27
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.then21, label %for.inc

if.then21:                                        ; preds = %if.end18
  tail call void @swsusp_unset_page_free(ptr noundef %add.ptr) #27
  br label %for.inc

for.inc:                                          ; preds = %if.then21, %if.end18, %page_zone.exit, %for.body
  %page_count.2 = phi i32 [ %page_count.1, %page_zone.exit ], [ %page_count.1, %if.end18 ], [ %page_count.1, %if.then21 ], [ %page_count.0106, %for.body ]
  %inc = add i32 %pfn.0107, 1
  %exitcond.not = icmp eq i32 %inc, %add.i
  br i1 %exitcond.not, label %for.cond28.preheader.preheader, label %for.body

for.cond28.preheader.preheader:                   ; preds = %for.inc, %do.body1
  %page_count.3119.ph = phi i32 [ 131072, %do.body1 ], [ %page_count.2, %for.inc ]
  br label %for.cond28.preheader

for.cond28.preheader:                             ; preds = %for.inc67, %for.cond28.preheader.preheader
  %page_count.3119 = phi i32 [ %page_count.5.lcssa, %for.inc67 ], [ %page_count.3119.ph, %for.cond28.preheader.preheader ]
  %order.0118 = phi i32 [ %inc68, %for.inc67 ], [ 0, %for.cond28.preheader.preheader ]
  %arrayidx = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %order.0118
  br label %for.body31

for.body31:                                       ; preds = %for.inc64, %for.cond28.preheader
  %page_count.4117 = phi i32 [ %page_count.3119, %for.cond28.preheader ], [ %page_count.5.lcssa, %for.inc64 ]
  %t.0116 = phi i32 [ 0, %for.cond28.preheader ], [ %inc65, %for.inc64 ]
  %arrayidx32 = getelementptr [6 x %struct.list_head], ptr %arrayidx, i32 0, i32 %t.0116
  %10 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn111 = load ptr, ptr %arrayidx32, align 4
  %cmp40.not112 = icmp eq ptr %.pn111, %arrayidx32
  br i1 %cmp40.not112, label %for.inc64, label %for.body42

for.cond35.loopexit:                              ; preds = %if.end50
  %11 = ptrtoint ptr %.pn114 to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn = load ptr, ptr %.pn114, align 4
  %cmp40.not = icmp eq ptr %.pn, %arrayidx32
  br i1 %cmp40.not, label %for.inc64, label %for.body42

for.body42:                                       ; preds = %for.cond35.loopexit, %for.body31
  %.pn114 = phi ptr [ %.pn, %for.cond35.loopexit ], [ %.pn111, %for.body31 ]
  %page_count.5113 = phi i32 [ %page_count.7, %for.cond35.loopexit ], [ %page_count.4117, %for.body31 ]
  %page.0 = getelementptr i8, ptr %.pn114, i32 -4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %12 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page.0 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %12 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %13 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %13
  br label %for.body46

for.body46:                                       ; preds = %if.end50, %for.body42
  %i.0110 = phi i32 [ 0, %for.body42 ], [ %inc55, %if.end50 ]
  %page_count.6109 = phi i32 [ %page_count.5113, %for.body42 ], [ %page_count.7, %if.end50 ]
  %dec47 = add i32 %page_count.6109, -1
  %tobool48.not = icmp eq i32 %dec47, 0
  br i1 %tobool48.not, label %if.then49, label %if.end50

if.then49:                                        ; preds = %for.body46
  tail call void @touch_softlockup_watchdog() #27
  br label %if.end50

if.end50:                                         ; preds = %if.then49, %for.body46
  %page_count.7 = phi i32 [ %dec47, %for.body46 ], [ 131072, %if.then49 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %14 = load ptr, ptr @mem_map, align 4
  %add51 = add i32 %add, %i.0110
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %15 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub52 = sub i32 %add51, %15
  %add.ptr53 = getelementptr %struct.page, ptr %14, i32 %sub52
  tail call void @swsusp_set_page_free(ptr noundef %add.ptr53) #27
  %inc55 = add i32 %i.0110, 1
  %i.0.highbits = lshr i32 %inc55, %order.0118
  %cmp44 = icmp eq i32 %i.0.highbits, 0
  br i1 %cmp44, label %for.body46, label %for.cond35.loopexit

for.inc64:                                        ; preds = %for.cond35.loopexit, %for.body31
  %page_count.5.lcssa = phi i32 [ %page_count.4117, %for.body31 ], [ %page_count.7, %for.cond35.loopexit ]
  %inc65 = add nuw nsw i32 %t.0116, 1
  %exitcond120.not = icmp eq i32 %inc65, 6
  br i1 %exitcond120.not, label %for.inc67, label %for.body31

for.inc67:                                        ; preds = %for.inc64
  %inc68 = add nuw nsw i32 %order.0118, 1
  %exitcond121.not = icmp eq i32 %inc68, 12
  br i1 %exitcond121.not, label %for.end69, label %for.cond28.preheader

for.end69:                                        ; preds = %for.inc67
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call3) #27
  br label %cleanup

cleanup:                                          ; preds = %for.end69, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @swsusp_page_is_forbidden(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @swsusp_unset_page_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @swsusp_set_page_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_unref_page(ptr noundef %page, i32 noundef %order) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %1
  %call.i = tail call fastcc zeroext i1 @free_pcp_prepare(ptr noundef %page, i32 noundef %order) #27
  br i1 %call.i, label %if.end.i, label %cleanup

if.end.i:                                         ; preds = %entry
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i.i.i.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %get_pageblock_bitmap.exit.i.i.i, !prof !584

if.then.i.i.i.i.i.i:                              ; preds = %if.end.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i.i:                  ; preds = %if.end.i
  %shr.i.i.i.i.i.i = lshr i32 %3, 30
  %pageblock_flags.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i, i32 9
  %4 = ptrtoint ptr %pageblock_flags.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pageblock_flags.i.i.i.i, align 8
  %6 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i8.i.i.i = icmp eq i32 %7, -1
  br i1 %cmp.i.not.i.i.i8.i.i.i, label %if.then.i.i.i9.i.i.i, label %if.end, !prof !584

if.then.i.i.i9.i.i.i:                             ; preds = %get_pageblock_bitmap.exit.i.i.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

if.end:                                           ; preds = %get_pageblock_bitmap.exit.i.i.i
  %shr.i.i.i10.i.i.i = lshr i32 %7, 30
  %zone_start_pfn.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i.i, i32 10
  %8 = ptrtoint ptr %zone_start_pfn.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %zone_start_pfn.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %9, -2048
  %sub.i.i.i.i = sub i32 %add, %and.i.i.i.i
  %10 = lshr i32 %sub.i.i.i.i, 9
  %div7.i.i.i = lshr i32 %sub.i.i.i.i, 14
  %and.i.i.i = and i32 %10, 28
  %arrayidx.i.i.i = getelementptr i32, ptr %5, i32 %div7.i.i.i
  %11 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i.i.i, align 4
  %shr.i.i.i = lshr i32 %12, %and.i.i.i
  %and2.i.i.i = and i32 %shr.i.i.i, 7
  %index.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %13 = ptrtoint ptr %index.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %and2.i.i.i, ptr %index.i.i, align 4
  %cmp = icmp ugt i32 %and2.i.i.i, 2
  br i1 %cmp, label %if.then3, label %do.body16, !prof !584

if.then3:                                         ; preds = %if.end
  %cmp.i = icmp eq i32 %and2.i.i.i, 5
  br i1 %cmp.i, label %if.then11, label %do.body16, !prof !584

if.then11:                                        ; preds = %if.then3
  %14 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %15, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %if.then11
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %if.then11
  %shr.i.i = lshr i32 %15, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i
  tail call fastcc void @free_one_page(ptr noundef %arrayidx.i, ptr noundef %page, i32 noundef %add, i32 noundef %order, i32 noundef 5)
  br label %cleanup

do.body16:                                        ; preds = %if.then3, %if.end
  %migratetype.0 = phi i32 [ %and2.i.i.i, %if.end ], [ 1, %if.then3 ]
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %and.i = and i32 %16, 128
  %tobool26.not = icmp eq i32 %and.i, 0
  br i1 %tobool26.not, label %if.then27, label %do.body31

if.then27:                                        ; preds = %do.body16
  tail call void @trace_hardirqs_off() #27
  br label %do.body31

do.body31:                                        ; preds = %if.then27, %do.body16
  %17 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i106 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i106 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %20
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx, align 4
  %add37 = add i32 %22, ptrtoint (ptr @pagesets to i32)
  %23 = inttoptr i32 %add37 to ptr
  tail call fastcc void @local_lock_acquire(ptr noundef %23)
  tail call fastcc void @free_unref_page_commit(ptr noundef %page, i32 noundef %migratetype.0, i32 noundef %order)
  %24 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cpu, align 4
  %arrayidx50 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %25
  %26 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx50, align 4
  %add51 = add i32 %27, ptrtoint (ptr @pagesets to i32)
  %28 = inttoptr i32 %add51 to ptr
  tail call fastcc void @local_lock_release(ptr noundef %28)
  br i1 %tobool26.not, label %if.then61, label %do.body63

if.then61:                                        ; preds = %do.body31
  tail call void @trace_hardirqs_on() #27
  br label %do.body63

do.body63:                                        ; preds = %if.then61, %do.body31
  %29 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i = and i32 %29, 128
  %tobool71.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool71.not, label %if.then80, label %do.end83, !prof !584

if.then80:                                        ; preds = %do.body63
  tail call void @warn_bogus_irq_restore() #27
  br label %do.end83

do.end83:                                         ; preds = %if.then80, %do.body63
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %16) #27, !srcloc !615
  br label %cleanup

cleanup:                                          ; preds = %do.end83, %page_zone.exit, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_one_page(ptr noundef %zone, ptr noundef %page, i32 noundef %pfn, i32 noundef %order, i32 noundef %migratetype) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 22
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #27
  %nr_isolate_pageblock.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 16
  %0 = ptrtoint ptr %nr_isolate_pageblock.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_isolate_pageblock.i, align 4
  %tobool.i = icmp ne i32 %1, 0
  %cmp.i = icmp eq i32 %migratetype, 5
  %or.cond = or i1 %cmp.i, %tobool.i
  br i1 %or.cond, label %if.then, label %if.end, !prof !604

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %get_pageblock_bitmap.exit.i.i, !prof !584

if.then.i.i.i.i.i:                                ; preds = %if.then
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i:                    ; preds = %if.then
  %shr.i.i.i.i.i = lshr i32 %3, 30
  %pageblock_flags.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i, i32 9
  %4 = ptrtoint ptr %pageblock_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pageblock_flags.i.i.i, align 8
  %6 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i8.i.i = icmp eq i32 %7, -1
  br i1 %cmp.i.not.i.i.i8.i.i, label %if.then.i.i.i9.i.i, label %get_pfnblock_migratetype.exit, !prof !584

if.then.i.i.i9.i.i:                               ; preds = %get_pageblock_bitmap.exit.i.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pfnblock_migratetype.exit:                    ; preds = %get_pageblock_bitmap.exit.i.i
  %shr.i.i.i10.i.i = lshr i32 %7, 30
  %zone_start_pfn.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i, i32 10
  %8 = ptrtoint ptr %zone_start_pfn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %zone_start_pfn.i.i.i, align 4
  %and.i.i.i = and i32 %9, -2048
  %sub.i.i.i = sub i32 %pfn, %and.i.i.i
  %10 = lshr i32 %sub.i.i.i, 9
  %div7.i.i = lshr i32 %sub.i.i.i, 14
  %and.i.i = and i32 %10, 28
  %arrayidx.i.i = getelementptr i32, ptr %5, i32 %div7.i.i
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i.i, align 4
  %shr.i.i = lshr i32 %12, %and.i.i
  %and2.i.i = and i32 %shr.i.i, 7
  br label %if.end

if.end:                                           ; preds = %get_pfnblock_migratetype.exit, %entry
  %migratetype.addr.0 = phi i32 [ %and2.i.i, %get_pfnblock_migratetype.exit ], [ %migratetype, %entry ]
  tail call fastcc void @__free_one_page(ptr noundef %page, i32 noundef %pfn, ptr noundef %zone, i32 noundef %order, i32 noundef %migratetype.addr.0, i32 noundef 0)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call2) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_lock_acquire(ptr noundef %l) #5 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @lock_acquire(ptr noundef %l, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@local_lock_acquire, %__here) to i32)) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end36

land.lhs.true:                                    ; preds = %__here
  %owner = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %1 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %owner, align 4
  %tobool1.not = icmp eq ptr %2, null
  br i1 %tobool1.not, label %if.end36, label %do.end, !prof !582

do.end:                                           ; preds = %land.lhs.true
  %call = tail call i32 @debug_locks_off() #27
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %if.end36, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %do.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %3 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not = icmp eq i32 %3, 0
  br i1 %tobool6.not, label %do.end19, label %if.end36

do.end19:                                         ; preds = %land.lhs.true5
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.126, i32 noundef 30, i32 noundef 9, ptr noundef nonnull @.str.127, ptr noundef nonnull @.str.128) #27
  br label %if.end36

if.end36:                                         ; preds = %do.end19, %land.lhs.true5, %do.end, %land.lhs.true, %__here
  %4 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 8
  %owner39 = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %8 = ptrtoint ptr %owner39 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %owner39, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_unref_page_commit(ptr noundef %page, i32 noundef %migratetype, i32 noundef %order) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %entry
  %shr.i.i = lshr i32 %1, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i
  %2 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu.i, align 4
  %arrayidx7.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %5
  %6 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx7.i, align 4
  %add.i = add i32 %7, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 16) to i32)
  %8 = inttoptr i32 %add.i to ptr
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %add8.i = add i32 %10, 1
  store i32 %add8.i, ptr %8, align 4
  %per_cpu_pageset = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 5
  %11 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %per_cpu_pageset, align 8
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx, align 4
  %add = add i32 %19, %13
  %20 = inttoptr i32 %add to ptr
  %cmp.i = icmp sgt i32 %order, 3
  br i1 %cmp.i, label %do.body2.i, label %order_to_pindex.exit, !prof !584

do.body2.i:                                       ; preds = %page_zone.exit
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 672, 0\0A.popsection", ""() #27, !srcloc !616
  unreachable

order_to_pindex.exit:                             ; preds = %page_zone.exit
  %mul.i = mul i32 %order, 3
  %add.i1 = add i32 %mul.i, %migratetype
  %21 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %arrayidx4 = getelementptr %struct.per_cpu_pages, ptr %20, i32 0, i32 4, i32 %add.i1
  %22 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx4, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %21, ptr noundef %arrayidx4, ptr noundef %23) #27
  br i1 %call.i.i, label %if.end.i.i, label %list_add.exit

if.end.i.i:                                       ; preds = %order_to_pindex.exit
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %23, ptr %21, align 4
  %prev3.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %arrayidx4, ptr %prev3.i.i, align 4
  %27 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %21, ptr %arrayidx4, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %order_to_pindex.exit
  %shl = shl nuw nsw i32 1, %order
  %28 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %20, align 4
  %add5 = add i32 %29, %shl
  store i32 %add5, ptr %20, align 4
  %high1.i = getelementptr inbounds %struct.per_cpu_pages, ptr %20, i32 0, i32 1
  %30 = ptrtoint ptr %high1.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %high1.i, align 4
  %tobool.not.i = icmp eq i32 %31, 0
  br i1 %tobool.not.i, label %nr_pcp_high.exit, label %if.end.i, !prof !584

if.end.i:                                         ; preds = %list_add.exit
  %flags.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 21
  %32 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %flags.i, align 16
  %34 = and i32 %33, 2
  %tobool5.not.i = icmp eq i32 %34, 0
  br i1 %tobool5.not.i, label %nr_pcp_high.exit, label %if.end7.i

if.end7.i:                                        ; preds = %if.end.i
  %batch.i = getelementptr inbounds %struct.per_cpu_pages, ptr %20, i32 0, i32 2
  %35 = ptrtoint ptr %batch.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %batch.i, align 4
  %shl.i = shl i32 %36, 2
  %37 = tail call i32 @llvm.smin.i32(i32 %shl.i, i32 %31) #27
  br label %nr_pcp_high.exit

nr_pcp_high.exit:                                 ; preds = %if.end7.i, %if.end.i, %list_add.exit
  %retval.0.i = phi i32 [ %37, %if.end7.i ], [ 0, %list_add.exit ], [ %31, %if.end.i ]
  %cmp.not = icmp slt i32 %add5, %retval.0.i
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %nr_pcp_high.exit
  %batch12 = getelementptr inbounds %struct.per_cpu_pages, ptr %20, i32 0, i32 2
  %38 = ptrtoint ptr %batch12 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %batch12, align 4
  %cmp.i2 = icmp slt i32 %retval.0.i, %39
  br i1 %cmp.i2, label %nr_pcp_free.exit, label %if.end.i4, !prof !584

if.end.i4:                                        ; preds = %if.then
  %sub.i = sub i32 %retval.0.i, %39
  %free_factor.i = getelementptr inbounds %struct.per_cpu_pages, ptr %20, i32 0, i32 3
  %40 = ptrtoint ptr %free_factor.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %free_factor.i, align 4
  %conv30.i = zext i16 %41 to i32
  %shl.i3 = shl i32 %39, %conv30.i
  %cmp2.i = icmp slt i32 %shl.i3, %sub.i
  br i1 %cmp2.i, label %if.then4.i, label %if.end6.i

if.then4.i:                                       ; preds = %if.end.i4
  %inc.i = add i16 %41, 1
  %42 = ptrtoint ptr %free_factor.i to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %inc.i, ptr %free_factor.i, align 4
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then4.i, %if.end.i4
  %43 = tail call i32 @llvm.smax.i32(i32 %shl.i3, i32 %39) #27
  %44 = tail call i32 @llvm.smin.i32(i32 %43, i32 %sub.i) #27
  br label %nr_pcp_free.exit

nr_pcp_free.exit:                                 ; preds = %if.end6.i, %if.then
  %retval.0.i5 = phi i32 [ %44, %if.end6.i ], [ 1, %if.then ]
  tail call fastcc void @free_pcppages_bulk(ptr noundef %arrayidx.i, i32 noundef %retval.0.i5, ptr noundef %20)
  br label %if.end

if.end:                                           ; preds = %nr_pcp_free.exit, %nr_pcp_high.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_lock_release(ptr noundef %l) #5 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end35

land.lhs.true:                                    ; preds = %entry
  %owner = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %1 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %owner, align 4
  %3 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %cmp.not = icmp eq ptr %2, %6
  br i1 %cmp.not, label %if.end35, label %do.end, !prof !582

do.end:                                           ; preds = %land.lhs.true
  %call3 = tail call i32 @debug_locks_off() #27
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end35, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %do.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %7 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not = icmp eq i32 %7, 0
  br i1 %tobool6.not, label %do.end19, label %if.end35

do.end19:                                         ; preds = %land.lhs.true5
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.126, i32 noundef 36, i32 noundef 9, ptr noundef nonnull @.str.127, ptr noundef nonnull @.str.129) #27
  br label %if.end35

if.end35:                                         ; preds = %do.end19, %land.lhs.true5, %do.end, %land.lhs.true, %entry
  %owner37 = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %8 = ptrtoint ptr %owner37 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %owner37, align 4
  br label %__here

__here:                                           ; preds = %if.end35
  tail call void @lock_release(ptr noundef %l, i32 noundef ptrtoint (ptr blockaddress(@local_lock_release, %__here) to i32)) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_unref_page_list(ptr noundef readonly %list) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list, align 4
  %cmp.not275 = icmp eq ptr %1, %list
  br i1 %cmp.not275, label %do.body22, label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %.pn.in276 = phi ptr [ %.pn280, %for.inc ], [ %1, %entry ]
  %page.0279 = getelementptr i8, ptr %.pn.in276, i32 -4
  %2 = ptrtoint ptr %.pn.in276 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn280 = load ptr, ptr %.pn.in276, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %3 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page.0279 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %4 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %4
  %call.i = tail call fastcc zeroext i1 @free_pcp_prepare(ptr noundef %page.0279, i32 noundef 0) #27
  br i1 %call.i, label %if.end.i, label %if.then

if.end.i:                                         ; preds = %for.body
  %5 = ptrtoint ptr %page.0279 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %page.0279, align 4
  %cmp.i.not.i.i.i.i.i.i = icmp eq i32 %6, -1
  br i1 %cmp.i.not.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %get_pageblock_bitmap.exit.i.i.i, !prof !584

if.then.i.i.i.i.i.i:                              ; preds = %if.end.i
  tail call void @dump_page(ptr noundef %page.0279, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i.i:                  ; preds = %if.end.i
  %shr.i.i.i.i.i.i = lshr i32 %6, 30
  %pageblock_flags.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i, i32 9
  %7 = ptrtoint ptr %pageblock_flags.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pageblock_flags.i.i.i.i, align 8
  %9 = ptrtoint ptr %page.0279 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %page.0279, align 4
  %cmp.i.not.i.i.i8.i.i.i = icmp eq i32 %10, -1
  br i1 %cmp.i.not.i.i.i8.i.i.i, label %if.then.i.i.i9.i.i.i, label %if.end, !prof !584

if.then.i.i.i9.i.i.i:                             ; preds = %get_pageblock_bitmap.exit.i.i.i
  tail call void @dump_page(ptr noundef %page.0279, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

if.then:                                          ; preds = %for.body
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in276) #27
  br i1 %call.i.i, label %if.end.i.i, label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in276, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev.i.i, align 4
  %13 = ptrtoint ptr %.pn.in276 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %.pn.in276, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %prev1.i.i.i, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %14, ptr %12, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then
  %17 = ptrtoint ptr %.pn.in276 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in276, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn.in276, i32 0, i32 1
  %18 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  br label %for.inc

if.end:                                           ; preds = %get_pageblock_bitmap.exit.i.i.i
  %shr.i.i.i10.i.i.i = lshr i32 %10, 30
  %zone_start_pfn.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i.i, i32 10
  %19 = ptrtoint ptr %zone_start_pfn.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %zone_start_pfn.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %20, -2048
  %sub.i.i.i.i = sub i32 %add, %and.i.i.i.i
  %21 = lshr i32 %sub.i.i.i.i, 9
  %div7.i.i.i = lshr i32 %sub.i.i.i.i, 14
  %and.i.i.i = and i32 %21, 28
  %arrayidx.i.i.i = getelementptr i32, ptr %8, i32 %div7.i.i.i
  %22 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx.i.i.i, align 4
  %shr.i.i.i = lshr i32 %23, %and.i.i.i
  %and2.i.i.i = and i32 %shr.i.i.i, 7
  %index.i.i = getelementptr i8, ptr %.pn.in276, i32 12
  %24 = ptrtoint ptr %index.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %and2.i.i.i, ptr %index.i.i, align 4
  %cmp.i = icmp eq i32 %and2.i.i.i, 5
  br i1 %cmp.i, label %if.then12, label %if.end15, !prof !584

if.then12:                                        ; preds = %if.end
  %call.i.i257 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in276) #27
  br i1 %call.i.i257, label %if.end.i.i260, label %list_del.exit262

if.end.i.i260:                                    ; preds = %if.then12
  %prev.i.i258 = getelementptr inbounds %struct.list_head, ptr %.pn.in276, i32 0, i32 1
  %25 = ptrtoint ptr %prev.i.i258 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %prev.i.i258, align 4
  %27 = ptrtoint ptr %.pn.in276 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %.pn.in276, align 4
  %prev1.i.i.i259 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %prev1.i.i.i259 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %26, ptr %prev1.i.i.i259, align 4
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %28, ptr %26, align 4
  br label %list_del.exit262

list_del.exit262:                                 ; preds = %if.end.i.i260, %if.then12
  %31 = ptrtoint ptr %.pn.in276 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in276, align 4
  %prev.i261 = getelementptr inbounds %struct.list_head, ptr %.pn.in276, i32 0, i32 1
  %32 = ptrtoint ptr %prev.i261 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i261, align 4
  %33 = ptrtoint ptr %page.0279 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %page.0279, align 4
  %cmp.i.not.i.i = icmp eq i32 %34, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %list_del.exit262
  tail call void @dump_page(ptr noundef %page.0279, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %list_del.exit262
  %shr.i.i = lshr i32 %34, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i
  tail call fastcc void @free_one_page(ptr noundef %arrayidx.i, ptr noundef %page.0279, i32 noundef %add, i32 noundef 0, i32 noundef 5)
  br label %for.inc

if.end15:                                         ; preds = %if.end
  %private1.i = getelementptr i8, ptr %.pn.in276, i32 16
  %35 = ptrtoint ptr %private1.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %add, ptr %private1.i, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end15, %page_zone.exit, %list_del.exit
  %cmp.not = icmp eq ptr %.pn280, %list
  br i1 %cmp.not, label %do.body22, label %for.body

do.body22:                                        ; preds = %for.inc, %entry
  %36 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %and.i = and i32 %36, 128
  %tobool33.not = icmp eq i32 %and.i, 0
  br i1 %tobool33.not, label %if.then34, label %do.body38

if.then34:                                        ; preds = %do.body22
  tail call void @trace_hardirqs_off() #27
  br label %do.body38

do.body38:                                        ; preds = %if.then34, %do.body22
  %37 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i263 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i263 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 3
  %39 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %40
  %41 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx, align 4
  %add44 = add i32 %42, ptrtoint (ptr @pagesets to i32)
  %43 = inttoptr i32 %add44 to ptr
  tail call fastcc void @local_lock_acquire(ptr noundef %43)
  %44 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %list, align 4
  %cmp58.not283 = icmp eq ptr %45, %list
  br i1 %cmp58.not283, label %do.body172, label %for.body62

for.body62:                                       ; preds = %for.inc164, %do.body38
  %.pn254.in286 = phi ptr [ %.pn254288, %for.inc164 ], [ %45, %do.body38 ]
  %flags.0285 = phi i32 [ %flags.1, %for.inc164 ], [ %36, %do.body38 ]
  %batch_count.0284 = phi i32 [ %batch_count.1, %for.inc164 ], [ 0, %do.body38 ]
  %page.1287 = getelementptr i8, ptr %.pn254.in286, i32 -4
  %46 = ptrtoint ptr %.pn254.in286 to i32
  call void @__asan_load4_noabort(i32 %46)
  %.pn254288 = load ptr, ptr %.pn254.in286, align 4
  %private1.i264 = getelementptr i8, ptr %.pn254.in286, i32 16
  %47 = ptrtoint ptr %private1.i264 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %private1.i264, align 4
  %index.i265 = getelementptr i8, ptr %.pn254.in286, i32 12
  %48 = ptrtoint ptr %index.i265 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %index.i265, align 4
  %cmp64 = icmp sgt i32 %49, 2
  br i1 %cmp64, label %if.then72, label %if.end73, !prof !584

if.then72:                                        ; preds = %for.body62
  br label %if.end73

if.end73:                                         ; preds = %if.then72, %for.body62
  %migratetype.0 = phi i32 [ 1, %if.then72 ], [ %49, %for.body62 ]
  tail call fastcc void @trace_mm_page_free_batched(ptr noundef %page.1287)
  tail call fastcc void @free_unref_page_commit(ptr noundef %page.1287, i32 noundef %migratetype.0, i32 noundef 0)
  %inc = add i32 %batch_count.0284, 1
  %cmp74 = icmp eq i32 %inc, 32
  br i1 %cmp74, label %do.body78, label %for.inc164

do.body78:                                        ; preds = %if.end73
  %50 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %cpu, align 4
  %arrayidx87 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %51
  %52 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx87, align 4
  %add88 = add i32 %53, ptrtoint (ptr @pagesets to i32)
  %54 = inttoptr i32 %add88 to ptr
  tail call fastcc void @local_lock_release(ptr noundef %54)
  %and.i266 = and i32 %flags.0285, 128
  %tobool97.not = icmp eq i32 %and.i266, 0
  br i1 %tobool97.not, label %if.then98, label %do.body100

if.then98:                                        ; preds = %do.body78
  tail call void @trace_hardirqs_on() #27
  br label %do.body100

do.body100:                                       ; preds = %if.then98, %do.body78
  %55 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i = and i32 %55, 128
  %tobool108.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool108.not, label %if.then117, label %do.end120, !prof !584

if.then117:                                       ; preds = %do.body100
  tail call void @warn_bogus_irq_restore() #27
  br label %do.end120

do.end120:                                        ; preds = %if.then117, %do.body100
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %flags.0285) #27, !srcloc !615
  %56 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %and.i267 = and i32 %56, 128
  %tobool145.not = icmp eq i32 %and.i267, 0
  br i1 %tobool145.not, label %if.then146, label %do.body150

if.then146:                                       ; preds = %do.end120
  tail call void @trace_hardirqs_off() #27
  br label %do.body150

do.body150:                                       ; preds = %if.then146, %do.end120
  %57 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu, align 4
  %arrayidx159 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx159 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx159, align 4
  %add160 = add i32 %60, ptrtoint (ptr @pagesets to i32)
  %61 = inttoptr i32 %add160 to ptr
  tail call fastcc void @local_lock_acquire(ptr noundef %61)
  br label %for.inc164

for.inc164:                                       ; preds = %do.body150, %if.end73
  %batch_count.1 = phi i32 [ 0, %do.body150 ], [ %inc, %if.end73 ]
  %flags.1 = phi i32 [ %56, %do.body150 ], [ %flags.0285, %if.end73 ]
  %cmp58.not = icmp eq ptr %.pn254288, %list
  br i1 %cmp58.not, label %do.body172, label %for.body62

do.body172:                                       ; preds = %for.inc164, %do.body38
  %flags.0.lcssa = phi i32 [ %36, %do.body38 ], [ %flags.1, %for.inc164 ]
  %62 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %cpu, align 4
  %arrayidx181 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %63
  %64 = ptrtoint ptr %arrayidx181 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx181, align 4
  %add182 = add i32 %65, ptrtoint (ptr @pagesets to i32)
  %66 = inttoptr i32 %add182 to ptr
  tail call fastcc void @local_lock_release(ptr noundef %66)
  %and.i268 = and i32 %flags.0.lcssa, 128
  %tobool191.not = icmp eq i32 %and.i268, 0
  br i1 %tobool191.not, label %if.then192, label %do.body194

if.then192:                                       ; preds = %do.body172
  tail call void @trace_hardirqs_on() #27
  br label %do.body194

do.body194:                                       ; preds = %if.then192, %do.body172
  %67 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i269 = and i32 %67, 128
  %tobool202.not = icmp eq i32 %and.i.i269, 0
  br i1 %tobool202.not, label %if.then211, label %do.end214, !prof !584

if.then211:                                       ; preds = %do.body194
  tail call void @warn_bogus_irq_restore() #27
  br label %do.end214

do.end214:                                        ; preds = %if.then211, %do.body194
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %flags.0.lcssa) #27, !srcloc !615
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_page_free_batched(ptr noundef %page) unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_free_batched, i32 0, i32 1), ptr blockaddress(@trace_mm_page_free_batched, %do.body)) #27
          to label %if.end48 [label %do.body], !srcloc !583

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !617
  %call42 = tail call i32 @__traceiter_mm_page_free_batched(ptr noundef null, ptr noundef %page) #27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !618
  %13 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !582

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !619
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_free_batched, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_free_batched, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #27
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #27
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_page_free_batched.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_mm_page_free_batched.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.98, i32 noundef 199, ptr noundef nonnull @.str.99) #27
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !620
  %31 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @split_page(ptr noundef %page, i32 noundef %order) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %2 = and i32 %1, 65536
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %PageCompound.exit, label %if.then

PageCompound.exit:                                ; preds = %entry
  %3 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i = and i32 %5, 1
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %do.body9, label %if.then, !prof !582

if.then:                                          ; preds = %PageCompound.exit, %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.11) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3501, 0\0A.popsection", ""() #27, !srcloc !621
  unreachable

do.body9:                                         ; preds = %PageCompound.exit
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %3, align 4
  %and.i.i42 = and i32 %7, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i42, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !582

if.then.i.i:                                      ; preds = %do.body9
  %sub.i.i = add i32 %7, -1
  br label %page_count.exit

if.end.i.i:                                       ; preds = %do.body9
  %8 = ptrtoint ptr %page to i32
  br label %page_count.exit

page_count.exit:                                  ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %8, %if.end.i.i ]
  %9 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %9, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #27
  %10 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %_refcount.i.i.i, align 4
  %tobool11.not = icmp eq i32 %11, 0
  br i1 %tobool11.not, label %if.then20, label %for.cond.preheader, !prof !584

for.cond.preheader:                               ; preds = %page_count.exit
  %shl = shl nuw i32 1, %order
  %cmp52 = icmp sgt i32 %shl, 1
  br i1 %cmp52, label %for.body, label %for.end

if.then20:                                        ; preds = %page_count.exit
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.12) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3502, 0\0A.popsection", ""() #27, !srcloc !622
  unreachable

for.body:                                         ; preds = %set_page_refcounted.exit, %for.cond.preheader
  %i.053 = phi i32 [ %inc, %set_page_refcounted.exit ], [ 1, %for.cond.preheader ]
  %add.ptr = getelementptr %struct.page, ptr %page, i32 %i.053
  %12 = getelementptr %struct.page, ptr %page, i32 %i.053, i32 1
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and.i.i43 = and i32 %14, 1
  %tobool.not.i44 = icmp eq i32 %and.i.i43, 0
  br i1 %tobool.not.i44, label %do.body7.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %for.body
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.96) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/internal.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #27, !srcloc !605
  unreachable

do.body7.i:                                       ; preds = %for.body
  %_refcount.i.i = getelementptr %struct.page, ptr %page, i32 %i.053, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %15 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %_refcount.i.i, align 4
  %tobool9.not.i = icmp eq i32 %16, 0
  br i1 %tobool9.not.i, label %do.end22.i, label %if.then16.i, !prof !582

if.then16.i:                                      ; preds = %do.body7.i
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.119) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/internal.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 145, 0\0A.popsection", ""() #27, !srcloc !606
  unreachable

do.end22.i:                                       ; preds = %do.body7.i
  %call.i.i.i28.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %17 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 1, ptr %_refcount.i.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_set, i32 0, i32 1), ptr blockaddress(@split_page, %if.then.i.i45)) #27
          to label %set_page_refcounted.exit [label %if.then.i.i45], !srcloc !583

if.then.i.i45:                                    ; preds = %do.end22.i
  tail call void @__page_ref_set(ptr noundef %add.ptr, i32 noundef 1) #27
  br label %set_page_refcounted.exit

set_page_refcounted.exit:                         ; preds = %if.then.i.i45, %do.end22.i
  %inc = add nuw nsw i32 %i.053, 1
  %exitcond.not = icmp eq i32 %inc, %shl
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %set_page_refcounted.exit, %for.cond.preheader
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @page_owner_inited, ptr blockaddress(@split_page, %if.then.i46)) #27
          to label %split_page_owner.exit [label %if.then.i46], !srcloc !583

if.then.i46:                                      ; preds = %for.end
  tail call void @__split_page_owner(ptr noundef %page, i32 noundef %shl) #27
  br label %split_page_owner.exit

split_page_owner.exit:                            ; preds = %if.then.i46, %for.end
  tail call void @split_page_memcg(ptr noundef %page, i32 noundef %shl) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @split_page_memcg(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__isolate_free_page(ptr noundef %page, i32 noundef %order) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %0, align 4
  %and.i = and i32 %2, -268435328
  %cmp.i.not = icmp eq i32 %and.i, -268435456
  br i1 %cmp.i.not, label %do.end9, label %do.body4, !prof !582

do.body4:                                         ; preds = %entry
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3517, 0\0A.popsection", ""() #27, !srcloc !623
  unreachable

do.end9:                                          ; preds = %entry
  %3 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %4, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %do.end9
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %do.end9
  %shr.i.i = lshr i32 %4, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %5 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %5 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %6 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %6
  %7 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %8, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %get_pageblock_bitmap.exit.i.i, !prof !584

if.then.i.i.i.i.i:                                ; preds = %page_zone.exit
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i:                    ; preds = %page_zone.exit
  %shr.i.i.i.i.i = lshr i32 %8, 30
  %pageblock_flags.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i, i32 9
  %9 = ptrtoint ptr %pageblock_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pageblock_flags.i.i.i, align 8
  %11 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i8.i.i = icmp eq i32 %12, -1
  br i1 %cmp.i.not.i.i.i8.i.i, label %if.then.i.i.i9.i.i, label %get_pfnblock_flags_mask.exit, !prof !584

if.then.i.i.i9.i.i:                               ; preds = %get_pageblock_bitmap.exit.i.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pfnblock_flags_mask.exit:                     ; preds = %get_pageblock_bitmap.exit.i.i
  %shr.i.i.i10.i.i = lshr i32 %12, 30
  %zone_start_pfn.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i, i32 10
  %13 = ptrtoint ptr %zone_start_pfn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %zone_start_pfn.i.i.i, align 4
  %and.i.i.i = and i32 %14, -2048
  %sub.i.i.i = sub i32 %add, %and.i.i.i
  %15 = lshr i32 %sub.i.i.i, 9
  %div7.i.i = lshr i32 %sub.i.i.i, 14
  %and.i.i = and i32 %15, 28
  %arrayidx.i.i = getelementptr i32, ptr %10, i32 %div7.i.i
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i.i, align 4
  %shr.i.i69 = lshr i32 %17, %and.i.i
  %and2.i.i = and i32 %shr.i.i69, 7
  %cmp.i70 = icmp eq i32 %and2.i.i, 5
  br i1 %cmp.i70, label %if.end19, label %if.then13

if.then13:                                        ; preds = %get_pfnblock_flags_mask.exit
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.i, align 128
  %shl = shl nuw i32 1, %order
  %add14 = add i32 %19, %shl
  %arrayidx.i.i71 = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 37, i32 0
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i71, i32 noundef 4) #27
  %20 = ptrtoint ptr %arrayidx.i.i71 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %arrayidx.i.i71, align 128
  %22 = tail call i32 @llvm.smax.i32(i32 %21, i32 0) #27
  %nr_reserved_highatomic.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 2
  %23 = ptrtoint ptr %nr_reserved_highatomic.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %nr_reserved_highatomic.i.i, align 16
  %sub.i = sub i32 %22, %24
  %arrayidx.i94 = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 3, i32 0
  %25 = ptrtoint ptr %arrayidx.i94 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx.i94, align 4
  %add.i95 = add i32 %add14, %26
  %cmp.not.i = icmp sgt i32 %sub.i, %add.i95
  br i1 %cmp.not.i, label %if.end17, label %cleanup

if.end17:                                         ; preds = %if.then13
  %sub = sub i32 0, %shl
  tail call void @__mod_zone_page_state(ptr noundef %arrayidx.i, i32 noundef 0, i32 noundef %sub) #27
  %cmp.i72 = icmp eq i32 %and2.i.i, 4
  br i1 %cmp.i72, label %if.then.i, label %if.end19, !prof !584

if.then.i:                                        ; preds = %if.end17
  tail call void @__mod_zone_page_state(ptr noundef %arrayidx.i, i32 noundef 10, i32 noundef %sub) #27
  br label %if.end19

if.end19:                                         ; preds = %if.then.i, %if.end17, %get_pfnblock_flags_mask.exit
  tail call fastcc void @del_page_from_free_list(ptr noundef %page, ptr noundef %arrayidx.i, i32 noundef %order)
  %cmp = icmp ugt i32 %order, 9
  %shl21 = shl nuw i32 1, %order
  br i1 %cmp, label %if.then20, label %cleanup

if.then20:                                        ; preds = %if.end19
  %add.ptr = getelementptr %struct.page, ptr %page, i32 %shl21
  %add.ptr22 = getelementptr %struct.page, ptr %add.ptr, i32 -1
  %cmp2399 = icmp ugt ptr %add.ptr22, %page
  br i1 %cmp2399, label %for.body, label %cleanup

for.body:                                         ; preds = %if.end42, %if.then20
  %page.addr.0100 = phi ptr [ %add.ptr43, %if.end42 ], [ %page, %if.then20 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %27 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast25 = ptrtoint ptr %page.addr.0100 to i32
  %sub.ptr.rhs.cast26 = ptrtoint ptr %27 to i32
  %sub.ptr.sub27 = sub i32 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast26
  %sub.ptr.div28 = sdiv exact i32 %sub.ptr.sub27, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %28 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add29 = add i32 %sub.ptr.div28, %28
  %29 = ptrtoint ptr %page.addr.0100 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %page.addr.0100, align 4
  %cmp.i.not.i.i.i.i.i73 = icmp eq i32 %30, -1
  br i1 %cmp.i.not.i.i.i.i.i73, label %if.then.i.i.i.i.i74, label %get_pageblock_bitmap.exit.i.i78, !prof !584

if.then.i.i.i.i.i74:                              ; preds = %for.body
  tail call void @dump_page(ptr noundef %page.addr.0100, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i78:                  ; preds = %for.body
  %shr.i.i.i.i.i75 = lshr i32 %30, 30
  %pageblock_flags.i.i.i76 = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i75, i32 9
  %31 = ptrtoint ptr %pageblock_flags.i.i.i76 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pageblock_flags.i.i.i76, align 8
  %33 = ptrtoint ptr %page.addr.0100 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %page.addr.0100, align 4
  %cmp.i.not.i.i.i8.i.i77 = icmp eq i32 %34, -1
  br i1 %cmp.i.not.i.i.i8.i.i77, label %if.then.i.i.i9.i.i79, label %get_pfnblock_flags_mask.exit89, !prof !584

if.then.i.i.i9.i.i79:                             ; preds = %get_pageblock_bitmap.exit.i.i78
  tail call void @dump_page(ptr noundef %page.addr.0100, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pfnblock_flags_mask.exit89:                   ; preds = %get_pageblock_bitmap.exit.i.i78
  %shr.i.i.i10.i.i80 = lshr i32 %34, 30
  %zone_start_pfn.i.i.i81 = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i80, i32 10
  %35 = ptrtoint ptr %zone_start_pfn.i.i.i81 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %zone_start_pfn.i.i.i81, align 4
  %and.i.i.i82 = and i32 %36, -2048
  %sub.i.i.i83 = sub i32 %add29, %and.i.i.i82
  %37 = lshr i32 %sub.i.i.i83, 9
  %div7.i.i84 = lshr i32 %sub.i.i.i83, 14
  %and.i.i85 = and i32 %37, 28
  %arrayidx.i.i86 = getelementptr i32, ptr %32, i32 %div7.i.i84
  %38 = ptrtoint ptr %arrayidx.i.i86 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx.i.i86, align 4
  %shr.i.i87 = lshr i32 %39, %and.i.i85
  %and2.i.i88 = and i32 %shr.i.i87, 7
  %and2.i.i88.off = add nsw i32 %and2.i.i88, -3
  %switch = icmp ult i32 %and2.i.i88.off, 3
  br i1 %switch, label %if.end42, label %if.then41

if.then41:                                        ; preds = %get_pfnblock_flags_mask.exit89
  %40 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i.not = icmp eq i32 %40, 0
  br i1 %tobool.not.i.not, label %set_pageblock_migratetype.exit, label %if.then.i92, !prof !582

if.then.i92:                                      ; preds = %if.then41
  br label %set_pageblock_migratetype.exit

set_pageblock_migratetype.exit:                   ; preds = %if.then.i92, %if.then41
  %migratetype.addr.0.i = phi i32 [ 0, %if.then.i92 ], [ 1, %if.then41 ]
  tail call void @set_pfnblock_flags_mask(ptr noundef %page.addr.0100, i32 noundef %migratetype.addr.0.i, i32 noundef %add29, i32 noundef 7) #27
  br label %if.end42

if.end42:                                         ; preds = %set_pageblock_migratetype.exit, %get_pfnblock_flags_mask.exit89
  %add.ptr43 = getelementptr %struct.page, ptr %page.addr.0100, i32 2048
  %cmp23 = icmp ult ptr %add.ptr43, %add.ptr22
  br i1 %cmp23, label %for.body, label %cleanup

cleanup:                                          ; preds = %if.end42, %if.then20, %if.end19, %if.then13
  %retval.0 = phi i32 [ 0, %if.then13 ], [ %shl21, %if.then20 ], [ %shl21, %if.end19 ], [ %shl21, %if.end42 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @zone_watermark_ok(ptr noundef %z, i32 noundef %order, i32 noundef %mark, i32 noundef %highest_zoneidx, i32 noundef %alloc_flags) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx.i = getelementptr %struct.zone, ptr %z, i32 0, i32 37, i32 0
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i, i32 noundef 4) #27
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %arrayidx.i, align 4
  %2 = tail call i32 @llvm.smax.i32(i32 %1, i32 0) #27
  %call1 = tail call zeroext i1 @__zone_watermark_ok(ptr noundef %z, i32 noundef %order, i32 noundef %mark, i32 noundef %highest_zoneidx, i32 noundef %alloc_flags, i32 noundef %2)
  ret i1 %call1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @del_page_from_free_list(ptr noundef %page, ptr nocapture noundef %zone, i32 noundef %order) unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @page_reporting_enabled, ptr blockaddress(@del_page_from_free_list, %land.rhs.i)) #27
          to label %if.end [label %land.rhs.i], !srcloc !583

land.rhs.i:                                       ; preds = %entry
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %PageReported.exit.i, !prof !584

if.then.i.i:                                      ; preds = %land.rhs.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 551, 0\0A.popsection", ""() #27, !srcloc !624
  unreachable

PageReported.exit.i:                              ; preds = %land.rhs.i
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  %4 = and i32 %3, 4
  %tobool4.i.not = icmp eq i32 %4, 0
  br i1 %tobool4.i.not, label %if.end, label %if.then

if.then:                                          ; preds = %PageReported.exit.i
  %5 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %page, align 4
  %7 = and i32 %6, 65536
  %tobool.not.i.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %if.then.i

PageCompound.exit.i:                              ; preds = %if.then
  %8 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %8, align 4
  %and.i.i.i = and i32 %10, 1
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %PageCompound.exit.i, %if.then
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.95) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 551, 0\0A.popsection", ""() #27, !srcloc !625
  unreachable

do.body7.i:                                       ; preds = %PageCompound.exit.i
  %11 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i = icmp eq i32 %12, -1
  br i1 %cmp.i.not.i, label %if.then16.i, label %__ClearPageReported.exit, !prof !584

if.then16.i:                                      ; preds = %do.body7.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 551, 0\0A.popsection", ""() #27, !srcloc !626
  unreachable

__ClearPageReported.exit:                         ; preds = %do.body7.i
  %and.i.i = and i32 %12, -5
  %13 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %and.i.i, ptr %page, align 4
  br label %if.end

if.end:                                           ; preds = %__ClearPageReported.exit, %PageReported.exit.i, %entry
  %14 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %14) #27
  br i1 %call.i.i, label %if.end.i.i, label %list_del.exit

if.end.i.i:                                       ; preds = %if.end
  %prev.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i, align 4
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %14, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end
  %21 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 256 to ptr), ptr %14, align 4
  %prev.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %23 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 2
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %and.i.i5 = and i32 %25, -268435328
  %cmp.i.not.i6 = icmp eq i32 %and.i.i5, -268435456
  br i1 %cmp.i.not.i6, label %__ClearPageBuddy.exit, label %if.then.i7, !prof !582

if.then.i7:                                       ; preds = %list_del.exit
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.130) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 878, 0\0A.popsection", ""() #27, !srcloc !627
  unreachable

__ClearPageBuddy.exit:                            ; preds = %list_del.exit
  %or.i = or i32 %25, 128
  %26 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %or.i, ptr %23, align 4
  %private1.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %27 = ptrtoint ptr %private1.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %private1.i, align 4
  %nr_free = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %order, i32 1
  %28 = ptrtoint ptr %nr_free to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nr_free, align 4
  %dec = add i32 %29, -1
  store i32 %dec, ptr %nr_free, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__putback_isolated_page(ptr noundef %page, i32 noundef %order, i32 noundef %mt) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %entry
  %shr.i.i = lshr i32 %1, 30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.end, label %land.rhs

land.rhs:                                         ; preds = %page_zone.exit
  %dep_map = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 22, i32 0, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #27
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %if.end, !prof !584

do.end:                                           ; preds = %land.rhs
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3573, i32 noundef 9, ptr noundef null) #27
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs, %page_zone.exit
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %3 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %4 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %4
  tail call fastcc void @__free_one_page(ptr noundef %page, i32 noundef %add, ptr noundef %arrayidx.i, i32 noundef %order, i32 noundef %mt, i32 noundef 3)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__free_one_page(ptr noundef %page, i32 noundef %pfn, ptr noundef %zone, i32 noundef %order, i32 noundef %migratetype, i32 noundef %fpi_flags) unnamed_addr #5 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %capture_control.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 152
  %4 = ptrtoint ptr %capture_control.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %capture_control.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %task_capc.exit, label %land.lhs.true.i, !prof !582

land.lhs.true.i:                                  ; preds = %entry
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %7, 2097152
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true6.i, label %task_capc.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i
  %page.i = getelementptr inbounds %struct.capture_control, ptr %5, i32 0, i32 1
  %8 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %page.i, align 4
  %tobool7.not.i = icmp eq ptr %9, null
  br i1 %tobool7.not.i, label %land.lhs.true8.i, label %task_capc.exit

land.lhs.true8.i:                                 ; preds = %land.lhs.true6.i
  %10 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %5, align 4
  %zone9.i = getelementptr inbounds %struct.compact_control, ptr %11, i32 0, i32 7
  %12 = ptrtoint ptr %zone9.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %zone9.i, align 4
  %cmp.i = icmp eq ptr %13, %zone
  %spec.select.i = select i1 %cmp.i, ptr %5, ptr null
  br label %task_capc.exit

task_capc.exit:                                   ; preds = %land.lhs.true8.i, %land.lhs.true6.i, %land.lhs.true.i, %entry
  %cond.i = phi ptr [ null, %land.lhs.true6.i ], [ null, %land.lhs.true.i ], [ null, %entry ], [ %spec.select.i, %land.lhs.true8.i ]
  %initialized.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 17
  %14 = ptrtoint ptr %initialized.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %initialized.i, align 8
  %tobool.i.not = icmp eq i32 %15, 0
  br i1 %tobool.i.not, label %do.body4, label %do.body10, !prof !584

do.body4:                                         ; preds = %task_capc.exit
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1083, 0\0A.popsection", ""() #27, !srcloc !628
  unreachable

do.body10:                                        ; preds = %task_capc.exit
  %16 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %page, align 4
  %and = and i32 %17, 4194303
  %tobool11.not = icmp eq i32 %and, 0
  br i1 %tobool11.not, label %do.body28, label %if.then18, !prof !582

if.then18:                                        ; preds = %do.body10
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.131) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1084, 0\0A.popsection", ""() #27, !srcloc !629
  unreachable

do.body28:                                        ; preds = %do.body10
  switch i32 %migratetype, label %if.then54 [
    i32 -1, label %do.body36
    i32 5, label %do.body56
  ], !prof !630

do.body36:                                        ; preds = %do.body28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1086, 0\0A.popsection", ""() #27, !srcloc !631
  unreachable

if.then54:                                        ; preds = %do.body28
  %shl = shl nuw i32 1, %order
  tail call void @__mod_zone_page_state(ptr noundef %zone, i32 noundef 0, i32 noundef %shl) #27
  %cmp.i230 = icmp eq i32 %migratetype, 4
  br i1 %cmp.i230, label %if.then.i, label %do.body56, !prof !584

if.then.i:                                        ; preds = %if.then54
  tail call void @__mod_zone_page_state(ptr noundef %zone, i32 noundef 10, i32 noundef %shl) #27
  br label %do.body56

do.body56:                                        ; preds = %if.then.i, %if.then54, %do.body28
  %notmask = shl nsw i32 -1, %order
  %sub = xor i32 %notmask, -1
  %and58 = and i32 %sub, %pfn
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %do.body76, label %if.then66, !prof !582

if.then66:                                        ; preds = %do.body56
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.132) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1090, 0\0A.popsection", ""() #27, !srcloc !632
  unreachable

do.body76:                                        ; preds = %do.body56
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %18 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %18 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %19 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i = add i32 %sub.ptr.div.i.i, %19
  %zone_start_pfn.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %20 = ptrtoint ptr %zone_start_pfn.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %zone_start_pfn.i.i, align 4
  %spanned_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %22 = ptrtoint ptr %spanned_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %spanned_pages.i.i, align 4
  %cmp.not.i.i.i = icmp ule i32 %21, %add.i.i
  %add.i.i.i.i = add i32 %23, %21
  %cmp1.i.i.i = icmp ugt i32 %add.i.i.i.i, %add.i.i
  %or.cond.i.i = select i1 %cmp.not.i.i.i, i1 %cmp1.i.i.i, i1 false
  br i1 %or.cond.i.i, label %if.end.i, label %bad_range.exit.thread

bad_range.exit.thread:                            ; preds = %do.body76
  %name.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 15
  %24 = ptrtoint ptr %name.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %name.i.i, align 16
  %call10.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134, i32 noundef %add.i.i, i32 noundef 0, ptr noundef %25, i32 noundef %21, i32 noundef %add.i.i.i.i) #29
  br label %if.then85

if.end.i:                                         ; preds = %do.body76
  %26 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i.i = icmp eq i32 %27, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %bad_range.exit, !prof !584

if.then.i.i.i.i:                                  ; preds = %if.end.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

bad_range.exit:                                   ; preds = %if.end.i
  %shr.i.i.i.i = lshr i32 %27, 30
  %arrayidx.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i
  %cmp.not.i.not.i.not = icmp eq ptr %arrayidx.i.i.i, %zone
  br i1 %cmp.not.i.not.i.not, label %while.cond.preheader, label %if.then85, !prof !582

while.cond.preheader:                             ; preds = %bad_range.exit
  %cmp95274 = icmp ult i32 %order, 11
  br i1 %cmp95274, label %while.body.lr.ph, label %done_merging

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %tobool.not.i231 = icmp eq ptr %cond.i, null
  %cmp2.i = icmp eq i32 %migratetype, 4
  br label %while.body

if.then85:                                        ; preds = %bad_range.exit, %bad_range.exit.thread
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.133) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1091, 0\0A.popsection", ""() #27, !srcloc !633
  unreachable

while.body:                                       ; preds = %if.end105, %while.body.lr.ph
  %page.addr.1277 = phi ptr [ %page, %while.body.lr.ph ], [ %add.ptr111, %if.end105 ]
  %pfn.addr.1276 = phi i32 [ %pfn, %while.body.lr.ph ], [ %and109, %if.end105 ]
  %order.addr.1275 = phi i32 [ %order, %while.body.lr.ph ], [ %inc, %if.end105 ]
  br i1 %tobool.not.i231, label %if.end100, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %while.body
  %28 = ptrtoint ptr %cond.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %cond.i, align 4
  %order1.i = getelementptr inbounds %struct.compact_control, ptr %29, i32 0, i32 13
  %30 = ptrtoint ptr %order1.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %order1.i, align 4
  %cmp.not.i = icmp ne i32 %31, %order.addr.1275
  %or.cond.i = or i1 %cmp2.i, %cmp.not.i
  br i1 %or.cond.i, label %if.end100, label %lor.lhs.false5.i, !prof !634

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  switch i32 %migratetype, label %__mod_zone_freepage_state.exit236 [
    i32 5, label %if.end100
    i32 1, label %if.end100
  ]

__mod_zone_freepage_state.exit236:                ; preds = %lor.lhs.false5.i
  %page12.i = getelementptr inbounds %struct.capture_control, ptr %cond.i, i32 0, i32 1
  %32 = ptrtoint ptr %page12.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %page.addr.1277, ptr %page12.i, align 4
  %shl98.neg = shl nsw i32 -1, %order.addr.1275
  tail call void @__mod_zone_page_state(ptr noundef %zone, i32 noundef 0, i32 noundef %shl98.neg) #27
  br label %cleanup154

if.end100:                                        ; preds = %lor.lhs.false5.i, %lor.lhs.false5.i, %lor.lhs.false.i, %while.body
  %shl.i = shl nuw nsw i32 1, %order.addr.1275
  %xor.i = xor i32 %shl.i, %pfn.addr.1276
  %sub102 = sub i32 %xor.i, %pfn.addr.1276
  %add.ptr = getelementptr %struct.page, ptr %page.addr.1277, i32 %sub102
  %33 = getelementptr %struct.page, ptr %page.addr.1277, i32 %sub102, i32 2
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %and.i.i237 = and i32 %35, -268435328
  %cmp.i.not.i = icmp eq i32 %and.i.i237, -268435456
  br i1 %cmp.i.not.i, label %if.end.i239, label %done_merging

if.end.i239:                                      ; preds = %if.end100
  %private.i.i = getelementptr %struct.page, ptr %page.addr.1277, i32 %sub102, i32 1, i32 0, i32 3
  %36 = ptrtoint ptr %private.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %private.i.i, align 4
  %cmp.not.i238 = icmp eq i32 %37, %order.addr.1275
  br i1 %cmp.not.i238, label %if.end4.i, label %done_merging

if.end4.i:                                        ; preds = %if.end.i239
  %38 = ptrtoint ptr %page.addr.1277 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %page.addr.1277, align 4
  %40 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %add.ptr, align 4
  %cmp7.not.unshifted.i = xor i32 %41, %39
  %cmp7.not.i = icmp ult i32 %cmp7.not.unshifted.i, 1073741824
  br i1 %cmp7.not.i, label %do.body.i, label %done_merging

do.body.i:                                        ; preds = %if.end4.i
  %42 = getelementptr %struct.page, ptr %page.addr.1277, i32 %sub102, i32 1
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %42, align 4
  %and.i.i.i = and i32 %44, 1
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !582

if.then.i.i.i:                                    ; preds = %do.body.i
  %sub.i.i.i = add i32 %44, -1
  br label %page_count.exit.i

if.end.i.i.i:                                     ; preds = %do.body.i
  %45 = ptrtoint ptr %add.ptr to i32
  br label %page_count.exit.i

page_count.exit.i:                                ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %45, %if.end.i.i.i ]
  %46 = inttoptr i32 %retval.0.i.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %46, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #27
  %47 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %cmp11.not.i = icmp eq i32 %48, 0
  br i1 %cmp11.not.i, label %if.end105, label %if.then14.i, !prof !582

if.then14.i:                                      ; preds = %page_count.exit.i
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.136) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 918, 0\0A.popsection", ""() #27, !srcloc !635
  unreachable

if.end105:                                        ; preds = %page_count.exit.i
  tail call fastcc void @del_page_from_free_list(ptr noundef %add.ptr, ptr noundef %zone, i32 noundef %order.addr.1275)
  %and109 = and i32 %xor.i, %pfn.addr.1276
  %sub110 = sub i32 %and109, %pfn.addr.1276
  %add.ptr111 = getelementptr %struct.page, ptr %page.addr.1277, i32 %sub110
  %inc = add i32 %order.addr.1275, 1
  %exitcond.not = icmp eq i32 %inc, 11
  br i1 %exitcond.not, label %done_merging, label %while.body

done_merging:                                     ; preds = %if.end105, %if.end4.i, %if.end.i239, %if.end100, %while.cond.preheader
  %order.addr.1.lcssa = phi i32 [ %order, %while.cond.preheader ], [ %order.addr.1275, %if.end4.i ], [ %order.addr.1275, %if.end.i239 ], [ %order.addr.1275, %if.end100 ], [ 11, %if.end105 ]
  %pfn.addr.1.lcssa = phi i32 [ %pfn, %while.cond.preheader ], [ %pfn.addr.1276, %if.end4.i ], [ %pfn.addr.1276, %if.end.i239 ], [ %pfn.addr.1276, %if.end100 ], [ %and109, %if.end105 ]
  %page.addr.1.lcssa = phi ptr [ %page, %while.cond.preheader ], [ %page.addr.1277, %if.end4.i ], [ %page.addr.1277, %if.end.i239 ], [ %page.addr.1277, %if.end100 ], [ %add.ptr111, %if.end105 ]
  %buddy_pfn.3 = phi i32 [ -1, %while.cond.preheader ], [ %xor.i, %if.end4.i ], [ %xor.i, %if.end.i239 ], [ %xor.i, %if.end100 ], [ %xor.i, %if.end105 ]
  %private1.i.i = getelementptr inbounds %struct.page, ptr %page.addr.1.lcssa, i32 0, i32 1, i32 0, i32 3
  %49 = ptrtoint ptr %private1.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %order.addr.1.lcssa, ptr %private1.i.i, align 4
  %50 = getelementptr inbounds %struct.page, ptr %page.addr.1.lcssa, i32 0, i32 2
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %50, align 4
  %cmp.i.i = icmp ult i32 %52, -268435456
  br i1 %cmp.i.i, label %if.then.i.i, label %set_buddy_order.exit, !prof !584

if.then.i.i:                                      ; preds = %done_merging
  tail call void @dump_page(ptr noundef %page.addr.1.lcssa, ptr noundef nonnull @.str.137) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 878, 0\0A.popsection", ""() #27, !srcloc !636
  unreachable

set_buddy_order.exit:                             ; preds = %done_merging
  %and7.i.i = and i32 %52, -129
  %53 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %and7.i.i, ptr %50, align 4
  %and134 = and i32 %fpi_flags, 2
  %tobool135.not = icmp eq i32 %and134, 0
  br i1 %tobool135.not, label %if.else137, label %if.then147

if.else137:                                       ; preds = %set_buddy_order.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @page_alloc_shuffle_key, ptr blockaddress(@__free_one_page, %l_yes.i.i)) #27
          to label %is_shuffle_order.exit [label %l_yes.i.i], !srcloc !583

l_yes.i.i:                                        ; preds = %if.else137
  br label %is_shuffle_order.exit

is_shuffle_order.exit:                            ; preds = %l_yes.i.i, %if.else137
  %retval.0.i.i = phi i1 [ true, %l_yes.i.i ], [ false, %if.else137 ]
  %cmp.i241 = icmp sgt i32 %order.addr.1.lcssa, 10
  %retval.0.i242 = and i1 %cmp.i241, %retval.0.i.i
  br i1 %retval.0.i242, label %if.end145, label %if.else141

if.else141:                                       ; preds = %is_shuffle_order.exit
  %cmp.i243 = icmp ugt i32 %order.addr.1.lcssa, 9
  br i1 %cmp.i243, label %if.else148, label %if.end.i246

if.end.i246:                                      ; preds = %if.else141
  %and.i244 = and i32 %buddy_pfn.3, %pfn.addr.1.lcssa
  %sub.i = sub i32 %and.i244, %pfn.addr.1.lcssa
  %add.ptr.i = getelementptr %struct.page, ptr %page.addr.1.lcssa, i32 %sub.i
  %shl.i.i = shl nuw nsw i32 2, %order.addr.1.lcssa
  %xor.i.i = xor i32 %and.i244, %shl.i.i
  %sub1.i = sub i32 %xor.i.i, %and.i244
  %add.ptr2.i = getelementptr %struct.page, ptr %add.ptr.i, i32 %sub1.i
  %54 = getelementptr inbounds %struct.page, ptr %add.ptr2.i, i32 0, i32 2
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %54, align 4
  %and.i.i.i245 = and i32 %56, -268435328
  %cmp.i.not.i.i = icmp eq i32 %and.i.i.i245, -268435456
  br i1 %cmp.i.not.i.i, label %if.end.i.i, label %if.else148

if.end.i.i:                                       ; preds = %if.end.i246
  %add.i = add nuw nsw i32 %order.addr.1.lcssa, 1
  %private.i.i.i = getelementptr inbounds %struct.page, ptr %add.ptr2.i, i32 0, i32 1, i32 0, i32 3
  %57 = ptrtoint ptr %private.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %private.i.i.i, align 4
  %cmp.not.i.i = icmp eq i32 %58, %add.i
  br i1 %cmp.not.i.i, label %if.end4.i.i, label %if.else148

if.end4.i.i:                                      ; preds = %if.end.i.i
  %59 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %add.ptr.i, align 4
  %61 = ptrtoint ptr %add.ptr2.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %add.ptr2.i, align 4
  %cmp7.not.unshifted.i.i = xor i32 %62, %60
  %cmp7.not.i.i = icmp ult i32 %cmp7.not.unshifted.i.i, 1073741824
  br i1 %cmp7.not.i.i, label %do.body.i.i, label %if.else148

do.body.i.i:                                      ; preds = %if.end4.i.i
  %63 = getelementptr inbounds %struct.page, ptr %add.ptr2.i, i32 0, i32 1
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %63, align 4
  %and.i.i.i.i = and i32 %65, 1
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i247, !prof !582

if.then.i.i.i.i247:                               ; preds = %do.body.i.i
  %sub.i.i.i.i = add i32 %65, -1
  br label %page_count.exit.i.i

if.end.i.i.i.i:                                   ; preds = %do.body.i.i
  %66 = ptrtoint ptr %add.ptr2.i to i32
  br label %page_count.exit.i.i

page_count.exit.i.i:                              ; preds = %if.end.i.i.i.i, %if.then.i.i.i.i247
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i.i247 ], [ %66, %if.end.i.i.i.i ]
  %67 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %67, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #27
  %68 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  %cmp11.not.i.i = icmp eq i32 %69, 0
  br i1 %cmp11.not.i.i, label %if.then147, label %if.then14.i.i, !prof !582

if.then14.i.i:                                    ; preds = %page_count.exit.i.i
  tail call void @dump_page(ptr noundef %add.ptr2.i, ptr noundef nonnull @.str.136) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 918, 0\0A.popsection", ""() #27, !srcloc !635
  unreachable

if.end145:                                        ; preds = %is_shuffle_order.exit
  %call140 = tail call zeroext i1 @shuffle_pick_tail() #27
  br i1 %call140, label %if.then147, label %if.else148

if.then147:                                       ; preds = %if.end145, %page_count.exit.i.i, %set_buddy_order.exit
  %arrayidx.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %order.addr.1.lcssa
  %70 = getelementptr inbounds %struct.page, ptr %page.addr.1.lcssa, i32 0, i32 1
  %arrayidx1.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i, i32 0, i32 %migratetype
  %prev.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i, i32 0, i32 %migratetype, i32 1
  %71 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %70, ptr noundef %72, ptr noundef %arrayidx1.i) #27
  br i1 %call.i.i.i, label %if.end.i.i.i249, label %if.end149

if.end.i.i.i249:                                  ; preds = %if.then147
  %73 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %70, ptr %prev.i.i, align 4
  %74 = ptrtoint ptr %70 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %arrayidx1.i, ptr %70, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.page, ptr %page.addr.1.lcssa, i32 0, i32 1, i32 0, i32 0, i32 1
  %75 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %72, ptr %prev3.i.i.i, align 4
  %76 = ptrtoint ptr %72 to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile ptr %70, ptr %72, align 4
  br label %if.end149

if.else148:                                       ; preds = %if.end145, %if.end4.i.i, %if.end.i.i, %if.end.i246, %if.else141
  %arrayidx.i250 = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %order.addr.1.lcssa
  %77 = getelementptr inbounds %struct.page, ptr %page.addr.1.lcssa, i32 0, i32 1
  %arrayidx1.i251 = getelementptr [6 x %struct.list_head], ptr %arrayidx.i250, i32 0, i32 %migratetype
  %78 = ptrtoint ptr %arrayidx1.i251 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %arrayidx1.i251, align 4
  %call.i.i.i252 = tail call zeroext i1 @__list_add_valid(ptr noundef %77, ptr noundef %arrayidx1.i251, ptr noundef %79) #27
  br i1 %call.i.i.i252, label %if.end.i.i.i254, label %if.end149

if.end.i.i.i254:                                  ; preds = %if.else148
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %77, ptr %prev1.i.i.i, align 4
  %81 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %79, ptr %77, align 4
  %prev3.i.i.i253 = getelementptr inbounds %struct.page, ptr %page.addr.1.lcssa, i32 0, i32 1, i32 0, i32 0, i32 1
  %82 = ptrtoint ptr %prev3.i.i.i253 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %arrayidx1.i251, ptr %prev3.i.i.i253, align 4
  %83 = ptrtoint ptr %arrayidx1.i251 to i32
  call void @__asan_store4_noabort(i32 %83)
  store volatile ptr %77, ptr %arrayidx1.i251, align 4
  br label %if.end149

if.end149:                                        ; preds = %if.end.i.i.i254, %if.else148, %if.end.i.i.i249, %if.then147
  %nr_free.i255 = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %order.addr.1.lcssa, i32 1
  %84 = ptrtoint ptr %nr_free.i255 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %nr_free.i255, align 4
  %inc.i256 = add i32 %85, 1
  store i32 %inc.i256, ptr %nr_free.i255, align 4
  %and150 = and i32 %fpi_flags, 1
  %tobool151.not = icmp eq i32 %and150, 0
  br i1 %tobool151.not, label %if.then152, label %cleanup154

if.then152:                                       ; preds = %if.end149
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @page_reporting_enabled, ptr blockaddress(@__free_one_page, %if.end.i258)) #27
          to label %cleanup154 [label %if.end.i258], !srcloc !583

if.end.i258:                                      ; preds = %if.then152
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @page_reporting_order to i32))
  %86 = load i32, ptr @page_reporting_order, align 4
  %cmp.i257 = icmp ugt i32 %86, %order.addr.1.lcssa
  br i1 %cmp.i257, label %cleanup154, label %if.end4.i259

if.end4.i259:                                     ; preds = %if.end.i258
  tail call void @__page_reporting_notify() #27
  br label %cleanup154

cleanup154:                                       ; preds = %if.end4.i259, %if.end.i258, %if.then152, %if.end149, %__mod_zone_freepage_state.exit236
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @setup_fail_page_alloc(ptr noundef %str) #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @setup_fault_attr(ptr noundef nonnull @fail_page_alloc, ptr noundef %str) #27
  ret i32 %call
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @fail_page_alloc_debugfs() #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @fault_create_debugfs_attr(ptr noundef nonnull @.str.139, ptr noundef null, ptr noundef nonnull @fail_page_alloc) #27
  tail call void @debugfs_create_bool(ptr noundef nonnull @.str.140, i16 noundef zeroext -32384, ptr noundef %call, ptr noundef getelementptr inbounds (%struct.anon.86, ptr @fail_page_alloc, i32 0, i32 2)) #27
  tail call void @debugfs_create_bool(ptr noundef nonnull @.str.141, i16 noundef zeroext -32384, ptr noundef %call, ptr noundef getelementptr inbounds (%struct.anon.86, ptr @fail_page_alloc, i32 0, i32 1)) #27
  tail call void @debugfs_create_u32(ptr noundef nonnull @.str.142, i16 noundef zeroext -32384, ptr noundef %call, ptr noundef getelementptr inbounds (%struct.anon.86, ptr @fail_page_alloc, i32 0, i32 3)) #27
  ret i32 0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @should_fail_alloc_page(i32 noundef %gfp_mask, i32 noundef %order) local_unnamed_addr #10 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr getelementptr inbounds (%struct.anon.86, ptr @fail_page_alloc, i32 0, i32 3), align 4
  %cmp.i = icmp ule i32 %0, %order
  %and.i = and i32 %gfp_mask, 32768
  %tobool.not.i = icmp eq i32 %and.i, 0
  %or.cond18.i = and i1 %tobool.not.i, %cmp.i
  br i1 %or.cond18.i, label %if.end2.i, label %__should_fail_alloc_page.exit

if.end2.i:                                        ; preds = %entry
  %1 = load i8, ptr getelementptr inbounds (%struct.anon.86, ptr @fail_page_alloc, i32 0, i32 1), align 4, !range !593
  %tobool3.not.i = icmp eq i8 %1, 0
  %and4.i = and i32 %gfp_mask, 2
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  %or.cond.i = or i1 %tobool5.not.i, %tobool3.not.i
  br i1 %or.cond.i, label %if.end7.i, label %__should_fail_alloc_page.exit

if.end7.i:                                        ; preds = %if.end2.i
  %2 = load i8, ptr getelementptr inbounds (%struct.anon.86, ptr @fail_page_alloc, i32 0, i32 2), align 1, !range !593
  %tobool8.not.i = icmp eq i8 %2, 0
  %and10.i = and i32 %gfp_mask, 1024
  %tobool11.not.i = icmp eq i32 %and10.i, 0
  %or.cond17.i = or i1 %tobool11.not.i, %tobool8.not.i
  br i1 %or.cond17.i, label %if.end13.i, label %__should_fail_alloc_page.exit

if.end13.i:                                       ; preds = %if.end7.i
  %shl.i = shl nuw i32 1, %order
  %call.i = tail call zeroext i1 @should_fail(ptr noundef nonnull @fail_page_alloc, i32 noundef %shl.i) #27
  br label %__should_fail_alloc_page.exit

__should_fail_alloc_page.exit:                    ; preds = %if.end13.i, %if.end7.i, %if.end2.i, %entry
  %retval.0.i = phi i1 [ %call.i, %if.end13.i ], [ false, %entry ], [ false, %if.end2.i ], [ false, %if.end7.i ]
  ret i1 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @__zone_watermark_ok(ptr noundef %z, i32 noundef %order, i32 noundef %mark, i32 noundef %highest_zoneidx, i32 noundef %alloc_flags, i32 noundef %free_pages) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %alloc_flags, 24
  %tobool.not = icmp eq i32 %and, 0
  %notmask.i = shl nsw i32 -1, %order
  %sub.i = xor i32 %notmask.i, -1
  br i1 %tobool.not, label %if.then.i, label %if.end.i, !prof !582

if.then.i:                                        ; preds = %entry
  %nr_reserved_highatomic.i = getelementptr inbounds %struct.zone, ptr %z, i32 0, i32 2
  %0 = ptrtoint ptr %nr_reserved_highatomic.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_reserved_highatomic.i, align 16
  %add.i = add i32 %1, %sub.i
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry
  %unusable_free.0.i = phi i32 [ %add.i, %if.then.i ], [ %sub.i, %entry ]
  %and5.i = and i32 %alloc_flags, 128
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.then7.i, label %__zone_watermark_unusable_free.exit

if.then7.i:                                       ; preds = %if.end.i
  %arrayidx.i.i = getelementptr %struct.zone, ptr %z, i32 0, i32 37, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i, i32 noundef 4) #27
  %2 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %arrayidx.i.i, align 4
  %4 = tail call i32 @llvm.smax.i32(i32 %3, i32 0) #27
  %add8.i = add i32 %4, %unusable_free.0.i
  br label %__zone_watermark_unusable_free.exit

__zone_watermark_unusable_free.exit:              ; preds = %if.then7.i, %if.end.i
  %unusable_free.1.i = phi i32 [ %unusable_free.0.i, %if.end.i ], [ %add8.i, %if.then7.i ]
  %sub = sub i32 %free_pages, %unusable_free.1.i
  %and1 = and i32 %alloc_flags, 32
  %tobool2.not = icmp eq i32 %and1, 0
  %div.neg = sdiv i32 %mark, -2
  %sub3 = select i1 %tobool2.not, i32 0, i32 %div.neg
  %min.0 = add i32 %sub3, %mark
  br i1 %tobool.not, label %if.end16, label %if.then7, !prof !582

if.then7:                                         ; preds = %__zone_watermark_unusable_free.exit
  %and8 = and i32 %alloc_flags, 8
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.else, label %if.then10

if.then10:                                        ; preds = %if.then7
  %div11.neg = sdiv i32 %min.0, -2
  %sub12 = add i32 %div11.neg, %min.0
  br label %if.end16

if.else:                                          ; preds = %if.then7
  %div13.neg = sdiv i32 %min.0, -4
  %sub14 = add i32 %div13.neg, %min.0
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then10, %__zone_watermark_unusable_free.exit
  %min.1 = phi i32 [ %sub12, %if.then10 ], [ %sub14, %if.else ], [ %min.0, %__zone_watermark_unusable_free.exit ]
  %arrayidx = getelementptr %struct.zone, ptr %z, i32 0, i32 3, i32 %highest_zoneidx
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, %min.1
  %cmp.not = icmp sgt i32 %sub, %add
  br i1 %cmp.not, label %if.end18, label %cleanup47

if.end18:                                         ; preds = %if.end16
  %tobool19.not = icmp eq i32 %order, 0
  br i1 %tobool19.not, label %cleanup47, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end18
  %cmp2280 = icmp slt i32 %order, 12
  br i1 %cmp2280, label %for.body, label %cleanup47

for.body:                                         ; preds = %for.inc44, %for.cond.preheader
  %o.081 = phi i32 [ %inc45, %for.inc44 ], [ %order, %for.cond.preheader ]
  %arrayidx23 = getelementptr %struct.zone, ptr %z, i32 0, i32 20, i32 %o.081
  %nr_free = getelementptr %struct.zone, ptr %z, i32 0, i32 20, i32 %o.081, i32 1
  %7 = ptrtoint ptr %nr_free to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %nr_free, align 4
  %tobool24.not = icmp eq i32 %8, 0
  br i1 %tobool24.not, label %for.inc44, label %for.body29.preheader

for.body29.preheader:                             ; preds = %for.body
  %9 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %arrayidx23, align 4
  %cmp.i.i = icmp eq ptr %10, %arrayidx23
  br i1 %cmp.i.i, label %for.cond27, label %cleanup47

for.cond27:                                       ; preds = %for.body29.preheader
  %arrayidx.i.1 = getelementptr [6 x %struct.list_head], ptr %arrayidx23, i32 0, i32 1
  %11 = ptrtoint ptr %arrayidx.i.1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %arrayidx.i.1, align 4
  %cmp.i.i.1 = icmp eq ptr %12, %arrayidx.i.1
  br i1 %cmp.i.i.1, label %for.cond27.1, label %cleanup47

for.cond27.1:                                     ; preds = %for.cond27
  %arrayidx.i.2 = getelementptr [6 x %struct.list_head], ptr %arrayidx23, i32 0, i32 2
  %13 = ptrtoint ptr %arrayidx.i.2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %arrayidx.i.2, align 4
  %cmp.i.i.2 = icmp eq ptr %14, %arrayidx.i.2
  br i1 %cmp.i.i.2, label %for.cond27.2, label %cleanup47

for.cond27.2:                                     ; preds = %for.cond27.1
  br i1 %tobool6.not.i, label %if.end37, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.cond27.2
  %arrayidx.i73 = getelementptr [6 x %struct.list_head], ptr %arrayidx23, i32 0, i32 4
  %15 = ptrtoint ptr %arrayidx.i73 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %arrayidx.i73, align 4
  %cmp.i.i74 = icmp eq ptr %16, %arrayidx.i73
  br i1 %cmp.i.i74, label %if.end37, label %cleanup47

if.end37:                                         ; preds = %land.lhs.true, %for.cond27.2
  br i1 %tobool.not, label %for.inc44, label %land.lhs.true39

land.lhs.true39:                                  ; preds = %if.end37
  %arrayidx.i75 = getelementptr [6 x %struct.list_head], ptr %arrayidx23, i32 0, i32 3
  %17 = ptrtoint ptr %arrayidx.i75 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %arrayidx.i75, align 4
  %cmp.i.i76 = icmp eq ptr %18, %arrayidx.i75
  br i1 %cmp.i.i76, label %for.inc44, label %cleanup47

for.inc44:                                        ; preds = %land.lhs.true39, %if.end37, %for.body
  %inc45 = add nsw i32 %o.081, 1
  %exitcond.not = icmp eq i32 %inc45, 12
  br i1 %exitcond.not, label %cleanup47, label %for.body

cleanup47:                                        ; preds = %for.inc44, %land.lhs.true39, %land.lhs.true, %for.cond27.1, %for.cond27, %for.body29.preheader, %for.cond.preheader, %if.end18, %if.end16
  %retval.2 = phi i1 [ false, %if.end16 ], [ true, %if.end18 ], [ false, %for.cond.preheader ], [ false, %for.inc44 ], [ true, %land.lhs.true ], [ true, %land.lhs.true39 ], [ true, %for.body29.preheader ], [ true, %for.cond27 ], [ true, %for.cond27.1 ]
  ret i1 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @zone_watermark_ok_safe(ptr noundef %z, i32 noundef %order, i32 noundef %mark, i32 noundef %highest_zoneidx) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx.i = getelementptr %struct.zone, ptr %z, i32 0, i32 37, i32 0
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i, i32 noundef 4) #27
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %arrayidx.i, align 4
  %2 = tail call i32 @llvm.smax.i32(i32 %1, i32 0) #27
  %percpu_drift_mark = getelementptr inbounds %struct.zone, ptr %z, i32 0, i32 25
  %3 = ptrtoint ptr %percpu_drift_mark to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %percpu_drift_mark, align 128
  %tobool.not = icmp ne i32 %4, 0
  %cmp = icmp ult i32 %2, %4
  %or.cond = select i1 %tobool.not, i1 %cmp, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call.i.i.i9 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i, i32 noundef 4) #27
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %7 = load i32, ptr @nr_cpu_ids, align 4
  %call11.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #30
  %cmp2.i = icmp ult i32 %call11.i, %7
  br i1 %cmp2.i, label %do.body.lr.ph.i, label %zone_page_state_snapshot.exit

do.body.lr.ph.i:                                  ; preds = %if.then
  %per_cpu_zonestats.i = getelementptr inbounds %struct.zone, ptr %z, i32 0, i32 6
  %8 = ptrtoint ptr %per_cpu_zonestats.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %per_cpu_zonestats.i, align 4
  %10 = ptrtoint ptr %9 to i32
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %do.body.lr.ph.i
  %call14.i = phi i32 [ %call11.i, %do.body.lr.ph.i ], [ %call1.i, %do.body.i ]
  %x.03.i = phi i32 [ %6, %do.body.lr.ph.i ], [ %add5.i, %do.body.i ]
  %arrayidx3.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call14.i
  %11 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx3.i, align 4
  %add.i = add i32 %12, %10
  %13 = inttoptr i32 %add.i to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %13, align 1
  %conv.i = sext i8 %15 to i32
  %add5.i = add i32 %x.03.i, %conv.i
  %call1.i = tail call i32 @cpumask_next(i32 noundef %call14.i, ptr noundef nonnull @__cpu_online_mask) #30
  %cmp.i = icmp ult i32 %call1.i, %7
  br i1 %cmp.i, label %do.body.i, label %zone_page_state_snapshot.exit

zone_page_state_snapshot.exit:                    ; preds = %do.body.i, %if.then
  %x.0.lcssa.i = phi i32 [ %6, %if.then ], [ %add5.i, %do.body.i ]
  %16 = tail call i32 @llvm.smax.i32(i32 %x.0.lcssa.i, i32 0) #27
  br label %if.end

if.end:                                           ; preds = %zone_page_state_snapshot.exit, %entry
  %free_pages.0 = phi i32 [ %16, %zone_page_state_snapshot.exit ], [ %2, %entry ]
  %notmask.i.i = shl nsw i32 -1, %order
  %sub.i.i.neg13 = add nsw i32 %notmask.i.i, 1
  %nr_reserved_highatomic.i.i = getelementptr inbounds %struct.zone, ptr %z, i32 0, i32 2
  %17 = ptrtoint ptr %nr_reserved_highatomic.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nr_reserved_highatomic.i.i, align 16
  %arrayidx.i.i.i = getelementptr %struct.zone, ptr %z, i32 0, i32 37, i32 10
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i.i, i32 noundef 4) #27
  %19 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %21 = tail call i32 @llvm.smax.i32(i32 %20, i32 0) #27
  %add.i.i.neg = add i32 %free_pages.0, %sub.i.i.neg13
  %22 = add i32 %18, %21
  %sub.i = sub i32 %add.i.i.neg, %22
  %arrayidx.i10 = getelementptr %struct.zone, ptr %z, i32 0, i32 3, i32 %highest_zoneidx
  %23 = ptrtoint ptr %arrayidx.i10 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx.i10, align 4
  %add.i11 = add i32 %24, %mark
  %cmp.not.i = icmp sgt i32 %sub.i, %add.i11
  br i1 %cmp.not.i, label %if.end18.i, label %__zone_watermark_ok.exit

if.end18.i:                                       ; preds = %if.end
  %tobool19.not.i = icmp eq i32 %order, 0
  br i1 %tobool19.not.i, label %__zone_watermark_ok.exit, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end18.i
  %cmp2280.i = icmp slt i32 %order, 12
  br i1 %cmp2280.i, label %for.body.i, label %__zone_watermark_ok.exit

for.body.i:                                       ; preds = %for.inc44.i, %for.cond.preheader.i
  %o.081.i = phi i32 [ %inc45.i, %for.inc44.i ], [ %order, %for.cond.preheader.i ]
  %arrayidx23.i = getelementptr %struct.zone, ptr %z, i32 0, i32 20, i32 %o.081.i
  %nr_free.i = getelementptr %struct.zone, ptr %z, i32 0, i32 20, i32 %o.081.i, i32 1
  %25 = ptrtoint ptr %nr_free.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %nr_free.i, align 4
  %tobool24.not.i = icmp eq i32 %26, 0
  br i1 %tobool24.not.i, label %for.inc44.i, label %for.body29.preheader.i

for.body29.preheader.i:                           ; preds = %for.body.i
  %27 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %arrayidx23.i, align 4
  %cmp.i.i.i = icmp eq ptr %28, %arrayidx23.i
  br i1 %cmp.i.i.i, label %for.cond27.i, label %__zone_watermark_ok.exit

for.cond27.i:                                     ; preds = %for.body29.preheader.i
  %arrayidx.i.1.i = getelementptr [6 x %struct.list_head], ptr %arrayidx23.i, i32 0, i32 1
  %29 = ptrtoint ptr %arrayidx.i.1.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %arrayidx.i.1.i, align 4
  %cmp.i.i.1.i = icmp eq ptr %30, %arrayidx.i.1.i
  br i1 %cmp.i.i.1.i, label %for.cond27.1.i, label %__zone_watermark_ok.exit

for.cond27.1.i:                                   ; preds = %for.cond27.i
  %arrayidx.i.2.i = getelementptr [6 x %struct.list_head], ptr %arrayidx23.i, i32 0, i32 2
  %31 = ptrtoint ptr %arrayidx.i.2.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %arrayidx.i.2.i, align 4
  %cmp.i.i.2.i = icmp eq ptr %32, %arrayidx.i.2.i
  br i1 %cmp.i.i.2.i, label %for.inc44.i, label %__zone_watermark_ok.exit

for.inc44.i:                                      ; preds = %for.cond27.1.i, %for.body.i
  %inc45.i = add nsw i32 %o.081.i, 1
  %exitcond.not.i = icmp eq i32 %inc45.i, 12
  br i1 %exitcond.not.i, label %__zone_watermark_ok.exit, label %for.body.i

__zone_watermark_ok.exit:                         ; preds = %for.inc44.i, %for.cond27.1.i, %for.cond27.i, %for.body29.preheader.i, %for.cond.preheader.i, %if.end18.i, %if.end
  %retval.2.i = phi i1 [ false, %if.end ], [ true, %if.end18.i ], [ false, %for.cond.preheader.i ], [ true, %for.cond27.1.i ], [ true, %for.cond27.i ], [ true, %for.body29.preheader.i ], [ false, %for.inc44.i ]
  ret i1 %retval.2.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @warn_alloc(i32 noundef %gfp_mask, ptr noundef %nodemask, ptr noundef %fmt, ...) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %gfp_mask.addr = alloca i32, align 4
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  %0 = ptrtoint ptr %gfp_mask.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %gfp_mask, ptr %gfp_mask.addr, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #27
  %1 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #27
  %2 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !637
  %and = and i32 %gfp_mask, 8192
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @___ratelimit(ptr noundef nonnull @warn_alloc.nopage_rs, ptr noundef nonnull @__func__.warn_alloc) #27
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %cleanup, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = ptrtoint ptr %gfp_mask.addr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %gfp_mask.addr, align 4
  %and3 = and i32 %4, 1
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %call.i = tail call ptr @first_online_pgdat() #27
  %tobool.not6.i = icmp eq ptr %call.i, null
  br i1 %tobool.not6.i, label %cleanup, label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %land.lhs.true
  %pgdat.07.i = phi ptr [ %call2.i, %for.inc.i ], [ %call.i, %land.lhs.true ]
  %managed_pages.i.i.i = getelementptr inbounds %struct.zone, ptr %pgdat.07.i, i32 0, i32 11
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i, i32 noundef 4) #27
  %5 = ptrtoint ptr %managed_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %managed_pages.i.i.i, align 4
  %tobool.i.not.i = icmp eq i32 %6, 0
  br i1 %tobool.i.not.i, label %for.inc.i, label %if.end

for.inc.i:                                        ; preds = %for.body.i
  %call2.i = tail call ptr @next_online_pgdat(ptr noundef nonnull %pgdat.07.i) #27
  %tobool.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool.not.i, label %cleanup, label %for.body.i

if.end:                                           ; preds = %for.body.i, %lor.lhs.false2
  call void @llvm.va_start(ptr nonnull %args)
  %7 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %fmt, ptr %vaf, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %args, ptr %1, align 4
  %9 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 101
  %13 = ptrtoint ptr %gfp_mask.addr to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %gfp_mask.addr, align 4
  %tobool.not.i19 = icmp ne ptr %nodemask, null
  %cond.i = zext i1 %tobool.not.i19 to i32
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.14, ptr noundef %comm, ptr noundef nonnull %vaf, i32 noundef %14, ptr noundef nonnull %gfp_mask.addr, i32 noundef %cond.i, ptr noundef %nodemask) #29
  call void @llvm.va_end(ptr nonnull %args)
  call void @cpuset_print_current_mems_allowed() #27
  %call15 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.16) #29
  call void @dump_stack() #29
  %15 = ptrtoint ptr %gfp_mask.addr to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %gfp_mask.addr, align 4
  %and.i20 = and i32 %16, 524288
  %tobool.not.i21 = icmp eq i32 %and.i20, 0
  br i1 %tobool.not.i21, label %if.then.i, label %warn_alloc_show_mem.exit

if.then.i:                                        ; preds = %if.end
  %17 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task.i, align 8
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 111
  %21 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %signal.i.i, align 16
  %oom_mm.i.i = getelementptr inbounds %struct.signal_struct, ptr %22, i32 0, i32 59
  %23 = ptrtoint ptr %oom_mm.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %oom_mm.i.i, align 4
  %tobool.i.not.i22 = icmp eq ptr %24, null
  br i1 %tobool.i.not.i22, label %lor.lhs.false.i, label %if.then6.i

lor.lhs.false.i:                                  ; preds = %if.then.i
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 3
  %25 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %flags.i, align 4
  %and4.i = and i32 %26, 2052
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %warn_alloc_show_mem.exit, label %if.then6.i

if.then6.i:                                       ; preds = %lor.lhs.false.i, %if.then.i
  br label %warn_alloc_show_mem.exit

warn_alloc_show_mem.exit:                         ; preds = %if.then6.i, %lor.lhs.false.i, %if.end
  %filter.0.i = phi i32 [ 1, %if.end ], [ 0, %if.then6.i ], [ 1, %lor.lhs.false.i ]
  %27 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and10.i = and i32 %30, 15728640
  %31 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i27.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i27.i to ptr
  %preempt_count.i28.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i28.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i28.i, align 4
  %and12.i = and i32 %34, 983040
  %or.i = or i32 %and12.i, %and10.i
  %35 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i29.i = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i29.i to ptr
  %preempt_count.i30.i = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %preempt_count.i30.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %preempt_count.i30.i, align 4
  %and15.i = and i32 %38, 256
  %or16.i = or i32 %or.i, %and15.i
  %tobool17.not.i = icmp ne i32 %or16.i, 0
  %and19.i = and i32 %16, 1024
  %tobool20.not.i = icmp eq i32 %and19.i, 0
  %or.cond.i = or i1 %tobool20.not.i, %tobool17.not.i
  %filter.1.i = select i1 %or.cond.i, i32 0, i32 %filter.0.i
  call void @show_mem(i32 noundef %filter.1.i, ptr noundef %nodemask) #27
  br label %cleanup

cleanup:                                          ; preds = %warn_alloc_show_mem.exit, %for.inc.i, %land.lhs.true, %lor.lhs.false, %entry
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @has_managed_dma() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @first_online_pgdat() #27
  %tobool.not6 = icmp eq ptr %call, null
  br i1 %tobool.not6, label %cleanup3, label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %pgdat.07 = phi ptr [ %call2, %for.inc ], [ %call, %entry ]
  %managed_pages.i.i = getelementptr inbounds %struct.zone, ptr %pgdat.07, i32 0, i32 11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #27
  %0 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %managed_pages.i.i, align 4
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %for.inc, label %cleanup3.loopexit

for.inc:                                          ; preds = %for.body
  %call2 = tail call ptr @next_online_pgdat(ptr noundef nonnull %pgdat.07) #27
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %cleanup3.loopexit, label %for.body

cleanup3.loopexit:                                ; preds = %for.inc, %for.body
  %phi.bo = xor i1 %tobool.i.not, true
  br label %cleanup3

cleanup3:                                         ; preds = %cleanup3.loopexit, %entry
  %tobool.not.lcssa = phi i1 [ false, %entry ], [ %phi.bo, %cleanup3.loopexit ]
  ret i1 %tobool.not.lcssa
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #11

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpuset_print_current_mems_allowed() local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__fs_reclaim_acquire(i32 noundef %ip) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @lock_acquire(ptr noundef nonnull @__fs_reclaim_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %ip) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__fs_reclaim_release(i32 noundef %ip) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @lock_release(ptr noundef nonnull @__fs_reclaim_map, i32 noundef %ip) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @fs_reclaim_acquire(i32 noundef %gfp_mask) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %flags1.i, align 4
  %and.i = and i32 %5, 269221888
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %current_gfp_context.exit, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %entry
  %and4.i = and i32 %5, 524288
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %if.else.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.then.i
  %and7.i = and i32 %gfp_mask, -193
  br label %if.end12.i

if.else.i:                                        ; preds = %if.then.i
  %and8.i = and i32 %5, 262144
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  %and11.i = and i32 %gfp_mask, -129
  %spec.select.i = select i1 %tobool9.not.i, i32 %gfp_mask, i32 %and11.i
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else.i, %if.then6.i
  %flags.addr.0.i = phi i32 [ %and7.i, %if.then6.i ], [ %spec.select.i, %if.else.i ]
  %and13.i = and i32 %5, 268435456
  %tobool14.not.i = icmp eq i32 %and13.i, 0
  %and16.i = and i32 %flags.addr.0.i, -9
  %spec.select25.i = select i1 %tobool14.not.i, i32 %flags.addr.0.i, i32 %and16.i
  br label %current_gfp_context.exit

current_gfp_context.exit:                         ; preds = %if.end12.i, %entry
  %flags.addr.1.i = phi i32 [ %gfp_mask, %entry ], [ %spec.select25.i, %if.end12.i ]
  %and.i8 = and i32 %flags.addr.1.i, 1024
  %tobool.not.i9 = icmp eq i32 %and.i8, 0
  br i1 %tobool.not.i9, label %if.end5, label %if.end.i

if.end.i:                                         ; preds = %current_gfp_context.exit
  %6 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i10 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i10 to ptr
  %task.i11 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i11 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i11, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags.i, align 4
  %and1.i = and i32 %11, 2048
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %and5.i = and i32 %flags.addr.1.i, 33554432
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  %or.cond = select i1 %tobool2.not.i, i1 %tobool6.not.i, i1 false
  br i1 %or.cond, label %if.then, label %if.end5

if.then:                                          ; preds = %if.end.i
  %and = and i32 %flags.addr.1.i, 128
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %__here, label %if.then2

if.then2:                                         ; preds = %if.then
  %12 = tail call ptr @llvm.returnaddress(i32 0)
  %13 = ptrtoint ptr %12 to i32
  tail call void @lock_acquire(ptr noundef nonnull @__fs_reclaim_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %13) #27
  br label %__here

__here:                                           ; preds = %if.then2, %if.then
  tail call void @lock_acquire(ptr noundef nonnull @__mmu_notifier_invalidate_range_start_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@fs_reclaim_acquire, %__here) to i32)) #27
  br label %__here3

__here3:                                          ; preds = %__here
  tail call void @lock_release(ptr noundef nonnull @__mmu_notifier_invalidate_range_start_map, i32 noundef ptrtoint (ptr blockaddress(@fs_reclaim_acquire, %__here3) to i32)) #27
  br label %if.end5

if.end5:                                          ; preds = %__here3, %if.end.i, %current_gfp_context.exit
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #12

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @fs_reclaim_release(i32 noundef %gfp_mask) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %flags1.i, align 4
  %and.i = and i32 %5, 269221888
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %current_gfp_context.exit, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %entry
  %and4.i = and i32 %5, 524288
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %if.else.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.then.i
  %and7.i = and i32 %gfp_mask, -193
  br label %if.end12.i

if.else.i:                                        ; preds = %if.then.i
  %and8.i = and i32 %5, 262144
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  %and11.i = and i32 %gfp_mask, -129
  %spec.select.i = select i1 %tobool9.not.i, i32 %gfp_mask, i32 %and11.i
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else.i, %if.then6.i
  %flags.addr.0.i = phi i32 [ %and7.i, %if.then6.i ], [ %spec.select.i, %if.else.i ]
  %and13.i = and i32 %5, 268435456
  %tobool14.not.i = icmp eq i32 %and13.i, 0
  %and16.i = and i32 %flags.addr.0.i, -9
  %spec.select25.i = select i1 %tobool14.not.i, i32 %flags.addr.0.i, i32 %and16.i
  br label %current_gfp_context.exit

current_gfp_context.exit:                         ; preds = %if.end12.i, %entry
  %flags.addr.1.i = phi i32 [ %gfp_mask, %entry ], [ %spec.select25.i, %if.end12.i ]
  %and.i6 = and i32 %flags.addr.1.i, 1024
  %tobool.not.i7 = icmp eq i32 %and.i6, 0
  br i1 %tobool.not.i7, label %if.end3, label %if.end.i

if.end.i:                                         ; preds = %current_gfp_context.exit
  %6 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i8 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i8 to ptr
  %task.i9 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i9 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i9, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags.i, align 4
  %and1.i = and i32 %11, 2048
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %12 = and i32 %flags.addr.1.i, 33554560
  %.not = icmp eq i32 %12, 128
  %or.cond = select i1 %tobool2.not.i, i1 %.not, i1 false
  br i1 %or.cond, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end.i
  %13 = tail call ptr @llvm.returnaddress(i32 0)
  %14 = ptrtoint ptr %13 to i32
  tail call void @lock_release(ptr noundef nonnull @__fs_reclaim_map, i32 noundef %14) #27
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end.i, %current_gfp_context.exit
  ret void
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @gfp_pfmemalloc_allowed(i32 noundef %gfp_mask) local_unnamed_addr #13 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %and.i = and i32 %gfp_mask, 524288
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %__gfp_pfmemalloc_flags.exit, !prof !582

if.end.i:                                         ; preds = %entry
  %and3.i = and i32 %gfp_mask, 131072
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.not.i, label %if.end6.i, label %__gfp_pfmemalloc_flags.exit

if.end6.i:                                        ; preds = %if.end.i
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and8.i = and i32 %3, 256
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %if.end14.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end6.i
  %4 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags.i, align 4
  %and11.i = and i32 %9, 2048
  %tobool12.not.i = icmp eq i32 %and11.i, 0
  br i1 %tobool12.not.i, label %if.end14.i, label %__gfp_pfmemalloc_flags.exit

if.end14.i:                                       ; preds = %land.lhs.true.i, %if.end6.i
  %10 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i38.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i38.i to ptr
  %preempt_count.i39.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i39.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i39.i, align 4
  %and16.i = and i32 %13, 15728640
  %14 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i40.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i40.i to ptr
  %preempt_count.i41.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i41.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i41.i, align 4
  %and18.i = and i32 %17, 983040
  %or.i = or i32 %and18.i, %and16.i
  %18 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i42.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i42.i to ptr
  %preempt_count.i43.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i43.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i43.i, align 4
  %and20.i = and i32 %21, 65280
  %or21.i = or i32 %or.i, %and20.i
  %tobool22.not.i = icmp eq i32 %or21.i, 0
  br i1 %tobool22.not.i, label %if.then23.i, label %if.end36.i

if.then23.i:                                      ; preds = %if.end14.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i44.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i44.i to ptr
  %task25.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %task25.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task25.i, align 8
  %flags26.i = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %flags26.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags26.i, align 4
  %and27.i = and i32 %27, 2048
  %tobool28.not.i = icmp eq i32 %and27.i, 0
  br i1 %tobool28.not.i, label %if.else.i, label %__gfp_pfmemalloc_flags.exit

if.else.i:                                        ; preds = %if.then23.i
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 111
  %28 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %signal.i.i.i, align 16
  %oom_mm.i.i.i = getelementptr inbounds %struct.signal_struct, ptr %29, i32 0, i32 59
  %30 = ptrtoint ptr %oom_mm.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %oom_mm.i.i.i, align 4
  %tobool.i.i.not.i = icmp eq ptr %31, null
  br i1 %tobool.i.i.not.i, label %if.end36.i, label %__gfp_pfmemalloc_flags.exit

if.end36.i:                                       ; preds = %if.else.i, %if.end14.i
  br label %__gfp_pfmemalloc_flags.exit

__gfp_pfmemalloc_flags.exit:                      ; preds = %if.end36.i, %if.else.i, %if.then23.i, %land.lhs.true.i, %if.end.i, %entry
  %tobool = phi i1 [ false, %entry ], [ true, %if.end.i ], [ true, %land.lhs.true.i ], [ true, %if.then23.i ], [ true, %if.else.i ], [ false, %if.end36.i ]
  ret i1 %tobool
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__alloc_pages_bulk(i32 noundef %gfp, i32 noundef %preferred_nid, ptr noundef %nodemask, i32 noundef %nr_pages, ptr noundef %page_list, ptr noundef %page_array) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %ac = alloca %struct.alloc_context, align 4
  %alloc_gfp = alloca i32, align 4
  %alloc_flags = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ac) #27
  %0 = call ptr @memset(ptr %ac, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %alloc_gfp) #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %alloc_flags) #27
  %1 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %alloc_flags, align 4
  %tobool.not = icmp eq ptr %page_array, null
  %tobool.not.not = xor i1 %tobool.not, true
  %cmp394 = icmp slt i32 %nr_pages, 1
  %2 = or i1 %tobool.not, %cmp394
  br i1 %2, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %while.body, %entry
  %nr_populated.0396 = phi i32 [ %inc, %while.body ], [ 0, %entry ]
  %arrayidx = getelementptr ptr, ptr %page_array, i32 %nr_populated.0396
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  %tobool1.not = icmp eq ptr %4, null
  br i1 %tobool1.not, label %while.end, label %while.body

while.body:                                       ; preds = %land.rhs
  %inc = add nuw nsw i32 %nr_populated.0396, 1
  %cmp = icmp slt i32 %inc, %nr_pages
  %or.cond = select i1 %tobool.not.not, i1 %cmp, i1 false
  br i1 %or.cond, label %land.rhs, label %while.end

while.end:                                        ; preds = %while.body, %land.rhs, %entry
  %nr_populated.0.lcssa = phi i32 [ 0, %entry ], [ %inc, %while.body ], [ %nr_populated.0396, %land.rhs ]
  %cmp7 = icmp eq i32 %nr_populated.0.lcssa, %nr_pages
  %spec.select = select i1 %tobool.not.not, i1 %cmp7, i1 false
  %or.cond336 = select i1 %cmp394, i1 true, i1 %spec.select
  br i1 %or.cond336, label %out, label %if.end16, !prof !604

if.end16:                                         ; preds = %while.end
  callbr void asm sideeffect "1:\0A\09b ${1:l}\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memcg_kmem_enabled_key, i32 1), ptr blockaddress(@__alloc_pages_bulk, %l_yes.i.i)) #27
          to label %memcg_kmem_enabled.exit [label %l_yes.i.i], !srcloc !601

l_yes.i.i:                                        ; preds = %if.end16
  br label %memcg_kmem_enabled.exit

memcg_kmem_enabled.exit:                          ; preds = %l_yes.i.i, %if.end16
  %retval.0.i.i = phi i1 [ true, %l_yes.i.i ], [ false, %if.end16 ]
  %and = and i32 %gfp, 4194304
  %tobool18.not = icmp eq i32 %and, 0
  %or.cond334 = or i1 %tobool18.not, %retval.0.i.i
  %or.cond334.not = xor i1 %or.cond334, true
  %sub21 = sub i32 %nr_pages, %nr_populated.0.lcssa
  %cmp22 = icmp eq i32 %sub21, 1
  %or.cond335 = select i1 %or.cond334.not, i1 true, i1 %cmp22
  br i1 %or.cond335, label %failed, label %if.end24

if.end24:                                         ; preds = %memcg_kmem_enabled.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @page_owner_inited, ptr blockaddress(@__alloc_pages_bulk, %failed)) #27
          to label %if.end34 [label %failed], !srcloc !583

if.end34:                                         ; preds = %if.end24
  %5 = load i32, ptr @gfp_allowed_mask, align 4
  %and35 = and i32 %5, %gfp
  %6 = ptrtoint ptr %alloc_gfp to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %and35, ptr %alloc_gfp, align 4
  %call36 = call fastcc zeroext i1 @prepare_alloc_pages(i32 noundef %and35, i32 noundef 0, ptr noundef %nodemask, ptr noundef nonnull %ac, ptr noundef nonnull %alloc_gfp, ptr noundef nonnull %alloc_flags)
  br i1 %call36, label %if.end38, label %out

if.end38:                                         ; preds = %if.end34
  %7 = ptrtoint ptr %alloc_gfp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %alloc_gfp, align 4
  %9 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ac, align 4
  %highest_zoneidx = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 4
  %11 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %highest_zoneidx, align 4
  %nodemask39 = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 1
  %13 = ptrtoint ptr %nodemask39 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %nodemask39, align 4
  %tobool.not.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end.i.i, !prof !582

land.rhs.i.i:                                     ; preds = %if.end38
  %zone_idx.i.i.i = getelementptr inbounds %struct.zoneref, ptr %10, i32 0, i32 1
  %15 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %zone_idx.i.i.i, align 4
  %cmp.not.i.i = icmp ugt i32 %16, %12
  br i1 %cmp.not.i.i, label %if.end.i.i, label %first_zones_zonelist.exit, !prof !584

if.end.i.i:                                       ; preds = %land.rhs.i.i, %if.end38
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %10, i32 noundef %12, ptr noundef %14) #27
  br label %first_zones_zonelist.exit

first_zones_zonelist.exit:                        ; preds = %if.end.i.i, %land.rhs.i.i
  %retval.0.i.i338 = phi ptr [ %call3.i.i, %if.end.i.i ], [ %10, %land.rhs.i.i ]
  %17 = ptrtoint ptr %retval.0.i.i338 to i32
  call void @__asan_load4_noabort(i32 %17)
  %zone.0400 = load ptr, ptr %retval.0.i.i338, align 4
  %tobool42.not401 = icmp eq ptr %zone.0400, null
  br i1 %tobool42.not401, label %failed, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %first_zones_zonelist.exit
  %preferred_zoneref = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 2
  %and.i = and i32 %8, 512
  %tobool8.not.i.not = icmp eq i32 %and.i, 0
  br label %for.body

for.body:                                         ; preds = %next_zones_zonelist.exit, %for.body.lr.ph
  %zone.0403 = phi ptr [ %zone.0400, %for.body.lr.ph ], [ %zone.0, %next_zones_zonelist.exit ]
  %z.0402 = phi ptr [ %retval.0.i.i338, %for.body.lr.ph ], [ %retval.0.i337, %next_zones_zonelist.exit ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_enabled_key, ptr blockaddress(@__alloc_pages_bulk, %land.lhs.true44)) #27
          to label %if.end50 [label %land.lhs.true44], !srcloc !583

land.lhs.true44:                                  ; preds = %for.body
  %18 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %alloc_flags, align 4
  %and45 = and i32 %19, 64
  %tobool46.not = icmp eq i32 %and45, 0
  br i1 %tobool46.not, label %if.end50, label %land.lhs.true47

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call1.i = tail call zeroext i1 @__cpuset_node_allowed(i32 noundef 0, i32 noundef %8) #27
  br i1 %call1.i, label %if.end50, label %for.inc

if.end50:                                         ; preds = %land.lhs.true47, %land.lhs.true44, %for.body
  %20 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %alloc_flags, align 4
  %and51 = and i32 %21, 3
  %arrayidx52 = getelementptr [3 x i32], ptr %zone.0403, i32 0, i32 %and51
  %22 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx52, align 4
  %watermark_boost = getelementptr inbounds %struct.zone, ptr %zone.0403, i32 0, i32 1
  %24 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %watermark_boost, align 4
  %add = add i32 %23, %nr_pages
  %add53 = add i32 %add, %25
  %26 = ptrtoint ptr %preferred_zoneref to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %preferred_zoneref, align 4
  %zone_idx.i = getelementptr inbounds %struct.zoneref, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %zone_idx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %zone_idx.i, align 4
  %arrayidx.i.i = getelementptr %struct.zone, ptr %zone.0403, i32 0, i32 37, i32 0
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i, i32 noundef 4) #27
  %30 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %arrayidx.i.i, align 4
  %32 = tail call i32 @llvm.smax.i32(i32 %31, i32 0) #27
  %and.i.i = and i32 %21, 24
  %tobool.not.i.i341 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i341, label %if.then.i.i, label %if.end.i.i342, !prof !582

if.then.i.i:                                      ; preds = %if.end50
  %nr_reserved_highatomic.i.i = getelementptr inbounds %struct.zone, ptr %zone.0403, i32 0, i32 2
  %33 = ptrtoint ptr %nr_reserved_highatomic.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %nr_reserved_highatomic.i.i, align 16
  br label %if.end.i.i342

if.end.i.i342:                                    ; preds = %if.then.i.i, %if.end50
  %unusable_free.0.i.i = phi i32 [ %34, %if.then.i.i ], [ 0, %if.end50 ]
  %and5.i.i = and i32 %21, 128
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.then7.i.i, label %__zone_watermark_unusable_free.exit.i

if.then7.i.i:                                     ; preds = %if.end.i.i342
  %arrayidx.i.i.i = getelementptr %struct.zone, ptr %zone.0403, i32 0, i32 37, i32 10
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i.i, i32 noundef 4) #27
  %35 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %37 = tail call i32 @llvm.smax.i32(i32 %36, i32 0) #27
  %add8.i.i = add i32 %37, %unusable_free.0.i.i
  br label %__zone_watermark_unusable_free.exit.i

__zone_watermark_unusable_free.exit.i:            ; preds = %if.then7.i.i, %if.end.i.i342
  %unusable_free.1.i.i = phi i32 [ %unusable_free.0.i.i, %if.end.i.i342 ], [ %add8.i.i, %if.then7.i.i ]
  %sub.i = sub i32 %32, %unusable_free.1.i.i
  %arrayidx.i = getelementptr %struct.zone, ptr %zone.0403, i32 0, i32 3, i32 %29
  %38 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %39, %add53
  %cmp.i = icmp ugt i32 %sub.i, %add.i
  br i1 %cmp.i, label %do.body74, label %if.end3.i

if.end3.i:                                        ; preds = %__zone_watermark_unusable_free.exit.i
  br i1 %tobool.not.i.i341, label %if.then.i.i363, label %if.end.i.i367, !prof !582

if.then.i.i363:                                   ; preds = %if.end3.i
  %nr_reserved_highatomic.i.i362 = getelementptr inbounds %struct.zone, ptr %zone.0403, i32 0, i32 2
  %40 = ptrtoint ptr %nr_reserved_highatomic.i.i362 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %nr_reserved_highatomic.i.i362, align 16
  br label %if.end.i.i367

if.end.i.i367:                                    ; preds = %if.then.i.i363, %if.end3.i
  %unusable_free.0.i.i364 = phi i32 [ %41, %if.then.i.i363 ], [ 0, %if.end3.i ]
  br i1 %tobool6.not.i.i, label %if.then7.i.i371, label %__zone_watermark_unusable_free.exit.i374

if.then7.i.i371:                                  ; preds = %if.end.i.i367
  %arrayidx.i.i.i368 = getelementptr %struct.zone, ptr %zone.0403, i32 0, i32 37, i32 10
  %call.i.i.i.i.i369 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i.i368, i32 noundef 4) #27
  %42 = ptrtoint ptr %arrayidx.i.i.i368 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %arrayidx.i.i.i368, align 4
  %44 = tail call i32 @llvm.smax.i32(i32 %43, i32 0) #27
  %add8.i.i370 = add i32 %44, %unusable_free.0.i.i364
  br label %__zone_watermark_unusable_free.exit.i374

__zone_watermark_unusable_free.exit.i374:         ; preds = %if.then7.i.i371, %if.end.i.i367
  %unusable_free.1.i.i372 = phi i32 [ %unusable_free.0.i.i364, %if.end.i.i367 ], [ %add8.i.i370, %if.then7.i.i371 ]
  %sub.i373 = sub i32 %32, %unusable_free.1.i.i372
  %and1.i = and i32 %21, 32
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %div.neg.i = sdiv i32 %add53, -2
  %sub3.i = select i1 %tobool2.not.i, i32 0, i32 %div.neg.i
  %min.0.i = add i32 %sub3.i, %add53
  br i1 %tobool.not.i.i341, label %if.end16.i, label %if.then7.i, !prof !582

if.then7.i:                                       ; preds = %__zone_watermark_unusable_free.exit.i374
  %and8.i = and i32 %21, 8
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %if.else.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.then7.i
  %div11.neg.i = sdiv i32 %min.0.i, -2
  %sub12.i = add i32 %div11.neg.i, %min.0.i
  br label %if.end16.i

if.else.i:                                        ; preds = %if.then7.i
  %div13.neg.i = sdiv i32 %min.0.i, -4
  %sub14.i = add i32 %div13.neg.i, %min.0.i
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.else.i, %if.then10.i, %__zone_watermark_unusable_free.exit.i374
  %min.1.i = phi i32 [ %sub12.i, %if.then10.i ], [ %sub14.i, %if.else.i ], [ %min.0.i, %__zone_watermark_unusable_free.exit.i374 ]
  %45 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx.i, align 4
  %add.i376 = add i32 %46, %min.1.i
  %cmp.not.i377 = icmp sgt i32 %sub.i373, %add.i376
  br i1 %cmp.not.i377, label %do.body74, label %if.end6.i

if.end6.i:                                        ; preds = %if.end16.i
  br i1 %tobool8.not.i.not, label %for.inc, label %land.lhs.true9.i

land.lhs.true9.i:                                 ; preds = %if.end6.i
  %47 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %watermark_boost, align 4
  %tobool10.not.i = icmp ne i32 %48, 0
  %cmp12.i = icmp eq i32 %and51, 0
  %or.cond40.i = and i1 %cmp12.i, %tobool10.not.i
  br i1 %or.cond40.i, label %zone_watermark_fast.exit, label %for.inc, !prof !638

zone_watermark_fast.exit:                         ; preds = %land.lhs.true9.i
  %49 = ptrtoint ptr %zone.0403 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %zone.0403, align 128
  %call17.i = tail call zeroext i1 @__zone_watermark_ok(ptr noundef nonnull %zone.0403, i32 noundef 0, i32 noundef %50, i32 noundef %29, i32 noundef %21, i32 noundef %32) #27
  br i1 %call17.i, label %do.body74, label %for.inc

for.inc:                                          ; preds = %zone_watermark_fast.exit, %land.lhs.true9.i, %if.end6.i, %land.lhs.true47
  %incdec.ptr = getelementptr %struct.zoneref, ptr %z.0402, i32 1
  br i1 %tobool.not.i.i, label %land.rhs.i, label %if.end.i, !prof !582

land.rhs.i:                                       ; preds = %for.inc
  %zone_idx.i.i = getelementptr %struct.zoneref, ptr %z.0402, i32 1, i32 1
  %51 = ptrtoint ptr %zone_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %zone_idx.i.i, align 4
  %cmp.not.i = icmp ugt i32 %52, %12
  br i1 %cmp.not.i, label %if.end.i, label %next_zones_zonelist.exit, !prof !584

if.end.i:                                         ; preds = %land.rhs.i, %for.inc
  %call3.i = tail call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr, i32 noundef %12, ptr noundef %14) #27
  br label %next_zones_zonelist.exit

next_zones_zonelist.exit:                         ; preds = %if.end.i, %land.rhs.i
  %retval.0.i337 = phi ptr [ %call3.i, %if.end.i ], [ %incdec.ptr, %land.rhs.i ]
  %53 = ptrtoint ptr %retval.0.i337 to i32
  call void @__asan_load4_noabort(i32 %53)
  %zone.0 = load ptr, ptr %retval.0.i337, align 4
  %tobool42.not = icmp eq ptr %zone.0, null
  br i1 %tobool42.not, label %failed, label %for.body

do.body74:                                        ; preds = %zone_watermark_fast.exit, %if.end16.i, %__zone_watermark_unusable_free.exit.i
  %54 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %and.i343 = and i32 %54, 128
  %tobool85.not = icmp eq i32 %and.i343, 0
  br i1 %tobool85.not, label %if.then86, label %do.body90

if.then86:                                        ; preds = %do.body74
  tail call void @trace_hardirqs_off() #27
  br label %do.body90

do.body90:                                        ; preds = %if.then86, %do.body74
  %55 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i344 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i344 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 3
  %57 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu, align 4
  %arrayidx96 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx96, align 4
  %add97 = add i32 %60, ptrtoint (ptr @pagesets to i32)
  %61 = inttoptr i32 %add97 to ptr
  tail call fastcc void @local_lock_acquire(ptr noundef %61)
  %per_cpu_pageset = getelementptr inbounds %struct.zone, ptr %zone.0403, i32 0, i32 5
  %62 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %per_cpu_pageset, align 8
  %64 = ptrtoint ptr %63 to i32
  %65 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %cpu, align 4
  %arrayidx109 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %66
  %67 = ptrtoint ptr %arrayidx109 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx109, align 4
  %add110 = add i32 %68, %64
  %69 = inttoptr i32 %add110 to ptr
  %migratetype = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 3
  %70 = ptrtoint ptr %migratetype to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %migratetype, align 4
  %arrayidx112 = getelementptr %struct.per_cpu_pages, ptr %69, i32 0, i32 4, i32 %71
  %cmp114404410 = icmp slt i32 %nr_populated.0.lcssa, %nr_pages
  br i1 %cmp114404410, label %while.body116.lr.ph.lr.ph, label %do.body148

while.body116.lr.ph.lr.ph:                        ; preds = %do.body90
  %tobool141.not = icmp eq ptr %page_list, null
  br label %while.body116.lr.ph

while.body116.lr.ph:                              ; preds = %if.end144, %while.body116.lr.ph.lr.ph
  %nr_populated.1.ph413 = phi i32 [ %nr_populated.0.lcssa, %while.body116.lr.ph.lr.ph ], [ %inc145, %if.end144 ]
  %nr_account.0.ph411 = phi i32 [ 0, %while.body116.lr.ph.lr.ph ], [ %inc140, %if.end144 ]
  br label %while.body116

while.body116:                                    ; preds = %if.then121, %while.body116.lr.ph
  %nr_populated.1405 = phi i32 [ %nr_populated.1.ph413, %while.body116.lr.ph ], [ %inc122, %if.then121 ]
  br i1 %tobool.not, label %if.end123, label %land.lhs.true118

land.lhs.true118:                                 ; preds = %while.body116
  %arrayidx119 = getelementptr ptr, ptr %page_array, i32 %nr_populated.1405
  %72 = ptrtoint ptr %arrayidx119 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx119, align 4
  %tobool120.not = icmp eq ptr %73, null
  br i1 %tobool120.not, label %if.end123, label %if.then121

if.then121:                                       ; preds = %land.lhs.true118
  %inc122 = add nsw i32 %nr_populated.1405, 1
  %cmp114 = icmp slt i32 %inc122, %nr_pages
  br i1 %cmp114, label %while.body116, label %do.body148.loopexit

if.end123:                                        ; preds = %land.lhs.true118, %while.body116
  %nr_populated.1405.lcssa = phi i32 [ %nr_populated.1405, %land.lhs.true118 ], [ %nr_populated.1.ph413, %while.body116 ]
  %74 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %alloc_flags, align 4
  %call125 = tail call fastcc ptr @__rmqueue_pcplist(ptr noundef nonnull %zone.0403, i32 noundef 0, i32 noundef %71, i32 noundef %75, ptr noundef %69, ptr noundef %arrayidx112)
  %tobool126.not = icmp eq ptr %call125, null
  br i1 %tobool126.not, label %if.then135, label %if.end139, !prof !584

if.then135:                                       ; preds = %if.end123
  %tobool136.not = icmp eq i32 %nr_populated.1405.lcssa, 0
  br i1 %tobool136.not, label %do.body201, label %do.body148

if.end139:                                        ; preds = %if.end123
  %inc140 = add i32 %nr_account.0.ph411, 1
  tail call void @post_alloc_hook(ptr noundef nonnull %call125, i32 noundef 0, i32 noundef %8) #27
  %76 = getelementptr inbounds %struct.page, ptr %call125, i32 0, i32 1
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr null, ptr %76, align 4
  br i1 %tobool141.not, label %if.else, label %if.then142

if.then142:                                       ; preds = %if.end139
  %78 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %page_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %76, ptr noundef nonnull %page_list, ptr noundef %79) #27
  br i1 %call.i.i, label %if.end.i.i347, label %if.end144

if.end.i.i347:                                    ; preds = %if.then142
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %76, ptr %prev1.i.i, align 4
  %81 = ptrtoint ptr %76 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %79, ptr %76, align 4
  %prev3.i.i = getelementptr inbounds %struct.page, ptr %call125, i32 0, i32 1, i32 0, i32 0, i32 1
  %82 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %page_list, ptr %prev3.i.i, align 4
  %83 = ptrtoint ptr %page_list to i32
  call void @__asan_store4_noabort(i32 %83)
  store volatile ptr %76, ptr %page_list, align 4
  br label %if.end144

if.else:                                          ; preds = %if.end139
  %arrayidx143 = getelementptr ptr, ptr %page_array, i32 %nr_populated.1405.lcssa
  %84 = ptrtoint ptr %arrayidx143 to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %call125, ptr %arrayidx143, align 4
  br label %if.end144

if.end144:                                        ; preds = %if.else, %if.end.i.i347, %if.then142
  %inc145 = add nsw i32 %nr_populated.1405.lcssa, 1
  %cmp114404 = icmp slt i32 %inc145, %nr_pages
  br i1 %cmp114404, label %while.body116.lr.ph, label %do.body148

do.body148.loopexit:                              ; preds = %if.then121
  %85 = add nsw i32 %nr_populated.1.ph413, 1
  %smax.le = call i32 @llvm.smax.i32(i32 %nr_pages, i32 %85)
  br label %do.body148

do.body148:                                       ; preds = %do.body148.loopexit, %if.end144, %if.then135, %do.body90
  %nr_account.0.ph391 = phi i32 [ %nr_account.0.ph411, %if.then135 ], [ 0, %do.body90 ], [ %nr_account.0.ph411, %do.body148.loopexit ], [ %inc140, %if.end144 ]
  %nr_populated.1389 = phi i32 [ %nr_populated.1405.lcssa, %if.then135 ], [ %nr_populated.0.lcssa, %do.body90 ], [ %smax.le, %do.body148.loopexit ], [ %inc145, %if.end144 ]
  %86 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %cpu, align 4
  %arrayidx157 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %87
  %88 = ptrtoint ptr %arrayidx157 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %arrayidx157, align 4
  %add158 = add i32 %89, ptrtoint (ptr @pagesets to i32)
  %90 = inttoptr i32 %add158 to ptr
  tail call fastcc void @local_lock_release(ptr noundef %90)
  br i1 %tobool85.not, label %if.then168, label %do.body170

if.then168:                                       ; preds = %do.body148
  tail call void @trace_hardirqs_on() #27
  br label %do.body170

do.body170:                                       ; preds = %if.then168, %do.body148
  %91 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i349 = and i32 %91, 128
  %tobool178.not = icmp eq i32 %and.i.i349, 0
  br i1 %tobool178.not, label %if.then187, label %do.end190, !prof !584

if.then187:                                       ; preds = %do.body170
  tail call void @warn_bogus_irq_restore() #27
  br label %do.end190

do.end190:                                        ; preds = %if.then187, %do.body170
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %54) #27, !srcloc !615
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone.0403, i32 0, i32 4
  %92 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %zone_pgdat, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %zone.0403 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %93 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 1152
  %add197 = add nsw i32 %sub.ptr.div, 4
  %arrayidx.i350 = getelementptr [76 x i32], ptr @vm_event_states, i32 0, i32 %add197
  %94 = ptrtoint ptr %arrayidx.i350 to i32
  %95 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i351 = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i351 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 3
  %97 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %cpu.i, align 4
  %arrayidx7.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %98
  %99 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %arrayidx7.i, align 4
  %add.i352 = add i32 %100, %94
  %101 = inttoptr i32 %add.i352 to ptr
  %102 = ptrtoint ptr %101 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %101, align 4
  %add8.i = add i32 %103, %nr_account.0.ph391
  store i32 %add8.i, ptr %101, align 4
  br label %out

out:                                              ; preds = %if.end258, %failed, %do.end190, %if.end34, %while.end
  %nr_populated.2 = phi i32 [ %nr_populated.0.lcssa, %while.end ], [ %inc259, %if.end258 ], [ %nr_populated.3, %failed ], [ %nr_populated.1389, %do.end190 ], [ %nr_populated.0.lcssa, %if.end34 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %alloc_flags) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %alloc_gfp) #27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ac) #27
  ret i32 %nr_populated.2

do.body201:                                       ; preds = %if.then135
  %104 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %cpu, align 4
  %arrayidx210 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %105
  %106 = ptrtoint ptr %arrayidx210 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %arrayidx210, align 4
  %add211 = add i32 %107, ptrtoint (ptr @pagesets to i32)
  %108 = inttoptr i32 %add211 to ptr
  tail call fastcc void @local_lock_release(ptr noundef %108)
  br i1 %tobool85.not, label %if.then221, label %do.body223

if.then221:                                       ; preds = %do.body201
  tail call void @trace_hardirqs_on() #27
  br label %do.body223

do.body223:                                       ; preds = %if.then221, %do.body201
  %109 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i354 = and i32 %109, 128
  %tobool231.not = icmp eq i32 %and.i.i354, 0
  br i1 %tobool231.not, label %if.then240, label %do.end243, !prof !584

if.then240:                                       ; preds = %do.body223
  tail call void @warn_bogus_irq_restore() #27
  br label %do.end243

do.end243:                                        ; preds = %if.then240, %do.body223
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %54) #27, !srcloc !615
  br label %failed

failed:                                           ; preds = %do.end243, %next_zones_zonelist.exit, %first_zones_zonelist.exit, %if.end24, %memcg_kmem_enabled.exit
  %nr_populated.3 = phi i32 [ 0, %do.end243 ], [ %nr_populated.0.lcssa, %memcg_kmem_enabled.exit ], [ %nr_populated.0.lcssa, %if.end24 ], [ %nr_populated.0.lcssa, %first_zones_zonelist.exit ], [ %nr_populated.0.lcssa, %next_zones_zonelist.exit ]
  %gfp.addr.0 = phi i32 [ %8, %do.end243 ], [ %gfp, %memcg_kmem_enabled.exit ], [ %gfp, %if.end24 ], [ %8, %first_zones_zonelist.exit ], [ %8, %next_zones_zonelist.exit ]
  %call250 = tail call ptr @__alloc_pages(i32 noundef %gfp.addr.0, i32 noundef 0, i32 undef, ptr noundef %nodemask)
  %tobool251.not = icmp eq ptr %call250, null
  br i1 %tobool251.not, label %out, label %if.then252

if.then252:                                       ; preds = %failed
  %tobool253.not = icmp eq ptr %page_list, null
  br i1 %tobool253.not, label %if.else256, label %if.then254

if.then254:                                       ; preds = %if.then252
  %110 = getelementptr inbounds %struct.page, ptr %call250, i32 0, i32 1
  %111 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %page_list, align 4
  %call.i.i355 = tail call zeroext i1 @__list_add_valid(ptr noundef %110, ptr noundef nonnull %page_list, ptr noundef %112) #27
  br i1 %call.i.i355, label %if.end.i.i358, label %if.end258

if.end.i.i358:                                    ; preds = %if.then254
  %prev1.i.i356 = getelementptr inbounds %struct.list_head, ptr %112, i32 0, i32 1
  %113 = ptrtoint ptr %prev1.i.i356 to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %110, ptr %prev1.i.i356, align 4
  %114 = ptrtoint ptr %110 to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %112, ptr %110, align 4
  %prev3.i.i357 = getelementptr inbounds %struct.page, ptr %call250, i32 0, i32 1, i32 0, i32 0, i32 1
  %115 = ptrtoint ptr %prev3.i.i357 to i32
  call void @__asan_store4_noabort(i32 %115)
  store ptr %page_list, ptr %prev3.i.i357, align 4
  %116 = ptrtoint ptr %page_list to i32
  call void @__asan_store4_noabort(i32 %116)
  store volatile ptr %110, ptr %page_list, align 4
  br label %if.end258

if.else256:                                       ; preds = %if.then252
  %arrayidx257 = getelementptr ptr, ptr %page_array, i32 %nr_populated.3
  %117 = ptrtoint ptr %arrayidx257 to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr %call250, ptr %arrayidx257, align 4
  br label %if.end258

if.end258:                                        ; preds = %if.else256, %if.end.i.i358, %if.then254
  %inc259 = add nuw i32 %nr_populated.3, 1
  br label %out
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @prepare_alloc_pages(i32 noundef %gfp_mask, i32 noundef %order, ptr noundef %nodemask, ptr nocapture noundef %ac, ptr nocapture noundef %alloc_gfp, ptr nocapture noundef %alloc_flags) unnamed_addr #5 align 64 {
entry:
  %and.i = and i32 %gfp_mask, 15
  %shr2.i = lshr i32 59624, %and.i
  %and3.i = and i32 %shr2.i, 1
  %tobool.not.i = icmp eq i32 %and3.i, 0
  br i1 %tobool.not.i, label %gfp_zone.exit, label %do.body6.i, !prof !582

do.body6.i:                                       ; preds = %entry
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/gfp.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 485, 0\0A.popsection", ""() #27, !srcloc !639
  unreachable

gfp_zone.exit:                                    ; preds = %entry
  %mul.i = shl nuw nsw i32 %and.i, 1
  %shr.i = lshr i32 19988769, %mul.i
  %and1.i = and i32 %shr.i, 3
  %highest_zoneidx = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 4
  %0 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %and1.i, ptr %highest_zoneidx, align 4
  %1 = ptrtoint ptr %ac to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), ptr %ac, align 4
  %nodemask2 = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 1
  %2 = ptrtoint ptr %nodemask2 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %nodemask, ptr %nodemask2, align 4
  %and.i5 = and i32 %gfp_mask, 24
  %cmp.i = icmp eq i32 %and.i5, 24
  br i1 %cmp.i, label %do.end.i, label %gfp_migratetype.exit, !prof !584

do.end.i:                                         ; preds = %gfp_zone.exit
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.144, i32 noundef 347, i32 noundef 9, ptr noundef null) #27
  br label %gfp_migratetype.exit

gfp_migratetype.exit:                             ; preds = %do.end.i, %gfp_zone.exit
  %3 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool25.not.i = icmp eq i32 %3, 0
  %shr.i6 = lshr exact i32 %and.i5, 3
  %retval.0.i = select i1 %tobool25.not.i, i32 %shr.i6, i32 0, !prof !582
  %migratetype = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 3
  %4 = ptrtoint ptr %migratetype to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %retval.0.i, ptr %migratetype, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_enabled_key, ptr blockaddress(@prepare_alloc_pages, %if.then)) #27
          to label %if.end19 [label %if.then], !srcloc !583

if.then:                                          ; preds = %gfp_migratetype.exit
  %5 = ptrtoint ptr %alloc_gfp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %alloc_gfp, align 4
  %or = or i32 %6, 1048576
  store i32 %or, ptr %alloc_gfp, align 4
  %7 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %10, 15728640
  %11 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i1 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i1 to ptr
  %preempt_count.i2 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i2, align 4
  %and7 = and i32 %14, 983040
  %or8 = or i32 %and7, %and
  %15 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i3 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i3 to ptr
  %preempt_count.i4 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i4 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i4, align 4
  %and11 = and i32 %18, 256
  %or12 = or i32 %or8, %and11
  %tobool.not = icmp eq i32 %or12, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %19 = ptrtoint ptr %nodemask2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %nodemask2, align 4
  %tobool14.not = icmp eq ptr %20, null
  br i1 %tobool14.not, label %if.then15, label %if.else

if.then15:                                        ; preds = %land.lhs.true
  %21 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i7 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i7 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task, align 8
  %mems_allowed = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 160
  %25 = ptrtoint ptr %nodemask2 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %mems_allowed, ptr %nodemask2, align 4
  br label %if.end19

if.else:                                          ; preds = %land.lhs.true, %if.then
  %26 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %alloc_flags, align 4
  %or18 = or i32 %27, 64
  store i32 %or18, ptr %alloc_flags, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then15, %gfp_migratetype.exit
  tail call void @fs_reclaim_acquire(i32 noundef %gfp_mask)
  %28 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task.i.i, align 8
  %flags1.i.i = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %flags1.i.i, align 4
  %and.i.i8 = and i32 %33, 269221888
  %tobool.not.i.i = icmp eq i32 %and.i.i8, 0
  br i1 %tobool.not.i.i, label %current_gfp_context.exit.i, label %if.then.i.i, !prof !582

if.then.i.i:                                      ; preds = %if.end19
  %and4.i.i = and i32 %33, 524288
  %tobool5.not.i.i = icmp eq i32 %and4.i.i, 0
  br i1 %tobool5.not.i.i, label %if.else.i.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %if.then.i.i
  %and7.i.i = and i32 %gfp_mask, -193
  br label %if.end12.i.i

if.else.i.i:                                      ; preds = %if.then.i.i
  %and8.i.i = and i32 %33, 262144
  %tobool9.not.i.i = icmp eq i32 %and8.i.i, 0
  %and11.i.i = and i32 %gfp_mask, -129
  %spec.select.i.i = select i1 %tobool9.not.i.i, i32 %gfp_mask, i32 %and11.i.i
  br label %if.end12.i.i

if.end12.i.i:                                     ; preds = %if.else.i.i, %if.then6.i.i
  %flags.addr.0.i.i = phi i32 [ %and7.i.i, %if.then6.i.i ], [ %spec.select.i.i, %if.else.i.i ]
  %and13.i.i = and i32 %33, 268435456
  %tobool14.not.i.i = icmp eq i32 %and13.i.i, 0
  %and16.i.i = and i32 %flags.addr.0.i.i, -9
  %spec.select25.i.i = select i1 %tobool14.not.i.i, i32 %flags.addr.0.i.i, i32 %and16.i.i
  br label %current_gfp_context.exit.i

current_gfp_context.exit.i:                       ; preds = %if.end12.i.i, %if.end19
  %flags.addr.1.i.i = phi i32 [ %gfp_mask, %if.end19 ], [ %spec.select25.i.i, %if.end12.i.i ]
  %and.i6.i = and i32 %flags.addr.1.i.i, 1024
  %tobool.not.i7.i = icmp eq i32 %and.i6.i, 0
  br i1 %tobool.not.i7.i, label %fs_reclaim_release.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %current_gfp_context.exit.i
  %34 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i8.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i8.i to ptr
  %task.i9.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %task.i9.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task.i9.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 3
  %38 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %flags.i.i, align 4
  %and1.i.i = and i32 %39, 2048
  %tobool2.not.i.i = icmp eq i32 %and1.i.i, 0
  %40 = and i32 %flags.addr.1.i.i, 33554560
  %.not.i = icmp eq i32 %40, 128
  %or.cond.i = select i1 %tobool2.not.i.i, i1 %.not.i, i1 false
  br i1 %or.cond.i, label %if.then2.i, label %fs_reclaim_release.exit

if.then2.i:                                       ; preds = %if.end.i.i
  %41 = tail call ptr @llvm.returnaddress(i32 0) #27
  %42 = ptrtoint ptr %41 to i32
  tail call void @lock_release(ptr noundef nonnull @__fs_reclaim_map, i32 noundef %42) #27
  br label %fs_reclaim_release.exit

fs_reclaim_release.exit:                          ; preds = %if.then2.i, %if.end.i.i, %current_gfp_context.exit.i
  %and20 = and i32 %gfp_mask, 1024
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %do.end27, label %do.body23

do.body23:                                        ; preds = %fs_reclaim_release.exit
  tail call void @__might_sleep(ptr noundef nonnull @.str.1, i32 noundef 5164) #27
  br label %do.end27

do.end27:                                         ; preds = %do.body23, %fs_reclaim_release.exit
  %call28 = tail call zeroext i1 @should_fail_alloc_page(i32 noundef %gfp_mask, i32 noundef %order)
  br i1 %call28, label %return, label %if.end30

if.end30:                                         ; preds = %do.end27
  %43 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %alloc_flags, align 4
  br i1 %cmp.i, label %do.end.i.i, label %gfp_to_alloc_flags_cma.exit, !prof !584

do.end.i.i:                                       ; preds = %if.end30
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.144, i32 noundef 347, i32 noundef 9, ptr noundef null) #27
  br label %gfp_to_alloc_flags_cma.exit

gfp_to_alloc_flags_cma.exit:                      ; preds = %do.end.i.i, %if.end30
  %45 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool25.not.i.i = icmp eq i32 %45, 0
  %cmp2.i = icmp eq i32 %and.i5, 8
  %cmp.i10 = and i1 %cmp2.i, %tobool25.not.i.i
  %or.i = or i32 %44, 128
  %spec.select.i = select i1 %cmp.i10, i32 %or.i, i32 %44
  %46 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %spec.select.i, ptr %alloc_flags, align 4
  %spread_dirty_pages = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 5
  %and32 = lshr i32 %gfp_mask, 12
  %47 = trunc i32 %and32 to i8
  %48 = and i8 %47, 1
  %49 = ptrtoint ptr %spread_dirty_pages to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %48, ptr %spread_dirty_pages, align 4
  %50 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ac, align 4
  %52 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %highest_zoneidx, align 4
  %54 = ptrtoint ptr %nodemask2 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %nodemask2, align 4
  %tobool.not.i.i11 = icmp eq ptr %55, null
  br i1 %tobool.not.i.i11, label %land.rhs.i.i, label %if.end.i.i12, !prof !582

land.rhs.i.i:                                     ; preds = %gfp_to_alloc_flags_cma.exit
  %zone_idx.i.i.i = getelementptr inbounds %struct.zoneref, ptr %51, i32 0, i32 1
  %56 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %zone_idx.i.i.i, align 4
  %cmp.not.i.i = icmp ugt i32 %57, %53
  br i1 %cmp.not.i.i, label %if.end.i.i12, label %first_zones_zonelist.exit, !prof !584

if.end.i.i12:                                     ; preds = %land.rhs.i.i, %gfp_to_alloc_flags_cma.exit
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %51, i32 noundef %53, ptr noundef %55) #27
  br label %first_zones_zonelist.exit

first_zones_zonelist.exit:                        ; preds = %if.end.i.i12, %land.rhs.i.i
  %retval.0.i.i13 = phi ptr [ %call3.i.i, %if.end.i.i12 ], [ %51, %land.rhs.i.i ]
  %preferred_zoneref = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 2
  %58 = ptrtoint ptr %preferred_zoneref to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %retval.0.i.i13, ptr %preferred_zoneref, align 4
  br label %return

return:                                           ; preds = %first_zones_zonelist.exit, %do.end27
  %59 = xor i1 %call28, true
  ret i1 %59
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__rmqueue_pcplist(ptr noundef %zone, i32 noundef %order, i32 noundef %migratetype, i32 noundef %alloc_flags, ptr noundef %pcp, ptr noundef %list) unnamed_addr #5 align 64 {
entry:
  %movable_pages.i.i.i.i = alloca i32, align 4
  %batch2 = getelementptr inbounds %struct.per_cpu_pages, ptr %pcp, i32 0, i32 2
  %lock.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 22
  %and.i.i = and i32 %alloc_flags, 128
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %arrayidx.i146.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 37, i32 10
  %arrayidx.i147.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 37, i32 0
  %cmp35.i.i.i.i = icmp ult i32 %order, 12
  %zone_start_pfn.i.i.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %spanned_pages.i.i.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %cmp35.i.not.i.i = xor i1 %cmp35.i.i.i.i, true
  %brmerge.i.i = or i1 %tobool.not.i.i, %cmp35.i.not.i.i
  %cmp.not110.i.i.i = icmp sgt i32 %order, 11
  %0 = and i32 %migratetype, 1073741822
  %1 = icmp eq i32 %0, 4
  %arrayidx125.i.i.i.i = getelementptr [6 x [3 x i32]], ptr @fallbacks, i32 0, i32 %migratetype, i32 0
  %cmp5.i.i.i = icmp eq i32 %migratetype, 1
  %cmp11114.i.i.i = icmp slt i32 %order, 12
  %managed_pages.i.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 11
  %arrayidx.i.i91.i.i.i = getelementptr [3 x i32], ptr %zone, i32 0, i32 2
  %watermark_boost.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 1
  %and.i.i.i.i = and i32 %alloc_flags, 2048
  %tobool.not.i.i138.i.i = icmp eq i32 %and.i.i.i.i, 0
  %flags.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 21
  %cmp.i53.i.i.i.i = icmp slt i32 %migratetype, 3
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %shl.neg.i = shl nsw i32 -1, %order
  br label %do.body

do.body:                                          ; preds = %check_new_pcp.exit, %entry
  %2 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %list, align 4
  %cmp.i.not = icmp eq ptr %3, %list
  br i1 %cmp.i.not, label %if.then, label %if.end14

if.then:                                          ; preds = %do.body
  %4 = ptrtoint ptr %batch2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %batch2, align 4
  %cmp = icmp sgt i32 %5, 1
  %shr = ashr i32 %5, %order
  %6 = call i32 @llvm.smax.i32(i32 %shr, i32 2)
  %batch.0 = select i1 %cmp, i32 %6, i32 %5
  call void @_raw_spin_lock(ptr noundef %lock.i) #27
  %cmp171.not.i = icmp eq i32 %batch.0, 0
  br i1 %cmp171.not.i, label %rmqueue_bulk.exit, label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %if.then
  %allocated.0175.i = phi i32 [ %inc.i, %for.inc.i ], [ 0, %if.then ]
  br i1 %tobool.not.i.i, label %retry.i.i.preheader, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i146.i.i, i32 noundef 4) #27
  %7 = ptrtoint ptr %arrayidx.i146.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %arrayidx.i146.i.i, align 4
  %9 = call i32 @llvm.smax.i32(i32 %8, i32 0) #27
  %call.i.i.i148.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i147.i.i, i32 noundef 4) #27
  %10 = ptrtoint ptr %arrayidx.i147.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %arrayidx.i147.i.i, align 4
  %12 = call i32 @llvm.smax.i32(i32 %11, i32 0) #27
  %div44.i.i = lshr i32 %12, 1
  %cmp.i.i = icmp ugt i32 %9, %div44.i.i
  %or.cond.i.i = and i1 %cmp35.i.i.i.i, %cmp.i.i
  br i1 %or.cond.i.i, label %for.body.i.i.i.i, label %retry.i.i.preheader

for.body.i.i.i.i:                                 ; preds = %for.inc.i.i.i.i, %land.lhs.true.i.i
  %current_order.036.i.i.i.i = phi i32 [ %inc.i.i.i.i, %for.inc.i.i.i.i ], [ %order, %land.lhs.true.i.i ]
  %arrayidx.i.i.i.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %current_order.036.i.i.i.i, i32 0, i32 4
  %13 = ptrtoint ptr %arrayidx.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %arrayidx.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i = icmp eq ptr %14, %arrayidx.i.i.i.i.i
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %14, i32 -4
  %tobool.not37.i.i.i.i = icmp eq ptr %add.ptr.i.i.i.i.i, null
  %tobool.not.i.i.i.i = or i1 %cmp.not.i.i.i.i.i, %tobool.not37.i.i.i.i
  br i1 %tobool.not.i.i.i.i, label %for.inc.i.i.i.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %for.body.i.i.i.i
  call fastcc void @del_page_from_free_list(ptr noundef nonnull %add.ptr.i.i.i.i.i, ptr noundef %zone, i32 noundef %current_order.036.i.i.i.i) #27
  %cmp48.i.i.i.i.i = icmp sgt i32 %current_order.036.i.i.i.i, %order
  br i1 %cmp48.i.i.i.i.i, label %while.body.lr.ph.i.i.i.i.i, label %__rmqueue.exit.thread44.i

while.body.lr.ph.i.i.i.i.i:                       ; preds = %if.end.i.i.i.i
  %shl.i.i.i.i.i = shl nuw nsw i32 1, %current_order.036.i.i.i.i
  br label %while.body.i.i.i.i.i

while.body.i.i.i.i.i:                             ; preds = %set_buddy_order.exit.i.i.i.i.i, %while.body.lr.ph.i.i.i.i.i
  %size.050.i.i.i.i.i = phi i32 [ %shl.i.i.i.i.i, %while.body.lr.ph.i.i.i.i.i ], [ %shr.i.i.i.i.i, %set_buddy_order.exit.i.i.i.i.i ]
  %high.addr.049.i.i.i.i.i = phi i32 [ %current_order.036.i.i.i.i, %while.body.lr.ph.i.i.i.i.i ], [ %dec.i.i.i.i.i, %set_buddy_order.exit.i.i.i.i.i ]
  %dec.i.i.i.i.i = add nsw i32 %high.addr.049.i.i.i.i.i, -1
  %shr.i.i.i.i.i = lshr i32 %size.050.i.i.i.i.i, 1
  %arrayidx.i16.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %15 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i.i.i.i = ptrtoint ptr %arrayidx.i16.i.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i = ptrtoint ptr %15 to i32
  %sub.ptr.sub.i.i.i.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %16 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i.i.i.i = add i32 %sub.ptr.div.i.i.i.i.i.i.i, %16
  %17 = ptrtoint ptr %zone_start_pfn.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %zone_start_pfn.i.i.i.i.i.i.i, align 4
  %19 = ptrtoint ptr %spanned_pages.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %spanned_pages.i.i.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i.i.i.i = icmp ule i32 %18, %add.i.i.i.i.i.i.i
  %add.i.i.i.i.i.i.i.i.i = add i32 %20, %18
  %cmp1.i.i.i.i.i.i.i.i = icmp ugt i32 %add.i.i.i.i.i.i.i.i.i, %add.i.i.i.i.i.i.i
  %or.cond.i.i.i.i.i.i.i = select i1 %cmp.not.i.i.i.i.i.i.i.i, i1 %cmp1.i.i.i.i.i.i.i.i, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i, label %bad_range.exit.thread.i.i.i.i.i

bad_range.exit.thread.i.i.i.i.i:                  ; preds = %while.body.i.i.i.i.i
  %name.i.i.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 15
  %21 = ptrtoint ptr %name.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %name.i.i.i.i.i.i.i, align 16
  %call10.i.i.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134, i32 noundef %add.i.i.i.i.i.i.i, i32 noundef 0, ptr noundef %22, i32 noundef %18, i32 noundef %add.i.i.i.i.i.i.i.i.i) #29
  br label %if.then.i.i.i.i.i

if.end.i.i.i.i.i.i:                               ; preds = %while.body.i.i.i.i.i
  %23 = ptrtoint ptr %arrayidx.i16.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %arrayidx.i16.i.i.i.i, align 4
  %cmp.i.not.i.i.i.i.i.i.i.i.i = icmp eq i32 %24, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i.i, label %bad_range.exit.i.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i.i.i.i:                        ; preds = %if.end.i.i.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

bad_range.exit.i.i.i.i.i:                         ; preds = %if.end.i.i.i.i.i.i
  %shr.i.i.i.i.i.i.i.i.i = lshr i32 %24, 30
  %arrayidx.i.i.i.i.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i.i.i.i
  %cmp.not.i.not.i.not.i.i.i.i.i = icmp eq ptr %arrayidx.i.i.i.i.i.i.i.i, %zone
  br i1 %cmp.not.i.not.i.not.i.i.i.i.i, label %do.end9.i.i.i.i.i, label %if.then.i.i.i.i.i, !prof !582

if.then.i.i.i.i.i:                                ; preds = %bad_range.exit.i.i.i.i.i, %bad_range.exit.thread.i.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i.i, ptr noundef nonnull @.str.145) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2304, 0\0A.popsection", ""() #27, !srcloc !640
  unreachable

do.end9.i.i.i.i.i:                                ; preds = %bad_range.exit.i.i.i.i.i
  %25 = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i, i32 1
  %arrayidx1.i.i.i.i.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %dec.i.i.i.i.i, i32 0, i32 4
  %26 = ptrtoint ptr %arrayidx1.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx1.i.i.i.i.i.i, align 4
  %call.i.i.i.i.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %25, ptr noundef %arrayidx1.i.i.i.i.i.i, ptr noundef %27) #27
  br i1 %call.i.i.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i.i.i, label %add_to_free_list.exit.i.i.i.i.i

if.end.i.i.i.i.i.i.i.i:                           ; preds = %do.end9.i.i.i.i.i
  %prev1.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %prev1.i.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %prev1.i.i.i.i.i.i.i.i, align 4
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %27, ptr %25, align 4
  %prev3.i.i.i.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i, i32 1, i32 0, i32 0, i32 1
  %30 = ptrtoint ptr %prev3.i.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %arrayidx1.i.i.i.i.i.i, ptr %prev3.i.i.i.i.i.i.i.i, align 4
  %31 = ptrtoint ptr %arrayidx1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %25, ptr %arrayidx1.i.i.i.i.i.i, align 4
  br label %add_to_free_list.exit.i.i.i.i.i

add_to_free_list.exit.i.i.i.i.i:                  ; preds = %if.end.i.i.i.i.i.i.i.i, %do.end9.i.i.i.i.i
  %nr_free.i.i.i.i.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %dec.i.i.i.i.i, i32 1
  %32 = ptrtoint ptr %nr_free.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %nr_free.i.i.i.i.i.i, align 4
  %inc.i.i.i.i.i.i = add i32 %33, 1
  store i32 %inc.i.i.i.i.i.i, ptr %nr_free.i.i.i.i.i.i, align 4
  %private1.i.i.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i, i32 1, i32 0, i32 3
  %34 = ptrtoint ptr %private1.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %dec.i.i.i.i.i, ptr %private1.i.i.i.i.i.i.i, align 4
  %35 = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i, i32 2
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  %cmp.i.i.i.i.i.i.i = icmp ult i32 %37, -268435456
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i, label %set_buddy_order.exit.i.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i.i:                            ; preds = %add_to_free_list.exit.i.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i.i, ptr noundef nonnull @.str.137) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 878, 0\0A.popsection", ""() #27, !srcloc !636
  unreachable

set_buddy_order.exit.i.i.i.i.i:                   ; preds = %add_to_free_list.exit.i.i.i.i.i
  %and7.i.i.i.i.i.i.i = and i32 %37, -129
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %and7.i.i.i.i.i.i.i, ptr %35, align 4
  %cmp.i.i.i.i.i = icmp sgt i32 %dec.i.i.i.i.i, %order
  br i1 %cmp.i.i.i.i.i, label %while.body.i.i.i.i.i, label %__rmqueue.exit.i

for.inc.i.i.i.i:                                  ; preds = %for.body.i.i.i.i
  %inc.i.i.i.i = add i32 %current_order.036.i.i.i.i, 1
  %exitcond.not.i.i.i.i = icmp eq i32 %inc.i.i.i.i, 12
  br i1 %exitcond.not.i.i.i.i, label %retry.i.i.preheader, label %for.body.i.i.i.i

retry.i.i.preheader:                              ; preds = %for.inc.i.i.i.i, %land.lhs.true.i.i, %for.body.i
  br label %retry.i.i

retry.i.i:                                        ; preds = %__rmqueue_fallback.exit.i.i, %retry.i.i.preheader
  br i1 %cmp35.i.i.i.i, label %for.body.i.i.i, label %land.lhs.true18.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i, %retry.i.i
  %current_order.036.i.i.i = phi i32 [ %inc.i.i.i, %for.inc.i.i.i ], [ %order, %retry.i.i ]
  %arrayidx.i.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %current_order.036.i.i.i
  %arrayidx.i.i.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i.i.i, i32 0, i32 %migratetype
  %39 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile ptr, ptr %arrayidx.i.i.i.i, align 4
  %cmp.not.i.i.i.i = icmp eq ptr %40, %arrayidx.i.i.i.i
  %add.ptr.i.i.i.i = getelementptr i8, ptr %40, i32 -4
  %tobool.not37.i.i.i = icmp eq ptr %add.ptr.i.i.i.i, null
  %tobool.not.i.i.i = or i1 %cmp.not.i.i.i.i, %tobool.not37.i.i.i
  br i1 %tobool.not.i.i.i, label %for.inc.i.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %for.body.i.i.i
  call fastcc void @del_page_from_free_list(ptr noundef nonnull %add.ptr.i.i.i.i, ptr noundef %zone, i32 noundef %current_order.036.i.i.i) #27
  %cmp48.i.i.i.i = icmp sgt i32 %current_order.036.i.i.i, %order
  br i1 %cmp48.i.i.i.i, label %while.body.lr.ph.i.i.i.i, label %__rmqueue.exit.thread44.i

while.body.lr.ph.i.i.i.i:                         ; preds = %if.end.i.i.i
  %shl.i.i.i.i = shl nuw nsw i32 1, %current_order.036.i.i.i
  br label %while.body.i.i.i.i

while.body.i.i.i.i:                               ; preds = %set_buddy_order.exit.i.i.i.i, %while.body.lr.ph.i.i.i.i
  %size.050.i.i.i.i = phi i32 [ %shl.i.i.i.i, %while.body.lr.ph.i.i.i.i ], [ %shr.i.i.i.i, %set_buddy_order.exit.i.i.i.i ]
  %high.addr.049.i.i.i.i = phi i32 [ %current_order.036.i.i.i, %while.body.lr.ph.i.i.i.i ], [ %dec.i.i.i.i, %set_buddy_order.exit.i.i.i.i ]
  %dec.i.i.i.i = add nsw i32 %high.addr.049.i.i.i.i, -1
  %shr.i.i.i.i = lshr i32 %size.050.i.i.i.i, 1
  %arrayidx.i16.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %41 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i.i.i = ptrtoint ptr %arrayidx.i16.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i.i.i = ptrtoint ptr %41 to i32
  %sub.ptr.sub.i.i.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %42 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i.i.i = add i32 %sub.ptr.div.i.i.i.i.i.i, %42
  %43 = ptrtoint ptr %zone_start_pfn.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %zone_start_pfn.i.i.i.i.i.i.i, align 4
  %45 = ptrtoint ptr %spanned_pages.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %spanned_pages.i.i.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i.i.i = icmp ule i32 %44, %add.i.i.i.i.i.i
  %add.i.i.i.i.i.i.i.i = add i32 %46, %44
  %cmp1.i.i.i.i.i.i.i = icmp ugt i32 %add.i.i.i.i.i.i.i.i, %add.i.i.i.i.i.i
  %or.cond.i.i.i.i.i.i = select i1 %cmp.not.i.i.i.i.i.i.i, i1 %cmp1.i.i.i.i.i.i.i, i1 false
  br i1 %or.cond.i.i.i.i.i.i, label %if.end.i.i.i.i.i, label %bad_range.exit.thread.i.i.i.i

bad_range.exit.thread.i.i.i.i:                    ; preds = %while.body.i.i.i.i
  %name.i.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 15
  %47 = ptrtoint ptr %name.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %name.i.i.i.i.i.i, align 16
  %call10.i.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134, i32 noundef %add.i.i.i.i.i.i, i32 noundef 0, ptr noundef %48, i32 noundef %44, i32 noundef %add.i.i.i.i.i.i.i.i) #29
  br label %if.then.i.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %while.body.i.i.i.i
  %49 = ptrtoint ptr %arrayidx.i16.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %arrayidx.i16.i.i.i, align 4
  %cmp.i.not.i.i.i.i.i.i.i.i = icmp eq i32 %50, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i, label %bad_range.exit.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i.i.i:                          ; preds = %if.end.i.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

bad_range.exit.i.i.i.i:                           ; preds = %if.end.i.i.i.i.i
  %shr.i.i.i.i.i.i.i.i = lshr i32 %50, 30
  %arrayidx.i.i.i.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i.i.i
  %cmp.not.i.not.i.not.i.i.i.i = icmp eq ptr %arrayidx.i.i.i.i.i.i.i, %zone
  br i1 %cmp.not.i.not.i.not.i.i.i.i, label %do.end9.i.i.i.i, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %bad_range.exit.i.i.i.i, %bad_range.exit.thread.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i, ptr noundef nonnull @.str.145) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2304, 0\0A.popsection", ""() #27, !srcloc !640
  unreachable

do.end9.i.i.i.i:                                  ; preds = %bad_range.exit.i.i.i.i
  %arrayidx.i.i.i45.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %dec.i.i.i.i
  %51 = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i, i32 1
  %arrayidx1.i.i.i.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i.i.i45.i.i, i32 0, i32 %migratetype
  %52 = ptrtoint ptr %arrayidx1.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx1.i.i.i.i.i, align 4
  %call.i.i.i.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %51, ptr noundef %arrayidx1.i.i.i.i.i, ptr noundef %53) #27
  br i1 %call.i.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i.i, label %add_to_free_list.exit.i.i.i.i

if.end.i.i.i.i.i.i.i:                             ; preds = %do.end9.i.i.i.i
  %prev1.i.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %prev1.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %51, ptr %prev1.i.i.i.i.i.i.i, align 4
  %55 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %53, ptr %51, align 4
  %prev3.i.i.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i, i32 1, i32 0, i32 0, i32 1
  %56 = ptrtoint ptr %prev3.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %arrayidx1.i.i.i.i.i, ptr %prev3.i.i.i.i.i.i.i, align 4
  %57 = ptrtoint ptr %arrayidx1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %51, ptr %arrayidx1.i.i.i.i.i, align 4
  br label %add_to_free_list.exit.i.i.i.i

add_to_free_list.exit.i.i.i.i:                    ; preds = %if.end.i.i.i.i.i.i.i, %do.end9.i.i.i.i
  %nr_free.i.i.i.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %dec.i.i.i.i, i32 1
  %58 = ptrtoint ptr %nr_free.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %nr_free.i.i.i.i.i, align 4
  %inc.i.i.i.i.i = add i32 %59, 1
  store i32 %inc.i.i.i.i.i, ptr %nr_free.i.i.i.i.i, align 4
  %private1.i.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i, i32 1, i32 0, i32 3
  %60 = ptrtoint ptr %private1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %dec.i.i.i.i, ptr %private1.i.i.i.i.i.i, align 4
  %61 = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i, i32 2
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %61, align 4
  %cmp.i.i.i.i.i.i = icmp ult i32 %63, -268435456
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %set_buddy_order.exit.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i:                              ; preds = %add_to_free_list.exit.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i, ptr noundef nonnull @.str.137) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 878, 0\0A.popsection", ""() #27, !srcloc !636
  unreachable

set_buddy_order.exit.i.i.i.i:                     ; preds = %add_to_free_list.exit.i.i.i.i
  %and7.i.i.i.i.i.i = and i32 %63, -129
  %64 = ptrtoint ptr %61 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %and7.i.i.i.i.i.i, ptr %61, align 4
  %cmp.i.i.i.i = icmp sgt i32 %dec.i.i.i.i, %order
  br i1 %cmp.i.i.i.i, label %while.body.i.i.i.i, label %__rmqueue.exit.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i
  %inc.i.i.i = add i32 %current_order.036.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, 12
  br i1 %exitcond.not.i.i.i, label %if.then11.i.i, label %for.body.i.i.i

if.then11.i.i:                                    ; preds = %for.inc.i.i.i
  br i1 %brmerge.i.i, label %land.lhs.true18.i.i, label %for.body.i.i53.i.i

for.body.i.i53.i.i:                               ; preds = %for.inc.i.i105.i.i, %if.then11.i.i
  %current_order.036.i.i47.i.i = phi i32 [ %inc.i.i103.i.i, %for.inc.i.i105.i.i ], [ %order, %if.then11.i.i ]
  %arrayidx.i.i.i48.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %current_order.036.i.i47.i.i, i32 0, i32 4
  %65 = ptrtoint ptr %arrayidx.i.i.i48.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile ptr, ptr %arrayidx.i.i.i48.i.i, align 4
  %cmp.not.i.i.i49.i.i = icmp eq ptr %66, %arrayidx.i.i.i48.i.i
  %add.ptr.i.i.i50.i.i = getelementptr i8, ptr %66, i32 -4
  %tobool.not37.i.i51.i.i = icmp eq ptr %add.ptr.i.i.i50.i.i, null
  %tobool.not.i.i52.i.i = or i1 %cmp.not.i.i.i49.i.i, %tobool.not37.i.i51.i.i
  br i1 %tobool.not.i.i52.i.i, label %for.inc.i.i105.i.i, label %if.end.i.i55.i.i

if.end.i.i55.i.i:                                 ; preds = %for.body.i.i53.i.i
  call fastcc void @del_page_from_free_list(ptr noundef nonnull %add.ptr.i.i.i50.i.i, ptr noundef %zone, i32 noundef %current_order.036.i.i47.i.i) #27
  %cmp48.i.i.i54.i.i = icmp sgt i32 %current_order.036.i.i47.i.i, %order
  br i1 %cmp48.i.i.i54.i.i, label %while.body.lr.ph.i.i.i59.i.i, label %__rmqueue.exit.thread44.i

while.body.lr.ph.i.i.i59.i.i:                     ; preds = %if.end.i.i55.i.i
  %shl.i.i.i56.i.i = shl nuw nsw i32 1, %current_order.036.i.i47.i.i
  br label %while.body.i.i.i74.i.i

while.body.i.i.i74.i.i:                           ; preds = %set_buddy_order.exit.i.i.i100.i.i, %while.body.lr.ph.i.i.i59.i.i
  %size.050.i.i.i60.i.i = phi i32 [ %shl.i.i.i56.i.i, %while.body.lr.ph.i.i.i59.i.i ], [ %shr.i.i.i63.i.i, %set_buddy_order.exit.i.i.i100.i.i ]
  %high.addr.049.i.i.i61.i.i = phi i32 [ %current_order.036.i.i47.i.i, %while.body.lr.ph.i.i.i59.i.i ], [ %dec.i.i.i62.i.i, %set_buddy_order.exit.i.i.i100.i.i ]
  %dec.i.i.i62.i.i = add nsw i32 %high.addr.049.i.i.i61.i.i, -1
  %shr.i.i.i63.i.i = lshr i32 %size.050.i.i.i60.i.i, 1
  %arrayidx.i16.i.i64.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %67 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i.i65.i.i = ptrtoint ptr %arrayidx.i16.i.i64.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i.i66.i.i = ptrtoint ptr %67 to i32
  %sub.ptr.sub.i.i.i.i.i67.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i65.i.i, %sub.ptr.rhs.cast.i.i.i.i.i66.i.i
  %sub.ptr.div.i.i.i.i.i68.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i.i67.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %68 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i.i69.i.i = add i32 %sub.ptr.div.i.i.i.i.i68.i.i, %68
  %69 = ptrtoint ptr %zone_start_pfn.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %zone_start_pfn.i.i.i.i.i.i.i, align 4
  %71 = ptrtoint ptr %spanned_pages.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %spanned_pages.i.i.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i.i70.i.i = icmp ule i32 %70, %add.i.i.i.i.i69.i.i
  %add.i.i.i.i.i.i.i71.i.i = add i32 %72, %70
  %cmp1.i.i.i.i.i.i72.i.i = icmp ugt i32 %add.i.i.i.i.i.i.i71.i.i, %add.i.i.i.i.i69.i.i
  %or.cond.i.i.i.i.i73.i.i = select i1 %cmp.not.i.i.i.i.i.i70.i.i, i1 %cmp1.i.i.i.i.i.i72.i.i, i1 false
  br i1 %or.cond.i.i.i.i.i73.i.i, label %if.end.i.i.i.i79.i.i, label %bad_range.exit.thread.i.i.i77.i.i

bad_range.exit.thread.i.i.i77.i.i:                ; preds = %while.body.i.i.i74.i.i
  %name.i.i.i.i.i75.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 15
  %73 = ptrtoint ptr %name.i.i.i.i.i75.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %name.i.i.i.i.i75.i.i, align 16
  %call10.i.i.i.i.i76.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134, i32 noundef %add.i.i.i.i.i69.i.i, i32 noundef 0, ptr noundef %74, i32 noundef %70, i32 noundef %add.i.i.i.i.i.i.i71.i.i) #29
  br label %if.then.i.i.i85.i.i

if.end.i.i.i.i79.i.i:                             ; preds = %while.body.i.i.i74.i.i
  %75 = ptrtoint ptr %arrayidx.i16.i.i64.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %arrayidx.i16.i.i64.i.i, align 4
  %cmp.i.not.i.i.i.i.i.i.i78.i.i = icmp eq i32 %76, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i78.i.i, label %if.then.i.i.i.i.i.i.i80.i.i, label %bad_range.exit.i.i.i84.i.i, !prof !584

if.then.i.i.i.i.i.i.i80.i.i:                      ; preds = %if.end.i.i.i.i79.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i64.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

bad_range.exit.i.i.i84.i.i:                       ; preds = %if.end.i.i.i.i79.i.i
  %shr.i.i.i.i.i.i.i81.i.i = lshr i32 %76, 30
  %arrayidx.i.i.i.i.i.i82.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i.i81.i.i
  %cmp.not.i.not.i.not.i.i.i83.i.i = icmp eq ptr %arrayidx.i.i.i.i.i.i82.i.i, %zone
  br i1 %cmp.not.i.not.i.not.i.i.i83.i.i, label %do.end9.i.i.i88.i.i, label %if.then.i.i.i85.i.i, !prof !582

if.then.i.i.i85.i.i:                              ; preds = %bad_range.exit.i.i.i84.i.i, %bad_range.exit.thread.i.i.i77.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i64.i.i, ptr noundef nonnull @.str.145) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2304, 0\0A.popsection", ""() #27, !srcloc !640
  unreachable

do.end9.i.i.i88.i.i:                              ; preds = %bad_range.exit.i.i.i84.i.i
  %77 = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i, i32 1
  %arrayidx1.i.i.i.i86.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %dec.i.i.i62.i.i, i32 0, i32 4
  %78 = ptrtoint ptr %arrayidx1.i.i.i.i86.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %arrayidx1.i.i.i.i86.i.i, align 4
  %call.i.i.i.i.i.i87.i.i = call zeroext i1 @__list_add_valid(ptr noundef %77, ptr noundef %arrayidx1.i.i.i.i86.i.i, ptr noundef %79) #27
  br i1 %call.i.i.i.i.i.i87.i.i, label %if.end.i.i.i.i.i.i91.i.i, label %add_to_free_list.exit.i.i.i96.i.i

if.end.i.i.i.i.i.i91.i.i:                         ; preds = %do.end9.i.i.i88.i.i
  %prev1.i.i.i.i.i.i89.i.i = getelementptr inbounds %struct.list_head, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %prev1.i.i.i.i.i.i89.i.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %77, ptr %prev1.i.i.i.i.i.i89.i.i, align 4
  %81 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %79, ptr %77, align 4
  %prev3.i.i.i.i.i.i90.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i, i32 1, i32 0, i32 0, i32 1
  %82 = ptrtoint ptr %prev3.i.i.i.i.i.i90.i.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %arrayidx1.i.i.i.i86.i.i, ptr %prev3.i.i.i.i.i.i90.i.i, align 4
  %83 = ptrtoint ptr %arrayidx1.i.i.i.i86.i.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store volatile ptr %77, ptr %arrayidx1.i.i.i.i86.i.i, align 4
  br label %add_to_free_list.exit.i.i.i96.i.i

add_to_free_list.exit.i.i.i96.i.i:                ; preds = %if.end.i.i.i.i.i.i91.i.i, %do.end9.i.i.i88.i.i
  %nr_free.i.i.i.i92.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %dec.i.i.i62.i.i, i32 1
  %84 = ptrtoint ptr %nr_free.i.i.i.i92.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %nr_free.i.i.i.i92.i.i, align 4
  %inc.i.i.i.i93.i.i = add i32 %85, 1
  store i32 %inc.i.i.i.i93.i.i, ptr %nr_free.i.i.i.i92.i.i, align 4
  %private1.i.i.i.i.i94.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i, i32 1, i32 0, i32 3
  %86 = ptrtoint ptr %private1.i.i.i.i.i94.i.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %dec.i.i.i62.i.i, ptr %private1.i.i.i.i.i94.i.i, align 4
  %87 = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i, i32 2
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %87, align 4
  %cmp.i.i.i.i.i95.i.i = icmp ult i32 %89, -268435456
  br i1 %cmp.i.i.i.i.i95.i.i, label %if.then.i.i.i.i.i97.i.i, label %set_buddy_order.exit.i.i.i100.i.i, !prof !584

if.then.i.i.i.i.i97.i.i:                          ; preds = %add_to_free_list.exit.i.i.i96.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i64.i.i, ptr noundef nonnull @.str.137) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 878, 0\0A.popsection", ""() #27, !srcloc !636
  unreachable

set_buddy_order.exit.i.i.i100.i.i:                ; preds = %add_to_free_list.exit.i.i.i96.i.i
  %and7.i.i.i.i.i98.i.i = and i32 %89, -129
  %90 = ptrtoint ptr %87 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %and7.i.i.i.i.i98.i.i, ptr %87, align 4
  %cmp.i.i.i99.i.i = icmp sgt i32 %dec.i.i.i62.i.i, %order
  br i1 %cmp.i.i.i99.i.i, label %while.body.i.i.i74.i.i, label %__rmqueue.exit.i

for.inc.i.i105.i.i:                               ; preds = %for.body.i.i53.i.i
  %inc.i.i103.i.i = add i32 %current_order.036.i.i47.i.i, 1
  %exitcond.not.i.i104.i.i = icmp eq i32 %inc.i.i103.i.i, 12
  br i1 %exitcond.not.i.i104.i.i, label %land.lhs.true18.i.i, label %for.body.i.i53.i.i

land.lhs.true18.i.i:                              ; preds = %for.inc.i.i105.i.i, %if.then11.i.i, %retry.i.i
  br i1 %cmp.not110.i.i.i, label %rmqueue_bulk.exit, label %for.body.i110.i.i

for.body.i110.i.i:                                ; preds = %for.inc.i115.i.i, %land.lhs.true18.i.i
  %current_order.0111.i.i.i = phi i32 [ %dec.i.i.i, %for.inc.i115.i.i ], [ 11, %land.lhs.true18.i.i ]
  %arrayidx.i108.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %current_order.0111.i.i.i
  %nr_free.i.i.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %current_order.0111.i.i.i, i32 1
  %91 = ptrtoint ptr %nr_free.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %nr_free.i.i.i.i, align 4
  %cmp.i.i109.i.i = icmp eq i32 %92, 0
  %or.cond102.i.i.i = or i1 %1, %cmp.i.i109.i.i
  br i1 %or.cond102.i.i.i, label %for.inc.i115.i.i, label %if.end4.lr.ph.i.i.i.i

if.end4.lr.ph.i.i.i.i:                            ; preds = %for.body.i110.i.i
  %93 = ptrtoint ptr %arrayidx125.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %arrayidx125.i.i.i.i, align 4
  %cmp1.i.i.i.i.i = icmp ugt i32 %current_order.0111.i.i.i, 4
  br label %if.end4.i.i.i.i

if.end4.i.i.i.i:                                  ; preds = %for.inc.i.i114.i.i, %if.end4.lr.ph.i.i.i.i
  %95 = phi i32 [ %94, %if.end4.lr.ph.i.i.i.i ], [ %100, %for.inc.i.i114.i.i ]
  %i.027.i.i.i.i = phi i32 [ 0, %if.end4.lr.ph.i.i.i.i ], [ %inc.i.i113.i.i, %for.inc.i.i114.i.i ]
  %arrayidx.i.i.i111.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i108.i.i, i32 0, i32 %95
  %96 = ptrtoint ptr %arrayidx.i.i.i111.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile ptr, ptr %arrayidx.i.i.i111.i.i, align 4
  %cmp.i.i.i.i112.i.i = icmp eq ptr %97, %arrayidx.i.i.i111.i.i
  br i1 %cmp.i.i.i.i112.i.i, label %for.inc.i.i114.i.i, label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.end4.i.i.i.i
  br i1 %cmp1.i.i.i.i.i, label %if.then8.i.i.i.i, label %switch.early.test.i.i.i.i.i

switch.early.test.i.i.i.i.i:                      ; preds = %if.end6.i.i.i.i
  switch i32 %migratetype, label %can_steal_fallback.exit.i.i.i.i [
    i32 2, label %if.then8.i.i.i.i
    i32 0, label %if.then8.i.i.i.i
  ]

can_steal_fallback.exit.i.i.i.i:                  ; preds = %switch.early.test.i.i.i.i.i
  %98 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i.not.i.i.i.i = icmp eq i32 %98, 0
  br i1 %tobool.not.i.not.i.i.i.i, label %find_suitable_fallback.exit.i.i.i, label %if.then8.i.i.i.i

if.then8.i.i.i.i:                                 ; preds = %can_steal_fallback.exit.i.i.i.i, %switch.early.test.i.i.i.i.i, %switch.early.test.i.i.i.i.i, %if.end6.i.i.i.i
  br label %find_suitable_fallback.exit.i.i.i

for.inc.i.i114.i.i:                               ; preds = %if.end4.i.i.i.i
  %inc.i.i113.i.i = add i32 %i.027.i.i.i.i, 1
  %arrayidx1.i.i.i.i = getelementptr [6 x [3 x i32]], ptr @fallbacks, i32 0, i32 %migratetype, i32 %inc.i.i113.i.i
  %99 = ptrtoint ptr %arrayidx1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %arrayidx1.i.i.i.i, align 4
  %cmp2.i.i.i.i = icmp eq i32 %100, 6
  br i1 %cmp2.i.i.i.i, label %for.inc.i115.i.i, label %if.end4.i.i.i.i

find_suitable_fallback.exit.i.i.i:                ; preds = %if.then8.i.i.i.i, %can_steal_fallback.exit.i.i.i.i
  %tobool4.not.i.i.i = phi i1 [ true, %can_steal_fallback.exit.i.i.i.i ], [ false, %if.then8.i.i.i.i ]
  %can_steal.2.i.i.i = phi i8 [ 0, %can_steal_fallback.exit.i.i.i.i ], [ 1, %if.then8.i.i.i.i ]
  %cmp1.i.i.i = icmp eq i32 %95, -1
  br i1 %cmp1.i.i.i, label %for.inc.i115.i.i, label %if.end3.i.i.i

if.end3.i.i.i:                                    ; preds = %find_suitable_fallback.exit.i.i.i
  %or.cond.i.i.i = and i1 %cmp5.i.i.i, %tobool4.not.i.i.i
  %cmp7.i.i.i = icmp sgt i32 %current_order.0111.i.i.i, %order
  %or.cond65.i.i.i = select i1 %or.cond.i.i.i, i1 %cmp7.i.i.i, i1 false
  br i1 %or.cond65.i.i.i, label %for.cond10.preheader.i.i.i, label %do_steal.i.i.i

for.cond10.preheader.i.i.i:                       ; preds = %if.end3.i.i.i
  br i1 %cmp11114.i.i.i, label %for.body12.i.i.i, label %do.body.i.i.i

for.inc.i115.i.i:                                 ; preds = %find_suitable_fallback.exit.i.i.i, %for.inc.i.i114.i.i, %for.body.i110.i.i
  %dec.i.i.i = add i32 %current_order.0111.i.i.i, -1
  %cmp.not.i.i.i = icmp slt i32 %dec.i.i.i, %order
  br i1 %cmp.not.i.i.i, label %rmqueue_bulk.exit, label %for.body.i110.i.i

for.body12.i.i.i:                                 ; preds = %for.inc19.i.i.i, %for.cond10.preheader.i.i.i
  %current_order.1116.i.i.i = phi i32 [ %inc.i116.i.i, %for.inc19.i.i.i ], [ %order, %for.cond10.preheader.i.i.i ]
  %arrayidx14.i.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %current_order.1116.i.i.i
  %nr_free.i66.i.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %current_order.1116.i.i.i, i32 1
  %101 = ptrtoint ptr %nr_free.i66.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %nr_free.i66.i.i.i, align 4
  %cmp.i67.i.i.i = icmp eq i32 %102, 0
  br i1 %cmp.i67.i.i.i, label %for.inc19.i.i.i, label %if.end.i68.i.i.i

if.end.i68.i.i.i:                                 ; preds = %for.body12.i.i.i
  %arrayidx.i.i72.i.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx14.i.i.i, i32 0, i32 2
  %103 = ptrtoint ptr %arrayidx.i.i72.i.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile ptr, ptr %arrayidx.i.i72.i.i.i, align 4
  %cmp.i.i.i73.i.i.i = icmp eq ptr %104, %arrayidx.i.i72.i.i.i
  br i1 %cmp.i.i.i73.i.i.i, label %for.inc.i84.i.i.i, label %if.end6.i75.i.i.i

if.end6.i75.i.i.i:                                ; preds = %for.inc.i84.i.i.i, %if.end.i68.i.i.i
  %.lcssa.i.i.i = phi i32 [ 2, %if.end.i68.i.i.i ], [ 0, %for.inc.i84.i.i.i ]
  %cmp1.i.i69.le.i.i.i = icmp ugt i32 %current_order.1116.i.i.i, 4
  br i1 %cmp1.i.i69.le.i.i.i, label %do.body.i.i.i, label %switch.early.test.i.i76.i.i.i

switch.early.test.i.i76.i.i.i:                    ; preds = %if.end6.i75.i.i.i
  %105 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i.not.i77.i.i.i = icmp ne i32 %105, 0
  %spec.select.i.i.i = zext i1 %tobool.not.i.not.i77.i.i.i to i8
  br label %do_steal.i.i.i

for.inc.i84.i.i.i:                                ; preds = %if.end.i68.i.i.i
  %106 = ptrtoint ptr %arrayidx14.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile ptr, ptr %arrayidx14.i.i.i, align 4
  %cmp.i.i.i73.1.i.i.i = icmp eq ptr %107, %arrayidx14.i.i.i
  br i1 %cmp.i.i.i73.1.i.i.i, label %for.inc19.i.i.i, label %if.end6.i75.i.i.i

for.inc19.i.i.i:                                  ; preds = %for.inc.i84.i.i.i, %for.body12.i.i.i
  %inc.i116.i.i = add nsw i32 %current_order.1116.i.i.i, 1
  %exitcond.not.i117.i.i = icmp eq i32 %inc.i116.i.i, 12
  br i1 %exitcond.not.i117.i.i, label %do.body25.i.i.i, label %for.body12.i.i.i

do.body.i.i.i:                                    ; preds = %if.end6.i75.i.i.i, %for.cond10.preheader.i.i.i
  %current_order.1.lcssa.i.i.i = phi i32 [ %order, %for.cond10.preheader.i.i.i ], [ %current_order.1116.i.i.i, %if.end6.i75.i.i.i ]
  %can_steal.6.i.i.i = phi i8 [ 0, %for.cond10.preheader.i.i.i ], [ 1, %if.end6.i75.i.i.i ]
  %area.1.i.i.i = phi ptr [ %arrayidx.i108.i.i, %for.cond10.preheader.i.i.i ], [ %arrayidx14.i.i.i, %if.end6.i75.i.i.i ]
  %fallback_mt.1.i.i.i = phi i32 [ %95, %for.cond10.preheader.i.i.i ], [ %.lcssa.i.i.i, %if.end6.i75.i.i.i ]
  %cmp21.i.i.i = icmp eq i32 %current_order.1.lcssa.i.i.i, 12
  br i1 %cmp21.i.i.i, label %do.body25.i.i.i, label %do_steal.i.i.i, !prof !584

do.body25.i.i.i:                                  ; preds = %do.body.i.i.i, %for.inc19.i.i.i
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2963, 0\0A.popsection", ""() #27, !srcloc !641
  unreachable

do_steal.i.i.i:                                   ; preds = %do.body.i.i.i, %switch.early.test.i.i76.i.i.i, %if.end3.i.i.i
  %can_steal.7.i.i.i = phi i8 [ %can_steal.6.i.i.i, %do.body.i.i.i ], [ %can_steal.2.i.i.i, %if.end3.i.i.i ], [ %spec.select.i.i.i, %switch.early.test.i.i76.i.i.i ]
  %area.2.i.i.i = phi ptr [ %area.1.i.i.i, %do.body.i.i.i ], [ %arrayidx.i108.i.i, %if.end3.i.i.i ], [ %arrayidx14.i.i.i, %switch.early.test.i.i76.i.i.i ]
  %current_order.2.i.i.i = phi i32 [ %current_order.1.lcssa.i.i.i, %do.body.i.i.i ], [ %current_order.0111.i.i.i, %if.end3.i.i.i ], [ %current_order.1116.i.i.i, %switch.early.test.i.i76.i.i.i ]
  %fallback_mt.2.i.i.i = phi i32 [ %fallback_mt.1.i.i.i, %do.body.i.i.i ], [ %95, %if.end3.i.i.i ], [ %.lcssa.i.i.i, %switch.early.test.i.i76.i.i.i ]
  %arrayidx.i.i118.i.i = getelementptr [6 x %struct.list_head], ptr %area.2.i.i.i, i32 0, i32 %fallback_mt.2.i.i.i
  %108 = ptrtoint ptr %arrayidx.i.i118.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile ptr, ptr %arrayidx.i.i118.i.i, align 4
  %cmp.not.i.i119.i.i = icmp eq ptr %109, %arrayidx.i.i118.i.i
  %add.ptr.i.i120.i.i = getelementptr i8, ptr %109, i32 -4
  %spec.select.i.i.i.i = select i1 %cmp.not.i.i119.i.i, ptr null, ptr %add.ptr.i.i120.i.i
  %tobool33.not.i.i.i = icmp eq i8 %can_steal.7.i.i.i, 0
  %private.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %spec.select.i.i.i.i, i32 0, i32 1, i32 0, i32 3
  %110 = ptrtoint ptr %private.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %private.i.i.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %movable_pages.i.i.i.i) #27
  %112 = ptrtoint ptr %movable_pages.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 -1, ptr %movable_pages.i.i.i.i, align 4, !annotation !637
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %113 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %spec.select.i.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %113 to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  %sub.ptr.div.i.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %114 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i = add i32 %sub.ptr.div.i.i.i.i, %114
  %115 = ptrtoint ptr %spec.select.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile i32, ptr %spec.select.i.i.i.i, align 4
  %cmp.i.not.i.i.i.i.i.i.i121.i.i = icmp eq i32 %116, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i121.i.i, label %if.then.i.i.i.i.i.i.i122.i.i, label %get_pageblock_bitmap.exit.i.i.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i.i122.i.i:                     ; preds = %do_steal.i.i.i
  call void @dump_page(ptr noundef %spec.select.i.i.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i.i.i.i.i:            ; preds = %do_steal.i.i.i
  %shr.i.i.i.i.i.i.i123.i.i = lshr i32 %116, 30
  %pageblock_flags.i.i.i.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i.i123.i.i, i32 9
  %117 = ptrtoint ptr %pageblock_flags.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %pageblock_flags.i.i.i.i.i.i.i, align 8
  %119 = ptrtoint ptr %spec.select.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile i32, ptr %spec.select.i.i.i.i, align 4
  %cmp.i.not.i.i.i8.i.i.i.i.i.i = icmp eq i32 %120, -1
  br i1 %cmp.i.not.i.i.i8.i.i.i.i.i.i, label %if.then.i.i.i9.i.i.i.i.i.i, label %get_pfnblock_flags_mask.exit.i.i.i.i, !prof !584

if.then.i.i.i9.i.i.i.i.i.i:                       ; preds = %get_pageblock_bitmap.exit.i.i.i.i.i.i
  call void @dump_page(ptr noundef %spec.select.i.i.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pfnblock_flags_mask.exit.i.i.i.i:             ; preds = %get_pageblock_bitmap.exit.i.i.i.i.i.i
  %shr.i.i.i10.i.i.i.i.i.i = lshr i32 %120, 30
  %zone_start_pfn.i.i.i.i.i124.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i.i.i.i.i, i32 10
  %121 = ptrtoint ptr %zone_start_pfn.i.i.i.i.i124.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %zone_start_pfn.i.i.i.i.i124.i.i, align 4
  %and.i.i.i.i.i.i.i = and i32 %122, -2048
  %sub.i.i.i.i.i.i.i = sub i32 %add.i.i.i.i, %and.i.i.i.i.i.i.i
  %123 = lshr i32 %sub.i.i.i.i.i.i.i, 9
  %div7.i.i.i.i.i.i = lshr i32 %sub.i.i.i.i.i.i.i, 14
  %and.i.i.i.i.i.i = and i32 %123, 28
  %arrayidx.i.i.i.i.i.i = getelementptr i32, ptr %118, i32 %div7.i.i.i.i.i.i
  %124 = ptrtoint ptr %arrayidx.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %arrayidx.i.i.i.i.i.i, align 4
  %shr.i.i.i.i.i.i = lshr i32 %125, %and.i.i.i.i.i.i
  %and2.i.i.i.i.i.i = and i32 %shr.i.i.i.i.i.i, 7
  %cmp.i.i.i125.i.i = icmp eq i32 %and2.i.i.i.i.i.i, 3
  br i1 %cmp.i.i.i125.i.i, label %single_page.i.i.i.i, label %if.end.i88.i.i.i

if.end.i88.i.i.i:                                 ; preds = %get_pfnblock_flags_mask.exit.i.i.i.i
  %cmp.i87.i.i.i = icmp ugt i32 %111, 10
  br i1 %cmp.i87.i.i.i, label %if.then3.i.i.i.i, label %if.end4.i90.i.i.i

if.then3.i.i.i.i:                                 ; preds = %if.end.i88.i.i.i
  %sub.i.i.i.i.i = add i32 %111, -11
  %shl.i.i.i126.i.i = shl nuw i32 1, %sub.i.i.i.i.i
  br label %while.body.i.i.i128.i.i

while.body.i.i.i128.i.i:                          ; preds = %set_pageblock_migratetype.exit.i.i.i.i.i, %if.then3.i.i.i.i
  %nr_pageblocks.03.i.i.i.i.i = phi i32 [ %shl.i.i.i126.i.i, %if.then3.i.i.i.i ], [ %dec.i.i.i127.i.i, %set_pageblock_migratetype.exit.i.i.i.i.i ]
  %pageblock_page.addr.02.i.i.i.i.i = phi ptr [ %spec.select.i.i.i.i, %if.then3.i.i.i.i ], [ %add.ptr.i.i.i135.i.i, %set_pageblock_migratetype.exit.i.i.i.i.i ]
  %dec.i.i.i127.i.i = add i32 %nr_pageblocks.03.i.i.i.i.i, -1
  %126 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i.i.i.i.i.i = icmp ne i32 %126, 0
  %spec.select.i.i.i.i.i.i = and i1 %cmp.i53.i.i.i.i, %tobool.not.i.i.i.i.i.i
  br i1 %spec.select.i.i.i.i.i.i, label %if.then.i.i.i.i129.i.i, label %set_pageblock_migratetype.exit.i.i.i.i.i, !prof !584

if.then.i.i.i.i129.i.i:                           ; preds = %while.body.i.i.i128.i.i
  br label %set_pageblock_migratetype.exit.i.i.i.i.i

set_pageblock_migratetype.exit.i.i.i.i.i:         ; preds = %if.then.i.i.i.i129.i.i, %while.body.i.i.i128.i.i
  %migratetype.addr.0.i.i.i.i.i.i = phi i32 [ 0, %if.then.i.i.i.i129.i.i ], [ %migratetype, %while.body.i.i.i128.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %127 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i130.i.i = ptrtoint ptr %pageblock_page.addr.02.i.i.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i131.i.i = ptrtoint ptr %127 to i32
  %sub.ptr.sub.i.i.i.i132.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i130.i.i, %sub.ptr.rhs.cast.i.i.i.i131.i.i
  %sub.ptr.div.i.i.i.i133.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i132.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %128 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i134.i.i = add i32 %sub.ptr.div.i.i.i.i133.i.i, %128
  call void @set_pfnblock_flags_mask(ptr noundef %pageblock_page.addr.02.i.i.i.i.i, i32 noundef %migratetype.addr.0.i.i.i.i.i.i, i32 noundef %add.i.i.i.i134.i.i, i32 noundef 7) #27
  %add.ptr.i.i.i135.i.i = getelementptr %struct.page, ptr %pageblock_page.addr.02.i.i.i.i.i, i32 2048
  %tobool.not.i.i.i.i.i = icmp eq i32 %dec.i.i.i127.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %single_page.i.i.i.i, label %while.body.i.i.i128.i.i

if.end4.i90.i.i.i:                                ; preds = %if.end.i88.i.i.i
  %129 = load i32, ptr @watermark_boost_factor, align 4
  %tobool.not.i50.i.i.i.i = icmp eq i32 %129, 0
  br i1 %tobool.not.i50.i.i.i.i, label %if.end7.i.i.i.i, label %if.end.i.i.i137.i.i

if.end.i.i.i137.i.i:                              ; preds = %if.end4.i90.i.i.i
  %call.i.i.i.i.i.i136.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i.i.i.i, i32 noundef 4) #27
  %130 = ptrtoint ptr %managed_pages.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %managed_pages.i.i.i.i.i.i, align 4
  %cmp.i51.i.i.i.i = icmp ult i32 %131, 8192
  br i1 %cmp.i51.i.i.i.i, label %if.end7.i.i.i.i, label %if.end2.i.i.i.i.i

if.end2.i.i.i.i.i:                                ; preds = %if.end.i.i.i137.i.i
  %132 = ptrtoint ptr %arrayidx.i.i91.i.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %arrayidx.i.i91.i.i.i, align 8
  %.frozen = freeze i32 %133
  %div.i.i.i.i.i = udiv i32 %.frozen, 10000
  %134 = mul i32 %div.i.i.i.i.i, 10000
  %rem5.i.i.i.i.i.decomposed = sub i32 %.frozen, %134
  %135 = load i32, ptr @watermark_boost_factor, align 4
  %mul.i.i.i.i.i = mul i32 %div.i.i.i.i.i, %135
  %mul6.i.i.i.i.i = mul i32 %rem5.i.i.i.i.i.decomposed, %135
  %div7.i.i.i.i.i = udiv i32 %mul6.i.i.i.i.i, 10000
  %add.i.i.i.i.i = add i32 %div7.i.i.i.i.i, %mul.i.i.i.i.i
  %tobool8.not.i.i.i.i.i = icmp eq i32 %add.i.i.i.i.i, 0
  br i1 %tobool8.not.i.i.i.i.i, label %if.end7.i.i.i.i, label %boost_watermark.exit.i.i.i.i

boost_watermark.exit.i.i.i.i:                     ; preds = %if.end2.i.i.i.i.i
  %136 = call i32 @llvm.umax.i32(i32 %add.i.i.i.i.i, i32 2048) #27
  %137 = ptrtoint ptr %watermark_boost.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %watermark_boost.i.i.i.i.i, align 4
  %add13.i.i.i.i.i = add i32 %138, 2048
  %139 = call i32 @llvm.umin.i32(i32 %add13.i.i.i.i.i, i32 %136) #27
  %140 = ptrtoint ptr %watermark_boost.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 %139, ptr %watermark_boost.i.i.i.i.i, align 4
  br i1 %tobool.not.i.i138.i.i, label %if.end7.i.i.i.i, label %if.then6.i.i.i.i

if.then6.i.i.i.i:                                 ; preds = %boost_watermark.exit.i.i.i.i
  call void @_set_bit(i32 noundef 0, ptr noundef %flags.i.i.i.i) #27
  br label %if.end7.i.i.i.i

if.end7.i.i.i.i:                                  ; preds = %if.then6.i.i.i.i, %boost_watermark.exit.i.i.i.i, %if.end2.i.i.i.i.i, %if.end.i.i.i137.i.i, %if.end4.i90.i.i.i
  br i1 %tobool33.not.i.i.i, label %single_page.i.i.i.i, label %if.end10.i.i.i.i

if.end10.i.i.i.i:                                 ; preds = %if.end7.i.i.i.i
  %call11.i.i.i.i = call i32 @move_freepages_block(ptr noundef %zone, ptr noundef %spec.select.i.i.i.i, i32 noundef %migratetype, ptr noundef nonnull %movable_pages.i.i.i.i) #27
  br i1 %cmp5.i.i.i, label %if.then13.i.i.i.i, label %if.else.i.i.i.i

if.then13.i.i.i.i:                                ; preds = %if.end10.i.i.i.i
  %141 = ptrtoint ptr %movable_pages.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %movable_pages.i.i.i.i, align 4
  br label %if.end19.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end10.i.i.i.i
  %cmp14.i.i.i.i = icmp eq i32 %and2.i.i.i.i.i.i, 1
  br i1 %cmp14.i.i.i.i, label %if.then15.i.i.i.i, label %if.end19.i.i.i.i

if.then15.i.i.i.i:                                ; preds = %if.else.i.i.i.i
  %143 = ptrtoint ptr %movable_pages.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %movable_pages.i.i.i.i, align 4
  %145 = add i32 %call11.i.i.i.i, %144
  %sub.i.i.i.i = sub i32 2048, %145
  br label %if.end19.i.i.i.i

if.end19.i.i.i.i:                                 ; preds = %if.then15.i.i.i.i, %if.else.i.i.i.i, %if.then13.i.i.i.i
  %alike_pages.0.i.i.i.i = phi i32 [ %142, %if.then13.i.i.i.i ], [ %sub.i.i.i.i, %if.then15.i.i.i.i ], [ 0, %if.else.i.i.i.i ]
  %tobool20.not.i.i.i.i = icmp eq i32 %call11.i.i.i.i, 0
  br i1 %tobool20.not.i.i.i.i, label %single_page.i.i.i.i, label %if.end22.i.i.i.i

if.end22.i.i.i.i:                                 ; preds = %if.end19.i.i.i.i
  %add23.i.i.i.i = add i32 %alike_pages.0.i.i.i.i, %call11.i.i.i.i
  %cmp24.i.i.i.i = icmp sgt i32 %add23.i.i.i.i, 1023
  br i1 %cmp24.i.i.i.i, label %if.then26.i.i.i.i, label %lor.lhs.false.i.i.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %if.end22.i.i.i.i
  %146 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool25.not.i.i.i.i = icmp eq i32 %146, 0
  br i1 %tobool25.not.i.i.i.i, label %__rmqueue_fallback.exit.i.i, label %if.then26.i.i.i.i

if.then26.i.i.i.i:                                ; preds = %lor.lhs.false.i.i.i.i, %if.end22.i.i.i.i
  %147 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i52.i.i.i.i = icmp ne i32 %147, 0
  %spec.select.i.i.i.i.i = and i1 %cmp.i53.i.i.i.i, %tobool.not.i52.i.i.i.i
  br i1 %spec.select.i.i.i.i.i, label %if.then.i.i.i139.i.i, label %set_pageblock_migratetype.exit.i.i.i.i, !prof !584

if.then.i.i.i139.i.i:                             ; preds = %if.then26.i.i.i.i
  br label %set_pageblock_migratetype.exit.i.i.i.i

set_pageblock_migratetype.exit.i.i.i.i:           ; preds = %if.then.i.i.i139.i.i, %if.then26.i.i.i.i
  %migratetype.addr.0.i.i.i.i.i = phi i32 [ 0, %if.then.i.i.i139.i.i ], [ %migratetype, %if.then26.i.i.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %148 = load ptr, ptr @mem_map, align 4
  %sub.ptr.rhs.cast.i.i.i.i.i = ptrtoint ptr %148 to i32
  %sub.ptr.sub.i.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %149 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i54.i.i.i.i = add i32 %sub.ptr.div.i.i.i.i.i, %149
  call void @set_pfnblock_flags_mask(ptr noundef %spec.select.i.i.i.i, i32 noundef %migratetype.addr.0.i.i.i.i.i, i32 noundef %add.i54.i.i.i.i, i32 noundef 7) #27
  br label %__rmqueue_fallback.exit.i.i

single_page.i.i.i.i:                              ; preds = %if.end19.i.i.i.i, %if.end7.i.i.i.i, %set_pageblock_migratetype.exit.i.i.i.i.i, %get_pfnblock_flags_mask.exit.i.i.i.i
  %arrayidx.i56.i.i.i.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %111
  %150 = getelementptr inbounds %struct.page, ptr %spec.select.i.i.i.i, i32 0, i32 1
  %arrayidx1.i.i.i140.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i56.i.i.i.i, i32 0, i32 %migratetype
  %call.i.i.i.i.i141.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %150) #27
  br i1 %call.i.i.i.i.i141.i.i, label %if.end.i.i.i.i.i143.i.i, label %__list_del_entry.exit.i.i.i.i.i.i

if.end.i.i.i.i.i143.i.i:                          ; preds = %single_page.i.i.i.i
  %prev.i.i.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %spec.select.i.i.i.i, i32 0, i32 1, i32 0, i32 0, i32 1
  %151 = ptrtoint ptr %prev.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %prev.i.i.i.i.i.i.i, align 4
  %153 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %150, align 4
  %prev1.i.i.i.i.i.i142.i.i = getelementptr inbounds %struct.list_head, ptr %154, i32 0, i32 1
  %155 = ptrtoint ptr %prev1.i.i.i.i.i.i142.i.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr %152, ptr %prev1.i.i.i.i.i.i142.i.i, align 4
  %156 = ptrtoint ptr %152 to i32
  call void @__asan_store4_noabort(i32 %156)
  store volatile ptr %154, ptr %152, align 4
  br label %__list_del_entry.exit.i.i.i.i.i.i

__list_del_entry.exit.i.i.i.i.i.i:                ; preds = %if.end.i.i.i.i.i143.i.i, %single_page.i.i.i.i
  %prev.i2.i.i.i.i.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i56.i.i.i.i, i32 0, i32 %migratetype, i32 1
  %157 = ptrtoint ptr %prev.i2.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %prev.i2.i.i.i.i.i.i, align 4
  %call.i.i.i.i57.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %150, ptr noundef %158, ptr noundef %arrayidx1.i.i.i140.i.i) #27
  br i1 %call.i.i.i.i57.i.i.i.i, label %if.end.i.i.i.i.i.i145.i.i, label %__rmqueue_fallback.exit.i.i

if.end.i.i.i.i.i.i145.i.i:                        ; preds = %__list_del_entry.exit.i.i.i.i.i.i
  %159 = ptrtoint ptr %prev.i2.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %159)
  store ptr %150, ptr %prev.i2.i.i.i.i.i.i, align 4
  %160 = ptrtoint ptr %150 to i32
  call void @__asan_store4_noabort(i32 %160)
  store ptr %arrayidx1.i.i.i140.i.i, ptr %150, align 4
  %prev3.i.i.i.i.i.i144.i.i = getelementptr inbounds %struct.page, ptr %spec.select.i.i.i.i, i32 0, i32 1, i32 0, i32 0, i32 1
  %161 = ptrtoint ptr %prev3.i.i.i.i.i.i144.i.i to i32
  call void @__asan_store4_noabort(i32 %161)
  store ptr %158, ptr %prev3.i.i.i.i.i.i144.i.i, align 4
  %162 = ptrtoint ptr %158 to i32
  call void @__asan_store4_noabort(i32 %162)
  store volatile ptr %150, ptr %158, align 4
  br label %__rmqueue_fallback.exit.i.i

__rmqueue_fallback.exit.i.i:                      ; preds = %if.end.i.i.i.i.i.i145.i.i, %__list_del_entry.exit.i.i.i.i.i.i, %set_pageblock_migratetype.exit.i.i.i.i, %lor.lhs.false.i.i.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %movable_pages.i.i.i.i) #27
  call fastcc void @trace_mm_page_alloc_extfrag(ptr noundef %spec.select.i.i.i.i, i32 noundef %order, i32 noundef %current_order.2.i.i.i, i32 noundef %migratetype, i32 noundef %fallback_mt.2.i.i.i) #27
  br label %retry.i.i

__rmqueue.exit.thread44.i:                        ; preds = %if.end.i.i55.i.i, %if.end.i.i.i, %if.end.i.i.i.i
  %.lcssa389.sink.i.ph.i = phi ptr [ %66, %if.end.i.i55.i.i ], [ %40, %if.end.i.i.i ], [ %14, %if.end.i.i.i.i ]
  %migratetype.sink.i.ph.i = phi i32 [ 4, %if.end.i.i55.i.i ], [ %migratetype, %if.end.i.i.i ], [ 4, %if.end.i.i.i.i ]
  %page.1.ph.i.ph.i = phi ptr [ %add.ptr.i.i.i50.i.i, %if.end.i.i55.i.i ], [ %add.ptr.i.i.i.i, %if.end.i.i.i ], [ %add.ptr.i.i.i.i.i, %if.end.i.i.i.i ]
  %index.i.i.i48.i = getelementptr i8, ptr %.lcssa389.sink.i.ph.i, i32 12
  %163 = ptrtoint ptr %index.i.i.i48.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 %migratetype.sink.i.ph.i, ptr %index.i.i.i48.i, align 4
  call fastcc void @trace_mm_page_alloc_zone_locked(ptr noundef nonnull %page.1.ph.i.ph.i, i32 noundef %order, i32 noundef %migratetype) #27
  br label %if.end.i

__rmqueue.exit.i:                                 ; preds = %set_buddy_order.exit.i.i.i100.i.i, %set_buddy_order.exit.i.i.i.i, %set_buddy_order.exit.i.i.i.i.i
  %.lcssa389.sink.i.i = phi ptr [ %66, %set_buddy_order.exit.i.i.i100.i.i ], [ %40, %set_buddy_order.exit.i.i.i.i ], [ %14, %set_buddy_order.exit.i.i.i.i.i ]
  %migratetype.sink.i.i = phi i32 [ 4, %set_buddy_order.exit.i.i.i100.i.i ], [ %migratetype, %set_buddy_order.exit.i.i.i.i ], [ 4, %set_buddy_order.exit.i.i.i.i.i ]
  %page.1.ph.i.i = phi ptr [ %add.ptr.i.i.i50.i.i, %set_buddy_order.exit.i.i.i100.i.i ], [ %add.ptr.i.i.i.i, %set_buddy_order.exit.i.i.i.i ], [ %add.ptr.i.i.i.i.i, %set_buddy_order.exit.i.i.i.i.i ]
  %index.i.i.i.i = getelementptr i8, ptr %.lcssa389.sink.i.i, i32 12
  %164 = ptrtoint ptr %index.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %164)
  store i32 %migratetype.sink.i.i, ptr %index.i.i.i.i, align 4
  call fastcc void @trace_mm_page_alloc_zone_locked(ptr noundef nonnull %page.1.ph.i.i, i32 noundef %order, i32 noundef %migratetype) #27
  %cmp1.i = icmp eq ptr %page.1.ph.i.i, null
  br i1 %cmp1.i, label %rmqueue_bulk.exit, label %if.end.i, !prof !584

if.end.i:                                         ; preds = %__rmqueue.exit.i, %__rmqueue.exit.thread44.i
  %page.1.ph.i50.i = phi ptr [ %page.1.ph.i.ph.i, %__rmqueue.exit.thread44.i ], [ %page.1.ph.i.i, %__rmqueue.exit.i ]
  %165 = getelementptr inbounds %struct.page, ptr %page.1.ph.i50.i, i32 0, i32 1
  %166 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %165, ptr noundef %167, ptr noundef %list) #27
  br i1 %call.i.i.i, label %if.end.i.i40.i, label %list_add_tail.exit.i

if.end.i.i40.i:                                   ; preds = %if.end.i
  %168 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store ptr %165, ptr %prev.i.i, align 4
  %169 = ptrtoint ptr %165 to i32
  call void @__asan_store4_noabort(i32 %169)
  store ptr %list, ptr %165, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.page, ptr %page.1.ph.i50.i, i32 0, i32 1, i32 0, i32 0, i32 1
  %170 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %170)
  store ptr %167, ptr %prev3.i.i.i, align 4
  %171 = ptrtoint ptr %167 to i32
  call void @__asan_store4_noabort(i32 %171)
  store volatile ptr %165, ptr %167, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i40.i, %if.end.i
  %inc.i = add nuw i32 %allocated.0175.i, 1
  %index.i.i = getelementptr inbounds %struct.page, ptr %page.1.ph.i50.i, i32 0, i32 1, i32 0, i32 2
  %172 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %index.i.i, align 4
  %cmp13.i = icmp eq i32 %173, 4
  br i1 %cmp13.i, label %if.then20.i, label %for.inc.i, !prof !584

if.then20.i:                                      ; preds = %list_add_tail.exit.i
  call void @__mod_zone_page_state(ptr noundef %zone, i32 noundef 10, i32 noundef %shl.neg.i) #27
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then20.i, %list_add_tail.exit.i
  %exitcond.not.i = icmp eq i32 %inc.i, %batch.0
  br i1 %exitcond.not.i, label %rmqueue_bulk.exit, label %for.body.i

rmqueue_bulk.exit:                                ; preds = %for.inc.i, %__rmqueue.exit.i, %for.inc.i115.i.i, %land.lhs.true18.i.i, %if.then
  %i.0170.i = phi i32 [ 0, %if.then ], [ %allocated.0175.i, %for.inc.i115.i.i ], [ %allocated.0175.i, %land.lhs.true18.i.i ], [ %allocated.0175.i, %__rmqueue.exit.i ], [ %batch.0, %for.inc.i ]
  %shl23.i = shl i32 %i.0170.i, %order
  %sub24.i = sub i32 0, %shl23.i
  call void @__mod_zone_page_state(ptr noundef %zone, i32 noundef 0, i32 noundef %sub24.i) #27
  call void @_raw_spin_unlock(ptr noundef %lock.i) #27
  %174 = ptrtoint ptr %pcp to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %pcp, align 4
  %add = add i32 %175, %shl23.i
  store i32 %add, ptr %pcp, align 4
  %176 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load volatile ptr, ptr %list, align 4
  %cmp.i37.not = icmp eq ptr %177, %list
  br i1 %cmp.i37.not, label %cleanup21, label %if.end14

if.end14:                                         ; preds = %rmqueue_bulk.exit, %do.body
  %178 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %list, align 4
  %add.ptr = getelementptr i8, ptr %179, i32 -4
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %179) #27
  br i1 %call.i.i, label %if.end.i.i, label %list_del.exit

if.end.i.i:                                       ; preds = %if.end14
  %prev.i.i39 = getelementptr inbounds %struct.list_head, ptr %179, i32 0, i32 1
  %180 = ptrtoint ptr %prev.i.i39 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %prev.i.i39, align 4
  %182 = ptrtoint ptr %179 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %179, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %183, i32 0, i32 1
  %184 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %184)
  store ptr %181, ptr %prev1.i.i.i, align 4
  %185 = ptrtoint ptr %181 to i32
  call void @__asan_store4_noabort(i32 %185)
  store volatile ptr %183, ptr %181, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end14
  %186 = ptrtoint ptr %179 to i32
  call void @__asan_store4_noabort(i32 %186)
  store ptr inttoptr (i32 256 to ptr), ptr %179, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %179, i32 0, i32 1
  %187 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %187)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %188 = ptrtoint ptr %pcp to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %pcp, align 4
  %sub = add i32 %189, %shl.neg.i
  store i32 %sub, ptr %pcp, align 4
  %190 = getelementptr i8, ptr %179, i32 20
  %call.i.i.i.i.i40 = call zeroext i1 @__kasan_check_read(ptr noundef %190, i32 noundef 4) #27
  %191 = ptrtoint ptr %190 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load volatile i32, ptr %190, align 4
  %cmp.not.i.i.i41 = icmp eq i32 %192, -1
  br i1 %cmp.not.i.i.i41, label %page_expected_state.exit.i.i, label %if.end.i.i42, !prof !582

page_expected_state.exit.i.i:                     ; preds = %list_del.exit
  %mapping.i.i.i = getelementptr i8, ptr %179, i32 8
  %193 = ptrtoint ptr %mapping.i.i.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %mapping.i.i.i, align 4
  %195 = ptrtoint ptr %194 to i32
  %_refcount.i.i.i.i = getelementptr i8, ptr %179, i32 24
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #27
  %196 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %or.i.i.i = or i32 %197, %195
  %memcg_data.i.i.i = getelementptr i8, ptr %179, i32 28
  %198 = ptrtoint ptr %memcg_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %memcg_data.i.i.i, align 4
  %or3.i.i.i = or i32 %or.i.i.i, %199
  %200 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %add.ptr, align 4
  %and.i.i.i = and i32 %201, 4194303
  %or4.i.i.i = or i32 %or3.i.i.i, %and.i.i.i
  %tobool5.not.i.i.i = icmp eq i32 %or4.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %cleanup21, label %if.end.i.i42, !prof !582

if.end.i.i42:                                     ; preds = %page_expected_state.exit.i.i, %list_del.exit
  %call.i.i.i.i1.i = call zeroext i1 @__kasan_check_read(ptr noundef %190, i32 noundef 4) #27
  %202 = ptrtoint ptr %190 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load volatile i32, ptr %190, align 4
  %cmp.not.i.i2.i = icmp eq i32 %203, -1
  br i1 %cmp.not.i.i2.i, label %if.end.i.i.i43, label %if.then.i.i.i, !prof !582

if.then.i.i.i:                                    ; preds = %if.end.i.i42
  br label %if.end.i.i.i43

if.end.i.i.i43:                                   ; preds = %if.then.i.i.i, %if.end.i.i42
  %bad_reason.0.i.i.i = phi ptr [ @.str.113, %if.then.i.i.i ], [ null, %if.end.i.i42 ]
  %mapping.i.i3.i = getelementptr i8, ptr %179, i32 8
  %204 = ptrtoint ptr %mapping.i.i3.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %mapping.i.i3.i, align 4
  %cmp2.not.i.i.i = icmp eq ptr %205, null
  br i1 %cmp2.not.i.i.i, label %if.end10.i.i.i, label %if.then9.i.i.i, !prof !582

if.then9.i.i.i:                                   ; preds = %if.end.i.i.i43
  br label %if.end10.i.i.i

if.end10.i.i.i:                                   ; preds = %if.then9.i.i.i, %if.end.i.i.i43
  %bad_reason.1.i.i.i = phi ptr [ @.str.114, %if.then9.i.i.i ], [ %bad_reason.0.i.i.i, %if.end.i.i.i43 ]
  %_refcount.i.i.i4.i = getelementptr i8, ptr %179, i32 24
  %call.i.i.i.i.i5.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i4.i, i32 noundef 4) #27
  %206 = ptrtoint ptr %_refcount.i.i.i4.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load volatile i32, ptr %_refcount.i.i.i4.i, align 4
  %cmp12.not.i.i.i = icmp eq i32 %207, 0
  br i1 %cmp12.not.i.i.i, label %if.end20.i.i.i, label %if.then19.i.i.i, !prof !582

if.then19.i.i.i:                                  ; preds = %if.end10.i.i.i
  br label %if.end20.i.i.i

if.end20.i.i.i:                                   ; preds = %if.then19.i.i.i, %if.end10.i.i.i
  %bad_reason.2.i.i.i = phi ptr [ @.str.115, %if.then19.i.i.i ], [ %bad_reason.1.i.i.i, %if.end10.i.i.i ]
  %208 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %add.ptr, align 4
  %and.i.i6.i = and i32 %209, 4194303
  %tobool22.not.i.i.i = icmp eq i32 %and.i.i6.i, 0
  br i1 %tobool22.not.i.i.i, label %if.end33.i.i.i, label %if.then29.i.i.i, !prof !582

if.then29.i.i.i:                                  ; preds = %if.end20.i.i.i
  br label %if.end33.i.i.i

if.end33.i.i.i:                                   ; preds = %if.then29.i.i.i, %if.end20.i.i.i
  %bad_reason.3.i.i.i = phi ptr [ %bad_reason.2.i.i.i, %if.end20.i.i.i ], [ @.str.116, %if.then29.i.i.i ]
  %memcg_data.i.i7.i = getelementptr i8, ptr %179, i32 28
  %210 = ptrtoint ptr %memcg_data.i.i7.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %memcg_data.i.i7.i, align 4
  %tobool34.not.i.i.i = icmp eq i32 %211, 0
  br i1 %tobool34.not.i.i.i, label %check_new_pcp.exit, label %if.then41.i.i.i, !prof !582

if.then41.i.i.i:                                  ; preds = %if.end33.i.i.i
  br label %check_new_pcp.exit

check_new_pcp.exit:                               ; preds = %if.then41.i.i.i, %if.end33.i.i.i
  %bad_reason.4.i.i.i = phi ptr [ @.str.118, %if.then41.i.i.i ], [ %bad_reason.3.i.i.i, %if.end33.i.i.i ]
  call fastcc void @bad_page(ptr noundef %add.ptr, ptr noundef %bad_reason.4.i.i.i) #27
  br label %do.body

cleanup21:                                        ; preds = %page_expected_state.exit.i.i, %rmqueue_bulk.exit
  %retval.3 = phi ptr [ null, %rmqueue_bulk.exit ], [ %add.ptr, %page_expected_state.exit.i.i ]
  ret ptr %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__alloc_pages(i32 noundef %gfp, i32 noundef %order, i32 %preferred_nid, ptr noundef %nodemask) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %alloc_flags = alloca i32, align 4
  %alloc_gfp = alloca i32, align 4
  %ac = alloca %struct.alloc_context, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %alloc_flags) #27
  %0 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 1, ptr %alloc_flags, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %alloc_gfp) #27
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ac) #27
  %1 = call ptr @memset(ptr %ac, i32 0, i32 24)
  %cmp = icmp ugt i32 %order, 11
  br i1 %cmp, label %if.then, label %if.end48, !prof !584

if.then:                                          ; preds = %entry
  %and = and i32 %gfp, 8192
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %land.rhs, label %cleanup

land.rhs:                                         ; preds = %if.then
  %.b107 = load i1, ptr @__alloc_pages.__already_done, align 1
  br i1 %.b107, label %cleanup, label %if.then19, !prof !582

if.then19:                                        ; preds = %land.rhs
  store i1 true, ptr @__alloc_pages.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5364, i32 noundef 9, ptr noundef null) #27
  br label %cleanup

if.end48:                                         ; preds = %entry
  %2 = load i32, ptr @gfp_allowed_mask, align 4
  %and49 = and i32 %2, %gfp
  %3 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %flags1.i, align 4
  %and.i = and i32 %8, 269221888
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %current_gfp_context.exit, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %if.end48
  %and4.i = and i32 %8, 524288
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %if.else.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.then.i
  %and7.i = and i32 %and49, -193
  br label %if.end12.i

if.else.i:                                        ; preds = %if.then.i
  %and8.i = and i32 %8, 262144
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  %and11.i = and i32 %and49, -129
  %spec.select.i = select i1 %tobool9.not.i, i32 %and49, i32 %and11.i
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else.i, %if.then6.i
  %flags.addr.0.i = phi i32 [ %and7.i, %if.then6.i ], [ %spec.select.i, %if.else.i ]
  %and13.i = and i32 %8, 268435456
  %tobool14.not.i = icmp eq i32 %and13.i, 0
  %and16.i = and i32 %flags.addr.0.i, -9
  %spec.select25.i = select i1 %tobool14.not.i, i32 %flags.addr.0.i, i32 %and16.i
  br label %current_gfp_context.exit

current_gfp_context.exit:                         ; preds = %if.end12.i, %if.end48
  %flags.addr.1.i = phi i32 [ %and49, %if.end48 ], [ %spec.select25.i, %if.end12.i ]
  %9 = ptrtoint ptr %alloc_gfp to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %flags.addr.1.i, ptr %alloc_gfp, align 4
  %call50 = call fastcc zeroext i1 @prepare_alloc_pages(i32 noundef %flags.addr.1.i, i32 noundef %order, ptr noundef %nodemask, ptr noundef nonnull %ac, ptr noundef nonnull %alloc_gfp, ptr noundef nonnull %alloc_flags)
  br i1 %call50, label %if.end52, label %cleanup

if.end52:                                         ; preds = %current_gfp_context.exit
  %and.i108 = and i32 %flags.addr.1.i, 2048
  %10 = ptrtoint ptr %alloc_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %alloc_flags, align 4
  %or = or i32 %11, %and.i108
  store i32 %or, ptr %alloc_flags, align 4
  %12 = ptrtoint ptr %alloc_gfp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %alloc_gfp, align 4
  %call54 = call fastcc ptr @get_page_from_freelist(i32 noundef %13, i32 noundef %order, i32 noundef %or, ptr noundef nonnull %ac)
  %tobool55.not = icmp eq ptr %call54, null
  br i1 %tobool55.not, label %if.end63, label %out, !prof !584

if.end63:                                         ; preds = %if.end52
  %14 = ptrtoint ptr %alloc_gfp to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %flags.addr.1.i, ptr %alloc_gfp, align 4
  %spread_dirty_pages = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 5
  %15 = ptrtoint ptr %spread_dirty_pages to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 0, ptr %spread_dirty_pages, align 4
  %nodemask64 = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 1
  %16 = ptrtoint ptr %nodemask64 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %nodemask, ptr %nodemask64, align 4
  %call65 = call fastcc ptr @__alloc_pages_slowpath(i32 noundef %flags.addr.1.i, i32 noundef %order, ptr noundef nonnull %ac)
  br label %out

out:                                              ; preds = %if.end63, %if.end52
  %page.0 = phi ptr [ %call54, %if.end52 ], [ %call65, %if.end63 ]
  callbr void asm sideeffect "1:\0A\09b ${1:l}\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memcg_kmem_enabled_key, i32 1), ptr blockaddress(@__alloc_pages, %if.end81)) #27
          to label %memcg_kmem_enabled.exit [label %if.end81], !srcloc !601

memcg_kmem_enabled.exit:                          ; preds = %out
  %and67 = and i32 %flags.addr.1.i, 4194304
  %tobool68.not = icmp eq i32 %and67, 0
  br i1 %tobool68.not, label %if.end81, label %land.lhs.true69

land.lhs.true69:                                  ; preds = %memcg_kmem_enabled.exit
  %tobool70.not = icmp eq ptr %page.0, null
  br i1 %tobool70.not, label %if.end81, label %land.lhs.true71

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %call72 = call i32 @__memcg_kmem_charge_page(ptr noundef nonnull %page.0, i32 noundef %flags.addr.1.i, i32 noundef %order) #27
  %cmp73.not = icmp eq i32 %call72, 0
  br i1 %cmp73.not, label %if.end81, label %if.then80, !prof !582

if.then80:                                        ; preds = %land.lhs.true71
  call void @__free_pages(ptr noundef nonnull %page.0, i32 noundef %order)
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %land.lhs.true71, %land.lhs.true69, %memcg_kmem_enabled.exit, %out
  %page.1 = phi ptr [ null, %if.then80 ], [ %page.0, %land.lhs.true71 ], [ null, %land.lhs.true69 ], [ %page.0, %memcg_kmem_enabled.exit ], [ %page.0, %out ]
  %17 = ptrtoint ptr %alloc_gfp to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %alloc_gfp, align 4
  %migratetype = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 3
  %19 = ptrtoint ptr %migratetype to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %migratetype, align 4
  call fastcc void @trace_mm_page_alloc(ptr noundef %page.1, i32 noundef %order, i32 noundef %18, i32 noundef %20)
  br label %cleanup

cleanup:                                          ; preds = %if.end81, %current_gfp_context.exit, %if.then19, %land.rhs, %if.then
  %retval.0 = phi ptr [ %page.1, %if.end81 ], [ null, %if.then ], [ null, %if.then19 ], [ null, %land.rhs ], [ null, %current_gfp_context.exit ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ac) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %alloc_gfp) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %alloc_flags) #27
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @get_page_from_freelist(i32 noundef %gfp_mask, i32 noundef %order, i32 noundef %alloc_flags, ptr nocapture noundef readonly %ac) unnamed_addr #1 align 64 {
retry:
  call void @llvm.arm.gnu.eabi.mcount()
  %movable_pages.i.i.i.i = alloca i32, align 4
  %preferred_zoneref = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 2
  %0 = ptrtoint ptr %preferred_zoneref to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %preferred_zoneref, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %zone.0324 = load ptr, ptr %1, align 4
  %tobool2.not325 = icmp eq ptr %zone.0324, null
  br i1 %tobool2.not325, label %cleanup80, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %retry
  %and3 = and i32 %alloc_flags, 64
  %tobool4.not = icmp eq i32 %and3, 0
  %spread_dirty_pages = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 5
  %and33 = and i32 %alloc_flags, 3
  %highest_zoneidx = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 4
  %tobool.not.i131 = icmp eq i32 %order, 0
  %and.i.i = and i32 %alloc_flags, 24
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %and5.i.i = and i32 %alloc_flags, 128
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  %and.i = and i32 %gfp_mask, 512
  %tobool8.not.i = icmp ne i32 %and.i, 0
  %3 = and i1 %tobool.not.i131, %tobool8.not.i
  %cmp12.i = icmp eq i32 %and33, 0
  %and36 = and i32 %alloc_flags, 4
  %tobool37.not = icmp eq i32 %and36, 0
  %migratetype154 = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 3
  %cmp.i22.i = icmp ult i32 %order, 4
  %mul.i.i.i = mul nuw nsw i32 %order, 3
  %and6.i = and i32 %gfp_mask, 32768
  %tobool7.not.i = icmp ne i32 %and6.i, 0
  %cmp8.i = icmp ugt i32 %order, 1
  %spec.select.i = and i1 %cmp8.i, %tobool7.not.i
  %and68.i = and i32 %alloc_flags, 16
  %tobool69.not.i = icmp ne i32 %and68.i, 0
  %4 = add i32 %order, -1
  %5 = icmp ult i32 %4, 11
  %6 = and i1 %5, %tobool69.not.i
  %cmp35.i.i.i.i = icmp ult i32 %order, 12
  %cmp35.i.not.i.i = xor i1 %cmp35.i.i.i.i, true
  %brmerge.i.i = or i1 %tobool6.not.i.i, %cmp35.i.not.i.i
  %cmp.not110.i.i.i = icmp sgt i32 %order, 11
  %cmp11114.i.i.i = icmp slt i32 %order, 12
  %and.i.i.i.i = and i32 %alloc_flags, 2048
  %tobool.not.i.i138.i.i = icmp eq i32 %and.i.i.i.i, 0
  %shl.i.i = shl nuw i32 1, %order
  %cmp18.not.i.i = icmp eq i32 %order, 31
  %smax.i.i = call i32 @llvm.smax.i32(i32 %shl.i.i, i32 1) #27
  %sub.i141 = sub i32 0, %shl.i.i
  %nodemask = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 1
  %tobool37.not.not = xor i1 %tobool37.not, true
  br label %for.body

for.body:                                         ; preds = %next_zones_zonelist.exit, %for.body.lr.ph
  %zone.0329 = phi ptr [ %zone.0324, %for.body.lr.ph ], [ %zone.0, %next_zones_zonelist.exit ]
  %last_pgdat_dirty_limit.1327 = phi ptr [ null, %for.body.lr.ph ], [ %last_pgdat_dirty_limit.2.ph, %next_zones_zonelist.exit ]
  %z.0326 = phi ptr [ %1, %for.body.lr.ph ], [ %retval.0.i, %next_zones_zonelist.exit ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_enabled_key, ptr blockaddress(@get_page_from_freelist, %l_yes.i.i)) #27
          to label %cpusets_enabled.exit [label %l_yes.i.i], !srcloc !583

l_yes.i.i:                                        ; preds = %for.body
  br label %cpusets_enabled.exit

cpusets_enabled.exit:                             ; preds = %l_yes.i.i, %for.body
  %retval.0.i.i = phi i1 [ false, %l_yes.i.i ], [ true, %for.body ]
  %or.cond = or i1 %tobool4.not, %retval.0.i.i
  br i1 %or.cond, label %if.end, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %cpusets_enabled.exit
  %call1.i = call zeroext i1 @__cpuset_node_allowed(i32 noundef 0, i32 noundef %gfp_mask) #27
  br i1 %call1.i, label %if.end, label %for.inc

if.end:                                           ; preds = %land.lhs.true5, %cpusets_enabled.exit
  %7 = ptrtoint ptr %spread_dirty_pages to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %spread_dirty_pages, align 4, !range !593
  %tobool7.not = icmp eq i8 %8, 0
  br i1 %tobool7.not, label %if.end16, label %if.then8

if.then8:                                         ; preds = %if.end
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 4
  %9 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %zone_pgdat, align 4
  %cmp = icmp eq ptr %last_pgdat_dirty_limit.1327, %10
  br i1 %cmp, label %for.inc, label %if.end10

if.end10:                                         ; preds = %if.then8
  %call12 = call zeroext i1 @node_dirty_ok(ptr noundef %10) #27
  br i1 %call12, label %if.end16, label %if.then13

if.then13:                                        ; preds = %if.end10
  %11 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %zone_pgdat, align 4
  br label %for.inc

if.end16:                                         ; preds = %if.end10, %if.end
  %arrayidx = getelementptr [3 x i32], ptr %zone.0329, i32 0, i32 %and33
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %watermark_boost = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 1
  %15 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %watermark_boost, align 4
  %add = add i32 %16, %14
  %17 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %highest_zoneidx, align 4
  %arrayidx.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 37, i32 0
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i, i32 noundef 4) #27
  %19 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %arrayidx.i.i, align 4
  %21 = call i32 @llvm.smax.i32(i32 %20, i32 0) #27
  br i1 %tobool.not.i131, label %if.then.i, label %if.end3.i.thread

if.then.i:                                        ; preds = %if.end16
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end.i.i, !prof !582

if.then.i.i:                                      ; preds = %if.then.i
  %nr_reserved_highatomic.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 2
  %22 = ptrtoint ptr %nr_reserved_highatomic.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %nr_reserved_highatomic.i.i, align 16
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.then.i
  %unusable_free.0.i.i = phi i32 [ %23, %if.then.i.i ], [ 0, %if.then.i ]
  br i1 %tobool6.not.i.i, label %if.then7.i.i, label %__zone_watermark_unusable_free.exit.i

if.then7.i.i:                                     ; preds = %if.end.i.i
  %arrayidx.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 37, i32 10
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i.i, i32 noundef 4) #27
  %24 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %26 = call i32 @llvm.smax.i32(i32 %25, i32 0) #27
  %add8.i.i = add i32 %26, %unusable_free.0.i.i
  br label %__zone_watermark_unusable_free.exit.i

__zone_watermark_unusable_free.exit.i:            ; preds = %if.then7.i.i, %if.end.i.i
  %unusable_free.1.i.i = phi i32 [ %unusable_free.0.i.i, %if.end.i.i ], [ %add8.i.i, %if.then7.i.i ]
  %sub.i = sub i32 %21, %unusable_free.1.i.i
  %arrayidx.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 3, i32 %18
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %28, %add
  %cmp.i = icmp ugt i32 %sub.i, %add.i
  br i1 %cmp.i, label %if.then.i134.sink.split, label %if.end3.i

if.end3.i:                                        ; preds = %__zone_watermark_unusable_free.exit.i
  %call4.i = call zeroext i1 @__zone_watermark_ok(ptr noundef nonnull %zone.0329, i32 noundef %order, i32 noundef %add, i32 noundef %18, i32 noundef %alloc_flags, i32 noundef %21) #27
  br i1 %call4.i, label %try_this_zone, label %if.end6.i

if.end3.i.thread:                                 ; preds = %if.end16
  %call4.i453 = call zeroext i1 @__zone_watermark_ok(ptr noundef nonnull %zone.0329, i32 noundef %order, i32 noundef %add, i32 noundef %18, i32 noundef %alloc_flags, i32 noundef %21) #27
  %brmerge = or i1 %call4.i453, %tobool37.not.not
  br i1 %brmerge, label %try_this_zone, label %for.inc

if.end6.i:                                        ; preds = %if.end3.i
  br i1 %3, label %land.lhs.true9.i, label %if.then35

land.lhs.true9.i:                                 ; preds = %if.end6.i
  %29 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %watermark_boost, align 4
  %tobool10.not.i = icmp ne i32 %30, 0
  %or.cond40.i = and i1 %cmp12.i, %tobool10.not.i
  br i1 %or.cond40.i, label %zone_watermark_fast.exit, label %if.then35, !prof !638

zone_watermark_fast.exit:                         ; preds = %land.lhs.true9.i
  %31 = ptrtoint ptr %zone.0329 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %zone.0329, align 128
  %call17.i = call zeroext i1 @__zone_watermark_ok(ptr noundef nonnull %zone.0329, i32 noundef 0, i32 noundef %32, i32 noundef %18, i32 noundef %alloc_flags, i32 noundef %21) #27
  br i1 %call17.i, label %if.then.i134.sink.split, label %if.then35

if.then35:                                        ; preds = %zone_watermark_fast.exit, %land.lhs.true9.i, %if.end6.i
  br i1 %tobool37.not, label %for.inc, label %try_this_zone

try_this_zone:                                    ; preds = %if.then35, %if.end3.i.thread, %if.end3.i
  %33 = ptrtoint ptr %migratetype154 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %migratetype154, align 4
  br i1 %cmp.i22.i, label %if.then.i134, label %if.end5.i, !prof !582

if.then.i134.sink.split:                          ; preds = %zone_watermark_fast.exit, %__zone_watermark_unusable_free.exit.i
  %35 = ptrtoint ptr %migratetype154 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %migratetype154, align 4
  br label %if.then.i134

if.then.i134:                                     ; preds = %if.then.i134.sink.split, %try_this_zone
  %37 = phi i32 [ %34, %try_this_zone ], [ %36, %if.then.i134.sink.split ]
  %cmp.not.i133 = icmp eq i32 %37, 1
  %or.cond.i = and i1 %tobool6.not.i.i, %cmp.not.i133
  br i1 %or.cond.i, label %if.end5.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i134
  %38 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %and.i.i.i = and i32 %38, 128
  %tobool.not.i23.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i23.i, label %if.then.i.i135, label %order_to_pindex.exit.i.i

if.then.i.i135:                                   ; preds = %if.then3.i
  call void @trace_hardirqs_off() #27
  br label %order_to_pindex.exit.i.i

order_to_pindex.exit.i.i:                         ; preds = %if.then.i.i135, %if.then3.i
  %39 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i1.i.i = and i32 %39, -16384
  %40 = inttoptr i32 %and.i1.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 3
  %41 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i24.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx.i24.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx.i24.i, align 4
  %add.i.i = add i32 %44, ptrtoint (ptr @pagesets to i32)
  %45 = inttoptr i32 %add.i.i to ptr
  call fastcc void @local_lock_acquire(ptr noundef %45) #27
  %per_cpu_pageset.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 5
  %46 = ptrtoint ptr %per_cpu_pageset.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %per_cpu_pageset.i.i, align 8
  %48 = ptrtoint ptr %47 to i32
  %49 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %cpu.i.i, align 4
  %arrayidx29.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %50
  %51 = ptrtoint ptr %arrayidx29.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx29.i.i, align 4
  %add30.i.i = add i32 %52, %48
  %53 = inttoptr i32 %add30.i.i to ptr
  %free_factor.i.i = getelementptr inbounds %struct.per_cpu_pages, ptr %53, i32 0, i32 3
  %54 = ptrtoint ptr %free_factor.i.i to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %free_factor.i.i, align 4
  %56 = ashr i16 %55, 1
  store i16 %56, ptr %free_factor.i.i, align 4
  %add.i.i.i = add i32 %37, %mul.i.i.i
  %arrayidx34.i.i = getelementptr %struct.per_cpu_pages, ptr %53, i32 0, i32 4, i32 %add.i.i.i
  %call35.i.i = call fastcc ptr @__rmqueue_pcplist(ptr noundef nonnull %zone.0329, i32 noundef %order, i32 noundef %37, i32 noundef %alloc_flags, ptr noundef %53, ptr noundef %arrayidx34.i.i) #27
  %57 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu.i.i, align 4
  %arrayidx46.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx46.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx46.i.i, align 4
  %add47.i.i = add i32 %60, ptrtoint (ptr @pagesets to i32)
  %61 = inttoptr i32 %add47.i.i to ptr
  call fastcc void @local_lock_release(ptr noundef %61) #27
  br i1 %tobool.not.i23.i, label %if.then57.i.i, label %do.body59.i.i

if.then57.i.i:                                    ; preds = %order_to_pindex.exit.i.i
  call void @trace_hardirqs_on() #27
  br label %do.body59.i.i

do.body59.i.i:                                    ; preds = %if.then57.i.i, %order_to_pindex.exit.i.i
  %62 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i.i26.i = and i32 %62, 128
  %tobool67.not.i.i = icmp eq i32 %and.i.i.i26.i, 0
  br i1 %tobool67.not.i.i, label %if.then71.i.i, label %do.end74.i.i, !prof !584

if.then71.i.i:                                    ; preds = %do.body59.i.i
  call void @warn_bogus_irq_restore() #27
  br label %do.end74.i.i

do.end74.i.i:                                     ; preds = %if.then71.i.i, %do.body59.i.i
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %38) #27, !srcloc !615
  %tobool81.not.i.i = icmp eq ptr %call35.i.i, null
  br i1 %tobool81.not.i.i, label %out.i, label %out.sink.split.i

if.end5.i:                                        ; preds = %if.then.i134, %try_this_zone
  %63 = phi i32 [ 1, %if.then.i134 ], [ %34, %try_this_zone ]
  br i1 %spec.select.i, label %land.rhs14.i, label %if.end47.i

land.rhs14.i:                                     ; preds = %if.end5.i
  %.b1.i = load i1, ptr @rmqueue.__already_done, align 1
  br i1 %.b1.i, label %if.end47.i, label %if.then25.i, !prof !582

if.then25.i:                                      ; preds = %land.rhs14.i
  store i1 true, ptr @rmqueue.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 3708, i32 noundef 9, ptr noundef null) #27
  br label %if.end47.i

if.end47.i:                                       ; preds = %if.then25.i, %land.rhs14.i, %if.end5.i
  %lock.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 22
  %call60.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #27
  %zone_start_pfn.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 10
  %spanned_pages.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 12
  %arrayidx.i146.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 37, i32 10
  %64 = and i32 %63, 1073741822
  %65 = icmp eq i32 %64, 4
  %arrayidx125.i.i.i.i = getelementptr [6 x [3 x i32]], ptr @fallbacks, i32 0, i32 %63, i32 0
  %cmp5.i.i.i = icmp eq i32 %63, 1
  %managed_pages.i.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 11
  %arrayidx.i.i91.i.i.i = getelementptr [3 x i32], ptr %zone.0329, i32 0, i32 2
  %flags.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 21
  %cmp.i53.i.i.i.i = icmp slt i32 %63, 3
  br label %do.body65.i

do.body65.i:                                      ; preds = %do.body65.i.backedge, %if.end47.i
  br i1 %6, label %for.body.i.i, label %if.then77.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %do.body65.i
  %current_order.036.i.i = phi i32 [ %inc.i.i, %for.inc.i.i ], [ %order, %do.body65.i ]
  %arrayidx.i.i.i137 = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %current_order.036.i.i, i32 0, i32 3
  %66 = ptrtoint ptr %arrayidx.i.i.i137 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile ptr, ptr %arrayidx.i.i.i137, align 4
  %cmp.not.i.i.i = icmp eq ptr %67, %arrayidx.i.i.i137
  %add.ptr.i.i.i = getelementptr i8, ptr %67, i32 -4
  %tobool.not37.i.i = icmp eq ptr %add.ptr.i.i.i, null
  %tobool.not.i.i138 = or i1 %cmp.not.i.i.i, %tobool.not37.i.i
  br i1 %tobool.not.i.i138, label %for.inc.i.i, label %if.end.i.i139

if.end.i.i139:                                    ; preds = %for.body.i.i
  call fastcc void @del_page_from_free_list(ptr noundef nonnull %add.ptr.i.i.i, ptr noundef nonnull %zone.0329, i32 noundef %current_order.036.i.i) #27
  %cmp48.i.i.i = icmp sgt i32 %current_order.036.i.i, %order
  br i1 %cmp48.i.i.i, label %while.body.lr.ph.i.i.i, label %land.rhs82.i.sink.split

while.body.lr.ph.i.i.i:                           ; preds = %if.end.i.i139
  %shl.i.i.i = shl nuw nsw i32 1, %current_order.036.i.i
  br label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %set_buddy_order.exit.i.i.i, %while.body.lr.ph.i.i.i
  %size.050.i.i.i = phi i32 [ %shl.i.i.i, %while.body.lr.ph.i.i.i ], [ %shr.i.i.i, %set_buddy_order.exit.i.i.i ]
  %high.addr.049.i.i.i = phi i32 [ %current_order.036.i.i, %while.body.lr.ph.i.i.i ], [ %dec.i.i.i, %set_buddy_order.exit.i.i.i ]
  %dec.i.i.i = add nsw i32 %high.addr.049.i.i.i, -1
  %shr.i.i.i = lshr i32 %size.050.i.i.i, 1
  %arrayidx.i16.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i, i32 %shr.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %68 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i.i = ptrtoint ptr %arrayidx.i16.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i.i = ptrtoint ptr %68 to i32
  %sub.ptr.sub.i.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %69 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i.i = add i32 %sub.ptr.div.i.i.i.i.i, %69
  %70 = ptrtoint ptr %zone_start_pfn.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %zone_start_pfn.i.i.i.i.i, align 4
  %72 = ptrtoint ptr %spanned_pages.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %spanned_pages.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i.i = icmp ule i32 %71, %add.i.i.i.i.i
  %add.i.i.i.i.i.i.i = add i32 %73, %71
  %cmp1.i.i.i.i.i.i = icmp ugt i32 %add.i.i.i.i.i.i.i, %add.i.i.i.i.i
  %or.cond.i.i.i.i.i = select i1 %cmp.not.i.i.i.i.i.i, i1 %cmp1.i.i.i.i.i.i, i1 false
  br i1 %or.cond.i.i.i.i.i, label %if.end.i.i.i.i, label %bad_range.exit.thread.i.i.i

bad_range.exit.thread.i.i.i:                      ; preds = %while.body.i.i.i
  %name.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 15
  %74 = ptrtoint ptr %name.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %name.i.i.i.i.i, align 16
  %call10.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134, i32 noundef %add.i.i.i.i.i, i32 noundef 0, ptr noundef %75, i32 noundef %71, i32 noundef %add.i.i.i.i.i.i.i) #29
  br label %if.then.i.i.i

if.end.i.i.i.i:                                   ; preds = %while.body.i.i.i
  %76 = ptrtoint ptr %arrayidx.i16.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %arrayidx.i16.i.i, align 4
  %cmp.i.not.i.i.i.i.i.i.i = icmp eq i32 %77, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i, label %bad_range.exit.i.i.i, !prof !584

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

bad_range.exit.i.i.i:                             ; preds = %if.end.i.i.i.i
  %shr.i.i.i.i.i.i.i = lshr i32 %77, 30
  %arrayidx.i.i.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i.i
  %cmp.not.i.not.i.not.i.i.i = icmp eq ptr %arrayidx.i.i.i.i.i.i, %zone.0329
  br i1 %cmp.not.i.not.i.not.i.i.i, label %do.end9.i.i.i, label %if.then.i.i.i, !prof !582

if.then.i.i.i:                                    ; preds = %bad_range.exit.i.i.i, %bad_range.exit.thread.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i, ptr noundef nonnull @.str.145) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2304, 0\0A.popsection", ""() #27, !srcloc !640
  unreachable

do.end9.i.i.i:                                    ; preds = %bad_range.exit.i.i.i
  %78 = getelementptr %struct.page, ptr %add.ptr.i.i.i, i32 %shr.i.i.i, i32 1
  %arrayidx1.i.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %dec.i.i.i, i32 0, i32 3
  %79 = ptrtoint ptr %arrayidx1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %arrayidx1.i.i.i.i, align 4
  %call.i.i.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %78, ptr noundef %arrayidx1.i.i.i.i, ptr noundef %80) #27
  br i1 %call.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i, label %add_to_free_list.exit.i.i.i

if.end.i.i.i.i.i.i:                               ; preds = %do.end9.i.i.i
  %prev1.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %80, i32 0, i32 1
  %81 = ptrtoint ptr %prev1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %78, ptr %prev1.i.i.i.i.i.i, align 4
  %82 = ptrtoint ptr %78 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %80, ptr %78, align 4
  %prev3.i.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i, i32 %shr.i.i.i, i32 1, i32 0, i32 0, i32 1
  %83 = ptrtoint ptr %prev3.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %arrayidx1.i.i.i.i, ptr %prev3.i.i.i.i.i.i, align 4
  %84 = ptrtoint ptr %arrayidx1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store volatile ptr %78, ptr %arrayidx1.i.i.i.i, align 4
  br label %add_to_free_list.exit.i.i.i

add_to_free_list.exit.i.i.i:                      ; preds = %if.end.i.i.i.i.i.i, %do.end9.i.i.i
  %nr_free.i.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %dec.i.i.i, i32 1
  %85 = ptrtoint ptr %nr_free.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %nr_free.i.i.i.i, align 4
  %inc.i.i.i.i = add i32 %86, 1
  store i32 %inc.i.i.i.i, ptr %nr_free.i.i.i.i, align 4
  %private1.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i, i32 %shr.i.i.i, i32 1, i32 0, i32 3
  %87 = ptrtoint ptr %private1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %dec.i.i.i, ptr %private1.i.i.i.i.i, align 4
  %88 = getelementptr %struct.page, ptr %add.ptr.i.i.i, i32 %shr.i.i.i, i32 2
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %88, align 4
  %cmp.i.i.i.i.i = icmp ult i32 %90, -268435456
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i.i.i.i, label %set_buddy_order.exit.i.i.i, !prof !584

if.then.i.i.i.i.i:                                ; preds = %add_to_free_list.exit.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i, ptr noundef nonnull @.str.137) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 878, 0\0A.popsection", ""() #27, !srcloc !636
  unreachable

set_buddy_order.exit.i.i.i:                       ; preds = %add_to_free_list.exit.i.i.i
  %and7.i.i.i.i.i = and i32 %90, -129
  %91 = ptrtoint ptr %88 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %and7.i.i.i.i.i, ptr %88, align 4
  %cmp.i.i.i = icmp sgt i32 %dec.i.i.i, %order
  br i1 %cmp.i.i.i, label %while.body.i.i.i, label %land.rhs82.i.sink.split

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add i32 %current_order.036.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, 12
  br i1 %exitcond.not.i.i, label %if.then77.i, label %for.body.i.i

if.then77.i:                                      ; preds = %for.inc.i.i, %do.body65.i
  br i1 %tobool6.not.i.i, label %retry.i.i.preheader, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %if.then77.i
  %call.i.i.i.i.i140 = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i146.i.i, i32 noundef 4) #27
  %92 = ptrtoint ptr %arrayidx.i146.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %arrayidx.i146.i.i, align 4
  %94 = call i32 @llvm.smax.i32(i32 %93, i32 0) #27
  %call.i.i.i148.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i, i32 noundef 4) #27
  %95 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %arrayidx.i.i, align 4
  %97 = call i32 @llvm.smax.i32(i32 %96, i32 0) #27
  %div44.i.i = lshr i32 %97, 1
  %cmp.i.i = icmp ugt i32 %94, %div44.i.i
  %or.cond.i.i = and i1 %cmp35.i.i.i.i, %cmp.i.i
  br i1 %or.cond.i.i, label %for.body.i.i.i.i, label %retry.i.i.preheader

for.body.i.i.i.i:                                 ; preds = %for.inc.i.i.i.i, %land.lhs.true.i.i
  %current_order.036.i.i.i.i = phi i32 [ %inc.i.i.i10.i, %for.inc.i.i.i.i ], [ %order, %land.lhs.true.i.i ]
  %arrayidx.i.i.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %current_order.036.i.i.i.i, i32 0, i32 4
  %98 = ptrtoint ptr %arrayidx.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load volatile ptr, ptr %arrayidx.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i = icmp eq ptr %99, %arrayidx.i.i.i.i.i
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %99, i32 -4
  %tobool.not37.i.i.i.i = icmp eq ptr %add.ptr.i.i.i.i.i, null
  %tobool.not.i.i.i.i = or i1 %cmp.not.i.i.i.i.i, %tobool.not37.i.i.i.i
  br i1 %tobool.not.i.i.i.i, label %for.inc.i.i.i.i, label %if.end.i.i.i4.i

if.end.i.i.i4.i:                                  ; preds = %for.body.i.i.i.i
  call fastcc void @del_page_from_free_list(ptr noundef nonnull %add.ptr.i.i.i.i.i, ptr noundef nonnull %zone.0329, i32 noundef %current_order.036.i.i.i.i) #27
  %cmp48.i.i.i.i.i = icmp sgt i32 %current_order.036.i.i.i.i, %order
  br i1 %cmp48.i.i.i.i.i, label %while.body.lr.ph.i.i.i.i.i, label %land.rhs82.i.sink.split

while.body.lr.ph.i.i.i.i.i:                       ; preds = %if.end.i.i.i4.i
  %shl.i.i.i.i.i = shl nuw nsw i32 1, %current_order.036.i.i.i.i
  br label %while.body.i.i.i.i.i

while.body.i.i.i.i.i:                             ; preds = %set_buddy_order.exit.i.i.i.i.i, %while.body.lr.ph.i.i.i.i.i
  %size.050.i.i.i.i.i = phi i32 [ %shl.i.i.i.i.i, %while.body.lr.ph.i.i.i.i.i ], [ %shr.i.i.i.i.i, %set_buddy_order.exit.i.i.i.i.i ]
  %high.addr.049.i.i.i.i.i = phi i32 [ %current_order.036.i.i.i.i, %while.body.lr.ph.i.i.i.i.i ], [ %dec.i.i.i.i.i, %set_buddy_order.exit.i.i.i.i.i ]
  %dec.i.i.i.i.i = add nsw i32 %high.addr.049.i.i.i.i.i, -1
  %shr.i.i.i.i.i = lshr i32 %size.050.i.i.i.i.i, 1
  %arrayidx.i16.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %100 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i.i.i.i = ptrtoint ptr %arrayidx.i16.i.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i = ptrtoint ptr %100 to i32
  %sub.ptr.sub.i.i.i.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %101 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i.i.i5.i = add i32 %sub.ptr.div.i.i.i.i.i.i.i, %101
  %102 = ptrtoint ptr %zone_start_pfn.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %zone_start_pfn.i.i.i.i.i, align 4
  %104 = ptrtoint ptr %spanned_pages.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %spanned_pages.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i.i.i.i = icmp ule i32 %103, %add.i.i.i.i.i.i5.i
  %add.i.i.i.i.i.i.i.i.i = add i32 %105, %103
  %cmp1.i.i.i.i.i.i.i.i = icmp ugt i32 %add.i.i.i.i.i.i.i.i.i, %add.i.i.i.i.i.i5.i
  %or.cond.i.i.i.i.i.i.i = select i1 %cmp.not.i.i.i.i.i.i.i.i, i1 %cmp1.i.i.i.i.i.i.i.i, i1 false
  br i1 %or.cond.i.i.i.i.i.i.i, label %if.end.i.i.i.i.i6.i, label %bad_range.exit.thread.i.i.i.i.i

bad_range.exit.thread.i.i.i.i.i:                  ; preds = %while.body.i.i.i.i.i
  %name.i.i.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 15
  %106 = ptrtoint ptr %name.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %name.i.i.i.i.i.i.i, align 16
  %call10.i.i.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134, i32 noundef %add.i.i.i.i.i.i5.i, i32 noundef 0, ptr noundef %107, i32 noundef %103, i32 noundef %add.i.i.i.i.i.i.i.i.i) #29
  br label %if.then.i.i.i.i7.i

if.end.i.i.i.i.i6.i:                              ; preds = %while.body.i.i.i.i.i
  %108 = ptrtoint ptr %arrayidx.i16.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %arrayidx.i16.i.i.i.i, align 4
  %cmp.i.not.i.i.i.i.i.i.i.i.i = icmp eq i32 %109, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i.i, label %bad_range.exit.i.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i.i.i.i:                        ; preds = %if.end.i.i.i.i.i6.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

bad_range.exit.i.i.i.i.i:                         ; preds = %if.end.i.i.i.i.i6.i
  %shr.i.i.i.i.i.i.i.i.i = lshr i32 %109, 30
  %arrayidx.i.i.i.i.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i.i.i.i
  %cmp.not.i.not.i.not.i.i.i.i.i = icmp eq ptr %arrayidx.i.i.i.i.i.i.i.i, %zone.0329
  br i1 %cmp.not.i.not.i.not.i.i.i.i.i, label %do.end9.i.i.i.i.i, label %if.then.i.i.i.i7.i, !prof !582

if.then.i.i.i.i7.i:                               ; preds = %bad_range.exit.i.i.i.i.i, %bad_range.exit.thread.i.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i.i, ptr noundef nonnull @.str.145) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2304, 0\0A.popsection", ""() #27, !srcloc !640
  unreachable

do.end9.i.i.i.i.i:                                ; preds = %bad_range.exit.i.i.i.i.i
  %110 = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i, i32 1
  %arrayidx1.i.i.i.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %dec.i.i.i.i.i, i32 0, i32 4
  %111 = ptrtoint ptr %arrayidx1.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %arrayidx1.i.i.i.i.i.i, align 4
  %call.i.i.i.i.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %110, ptr noundef %arrayidx1.i.i.i.i.i.i, ptr noundef %112) #27
  br i1 %call.i.i.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i.i.i, label %add_to_free_list.exit.i.i.i.i.i

if.end.i.i.i.i.i.i.i.i:                           ; preds = %do.end9.i.i.i.i.i
  %prev1.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %112, i32 0, i32 1
  %113 = ptrtoint ptr %prev1.i.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %110, ptr %prev1.i.i.i.i.i.i.i.i, align 4
  %114 = ptrtoint ptr %110 to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %112, ptr %110, align 4
  %prev3.i.i.i.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i, i32 1, i32 0, i32 0, i32 1
  %115 = ptrtoint ptr %prev3.i.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store ptr %arrayidx1.i.i.i.i.i.i, ptr %prev3.i.i.i.i.i.i.i.i, align 4
  %116 = ptrtoint ptr %arrayidx1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store volatile ptr %110, ptr %arrayidx1.i.i.i.i.i.i, align 4
  br label %add_to_free_list.exit.i.i.i.i.i

add_to_free_list.exit.i.i.i.i.i:                  ; preds = %if.end.i.i.i.i.i.i.i.i, %do.end9.i.i.i.i.i
  %nr_free.i.i.i.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %dec.i.i.i.i.i, i32 1
  %117 = ptrtoint ptr %nr_free.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %nr_free.i.i.i.i.i.i, align 4
  %inc.i.i.i.i.i.i = add i32 %118, 1
  store i32 %inc.i.i.i.i.i.i, ptr %nr_free.i.i.i.i.i.i, align 4
  %private1.i.i.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i, i32 1, i32 0, i32 3
  %119 = ptrtoint ptr %private1.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 %dec.i.i.i.i.i, ptr %private1.i.i.i.i.i.i.i, align 4
  %120 = getelementptr %struct.page, ptr %add.ptr.i.i.i.i.i, i32 %shr.i.i.i.i.i, i32 2
  %121 = ptrtoint ptr %120 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %120, align 4
  %cmp.i.i.i.i.i.i.i = icmp ult i32 %122, -268435456
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i8.i, label %set_buddy_order.exit.i.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i8.i:                           ; preds = %add_to_free_list.exit.i.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i.i, ptr noundef nonnull @.str.137) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 878, 0\0A.popsection", ""() #27, !srcloc !636
  unreachable

set_buddy_order.exit.i.i.i.i.i:                   ; preds = %add_to_free_list.exit.i.i.i.i.i
  %and7.i.i.i.i.i.i.i = and i32 %122, -129
  %123 = ptrtoint ptr %120 to i32
  call void @__asan_store4_noabort(i32 %123)
  store i32 %and7.i.i.i.i.i.i.i, ptr %120, align 4
  %cmp.i.i.i.i9.i = icmp sgt i32 %dec.i.i.i.i.i, %order
  br i1 %cmp.i.i.i.i9.i, label %while.body.i.i.i.i.i, label %do.cond80.i

for.inc.i.i.i.i:                                  ; preds = %for.body.i.i.i.i
  %inc.i.i.i10.i = add i32 %current_order.036.i.i.i.i, 1
  %exitcond.not.i.i.i.i = icmp eq i32 %inc.i.i.i10.i, 12
  br i1 %exitcond.not.i.i.i.i, label %retry.i.i.preheader, label %for.body.i.i.i.i

retry.i.i.preheader:                              ; preds = %for.inc.i.i.i.i, %land.lhs.true.i.i, %if.then77.i
  br label %retry.i.i

retry.i.i:                                        ; preds = %__rmqueue_fallback.exit.i.i, %retry.i.i.preheader
  br i1 %cmp35.i.i.i.i, label %for.body.i.i.i, label %land.lhs.true18.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i, %retry.i.i
  %current_order.036.i.i.i = phi i32 [ %inc.i.i.i, %for.inc.i.i.i ], [ %order, %retry.i.i ]
  %arrayidx.i.i11.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %current_order.036.i.i.i
  %arrayidx.i.i.i12.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i.i11.i, i32 0, i32 %63
  %124 = ptrtoint ptr %arrayidx.i.i.i12.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile ptr, ptr %arrayidx.i.i.i12.i, align 4
  %cmp.not.i.i.i.i = icmp eq ptr %125, %arrayidx.i.i.i12.i
  %add.ptr.i.i.i.i = getelementptr i8, ptr %125, i32 -4
  %tobool.not37.i.i.i = icmp eq ptr %add.ptr.i.i.i.i, null
  %tobool.not.i.i.i = or i1 %cmp.not.i.i.i.i, %tobool.not37.i.i.i
  br i1 %tobool.not.i.i.i, label %for.inc.i.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %for.body.i.i.i
  call fastcc void @del_page_from_free_list(ptr noundef nonnull %add.ptr.i.i.i.i, ptr noundef nonnull %zone.0329, i32 noundef %current_order.036.i.i.i) #27
  %cmp48.i.i.i.i = icmp sgt i32 %current_order.036.i.i.i, %order
  br i1 %cmp48.i.i.i.i, label %while.body.lr.ph.i.i.i.i, label %land.rhs82.i.sink.split

while.body.lr.ph.i.i.i.i:                         ; preds = %if.end.i.i.i
  %shl.i.i.i.i = shl nuw nsw i32 1, %current_order.036.i.i.i
  br label %while.body.i.i.i.i

while.body.i.i.i.i:                               ; preds = %set_buddy_order.exit.i.i.i.i, %while.body.lr.ph.i.i.i.i
  %size.050.i.i.i.i = phi i32 [ %shl.i.i.i.i, %while.body.lr.ph.i.i.i.i ], [ %shr.i.i.i.i, %set_buddy_order.exit.i.i.i.i ]
  %high.addr.049.i.i.i.i = phi i32 [ %current_order.036.i.i.i, %while.body.lr.ph.i.i.i.i ], [ %dec.i.i.i.i, %set_buddy_order.exit.i.i.i.i ]
  %dec.i.i.i.i = add nsw i32 %high.addr.049.i.i.i.i, -1
  %shr.i.i.i.i = lshr i32 %size.050.i.i.i.i, 1
  %arrayidx.i16.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %126 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i.i.i = ptrtoint ptr %arrayidx.i16.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i.i.i = ptrtoint ptr %126 to i32
  %sub.ptr.sub.i.i.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %127 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i.i.i = add i32 %sub.ptr.div.i.i.i.i.i.i, %127
  %128 = ptrtoint ptr %zone_start_pfn.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %zone_start_pfn.i.i.i.i.i, align 4
  %130 = ptrtoint ptr %spanned_pages.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %spanned_pages.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i.i.i = icmp ule i32 %129, %add.i.i.i.i.i.i
  %add.i.i.i.i.i.i.i.i = add i32 %131, %129
  %cmp1.i.i.i.i.i.i.i = icmp ugt i32 %add.i.i.i.i.i.i.i.i, %add.i.i.i.i.i.i
  %or.cond.i.i.i.i.i.i = select i1 %cmp.not.i.i.i.i.i.i.i, i1 %cmp1.i.i.i.i.i.i.i, i1 false
  br i1 %or.cond.i.i.i.i.i.i, label %if.end.i.i.i.i.i, label %bad_range.exit.thread.i.i.i.i

bad_range.exit.thread.i.i.i.i:                    ; preds = %while.body.i.i.i.i
  %name.i.i.i.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 15
  %132 = ptrtoint ptr %name.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %name.i.i.i.i.i.i, align 16
  %call10.i.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134, i32 noundef %add.i.i.i.i.i.i, i32 noundef 0, ptr noundef %133, i32 noundef %129, i32 noundef %add.i.i.i.i.i.i.i.i) #29
  br label %if.then.i.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %while.body.i.i.i.i
  %134 = ptrtoint ptr %arrayidx.i16.i.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load volatile i32, ptr %arrayidx.i16.i.i.i, align 4
  %cmp.i.not.i.i.i.i.i.i.i.i = icmp eq i32 %135, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i, label %bad_range.exit.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i.i.i:                          ; preds = %if.end.i.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

bad_range.exit.i.i.i.i:                           ; preds = %if.end.i.i.i.i.i
  %shr.i.i.i.i.i.i.i.i = lshr i32 %135, 30
  %arrayidx.i.i.i.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i.i.i
  %cmp.not.i.not.i.not.i.i.i.i = icmp eq ptr %arrayidx.i.i.i.i.i.i.i, %zone.0329
  br i1 %cmp.not.i.not.i.not.i.i.i.i, label %do.end9.i.i.i.i, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %bad_range.exit.i.i.i.i, %bad_range.exit.thread.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i, ptr noundef nonnull @.str.145) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2304, 0\0A.popsection", ""() #27, !srcloc !640
  unreachable

do.end9.i.i.i.i:                                  ; preds = %bad_range.exit.i.i.i.i
  %arrayidx.i.i.i45.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %dec.i.i.i.i
  %136 = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i, i32 1
  %arrayidx1.i.i.i.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i.i.i45.i.i, i32 0, i32 %63
  %137 = ptrtoint ptr %arrayidx1.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %arrayidx1.i.i.i.i.i, align 4
  %call.i.i.i.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %136, ptr noundef %arrayidx1.i.i.i.i.i, ptr noundef %138) #27
  br i1 %call.i.i.i.i.i.i.i, label %if.end.i.i.i.i.i.i.i, label %add_to_free_list.exit.i.i.i.i

if.end.i.i.i.i.i.i.i:                             ; preds = %do.end9.i.i.i.i
  %prev1.i.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %138, i32 0, i32 1
  %139 = ptrtoint ptr %prev1.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %139)
  store ptr %136, ptr %prev1.i.i.i.i.i.i.i, align 4
  %140 = ptrtoint ptr %136 to i32
  call void @__asan_store4_noabort(i32 %140)
  store ptr %138, ptr %136, align 4
  %prev3.i.i.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i, i32 1, i32 0, i32 0, i32 1
  %141 = ptrtoint ptr %prev3.i.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %141)
  store ptr %arrayidx1.i.i.i.i.i, ptr %prev3.i.i.i.i.i.i.i, align 4
  %142 = ptrtoint ptr %arrayidx1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store volatile ptr %136, ptr %arrayidx1.i.i.i.i.i, align 4
  br label %add_to_free_list.exit.i.i.i.i

add_to_free_list.exit.i.i.i.i:                    ; preds = %if.end.i.i.i.i.i.i.i, %do.end9.i.i.i.i
  %nr_free.i.i.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %dec.i.i.i.i, i32 1
  %143 = ptrtoint ptr %nr_free.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %nr_free.i.i.i.i.i, align 4
  %inc.i.i.i.i.i = add i32 %144, 1
  store i32 %inc.i.i.i.i.i, ptr %nr_free.i.i.i.i.i, align 4
  %private1.i.i.i.i.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i, i32 1, i32 0, i32 3
  %145 = ptrtoint ptr %private1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 %dec.i.i.i.i, ptr %private1.i.i.i.i.i.i, align 4
  %146 = getelementptr %struct.page, ptr %add.ptr.i.i.i.i, i32 %shr.i.i.i.i, i32 2
  %147 = ptrtoint ptr %146 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %146, align 4
  %cmp.i.i.i.i.i.i = icmp ult i32 %148, -268435456
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %set_buddy_order.exit.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i:                              ; preds = %add_to_free_list.exit.i.i.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i.i, ptr noundef nonnull @.str.137) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 878, 0\0A.popsection", ""() #27, !srcloc !636
  unreachable

set_buddy_order.exit.i.i.i.i:                     ; preds = %add_to_free_list.exit.i.i.i.i
  %and7.i.i.i.i.i.i = and i32 %148, -129
  %149 = ptrtoint ptr %146 to i32
  call void @__asan_store4_noabort(i32 %149)
  store i32 %and7.i.i.i.i.i.i, ptr %146, align 4
  %cmp.i.i.i.i = icmp sgt i32 %dec.i.i.i.i, %order
  br i1 %cmp.i.i.i.i, label %while.body.i.i.i.i, label %do.cond80.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i
  %inc.i.i.i = add i32 %current_order.036.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, 12
  br i1 %exitcond.not.i.i.i, label %if.then11.i.i, label %for.body.i.i.i

if.then11.i.i:                                    ; preds = %for.inc.i.i.i
  br i1 %brmerge.i.i, label %land.lhs.true18.i.i, label %for.body.i.i53.i.i

for.body.i.i53.i.i:                               ; preds = %for.inc.i.i105.i.i, %if.then11.i.i
  %current_order.036.i.i47.i.i = phi i32 [ %inc.i.i103.i.i, %for.inc.i.i105.i.i ], [ %order, %if.then11.i.i ]
  %arrayidx.i.i.i48.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %current_order.036.i.i47.i.i, i32 0, i32 4
  %150 = ptrtoint ptr %arrayidx.i.i.i48.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load volatile ptr, ptr %arrayidx.i.i.i48.i.i, align 4
  %cmp.not.i.i.i49.i.i = icmp eq ptr %151, %arrayidx.i.i.i48.i.i
  %add.ptr.i.i.i50.i.i = getelementptr i8, ptr %151, i32 -4
  %tobool.not37.i.i51.i.i = icmp eq ptr %add.ptr.i.i.i50.i.i, null
  %tobool.not.i.i52.i.i = or i1 %cmp.not.i.i.i49.i.i, %tobool.not37.i.i51.i.i
  br i1 %tobool.not.i.i52.i.i, label %for.inc.i.i105.i.i, label %if.end.i.i55.i.i

if.end.i.i55.i.i:                                 ; preds = %for.body.i.i53.i.i
  call fastcc void @del_page_from_free_list(ptr noundef nonnull %add.ptr.i.i.i50.i.i, ptr noundef nonnull %zone.0329, i32 noundef %current_order.036.i.i47.i.i) #27
  %cmp48.i.i.i54.i.i = icmp sgt i32 %current_order.036.i.i47.i.i, %order
  br i1 %cmp48.i.i.i54.i.i, label %while.body.lr.ph.i.i.i59.i.i, label %land.rhs82.i.sink.split

while.body.lr.ph.i.i.i59.i.i:                     ; preds = %if.end.i.i55.i.i
  %shl.i.i.i56.i.i = shl nuw nsw i32 1, %current_order.036.i.i47.i.i
  br label %while.body.i.i.i74.i.i

while.body.i.i.i74.i.i:                           ; preds = %set_buddy_order.exit.i.i.i100.i.i, %while.body.lr.ph.i.i.i59.i.i
  %size.050.i.i.i60.i.i = phi i32 [ %shl.i.i.i56.i.i, %while.body.lr.ph.i.i.i59.i.i ], [ %shr.i.i.i63.i.i, %set_buddy_order.exit.i.i.i100.i.i ]
  %high.addr.049.i.i.i61.i.i = phi i32 [ %current_order.036.i.i47.i.i, %while.body.lr.ph.i.i.i59.i.i ], [ %dec.i.i.i62.i.i, %set_buddy_order.exit.i.i.i100.i.i ]
  %dec.i.i.i62.i.i = add nsw i32 %high.addr.049.i.i.i61.i.i, -1
  %shr.i.i.i63.i.i = lshr i32 %size.050.i.i.i60.i.i, 1
  %arrayidx.i16.i.i64.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %152 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i.i65.i.i = ptrtoint ptr %arrayidx.i16.i.i64.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i.i66.i.i = ptrtoint ptr %152 to i32
  %sub.ptr.sub.i.i.i.i.i67.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i65.i.i, %sub.ptr.rhs.cast.i.i.i.i.i66.i.i
  %sub.ptr.div.i.i.i.i.i68.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i.i67.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %153 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i.i69.i.i = add i32 %sub.ptr.div.i.i.i.i.i68.i.i, %153
  %154 = ptrtoint ptr %zone_start_pfn.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %zone_start_pfn.i.i.i.i.i, align 4
  %156 = ptrtoint ptr %spanned_pages.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %spanned_pages.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i.i70.i.i = icmp ule i32 %155, %add.i.i.i.i.i69.i.i
  %add.i.i.i.i.i.i.i71.i.i = add i32 %157, %155
  %cmp1.i.i.i.i.i.i72.i.i = icmp ugt i32 %add.i.i.i.i.i.i.i71.i.i, %add.i.i.i.i.i69.i.i
  %or.cond.i.i.i.i.i73.i.i = select i1 %cmp.not.i.i.i.i.i.i70.i.i, i1 %cmp1.i.i.i.i.i.i72.i.i, i1 false
  br i1 %or.cond.i.i.i.i.i73.i.i, label %if.end.i.i.i.i79.i.i, label %bad_range.exit.thread.i.i.i77.i.i

bad_range.exit.thread.i.i.i77.i.i:                ; preds = %while.body.i.i.i74.i.i
  %name.i.i.i.i.i75.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 15
  %158 = ptrtoint ptr %name.i.i.i.i.i75.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %name.i.i.i.i.i75.i.i, align 16
  %call10.i.i.i.i.i76.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134, i32 noundef %add.i.i.i.i.i69.i.i, i32 noundef 0, ptr noundef %159, i32 noundef %155, i32 noundef %add.i.i.i.i.i.i.i71.i.i) #29
  br label %if.then.i.i.i85.i.i

if.end.i.i.i.i79.i.i:                             ; preds = %while.body.i.i.i74.i.i
  %160 = ptrtoint ptr %arrayidx.i16.i.i64.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load volatile i32, ptr %arrayidx.i16.i.i64.i.i, align 4
  %cmp.i.not.i.i.i.i.i.i.i78.i.i = icmp eq i32 %161, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i78.i.i, label %if.then.i.i.i.i.i.i.i80.i.i, label %bad_range.exit.i.i.i84.i.i, !prof !584

if.then.i.i.i.i.i.i.i80.i.i:                      ; preds = %if.end.i.i.i.i79.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i64.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

bad_range.exit.i.i.i84.i.i:                       ; preds = %if.end.i.i.i.i79.i.i
  %shr.i.i.i.i.i.i.i81.i.i = lshr i32 %161, 30
  %arrayidx.i.i.i.i.i.i82.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i.i81.i.i
  %cmp.not.i.not.i.not.i.i.i83.i.i = icmp eq ptr %arrayidx.i.i.i.i.i.i82.i.i, %zone.0329
  br i1 %cmp.not.i.not.i.not.i.i.i83.i.i, label %do.end9.i.i.i88.i.i, label %if.then.i.i.i85.i.i, !prof !582

if.then.i.i.i85.i.i:                              ; preds = %bad_range.exit.i.i.i84.i.i, %bad_range.exit.thread.i.i.i77.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i64.i.i, ptr noundef nonnull @.str.145) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2304, 0\0A.popsection", ""() #27, !srcloc !640
  unreachable

do.end9.i.i.i88.i.i:                              ; preds = %bad_range.exit.i.i.i84.i.i
  %162 = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i, i32 1
  %arrayidx1.i.i.i.i86.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %dec.i.i.i62.i.i, i32 0, i32 4
  %163 = ptrtoint ptr %arrayidx1.i.i.i.i86.i.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %arrayidx1.i.i.i.i86.i.i, align 4
  %call.i.i.i.i.i.i87.i.i = call zeroext i1 @__list_add_valid(ptr noundef %162, ptr noundef %arrayidx1.i.i.i.i86.i.i, ptr noundef %164) #27
  br i1 %call.i.i.i.i.i.i87.i.i, label %if.end.i.i.i.i.i.i91.i.i, label %add_to_free_list.exit.i.i.i96.i.i

if.end.i.i.i.i.i.i91.i.i:                         ; preds = %do.end9.i.i.i88.i.i
  %prev1.i.i.i.i.i.i89.i.i = getelementptr inbounds %struct.list_head, ptr %164, i32 0, i32 1
  %165 = ptrtoint ptr %prev1.i.i.i.i.i.i89.i.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store ptr %162, ptr %prev1.i.i.i.i.i.i89.i.i, align 4
  %166 = ptrtoint ptr %162 to i32
  call void @__asan_store4_noabort(i32 %166)
  store ptr %164, ptr %162, align 4
  %prev3.i.i.i.i.i.i90.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i, i32 1, i32 0, i32 0, i32 1
  %167 = ptrtoint ptr %prev3.i.i.i.i.i.i90.i.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store ptr %arrayidx1.i.i.i.i86.i.i, ptr %prev3.i.i.i.i.i.i90.i.i, align 4
  %168 = ptrtoint ptr %arrayidx1.i.i.i.i86.i.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store volatile ptr %162, ptr %arrayidx1.i.i.i.i86.i.i, align 4
  br label %add_to_free_list.exit.i.i.i96.i.i

add_to_free_list.exit.i.i.i96.i.i:                ; preds = %if.end.i.i.i.i.i.i91.i.i, %do.end9.i.i.i88.i.i
  %nr_free.i.i.i.i92.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %dec.i.i.i62.i.i, i32 1
  %169 = ptrtoint ptr %nr_free.i.i.i.i92.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %nr_free.i.i.i.i92.i.i, align 4
  %inc.i.i.i.i93.i.i = add i32 %170, 1
  store i32 %inc.i.i.i.i93.i.i, ptr %nr_free.i.i.i.i92.i.i, align 4
  %private1.i.i.i.i.i94.i.i = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i, i32 1, i32 0, i32 3
  %171 = ptrtoint ptr %private1.i.i.i.i.i94.i.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %dec.i.i.i62.i.i, ptr %private1.i.i.i.i.i94.i.i, align 4
  %172 = getelementptr %struct.page, ptr %add.ptr.i.i.i50.i.i, i32 %shr.i.i.i63.i.i, i32 2
  %173 = ptrtoint ptr %172 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %172, align 4
  %cmp.i.i.i.i.i95.i.i = icmp ult i32 %174, -268435456
  br i1 %cmp.i.i.i.i.i95.i.i, label %if.then.i.i.i.i.i97.i.i, label %set_buddy_order.exit.i.i.i100.i.i, !prof !584

if.then.i.i.i.i.i97.i.i:                          ; preds = %add_to_free_list.exit.i.i.i96.i.i
  call void @dump_page(ptr noundef %arrayidx.i16.i.i64.i.i, ptr noundef nonnull @.str.137) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 878, 0\0A.popsection", ""() #27, !srcloc !636
  unreachable

set_buddy_order.exit.i.i.i100.i.i:                ; preds = %add_to_free_list.exit.i.i.i96.i.i
  %and7.i.i.i.i.i98.i.i = and i32 %174, -129
  %175 = ptrtoint ptr %172 to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 %and7.i.i.i.i.i98.i.i, ptr %172, align 4
  %cmp.i.i.i99.i.i = icmp sgt i32 %dec.i.i.i62.i.i, %order
  br i1 %cmp.i.i.i99.i.i, label %while.body.i.i.i74.i.i, label %do.cond80.i

for.inc.i.i105.i.i:                               ; preds = %for.body.i.i53.i.i
  %inc.i.i103.i.i = add i32 %current_order.036.i.i47.i.i, 1
  %exitcond.not.i.i104.i.i = icmp eq i32 %inc.i.i103.i.i, 12
  br i1 %exitcond.not.i.i104.i.i, label %land.lhs.true18.i.i, label %for.body.i.i53.i.i

land.lhs.true18.i.i:                              ; preds = %for.inc.i.i105.i.i, %if.then11.i.i, %retry.i.i
  br i1 %cmp.not110.i.i.i, label %failed.i, label %for.body.i110.i.i

for.body.i110.i.i:                                ; preds = %for.inc.i115.i.i, %land.lhs.true18.i.i
  %current_order.0111.i.i.i = phi i32 [ %dec.i.i15.i, %for.inc.i115.i.i ], [ 11, %land.lhs.true18.i.i ]
  %arrayidx.i108.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %current_order.0111.i.i.i
  %nr_free.i.i.i13.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %current_order.0111.i.i.i, i32 1
  %176 = ptrtoint ptr %nr_free.i.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %nr_free.i.i.i13.i, align 4
  %cmp.i.i109.i.i = icmp eq i32 %177, 0
  %or.cond102.i.i.i = or i1 %65, %cmp.i.i109.i.i
  br i1 %or.cond102.i.i.i, label %for.inc.i115.i.i, label %if.end4.lr.ph.i.i.i.i

if.end4.lr.ph.i.i.i.i:                            ; preds = %for.body.i110.i.i
  %178 = ptrtoint ptr %arrayidx125.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %arrayidx125.i.i.i.i, align 4
  %cmp1.i.i.i.i.i = icmp ugt i32 %current_order.0111.i.i.i, 4
  br label %if.end4.i.i.i.i

if.end4.i.i.i.i:                                  ; preds = %for.inc.i.i114.i.i, %if.end4.lr.ph.i.i.i.i
  %180 = phi i32 [ %179, %if.end4.lr.ph.i.i.i.i ], [ %185, %for.inc.i.i114.i.i ]
  %i.027.i.i.i.i = phi i32 [ 0, %if.end4.lr.ph.i.i.i.i ], [ %inc.i.i113.i.i, %for.inc.i.i114.i.i ]
  %arrayidx.i.i.i111.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i108.i.i, i32 0, i32 %180
  %181 = ptrtoint ptr %arrayidx.i.i.i111.i.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load volatile ptr, ptr %arrayidx.i.i.i111.i.i, align 4
  %cmp.i.i.i.i112.i.i = icmp eq ptr %182, %arrayidx.i.i.i111.i.i
  br i1 %cmp.i.i.i.i112.i.i, label %for.inc.i.i114.i.i, label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.end4.i.i.i.i
  br i1 %cmp1.i.i.i.i.i, label %if.then8.i.i.i.i, label %switch.early.test.i.i.i.i.i

switch.early.test.i.i.i.i.i:                      ; preds = %if.end6.i.i.i.i
  switch i32 %63, label %can_steal_fallback.exit.i.i.i.i [
    i32 2, label %if.then8.i.i.i.i
    i32 0, label %if.then8.i.i.i.i
  ]

can_steal_fallback.exit.i.i.i.i:                  ; preds = %switch.early.test.i.i.i.i.i
  %183 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i.not.i.i.i.i = icmp eq i32 %183, 0
  br i1 %tobool.not.i.not.i.i.i.i, label %find_suitable_fallback.exit.i.i.i, label %if.then8.i.i.i.i

if.then8.i.i.i.i:                                 ; preds = %can_steal_fallback.exit.i.i.i.i, %switch.early.test.i.i.i.i.i, %switch.early.test.i.i.i.i.i, %if.end6.i.i.i.i
  br label %find_suitable_fallback.exit.i.i.i

for.inc.i.i114.i.i:                               ; preds = %if.end4.i.i.i.i
  %inc.i.i113.i.i = add i32 %i.027.i.i.i.i, 1
  %arrayidx1.i.i.i14.i = getelementptr [6 x [3 x i32]], ptr @fallbacks, i32 0, i32 %63, i32 %inc.i.i113.i.i
  %184 = ptrtoint ptr %arrayidx1.i.i.i14.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %arrayidx1.i.i.i14.i, align 4
  %cmp2.i.i.i.i = icmp eq i32 %185, 6
  br i1 %cmp2.i.i.i.i, label %for.inc.i115.i.i, label %if.end4.i.i.i.i

find_suitable_fallback.exit.i.i.i:                ; preds = %if.then8.i.i.i.i, %can_steal_fallback.exit.i.i.i.i
  %tobool4.not.i.i.i = phi i1 [ true, %can_steal_fallback.exit.i.i.i.i ], [ false, %if.then8.i.i.i.i ]
  %can_steal.2.i.i.i = phi i8 [ 0, %can_steal_fallback.exit.i.i.i.i ], [ 1, %if.then8.i.i.i.i ]
  %cmp1.i.i.i = icmp eq i32 %180, -1
  br i1 %cmp1.i.i.i, label %for.inc.i115.i.i, label %if.end3.i.i.i

if.end3.i.i.i:                                    ; preds = %find_suitable_fallback.exit.i.i.i
  %or.cond.i.i.i = and i1 %cmp5.i.i.i, %tobool4.not.i.i.i
  %cmp7.i.i.i = icmp sgt i32 %current_order.0111.i.i.i, %order
  %or.cond65.i.i.i = select i1 %or.cond.i.i.i, i1 %cmp7.i.i.i, i1 false
  br i1 %or.cond65.i.i.i, label %for.cond10.preheader.i.i.i, label %do_steal.i.i.i

for.cond10.preheader.i.i.i:                       ; preds = %if.end3.i.i.i
  br i1 %cmp11114.i.i.i, label %for.body12.i.i.i, label %do.body.i.i.i

for.inc.i115.i.i:                                 ; preds = %find_suitable_fallback.exit.i.i.i, %for.inc.i.i114.i.i, %for.body.i110.i.i
  %dec.i.i15.i = add i32 %current_order.0111.i.i.i, -1
  %cmp.not.i.i16.i = icmp slt i32 %dec.i.i15.i, %order
  br i1 %cmp.not.i.i16.i, label %failed.i, label %for.body.i110.i.i

for.body12.i.i.i:                                 ; preds = %for.inc19.i.i.i, %for.cond10.preheader.i.i.i
  %current_order.1116.i.i.i = phi i32 [ %inc.i116.i.i, %for.inc19.i.i.i ], [ %order, %for.cond10.preheader.i.i.i ]
  %arrayidx14.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %current_order.1116.i.i.i
  %nr_free.i66.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %current_order.1116.i.i.i, i32 1
  %186 = ptrtoint ptr %nr_free.i66.i.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %nr_free.i66.i.i.i, align 4
  %cmp.i67.i.i.i = icmp eq i32 %187, 0
  br i1 %cmp.i67.i.i.i, label %for.inc19.i.i.i, label %if.end.i68.i.i.i

if.end.i68.i.i.i:                                 ; preds = %for.body12.i.i.i
  %arrayidx.i.i72.i.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx14.i.i.i, i32 0, i32 2
  %188 = ptrtoint ptr %arrayidx.i.i72.i.i.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load volatile ptr, ptr %arrayidx.i.i72.i.i.i, align 4
  %cmp.i.i.i73.i.i.i = icmp eq ptr %189, %arrayidx.i.i72.i.i.i
  br i1 %cmp.i.i.i73.i.i.i, label %for.inc.i84.i.i.i, label %if.end6.i75.i.i.i

if.end6.i75.i.i.i:                                ; preds = %for.inc.i84.i.i.i, %if.end.i68.i.i.i
  %.lcssa.i.i.i = phi i32 [ 2, %if.end.i68.i.i.i ], [ 0, %for.inc.i84.i.i.i ]
  %cmp1.i.i69.le.i.i.i = icmp ugt i32 %current_order.1116.i.i.i, 4
  br i1 %cmp1.i.i69.le.i.i.i, label %do.body.i.i.i, label %switch.early.test.i.i76.i.i.i

switch.early.test.i.i76.i.i.i:                    ; preds = %if.end6.i75.i.i.i
  %190 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i.not.i77.i.i.i = icmp ne i32 %190, 0
  %spec.select.i.i.i = zext i1 %tobool.not.i.not.i77.i.i.i to i8
  br label %do_steal.i.i.i

for.inc.i84.i.i.i:                                ; preds = %if.end.i68.i.i.i
  %191 = ptrtoint ptr %arrayidx14.i.i.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load volatile ptr, ptr %arrayidx14.i.i.i, align 4
  %cmp.i.i.i73.1.i.i.i = icmp eq ptr %192, %arrayidx14.i.i.i
  br i1 %cmp.i.i.i73.1.i.i.i, label %for.inc19.i.i.i, label %if.end6.i75.i.i.i

for.inc19.i.i.i:                                  ; preds = %for.inc.i84.i.i.i, %for.body12.i.i.i
  %inc.i116.i.i = add nsw i32 %current_order.1116.i.i.i, 1
  %exitcond.not.i117.i.i = icmp eq i32 %inc.i116.i.i, 12
  br i1 %exitcond.not.i117.i.i, label %do.body25.i.i.i, label %for.body12.i.i.i

do.body.i.i.i:                                    ; preds = %if.end6.i75.i.i.i, %for.cond10.preheader.i.i.i
  %current_order.1.lcssa.i.i.i = phi i32 [ %order, %for.cond10.preheader.i.i.i ], [ %current_order.1116.i.i.i, %if.end6.i75.i.i.i ]
  %can_steal.6.i.i.i = phi i8 [ 0, %for.cond10.preheader.i.i.i ], [ 1, %if.end6.i75.i.i.i ]
  %area.1.i.i.i = phi ptr [ %arrayidx.i108.i.i, %for.cond10.preheader.i.i.i ], [ %arrayidx14.i.i.i, %if.end6.i75.i.i.i ]
  %fallback_mt.1.i.i.i = phi i32 [ %180, %for.cond10.preheader.i.i.i ], [ %.lcssa.i.i.i, %if.end6.i75.i.i.i ]
  %cmp21.i.i.i = icmp eq i32 %current_order.1.lcssa.i.i.i, 12
  br i1 %cmp21.i.i.i, label %do.body25.i.i.i, label %do_steal.i.i.i, !prof !584

do.body25.i.i.i:                                  ; preds = %do.body.i.i.i, %for.inc19.i.i.i
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2963, 0\0A.popsection", ""() #27, !srcloc !641
  unreachable

do_steal.i.i.i:                                   ; preds = %do.body.i.i.i, %switch.early.test.i.i76.i.i.i, %if.end3.i.i.i
  %can_steal.7.i.i.i = phi i8 [ %can_steal.6.i.i.i, %do.body.i.i.i ], [ %can_steal.2.i.i.i, %if.end3.i.i.i ], [ %spec.select.i.i.i, %switch.early.test.i.i76.i.i.i ]
  %area.2.i.i.i = phi ptr [ %area.1.i.i.i, %do.body.i.i.i ], [ %arrayidx.i108.i.i, %if.end3.i.i.i ], [ %arrayidx14.i.i.i, %switch.early.test.i.i76.i.i.i ]
  %current_order.2.i.i.i = phi i32 [ %current_order.1.lcssa.i.i.i, %do.body.i.i.i ], [ %current_order.0111.i.i.i, %if.end3.i.i.i ], [ %current_order.1116.i.i.i, %switch.early.test.i.i76.i.i.i ]
  %fallback_mt.2.i.i.i = phi i32 [ %fallback_mt.1.i.i.i, %do.body.i.i.i ], [ %180, %if.end3.i.i.i ], [ %.lcssa.i.i.i, %switch.early.test.i.i76.i.i.i ]
  %arrayidx.i.i118.i.i = getelementptr [6 x %struct.list_head], ptr %area.2.i.i.i, i32 0, i32 %fallback_mt.2.i.i.i
  %193 = ptrtoint ptr %arrayidx.i.i118.i.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load volatile ptr, ptr %arrayidx.i.i118.i.i, align 4
  %cmp.not.i.i119.i.i = icmp eq ptr %194, %arrayidx.i.i118.i.i
  %add.ptr.i.i120.i.i = getelementptr i8, ptr %194, i32 -4
  %spec.select.i.i.i.i = select i1 %cmp.not.i.i119.i.i, ptr null, ptr %add.ptr.i.i120.i.i
  %tobool33.not.i.i.i = icmp eq i8 %can_steal.7.i.i.i, 0
  %private.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %spec.select.i.i.i.i, i32 0, i32 1, i32 0, i32 3
  %195 = ptrtoint ptr %private.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %private.i.i.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %movable_pages.i.i.i.i) #27
  %197 = ptrtoint ptr %movable_pages.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %197)
  store i32 -1, ptr %movable_pages.i.i.i.i, align 4, !annotation !637
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %198 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %spec.select.i.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %198 to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  %sub.ptr.div.i.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %199 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i = add i32 %sub.ptr.div.i.i.i.i, %199
  %200 = ptrtoint ptr %spec.select.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load volatile i32, ptr %spec.select.i.i.i.i, align 4
  %cmp.i.not.i.i.i.i.i.i.i121.i.i = icmp eq i32 %201, -1
  br i1 %cmp.i.not.i.i.i.i.i.i.i121.i.i, label %if.then.i.i.i.i.i.i.i122.i.i, label %get_pageblock_bitmap.exit.i.i.i.i.i.i, !prof !584

if.then.i.i.i.i.i.i.i122.i.i:                     ; preds = %do_steal.i.i.i
  call void @dump_page(ptr noundef %spec.select.i.i.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i.i.i.i.i:            ; preds = %do_steal.i.i.i
  %shr.i.i.i.i.i.i.i123.i.i = lshr i32 %201, 30
  %pageblock_flags.i.i.i.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i.i123.i.i, i32 9
  %202 = ptrtoint ptr %pageblock_flags.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %pageblock_flags.i.i.i.i.i.i.i, align 8
  %204 = ptrtoint ptr %spec.select.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load volatile i32, ptr %spec.select.i.i.i.i, align 4
  %cmp.i.not.i.i.i8.i.i.i.i.i.i = icmp eq i32 %205, -1
  br i1 %cmp.i.not.i.i.i8.i.i.i.i.i.i, label %if.then.i.i.i9.i.i.i.i.i.i, label %get_pfnblock_flags_mask.exit.i.i.i.i, !prof !584

if.then.i.i.i9.i.i.i.i.i.i:                       ; preds = %get_pageblock_bitmap.exit.i.i.i.i.i.i
  call void @dump_page(ptr noundef %spec.select.i.i.i.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pfnblock_flags_mask.exit.i.i.i.i:             ; preds = %get_pageblock_bitmap.exit.i.i.i.i.i.i
  %shr.i.i.i10.i.i.i.i.i.i = lshr i32 %205, 30
  %zone_start_pfn.i.i.i.i.i124.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i.i.i.i.i, i32 10
  %206 = ptrtoint ptr %zone_start_pfn.i.i.i.i.i124.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %zone_start_pfn.i.i.i.i.i124.i.i, align 4
  %and.i.i.i.i.i.i.i = and i32 %207, -2048
  %sub.i.i.i.i.i.i.i = sub i32 %add.i.i.i.i, %and.i.i.i.i.i.i.i
  %208 = lshr i32 %sub.i.i.i.i.i.i.i, 9
  %div7.i.i.i.i.i.i = lshr i32 %sub.i.i.i.i.i.i.i, 14
  %and.i.i.i.i.i.i = and i32 %208, 28
  %arrayidx.i.i.i.i.i17.i = getelementptr i32, ptr %203, i32 %div7.i.i.i.i.i.i
  %209 = ptrtoint ptr %arrayidx.i.i.i.i.i17.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %arrayidx.i.i.i.i.i17.i, align 4
  %shr.i.i.i.i.i.i = lshr i32 %210, %and.i.i.i.i.i.i
  %and2.i.i.i.i.i.i = and i32 %shr.i.i.i.i.i.i, 7
  %cmp.i.i.i125.i.i = icmp eq i32 %and2.i.i.i.i.i.i, 3
  br i1 %cmp.i.i.i125.i.i, label %single_page.i.i.i.i, label %if.end.i88.i.i.i

if.end.i88.i.i.i:                                 ; preds = %get_pfnblock_flags_mask.exit.i.i.i.i
  %cmp.i87.i.i.i = icmp ugt i32 %196, 10
  br i1 %cmp.i87.i.i.i, label %if.then3.i.i.i.i, label %if.end4.i90.i.i.i

if.then3.i.i.i.i:                                 ; preds = %if.end.i88.i.i.i
  %sub.i.i.i.i.i = add i32 %196, -11
  %shl.i.i.i126.i.i = shl nuw i32 1, %sub.i.i.i.i.i
  br label %while.body.i.i.i128.i.i

while.body.i.i.i128.i.i:                          ; preds = %set_pageblock_migratetype.exit.i.i.i.i.i, %if.then3.i.i.i.i
  %nr_pageblocks.03.i.i.i.i.i = phi i32 [ %shl.i.i.i126.i.i, %if.then3.i.i.i.i ], [ %dec.i.i.i127.i.i, %set_pageblock_migratetype.exit.i.i.i.i.i ]
  %pageblock_page.addr.02.i.i.i.i.i = phi ptr [ %spec.select.i.i.i.i, %if.then3.i.i.i.i ], [ %add.ptr.i.i.i135.i.i, %set_pageblock_migratetype.exit.i.i.i.i.i ]
  %dec.i.i.i127.i.i = add i32 %nr_pageblocks.03.i.i.i.i.i, -1
  %211 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i.i.i.i.i.i = icmp ne i32 %211, 0
  %spec.select.i.i.i.i.i.i = and i1 %cmp.i53.i.i.i.i, %tobool.not.i.i.i.i.i.i
  br i1 %spec.select.i.i.i.i.i.i, label %if.then.i.i.i.i129.i.i, label %set_pageblock_migratetype.exit.i.i.i.i.i, !prof !584

if.then.i.i.i.i129.i.i:                           ; preds = %while.body.i.i.i128.i.i
  br label %set_pageblock_migratetype.exit.i.i.i.i.i

set_pageblock_migratetype.exit.i.i.i.i.i:         ; preds = %if.then.i.i.i.i129.i.i, %while.body.i.i.i128.i.i
  %migratetype.addr.0.i.i.i.i.i.i = phi i32 [ 0, %if.then.i.i.i.i129.i.i ], [ %63, %while.body.i.i.i128.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %212 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i.i130.i.i = ptrtoint ptr %pageblock_page.addr.02.i.i.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i131.i.i = ptrtoint ptr %212 to i32
  %sub.ptr.sub.i.i.i.i132.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i130.i.i, %sub.ptr.rhs.cast.i.i.i.i131.i.i
  %sub.ptr.div.i.i.i.i133.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i132.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %213 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i.i.i134.i.i = add i32 %sub.ptr.div.i.i.i.i133.i.i, %213
  call void @set_pfnblock_flags_mask(ptr noundef %pageblock_page.addr.02.i.i.i.i.i, i32 noundef %migratetype.addr.0.i.i.i.i.i.i, i32 noundef %add.i.i.i.i134.i.i, i32 noundef 7) #27
  %add.ptr.i.i.i135.i.i = getelementptr %struct.page, ptr %pageblock_page.addr.02.i.i.i.i.i, i32 2048
  %tobool.not.i.i.i.i.i = icmp eq i32 %dec.i.i.i127.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %single_page.i.i.i.i, label %while.body.i.i.i128.i.i

if.end4.i90.i.i.i:                                ; preds = %if.end.i88.i.i.i
  %214 = load i32, ptr @watermark_boost_factor, align 4
  %tobool.not.i50.i.i.i.i = icmp eq i32 %214, 0
  br i1 %tobool.not.i50.i.i.i.i, label %if.end7.i.i.i.i, label %if.end.i.i.i137.i.i

if.end.i.i.i137.i.i:                              ; preds = %if.end4.i90.i.i.i
  %call.i.i.i.i.i.i136.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i.i.i.i, i32 noundef 4) #27
  %215 = ptrtoint ptr %managed_pages.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load volatile i32, ptr %managed_pages.i.i.i.i.i.i, align 4
  %cmp.i51.i.i.i.i = icmp ult i32 %216, 8192
  br i1 %cmp.i51.i.i.i.i, label %if.end7.i.i.i.i, label %if.end2.i.i.i.i.i

if.end2.i.i.i.i.i:                                ; preds = %if.end.i.i.i137.i.i
  %217 = ptrtoint ptr %arrayidx.i.i91.i.i.i to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %arrayidx.i.i91.i.i.i, align 8
  %.frozen = freeze i32 %218
  %div.i.i.i.i.i = udiv i32 %.frozen, 10000
  %219 = mul i32 %div.i.i.i.i.i, 10000
  %rem5.i.i.i.i.i.decomposed = sub i32 %.frozen, %219
  %220 = load i32, ptr @watermark_boost_factor, align 4
  %mul.i.i.i.i.i = mul i32 %div.i.i.i.i.i, %220
  %mul6.i.i.i.i.i = mul i32 %rem5.i.i.i.i.i.decomposed, %220
  %div7.i.i.i.i.i = udiv i32 %mul6.i.i.i.i.i, 10000
  %add.i.i.i.i18.i = add i32 %div7.i.i.i.i.i, %mul.i.i.i.i.i
  %tobool8.not.i.i.i.i.i = icmp eq i32 %add.i.i.i.i18.i, 0
  br i1 %tobool8.not.i.i.i.i.i, label %if.end7.i.i.i.i, label %boost_watermark.exit.i.i.i.i

boost_watermark.exit.i.i.i.i:                     ; preds = %if.end2.i.i.i.i.i
  %221 = call i32 @llvm.umax.i32(i32 %add.i.i.i.i18.i, i32 2048) #27
  %222 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %watermark_boost, align 4
  %add13.i.i.i.i.i = add i32 %223, 2048
  %224 = call i32 @llvm.umin.i32(i32 %add13.i.i.i.i.i, i32 %221) #27
  %225 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_store4_noabort(i32 %225)
  store i32 %224, ptr %watermark_boost, align 4
  br i1 %tobool.not.i.i138.i.i, label %if.end7.i.i.i.i, label %if.then6.i.i.i.i

if.then6.i.i.i.i:                                 ; preds = %boost_watermark.exit.i.i.i.i
  call void @_set_bit(i32 noundef 0, ptr noundef %flags.i.i.i.i) #27
  br label %if.end7.i.i.i.i

if.end7.i.i.i.i:                                  ; preds = %if.then6.i.i.i.i, %boost_watermark.exit.i.i.i.i, %if.end2.i.i.i.i.i, %if.end.i.i.i137.i.i, %if.end4.i90.i.i.i
  br i1 %tobool33.not.i.i.i, label %single_page.i.i.i.i, label %if.end10.i.i.i.i

if.end10.i.i.i.i:                                 ; preds = %if.end7.i.i.i.i
  %call11.i.i.i.i = call i32 @move_freepages_block(ptr noundef nonnull %zone.0329, ptr noundef %spec.select.i.i.i.i, i32 noundef %63, ptr noundef nonnull %movable_pages.i.i.i.i) #27
  br i1 %cmp5.i.i.i, label %if.then13.i.i.i.i, label %if.else.i.i.i.i

if.then13.i.i.i.i:                                ; preds = %if.end10.i.i.i.i
  %226 = ptrtoint ptr %movable_pages.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %movable_pages.i.i.i.i, align 4
  br label %if.end19.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end10.i.i.i.i
  %cmp14.i.i.i.i = icmp eq i32 %and2.i.i.i.i.i.i, 1
  br i1 %cmp14.i.i.i.i, label %if.then15.i.i.i.i, label %if.end19.i.i.i.i

if.then15.i.i.i.i:                                ; preds = %if.else.i.i.i.i
  %228 = ptrtoint ptr %movable_pages.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %movable_pages.i.i.i.i, align 4
  %230 = add i32 %call11.i.i.i.i, %229
  %sub.i.i.i.i = sub i32 2048, %230
  br label %if.end19.i.i.i.i

if.end19.i.i.i.i:                                 ; preds = %if.then15.i.i.i.i, %if.else.i.i.i.i, %if.then13.i.i.i.i
  %alike_pages.0.i.i.i.i = phi i32 [ %227, %if.then13.i.i.i.i ], [ %sub.i.i.i.i, %if.then15.i.i.i.i ], [ 0, %if.else.i.i.i.i ]
  %tobool20.not.i.i.i.i = icmp eq i32 %call11.i.i.i.i, 0
  br i1 %tobool20.not.i.i.i.i, label %single_page.i.i.i.i, label %if.end22.i.i.i.i

if.end22.i.i.i.i:                                 ; preds = %if.end19.i.i.i.i
  %add23.i.i.i.i = add i32 %alike_pages.0.i.i.i.i, %call11.i.i.i.i
  %cmp24.i.i.i.i = icmp sgt i32 %add23.i.i.i.i, 1023
  br i1 %cmp24.i.i.i.i, label %if.then26.i.i.i.i, label %lor.lhs.false.i.i.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %if.end22.i.i.i.i
  %231 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool25.not.i.i.i.i = icmp eq i32 %231, 0
  br i1 %tobool25.not.i.i.i.i, label %__rmqueue_fallback.exit.i.i, label %if.then26.i.i.i.i

if.then26.i.i.i.i:                                ; preds = %lor.lhs.false.i.i.i.i, %if.end22.i.i.i.i
  %232 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i52.i.i.i.i = icmp ne i32 %232, 0
  %spec.select.i.i.i.i.i = and i1 %cmp.i53.i.i.i.i, %tobool.not.i52.i.i.i.i
  br i1 %spec.select.i.i.i.i.i, label %if.then.i.i.i139.i.i, label %set_pageblock_migratetype.exit.i.i.i.i, !prof !584

if.then.i.i.i139.i.i:                             ; preds = %if.then26.i.i.i.i
  br label %set_pageblock_migratetype.exit.i.i.i.i

set_pageblock_migratetype.exit.i.i.i.i:           ; preds = %if.then.i.i.i139.i.i, %if.then26.i.i.i.i
  %migratetype.addr.0.i.i.i.i.i = phi i32 [ 0, %if.then.i.i.i139.i.i ], [ %63, %if.then26.i.i.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %233 = load ptr, ptr @mem_map, align 4
  %sub.ptr.rhs.cast.i.i.i.i19.i = ptrtoint ptr %233 to i32
  %sub.ptr.sub.i.i.i.i20.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i19.i
  %sub.ptr.div.i.i.i.i21.i = sdiv exact i32 %sub.ptr.sub.i.i.i.i20.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %234 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i54.i.i.i.i = add i32 %sub.ptr.div.i.i.i.i21.i, %234
  call void @set_pfnblock_flags_mask(ptr noundef %spec.select.i.i.i.i, i32 noundef %migratetype.addr.0.i.i.i.i.i, i32 noundef %add.i54.i.i.i.i, i32 noundef 7) #27
  br label %__rmqueue_fallback.exit.i.i

single_page.i.i.i.i:                              ; preds = %if.end19.i.i.i.i, %if.end7.i.i.i.i, %set_pageblock_migratetype.exit.i.i.i.i.i, %get_pfnblock_flags_mask.exit.i.i.i.i
  %arrayidx.i56.i.i.i.i = getelementptr %struct.zone, ptr %zone.0329, i32 0, i32 20, i32 %196
  %235 = getelementptr inbounds %struct.page, ptr %spec.select.i.i.i.i, i32 0, i32 1
  %arrayidx1.i.i.i140.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i56.i.i.i.i, i32 0, i32 %63
  %call.i.i.i.i.i141.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %235) #27
  br i1 %call.i.i.i.i.i141.i.i, label %if.end.i.i.i.i.i143.i.i, label %__list_del_entry.exit.i.i.i.i.i.i

if.end.i.i.i.i.i143.i.i:                          ; preds = %single_page.i.i.i.i
  %prev.i.i.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %spec.select.i.i.i.i, i32 0, i32 1, i32 0, i32 0, i32 1
  %236 = ptrtoint ptr %prev.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %prev.i.i.i.i.i.i.i, align 4
  %238 = ptrtoint ptr %235 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %235, align 4
  %prev1.i.i.i.i.i.i142.i.i = getelementptr inbounds %struct.list_head, ptr %239, i32 0, i32 1
  %240 = ptrtoint ptr %prev1.i.i.i.i.i.i142.i.i to i32
  call void @__asan_store4_noabort(i32 %240)
  store ptr %237, ptr %prev1.i.i.i.i.i.i142.i.i, align 4
  %241 = ptrtoint ptr %237 to i32
  call void @__asan_store4_noabort(i32 %241)
  store volatile ptr %239, ptr %237, align 4
  br label %__list_del_entry.exit.i.i.i.i.i.i

__list_del_entry.exit.i.i.i.i.i.i:                ; preds = %if.end.i.i.i.i.i143.i.i, %single_page.i.i.i.i
  %prev.i2.i.i.i.i.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i56.i.i.i.i, i32 0, i32 %63, i32 1
  %242 = ptrtoint ptr %prev.i2.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %prev.i2.i.i.i.i.i.i, align 4
  %call.i.i.i.i57.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %235, ptr noundef %243, ptr noundef %arrayidx1.i.i.i140.i.i) #27
  br i1 %call.i.i.i.i57.i.i.i.i, label %if.end.i.i.i.i.i.i145.i.i, label %__rmqueue_fallback.exit.i.i

if.end.i.i.i.i.i.i145.i.i:                        ; preds = %__list_del_entry.exit.i.i.i.i.i.i
  %244 = ptrtoint ptr %prev.i2.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %244)
  store ptr %235, ptr %prev.i2.i.i.i.i.i.i, align 4
  %245 = ptrtoint ptr %235 to i32
  call void @__asan_store4_noabort(i32 %245)
  store ptr %arrayidx1.i.i.i140.i.i, ptr %235, align 4
  %prev3.i.i.i.i.i.i144.i.i = getelementptr inbounds %struct.page, ptr %spec.select.i.i.i.i, i32 0, i32 1, i32 0, i32 0, i32 1
  %246 = ptrtoint ptr %prev3.i.i.i.i.i.i144.i.i to i32
  call void @__asan_store4_noabort(i32 %246)
  store ptr %243, ptr %prev3.i.i.i.i.i.i144.i.i, align 4
  %247 = ptrtoint ptr %243 to i32
  call void @__asan_store4_noabort(i32 %247)
  store volatile ptr %235, ptr %243, align 4
  br label %__rmqueue_fallback.exit.i.i

__rmqueue_fallback.exit.i.i:                      ; preds = %if.end.i.i.i.i.i.i145.i.i, %__list_del_entry.exit.i.i.i.i.i.i, %set_pageblock_migratetype.exit.i.i.i.i, %lor.lhs.false.i.i.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %movable_pages.i.i.i.i) #27
  call fastcc void @trace_mm_page_alloc_extfrag(ptr noundef %spec.select.i.i.i.i, i32 noundef %order, i32 noundef %current_order.2.i.i.i, i32 noundef %63, i32 noundef %fallback_mt.2.i.i.i) #27
  br label %retry.i.i

do.cond80.i:                                      ; preds = %set_buddy_order.exit.i.i.i100.i.i, %set_buddy_order.exit.i.i.i.i, %set_buddy_order.exit.i.i.i.i.i
  %.lcssa389.sink.i.i = phi ptr [ %151, %set_buddy_order.exit.i.i.i100.i.i ], [ %125, %set_buddy_order.exit.i.i.i.i ], [ %99, %set_buddy_order.exit.i.i.i.i.i ]
  %migratetype.sink.i.i = phi i32 [ 4, %set_buddy_order.exit.i.i.i100.i.i ], [ %63, %set_buddy_order.exit.i.i.i.i ], [ 4, %set_buddy_order.exit.i.i.i.i.i ]
  %page.1.ph.i.i = phi ptr [ %add.ptr.i.i.i50.i.i, %set_buddy_order.exit.i.i.i100.i.i ], [ %add.ptr.i.i.i.i, %set_buddy_order.exit.i.i.i.i ], [ %add.ptr.i.i.i.i.i, %set_buddy_order.exit.i.i.i.i.i ]
  %index.i.i.i.i = getelementptr i8, ptr %.lcssa389.sink.i.i, i32 12
  %248 = ptrtoint ptr %index.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %248)
  store i32 %migratetype.sink.i.i, ptr %index.i.i.i.i, align 4
  call fastcc void @trace_mm_page_alloc_zone_locked(ptr noundef nonnull %page.1.ph.i.i, i32 noundef %order, i32 noundef %63) #27
  %tobool81.not.i = icmp eq ptr %page.1.ph.i.i, null
  br i1 %tobool81.not.i, label %failed.i, label %land.rhs82.i

land.rhs82.i.sink.split:                          ; preds = %if.end.i.i55.i.i, %if.end.i.i.i, %if.end.i.i.i4.i, %set_buddy_order.exit.i.i.i, %if.end.i.i139
  %.lcssa389.sink.i.ph.i.sink = phi ptr [ %67, %if.end.i.i139 ], [ %151, %if.end.i.i55.i.i ], [ %125, %if.end.i.i.i ], [ %99, %if.end.i.i.i4.i ], [ %67, %set_buddy_order.exit.i.i.i ]
  %migratetype.sink.i.ph.i.sink = phi i32 [ 3, %if.end.i.i139 ], [ 4, %if.end.i.i55.i.i ], [ %63, %if.end.i.i.i ], [ 4, %if.end.i.i.i4.i ], [ 3, %set_buddy_order.exit.i.i.i ]
  %page.1.ph.i.ph.i.sink = phi ptr [ %add.ptr.i.i.i, %if.end.i.i139 ], [ %add.ptr.i.i.i50.i.i, %if.end.i.i55.i.i ], [ %add.ptr.i.i.i.i, %if.end.i.i.i ], [ %add.ptr.i.i.i.i.i, %if.end.i.i.i4.i ], [ %add.ptr.i.i.i, %set_buddy_order.exit.i.i.i ]
  %index.i.i.i78.i = getelementptr i8, ptr %.lcssa389.sink.i.ph.i.sink, i32 12
  %249 = ptrtoint ptr %index.i.i.i78.i to i32
  call void @__asan_store4_noabort(i32 %249)
  store i32 %migratetype.sink.i.ph.i.sink, ptr %index.i.i.i78.i, align 4
  call fastcc void @trace_mm_page_alloc_zone_locked(ptr noundef nonnull %page.1.ph.i.ph.i.sink, i32 noundef %order, i32 noundef %63) #27
  br label %land.rhs82.i

land.rhs82.i:                                     ; preds = %land.rhs82.i.sink.split, %do.cond80.i
  %page.172.i = phi ptr [ %page.1.ph.i.i, %do.cond80.i ], [ %page.1.ph.i.ph.i.sink, %land.rhs82.i.sink.split ]
  br i1 %cmp18.not.i.i, label %if.end89.critedge.i, label %for.body.preheader.i.i

for.body.preheader.i.i:                           ; preds = %land.rhs82.i
  %250 = getelementptr %struct.page, ptr %page.172.i, i32 0, i32 2
  %call.i.i.i.i.i29192.i = call zeroext i1 @__kasan_check_read(ptr noundef %250, i32 noundef 4) #27
  %251 = ptrtoint ptr %250 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load volatile i32, ptr %250, align 4
  %cmp.not.i.i.i30193.i = icmp eq i32 %252, -1
  br i1 %cmp.not.i.i.i30193.i, label %page_expected_state.exit.i.i.i.preheader, label %if.end.i.i34.i, !prof !582

page_expected_state.exit.i.i.i.preheader:         ; preds = %for.body.preheader.i.i
  %mapping.i.i.i.i307 = getelementptr %struct.page, ptr %page.172.i, i32 0, i32 1, i32 0, i32 1
  %253 = ptrtoint ptr %mapping.i.i.i.i307 to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load ptr, ptr %mapping.i.i.i.i307, align 4
  %255 = ptrtoint ptr %254 to i32
  %_refcount.i.i.i.i.i308 = getelementptr %struct.page, ptr %page.172.i, i32 0, i32 3
  %call.i.i.i.i.i.i32.i309 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i308, i32 noundef 4) #27
  %256 = ptrtoint ptr %_refcount.i.i.i.i.i308 to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load volatile i32, ptr %_refcount.i.i.i.i.i308, align 4
  %or.i.i.i.i310 = or i32 %257, %255
  %memcg_data.i.i.i.i311 = getelementptr %struct.page, ptr %page.172.i, i32 0, i32 4
  %258 = ptrtoint ptr %memcg_data.i.i.i.i311 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %memcg_data.i.i.i.i311, align 4
  %or3.i.i.i.i312 = or i32 %or.i.i.i.i310, %259
  %260 = ptrtoint ptr %page.172.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %page.172.i, align 4
  %and.i.i.i33.i313 = and i32 %261, 4194303
  %or4.i.i.i.i314 = or i32 %or3.i.i.i.i312, %and.i.i.i33.i313
  %tobool5.not.i.i.i.i315 = icmp eq i32 %or4.i.i.i.i314, 0
  br i1 %tobool5.not.i.i.i.i315, label %for.inc.i41.i, label %if.end.i.i34.i, !prof !582

for.body.i31.i:                                   ; preds = %for.inc.i41.i
  %add.ptr.i.i = getelementptr %struct.page, ptr %page.172.i, i32 %inc.i38.i
  %262 = getelementptr %struct.page, ptr %page.172.i, i32 %inc.i38.i, i32 2
  %call.i.i.i.i.i29.i = call zeroext i1 @__kasan_check_read(ptr noundef %262, i32 noundef 4) #27
  %263 = ptrtoint ptr %262 to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load volatile i32, ptr %262, align 4
  %cmp.not.i.i.i30.i = icmp eq i32 %264, -1
  br i1 %cmp.not.i.i.i30.i, label %page_expected_state.exit.i.i.i, label %if.end.i.i34.i.loopexit, !prof !582

page_expected_state.exit.i.i.i:                   ; preds = %for.body.i31.i
  %mapping.i.i.i.i = getelementptr %struct.page, ptr %page.172.i, i32 %inc.i38.i, i32 1, i32 0, i32 1
  %265 = ptrtoint ptr %mapping.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %mapping.i.i.i.i, align 4
  %267 = ptrtoint ptr %266 to i32
  %_refcount.i.i.i.i.i = getelementptr %struct.page, ptr %page.172.i, i32 %inc.i38.i, i32 3
  %call.i.i.i.i.i.i32.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #27
  %268 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  %or.i.i.i.i = or i32 %269, %267
  %memcg_data.i.i.i.i = getelementptr %struct.page, ptr %page.172.i, i32 %inc.i38.i, i32 4
  %270 = ptrtoint ptr %memcg_data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %memcg_data.i.i.i.i, align 4
  %or3.i.i.i.i = or i32 %or.i.i.i.i, %271
  %272 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %add.ptr.i.i, align 4
  %and.i.i.i33.i = and i32 %273, 4194303
  %or4.i.i.i.i = or i32 %or3.i.i.i.i, %and.i.i.i33.i
  %tobool5.not.i.i.i.i = icmp eq i32 %or4.i.i.i.i, 0
  br i1 %tobool5.not.i.i.i.i, label %for.inc.i41.i, label %if.end.i.i34.i.loopexit, !prof !582

if.end.i.i34.i.loopexit:                          ; preds = %page_expected_state.exit.i.i.i, %for.body.i31.i
  %cmp.i39.i.le = icmp slt i32 %inc.i38.i, %shl.i.i
  br label %if.end.i.i34.i

if.end.i.i34.i:                                   ; preds = %if.end.i.i34.i.loopexit, %page_expected_state.exit.i.i.i.preheader, %for.body.preheader.i.i
  %cmp20.i.lcssa.i = phi i1 [ true, %for.body.preheader.i.i ], [ true, %page_expected_state.exit.i.i.i.preheader ], [ %cmp.i39.i.le, %if.end.i.i34.i.loopexit ]
  %i.019.i.lcssa.i = phi i32 [ 0, %for.body.preheader.i.i ], [ 0, %page_expected_state.exit.i.i.i.preheader ], [ %inc.i38.i, %if.end.i.i34.i.loopexit ]
  %add.ptr.i.lcssa.i = phi ptr [ %page.172.i, %for.body.preheader.i.i ], [ %page.172.i, %page_expected_state.exit.i.i.i.preheader ], [ %add.ptr.i.i, %if.end.i.i34.i.loopexit ]
  %.lcssa186.i = phi ptr [ %250, %for.body.preheader.i.i ], [ %250, %page_expected_state.exit.i.i.i.preheader ], [ %262, %if.end.i.i34.i.loopexit ]
  %call.i.i.i.i6.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %.lcssa186.i, i32 noundef 4) #27
  %274 = ptrtoint ptr %.lcssa186.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load volatile i32, ptr %.lcssa186.i, align 4
  %cmp.not.i.i7.i.i = icmp eq i32 %275, -1
  br i1 %cmp.not.i.i7.i.i, label %if.end.i.i.i36.i, label %if.then.i.i.i35.i, !prof !582

if.then.i.i.i35.i:                                ; preds = %if.end.i.i34.i
  br label %if.end.i.i.i36.i

if.end.i.i.i36.i:                                 ; preds = %if.then.i.i.i35.i, %if.end.i.i34.i
  %bad_reason.0.i.i.i.i = phi ptr [ @.str.113, %if.then.i.i.i35.i ], [ null, %if.end.i.i34.i ]
  %mapping.i.i8.i.i = getelementptr %struct.page, ptr %page.172.i, i32 %i.019.i.lcssa.i, i32 1, i32 0, i32 1
  %276 = ptrtoint ptr %mapping.i.i8.i.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %mapping.i.i8.i.i, align 4
  %cmp2.not.i.i.i.i = icmp eq ptr %277, null
  br i1 %cmp2.not.i.i.i.i, label %if.end10.i.i.i37.i, label %if.then9.i.i.i.i, !prof !582

if.then9.i.i.i.i:                                 ; preds = %if.end.i.i.i36.i
  br label %if.end10.i.i.i37.i

if.end10.i.i.i37.i:                               ; preds = %if.then9.i.i.i.i, %if.end.i.i.i36.i
  %bad_reason.1.i.i.i.i = phi ptr [ @.str.114, %if.then9.i.i.i.i ], [ %bad_reason.0.i.i.i.i, %if.end.i.i.i36.i ]
  %_refcount.i.i.i9.i.i = getelementptr %struct.page, ptr %page.172.i, i32 %i.019.i.lcssa.i, i32 3
  %call.i.i.i.i.i10.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i9.i.i, i32 noundef 4) #27
  %278 = ptrtoint ptr %_refcount.i.i.i9.i.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load volatile i32, ptr %_refcount.i.i.i9.i.i, align 4
  %cmp12.not.i.i.i.i = icmp eq i32 %279, 0
  br i1 %cmp12.not.i.i.i.i, label %if.end20.i.i.i.i, label %if.then19.i.i.i.i, !prof !582

if.then19.i.i.i.i:                                ; preds = %if.end10.i.i.i37.i
  br label %if.end20.i.i.i.i

if.end20.i.i.i.i:                                 ; preds = %if.then19.i.i.i.i, %if.end10.i.i.i37.i
  %bad_reason.2.i.i.i.i = phi ptr [ @.str.115, %if.then19.i.i.i.i ], [ %bad_reason.1.i.i.i.i, %if.end10.i.i.i37.i ]
  %280 = ptrtoint ptr %add.ptr.i.lcssa.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %add.ptr.i.lcssa.i, align 4
  %and.i.i11.i.i = and i32 %281, 4194303
  %tobool22.not.i.i.i.i = icmp eq i32 %and.i.i11.i.i, 0
  br i1 %tobool22.not.i.i.i.i, label %if.end33.i.i.i.i, label %if.then29.i.i.i.i, !prof !582

if.then29.i.i.i.i:                                ; preds = %if.end20.i.i.i.i
  br label %if.end33.i.i.i.i

if.end33.i.i.i.i:                                 ; preds = %if.then29.i.i.i.i, %if.end20.i.i.i.i
  %bad_reason.3.i.i.i.i = phi ptr [ %bad_reason.2.i.i.i.i, %if.end20.i.i.i.i ], [ @.str.116, %if.then29.i.i.i.i ]
  %memcg_data.i.i12.i.i = getelementptr %struct.page, ptr %page.172.i, i32 %i.019.i.lcssa.i, i32 4
  %282 = ptrtoint ptr %memcg_data.i.i12.i.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %memcg_data.i.i12.i.i, align 4
  %tobool34.not.i.i.i.i = icmp eq i32 %283, 0
  br i1 %tobool34.not.i.i.i.i, label %check_new_page.exit.i.i, label %if.then41.i.i.i.i, !prof !582

if.then41.i.i.i.i:                                ; preds = %if.end33.i.i.i.i
  br label %check_new_page.exit.i.i

check_new_page.exit.i.i:                          ; preds = %if.then41.i.i.i.i, %if.end33.i.i.i.i
  %bad_reason.4.i.i.i.i = phi ptr [ @.str.118, %if.then41.i.i.i.i ], [ %bad_reason.3.i.i.i.i, %if.end33.i.i.i.i ]
  call fastcc void @bad_page(ptr noundef %add.ptr.i.lcssa.i, ptr noundef %bad_reason.4.i.i.i.i) #27
  br i1 %cmp20.i.lcssa.i, label %do.body65.i.backedge, label %if.end89.critedge.i

for.inc.i41.i:                                    ; preds = %page_expected_state.exit.i.i.i, %page_expected_state.exit.i.i.i.preheader
  %i.019.i195.i316 = phi i32 [ %inc.i38.i, %page_expected_state.exit.i.i.i ], [ 0, %page_expected_state.exit.i.i.i.preheader ]
  %inc.i38.i = add nuw nsw i32 %i.019.i195.i316, 1
  %exitcond.not.i40.i = icmp eq i32 %inc.i38.i, %smax.i.i
  br i1 %exitcond.not.i40.i, label %check_new_pages.exit.i, label %for.body.i31.i

check_new_pages.exit.i:                           ; preds = %for.inc.i41.i
  %cmp.i39.i.le577 = icmp slt i32 %inc.i38.i, %shl.i.i
  br i1 %cmp.i39.i.le577, label %do.body65.i.backedge, label %if.end89.critedge.i

do.body65.i.backedge:                             ; preds = %check_new_pages.exit.i, %check_new_page.exit.i.i
  br label %do.body65.i

if.end89.critedge.i:                              ; preds = %check_new_pages.exit.i, %check_new_page.exit.i.i, %land.rhs82.i
  %index.i.i = getelementptr inbounds %struct.page, ptr %page.172.i, i32 0, i32 1, i32 0, i32 2
  %284 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %index.i.i, align 4
  call void @__mod_zone_page_state(ptr noundef nonnull %zone.0329, i32 noundef 0, i32 noundef %sub.i141) #27
  %cmp.i42.i = icmp eq i32 %285, 4
  br i1 %cmp.i42.i, label %if.then.i43.i, label %__mod_zone_freepage_state.exit.i, !prof !584

if.then.i43.i:                                    ; preds = %if.end89.critedge.i
  call void @__mod_zone_page_state(ptr noundef nonnull %zone.0329, i32 noundef 10, i32 noundef %sub.i141) #27
  br label %__mod_zone_freepage_state.exit.i

__mod_zone_freepage_state.exit.i:                 ; preds = %if.then.i43.i, %if.end89.critedge.i
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call60.i) #27
  br label %out.sink.split.i

out.sink.split.i:                                 ; preds = %__mod_zone_freepage_state.exit.i, %do.end74.i.i
  %add.pn.in.in.in.i = phi ptr [ %page.172.i, %__mod_zone_freepage_state.exit.i ], [ %call35.i.i, %do.end74.i.i ]
  %.sink403.i = phi i32 [ %shl.i.i, %__mod_zone_freepage_state.exit.i ], [ 1, %do.end74.i.i ]
  %286 = call i32 @llvm.read_register.i32(metadata !572) #27
  %287 = ptrtoint ptr %add.pn.in.in.in.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %add.pn.in.in.i = load i32, ptr %add.pn.in.in.in.i, align 4
  %add.pn.in.i = lshr i32 %add.pn.in.in.i, 30
  %add.pn.i = or i32 %add.pn.in.i, 4
  %.sink405.in.i = getelementptr [76 x i32], ptr @vm_event_states, i32 0, i32 %add.pn.i
  %.sink405.i = ptrtoint ptr %.sink405.in.i to i32
  %and.i.i46.i = and i32 %286, -16384
  %288 = inttoptr i32 %and.i.i46.i to ptr
  %cpu.i47.i = getelementptr inbounds %struct.thread_info, ptr %288, i32 0, i32 3
  %289 = ptrtoint ptr %cpu.i47.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load i32, ptr %cpu.i47.i, align 4
  %arrayidx7.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %290
  %291 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load i32, ptr %arrayidx7.i.i, align 4
  %add.i48.i = add i32 %292, %.sink405.i
  %293 = inttoptr i32 %add.i48.i to ptr
  %294 = ptrtoint ptr %293 to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load i32, ptr %293, align 4
  %add8.i.i.i = add i32 %295, %.sink403.i
  store i32 %add8.i.i.i, ptr %293, align 4
  br label %out.i

out.i:                                            ; preds = %out.sink.split.i, %do.end74.i.i
  %page.2.i = phi ptr [ null, %do.end74.i.i ], [ %add.pn.in.in.in.i, %out.sink.split.i ]
  %flags94.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 21
  %296 = ptrtoint ptr %flags94.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load volatile i32, ptr %flags94.i, align 4
  %and1.i.i = and i32 %297, 1
  %tobool96.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool96.not.i, label %do.body100.i, label %if.then97.i

if.then97.i:                                      ; preds = %out.i
  call void @_clear_bit(i32 noundef 0, ptr noundef %flags94.i) #27
  %zone_pgdat.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 4
  %298 = ptrtoint ptr %zone_pgdat.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %zone_pgdat.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %zone.0329 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %299 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 1152
  call void @wakeup_kswapd(ptr noundef nonnull %zone.0329, i32 noundef 0, i32 noundef 0, i32 noundef %sub.ptr.div.i) #27
  br label %do.body100.i

do.body100.i:                                     ; preds = %if.then97.i, %out.i
  %tobool101.not.i = icmp eq ptr %page.2.i, null
  br i1 %tobool101.not.i, label %for.inc, label %land.rhs102.i

land.rhs102.i:                                    ; preds = %do.body100.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %300 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %page.2.i to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %300 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %sub.ptr.div.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %301 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i.i49.i = add i32 %sub.ptr.div.i.i.i, %301
  %zone_start_pfn.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 10
  %302 = ptrtoint ptr %zone_start_pfn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %zone_start_pfn.i.i.i, align 4
  %spanned_pages.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 12
  %304 = ptrtoint ptr %spanned_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load i32, ptr %spanned_pages.i.i.i, align 4
  %cmp.not.i.i.i50.i = icmp ule i32 %303, %add.i.i49.i
  %add.i.i.i.i51.i = add i32 %305, %303
  %cmp1.i.i.i.i = icmp ugt i32 %add.i.i.i.i51.i, %add.i.i49.i
  %or.cond.i.i52.i = select i1 %cmp.not.i.i.i50.i, i1 %cmp1.i.i.i.i, i1 false
  br i1 %or.cond.i.i52.i, label %if.end.i53.i, label %bad_range.exit.thread.i

bad_range.exit.thread.i:                          ; preds = %land.rhs102.i
  %name.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0329, i32 0, i32 15
  %306 = ptrtoint ptr %name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load ptr, ptr %name.i.i.i, align 16
  %call10.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134, i32 noundef %add.i.i49.i, i32 noundef 0, ptr noundef %307, i32 noundef %303, i32 noundef %add.i.i.i.i51.i) #29
  br label %if.then112.i

if.end.i53.i:                                     ; preds = %land.rhs102.i
  %308 = ptrtoint ptr %page.2.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load volatile i32, ptr %page.2.i, align 4
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %309, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i54.i, label %bad_range.exit.i, !prof !584

if.then.i.i.i.i54.i:                              ; preds = %if.end.i53.i
  call void @dump_page(ptr noundef nonnull %page.2.i, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

bad_range.exit.i:                                 ; preds = %if.end.i53.i
  %shr.i.i.i.i55.i = lshr i32 %309, 30
  %arrayidx.i.i.i56.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i55.i
  %cmp.not.i.not.i.not.i = icmp eq ptr %arrayidx.i.i.i56.i, %zone.0329
  br i1 %cmp.not.i.not.i.not.i, label %if.then60, label %if.then112.i, !prof !582

if.then112.i:                                     ; preds = %bad_range.exit.i, %bad_range.exit.thread.i
  call void @dump_page(ptr noundef nonnull %page.2.i, ptr noundef nonnull @.str.146) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3744, 0\0A.popsection", ""() #27, !srcloc !642
  unreachable

failed.i:                                         ; preds = %do.cond80.i, %for.inc.i115.i.i, %land.lhs.true18.i.i
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call60.i) #27
  br label %for.inc

if.then60:                                        ; preds = %bad_range.exit.i
  call void @post_alloc_hook(ptr noundef nonnull %page.2.i, i32 noundef %order, i32 noundef %gfp_mask) #27
  %and.i144 = and i32 %gfp_mask, 262144
  %tobool1.not.i = icmp eq i32 %and.i144, 0
  %or.cond.i145 = or i1 %tobool.not.i131, %tobool1.not.i
  br i1 %or.cond.i145, label %prep_new_page.exit, label %if.then.i146

if.then.i146:                                     ; preds = %if.then60
  call void @prep_compound_page(ptr noundef nonnull %page.2.i, i32 noundef %order) #27
  br label %prep_new_page.exit

prep_new_page.exit:                               ; preds = %if.then.i146, %if.then60
  %spec.select.i147 = select i1 %tobool37.not, ptr null, ptr inttoptr (i32 2 to ptr)
  %310 = getelementptr inbounds %struct.page, ptr %page.2.i, i32 0, i32 1
  %311 = ptrtoint ptr %310 to i32
  call void @__asan_store4_noabort(i32 %311)
  store ptr %spec.select.i147, ptr %310, align 4
  %tobool63 = icmp eq i32 %and68.i, 0
  %312 = or i1 %tobool.not.i131, %tobool63
  br i1 %312, label %cleanup80, label %if.then66, !prof !582

if.then66:                                        ; preds = %prep_new_page.exit
  call fastcc void @reserve_highatomic_pageblock(ptr noundef nonnull %page.2.i, ptr noundef nonnull %zone.0329)
  br label %cleanup80

for.inc:                                          ; preds = %failed.i, %do.body100.i, %if.then35, %if.end3.i.thread, %if.then13, %if.then8, %land.lhs.true5
  %last_pgdat_dirty_limit.2.ph = phi ptr [ %last_pgdat_dirty_limit.1327, %if.then8 ], [ %last_pgdat_dirty_limit.1327, %land.lhs.true5 ], [ %12, %if.then13 ], [ %last_pgdat_dirty_limit.1327, %if.then35 ], [ %last_pgdat_dirty_limit.1327, %failed.i ], [ %last_pgdat_dirty_limit.1327, %do.body100.i ], [ %last_pgdat_dirty_limit.1327, %if.end3.i.thread ]
  %incdec.ptr = getelementptr %struct.zoneref, ptr %z.0326, i32 1
  %313 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %highest_zoneidx, align 4
  %315 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load ptr, ptr %nodemask, align 4
  %tobool.not.i = icmp eq ptr %316, null
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end.i, !prof !582

land.rhs.i:                                       ; preds = %for.inc
  %zone_idx.i.i = getelementptr %struct.zoneref, ptr %z.0326, i32 1, i32 1
  %317 = ptrtoint ptr %zone_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load i32, ptr %zone_idx.i.i, align 4
  %cmp.not.i = icmp ugt i32 %318, %314
  br i1 %cmp.not.i, label %if.end.i, label %next_zones_zonelist.exit, !prof !584

if.end.i:                                         ; preds = %land.rhs.i, %for.inc
  %call3.i = call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr, i32 noundef %314, ptr noundef %316) #27
  br label %next_zones_zonelist.exit

next_zones_zonelist.exit:                         ; preds = %if.end.i, %land.rhs.i
  %retval.0.i = phi ptr [ %call3.i, %if.end.i ], [ %incdec.ptr, %land.rhs.i ]
  %319 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %zone.0 = load ptr, ptr %retval.0.i, align 4
  %tobool2.not = icmp eq ptr %zone.0, null
  br i1 %tobool2.not, label %cleanup80, label %for.body

cleanup80:                                        ; preds = %next_zones_zonelist.exit, %if.then66, %prep_new_page.exit, %retry
  %retval.3 = phi ptr [ %page.2.i, %if.then66 ], [ %page.2.i, %prep_new_page.exit ], [ null, %retry ], [ null, %next_zones_zonelist.exit ]
  ret ptr %retval.3
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__alloc_pages_slowpath(i32 noundef %gfp_mask, i32 noundef %order, ptr noundef %ac) unnamed_addr #5 align 64 {
entry:
  %oc.i = alloca %struct.oom_control, align 4
  %pflags.i.i = alloca i32, align 4
  %compact_result = alloca i32, align 4
  %and = and i32 %gfp_mask, 1024
  %tobool.not = icmp eq i32 %and, 0
  %cmp = icmp ugt i32 %order, 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %compact_result) #27
  %0 = ptrtoint ptr %compact_result to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %compact_result, align 4, !annotation !637
  %and2 = and i32 %gfp_mask, 1536
  %cmp3 = icmp eq i32 %and2, 1536
  br i1 %cmp3, label %land.rhs, label %if.end32

land.rhs:                                         ; preds = %entry
  %.b475 = load i1, ptr @__alloc_pages_slowpath.__already_done, align 1
  br i1 %.b475, label %if.end32, label %if.then, !prof !582

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @__alloc_pages_slowpath.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4887, i32 noundef 9, ptr noundef null) #27
  br label %if.end32

if.end32:                                         ; preds = %if.then, %land.rhs, %entry
  %and42 = and i32 %gfp_mask, -513
  %spec.select = select i1 %cmp3, i32 %and42, i32 %gfp_mask
  %and.i = and i32 %spec.select, 2080
  %or.i = or i32 %and.i, 64
  %and4.i = and i32 %spec.select, 512
  %tobool.not.i = icmp eq i32 %and4.i, 0
  %and5.i = lshr i32 %spec.select, 15
  %1 = and i32 %and5.i, 16
  %2 = or i32 %1, %and.i
  %3 = xor i32 %2, 16
  %or25.i = or i32 %and.i, 80
  %and.i.i42.i = and i32 %spec.select, 24
  %cmp.i.i43.i = icmp eq i32 %and.i.i42.i, 24
  %cmp2.i.i = icmp eq i32 %and.i.i42.i, 8
  %highest_zoneidx = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 4
  %nodemask = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 1
  %preferred_zoneref = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 2
  %and51 = and i32 %spec.select, 1048576
  %tobool52.not = icmp eq i32 %and51, 0
  %cmp74.not = icmp eq i32 %order, 0
  %migratetype = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 3
  %and.i.i499 = and i32 %spec.select, 524288
  %tobool.not.i.i500 = icmp eq i32 %and.i.i499, 0
  %and3.i.i = and i32 %spec.select, 131072
  %tobool4.not.i.i = icmp eq i32 %and3.i.i, 0
  %and86 = and i32 %spec.select, 65536
  %tobool87.not = icmp ne i32 %and86, 0
  %4 = and i1 %cmp, %tobool87.not
  %and181 = and i32 %spec.select, 32768
  %tobool182.not = icmp eq i32 %and181, 0
  %and7.i.i.i.i = and i32 %spec.select, -193
  %and11.i.i.i.i = and i32 %spec.select, -129
  %tobool139.not = icmp ne i32 %and86, 0
  %and144 = and i32 %spec.select, 16384
  %tobool145.not = icmp eq i32 %and144, 0
  %or.cond477 = and i1 %cmp, %tobool145.not
  %cmp.i568 = icmp ult i32 %order, 4
  %cmp.inv.i = icmp slt i32 %order, 4
  %spec.select.i604 = select i1 %cmp.inv.i, i32 16, i32 4
  %cmp23.i = icmp sgt i32 %order, 3
  %cond.i = zext i1 %cmp23.i to i32
  %nodemask.i616 = getelementptr inbounds %struct.oom_control, ptr %oc.i, i32 0, i32 1
  %memcg.i = getelementptr inbounds %struct.oom_control, ptr %oc.i, i32 0, i32 2
  %gfp_mask3.i = getelementptr inbounds %struct.oom_control, ptr %oc.i, i32 0, i32 3
  %order4.i = getelementptr inbounds %struct.oom_control, ptr %oc.i, i32 0, i32 4
  %totalpages.i = getelementptr inbounds %struct.oom_control, ptr %oc.i, i32 0, i32 5
  %or.i620 = and i32 %spec.select, -1049601
  %and.i621 = or i32 %or.i620, 1048576
  %and17.i628 = and i32 %spec.select, 2113536
  %brmerge = or i1 %tobool139.not, %or.cond477
  br label %retry_cpuset

retry_cpuset:                                     ; preds = %retry_cpuset.backedge, %if.end32
  %call = call fastcc i32 @read_mems_allowed_begin()
  br i1 %tobool.not.i, label %if.else.i, label %if.end27.i

if.else.i:                                        ; preds = %retry_cpuset
  %5 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i, align 8
  %prio.i.i = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %prio.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %prio.i.i, align 8
  %cmp.i.i.i = icmp sgt i32 %10, 99
  br i1 %cmp.i.i.i, label %if.end27.i, label %land.lhs.true.i, !prof !582

land.lhs.true.i:                                  ; preds = %if.else.i
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and15.i = and i32 %12, 15728640
  %13 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i38.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i38.i to ptr
  %preempt_count.i39.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i39.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i39.i, align 4
  %and17.i = and i32 %16, 983040
  %or18.i = or i32 %and17.i, %and15.i
  %17 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i40.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i40.i to ptr
  %preempt_count.i41.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i41.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i41.i, align 4
  %and21.i = and i32 %20, 256
  %or22.i = or i32 %or18.i, %and21.i
  %tobool23.not.i = icmp eq i32 %or22.i, 0
  %spec.select37.i = select i1 %tobool23.not.i, i32 %or25.i, i32 %or.i
  br label %if.end27.i

if.end27.i:                                       ; preds = %land.lhs.true.i, %if.else.i, %retry_cpuset
  %alloc_flags.1.i = phi i32 [ %or.i, %if.else.i ], [ %spec.select37.i, %land.lhs.true.i ], [ %3, %retry_cpuset ]
  br i1 %cmp.i.i43.i, label %do.end.i.i.i, label %gfp_to_alloc_flags.exit, !prof !584

do.end.i.i.i:                                     ; preds = %if.end27.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.144, i32 noundef 347, i32 noundef 9, ptr noundef null) #27
  br label %gfp_to_alloc_flags.exit

gfp_to_alloc_flags.exit:                          ; preds = %do.end.i.i.i, %if.end27.i
  %21 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool25.not.i.i.i = icmp eq i32 %21, 0
  %cmp.i.i = and i1 %cmp2.i.i, %tobool25.not.i.i.i
  %or.i.i = or i32 %alloc_flags.1.i, 128
  %spec.select.i.i = select i1 %cmp.i.i, i32 %or.i.i, i32 %alloc_flags.1.i
  %22 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ac, align 4
  %24 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %highest_zoneidx, align 4
  %26 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i = icmp eq ptr %27, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end.i.i, !prof !582

land.rhs.i.i:                                     ; preds = %gfp_to_alloc_flags.exit
  %zone_idx.i.i.i = getelementptr inbounds %struct.zoneref, ptr %23, i32 0, i32 1
  %28 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %zone_idx.i.i.i, align 4
  %cmp.not.i.i = icmp ugt i32 %29, %25
  br i1 %cmp.not.i.i, label %if.end.i.i, label %first_zones_zonelist.exit, !prof !584

if.end.i.i:                                       ; preds = %land.rhs.i.i, %gfp_to_alloc_flags.exit
  %call3.i.i = call ptr @__next_zones_zonelist(ptr noundef %23, i32 noundef %25, ptr noundef %27) #27
  br label %first_zones_zonelist.exit

first_zones_zonelist.exit:                        ; preds = %if.end.i.i, %land.rhs.i.i
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ %23, %land.rhs.i.i ]
  %30 = ptrtoint ptr %preferred_zoneref to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %retval.0.i.i, ptr %preferred_zoneref, align 4
  %31 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %retval.0.i.i, align 4
  %tobool47.not = icmp eq ptr %32, null
  br i1 %tobool47.not, label %nopage, label %if.end49

if.end49:                                         ; preds = %first_zones_zonelist.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_insane_config_key, ptr blockaddress(@__alloc_pages_slowpath, %l_yes.i.i)) #27
          to label %cpusets_insane_config.exit [label %l_yes.i.i], !srcloc !583

l_yes.i.i:                                        ; preds = %if.end49
  br label %cpusets_insane_config.exit

cpusets_insane_config.exit:                       ; preds = %l_yes.i.i, %if.end49
  %retval.0.i.i480 = phi i1 [ false, %l_yes.i.i ], [ true, %if.end49 ]
  %or.cond = or i1 %tobool52.not, %retval.0.i.i480
  br i1 %or.cond, label %if.end62, label %if.then53

if.then53:                                        ; preds = %cpusets_insane_config.exit
  %33 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ac, align 4
  %35 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %highest_zoneidx, align 4
  %37 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i481 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i481 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 2
  %39 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %task, align 8
  %mems_allowed = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 160
  %tobool.not.i.i482 = icmp eq ptr %mems_allowed, null
  br i1 %tobool.not.i.i482, label %land.rhs.i.i485, label %if.end.i.i487, !prof !582

land.rhs.i.i485:                                  ; preds = %if.then53
  %zone_idx.i.i.i483 = getelementptr inbounds %struct.zoneref, ptr %34, i32 0, i32 1
  %41 = ptrtoint ptr %zone_idx.i.i.i483 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %zone_idx.i.i.i483, align 4
  %cmp.not.i.i484 = icmp ugt i32 %42, %36
  br i1 %cmp.not.i.i484, label %if.end.i.i487, label %first_zones_zonelist.exit489, !prof !584

if.end.i.i487:                                    ; preds = %land.rhs.i.i485, %if.then53
  %call3.i.i486 = call ptr @__next_zones_zonelist(ptr noundef %34, i32 noundef %36, ptr noundef %mems_allowed) #27
  br label %first_zones_zonelist.exit489

first_zones_zonelist.exit489:                     ; preds = %if.end.i.i487, %land.rhs.i.i485
  %retval.0.i.i488 = phi ptr [ %call3.i.i486, %if.end.i.i487 ], [ %34, %land.rhs.i.i485 ]
  %43 = ptrtoint ptr %retval.0.i.i488 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %retval.0.i.i488, align 4
  %tobool59.not = icmp eq ptr %44, null
  br i1 %tobool59.not, label %nopage, label %if.end62

if.end62:                                         ; preds = %first_zones_zonelist.exit489, %cpusets_insane_config.exit
  %and63 = and i32 %spec.select.i.i, 2048
  %tobool64.not = icmp eq i32 %and63, 0
  br i1 %tobool64.not, label %if.end66, label %if.then65

if.then65:                                        ; preds = %if.end62
  %45 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %highest_zoneidx, align 4
  %47 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ac, align 4
  %49 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i.i = icmp eq ptr %50, null
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %if.end.i.i.i, !prof !582

land.rhs.i.i.i:                                   ; preds = %if.then65
  %zone_idx.i.i.i.i = getelementptr inbounds %struct.zoneref, ptr %48, i32 0, i32 1
  %51 = ptrtoint ptr %zone_idx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %zone_idx.i.i.i.i, align 4
  %cmp.not.i.i.i = icmp ugt i32 %52, %46
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %first_zones_zonelist.exit.i, !prof !584

if.end.i.i.i:                                     ; preds = %land.rhs.i.i.i, %if.then65
  %call3.i.i.i = call ptr @__next_zones_zonelist(ptr noundef %48, i32 noundef %46, ptr noundef %50) #27
  br label %first_zones_zonelist.exit.i

first_zones_zonelist.exit.i:                      ; preds = %if.end.i.i.i, %land.rhs.i.i.i
  %retval.0.i.i.i = phi ptr [ %call3.i.i.i, %if.end.i.i.i ], [ %48, %land.rhs.i.i.i ]
  %53 = ptrtoint ptr %retval.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %zone.017.i = load ptr, ptr %retval.0.i.i.i, align 4
  %tobool.not18.i = icmp eq ptr %zone.017.i, null
  br i1 %tobool.not18.i, label %if.end66, label %for.body.i

for.body.i:                                       ; preds = %next_zones_zonelist.exit.i, %first_zones_zonelist.exit.i
  %zone.021.i = phi ptr [ %zone.0.i, %next_zones_zonelist.exit.i ], [ %zone.017.i, %first_zones_zonelist.exit.i ]
  %last_pgdat.020.i = phi ptr [ %57, %next_zones_zonelist.exit.i ], [ null, %first_zones_zonelist.exit.i ]
  %z.019.i = phi ptr [ %retval.0.i.i497, %next_zones_zonelist.exit.i ], [ %retval.0.i.i.i, %first_zones_zonelist.exit.i ]
  %zone_pgdat.i = getelementptr inbounds %struct.zone, ptr %zone.021.i, i32 0, i32 4
  %54 = ptrtoint ptr %zone_pgdat.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %zone_pgdat.i, align 4
  %cmp.not.i = icmp eq ptr %last_pgdat.020.i, %55
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i490

if.then.i490:                                     ; preds = %for.body.i
  call void @wakeup_kswapd(ptr noundef nonnull %zone.021.i, i32 noundef %spec.select, i32 noundef %order, i32 noundef %46) #27
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i490, %for.body.i
  %56 = ptrtoint ptr %zone_pgdat.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %zone_pgdat.i, align 4
  %incdec.ptr.i = getelementptr %struct.zoneref, ptr %z.019.i, i32 1
  %58 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i491 = icmp eq ptr %59, null
  br i1 %tobool.not.i.i491, label %land.rhs.i.i494, label %if.end.i.i496, !prof !582

land.rhs.i.i494:                                  ; preds = %if.end.i
  %zone_idx.i.i.i492 = getelementptr %struct.zoneref, ptr %z.019.i, i32 1, i32 1
  %60 = ptrtoint ptr %zone_idx.i.i.i492 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %zone_idx.i.i.i492, align 4
  %cmp.not.i.i493 = icmp ugt i32 %61, %46
  br i1 %cmp.not.i.i493, label %if.end.i.i496, label %next_zones_zonelist.exit.i, !prof !584

if.end.i.i496:                                    ; preds = %land.rhs.i.i494, %if.end.i
  %call3.i.i495 = call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr.i, i32 noundef %46, ptr noundef %59) #27
  br label %next_zones_zonelist.exit.i

next_zones_zonelist.exit.i:                       ; preds = %if.end.i.i496, %land.rhs.i.i494
  %retval.0.i.i497 = phi ptr [ %call3.i.i495, %if.end.i.i496 ], [ %incdec.ptr.i, %land.rhs.i.i494 ]
  %62 = ptrtoint ptr %retval.0.i.i497 to i32
  call void @__asan_load4_noabort(i32 %62)
  %zone.0.i = load ptr, ptr %retval.0.i.i497, align 4
  %tobool.not.i498 = icmp eq ptr %zone.0.i, null
  br i1 %tobool.not.i498, label %if.end66, label %for.body.i

if.end66:                                         ; preds = %next_zones_zonelist.exit.i, %first_zones_zonelist.exit.i, %if.end62
  %call67 = call fastcc ptr @get_page_from_freelist(i32 noundef %spec.select, i32 noundef %order, i32 noundef %spec.select.i.i, ptr noundef %ac)
  %tobool68.not = icmp eq ptr %call67, null
  br i1 %tobool68.not, label %if.end70, label %cleanup363

if.end70:                                         ; preds = %if.end66
  br i1 %tobool.not, label %retry.preheader, label %land.lhs.true72

land.lhs.true72:                                  ; preds = %if.end70
  br i1 %cmp, label %land.lhs.true77, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true72
  br i1 %cmp74.not, label %retry.preheader, label %land.lhs.true75

land.lhs.true75:                                  ; preds = %lor.lhs.false
  %63 = ptrtoint ptr %migratetype to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %migratetype, align 4
  %cmp76.not = icmp eq i32 %64, 1
  br i1 %cmp76.not, label %retry.preheader, label %land.lhs.true77

land.lhs.true77:                                  ; preds = %land.lhs.true75, %land.lhs.true72
  br i1 %tobool.not.i.i500, label %if.end.i.i501, label %if.then79, !prof !582

if.end.i.i501:                                    ; preds = %land.lhs.true77
  br i1 %tobool4.not.i.i, label %if.end6.i.i, label %retry.preheader

if.end6.i.i:                                      ; preds = %if.end.i.i501
  %65 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i = and i32 %65, -16384
  %66 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %and8.i.i = and i32 %68, 256
  %tobool9.not.i.i = icmp eq i32 %and8.i.i, 0
  br i1 %tobool9.not.i.i, label %if.end14.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %if.end6.i.i
  %69 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 2
  %71 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %task.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %72, i32 0, i32 3
  %73 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %flags.i.i, align 4
  %and11.i.i = and i32 %74, 2048
  %tobool12.not.i.i = icmp eq i32 %and11.i.i, 0
  br i1 %tobool12.not.i.i, label %if.end14.i.i, label %retry.preheader

if.end14.i.i:                                     ; preds = %land.lhs.true.i.i, %if.end6.i.i
  %75 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i38.i.i = and i32 %75, -16384
  %76 = inttoptr i32 %and.i.i38.i.i to ptr
  %preempt_count.i39.i.i = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %preempt_count.i39.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %preempt_count.i39.i.i, align 4
  %and16.i.i = and i32 %78, 15728640
  %79 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i40.i.i = and i32 %79, -16384
  %80 = inttoptr i32 %and.i.i40.i.i to ptr
  %preempt_count.i41.i.i = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 1
  %81 = ptrtoint ptr %preempt_count.i41.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile i32, ptr %preempt_count.i41.i.i, align 4
  %and18.i.i = and i32 %82, 983040
  %or.i.i502 = or i32 %and18.i.i, %and16.i.i
  %83 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i42.i.i = and i32 %83, -16384
  %84 = inttoptr i32 %and.i.i42.i.i to ptr
  %preempt_count.i43.i.i = getelementptr inbounds %struct.thread_info, ptr %84, i32 0, i32 1
  %85 = ptrtoint ptr %preempt_count.i43.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %preempt_count.i43.i.i, align 4
  %and20.i.i = and i32 %86, 65280
  %or21.i.i = or i32 %or.i.i502, %and20.i.i
  %tobool22.not.i.i = icmp eq i32 %or21.i.i, 0
  br i1 %tobool22.not.i.i, label %if.then23.i.i, label %if.then79

if.then23.i.i:                                    ; preds = %if.end14.i.i
  %87 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i44.i.i = and i32 %87, -16384
  %88 = inttoptr i32 %and.i44.i.i to ptr
  %task25.i.i = getelementptr inbounds %struct.thread_info, ptr %88, i32 0, i32 2
  %89 = ptrtoint ptr %task25.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %task25.i.i, align 8
  %flags26.i.i = getelementptr inbounds %struct.task_struct, ptr %90, i32 0, i32 3
  %91 = ptrtoint ptr %flags26.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %flags26.i.i, align 4
  %and27.i.i = and i32 %92, 2048
  %tobool28.not.i.i = icmp eq i32 %and27.i.i, 0
  br i1 %tobool28.not.i.i, label %if.else.i.i, label %retry.preheader

if.else.i.i:                                      ; preds = %if.then23.i.i
  %signal.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %90, i32 0, i32 111
  %93 = ptrtoint ptr %signal.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %signal.i.i.i.i, align 16
  %oom_mm.i.i.i.i = getelementptr inbounds %struct.signal_struct, ptr %94, i32 0, i32 59
  %95 = ptrtoint ptr %oom_mm.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %oom_mm.i.i.i.i, align 4
  %tobool.i.i.not.i.i = icmp eq ptr %96, null
  br i1 %tobool.i.i.not.i.i, label %if.then79, label %retry.preheader

if.then79:                                        ; preds = %if.else.i.i, %if.end14.i.i, %land.lhs.true77
  %call80 = call fastcc ptr @__alloc_pages_direct_compact(i32 noundef %spec.select, i32 noundef %order, i32 noundef %spec.select.i.i, ptr noundef %ac, i32 noundef 2, ptr noundef nonnull %compact_result)
  %tobool81.not = icmp eq ptr %call80, null
  br i1 %tobool81.not, label %if.end83, label %cleanup363

if.end83:                                         ; preds = %if.then79
  br i1 %4, label %if.then88, label %retry.preheader

if.then88:                                        ; preds = %if.end83
  %97 = ptrtoint ptr %compact_result to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %compact_result, align 4
  %.off = add i32 %98, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %nopage, label %retry.preheader

retry.preheader:                                  ; preds = %if.end358, %if.then88, %if.end83, %if.else.i.i, %if.then23.i.i, %land.lhs.true.i.i, %if.end.i.i501, %land.lhs.true75, %lor.lhs.false, %if.end70
  %compact_priority.1.ph = phi i32 [ %compact_priority.5, %if.end358 ], [ 1, %if.end70 ], [ 1, %if.end83 ], [ 1, %lor.lhs.false ], [ 1, %land.lhs.true75 ], [ 2, %if.then88 ], [ 1, %if.end.i.i501 ], [ 1, %land.lhs.true.i.i ], [ 1, %if.then23.i.i ], [ 1, %if.else.i.i ]
  %compaction_retries.0.ph = phi i32 [ %compaction_retries.6, %if.end358 ], [ 0, %if.end70 ], [ 0, %if.end83 ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true75 ], [ 0, %if.then88 ], [ 0, %if.end.i.i501 ], [ 0, %land.lhs.true.i.i ], [ 0, %if.then23.i.i ], [ 0, %if.else.i.i ]
  %no_progress_loops.0.ph = phi i32 [ %no_progress_loops.3, %if.end358 ], [ 0, %if.end70 ], [ 0, %if.end83 ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true75 ], [ 0, %if.then88 ], [ 0, %if.end.i.i501 ], [ 0, %land.lhs.true.i.i ], [ 0, %if.then23.i.i ], [ 0, %if.else.i.i ]
  %alloc_flags.0.ph = phi i32 [ %alloc_flags.2, %if.end358 ], [ %spec.select.i.i, %if.end70 ], [ %spec.select.i.i, %if.end83 ], [ %spec.select.i.i, %lor.lhs.false ], [ %spec.select.i.i, %land.lhs.true75 ], [ %spec.select.i.i, %if.then88 ], [ %spec.select.i.i, %if.end.i.i501 ], [ %spec.select.i.i, %land.lhs.true.i.i ], [ %spec.select.i.i, %if.then23.i.i ], [ %spec.select.i.i, %if.else.i.i ]
  br label %retry.outer

retry.outer:                                      ; preds = %if.then25.i, %retry.preheader
  %compact_priority.1.ph716 = phi i32 [ %compact_priority.1.ph, %retry.preheader ], [ %dec.i, %if.then25.i ]
  %compaction_retries.0.ph717 = phi i32 [ %compaction_retries.0.ph, %retry.preheader ], [ 0, %if.then25.i ]
  %no_progress_loops.0.ph718 = phi i32 [ %no_progress_loops.0.ph, %retry.preheader ], [ %no_progress_loops.2690, %if.then25.i ]
  %alloc_flags.0.ph719 = phi i32 [ %alloc_flags.0.ph, %retry.preheader ], [ %alloc_flags.1681, %if.then25.i ]
  %cmp24.i = icmp ugt i32 %compact_priority.1.ph716, %cond.i
  br label %retry.outer720

retry.outer720:                                   ; preds = %retry.outer720.backedge, %retry.outer
  %compaction_retries.0.ph721 = phi i32 [ %compaction_retries.0.ph717, %retry.outer ], [ %compaction_retries.0.ph721.be, %retry.outer720.backedge ]
  %no_progress_loops.0.ph722 = phi i32 [ %no_progress_loops.0.ph718, %retry.outer ], [ %no_progress_loops.0.ph722.be, %retry.outer720.backedge ]
  %alloc_flags.0.ph723 = phi i32 [ %alloc_flags.0.ph719, %retry.outer ], [ %alloc_flags.1681, %retry.outer720.backedge ]
  br label %retry

retry:                                            ; preds = %retry.backedge, %retry.outer720
  %no_progress_loops.0 = phi i32 [ %no_progress_loops.0.ph722, %retry.outer720 ], [ %no_progress_loops.0.be, %retry.backedge ]
  %alloc_flags.0 = phi i32 [ %alloc_flags.0.ph723, %retry.outer720 ], [ %alloc_flags.1681, %retry.backedge ]
  %and96 = and i32 %alloc_flags.0, 2048
  %tobool97.not = icmp eq i32 %and96, 0
  br i1 %tobool97.not, label %if.end99, label %if.then98

if.then98:                                        ; preds = %retry
  %99 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %highest_zoneidx, align 4
  %101 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %ac, align 4
  %103 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i.i505 = icmp eq ptr %104, null
  br i1 %tobool.not.i.i.i505, label %land.rhs.i.i.i508, label %if.end.i.i.i510, !prof !582

land.rhs.i.i.i508:                                ; preds = %if.then98
  %zone_idx.i.i.i.i506 = getelementptr inbounds %struct.zoneref, ptr %102, i32 0, i32 1
  %105 = ptrtoint ptr %zone_idx.i.i.i.i506 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %zone_idx.i.i.i.i506, align 4
  %cmp.not.i.i.i507 = icmp ugt i32 %106, %100
  br i1 %cmp.not.i.i.i507, label %if.end.i.i.i510, label %first_zones_zonelist.exit.i514, !prof !584

if.end.i.i.i510:                                  ; preds = %land.rhs.i.i.i508, %if.then98
  %call3.i.i.i509 = call ptr @__next_zones_zonelist(ptr noundef %102, i32 noundef %100, ptr noundef %104) #27
  br label %first_zones_zonelist.exit.i514

first_zones_zonelist.exit.i514:                   ; preds = %if.end.i.i.i510, %land.rhs.i.i.i508
  %retval.0.i.i.i511 = phi ptr [ %call3.i.i.i509, %if.end.i.i.i510 ], [ %102, %land.rhs.i.i.i508 ]
  %107 = ptrtoint ptr %retval.0.i.i.i511 to i32
  call void @__asan_load4_noabort(i32 %107)
  %zone.017.i512 = load ptr, ptr %retval.0.i.i.i511, align 4
  %tobool.not18.i513 = icmp eq ptr %zone.017.i512, null
  br i1 %tobool.not18.i513, label %if.end99, label %for.body.i520

for.body.i520:                                    ; preds = %next_zones_zonelist.exit.i533, %first_zones_zonelist.exit.i514
  %zone.021.i515 = phi ptr [ %zone.0.i531, %next_zones_zonelist.exit.i533 ], [ %zone.017.i512, %first_zones_zonelist.exit.i514 ]
  %last_pgdat.020.i516 = phi ptr [ %111, %next_zones_zonelist.exit.i533 ], [ null, %first_zones_zonelist.exit.i514 ]
  %z.019.i517 = phi ptr [ %retval.0.i.i530, %next_zones_zonelist.exit.i533 ], [ %retval.0.i.i.i511, %first_zones_zonelist.exit.i514 ]
  %zone_pgdat.i518 = getelementptr inbounds %struct.zone, ptr %zone.021.i515, i32 0, i32 4
  %108 = ptrtoint ptr %zone_pgdat.i518 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %zone_pgdat.i518, align 4
  %cmp.not.i519 = icmp eq ptr %last_pgdat.020.i516, %109
  br i1 %cmp.not.i519, label %if.end.i524, label %if.then.i521

if.then.i521:                                     ; preds = %for.body.i520
  call void @wakeup_kswapd(ptr noundef nonnull %zone.021.i515, i32 noundef %spec.select, i32 noundef %order, i32 noundef %100) #27
  br label %if.end.i524

if.end.i524:                                      ; preds = %if.then.i521, %for.body.i520
  %110 = ptrtoint ptr %zone_pgdat.i518 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %zone_pgdat.i518, align 4
  %incdec.ptr.i522 = getelementptr %struct.zoneref, ptr %z.019.i517, i32 1
  %112 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i523 = icmp eq ptr %113, null
  br i1 %tobool.not.i.i523, label %land.rhs.i.i527, label %if.end.i.i529, !prof !582

land.rhs.i.i527:                                  ; preds = %if.end.i524
  %zone_idx.i.i.i525 = getelementptr %struct.zoneref, ptr %z.019.i517, i32 1, i32 1
  %114 = ptrtoint ptr %zone_idx.i.i.i525 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %zone_idx.i.i.i525, align 4
  %cmp.not.i.i526 = icmp ugt i32 %115, %100
  br i1 %cmp.not.i.i526, label %if.end.i.i529, label %next_zones_zonelist.exit.i533, !prof !584

if.end.i.i529:                                    ; preds = %land.rhs.i.i527, %if.end.i524
  %call3.i.i528 = call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr.i522, i32 noundef %100, ptr noundef %113) #27
  br label %next_zones_zonelist.exit.i533

next_zones_zonelist.exit.i533:                    ; preds = %if.end.i.i529, %land.rhs.i.i527
  %retval.0.i.i530 = phi ptr [ %call3.i.i528, %if.end.i.i529 ], [ %incdec.ptr.i522, %land.rhs.i.i527 ]
  %116 = ptrtoint ptr %retval.0.i.i530 to i32
  call void @__asan_load4_noabort(i32 %116)
  %zone.0.i531 = load ptr, ptr %retval.0.i.i530, align 4
  %tobool.not.i532 = icmp eq ptr %zone.0.i531, null
  br i1 %tobool.not.i532, label %if.end99, label %for.body.i520

if.end99:                                         ; preds = %next_zones_zonelist.exit.i533, %first_zones_zonelist.exit.i514, %retry
  br i1 %tobool.not.i.i500, label %if.end.i537, label %if.end104, !prof !582

if.end.i537:                                      ; preds = %if.end99
  br i1 %tobool4.not.i.i, label %if.end6.i, label %if.then102

if.end6.i:                                        ; preds = %if.end.i537
  %117 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i538 = and i32 %117, -16384
  %118 = inttoptr i32 %and.i.i.i538 to ptr
  %preempt_count.i.i539 = getelementptr inbounds %struct.thread_info, ptr %118, i32 0, i32 1
  %119 = ptrtoint ptr %preempt_count.i.i539 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile i32, ptr %preempt_count.i.i539, align 4
  %and8.i = and i32 %120, 256
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %if.end14.i, label %land.lhs.true.i542

land.lhs.true.i542:                               ; preds = %if.end6.i
  %121 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i540 = and i32 %121, -16384
  %122 = inttoptr i32 %and.i.i540 to ptr
  %task.i541 = getelementptr inbounds %struct.thread_info, ptr %122, i32 0, i32 2
  %123 = ptrtoint ptr %task.i541 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %task.i541, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %124, i32 0, i32 3
  %125 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %flags.i, align 4
  %and11.i = and i32 %126, 2048
  %tobool12.not.i = icmp eq i32 %and11.i, 0
  br i1 %tobool12.not.i, label %if.end14.i, label %if.then102

if.end14.i:                                       ; preds = %land.lhs.true.i542, %if.end6.i
  %127 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i38.i543 = and i32 %127, -16384
  %128 = inttoptr i32 %and.i.i38.i543 to ptr
  %preempt_count.i39.i544 = getelementptr inbounds %struct.thread_info, ptr %128, i32 0, i32 1
  %129 = ptrtoint ptr %preempt_count.i39.i544 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load volatile i32, ptr %preempt_count.i39.i544, align 4
  %and16.i = and i32 %130, 15728640
  %131 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i40.i545 = and i32 %131, -16384
  %132 = inttoptr i32 %and.i.i40.i545 to ptr
  %preempt_count.i41.i546 = getelementptr inbounds %struct.thread_info, ptr %132, i32 0, i32 1
  %133 = ptrtoint ptr %preempt_count.i41.i546 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load volatile i32, ptr %preempt_count.i41.i546, align 4
  %and18.i = and i32 %134, 983040
  %or.i547 = or i32 %and18.i, %and16.i
  %135 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i42.i548 = and i32 %135, -16384
  %136 = inttoptr i32 %and.i.i42.i548 to ptr
  %preempt_count.i43.i = getelementptr inbounds %struct.thread_info, ptr %136, i32 0, i32 1
  %137 = ptrtoint ptr %preempt_count.i43.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %preempt_count.i43.i, align 4
  %and20.i = and i32 %138, 65280
  %or21.i = or i32 %or.i547, %and20.i
  %tobool22.not.i = icmp eq i32 %or21.i, 0
  br i1 %tobool22.not.i, label %if.then23.i, label %if.end104

if.then23.i:                                      ; preds = %if.end14.i
  %139 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i44.i = and i32 %139, -16384
  %140 = inttoptr i32 %and.i44.i to ptr
  %task25.i = getelementptr inbounds %struct.thread_info, ptr %140, i32 0, i32 2
  %141 = ptrtoint ptr %task25.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %task25.i, align 8
  %flags26.i = getelementptr inbounds %struct.task_struct, ptr %142, i32 0, i32 3
  %143 = ptrtoint ptr %flags26.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %flags26.i, align 4
  %and27.i = and i32 %144, 2048
  %tobool28.not.i = icmp eq i32 %and27.i, 0
  br i1 %tobool28.not.i, label %if.else.i549, label %if.then102

if.else.i549:                                     ; preds = %if.then23.i
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %142, i32 0, i32 111
  %145 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %signal.i.i.i, align 16
  %oom_mm.i.i.i = getelementptr inbounds %struct.signal_struct, ptr %146, i32 0, i32 59
  %147 = ptrtoint ptr %oom_mm.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %oom_mm.i.i.i, align 4
  %tobool.i.i.not.i = icmp eq ptr %148, null
  br i1 %tobool.i.i.not.i, label %if.end104, label %if.then102

if.then102:                                       ; preds = %if.else.i549, %if.then23.i, %land.lhs.true.i542, %if.end.i537
  %retval.0.i.ph = phi i32 [ 8, %if.else.i549 ], [ 4, %if.then23.i ], [ 4, %land.lhs.true.i542 ], [ 4, %if.end.i537 ]
  br i1 %cmp.i.i43.i, label %do.end.i.i, label %if.end104.thread, !prof !584

do.end.i.i:                                       ; preds = %if.then102
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.144, i32 noundef 347, i32 noundef 9, ptr noundef null) #27
  br label %if.end104.thread

if.end104.thread:                                 ; preds = %do.end.i.i, %if.then102
  %149 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool25.not.i.i = icmp eq i32 %149, 0
  %cmp.i = and i1 %cmp2.i.i, %tobool25.not.i.i
  %or.i552 = or i32 %retval.0.i.ph, 128
  %spec.select.i = select i1 %cmp.i, i32 %or.i552, i32 %retval.0.i.ph
  br label %if.then109

if.end104:                                        ; preds = %if.else.i549, %if.end14.i, %if.end99
  %and105 = and i32 %alloc_flags.0, 64
  %tobool106.not = icmp eq i32 %and105, 0
  br i1 %tobool106.not, label %if.then109, label %if.end116

if.then109:                                       ; preds = %if.end104, %if.end104.thread
  %alloc_flags.1682 = phi i32 [ %spec.select.i, %if.end104.thread ], [ %alloc_flags.0, %if.end104 ]
  %150 = ptrtoint ptr %nodemask to i32
  call void @__asan_store4_noabort(i32 %150)
  store ptr null, ptr %nodemask, align 4
  %151 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %ac, align 4
  %153 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %highest_zoneidx, align 4
  %zone_idx.i.i.i553 = getelementptr inbounds %struct.zoneref, ptr %152, i32 0, i32 1
  %155 = ptrtoint ptr %zone_idx.i.i.i553 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %zone_idx.i.i.i553, align 4
  %cmp.not.i.i554 = icmp ugt i32 %156, %154
  br i1 %cmp.not.i.i554, label %if.end.i.i557, label %first_zones_zonelist.exit560, !prof !584

if.end.i.i557:                                    ; preds = %if.then109
  %call3.i.i556 = call ptr @__next_zones_zonelist(ptr noundef %152, i32 noundef %154, ptr noundef null) #27
  br label %first_zones_zonelist.exit560

first_zones_zonelist.exit560:                     ; preds = %if.end.i.i557, %if.then109
  %retval.0.i.i558 = phi ptr [ %call3.i.i556, %if.end.i.i557 ], [ %152, %if.then109 ]
  %157 = ptrtoint ptr %preferred_zoneref to i32
  call void @__asan_store4_noabort(i32 %157)
  store ptr %retval.0.i.i558, ptr %preferred_zoneref, align 4
  br label %if.end116

if.end116:                                        ; preds = %first_zones_zonelist.exit560, %if.end104
  %alloc_flags.1681 = phi i32 [ %alloc_flags.0, %if.end104 ], [ %alloc_flags.1682, %first_zones_zonelist.exit560 ]
  %call117 = call fastcc ptr @get_page_from_freelist(i32 noundef %spec.select, i32 noundef %order, i32 noundef %alloc_flags.1681, ptr noundef %ac)
  %tobool118.not = icmp eq ptr %call117, null
  br i1 %tobool118.not, label %if.end120, label %cleanup363

if.end120:                                        ; preds = %if.end116
  br i1 %tobool.not, label %nopage.loopexit, label %if.end123

if.end123:                                        ; preds = %if.end120
  %158 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i561 = and i32 %158, -16384
  %159 = inttoptr i32 %and.i561 to ptr
  %task125 = getelementptr inbounds %struct.thread_info, ptr %159, i32 0, i32 2
  %160 = ptrtoint ptr %task125 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %task125, align 8
  %flags = getelementptr inbounds %struct.task_struct, ptr %161, i32 0, i32 3
  %162 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %flags, align 4
  %and126 = and i32 %163, 2048
  %tobool127.not = icmp eq i32 %and126, 0
  br i1 %tobool127.not, label %if.end129, label %nopage.loopexit

if.end129:                                        ; preds = %if.end123
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pflags.i.i) #27
  %164 = ptrtoint ptr %pflags.i.i to i32
  call void @__asan_store4_noabort(i32 %164)
  store i32 -1, ptr %pflags.i.i, align 4, !annotation !637
  call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 4600, i32 noundef 0) #27
  %call.i.i.i = call i32 @__cond_resched() #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cpuset_memory_pressure_enabled to i32))
  %165 = load i32, ptr @cpuset_memory_pressure_enabled, align 4
  %tobool.not.i.i562 = icmp eq i32 %165, 0
  br i1 %tobool.not.i.i562, label %do.end.i.i565, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end129
  call void @__cpuset_memory_pressure_bump() #27
  br label %do.end.i.i565

do.end.i.i565:                                    ; preds = %if.then.i.i, %if.end129
  call void @psi_memstall_enter(ptr noundef nonnull %pflags.i.i) #27
  call void @fs_reclaim_acquire(i32 noundef %spec.select) #27
  %166 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i563 = and i32 %166, -16384
  %167 = inttoptr i32 %and.i.i.i.i563 to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %167, i32 0, i32 2
  %168 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %task.i.i.i, align 8
  %flags1.i.i.i = getelementptr inbounds %struct.task_struct, ptr %169, i32 0, i32 3
  %170 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %flags1.i.i.i, align 4
  %and.i.i.i564 = and i32 %171, 2048
  %or.i.i.i = or i32 %171, 2048
  store i32 %or.i.i.i, ptr %flags1.i.i.i, align 4
  %172 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %ac, align 4
  %174 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %nodemask, align 4
  %call2.i.i = call i32 @try_to_free_pages(ptr noundef %173, i32 noundef %order, i32 noundef %spec.select, ptr noundef %175) #27
  %176 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i8.i.i = and i32 %176, -16384
  %177 = inttoptr i32 %and.i.i8.i.i to ptr
  %task.i9.i.i = getelementptr inbounds %struct.thread_info, ptr %177, i32 0, i32 2
  %178 = ptrtoint ptr %task.i9.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %task.i9.i.i, align 8
  %flags1.i10.i.i = getelementptr inbounds %struct.task_struct, ptr %179, i32 0, i32 3
  %180 = ptrtoint ptr %flags1.i10.i.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %flags1.i10.i.i, align 4
  %and.i11.i.i = and i32 %181, -2049
  %or.i12.i.i = or i32 %and.i11.i.i, %and.i.i.i564
  store i32 %or.i12.i.i, ptr %flags1.i10.i.i, align 4
  %182 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i.i = and i32 %182, -16384
  %183 = inttoptr i32 %and.i.i.i.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %183, i32 0, i32 2
  %184 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %task.i.i.i.i, align 8
  %flags1.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %185, i32 0, i32 3
  %186 = ptrtoint ptr %flags1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load volatile i32, ptr %flags1.i.i.i.i, align 4
  %and.i.i13.i.i = and i32 %187, 269221888
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i13.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %current_gfp_context.exit.i.i.i, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %do.end.i.i565
  %and4.i.i.i.i = and i32 %187, 524288
  %tobool5.not.i.i.i.i = icmp eq i32 %and4.i.i.i.i, 0
  %and8.i.i.i.i = and i32 %187, 262144
  %tobool9.not.i.i.i.i = icmp eq i32 %and8.i.i.i.i, 0
  %spec.select.i.i.i.i = select i1 %tobool9.not.i.i.i.i, i32 %spec.select, i32 %and11.i.i.i.i
  %flags.addr.0.i.i.i.i = select i1 %tobool5.not.i.i.i.i, i32 %spec.select.i.i.i.i, i32 %and7.i.i.i.i
  %and13.i.i.i.i = and i32 %187, 268435456
  %tobool14.not.i.i.i.i = icmp eq i32 %and13.i.i.i.i, 0
  %and16.i.i.i.i = and i32 %flags.addr.0.i.i.i.i, -9
  %spec.select25.i.i.i.i = select i1 %tobool14.not.i.i.i.i, i32 %flags.addr.0.i.i.i.i, i32 %and16.i.i.i.i
  br label %current_gfp_context.exit.i.i.i

current_gfp_context.exit.i.i.i:                   ; preds = %if.then.i.i.i.i, %do.end.i.i565
  %flags.addr.1.i.i.i.i = phi i32 [ %spec.select, %do.end.i.i565 ], [ %spec.select25.i.i.i.i, %if.then.i.i.i.i ]
  %and.i6.i.i.i = and i32 %flags.addr.1.i.i.i.i, 1024
  %tobool.not.i7.i.i.i = icmp eq i32 %and.i6.i.i.i, 0
  br i1 %tobool.not.i7.i.i.i, label %__perform_reclaim.exit.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %current_gfp_context.exit.i.i.i
  %188 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i8.i.i.i = and i32 %188, -16384
  %189 = inttoptr i32 %and.i.i8.i.i.i to ptr
  %task.i9.i.i.i = getelementptr inbounds %struct.thread_info, ptr %189, i32 0, i32 2
  %190 = ptrtoint ptr %task.i9.i.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %task.i9.i.i.i, align 8
  %flags.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %191, i32 0, i32 3
  %192 = ptrtoint ptr %flags.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %flags.i.i.i.i, align 4
  %and1.i.i.i.i = and i32 %193, 2048
  %tobool2.not.i.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  %194 = and i32 %flags.addr.1.i.i.i.i, 33554560
  %.not.i.i.i = icmp eq i32 %194, 128
  %or.cond.i.i.i = select i1 %tobool2.not.i.i.i.i, i1 %.not.i.i.i, i1 false
  br i1 %or.cond.i.i.i, label %if.then2.i.i.i, label %__perform_reclaim.exit.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i.i
  %195 = call ptr @llvm.returnaddress(i32 0) #27
  %196 = ptrtoint ptr %195 to i32
  call void @lock_release(ptr noundef nonnull @__fs_reclaim_map, i32 noundef %196) #27
  br label %__perform_reclaim.exit.i

__perform_reclaim.exit.i:                         ; preds = %if.then2.i.i.i, %if.end.i.i.i.i, %current_gfp_context.exit.i.i.i
  call void @psi_memstall_leave(ptr noundef nonnull %pflags.i.i) #27
  call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 4615, i32 noundef 0) #27
  %call.i14.i.i = call i32 @__cond_resched() #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pflags.i.i) #27
  %tobool.not.i566 = icmp eq i32 %call2.i.i, 0
  br i1 %tobool.not.i566, label %if.end133, label %retry.preheader.i, !prof !584

retry.preheader.i:                                ; preds = %__perform_reclaim.exit.i
  %call417.i = call fastcc ptr @get_page_from_freelist(i32 noundef %spec.select, i32 noundef %order, i32 noundef %alloc_flags.1681, ptr noundef %ac) #27
  %tobool5.not18.not.i = icmp eq ptr %call417.i, null
  br i1 %tobool5.not18.not.i, label %__alloc_pages_direct_reclaim.exit, label %cleanup363

__alloc_pages_direct_reclaim.exit:                ; preds = %retry.preheader.i
  %call8.i = call fastcc zeroext i1 @unreserve_highatomic_pageblock(ptr noundef %ac, i1 noundef zeroext false) #27
  call fastcc void @__drain_all_pages(ptr noundef null, i1 noundef zeroext false) #27
  %call4.i = call fastcc ptr @get_page_from_freelist(i32 noundef %spec.select, i32 noundef %order, i32 noundef %alloc_flags.1681, ptr noundef %ac) #27
  %tobool131.not = icmp eq ptr %call4.i, null
  br i1 %tobool131.not, label %if.end133, label %cleanup363

if.end133:                                        ; preds = %__alloc_pages_direct_reclaim.exit, %__perform_reclaim.exit.i
  %call134 = call fastcc ptr @__alloc_pages_direct_compact(i32 noundef %spec.select, i32 noundef %order, i32 noundef %alloc_flags.1681, ptr noundef %ac, i32 noundef %compact_priority.1.ph716, ptr noundef nonnull %compact_result)
  %tobool135.not = icmp eq ptr %call134, null
  br i1 %tobool135.not, label %if.end137, label %cleanup363

if.end137:                                        ; preds = %if.end133
  br i1 %brmerge, label %nopage.loopexit, label %if.end147

if.end147:                                        ; preds = %if.end137
  %cmp148 = icmp ne i32 %call2.i.i, 0
  %or.cond.i = and i1 %cmp.i568, %cmp148
  br i1 %or.cond.i, label %if.end3.i, label %if.end.i569

if.end.i569:                                      ; preds = %if.end147
  %inc.i = add i32 %no_progress_loops.0, 1
  %cmp1.i = icmp sgt i32 %inc.i, 16
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i

if.then2.i:                                       ; preds = %if.end.i569
  %call.i = call fastcc zeroext i1 @unreserve_highatomic_pageblock(ptr noundef %ac, i1 noundef zeroext true) #27
  br i1 %call.i, label %retry.backedge, label %if.end151

if.end3.i:                                        ; preds = %if.end.i569, %if.end147
  %no_progress_loops.1 = phi i32 [ %inc.i, %if.end.i569 ], [ 0, %if.end147 ]
  %197 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %ac, align 4
  %199 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %highest_zoneidx, align 4
  %201 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i.i571 = icmp eq ptr %202, null
  br i1 %tobool.not.i.i.i571, label %land.rhs.i.i.i574, label %if.end.i.i.i576, !prof !582

land.rhs.i.i.i574:                                ; preds = %if.end3.i
  %zone_idx.i.i.i.i572 = getelementptr inbounds %struct.zoneref, ptr %198, i32 0, i32 1
  %203 = ptrtoint ptr %zone_idx.i.i.i.i572 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %zone_idx.i.i.i.i572, align 4
  %cmp.not.i.i.i573 = icmp ugt i32 %204, %200
  br i1 %cmp.not.i.i.i573, label %if.end.i.i.i576, label %first_zones_zonelist.exit.i578, !prof !584

if.end.i.i.i576:                                  ; preds = %land.rhs.i.i.i574, %if.end3.i
  %call3.i.i.i575 = call ptr @__next_zones_zonelist(ptr noundef %198, i32 noundef %200, ptr noundef %202) #27
  br label %first_zones_zonelist.exit.i578

first_zones_zonelist.exit.i578:                   ; preds = %if.end.i.i.i576, %land.rhs.i.i.i574
  %retval.0.i.i.i577 = phi ptr [ %call3.i.i.i575, %if.end.i.i.i576 ], [ %198, %land.rhs.i.i.i574 ]
  %205 = ptrtoint ptr %retval.0.i.i.i577 to i32
  call void @__asan_load4_noabort(i32 %205)
  %zone.06.i = load ptr, ptr %retval.0.i.i.i577, align 4
  %tobool6.not7.i = icmp eq ptr %zone.06.i, null
  br i1 %tobool6.not7.i, label %for.end.i, label %for.body.i580

for.body.i580:                                    ; preds = %next_zones_zonelist.exit.i591, %first_zones_zonelist.exit.i578
  %zone.09.i = phi ptr [ %zone.0.i590, %next_zones_zonelist.exit.i591 ], [ %zone.06.i, %first_zones_zonelist.exit.i578 ]
  %z.08.i = phi ptr [ %retval.0.i.i589, %next_zones_zonelist.exit.i591 ], [ %retval.0.i.i.i577, %first_zones_zonelist.exit.i578 ]
  %206 = ptrtoint ptr %zone.09.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %zone.09.i, align 128
  %watermark_boost.i = getelementptr inbounds %struct.zone, ptr %zone.09.i, i32 0, i32 1
  %208 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %watermark_boost.i, align 4
  %add.i = add i32 %209, %207
  %call7.i = call i32 @zone_reclaimable_pages(ptr noundef nonnull %zone.09.i) #27
  %vm_stat.i.i = getelementptr inbounds %struct.zone, ptr %zone.09.i, i32 0, i32 37
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %vm_stat.i.i, i32 noundef 4) #27
  %210 = ptrtoint ptr %vm_stat.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load volatile i32, ptr %vm_stat.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %212 = load i32, ptr @nr_cpu_ids, align 4
  %call11.i.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #30
  %cmp2.i.i579 = icmp ult i32 %call11.i.i, %212
  br i1 %cmp2.i.i579, label %do.body.lr.ph.i.i, label %zone_page_state_snapshot.exit.i

do.body.lr.ph.i.i:                                ; preds = %for.body.i580
  %per_cpu_zonestats.i.i = getelementptr inbounds %struct.zone, ptr %zone.09.i, i32 0, i32 6
  %213 = ptrtoint ptr %per_cpu_zonestats.i.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %per_cpu_zonestats.i.i, align 4
  %215 = ptrtoint ptr %214 to i32
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i, %do.body.lr.ph.i.i
  %call14.i.i = phi i32 [ %call11.i.i, %do.body.lr.ph.i.i ], [ %call1.i.i, %do.body.i.i ]
  %x.03.i.i = phi i32 [ %211, %do.body.lr.ph.i.i ], [ %add5.i.i, %do.body.i.i ]
  %arrayidx3.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call14.i.i
  %216 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %arrayidx3.i.i, align 4
  %add.i.i = add i32 %217, %215
  %218 = inttoptr i32 %add.i.i to ptr
  %219 = ptrtoint ptr %218 to i32
  call void @__asan_load1_noabort(i32 %219)
  %220 = load i8, ptr %218, align 1
  %conv.i.i = sext i8 %220 to i32
  %add5.i.i = add i32 %x.03.i.i, %conv.i.i
  %call1.i.i = call i32 @cpumask_next(i32 noundef %call14.i.i, ptr noundef nonnull @__cpu_online_mask) #30
  %cmp.i.i581 = icmp ult i32 %call1.i.i, %212
  br i1 %cmp.i.i581, label %do.body.i.i, label %zone_page_state_snapshot.exit.i

zone_page_state_snapshot.exit.i:                  ; preds = %do.body.i.i, %for.body.i580
  %x.0.lcssa.i.i = phi i32 [ %211, %for.body.i580 ], [ %add5.i.i, %do.body.i.i ]
  %221 = call i32 @llvm.smax.i32(i32 %x.0.lcssa.i.i, i32 0) #27
  %add9.i = add i32 %221, %call7.i
  %222 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %highest_zoneidx, align 4
  %call11.i = call zeroext i1 @__zone_watermark_ok(ptr noundef nonnull %zone.09.i, i32 noundef %order, i32 noundef %add.i, i32 noundef %223, i32 noundef %alloc_flags.1681, i32 noundef %add9.i) #27
  call fastcc void @trace_reclaim_retry_zone(ptr noundef %z.08.i, i32 noundef %order, i32 noundef %call7.i, i32 noundef %add9.i, i32 noundef %add.i, i32 noundef %no_progress_loops.1, i1 noundef zeroext %call11.i) #27
  br i1 %call11.i, label %for.end.i, label %for.inc.i

for.inc.i:                                        ; preds = %zone_page_state_snapshot.exit.i
  %incdec.ptr.i582 = getelementptr %struct.zoneref, ptr %z.08.i, i32 1
  %224 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %highest_zoneidx, align 4
  %226 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i583 = icmp eq ptr %227, null
  br i1 %tobool.not.i.i583, label %land.rhs.i.i586, label %if.end.i.i588, !prof !582

land.rhs.i.i586:                                  ; preds = %for.inc.i
  %zone_idx.i.i.i584 = getelementptr %struct.zoneref, ptr %z.08.i, i32 1, i32 1
  %228 = ptrtoint ptr %zone_idx.i.i.i584 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %zone_idx.i.i.i584, align 4
  %cmp.not.i.i585 = icmp ugt i32 %229, %225
  br i1 %cmp.not.i.i585, label %if.end.i.i588, label %next_zones_zonelist.exit.i591, !prof !584

if.end.i.i588:                                    ; preds = %land.rhs.i.i586, %for.inc.i
  %call3.i.i587 = call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr.i582, i32 noundef %225, ptr noundef %227) #27
  br label %next_zones_zonelist.exit.i591

next_zones_zonelist.exit.i591:                    ; preds = %if.end.i.i588, %land.rhs.i.i586
  %retval.0.i.i589 = phi ptr [ %call3.i.i587, %if.end.i.i588 ], [ %incdec.ptr.i582, %land.rhs.i.i586 ]
  %230 = ptrtoint ptr %retval.0.i.i589 to i32
  call void @__asan_load4_noabort(i32 %230)
  %zone.0.i590 = load ptr, ptr %retval.0.i.i589, align 4
  %tobool6.not.i = icmp eq ptr %zone.0.i590, null
  br i1 %tobool6.not.i, label %for.end.i, label %for.body.i580

for.end.i:                                        ; preds = %next_zones_zonelist.exit.i591, %zone_page_state_snapshot.exit.i, %first_zones_zonelist.exit.i578
  %tobool6.not.lcssa.i = phi i1 [ false, %first_zones_zonelist.exit.i578 ], [ %call11.i, %zone_page_state_snapshot.exit.i ], [ %call11.i, %next_zones_zonelist.exit.i591 ]
  %231 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i592 = and i32 %231, -16384
  %232 = inttoptr i32 %and.i.i592 to ptr
  %task.i593 = getelementptr inbounds %struct.thread_info, ptr %232, i32 0, i32 2
  %233 = ptrtoint ptr %task.i593 to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %task.i593, align 8
  %flags.i594 = getelementptr inbounds %struct.task_struct, ptr %234, i32 0, i32 3
  %235 = ptrtoint ptr %flags.i594 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %flags.i594, align 4
  %and.i595 = and i32 %236, 32
  %tobool25.not.i = icmp eq i32 %and.i595, 0
  br i1 %tobool25.not.i, label %if.else28.i, label %should_reclaim_retry.exit

if.else28.i:                                      ; preds = %for.end.i
  call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 4829, i32 noundef 0) #27
  %call.i.i = call i32 @__cond_resched() #27
  br i1 %tobool6.not.lcssa.i, label %retry.backedge, label %if.end151

should_reclaim_retry.exit:                        ; preds = %for.end.i
  %call27.i = call i32 @schedule_timeout_uninterruptible(i32 noundef 1) #27
  br i1 %tobool6.not.lcssa.i, label %retry.backedge, label %if.end151

retry.backedge:                                   ; preds = %if.then12.i, %should_reclaim_retry.exit, %if.else28.i, %if.then2.i
  %no_progress_loops.0.be = phi i32 [ %no_progress_loops.1, %should_reclaim_retry.exit ], [ %inc.i, %if.then2.i ], [ %no_progress_loops.1, %if.else28.i ], [ %no_progress_loops.2690, %if.then12.i ]
  br label %retry

if.end151:                                        ; preds = %should_reclaim_retry.exit, %if.else28.i, %if.then2.i
  %no_progress_loops.2690 = phi i32 [ %inc.i, %if.then2.i ], [ %no_progress_loops.1, %should_reclaim_retry.exit ], [ %no_progress_loops.1, %if.else28.i ]
  br i1 %tobool.not.i566, label %if.end156, label %land.lhs.true153

land.lhs.true153:                                 ; preds = %if.end151
  %237 = ptrtoint ptr %compact_result to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %compact_result, align 4
  br i1 %cmp74.not, label %if.end156, label %if.end.i601

if.end.i601:                                      ; preds = %land.lhs.true153
  %239 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i598 = and i32 %239, -16384
  %240 = inttoptr i32 %and.i.i598 to ptr
  %task.i599 = getelementptr inbounds %struct.thread_info, ptr %240, i32 0, i32 2
  %241 = ptrtoint ptr %task.i599 to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %task.i599, align 8
  %stack.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %242, i32 0, i32 1
  %243 = ptrtoint ptr %stack.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %stack.i.i.i.i, align 4
  %245 = ptrtoint ptr %244 to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load volatile i32, ptr %244, align 4
  %and1.i.i.i.i.i.i = and i32 %246, 1
  %tobool.not.i.i600 = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i600, label %if.end4.i, label %fatal_signal_pending.exit.i

fatal_signal_pending.exit.i:                      ; preds = %if.end.i601
  %signal.i.i.i602 = getelementptr inbounds %struct.task_struct, ptr %242, i32 0, i32 116, i32 1
  %247 = ptrtoint ptr %signal.i.i.i602 to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %signal.i.i.i602, align 4
  %249 = and i32 %248, 256
  %tobool2.not.i = icmp eq i32 %249, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end156

if.end4.i:                                        ; preds = %fatal_signal_pending.exit.i, %if.end.i601
  switch i32 %238, label %if.end17.i [
    i32 8, label %if.end14.thread.i
    i32 5, label %check_priority.i
    i32 1, label %if.then12.i
    i32 2, label %check_priority.i
    i32 7, label %check_priority.i
    i32 6, label %check_priority.i
  ]

if.end14.thread.i:                                ; preds = %if.end4.i
  %inc.i603 = add i32 %compaction_retries.0.ph721, 1
  br label %if.end17.i

if.then12.i:                                      ; preds = %if.end4.i
  %call13.i = call zeroext i1 @compaction_zonelist_suitable(ptr noundef %ac, i32 noundef %order, i32 noundef %alloc_flags.1681) #27
  call fastcc void @trace_compact_retry(i32 noundef %order, i32 noundef %compact_priority.1.ph716, i32 noundef 1, i32 noundef %compaction_retries.0.ph721, i32 noundef 16, i1 noundef zeroext %call13.i) #27
  br i1 %call13.i, label %retry.backedge, label %if.end156

if.end17.i:                                       ; preds = %if.end14.thread.i, %if.end4.i
  %compaction_retries.1 = phi i32 [ %inc.i603, %if.end14.thread.i ], [ %compaction_retries.0.ph721, %if.end4.i ]
  %cmp20.not.i = icmp sgt i32 %compaction_retries.1, %spec.select.i604
  br i1 %cmp20.not.i, label %check_priority.i, label %should_compact_retry.exit

check_priority.i:                                 ; preds = %if.end17.i, %if.end4.i, %if.end4.i, %if.end4.i, %if.end4.i
  %compaction_retries.2 = phi i32 [ %compaction_retries.1, %if.end17.i ], [ %compaction_retries.0.ph721, %if.end4.i ], [ %compaction_retries.0.ph721, %if.end4.i ], [ %compaction_retries.0.ph721, %if.end4.i ], [ %compaction_retries.0.ph721, %if.end4.i ]
  %max_retries.1.i = phi i32 [ %spec.select.i604, %if.end17.i ], [ 16, %if.end4.i ], [ 16, %if.end4.i ], [ 16, %if.end4.i ], [ 16, %if.end4.i ]
  br i1 %cmp24.i, label %if.then25.i, label %should_compact_retry.exit.thread694

should_compact_retry.exit.thread694:              ; preds = %check_priority.i
  call fastcc void @trace_compact_retry(i32 noundef %order, i32 noundef %compact_priority.1.ph716, i32 noundef %238, i32 noundef %compaction_retries.0.ph721, i32 noundef %max_retries.1.i, i1 noundef zeroext false) #27
  br label %if.end156

if.then25.i:                                      ; preds = %check_priority.i
  %dec.i = add i32 %compact_priority.1.ph716, -1
  call fastcc void @trace_compact_retry(i32 noundef %order, i32 noundef %compact_priority.1.ph716, i32 noundef %238, i32 noundef %compaction_retries.0.ph721, i32 noundef %max_retries.1.i, i1 noundef zeroext true) #27
  br label %retry.outer

should_compact_retry.exit:                        ; preds = %if.end17.i
  call fastcc void @trace_compact_retry(i32 noundef %order, i32 noundef %compact_priority.1.ph716, i32 noundef %238, i32 noundef %compaction_retries.0.ph721, i32 noundef %spec.select.i604, i1 noundef zeroext true) #27
  br label %retry.outer720.backedge

if.end156:                                        ; preds = %should_compact_retry.exit.thread694, %if.then12.i, %fatal_signal_pending.exit.i, %land.lhs.true153, %if.end151
  %compaction_retries.5 = phi i32 [ %compaction_retries.2, %should_compact_retry.exit.thread694 ], [ %compaction_retries.0.ph721, %if.end151 ], [ %compaction_retries.0.ph721, %if.then12.i ], [ %compaction_retries.0.ph721, %land.lhs.true153 ], [ %compaction_retries.0.ph721, %fatal_signal_pending.exit.i ]
  %.pn.pn.pn = inttoptr i32 %and.i561 to ptr
  %task125892 = getelementptr inbounds %struct.thread_info, ptr %.pn.pn.pn, i32 0, i32 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_enabled_key, ptr blockaddress(@__alloc_pages_slowpath, %land.lhs.true.i608)) #27
          to label %if.end.i611 [label %land.lhs.true.i608], !srcloc !583

land.lhs.true.i608:                               ; preds = %if.end156
  %250 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %nodemask, align 4
  %tobool.not.i607 = icmp eq ptr %251, null
  br i1 %tobool.not.i607, label %if.end.i611, label %land.lhs.true1.i

land.lhs.true1.i:                                 ; preds = %land.lhs.true.i608
  %call3.i = call i32 @cpuset_nodemask_valid_mems_allowed(ptr noundef nonnull %251) #27
  %tobool4.not.i609 = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i609, label %retry_cpuset.backedge.sink.split, label %if.end.i611

if.end.i611:                                      ; preds = %land.lhs.true1.i, %land.lhs.true.i608, %if.end156
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_enabled_key, ptr blockaddress(@__alloc_pages_slowpath, %if.end.i.i614)) #27
          to label %if.end159 [label %if.end.i.i614], !srcloc !583

if.end.i.i614:                                    ; preds = %if.end.i611
  %252 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i612 = and i32 %252, -16384
  %253 = inttoptr i32 %and.i.i.i612 to ptr
  %task.i.i613 = getelementptr inbounds %struct.thread_info, ptr %253, i32 0, i32 2
  %254 = ptrtoint ptr %task.i.i613 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %task.i.i613, align 8
  %mems_allowed_seq.i.i = getelementptr inbounds %struct.task_struct, ptr %255, i32 0, i32 161
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !643
  %256 = ptrtoint ptr %mems_allowed_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load volatile i32, ptr %mems_allowed_seq.i.i, align 4
  %cmp.i.i.i.i.not = icmp eq i32 %257, %call
  br i1 %cmp.i.i.i.i.not, label %if.end159, label %retry_cpuset.backedge

if.end159:                                        ; preds = %if.end.i.i614, %if.end.i611
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %oc.i) #27
  %258 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %ac, align 4
  %260 = ptrtoint ptr %oc.i to i32
  call void @__asan_store4_noabort(i32 %260)
  store ptr %259, ptr %oc.i, align 4
  %261 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %nodemask, align 4
  %263 = ptrtoint ptr %nodemask.i616 to i32
  call void @__asan_store4_noabort(i32 %263)
  store ptr %262, ptr %nodemask.i616, align 4
  %264 = ptrtoint ptr %memcg.i to i32
  call void @__asan_store4_noabort(i32 %264)
  store ptr null, ptr %memcg.i, align 4
  %265 = ptrtoint ptr %gfp_mask3.i to i32
  call void @__asan_store4_noabort(i32 %265)
  store i32 %spec.select, ptr %gfp_mask3.i, align 4
  %266 = ptrtoint ptr %order4.i to i32
  call void @__asan_store4_noabort(i32 %266)
  store i32 %order, ptr %order4.i, align 4
  %267 = call ptr @memset(ptr %totalpages.i, i32 0, i32 16)
  %call.i617 = call i32 @mutex_trylock(ptr noundef nonnull @oom_lock) #27
  %tobool.not.i618 = icmp eq i32 %call.i617, 0
  br i1 %tobool.not.i618, label %__alloc_pages_may_oom.exit.thread, label %if.end.i622

__alloc_pages_may_oom.exit.thread:                ; preds = %if.end159
  %call5.i = call i32 @schedule_timeout_uninterruptible(i32 noundef 1) #27
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %oc.i) #27
  br label %if.end163

if.end.i622:                                      ; preds = %if.end159
  %call6.i = call fastcc ptr @get_page_from_freelist(i32 noundef %and.i621, i32 noundef %order, i32 noundef 66, ptr noundef %ac) #27
  %tobool7.not.i = icmp eq ptr %call6.i, null
  br i1 %tobool7.not.i, label %if.end9.i, label %__alloc_pages_may_oom.exit.thread709

if.end9.i:                                        ; preds = %if.end.i622
  %268 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i623 = and i32 %268, -16384
  %269 = inttoptr i32 %and.i.i623 to ptr
  %task.i624 = getelementptr inbounds %struct.thread_info, ptr %269, i32 0, i32 2
  %270 = ptrtoint ptr %task.i624 to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %task.i624, align 8
  %flags.i625 = getelementptr inbounds %struct.task_struct, ptr %271, i32 0, i32 3
  %272 = ptrtoint ptr %flags.i625 to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %flags.i625, align 4
  %and11.i626 = and i32 %273, 512
  %274 = or i32 %and11.i626, %and17.i628
  %275 = icmp eq i32 %274, 0
  %276 = and i1 %cmp.i568, %275
  br i1 %276, label %if.end20.i, label %__alloc_pages_may_oom.exit.thread703

if.end20.i:                                       ; preds = %if.end9.i
  %277 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load i32, ptr %highest_zoneidx, align 4
  %cmp21.i = icmp eq i32 %278, 0
  br i1 %cmp21.i, label %__alloc_pages_may_oom.exit.thread703, label %if.end23.i

if.end23.i:                                       ; preds = %if.end20.i
  %279 = load i32, ptr @gfp_allowed_mask, align 4
  %and.i96.i = and i32 %279, 192
  %cmp.i.not.i = icmp eq i32 %and.i96.i, 192
  br i1 %cmp.i.not.i, label %if.end26.i, label %__alloc_pages_may_oom.exit.thread703

if.end26.i:                                       ; preds = %if.end23.i
  %call27.i630 = call zeroext i1 @out_of_memory(ptr noundef nonnull %oc.i) #27
  br i1 %call27.i630, label %if.then68.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end26.i
  br i1 %tobool182.not, label %__alloc_pages_may_oom.exit.thread703, label %land.rhs.i

land.rhs.i:                                       ; preds = %lor.lhs.false.i
  %.b93.i = load i1, ptr @__alloc_pages_may_oom.__already_done, align 1
  br i1 %.b93.i, label %if.then71.i, label %if.then37.i, !prof !582

if.then37.i:                                      ; preds = %land.rhs.i
  store i1 true, ptr @__alloc_pages_may_oom.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4332, i32 noundef 9, ptr noundef null) #27
  br label %if.then71.i

if.then68.i:                                      ; preds = %if.end26.i
  br i1 %tobool182.not, label %__alloc_pages_may_oom.exit.thread703, label %if.then71.i

if.then71.i:                                      ; preds = %if.then68.i, %if.then37.i, %land.rhs.i
  %call.i656 = call fastcc ptr @get_page_from_freelist(i32 noundef %spec.select, i32 noundef %order, i32 noundef 68, ptr noundef %ac) #27
  %tobool.not.i657 = icmp eq ptr %call.i656, null
  br i1 %tobool.not.i657, label %__alloc_pages_may_oom.exit, label %__alloc_pages_may_oom.exit.thread709

__alloc_pages_may_oom.exit.thread703:             ; preds = %if.then68.i, %lor.lhs.false.i, %if.end23.i, %if.end20.i, %if.end9.i
  %did_some_progress.1.ph = phi i32 [ 0, %if.end9.i ], [ 0, %if.end23.i ], [ 0, %lor.lhs.false.i ], [ 1, %if.then68.i ], [ 0, %if.end20.i ]
  call void @mutex_unlock(ptr noundef nonnull @oom_lock) #27
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %oc.i) #27
  br label %if.end163

__alloc_pages_may_oom.exit.thread709:             ; preds = %if.then71.i, %if.end.i622
  %page.0.i.ph = phi ptr [ %call.i656, %if.then71.i ], [ %call6.i, %if.end.i622 ]
  call void @mutex_unlock(ptr noundef nonnull @oom_lock) #27
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %oc.i) #27
  br label %cleanup363

__alloc_pages_may_oom.exit:                       ; preds = %if.then71.i
  %call1.i658 = call fastcc ptr @get_page_from_freelist(i32 noundef %spec.select, i32 noundef %order, i32 noundef 4, ptr noundef %ac) #27
  call void @mutex_unlock(ptr noundef nonnull @oom_lock) #27
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %oc.i) #27
  %tobool161.not = icmp eq ptr %call1.i658, null
  br i1 %tobool161.not, label %if.end163, label %cleanup363

if.end163:                                        ; preds = %__alloc_pages_may_oom.exit, %__alloc_pages_may_oom.exit.thread703, %__alloc_pages_may_oom.exit.thread
  %did_some_progress.2702 = phi i32 [ 1, %__alloc_pages_may_oom.exit.thread ], [ 1, %__alloc_pages_may_oom.exit ], [ %did_some_progress.1.ph, %__alloc_pages_may_oom.exit.thread703 ]
  %280 = ptrtoint ptr %task125892 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %task125892, align 8
  %signal.i = getelementptr inbounds %struct.task_struct, ptr %281, i32 0, i32 111
  %282 = ptrtoint ptr %signal.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load ptr, ptr %signal.i, align 16
  %oom_mm.i = getelementptr inbounds %struct.signal_struct, ptr %283, i32 0, i32 59
  %284 = ptrtoint ptr %oom_mm.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load ptr, ptr %oom_mm.i, align 4
  %tobool.i633.not = icmp eq ptr %285, null
  br i1 %tobool.i633.not, label %if.end174, label %land.lhs.true167

land.lhs.true167:                                 ; preds = %if.end163
  %and168 = and i32 %alloc_flags.1681, 8
  %286 = or i32 %and168, %and.i.i499
  %287 = icmp ne i32 %286, 0
  %tobool175.not = icmp eq i32 %did_some_progress.2702, 0
  %or.cond715 = or i1 %287, %tobool175.not
  br i1 %or.cond715, label %nopage.loopexit984, label %retry.outer720.backedge

if.end174:                                        ; preds = %if.end163
  %tobool175.not.old = icmp eq i32 %did_some_progress.2702, 0
  br i1 %tobool175.not.old, label %nopage.loopexit984, label %retry.outer720.backedge

retry.outer720.backedge:                          ; preds = %if.end174, %land.lhs.true167, %should_compact_retry.exit
  %compaction_retries.0.ph721.be = phi i32 [ %compaction_retries.1, %should_compact_retry.exit ], [ %compaction_retries.5, %land.lhs.true167 ], [ %compaction_retries.5, %if.end174 ]
  %no_progress_loops.0.ph722.be = phi i32 [ %no_progress_loops.2690, %should_compact_retry.exit ], [ 0, %land.lhs.true167 ], [ 0, %if.end174 ]
  br label %retry.outer720

nopage.loopexit:                                  ; preds = %if.end137, %if.end123, %if.end120
  %compact_priority.5.ph = phi i32 [ %compact_priority.1.ph, %if.end137 ], [ %compact_priority.1.ph716, %if.end123 ], [ %compact_priority.1.ph, %if.end120 ]
  %compaction_retries.6.ph = phi i32 [ %compaction_retries.0.ph, %if.end137 ], [ %compaction_retries.0.ph721, %if.end123 ], [ %compaction_retries.0.ph, %if.end120 ]
  %no_progress_loops.3.ph = phi i32 [ %no_progress_loops.0.ph, %if.end137 ], [ %no_progress_loops.0, %if.end123 ], [ %no_progress_loops.0.ph, %if.end120 ]
  br label %nopage

nopage.loopexit984:                               ; preds = %if.end174, %land.lhs.true167
  br label %nopage

nopage:                                           ; preds = %nopage.loopexit984, %nopage.loopexit, %if.then88, %first_zones_zonelist.exit489, %first_zones_zonelist.exit
  %compact_priority.5 = phi i32 [ 1, %first_zones_zonelist.exit ], [ 1, %if.then88 ], [ 1, %first_zones_zonelist.exit489 ], [ %compact_priority.5.ph, %nopage.loopexit ], [ %compact_priority.1.ph716, %nopage.loopexit984 ]
  %compaction_retries.6 = phi i32 [ 0, %first_zones_zonelist.exit ], [ 0, %if.then88 ], [ 0, %first_zones_zonelist.exit489 ], [ %compaction_retries.6.ph, %nopage.loopexit ], [ %compaction_retries.5, %nopage.loopexit984 ]
  %no_progress_loops.3 = phi i32 [ 0, %first_zones_zonelist.exit ], [ 0, %if.then88 ], [ 0, %first_zones_zonelist.exit489 ], [ %no_progress_loops.3.ph, %nopage.loopexit ], [ %no_progress_loops.2690, %nopage.loopexit984 ]
  %alloc_flags.2 = phi i32 [ %spec.select.i.i, %first_zones_zonelist.exit ], [ %spec.select.i.i, %if.then88 ], [ %spec.select.i.i, %first_zones_zonelist.exit489 ], [ %alloc_flags.1681, %nopage.loopexit ], [ %alloc_flags.1681, %nopage.loopexit984 ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_enabled_key, ptr blockaddress(@__alloc_pages_slowpath, %land.lhs.true.i636)) #27
          to label %if.end.i641 [label %land.lhs.true.i636], !srcloc !583

land.lhs.true.i636:                               ; preds = %nopage
  %288 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load ptr, ptr %nodemask, align 4
  %tobool.not.i635 = icmp eq ptr %289, null
  br i1 %tobool.not.i635, label %if.end.i641, label %land.lhs.true1.i639

land.lhs.true1.i639:                              ; preds = %land.lhs.true.i636
  %call3.i637 = call i32 @cpuset_nodemask_valid_mems_allowed(ptr noundef nonnull %289) #27
  %tobool4.not.i638 = icmp eq i32 %call3.i637, 0
  br i1 %tobool4.not.i638, label %retry_cpuset.backedge.sink.split, label %if.end.i641

if.end.i641:                                      ; preds = %land.lhs.true1.i639, %land.lhs.true.i636, %nopage
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_enabled_key, ptr blockaddress(@__alloc_pages_slowpath, %if.end.i.i646)) #27
          to label %if.end180 [label %if.end.i.i646], !srcloc !583

if.end.i.i646:                                    ; preds = %if.end.i641
  %290 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i642 = and i32 %290, -16384
  %291 = inttoptr i32 %and.i.i.i642 to ptr
  %task.i.i643 = getelementptr inbounds %struct.thread_info, ptr %291, i32 0, i32 2
  %292 = ptrtoint ptr %task.i.i643 to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load ptr, ptr %task.i.i643, align 8
  %mems_allowed_seq.i.i644 = getelementptr inbounds %struct.task_struct, ptr %293, i32 0, i32 161
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !643
  %294 = ptrtoint ptr %mems_allowed_seq.i.i644 to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load volatile i32, ptr %mems_allowed_seq.i.i644, align 4
  %cmp.i.i.i.i645.not = icmp eq i32 %295, %call
  br i1 %cmp.i.i.i.i645.not, label %if.end180, label %retry_cpuset.backedge

retry_cpuset.backedge.sink.split:                 ; preds = %land.lhs.true1.i639, %land.lhs.true1.i
  %296 = ptrtoint ptr %nodemask to i32
  call void @__asan_store4_noabort(i32 %296)
  store ptr null, ptr %nodemask, align 4
  br label %retry_cpuset.backedge

retry_cpuset.backedge:                            ; preds = %retry_cpuset.backedge.sink.split, %if.end.i.i646, %if.end.i.i614
  br label %retry_cpuset

if.end180:                                        ; preds = %if.end.i.i646, %if.end.i641
  br i1 %tobool182.not, label %fail, label %if.then183

if.then183:                                       ; preds = %if.end180
  br i1 %tobool.not, label %land.rhs194, label %if.end242.critedge

land.rhs194:                                      ; preds = %if.then183
  %.b469474 = load i1, ptr @__alloc_pages_slowpath.__already_done.147, align 1
  br i1 %.b469474, label %fail, label %if.then205, !prof !582

if.then205:                                       ; preds = %land.rhs194
  store i1 true, ptr @__alloc_pages_slowpath.__already_done.147, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5101, i32 noundef 9, ptr noundef null) #27
  br label %fail

if.end242.critedge:                               ; preds = %if.then183
  %297 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i649 = and i32 %297, -16384
  %298 = inttoptr i32 %and.i649 to ptr
  %task245 = getelementptr inbounds %struct.thread_info, ptr %298, i32 0, i32 2
  %299 = ptrtoint ptr %task245 to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load ptr, ptr %task245, align 8
  %flags246 = getelementptr inbounds %struct.task_struct, ptr %300, i32 0, i32 3
  %301 = ptrtoint ptr %flags246 to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %flags246, align 4
  %and247 = and i32 %302, 2048
  %tobool248.not = icmp eq i32 %and247, 0
  br i1 %tobool248.not, label %if.end293, label %land.rhs255

land.rhs255:                                      ; preds = %if.end242.critedge
  %.b470473 = load i1, ptr @__alloc_pages_slowpath.__already_done.148, align 1
  br i1 %.b470473, label %if.end293, label %if.then266, !prof !582

if.then266:                                       ; preds = %land.rhs255
  store i1 true, ptr @__alloc_pages_slowpath.__already_done.148, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5109, i32 noundef 9, ptr noundef null) #27
  br label %if.end293

if.end293:                                        ; preds = %if.then266, %land.rhs255, %if.end242.critedge
  br i1 %cmp, label %land.rhs309, label %if.end347

land.rhs309:                                      ; preds = %if.end293
  %.b471472 = load i1, ptr @__alloc_pages_slowpath.__already_done.149, align 1
  br i1 %.b471472, label %if.end347, label %if.then320, !prof !582

if.then320:                                       ; preds = %land.rhs309
  store i1 true, ptr @__alloc_pages_slowpath.__already_done.149, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5117, i32 noundef 9, ptr noundef null) #27
  br label %if.end347

if.end347:                                        ; preds = %if.then320, %land.rhs309, %if.end293
  %call.i650 = call fastcc ptr @get_page_from_freelist(i32 noundef %spec.select, i32 noundef %order, i32 noundef 80, ptr noundef %ac) #27
  %tobool.not.i651 = icmp eq ptr %call.i650, null
  br i1 %tobool.not.i651, label %__alloc_pages_cpuset_fallback.exit, label %cleanup363

__alloc_pages_cpuset_fallback.exit:               ; preds = %if.end347
  %call1.i = call fastcc ptr @get_page_from_freelist(i32 noundef %spec.select, i32 noundef %order, i32 noundef 16, ptr noundef %ac) #27
  %tobool356.not = icmp eq ptr %call1.i, null
  br i1 %tobool356.not, label %if.end358, label %cleanup363

if.end358:                                        ; preds = %__alloc_pages_cpuset_fallback.exit
  call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 5129, i32 noundef 0) #27
  %call.i655 = call i32 @__cond_resched() #27
  br label %retry.preheader

fail:                                             ; preds = %if.then205, %land.rhs194, %if.end180
  %303 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load ptr, ptr %nodemask, align 4
  call void (i32, ptr, ptr, ...) @warn_alloc(i32 noundef %spec.select, ptr noundef %304, ptr noundef nonnull @.str.150, i32 noundef %order)
  br label %cleanup363

cleanup363:                                       ; preds = %fail, %__alloc_pages_cpuset_fallback.exit, %if.end347, %__alloc_pages_may_oom.exit, %__alloc_pages_may_oom.exit.thread709, %if.end133, %__alloc_pages_direct_reclaim.exit, %retry.preheader.i, %if.end116, %if.then79, %if.end66
  %retval.0 = phi ptr [ null, %fail ], [ %page.0.i.ph, %__alloc_pages_may_oom.exit.thread709 ], [ %call117, %if.end116 ], [ %call4.i, %__alloc_pages_direct_reclaim.exit ], [ %call134, %if.end133 ], [ %call417.i, %retry.preheader.i ], [ %call1.i658, %__alloc_pages_may_oom.exit ], [ %call.i650, %if.end347 ], [ %call80, %if.then79 ], [ %call67, %if.end66 ], [ %call1.i, %__alloc_pages_cpuset_fallback.exit ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %compact_result) #27
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__memcg_kmem_charge_page(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_page_alloc(ptr noundef %page, i32 noundef %order, i32 noundef %gfp_flags, i32 noundef %migratetype) unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_alloc, i32 0, i32 1), ptr blockaddress(@trace_mm_page_alloc, %do.body)) #27
          to label %if.end48 [label %do.body], !srcloc !583

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !644
  %call42 = tail call i32 @__traceiter_mm_page_alloc(ptr noundef null, ptr noundef %page, i32 noundef %order, i32 noundef %gfp_flags, i32 noundef %migratetype) #27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !645
  %13 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !582

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !619
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_alloc, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_alloc, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #27
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #27
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_page_alloc.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_mm_page_alloc.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.98, i32 noundef 228, ptr noundef nonnull @.str.99) #27
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !620
  %31 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__folio_alloc(i32 noundef %gfp, i32 noundef %order, i32 %preferred_nid, ptr noundef %nodemask) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %or = or i32 %gfp, 262144
  %call = tail call ptr @__alloc_pages(i32 noundef %or, i32 noundef %order, i32 undef, ptr noundef %nodemask)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__get_free_pages(i32 noundef %gfp_mask, i32 noundef %order) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %gfp_mask, -3
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef %and, i32 noundef %order, i32 undef, ptr noundef null) #27
  %tobool.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i) #27
  %0 = ptrtoint ptr %call1 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %0, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @get_zeroed_page(i32 noundef %gfp_mask) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %or = and i32 %gfp_mask, -259
  %and.i = or i32 %or, 256
  %call38.i.i.i.i = tail call ptr @__alloc_pages(i32 noundef %and.i, i32 noundef 0, i32 undef, ptr noundef null) #27
  %tobool.not.i = icmp eq ptr %call38.i.i.i.i, null
  br i1 %tobool.not.i, label %__get_free_pages.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %call1.i = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i.i) #27
  %0 = ptrtoint ptr %call1.i to i32
  br label %__get_free_pages.exit

__get_free_pages.exit:                            ; preds = %if.end.i, %entry
  %retval.0.i = phi i32 [ %0, %if.end.i ], [ 0, %entry ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_pages(i32 noundef %addr, i32 noundef %order) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp.not = icmp eq i32 %addr, 0
  br i1 %cmp.not, label %if.end15, label %do.body

do.body:                                          ; preds = %entry
  %cmp1 = icmp ugt i32 %addr, -1073741825
  br i1 %cmp1, label %land.lhs.true, label %do.body7, !prof !582

land.lhs.true:                                    ; preds = %do.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %0 = load ptr, ptr @high_memory, align 4
  %1 = ptrtoint ptr %0 to i32
  %cmp2 = icmp ugt i32 %1, %addr
  br i1 %cmp2, label %land.rhs, label %do.body7, !prof !582

land.rhs:                                         ; preds = %land.lhs.true
  %sub = add nsw i32 %addr, 1073741824
  %shr = lshr i32 %sub, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %2 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %2, %shr
  %call = tail call i32 @pfn_valid(i32 noundef %add) #27
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %do.body7, label %do.end10, !prof !584

do.body7:                                         ; preds = %land.rhs, %land.lhs.true, %do.body
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5484, 0\0A.popsection", ""() #27, !srcloc !646
  unreachable

do.end10:                                         ; preds = %land.rhs
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %3 = load ptr, ptr @mem_map, align 4
  %add.ptr = getelementptr %struct.page, ptr %3, i32 %shr
  tail call void @__free_pages(ptr noundef %add.ptr, i32 noundef %order)
  br label %if.end15

if.end15:                                         ; preds = %do.end10, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__page_frag_cache_drain(ptr noundef %page, i32 noundef %count) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %_refcount.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i, i32 noundef 4) #27
  %0 = ptrtoint ptr %_refcount.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %_refcount.i, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %do.end5, !prof !584

if.then:                                          ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.18) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5525, 0\0A.popsection", ""() #27, !srcloc !647
  unreachable

do.end5:                                          ; preds = %entry
  %call.i.i.i16 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i, i32 noundef 4) #27
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !608
  tail call void @llvm.prefetch.p0(ptr %_refcount.i, i32 1, i32 3, i32 1) #27
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i, ptr %_refcount.i, i32 %count, ptr elementtype(i32) %_refcount.i) #27, !srcloc !609
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %2, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !610
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@__page_frag_cache_drain, %if.then.i)) #27
          to label %page_ref_sub_and_test.exit [label %if.then.i], !srcloc !583

if.then.i:                                        ; preds = %do.end5
  %conv.i = zext i1 %cmp.i.i.i to i32
  %sub.i = sub i32 0, %count
  tail call void @__page_ref_mod_and_test(ptr noundef %page, i32 noundef %sub.i, i32 noundef %conv.i) #27
  br label %page_ref_sub_and_test.exit

page_ref_sub_and_test.exit:                       ; preds = %if.then.i, %do.end5
  br i1 %cmp.i.i.i, label %if.then8, label %if.end10

if.then8:                                         ; preds = %page_ref_sub_and_test.exit
  %3 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i = icmp eq i32 %4, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %PageHead.exit.i, !prof !584

if.then.i.i:                                      ; preds = %if.then8
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #27, !srcloc !585
  unreachable

PageHead.exit.i:                                  ; preds = %if.then8
  %5 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %page, align 4
  %7 = and i32 %6, 65536
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %if.then.i18, label %compound_order.exit

compound_order.exit:                              ; preds = %PageHead.exit.i
  %8 = getelementptr %struct.page, ptr %page, i32 1, i32 1
  %compound_order.i = getelementptr inbounds %struct.anon.46, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %compound_order.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %compound_order.i, align 1
  %conv.i17 = zext i8 %10 to i32
  %cmp.i.i = icmp ult i8 %10, 4
  br i1 %cmp.i.i, label %if.then.i18, label %if.else.i

if.then.i18:                                      ; preds = %compound_order.exit, %PageHead.exit.i
  %retval.0.i22 = phi i32 [ %conv.i17, %compound_order.exit ], [ 0, %PageHead.exit.i ]
  tail call void @free_unref_page(ptr noundef %page, i32 noundef %retval.0.i22) #27
  br label %if.end10

if.else.i:                                        ; preds = %compound_order.exit
  tail call fastcc void @__free_pages_ok(ptr noundef %page, i32 noundef %conv.i17, i32 noundef 0) #27
  br label %if.end10

if.end10:                                         ; preds = %if.else.i, %if.then.i18, %page_ref_sub_and_test.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @page_ref_sub_and_test(ptr noundef %page, i32 noundef %nr) unnamed_addr #5 align 64 {
entry:
  %_refcount = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount, i32 noundef 4) #27
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !608
  tail call void @llvm.prefetch.p0(ptr %_refcount, i32 1, i32 3, i32 1) #27
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount, ptr %_refcount, i32 %nr, ptr elementtype(i32) %_refcount) #27, !srcloc !609
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !610
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  %conv = zext i1 %cmp.i.i to i32
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@page_ref_sub_and_test, %if.then)) #27
          to label %if.end [label %if.then], !srcloc !583

if.then:                                          ; preds = %entry
  %sub = sub i32 0, %nr
  tail call void @__page_ref_mod_and_test(ptr noundef %page, i32 noundef %sub, i32 noundef %conv) #27
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @page_frag_alloc_align(ptr nocapture noundef %nc, i32 noundef %fragsz, i32 noundef %gfp_mask, i32 noundef %align_mask) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %nc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nc, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %refill, label %if.end10, !prof !584

refill:                                           ; preds = %if.then37, %if.then20, %entry
  %call = tail call fastcc ptr @__page_frag_cache_refill(ptr noundef %nc, i32 noundef %gfp_mask)
  %tobool4.not = icmp eq ptr %call, null
  br i1 %tobool4.not, label %cleanup, label %if.end

if.end:                                           ; preds = %refill
  %size6 = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 2
  %2 = ptrtoint ptr %size6 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %size6, align 2
  %_refcount.i = getelementptr inbounds %struct.page, ptr %call, i32 0, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i, i32 noundef 4) #27
  tail call void @llvm.prefetch.p0(ptr %_refcount.i, i32 1, i32 3, i32 1) #27
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i, ptr %_refcount.i, i32 32768, ptr elementtype(i32) %_refcount.i) #27, !srcloc !598
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@page_frag_alloc_align, %if.then.i)) #27
          to label %page_ref_add.exit [label %if.then.i], !srcloc !583

if.then.i:                                        ; preds = %if.end
  tail call void @__page_ref_mod(ptr noundef nonnull %call, i32 noundef 32768) #27
  br label %page_ref_add.exit

page_ref_add.exit:                                ; preds = %if.then.i, %if.end
  %5 = getelementptr inbounds %struct.page, ptr %call, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %8 = ptrtoint ptr %7 to i32
  %pfmemalloc = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 4
  %9 = trunc i32 %8 to i8
  %10 = lshr i8 %9, 1
  %11 = and i8 %10, 1
  %12 = ptrtoint ptr %pfmemalloc to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %pfmemalloc, align 4
  %pagecnt_bias = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 3
  %13 = ptrtoint ptr %pagecnt_bias to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 32769, ptr %pagecnt_bias, align 4
  %offset9 = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 1
  %14 = ptrtoint ptr %offset9 to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %3, ptr %offset9, align 4
  br label %if.end10

if.end10:                                         ; preds = %page_ref_add.exit, %entry
  %offset11 = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 1
  %15 = ptrtoint ptr %offset11 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %offset11, align 4
  %conv12 = zext i16 %16 to i32
  %sub = sub i32 %conv12, %fragsz
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %if.then20, label %if.end44, !prof !584

if.then20:                                        ; preds = %if.end10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %17 = load ptr, ptr @mem_map, align 4
  %18 = ptrtoint ptr %nc to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %nc, align 4
  %20 = ptrtoint ptr %19 to i32
  %sub22 = add i32 %20, 1073741824
  %shr = lshr i32 %sub22, 12
  %add.ptr = getelementptr %struct.page, ptr %17, i32 %shr
  %pagecnt_bias24 = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 3
  %21 = ptrtoint ptr %pagecnt_bias24 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %pagecnt_bias24, align 4
  %call25 = tail call fastcc i32 @page_ref_sub_and_test(ptr noundef %add.ptr, i32 noundef %22)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %refill, label %if.end28

if.end28:                                         ; preds = %if.then20
  %pfmemalloc29 = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 4
  %23 = ptrtoint ptr %pfmemalloc29 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %pfmemalloc29, align 4, !range !593
  %tobool30.not = icmp eq i8 %24, 0
  br i1 %tobool30.not, label %if.end39, label %if.then37, !prof !582

if.then37:                                        ; preds = %if.end28
  %call38 = tail call fastcc i32 @compound_order(ptr noundef %add.ptr), !range !648
  tail call fastcc void @free_the_page(ptr noundef %add.ptr, i32 noundef %call38)
  br label %refill

if.end39:                                         ; preds = %if.end28
  %size40 = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 2
  %25 = ptrtoint ptr %size40 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %size40, align 2
  %conv41 = zext i16 %26 to i32
  tail call fastcc void @set_page_count(ptr noundef %add.ptr, i32 noundef 32769)
  %27 = ptrtoint ptr %pagecnt_bias24 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 32769, ptr %pagecnt_bias24, align 4
  %sub43 = sub i32 %conv41, %fragsz
  br label %if.end44

if.end44:                                         ; preds = %if.end39, %if.end10
  %offset.0 = phi i32 [ %sub43, %if.end39 ], [ %sub, %if.end10 ]
  %pagecnt_bias45 = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 3
  %28 = ptrtoint ptr %pagecnt_bias45 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %pagecnt_bias45, align 4
  %dec = add i32 %29, -1
  store i32 %dec, ptr %pagecnt_bias45, align 4
  %and = and i32 %offset.0, %align_mask
  %conv46 = trunc i32 %and to i16
  %30 = ptrtoint ptr %offset11 to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %conv46, ptr %offset11, align 4
  %31 = ptrtoint ptr %nc to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %nc, align 4
  %add.ptr49 = getelementptr i8, ptr %32, i32 %and
  br label %cleanup

cleanup:                                          ; preds = %if.end44, %refill
  %retval.0 = phi ptr [ %add.ptr49, %if.end44 ], [ null, %refill ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__page_frag_cache_refill(ptr nocapture noundef writeonly %nc, i32 noundef %gfp_mask) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %or = or i32 %gfp_mask, 860160
  %call38.i.i = tail call ptr @__alloc_pages(i32 noundef %or, i32 noundef 3, i32 undef, ptr noundef null) #27
  %tobool.not = icmp eq ptr %call38.i.i, null
  %conv = select i1 %tobool.not, i16 4096, i16 -32768
  %size = getelementptr inbounds %struct.page_frag_cache, ptr %nc, i32 0, i32 2
  %0 = ptrtoint ptr %size to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 %conv, ptr %size, align 2
  br i1 %tobool.not, label %if.end, label %cond.true, !prof !584

if.end:                                           ; preds = %entry
  %call38.i.i17 = tail call ptr @__alloc_pages(i32 noundef %gfp_mask, i32 noundef 0, i32 undef, ptr noundef null) #27
  %tobool7.not = icmp eq ptr %call38.i.i17, null
  br i1 %tobool7.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end, %entry
  %page.020 = phi ptr [ %call38.i.i17, %if.end ], [ %call38.i.i, %entry ]
  %call8 = tail call ptr @page_address(ptr noundef nonnull %page.020) #27
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end
  %page.021 = phi ptr [ %page.020, %cond.true ], [ null, %if.end ]
  %cond9 = phi ptr [ %call8, %cond.true ], [ null, %if.end ]
  %1 = ptrtoint ptr %nc to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %cond9, ptr %nc, align 4
  ret ptr %page.021
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @page_frag_free(ptr noundef %addr) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  %1 = ptrtoint ptr %addr to i32
  %sub.i = add i32 %1, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  %2 = getelementptr %struct.page, ptr %0, i32 %shr.i, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i = and i32 %4, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !582

if.then.i.i:                                      ; preds = %entry
  %sub.i.i = add i32 %4, -1
  br label %virt_to_head_page.exit

if.end.i.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr %struct.page, ptr %0, i32 %shr.i
  %5 = ptrtoint ptr %add.ptr.i to i32
  br label %virt_to_head_page.exit

virt_to_head_page.exit:                           ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %5, %if.end.i.i ]
  %6 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %6, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %7 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %_refcount.i.i, align 4
  %cmp.i = icmp eq i32 %8, 0
  br i1 %cmp.i, label %if.then.i, label %do.end5.i, !prof !584

if.then.i:                                        ; preds = %virt_to_head_page.exit
  tail call void @dump_page(ptr noundef %6, ptr noundef nonnull @.str.18) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #27, !srcloc !607
  unreachable

do.end5.i:                                        ; preds = %virt_to_head_page.exit
  %call.i.i.i10.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !608
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i, i32 1, i32 3, i32 1) #27
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i, ptr %_refcount.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i) #27, !srcloc !609
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !610
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@page_frag_free, %if.then.i.i7)) #27
          to label %put_page_testzero.exit [label %if.then.i.i7], !srcloc !583

if.then.i.i7:                                     ; preds = %do.end5.i
  %conv.i.i = zext i1 %cmp.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %6, i32 noundef -1, i32 noundef %conv.i.i) #27
  br label %put_page_testzero.exit

put_page_testzero.exit:                           ; preds = %if.then.i.i7, %do.end5.i
  br i1 %cmp.i.i.i.i, label %if.then, label %if.end, !prof !584

if.then:                                          ; preds = %put_page_testzero.exit
  %call4 = tail call fastcc i32 @compound_order(ptr noundef %6), !range !648
  tail call fastcc void @free_the_page(ptr noundef %6, i32 noundef %call4)
  br label %if.end

if.end:                                           ; preds = %if.then, %put_page_testzero.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong allocsize(0) uwtable(sync)
define dso_local noalias ptr @alloc_pages_exact(i32 noundef %size, i32 noundef %gfp_mask) #14 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %gfp_mask, 262146
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end28, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b48 = load i1, ptr @alloc_pages_exact.__already_done, align 1
  br i1 %.b48, label %if.end28, label %if.then, !prof !582

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @alloc_pages_exact.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5641, i32 noundef 9, ptr noundef null) #27
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs, %entry
  %and38 = and i32 %gfp_mask, -262147
  %dec.i = add i32 %size, -1
  %shr.i = lshr i32 %dec.i, 12
  %tobool.not.i.i = icmp ult i32 %dec.i, 4096
  %0 = tail call i32 @llvm.ctlz.i32(i32 %shr.i, i1 true) #27, !range !649
  %sub.i.i = sub nuw nsw i32 32, %0
  %cond.i.i = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.i
  %call38.i.i.i.i = tail call ptr @__alloc_pages(i32 noundef %and38, i32 noundef %cond.i.i, i32 undef, ptr noundef null) #27
  %tobool.not.i49 = icmp eq ptr %call38.i.i.i.i, null
  br i1 %tobool.not.i49, label %__get_free_pages.exit, label %if.end.i50

if.end.i50:                                       ; preds = %if.end28
  %call1.i = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i.i) #27
  %1 = ptrtoint ptr %call1.i to i32
  br label %__get_free_pages.exit

__get_free_pages.exit:                            ; preds = %if.end.i50, %if.end28
  %retval.0.i51 = phi i32 [ %1, %if.end.i50 ], [ 0, %if.end28 ]
  %call41 = tail call fastcc ptr @make_alloc_exact(i32 noundef %retval.0.i51, i32 noundef %cond.i.i, i32 noundef %size)
  ret ptr %call41
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @make_alloc_exact(i32 noundef %addr, i32 noundef %order, i32 noundef %size) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq i32 %addr, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %shl = shl i32 4096, %order
  %add = add i32 %shl, %addr
  %add1 = add i32 %size, 4095
  %and = and i32 %add1, -4096
  %add2 = add i32 %and, %addr
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  %sub = add i32 %addr, 1073741824
  %shr = lshr i32 %sub, 12
  %add.ptr = getelementptr %struct.page, ptr %0, i32 %shr
  tail call void @split_page(ptr noundef %add.ptr, i32 noundef %order)
  %cmp13 = icmp ult i32 %add2, %add
  br i1 %cmp13, label %while.body, label %if.end

while.body:                                       ; preds = %free_pages.exit, %if.then
  %used.014 = phi i32 [ %add5, %free_pages.exit ], [ %add2, %if.then ]
  %cmp.not.i = icmp eq i32 %used.014, 0
  br i1 %cmp.not.i, label %free_pages.exit, label %do.body.i

do.body.i:                                        ; preds = %while.body
  %cmp1.i = icmp ugt i32 %used.014, -1073741825
  br i1 %cmp1.i, label %land.lhs.true.i, label %do.body7.i, !prof !582

land.lhs.true.i:                                  ; preds = %do.body.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %1 = load ptr, ptr @high_memory, align 4
  %2 = ptrtoint ptr %1 to i32
  %cmp2.i = icmp ult i32 %used.014, %2
  br i1 %cmp2.i, label %land.rhs.i, label %do.body7.i, !prof !582

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %sub.i = add nsw i32 %used.014, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %3 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i = add i32 %3, %shr.i
  %call.i = tail call i32 @pfn_valid(i32 noundef %add.i) #27
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %do.body7.i, label %do.end10.i, !prof !584

do.body7.i:                                       ; preds = %land.rhs.i, %land.lhs.true.i, %do.body.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5484, 0\0A.popsection", ""() #27, !srcloc !646
  unreachable

do.end10.i:                                       ; preds = %land.rhs.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %4 = load ptr, ptr @mem_map, align 4
  %add.ptr.i = getelementptr %struct.page, ptr %4, i32 %shr.i
  tail call void @__free_pages(ptr noundef %add.ptr.i, i32 noundef 0) #27
  br label %free_pages.exit

free_pages.exit:                                  ; preds = %do.end10.i, %while.body
  %add5 = add nsw i32 %used.014, 4096
  %cmp = icmp ult i32 %add5, %add
  br i1 %cmp, label %while.body, label %if.end

if.end:                                           ; preds = %free_pages.exit, %if.then, %entry
  %5 = inttoptr i32 %addr to ptr
  ret ptr %5
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong allocsize(1) uwtable(sync)
define dso_local noalias ptr @alloc_pages_exact_nid(i32 noundef %nid, i32 noundef %size, i32 noundef %gfp_mask) local_unnamed_addr #15 section ".meminit.text" align 64 {
entry:
  %dec.i = add i32 %size, -1
  %shr.i = lshr i32 %dec.i, 12
  %tobool.not.i.i = icmp ult i32 %dec.i, 4096
  %0 = tail call i32 @llvm.ctlz.i32(i32 %shr.i, i1 true) #27, !range !649
  %sub.i.i = sub nuw nsw i32 32, %0
  %cond.i.i = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.i
  %and = and i32 %gfp_mask, 262146
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end28, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b54 = load i1, ptr @alloc_pages_exact_nid.__already_done, align 1
  br i1 %.b54, label %if.end28, label %if.then, !prof !582

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @alloc_pages_exact_nid.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 5666, i32 noundef 9, ptr noundef null) #27
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs, %entry
  switch i32 %nid, label %do.body3.i.i [
    i32 -1, label %alloc_pages_node.exit
    i32 0, label %alloc_pages_node.exit
  ], !prof !650

do.body3.i.i:                                     ; preds = %if.end28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/gfp.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 569, 0\0A.popsection", ""() #27, !srcloc !651
  unreachable

alloc_pages_node.exit:                            ; preds = %if.end28, %if.end28
  %and38 = and i32 %gfp_mask, -262147
  %call38.i.i = tail call ptr @__alloc_pages(i32 noundef %and38, i32 noundef %cond.i.i, i32 undef, ptr noundef null) #27
  %tobool41.not = icmp eq ptr %call38.i.i, null
  br i1 %tobool41.not, label %cleanup, label %if.end43

if.end43:                                         ; preds = %alloc_pages_node.exit
  %call44 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i) #27
  %1 = ptrtoint ptr %call44 to i32
  %call45 = tail call fastcc ptr @make_alloc_exact(i32 noundef %1, i32 noundef %cond.i.i, i32 noundef %size)
  br label %cleanup

cleanup:                                          ; preds = %if.end43, %alloc_pages_node.exit
  %retval.0 = phi ptr [ %call45, %if.end43 ], [ null, %alloc_pages_node.exit ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_pages_exact(ptr noundef %virt, i32 noundef %size) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %virt to i32
  %add = add i32 %size, 4095
  %and = and i32 %add, -4096
  %add1 = add i32 %and, %0
  %cmp6 = icmp ugt i32 %add1, %0
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %free_pages.exit, %entry
  %addr.07 = phi i32 [ %add2, %free_pages.exit ], [ %0, %entry ]
  %cmp.not.i = icmp eq i32 %addr.07, 0
  br i1 %cmp.not.i, label %free_pages.exit, label %do.body.i

do.body.i:                                        ; preds = %while.body
  %cmp1.i = icmp ugt i32 %addr.07, -1073741825
  br i1 %cmp1.i, label %land.lhs.true.i, label %do.body7.i, !prof !582

land.lhs.true.i:                                  ; preds = %do.body.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %1 = load ptr, ptr @high_memory, align 4
  %2 = ptrtoint ptr %1 to i32
  %cmp2.i = icmp ult i32 %addr.07, %2
  br i1 %cmp2.i, label %land.rhs.i, label %do.body7.i, !prof !582

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %sub.i = add nsw i32 %addr.07, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %3 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i = add i32 %3, %shr.i
  %call.i = tail call i32 @pfn_valid(i32 noundef %add.i) #27
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %do.body7.i, label %do.end10.i, !prof !584

do.body7.i:                                       ; preds = %land.rhs.i, %land.lhs.true.i, %do.body.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5484, 0\0A.popsection", ""() #27, !srcloc !646
  unreachable

do.end10.i:                                       ; preds = %land.rhs.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %4 = load ptr, ptr @mem_map, align 4
  %add.ptr.i = getelementptr %struct.page, ptr %4, i32 %shr.i
  tail call void @__free_pages(ptr noundef %add.ptr.i, i32 noundef 0) #27
  br label %free_pages.exit

free_pages.exit:                                  ; preds = %do.end10.i, %while.body
  %add2 = add nsw i32 %addr.07, 4096
  %cmp = icmp ult i32 %add2, %add1
  br i1 %cmp, label %while.body, label %while.end

while.end:                                        ; preds = %free_pages.exit, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nr_free_buffer_pages() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1) to i32))
  %0 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1), align 4
  %cmp.not.i.i.i = icmp ugt i32 %0, 1
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %first_zones_zonelist.exit.i, !prof !584

if.end.i.i.i:                                     ; preds = %entry
  %call3.i.i.i = tail call ptr @__next_zones_zonelist(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), i32 noundef 1, ptr noundef null) #27
  br label %first_zones_zonelist.exit.i

first_zones_zonelist.exit.i:                      ; preds = %if.end.i.i.i, %entry
  %retval.0.i.i.i = phi ptr [ %call3.i.i.i, %if.end.i.i.i ], [ getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), %entry ]
  %1 = ptrtoint ptr %retval.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %zone.017.i = load ptr, ptr %retval.0.i.i.i, align 4
  %tobool.not18.i = icmp eq ptr %zone.017.i, null
  br i1 %tobool.not18.i, label %nr_free_zone_pages.exit, label %for.body.i

for.body.i:                                       ; preds = %next_zones_zonelist.exit.i, %first_zones_zonelist.exit.i
  %zone.021.i = phi ptr [ %zone.0.i, %next_zones_zonelist.exit.i ], [ %zone.017.i, %first_zones_zonelist.exit.i ]
  %z.020.i = phi ptr [ %retval.0.i.i, %next_zones_zonelist.exit.i ], [ %retval.0.i.i.i, %first_zones_zonelist.exit.i ]
  %sum.019.i = phi i32 [ %sum.1.i, %next_zones_zonelist.exit.i ], [ 0, %first_zones_zonelist.exit.i ]
  %managed_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone.021.i, i32 0, i32 11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #27
  %2 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %managed_pages.i.i, align 4
  %arrayidx.i = getelementptr [3 x i32], ptr %zone.021.i, i32 0, i32 2
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 8
  %watermark_boost.i = getelementptr inbounds %struct.zone, ptr %zone.021.i, i32 0, i32 1
  %6 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %watermark_boost.i, align 4
  %add.i = add i32 %7, %5
  %8 = tail call i32 @llvm.usub.sat.i32(i32 %3, i32 %add.i) #27
  %sum.1.i = add i32 %8, %sum.019.i
  %incdec.ptr.i = getelementptr %struct.zoneref, ptr %z.020.i, i32 1
  %zone_idx.i.i.i = getelementptr %struct.zoneref, ptr %z.020.i, i32 1, i32 1
  %9 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %zone_idx.i.i.i, align 4
  %cmp.not.i.i = icmp ugt i32 %10, 1
  br i1 %cmp.not.i.i, label %if.end.i.i, label %next_zones_zonelist.exit.i, !prof !584

if.end.i.i:                                       ; preds = %for.body.i
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr.i, i32 noundef 1, ptr noundef null) #27
  br label %next_zones_zonelist.exit.i

next_zones_zonelist.exit.i:                       ; preds = %if.end.i.i, %for.body.i
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ %incdec.ptr.i, %for.body.i ]
  %11 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %zone.0.i = load ptr, ptr %retval.0.i.i, align 4
  %tobool.not.i = icmp eq ptr %zone.0.i, null
  br i1 %tobool.not.i, label %nr_free_zone_pages.exit, label %for.body.i

nr_free_zone_pages.exit:                          ; preds = %next_zones_zonelist.exit.i, %first_zones_zonelist.exit.i
  %sum.0.lcssa.i = phi i32 [ 0, %first_zones_zonelist.exit.i ], [ %sum.1.i, %next_zones_zonelist.exit.i ]
  ret i32 %sum.0.lcssa.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @si_mem_available() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_node_stat to i32))
  %0 = load volatile i32, ptr @vm_node_stat, align 4
  %call.i.i.i.i.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1) to i32))
  %1 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), align 4
  %call.i.i.i.i.2 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2) to i32))
  %2 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), align 4
  %call.i.i.i.i.3 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3) to i32))
  %3 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), align 4
  %call.i.i.i.i.4 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 4), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 4) to i32))
  %4 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 4), align 4
  %call1 = tail call ptr @first_online_pgdat() #27
  %tobool.not55 = icmp eq ptr %call1, null
  br i1 %tobool.not55, label %for.end9, label %for.body3

for.body3:                                        ; preds = %for.body3, %entry
  %zone.057 = phi ptr [ %call8, %for.body3 ], [ %call1, %entry ]
  %wmark_low.056 = phi i32 [ %add6, %for.body3 ], [ 0, %entry ]
  %arrayidx4 = getelementptr [3 x i32], ptr %zone.057, i32 0, i32 1
  %5 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx4, align 4
  %watermark_boost = getelementptr inbounds %struct.zone, ptr %zone.057, i32 0, i32 1
  %7 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %watermark_boost, align 4
  %add5 = add i32 %6, %wmark_low.056
  %add6 = add i32 %add5, %8
  %call8 = tail call ptr @next_zone(ptr noundef nonnull %zone.057) #27
  %tobool.not = icmp eq ptr %call8, null
  br i1 %tobool.not, label %for.end9, label %for.body3

for.end9:                                         ; preds = %for.body3, %entry
  %wmark_low.0.lcssa = phi i32 [ 0, %entry ], [ %add6, %for.body3 ]
  %9 = tail call i32 @llvm.smax.i32(i32 %3, i32 0) #27
  %10 = tail call i32 @llvm.smax.i32(i32 %2, i32 0) #27
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_zone_stat, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_zone_stat to i32))
  %11 = load volatile i32, ptr @vm_zone_stat, align 4
  %12 = tail call i32 @llvm.smax.i32(i32 %11, i32 0) #27
  %13 = load i32, ptr @totalreserve_pages, align 4
  %add13 = add nuw i32 %10, %9
  %div48 = lshr i32 %add13, 1
  %14 = tail call i32 @llvm.umin.i32(i32 %div48, i32 %wmark_low.0.lcssa)
  %call.i.i.i50 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 5), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 5) to i32))
  %15 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 5), align 4
  %16 = tail call i32 @llvm.smax.i32(i32 %15, i32 0) #27
  %call.i.i.i.i51 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 34), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 34) to i32))
  %17 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 34), align 4
  %18 = tail call i32 @llvm.smax.i32(i32 %17, i32 0) #27
  %add19 = add nuw i32 %18, %16
  %div2049 = lshr i32 %add19, 1
  %19 = tail call i32 @llvm.umin.i32(i32 %div2049, i32 %wmark_low.0.lcssa)
  %20 = add i32 %12, %add13
  %21 = add i32 %13, %14
  %22 = add i32 %20, %add19
  %23 = add i32 %21, %19
  %add28 = sub i32 %22, %23
  %24 = tail call i32 @llvm.smax.i32(i32 %add28, i32 0)
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @si_meminfo(ptr nocapture noundef writeonly %val) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @_totalram_pages, i32 noundef 4) #27
  %0 = load volatile i32, ptr @_totalram_pages, align 4
  %totalram = getelementptr inbounds %struct.sysinfo, ptr %val, i32 0, i32 2
  %1 = ptrtoint ptr %totalram to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %0, ptr %totalram, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 23), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 23) to i32))
  %2 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 23), align 4
  %3 = tail call i32 @llvm.smax.i32(i32 %2, i32 0) #27
  %sharedram = getelementptr inbounds %struct.sysinfo, ptr %val, i32 0, i32 4
  %4 = ptrtoint ptr %sharedram to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %sharedram, align 4
  %call.i.i.i12 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_zone_stat, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_zone_stat to i32))
  %5 = load volatile i32, ptr @vm_zone_stat, align 4
  %6 = tail call i32 @llvm.smax.i32(i32 %5, i32 0) #27
  %freeram = getelementptr inbounds %struct.sysinfo, ptr %val, i32 0, i32 3
  %7 = ptrtoint ptr %freeram to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %freeram, align 4
  %call3 = tail call i32 @nr_blockdev_pages() #27
  %bufferram = getelementptr inbounds %struct.sysinfo, ptr %val, i32 0, i32 5
  %8 = ptrtoint ptr %bufferram to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call3, ptr %bufferram, align 4
  %call.i.i.i13 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @_totalhigh_pages, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @_totalhigh_pages to i32))
  %9 = load volatile i32, ptr @_totalhigh_pages, align 4
  %totalhigh = getelementptr inbounds %struct.sysinfo, ptr %val, i32 0, i32 10
  %10 = ptrtoint ptr %totalhigh to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %totalhigh, align 4
  %call.i = tail call i32 @__nr_free_highpages() #27
  %freehigh = getelementptr inbounds %struct.sysinfo, ptr %val, i32 0, i32 11
  %11 = ptrtoint ptr %freehigh to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call.i, ptr %freehigh, align 4
  %mem_unit = getelementptr inbounds %struct.sysinfo, ptr %val, i32 0, i32 12
  %12 = ptrtoint ptr %mem_unit to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 4096, ptr %mem_unit, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nr_blockdev_pages() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @show_free_areas(i32 noundef %filter, ptr noundef %nodemask) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %tmp.i = alloca [7 x i8], align 1
  %nr = alloca [12 x i32], align 4
  %types = alloca [12 x i8], align 1
  %call = tail call ptr @first_online_pgdat() #27
  %tobool.not495 = icmp eq ptr %call, null
  br i1 %tobool.not495, label %do.end15, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %and.i = and i32 %filter, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  %tobool1.not.i = icmp eq ptr %nodemask, null
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %free_pcp.0499 = phi i32 [ 0, %for.body.lr.ph ], [ %free_pcp.2, %for.inc ]
  %zone.0496 = phi ptr [ %call, %for.body.lr.ph ], [ %call11, %for.inc ]
  %present_pages.i = getelementptr inbounds %struct.zone, ptr %zone.0496, i32 0, i32 13
  %0 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %present_pages.i, align 8
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %for.inc, label %if.else

if.else:                                          ; preds = %for.body
  br i1 %tobool.not.i, label %for.cond5.preheader, label %if.end.i

if.end.i:                                         ; preds = %if.else
  br i1 %tobool1.not.i, label %if.then2.i, label %if.end3.i

if.then2.i:                                       ; preds = %if.end.i
  %2 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i7.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i7.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %mems_allowed.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 160
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then2.i, %if.end.i
  %nodemask.addr.0.i = phi ptr [ %nodemask, %if.end.i ], [ %mems_allowed.i, %if.then2.i ]
  %6 = ptrtoint ptr %nodemask.addr.0.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %nodemask.addr.0.i, align 4
  %8 = and i32 %7, 1
  %tobool5.not.i = icmp eq i32 %8, 0
  br i1 %tobool5.not.i, label %for.inc, label %for.cond5.preheader

for.cond5.preheader:                              ; preds = %if.end3.i, %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %call6491 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #30
  %cmp492 = icmp ult i32 %call6491, %9
  br i1 %cmp492, label %do.body.lr.ph, label %for.inc

do.body.lr.ph:                                    ; preds = %for.cond5.preheader
  %per_cpu_pageset = getelementptr inbounds %struct.zone, ptr %zone.0496, i32 0, i32 5
  %10 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %per_cpu_pageset, align 8
  %12 = ptrtoint ptr %11 to i32
  br label %do.body

do.body:                                          ; preds = %do.body, %do.body.lr.ph
  %call6494 = phi i32 [ %call6491, %do.body.lr.ph ], [ %call6, %do.body ]
  %free_pcp.1493 = phi i32 [ %free_pcp.0499, %do.body.lr.ph ], [ %add9, %do.body ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call6494
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %12
  %15 = inttoptr i32 %add to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add9 = add i32 %17, %free_pcp.1493
  %call6 = tail call i32 @cpumask_next(i32 noundef %call6494, ptr noundef nonnull @__cpu_online_mask) #30
  %cmp = icmp ult i32 %call6, %9
  br i1 %cmp, label %do.body, label %for.inc

for.inc:                                          ; preds = %do.body, %for.cond5.preheader, %if.end3.i, %for.body
  %free_pcp.2 = phi i32 [ %free_pcp.0499, %for.body ], [ %free_pcp.0499, %if.end3.i ], [ %free_pcp.0499, %for.cond5.preheader ], [ %add9, %do.body ]
  %call11 = tail call ptr @next_zone(ptr noundef nonnull %zone.0496) #27
  %tobool.not = icmp eq ptr %call11, null
  br i1 %tobool.not, label %do.end15, label %for.body

do.end15:                                         ; preds = %for.inc, %entry
  %free_pcp.0.lcssa = phi i32 [ 0, %entry ], [ %free_pcp.2, %for.inc ]
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1) to i32))
  %18 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), align 4
  %19 = tail call i32 @llvm.smax.i32(i32 %18, i32 0) #27
  %call.i.i.i.i391 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_node_stat to i32))
  %20 = load volatile i32, ptr @vm_node_stat, align 4
  %21 = tail call i32 @llvm.smax.i32(i32 %20, i32 0) #27
  %call.i.i.i.i392 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7) to i32))
  %22 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7), align 4
  %23 = tail call i32 @llvm.smax.i32(i32 %22, i32 0) #27
  %call.i.i.i.i393 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3) to i32))
  %24 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), align 4
  %25 = tail call i32 @llvm.smax.i32(i32 %24, i32 0) #27
  %call.i.i.i.i394 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2) to i32))
  %26 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), align 4
  %27 = tail call i32 @llvm.smax.i32(i32 %26, i32 0) #27
  %call.i.i.i.i395 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8) to i32))
  %28 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8), align 4
  %29 = tail call i32 @llvm.smax.i32(i32 %28, i32 0) #27
  %call.i.i.i.i396 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 4), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 4) to i32))
  %30 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 4), align 4
  %31 = tail call i32 @llvm.smax.i32(i32 %30, i32 0) #27
  %call.i.i.i.i397 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20) to i32))
  %32 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), align 4
  %33 = tail call i32 @llvm.smax.i32(i32 %32, i32 0) #27
  %call.i.i.i.i398 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21) to i32))
  %34 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21), align 4
  %35 = tail call i32 @llvm.smax.i32(i32 %34, i32 0) #27
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 5), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 5) to i32))
  %36 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 5), align 4
  %37 = tail call i32 @llvm.smax.i32(i32 %36, i32 0) #27
  %call.i.i.i399 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 6), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 6) to i32))
  %38 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 6), align 4
  %39 = tail call i32 @llvm.smax.i32(i32 %38, i32 0) #27
  %call.i.i.i.i400 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 18), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 18) to i32))
  %40 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 18), align 4
  %41 = tail call i32 @llvm.smax.i32(i32 %40, i32 0) #27
  %call.i.i.i.i401 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 23), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 23) to i32))
  %42 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 23), align 4
  %43 = tail call i32 @llvm.smax.i32(i32 %42, i32 0) #27
  %call.i.i.i.i402 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 38), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 38) to i32))
  %44 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 38), align 4
  %45 = tail call i32 @llvm.smax.i32(i32 %44, i32 0) #27
  %call.i.i.i403 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([11 x %struct.atomic_t], ptr @vm_zone_stat, i32 0, i32 8), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([11 x %struct.atomic_t], ptr @vm_zone_stat, i32 0, i32 8) to i32))
  %46 = load volatile i32, ptr getelementptr inbounds ([11 x %struct.atomic_t], ptr @vm_zone_stat, i32 0, i32 8), align 4
  %47 = tail call i32 @llvm.smax.i32(i32 %46, i32 0) #27
  %call.i.i.i.i404 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 34), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 34) to i32))
  %48 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 34), align 4
  %49 = tail call i32 @llvm.smax.i32(i32 %48, i32 0) #27
  %call.i.i.i405 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_zone_stat, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_zone_stat to i32))
  %50 = load volatile i32, ptr @vm_zone_stat, align 4
  %51 = tail call i32 @llvm.smax.i32(i32 %50, i32 0) #27
  %call.i.i.i406 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([11 x %struct.atomic_t], ptr @vm_zone_stat, i32 0, i32 10), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([11 x %struct.atomic_t], ptr @vm_zone_stat, i32 0, i32 10) to i32))
  %52 = load volatile i32, ptr getelementptr inbounds ([11 x %struct.atomic_t], ptr @vm_zone_stat, i32 0, i32 10), align 4
  %53 = tail call i32 @llvm.smax.i32(i32 %52, i32 0) #27
  %call35 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, i32 noundef %19, i32 noundef %21, i32 noundef %23, i32 noundef %25, i32 noundef %27, i32 noundef %29, i32 noundef %31, i32 noundef %33, i32 noundef %35, i32 noundef %37, i32 noundef %39, i32 noundef %41, i32 noundef %43, i32 noundef %45, i32 noundef %47, i32 noundef %49, i32 noundef %51, i32 noundef %free_pcp.0.lcssa, i32 noundef %53) #29
  %call36 = tail call ptr @first_online_pgdat() #27
  %tobool38.not501 = icmp eq ptr %call36, null
  br i1 %tobool38.not501, label %for.end78, label %for.body39.lr.ph

for.body39.lr.ph:                                 ; preds = %do.end15
  %and.i407 = and i32 %filter, 1
  %tobool.not.i408 = icmp eq i32 %and.i407, 0
  %tobool1.not.i409 = icmp eq ptr %nodemask, null
  br label %for.body39

for.body39:                                       ; preds = %for.inc76, %for.body39.lr.ph
  %pgdat.0502 = phi ptr [ %call36, %for.body39.lr.ph ], [ %call77, %for.inc76 ]
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %pgdat.0502, i32 0, i32 8
  %54 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %node_id, align 64
  br i1 %tobool.not.i408, label %do.end45, label %if.end.i410

if.end.i410:                                      ; preds = %for.body39
  br i1 %tobool1.not.i409, label %if.then2.i414, label %show_mem_node_skip.exit419

if.then2.i414:                                    ; preds = %if.end.i410
  %56 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i7.i411 = and i32 %56, -16384
  %57 = inttoptr i32 %and.i7.i411 to ptr
  %task.i412 = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 2
  %58 = ptrtoint ptr %task.i412 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %task.i412, align 8
  %mems_allowed.i413 = getelementptr inbounds %struct.task_struct, ptr %59, i32 0, i32 160
  br label %show_mem_node_skip.exit419

show_mem_node_skip.exit419:                       ; preds = %if.then2.i414, %if.end.i410
  %nodemask.addr.0.i415 = phi ptr [ %nodemask, %if.end.i410 ], [ %mems_allowed.i413, %if.then2.i414 ]
  %div3.i.i = lshr i32 %55, 5
  %arrayidx.i.i = getelementptr i32, ptr %nodemask.addr.0.i415, i32 %div3.i.i
  %60 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %55, 31
  %62 = shl nuw i32 1, %and.i.i
  %63 = and i32 %61, %62
  %tobool5.not.i416 = icmp eq i32 %63, 0
  br i1 %tobool5.not.i416, label %for.inc76, label %do.end45

do.end45:                                         ; preds = %show_mem_node_skip.exit419, %for.body39
  %call.i.i.i.i420 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1) to i32))
  %64 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), align 4
  %65 = tail call i32 @llvm.smax.i32(i32 %64, i32 0) #27
  %shl = shl i32 %65, 2
  %call.i.i.i.i421 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_node_stat to i32))
  %66 = load volatile i32, ptr @vm_node_stat, align 4
  %67 = tail call i32 @llvm.smax.i32(i32 %66, i32 0) #27
  %shl50 = shl i32 %67, 2
  %call.i.i.i.i422 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3) to i32))
  %68 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), align 4
  %69 = tail call i32 @llvm.smax.i32(i32 %68, i32 0) #27
  %shl52 = shl i32 %69, 2
  %call.i.i.i.i423 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2) to i32))
  %70 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), align 4
  %71 = tail call i32 @llvm.smax.i32(i32 %70, i32 0) #27
  %shl54 = shl i32 %71, 2
  %call.i.i.i.i424 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 4), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 4) to i32))
  %72 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 4), align 4
  %73 = tail call i32 @llvm.smax.i32(i32 %72, i32 0) #27
  %shl56 = shl i32 %73, 2
  %call.i.i.i.i425 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7) to i32))
  %74 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7), align 4
  %75 = tail call i32 @llvm.smax.i32(i32 %74, i32 0) #27
  %shl58 = shl i32 %75, 2
  %call.i.i.i.i426 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8) to i32))
  %76 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8), align 4
  %77 = tail call i32 @llvm.smax.i32(i32 %76, i32 0) #27
  %shl60 = shl i32 %77, 2
  %call.i.i.i.i427 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 18), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 18) to i32))
  %78 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 18), align 4
  %79 = tail call i32 @llvm.smax.i32(i32 %78, i32 0) #27
  %shl62 = shl i32 %79, 2
  %call.i.i.i.i428 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20) to i32))
  %80 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 20), align 4
  %81 = tail call i32 @llvm.smax.i32(i32 %80, i32 0) #27
  %shl64 = shl i32 %81, 2
  %call.i.i.i.i429 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21) to i32))
  %82 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 21), align 4
  %83 = tail call i32 @llvm.smax.i32(i32 %82, i32 0) #27
  %shl66 = shl i32 %83, 2
  %call.i.i.i.i430 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 23), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 23) to i32))
  %84 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 23), align 4
  %85 = tail call i32 @llvm.smax.i32(i32 %84, i32 0) #27
  %shl68 = shl i32 %85, 2
  %call.i.i.i.i431 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 22), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 22) to i32))
  %86 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 22), align 4
  %87 = tail call i32 @llvm.smax.i32(i32 %86, i32 0) #27
  %shl70 = shl i32 %87, 2
  %call.i.i.i.i432 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 37), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 37) to i32))
  %88 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 37), align 4
  %89 = tail call i32 @llvm.smax.i32(i32 %88, i32 0) #27
  %call.i.i.i.i433 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 38), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 38) to i32))
  %90 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 38), align 4
  %91 = tail call i32 @llvm.smax.i32(i32 %90, i32 0) #27
  %shl73 = shl i32 %91, 2
  %kswapd_failures = getelementptr inbounds %struct.pglist_data, ptr %pgdat.0502, i32 0, i32 17
  %92 = ptrtoint ptr %kswapd_failures to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %kswapd_failures, align 16
  %cmp74 = icmp sgt i32 %93, 15
  %cond = select i1 %cmp74, ptr @.str.24, ptr @.str.25
  %call75 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.22, i32 noundef %55, i32 noundef %shl, i32 noundef %shl50, i32 noundef %shl52, i32 noundef %shl54, i32 noundef %shl56, i32 noundef %shl58, i32 noundef %shl60, i32 noundef %shl62, i32 noundef %shl64, i32 noundef %shl66, i32 noundef %shl68, i32 noundef %shl70, i32 noundef %89, i32 noundef %shl73, ptr noundef nonnull %cond) #29
  br label %for.inc76

for.inc76:                                        ; preds = %do.end45, %show_mem_node_skip.exit419
  %call77 = tail call ptr @next_online_pgdat(ptr noundef nonnull %pgdat.0502) #27
  %tobool38.not = icmp eq ptr %call77, null
  br i1 %tobool38.not, label %for.end78, label %for.body39

for.end78:                                        ; preds = %for.inc76, %do.end15
  %call79 = tail call ptr @first_online_pgdat() #27
  %tobool83.not509 = icmp eq ptr %call79, null
  br i1 %tobool83.not509, label %for.end209, label %for.body84.lr.ph

for.body84.lr.ph:                                 ; preds = %for.end78
  %and.i436 = and i32 %filter, 1
  %tobool.not.i437 = icmp eq i32 %and.i436, 0
  %tobool1.not.i438 = icmp eq ptr %nodemask, null
  br label %for.body84

for.body84:                                       ; preds = %for.inc207, %for.body84.lr.ph
  %zone.1510 = phi ptr [ %call79, %for.body84.lr.ph ], [ %call208, %for.inc207 ]
  %present_pages.i434 = getelementptr inbounds %struct.zone, ptr %zone.1510, i32 0, i32 13
  %94 = ptrtoint ptr %present_pages.i434 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %present_pages.i434, align 8
  %tobool.i435.not = icmp eq i32 %95, 0
  br i1 %tobool.i435.not, label %for.inc207, label %if.else87

if.else87:                                        ; preds = %for.body84
  br i1 %tobool.not.i437, label %for.cond92.preheader, label %if.end.i439

if.end.i439:                                      ; preds = %if.else87
  br i1 %tobool1.not.i438, label %if.then2.i443, label %if.end3.i446

if.then2.i443:                                    ; preds = %if.end.i439
  %96 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i7.i440 = and i32 %96, -16384
  %97 = inttoptr i32 %and.i7.i440 to ptr
  %task.i441 = getelementptr inbounds %struct.thread_info, ptr %97, i32 0, i32 2
  %98 = ptrtoint ptr %task.i441 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %task.i441, align 8
  %mems_allowed.i442 = getelementptr inbounds %struct.task_struct, ptr %99, i32 0, i32 160
  br label %if.end3.i446

if.end3.i446:                                     ; preds = %if.then2.i443, %if.end.i439
  %nodemask.addr.0.i444 = phi ptr [ %nodemask, %if.end.i439 ], [ %mems_allowed.i442, %if.then2.i443 ]
  %100 = ptrtoint ptr %nodemask.addr.0.i444 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile i32, ptr %nodemask.addr.0.i444, align 4
  %102 = and i32 %101, 1
  %tobool5.not.i445 = icmp eq i32 %102, 0
  br i1 %tobool5.not.i445, label %for.inc207, label %for.cond92.preheader

for.cond92.preheader:                             ; preds = %if.end3.i446, %if.else87
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %103 = load i32, ptr @nr_cpu_ids, align 4
  %call93503 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #30
  %cmp94504 = icmp ult i32 %call93503, %103
  br i1 %cmp94504, label %do.body96.lr.ph, label %for.end108

do.body96.lr.ph:                                  ; preds = %for.cond92.preheader
  %per_cpu_pageset102 = getelementptr inbounds %struct.zone, ptr %zone.1510, i32 0, i32 5
  %104 = ptrtoint ptr %per_cpu_pageset102 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %per_cpu_pageset102, align 8
  %106 = ptrtoint ptr %105 to i32
  br label %do.body96

do.body96:                                        ; preds = %do.body96, %do.body96.lr.ph
  %call93506 = phi i32 [ %call93503, %do.body96.lr.ph ], [ %call93, %do.body96 ]
  %free_pcp.3505 = phi i32 [ 0, %do.body96.lr.ph ], [ %add107, %do.body96 ]
  %arrayidx104 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call93506
  %107 = ptrtoint ptr %arrayidx104 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %arrayidx104, align 4
  %add105 = add i32 %108, %106
  %109 = inttoptr i32 %add105 to ptr
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %109, align 4
  %add107 = add i32 %111, %free_pcp.3505
  %call93 = tail call i32 @cpumask_next(i32 noundef %call93506, ptr noundef nonnull @__cpu_online_mask) #30
  %cmp94 = icmp ult i32 %call93, %103
  br i1 %cmp94, label %do.body96, label %for.end108

for.end108:                                       ; preds = %do.body96, %for.cond92.preheader
  %free_pcp.3.lcssa = phi i32 [ 0, %for.cond92.preheader ], [ %add107, %do.body96 ]
  %name = getelementptr inbounds %struct.zone, ptr %zone.1510, i32 0, i32 15
  %112 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %name, align 16
  %arrayidx.i = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 0
  %call.i.i.i449 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i, i32 noundef 4) #27
  %114 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %arrayidx.i, align 4
  %116 = tail call i32 @llvm.smax.i32(i32 %115, i32 0) #27
  %shl114 = shl i32 %116, 2
  %watermark_boost = getelementptr inbounds %struct.zone, ptr %zone.1510, i32 0, i32 1
  %117 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %watermark_boost, align 4
  %shl115 = shl i32 %118, 2
  %119 = ptrtoint ptr %zone.1510 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %zone.1510, align 128
  %add118 = add i32 %120, %118
  %shl119 = shl i32 %add118, 2
  %arrayidx121 = getelementptr [3 x i32], ptr %zone.1510, i32 0, i32 1
  %121 = ptrtoint ptr %arrayidx121 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %arrayidx121, align 4
  %add123 = add i32 %122, %118
  %shl124 = shl i32 %add123, 2
  %arrayidx126 = getelementptr [3 x i32], ptr %zone.1510, i32 0, i32 2
  %123 = ptrtoint ptr %arrayidx126 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %arrayidx126, align 8
  %add128 = add i32 %124, %118
  %shl129 = shl i32 %add128, 2
  %nr_reserved_highatomic = getelementptr inbounds %struct.zone, ptr %zone.1510, i32 0, i32 2
  %125 = ptrtoint ptr %nr_reserved_highatomic to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %nr_reserved_highatomic, align 16
  %shl130 = shl i32 %126, 2
  %arrayidx.i450 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 2
  %call.i.i.i451 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i450, i32 noundef 4) #27
  %127 = ptrtoint ptr %arrayidx.i450 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile i32, ptr %arrayidx.i450, align 4
  %129 = tail call i32 @llvm.smax.i32(i32 %128, i32 0) #27
  %shl132 = shl i32 %129, 2
  %arrayidx.i452 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 1
  %call.i.i.i453 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i452, i32 noundef 4) #27
  %130 = ptrtoint ptr %arrayidx.i452 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %arrayidx.i452, align 4
  %132 = tail call i32 @llvm.smax.i32(i32 %131, i32 0) #27
  %shl134 = shl i32 %132, 2
  %arrayidx.i454 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 4
  %call.i.i.i455 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i454, i32 noundef 4) #27
  %133 = ptrtoint ptr %arrayidx.i454 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load volatile i32, ptr %arrayidx.i454, align 4
  %135 = tail call i32 @llvm.smax.i32(i32 %134, i32 0) #27
  %shl136 = shl i32 %135, 2
  %arrayidx.i456 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 3
  %call.i.i.i457 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i456, i32 noundef 4) #27
  %136 = ptrtoint ptr %arrayidx.i456 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load volatile i32, ptr %arrayidx.i456, align 4
  %138 = tail call i32 @llvm.smax.i32(i32 %137, i32 0) #27
  %shl138 = shl i32 %138, 2
  %arrayidx.i458 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 5
  %call.i.i.i459 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i458, i32 noundef 4) #27
  %139 = ptrtoint ptr %arrayidx.i458 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load volatile i32, ptr %arrayidx.i458, align 4
  %141 = tail call i32 @llvm.smax.i32(i32 %140, i32 0) #27
  %shl140 = shl i32 %141, 2
  %arrayidx.i460 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 6
  %call.i.i.i461 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i460, i32 noundef 4) #27
  %142 = ptrtoint ptr %arrayidx.i460 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load volatile i32, ptr %arrayidx.i460, align 4
  %144 = tail call i32 @llvm.smax.i32(i32 %143, i32 0) #27
  %shl142 = shl i32 %144, 2
  %145 = ptrtoint ptr %present_pages.i434 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %present_pages.i434, align 8
  %shl143 = shl i32 %146, 2
  %managed_pages.i = getelementptr inbounds %struct.zone, ptr %zone.1510, i32 0, i32 11
  %call.i.i.i462 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i, i32 noundef 4) #27
  %147 = ptrtoint ptr %managed_pages.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load volatile i32, ptr %managed_pages.i, align 4
  %shl145 = shl i32 %148, 2
  %arrayidx.i463 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 7
  %call.i.i.i464 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i463, i32 noundef 4) #27
  %149 = ptrtoint ptr %arrayidx.i463 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load volatile i32, ptr %arrayidx.i463, align 4
  %151 = tail call i32 @llvm.smax.i32(i32 %150, i32 0) #27
  %shl147 = shl i32 %151, 2
  %arrayidx.i465 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 8
  %call.i.i.i466 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i465, i32 noundef 4) #27
  %152 = ptrtoint ptr %arrayidx.i465 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load volatile i32, ptr %arrayidx.i465, align 4
  %154 = tail call i32 @llvm.smax.i32(i32 %153, i32 0) #27
  %shl149 = shl i32 %154, 2
  %shl150 = shl i32 %free_pcp.3.lcssa, 2
  %155 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %155, -16384
  %156 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %156, i32 0, i32 1
  %157 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %158, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !652
  %per_cpu_pageset168 = getelementptr inbounds %struct.zone, ptr %zone.1510, i32 0, i32 5
  %159 = ptrtoint ptr %per_cpu_pageset168 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %per_cpu_pageset168, align 8
  %161 = ptrtoint ptr %160 to i32
  %162 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i467 = and i32 %162, -16384
  %163 = inttoptr i32 %and.i467 to ptr
  %cpu172 = getelementptr inbounds %struct.thread_info, ptr %163, i32 0, i32 3
  %164 = ptrtoint ptr %cpu172 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %cpu172, align 4
  %arrayidx173 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %165
  %166 = ptrtoint ptr %arrayidx173 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %arrayidx173, align 4
  %add174 = add i32 %167, %161
  %168 = inttoptr i32 %add174 to ptr
  %169 = ptrtoint ptr %168 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load volatile i32, ptr %168, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !653
  %171 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i389 = and i32 %171, -16384
  %172 = inttoptr i32 %and.i.i.i389 to ptr
  %preempt_count.i.i390 = getelementptr inbounds %struct.thread_info, ptr %172, i32 0, i32 1
  %173 = ptrtoint ptr %preempt_count.i.i390 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load volatile i32, ptr %preempt_count.i.i390, align 4
  %sub.i = add i32 %174, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i390, align 4
  %shl181 = shl i32 %170, 2
  %arrayidx.i468 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 37, i32 10
  %call.i.i.i469 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i468, i32 noundef 4) #27
  %175 = ptrtoint ptr %arrayidx.i468 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load volatile i32, ptr %arrayidx.i468, align 4
  %177 = tail call i32 @llvm.smax.i32(i32 %176, i32 0) #27
  %shl183 = shl i32 %177, 2
  %call184 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.27, ptr noundef %113, i32 noundef %shl114, i32 noundef %shl115, i32 noundef %shl119, i32 noundef %shl124, i32 noundef %shl129, i32 noundef %shl130, i32 noundef %shl132, i32 noundef %shl134, i32 noundef %shl136, i32 noundef %shl138, i32 noundef %shl140, i32 noundef %shl142, i32 noundef %shl143, i32 noundef %shl145, i32 noundef %shl147, i32 noundef %shl149, i32 noundef %shl150, i32 noundef %shl181, i32 noundef %shl183) #29
  %call189 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.30) #29
  %arrayidx197 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 3, i32 0
  %178 = ptrtoint ptr %arrayidx197 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %arrayidx197, align 4
  %call198 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, i32 noundef %179) #29
  %arrayidx197.1 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 3, i32 1
  %180 = ptrtoint ptr %arrayidx197.1 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %arrayidx197.1, align 4
  %call198.1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, i32 noundef %181) #29
  %arrayidx197.2 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 3, i32 2
  %182 = ptrtoint ptr %arrayidx197.2 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %arrayidx197.2, align 4
  %call198.2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, i32 noundef %183) #29
  %arrayidx197.3 = getelementptr %struct.zone, ptr %zone.1510, i32 0, i32 3, i32 3
  %184 = ptrtoint ptr %arrayidx197.3 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %arrayidx197.3, align 4
  %call198.3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, i32 noundef %185) #29
  %call205 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.16) #29
  br label %for.inc207

for.inc207:                                       ; preds = %for.end108, %if.end3.i446, %for.body84
  %call208 = tail call ptr @next_zone(ptr noundef %zone.1510) #27
  %tobool83.not = icmp eq ptr %call208, null
  br i1 %tobool83.not, label %for.end209, label %for.body84

for.end209:                                       ; preds = %for.inc207, %for.end78
  %call210 = tail call ptr @first_online_pgdat() #27
  %tobool214.not517 = icmp eq ptr %call210, null
  br i1 %tobool214.not517, label %for.end302, label %for.body215.lr.ph

for.body215.lr.ph:                                ; preds = %for.end209
  %and.i472 = and i32 %filter, 1
  %tobool.not.i473 = icmp eq i32 %and.i472, 0
  %tobool1.not.i474 = icmp eq ptr %nodemask, null
  %186 = getelementptr inbounds [7 x i8], ptr %tmp.i, i32 0, i32 1
  br label %for.body215

for.body215:                                      ; preds = %for.inc300, %for.body215.lr.ph
  %zone.2518 = phi ptr [ %call210, %for.body215.lr.ph ], [ %call301, %for.inc300 ]
  %present_pages.i470 = getelementptr inbounds %struct.zone, ptr %zone.2518, i32 0, i32 13
  %187 = ptrtoint ptr %present_pages.i470 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %present_pages.i470, align 8
  %tobool.i471.not = icmp eq i32 %188, 0
  br i1 %tobool.i471.not, label %for.inc300, label %if.else218

if.else218:                                       ; preds = %for.body215
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %nr) #27
  %189 = call ptr @memset(ptr %nr, i32 255, i32 48)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %types) #27
  %190 = call ptr @memset(ptr %types, i32 255, i32 12)
  br i1 %tobool.not.i473, label %if.end222, label %if.end.i475

if.end.i475:                                      ; preds = %if.else218
  br i1 %tobool1.not.i474, label %if.then2.i479, label %show_mem_node_skip.exit484

if.then2.i479:                                    ; preds = %if.end.i475
  %191 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i7.i476 = and i32 %191, -16384
  %192 = inttoptr i32 %and.i7.i476 to ptr
  %task.i477 = getelementptr inbounds %struct.thread_info, ptr %192, i32 0, i32 2
  %193 = ptrtoint ptr %task.i477 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %task.i477, align 8
  %mems_allowed.i478 = getelementptr inbounds %struct.task_struct, ptr %194, i32 0, i32 160
  br label %show_mem_node_skip.exit484

show_mem_node_skip.exit484:                       ; preds = %if.then2.i479, %if.end.i475
  %nodemask.addr.0.i480 = phi ptr [ %nodemask, %if.end.i475 ], [ %mems_allowed.i478, %if.then2.i479 ]
  %195 = ptrtoint ptr %nodemask.addr.0.i480 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load volatile i32, ptr %nodemask.addr.0.i480, align 4
  %197 = and i32 %196, 1
  %tobool5.not.i481 = icmp eq i32 %197, 0
  br i1 %tobool5.not.i481, label %cleanup292, label %if.end222

if.end222:                                        ; preds = %show_mem_node_skip.exit484, %if.else218
  %name227 = getelementptr inbounds %struct.zone, ptr %zone.2518, i32 0, i32 15
  %198 = ptrtoint ptr %name227 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %name227, align 16
  %call228 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.38, ptr noundef %199) #29
  %lock = getelementptr inbounds %struct.zone, ptr %zone.2518, i32 0, i32 22
  %call234 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #27
  br label %for.body242

for.body242:                                      ; preds = %for.inc260.5, %if.end222
  %total.0514 = phi i32 [ 0, %if.end222 ], [ %add247, %for.inc260.5 ]
  %order.0513 = phi i32 [ 0, %if.end222 ], [ %inc264, %for.inc260.5 ]
  %arrayidx243 = getelementptr %struct.zone, ptr %zone.2518, i32 0, i32 20, i32 %order.0513
  %nr_free = getelementptr %struct.zone, ptr %zone.2518, i32 0, i32 20, i32 %order.0513, i32 1
  %200 = ptrtoint ptr %nr_free to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %nr_free, align 4
  %arrayidx244 = getelementptr [12 x i32], ptr %nr, i32 0, i32 %order.0513
  %202 = ptrtoint ptr %arrayidx244 to i32
  call void @__asan_store4_noabort(i32 %202)
  store i32 %201, ptr %arrayidx244, align 4
  %shl246 = shl i32 %201, %order.0513
  %arrayidx248 = getelementptr [12 x i8], ptr %types, i32 0, i32 %order.0513
  %203 = ptrtoint ptr %arrayidx248 to i32
  call void @__asan_store1_noabort(i32 %203)
  store i8 0, ptr %arrayidx248, align 1
  %204 = ptrtoint ptr %arrayidx243 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load volatile ptr, ptr %arrayidx243, align 4
  %cmp.i.i = icmp eq ptr %205, %arrayidx243
  br i1 %cmp.i.i, label %for.inc260, label %if.then254

if.then254:                                       ; preds = %for.body242
  %206 = ptrtoint ptr %arrayidx248 to i32
  call void @__asan_load1_noabort(i32 %206)
  %207 = load i8, ptr %arrayidx248, align 1
  %conv258 = or i8 %207, 1
  store i8 %conv258, ptr %arrayidx248, align 1
  br label %for.inc260

for.inc260:                                       ; preds = %if.then254, %for.body242
  %arrayidx.i485.1 = getelementptr [6 x %struct.list_head], ptr %arrayidx243, i32 0, i32 1
  %208 = ptrtoint ptr %arrayidx.i485.1 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load volatile ptr, ptr %arrayidx.i485.1, align 4
  %cmp.i.i.1 = icmp eq ptr %209, %arrayidx.i485.1
  br i1 %cmp.i.i.1, label %for.inc260.1, label %if.then254.1

if.then254.1:                                     ; preds = %for.inc260
  %210 = ptrtoint ptr %arrayidx248 to i32
  call void @__asan_load1_noabort(i32 %210)
  %211 = load i8, ptr %arrayidx248, align 1
  %conv258.1 = or i8 %211, 2
  store i8 %conv258.1, ptr %arrayidx248, align 1
  br label %for.inc260.1

for.inc260.1:                                     ; preds = %if.then254.1, %for.inc260
  %arrayidx.i485.2 = getelementptr [6 x %struct.list_head], ptr %arrayidx243, i32 0, i32 2
  %212 = ptrtoint ptr %arrayidx.i485.2 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load volatile ptr, ptr %arrayidx.i485.2, align 4
  %cmp.i.i.2 = icmp eq ptr %213, %arrayidx.i485.2
  br i1 %cmp.i.i.2, label %for.inc260.2, label %if.then254.2

if.then254.2:                                     ; preds = %for.inc260.1
  %214 = ptrtoint ptr %arrayidx248 to i32
  call void @__asan_load1_noabort(i32 %214)
  %215 = load i8, ptr %arrayidx248, align 1
  %conv258.2 = or i8 %215, 4
  store i8 %conv258.2, ptr %arrayidx248, align 1
  br label %for.inc260.2

for.inc260.2:                                     ; preds = %if.then254.2, %for.inc260.1
  %arrayidx.i485.3 = getelementptr [6 x %struct.list_head], ptr %arrayidx243, i32 0, i32 3
  %216 = ptrtoint ptr %arrayidx.i485.3 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load volatile ptr, ptr %arrayidx.i485.3, align 4
  %cmp.i.i.3 = icmp eq ptr %217, %arrayidx.i485.3
  br i1 %cmp.i.i.3, label %for.inc260.3, label %if.then254.3

if.then254.3:                                     ; preds = %for.inc260.2
  %218 = ptrtoint ptr %arrayidx248 to i32
  call void @__asan_load1_noabort(i32 %218)
  %219 = load i8, ptr %arrayidx248, align 1
  %conv258.3 = or i8 %219, 8
  store i8 %conv258.3, ptr %arrayidx248, align 1
  br label %for.inc260.3

for.inc260.3:                                     ; preds = %if.then254.3, %for.inc260.2
  %arrayidx.i485.4 = getelementptr [6 x %struct.list_head], ptr %arrayidx243, i32 0, i32 4
  %220 = ptrtoint ptr %arrayidx.i485.4 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load volatile ptr, ptr %arrayidx.i485.4, align 4
  %cmp.i.i.4 = icmp eq ptr %221, %arrayidx.i485.4
  br i1 %cmp.i.i.4, label %for.inc260.4, label %if.then254.4

if.then254.4:                                     ; preds = %for.inc260.3
  %222 = ptrtoint ptr %arrayidx248 to i32
  call void @__asan_load1_noabort(i32 %222)
  %223 = load i8, ptr %arrayidx248, align 1
  %conv258.4 = or i8 %223, 16
  store i8 %conv258.4, ptr %arrayidx248, align 1
  br label %for.inc260.4

for.inc260.4:                                     ; preds = %if.then254.4, %for.inc260.3
  %arrayidx.i485.5 = getelementptr [6 x %struct.list_head], ptr %arrayidx243, i32 0, i32 5
  %224 = ptrtoint ptr %arrayidx.i485.5 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load volatile ptr, ptr %arrayidx.i485.5, align 4
  %cmp.i.i.5 = icmp eq ptr %225, %arrayidx.i485.5
  br i1 %cmp.i.i.5, label %for.inc260.5, label %if.then254.5

if.then254.5:                                     ; preds = %for.inc260.4
  %226 = ptrtoint ptr %arrayidx248 to i32
  call void @__asan_load1_noabort(i32 %226)
  %227 = load i8, ptr %arrayidx248, align 1
  %conv258.5 = or i8 %227, 32
  store i8 %conv258.5, ptr %arrayidx248, align 1
  br label %for.inc260.5

for.inc260.5:                                     ; preds = %if.then254.5, %for.inc260.4
  %add247 = add i32 %shl246, %total.0514
  %inc264 = add nuw nsw i32 %order.0513, 1
  %exitcond.not = icmp eq i32 %inc264, 12
  br i1 %exitcond.not, label %for.end265, label %for.body242

for.end265:                                       ; preds = %for.inc260.5
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call234) #27
  br label %do.end273

do.end273:                                        ; preds = %for.inc283, %for.end265
  %order.1515 = phi i32 [ 0, %for.end265 ], [ %inc284, %for.inc283 ]
  %arrayidx275 = getelementptr [12 x i32], ptr %nr, i32 0, i32 %order.1515
  %228 = ptrtoint ptr %arrayidx275 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %arrayidx275, align 4
  %shl276 = shl nuw nsw i32 4, %order.1515
  %call277 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.41, i32 noundef %229, i32 noundef %shl276) #29
  %tobool279.not = icmp eq i32 %229, 0
  br i1 %tobool279.not, label %for.inc283, label %if.then280

if.then280:                                       ; preds = %do.end273
  %arrayidx281 = getelementptr [12 x i8], ptr %types, i32 0, i32 %order.1515
  %230 = ptrtoint ptr %arrayidx281 to i32
  call void @__asan_load1_noabort(i32 %230)
  %231 = load i8, ptr %arrayidx281, align 1
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %tmp.i) #27
  %conv.i = zext i8 %231 to i32
  %and.i486 = and i32 %conv.i, 1
  %tobool.not.i487 = icmp eq i32 %and.i486, 0
  %232 = call ptr @memset(ptr %tmp.i, i32 255, i32 7)
  br i1 %tobool.not.i487, label %for.inc.i, label %if.then.i

if.then.i:                                        ; preds = %if.then280
  %233 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store1_noabort(i32 %233)
  store i8 85, ptr %tmp.i, align 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %if.then280
  %p.1.i = phi ptr [ %186, %if.then.i ], [ %tmp.i, %if.then280 ]
  %and.1.i = and i32 %conv.i, 2
  %tobool.not.1.i = icmp eq i32 %and.1.i, 0
  br i1 %tobool.not.1.i, label %for.inc.1.i, label %if.then.1.i

if.then.1.i:                                      ; preds = %for.inc.i
  %incdec.ptr.1.i = getelementptr i8, ptr %p.1.i, i32 1
  %234 = ptrtoint ptr %p.1.i to i32
  call void @__asan_store1_noabort(i32 %234)
  store i8 77, ptr %p.1.i, align 1
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %if.then.1.i, %for.inc.i
  %p.1.1.i = phi ptr [ %incdec.ptr.1.i, %if.then.1.i ], [ %p.1.i, %for.inc.i ]
  %and.2.i = and i32 %conv.i, 4
  %tobool.not.2.i = icmp eq i32 %and.2.i, 0
  br i1 %tobool.not.2.i, label %for.inc.2.i, label %if.then.2.i

if.then.2.i:                                      ; preds = %for.inc.1.i
  %incdec.ptr.2.i = getelementptr i8, ptr %p.1.1.i, i32 1
  %235 = ptrtoint ptr %p.1.1.i to i32
  call void @__asan_store1_noabort(i32 %235)
  store i8 69, ptr %p.1.1.i, align 1
  br label %for.inc.2.i

for.inc.2.i:                                      ; preds = %if.then.2.i, %for.inc.1.i
  %p.1.2.i = phi ptr [ %incdec.ptr.2.i, %if.then.2.i ], [ %p.1.1.i, %for.inc.1.i ]
  %and.3.i = and i32 %conv.i, 8
  %tobool.not.3.i = icmp eq i32 %and.3.i, 0
  br i1 %tobool.not.3.i, label %for.inc.3.i, label %if.then.3.i

if.then.3.i:                                      ; preds = %for.inc.2.i
  %incdec.ptr.3.i = getelementptr i8, ptr %p.1.2.i, i32 1
  %236 = ptrtoint ptr %p.1.2.i to i32
  call void @__asan_store1_noabort(i32 %236)
  store i8 72, ptr %p.1.2.i, align 1
  br label %for.inc.3.i

for.inc.3.i:                                      ; preds = %if.then.3.i, %for.inc.2.i
  %p.1.3.i = phi ptr [ %incdec.ptr.3.i, %if.then.3.i ], [ %p.1.2.i, %for.inc.2.i ]
  %and.4.i = and i32 %conv.i, 16
  %tobool.not.4.i = icmp eq i32 %and.4.i, 0
  br i1 %tobool.not.4.i, label %for.inc.4.i, label %if.then.4.i

if.then.4.i:                                      ; preds = %for.inc.3.i
  %incdec.ptr.4.i = getelementptr i8, ptr %p.1.3.i, i32 1
  %237 = ptrtoint ptr %p.1.3.i to i32
  call void @__asan_store1_noabort(i32 %237)
  store i8 67, ptr %p.1.3.i, align 1
  br label %for.inc.4.i

for.inc.4.i:                                      ; preds = %if.then.4.i, %for.inc.3.i
  %p.1.4.i = phi ptr [ %incdec.ptr.4.i, %if.then.4.i ], [ %p.1.3.i, %for.inc.3.i ]
  %and.5.i = and i32 %conv.i, 32
  %tobool.not.5.i = icmp eq i32 %and.5.i, 0
  br i1 %tobool.not.5.i, label %show_migration_types.exit, label %if.then.5.i

if.then.5.i:                                      ; preds = %for.inc.4.i
  %incdec.ptr.5.i = getelementptr i8, ptr %p.1.4.i, i32 1
  %238 = ptrtoint ptr %p.1.4.i to i32
  call void @__asan_store1_noabort(i32 %238)
  store i8 73, ptr %p.1.4.i, align 1
  br label %show_migration_types.exit

show_migration_types.exit:                        ; preds = %if.then.5.i, %for.inc.4.i
  %p.1.5.i = phi ptr [ %incdec.ptr.5.i, %if.then.5.i ], [ %p.1.4.i, %for.inc.4.i ]
  %239 = ptrtoint ptr %p.1.5.i to i32
  call void @__asan_store1_noabort(i32 %239)
  store i8 0, ptr %p.1.5.i, align 1
  %call.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef nonnull %tmp.i) #29
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %tmp.i) #27
  br label %for.inc283

for.inc283:                                       ; preds = %show_migration_types.exit, %do.end273
  %inc284 = add nuw nsw i32 %order.1515, 1
  %exitcond521.not = icmp eq i32 %inc284, 12
  br i1 %exitcond521.not, label %do.end288, label %do.end273

do.end288:                                        ; preds = %for.inc283
  %shl290 = shl i32 %add247, 2
  %call291 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.44, i32 noundef %shl290) #29
  br label %cleanup292

cleanup292:                                       ; preds = %do.end288, %show_mem_node_skip.exit484
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %types) #27
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %nr) #27
  br label %for.inc300

for.inc300:                                       ; preds = %cleanup292, %for.body215
  %call301 = call ptr @next_zone(ptr noundef nonnull %zone.2518) #27
  %tobool214.not = icmp eq ptr %call301, null
  br i1 %tobool214.not, label %for.end302, label %for.body215

for.end302:                                       ; preds = %for.inc300, %for.end209
  %call.i.i.i.i488 = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 19), i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 19) to i32))
  %240 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 19), align 4
  %241 = call i32 @llvm.smax.i32(i32 %240, i32 0) #27
  %call308 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.47, i32 noundef %241) #29
  call void @show_swap_cache_info() #27
  ret void
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @next_online_pgdat(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @show_swap_cache_info() local_unnamed_addr #3

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @build_all_zonelists(ptr noundef %pgdat) local_unnamed_addr #10 section ".ref.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %0 = load i32, ptr @system_state, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call fastcc void @build_all_zonelists_init() #31
  br label %if.end

if.else:                                          ; preds = %entry
  tail call fastcc void @__build_all_zonelists(ptr noundef %pgdat)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1) to i32))
  %1 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1), align 4
  %cmp.not.i.i.i = icmp ugt i32 %1, 3
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %first_zones_zonelist.exit.i, !prof !584

if.end.i.i.i:                                     ; preds = %if.end
  %call3.i.i.i = tail call ptr @__next_zones_zonelist(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), i32 noundef 3, ptr noundef null) #27
  br label %first_zones_zonelist.exit.i

first_zones_zonelist.exit.i:                      ; preds = %if.end.i.i.i, %if.end
  %retval.0.i.i.i = phi ptr [ %call3.i.i.i, %if.end.i.i.i ], [ getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), %if.end ]
  %2 = ptrtoint ptr %retval.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %zone.017.i = load ptr, ptr %retval.0.i.i.i, align 4
  %tobool.not18.i = icmp eq ptr %zone.017.i, null
  br i1 %tobool.not18.i, label %nr_free_zone_pages.exit, label %for.body.i

for.body.i:                                       ; preds = %next_zones_zonelist.exit.i, %first_zones_zonelist.exit.i
  %zone.021.i = phi ptr [ %zone.0.i, %next_zones_zonelist.exit.i ], [ %zone.017.i, %first_zones_zonelist.exit.i ]
  %z.020.i = phi ptr [ %retval.0.i.i, %next_zones_zonelist.exit.i ], [ %retval.0.i.i.i, %first_zones_zonelist.exit.i ]
  %sum.019.i = phi i32 [ %sum.1.i, %next_zones_zonelist.exit.i ], [ 0, %first_zones_zonelist.exit.i ]
  %managed_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone.021.i, i32 0, i32 11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #27
  %3 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %managed_pages.i.i, align 4
  %arrayidx.i = getelementptr [3 x i32], ptr %zone.021.i, i32 0, i32 2
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx.i, align 8
  %watermark_boost.i = getelementptr inbounds %struct.zone, ptr %zone.021.i, i32 0, i32 1
  %7 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %watermark_boost.i, align 4
  %add.i = add i32 %8, %6
  %9 = tail call i32 @llvm.usub.sat.i32(i32 %4, i32 %add.i) #27
  %sum.1.i = add i32 %9, %sum.019.i
  %incdec.ptr.i = getelementptr %struct.zoneref, ptr %z.020.i, i32 1
  %zone_idx.i.i.i = getelementptr %struct.zoneref, ptr %z.020.i, i32 1, i32 1
  %10 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %zone_idx.i.i.i, align 4
  %cmp.not.i.i = icmp ugt i32 %11, 3
  br i1 %cmp.not.i.i, label %if.end.i.i, label %next_zones_zonelist.exit.i, !prof !584

if.end.i.i:                                       ; preds = %for.body.i
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr.i, i32 noundef 3, ptr noundef null) #27
  br label %next_zones_zonelist.exit.i

next_zones_zonelist.exit.i:                       ; preds = %if.end.i.i, %for.body.i
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ %incdec.ptr.i, %for.body.i ]
  %12 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %zone.0.i = load ptr, ptr %retval.0.i.i, align 4
  %tobool.not.i = icmp eq ptr %zone.0.i, null
  br i1 %tobool.not.i, label %nr_free_zone_pages.exit, label %for.body.i

nr_free_zone_pages.exit:                          ; preds = %next_zones_zonelist.exit.i, %first_zones_zonelist.exit.i
  %sum.0.lcssa.i = phi i32 [ 0, %first_zones_zonelist.exit.i ], [ %sum.1.i, %next_zones_zonelist.exit.i ]
  %cmp2 = icmp ult i32 %sum.0.lcssa.i, 12288
  %.str.51..str.52 = select i1 %cmp2, ptr @.str.51, ptr @.str.52
  %. = zext i1 %cmp2 to i32
  store i32 %., ptr @page_group_by_mobility_disabled, align 4
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.49, i32 noundef 1, ptr noundef nonnull %.str.51..str.52, i32 noundef %sum.0.lcssa.i) #29
  ret void
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @build_all_zonelists_init() unnamed_addr #17 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__build_all_zonelists(ptr noundef null)
  %call14 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp15 = icmp ult i32 %call14, %0
  br i1 %cmp15, label %do.body, label %for.end

do.body:                                          ; preds = %do.body, %entry
  %call16 = phi i32 [ %call, %do.body ], [ %call14, %entry ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call16
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @boot_pageset to i32)
  %3 = inttoptr i32 %add to ptr
  %add10 = add i32 %2, ptrtoint (ptr @boot_zonestats to i32)
  %4 = inttoptr i32 %add10 to ptr
  tail call fastcc void @per_cpu_pages_init(ptr noundef %3, ptr noundef %4)
  %call = tail call i32 @cpumask_next(i32 noundef %call16, ptr noundef nonnull @__cpu_possible_mask) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %5
  br i1 %cmp, label %do.body, label %for.end

for.end:                                          ; preds = %do.body, %entry
  tail call void @mminit_verify_zonelist() #27
  tail call void @cpuset_init_current_mems_allowed() #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__build_all_zonelists(ptr noundef %data) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef nonnull @__build_all_zonelists.lock) #27
  %tobool.not = icmp eq ptr %data, null
  br i1 %tobool.not, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %data, i32 0, i32 8
  %0 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %node_id, align 64
  %cmp.i.not = icmp eq i32 %1, 0
  br i1 %cmp.i.not, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %node_zonelists.i = getelementptr inbounds %struct.pglist_data, ptr %data, i32 0, i32 1
  %call.i = tail call fastcc i32 @build_zonerefs_node(ptr noundef nonnull %data, ptr noundef %node_zonelists.i) #27
  %add.ptr.i = getelementptr %struct.zoneref, ptr %node_zonelists.i, i32 %call.i
  %call3.i = tail call fastcc i32 @build_zonerefs_node(ptr noundef nonnull @contig_page_data, ptr noundef %add.ptr.i) #27
  %add.ptr4.i = getelementptr %struct.zoneref, ptr %add.ptr.i, i32 %call3.i
  %2 = icmp eq i32 %1, 2147483647
  br i1 %2, label %if.end.sink.split, label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8) to i32))
  %3 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8), align 64
  %call.i6 = tail call fastcc i32 @build_zonerefs_node(ptr noundef nonnull @contig_page_data, ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1)) #27
  %add.ptr.i7 = getelementptr %struct.zoneref, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), i32 %call.i6
  %cmp40.i8 = icmp ugt i32 %3, 2147483646
  br i1 %cmp40.i8, label %for.body.i19.preheader, label %for.cond5.preheader.i11

for.body.i19.preheader:                           ; preds = %if.else
  %call3.i20 = tail call fastcc i32 @build_zonerefs_node(ptr noundef nonnull @contig_page_data, ptr noundef %add.ptr.i7) #27
  %add.ptr4.i21 = getelementptr %struct.zoneref, ptr %add.ptr.i7, i32 %call3.i20
  br label %for.cond5.preheader.i11

for.cond5.preheader.i11:                          ; preds = %for.body.i19.preheader, %if.else
  %zonerefs.0.lcssa.i9 = phi ptr [ %add.ptr.i7, %if.else ], [ %add.ptr4.i21, %for.body.i19.preheader ]
  %cmp643.i10 = icmp sgt i32 %3, 0
  br i1 %cmp643.i10, label %if.end.sink.split, label %if.end

if.end.sink.split:                                ; preds = %for.cond5.preheader.i11, %if.then
  %zonerefs.0.lcssa.i9.sink39 = phi ptr [ %add.ptr4.i, %if.then ], [ %zonerefs.0.lcssa.i9, %for.cond5.preheader.i11 ]
  %call13.peel.i12 = tail call fastcc i32 @build_zonerefs_node(ptr noundef nonnull @contig_page_data, ptr noundef %zonerefs.0.lcssa.i9.sink39) #27
  %add.ptr14.peel.i13 = getelementptr %struct.zoneref, ptr %zonerefs.0.lcssa.i9.sink39, i32 %call13.peel.i12
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %for.cond5.preheader.i11, %if.then
  %zonerefs.2.lcssa.i27.sink38 = phi ptr [ %add.ptr4.i, %if.then ], [ %zonerefs.0.lcssa.i9, %for.cond5.preheader.i11 ], [ %add.ptr14.peel.i13, %if.end.sink.split ]
  %4 = ptrtoint ptr %zonerefs.2.lcssa.i27.sink38 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %zonerefs.2.lcssa.i27.sink38, align 4
  %zone_idx.i28 = getelementptr inbounds %struct.zoneref, ptr %zonerefs.2.lcssa.i27.sink38, i32 0, i32 1
  %5 = ptrtoint ptr %zone_idx.i28 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %zone_idx.i28, align 4
  tail call void @_raw_spin_unlock(ptr noundef nonnull @__build_all_zonelists.lock) #27
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @memmap_init_range(i32 noundef %size, i32 %nid, i32 noundef %zone, i32 noundef %start_pfn, i32 %zone_end_pfn, i32 noundef %context, ptr nocapture readnone %altmap, i32 noundef %migratetype) local_unnamed_addr #0 section ".meminit.text" align 64 {
entry:
  %pfn = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pfn) #27
  %add = add i32 %start_pfn, %size
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @highest_memmap_pfn to i32))
  %0 = load i32, ptr @highest_memmap_pfn, align 4
  %sub = add i32 %add, -1
  %cmp = icmp ult i32 %0, %sub
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @highest_memmap_pfn to i32))
  store i32 %sub, ptr @highest_memmap_pfn, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %start_pfn, ptr %pfn, align 4
  %cmp228 = icmp ugt i32 %add, %start_pfn
  br i1 %cmp228, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %cmp3 = icmp eq i32 %context, 0
  %cmp12 = icmp eq i32 %context, 1
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge, %for.body.lr.ph
  br i1 %cmp3, label %if.then4, label %if.end10

if.then4:                                         ; preds = %for.body
  %call = call fastcc zeroext i1 @overlap_memmap_init(i32 noundef %zone, ptr noundef nonnull %pfn) #31
  br i1 %call, label %for.cond.backedge, label %if.end10

if.end10:                                         ; preds = %if.then4, %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %2 = load ptr, ptr @mem_map, align 4
  %3 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %pfn, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %5 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub11 = sub i32 %4, %5
  %add.ptr = getelementptr %struct.page, ptr %2, i32 %sub11
  tail call fastcc void @__init_single_page(ptr noundef %add.ptr, i32 noundef %zone) #31
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end10
  %6 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %add.ptr, align 4
  %8 = and i32 %7, 65536
  %tobool.not.i.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %if.then.i

PageCompound.exit.i:                              ; preds = %if.then13
  %9 = getelementptr %struct.page, ptr %2, i32 %sub11, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %9, align 4
  %and.i.i.i = and i32 %11, 1
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %PageCompound.exit.i, %if.then13
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.95) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 442, 0\0A.popsection", ""() #27, !srcloc !594
  unreachable

do.body7.i:                                       ; preds = %PageCompound.exit.i
  %12 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %add.ptr, align 4
  %cmp.i.not.i = icmp eq i32 %13, -1
  br i1 %cmp.i.not.i, label %if.then16.i, label %__SetPageReserved.exit, !prof !584

if.then16.i:                                      ; preds = %do.body7.i
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 442, 0\0A.popsection", ""() #27, !srcloc !595
  unreachable

__SetPageReserved.exit:                           ; preds = %do.body7.i
  %or.i.i = or i32 %13, 4096
  %14 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %or.i.i, ptr %add.ptr, align 4
  br label %if.end14

if.end14:                                         ; preds = %__SetPageReserved.exit, %if.end10
  %and = and i32 %4, 2047
  %cmp15 = icmp eq i32 %and, 0
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end14
  tail call void @set_pageblock_migratetype(ptr noundef %add.ptr, i32 noundef %migratetype)
  tail call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 6578, i32 noundef 0) #27
  %call.i = tail call i32 @__cond_resched() #27
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %inc = add i32 %4, 1
  %15 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %inc, ptr %pfn, align 4
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.end18, %if.then4
  %16 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pfn, align 4
  %cmp2 = icmp ult i32 %17, %add
  br i1 %cmp2, label %for.body, label %for.end

for.end:                                          ; preds = %for.cond.backedge, %if.end
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pfn) #27
  ret void
}

; Function Attrs: cold nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @overlap_memmap_init(i32 noundef %zone, ptr nocapture noundef %pfn) unnamed_addr #18 section ".meminit.text" align 64 {
entry:
  %.b21 = load i1, ptr @mirrored_kernelcore, align 1
  %cmp = icmp eq i32 %zone, 3
  %or.cond = and i1 %cmp, %.b21
  br i1 %or.cond, label %if.then, label %return

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @overlap_memmap_init.r, align 4
  %tobool1.not = icmp eq ptr %0, null
  br i1 %tobool1.not, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %1 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pfn, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %0, align 4
  %size.i = getelementptr inbounds %struct.memblock_region, ptr %0, i32 0, i32 1
  %5 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %size.i, align 4
  %add.i = add i32 %6, %4
  %shr.i = lshr i32 %add.i, 12
  %cmp2.not = icmp ult i32 %2, %shr.i
  br i1 %cmp2.not, label %if.end8, label %if.then3

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2, i32 3) to i32))
  %7 = load ptr, ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2, i32 3), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2) to i32))
  %8 = load i32, ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2), align 4
  %add.ptr = getelementptr %struct.memblock_region, ptr %7, i32 %8
  %cmp429 = icmp ult ptr %7, %add.ptr
  br i1 %cmp429, label %for.body.lr.ph, label %if.end8.loopexit

for.body.lr.ph:                                   ; preds = %if.then3
  %9 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pfn, align 4
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %storemerge30 = phi ptr [ %7, %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %11 = ptrtoint ptr %storemerge30 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %storemerge30, align 4
  %size.i22 = getelementptr inbounds %struct.memblock_region, ptr %storemerge30, i32 0, i32 1
  %13 = ptrtoint ptr %size.i22 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %size.i22, align 4
  %add.i23 = add i32 %14, %12
  %shr.i24 = lshr i32 %add.i23, 12
  %cmp6 = icmp ult i32 %10, %shr.i24
  br i1 %cmp6, label %if.end8.loopexit, label %for.inc

for.inc:                                          ; preds = %for.body
  %incdec.ptr = getelementptr %struct.memblock_region, ptr %storemerge30, i32 1
  %cmp4 = icmp ult ptr %incdec.ptr, %add.ptr
  br i1 %cmp4, label %for.body, label %if.end8.loopexit

if.end8.loopexit:                                 ; preds = %for.inc, %for.body, %if.then3
  %storemerge.lcssa = phi ptr [ %7, %if.then3 ], [ %storemerge30, %for.body ], [ %incdec.ptr, %for.inc ]
  store ptr %storemerge.lcssa, ptr @overlap_memmap_init.r, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.end8.loopexit, %lor.lhs.false
  %15 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pfn, align 4
  %17 = load ptr, ptr @overlap_memmap_init.r, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %sub.i = add i32 %19, 4095
  %shr.i25 = lshr i32 %sub.i, 12
  %cmp10.not = icmp ult i32 %16, %shr.i25
  br i1 %cmp10.not, label %return, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %if.end8
  %flags.i = getelementptr inbounds %struct.memblock_region, ptr %17, i32 0, i32 2
  %20 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %21, 2
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %return, label %if.then13

if.then13:                                        ; preds = %land.lhs.true11
  %size.i26 = getelementptr inbounds %struct.memblock_region, ptr %17, i32 0, i32 1
  %22 = ptrtoint ptr %size.i26 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %size.i26, align 4
  %add.i27 = add i32 %23, %19
  %shr.i28 = lshr i32 %add.i27, 12
  %24 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %shr.i28, ptr %pfn, align 4
  br label %return

return:                                           ; preds = %if.then13, %land.lhs.true11, %if.end8, %entry
  %retval.0 = phi i1 [ true, %if.then13 ], [ false, %if.end8 ], [ false, %land.lhs.true11 ], [ false, %entry ]
  ret i1 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__init_single_page(ptr noundef %page, i32 noundef %zone) unnamed_addr #0 section ".meminit.text" align 64 {
entry:
  %0 = getelementptr inbounds i8, ptr %page, i32 4
  %1 = call ptr @memset(ptr %0, i32 0, i32 32)
  %shl.i.i = shl i32 %zone, 30
  %2 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %shl.i.i, ptr %page, align 4
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %3 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile i32 1, ptr %_refcount.i.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_set, i32 0, i32 1), ptr blockaddress(@__init_single_page, %if.then.i.i)) #27
          to label %init_page_count.exit [label %if.then.i.i], !srcloc !583

if.then.i.i:                                      ; preds = %entry
  tail call void @__page_ref_set(ptr noundef %page, i32 noundef 1) #27
  br label %init_page_count.exit

init_page_count.exit:                             ; preds = %if.then.i.i, %entry
  %4 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %4, i32 noundef 4) #27
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile i32 -1, ptr %4, align 4
  %6 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %6, ptr %6, align 4
  %prev.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 0, i32 1
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %6, ptr %prev.i, align 4
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local ptr @memmap_alloc(i32 noundef %size, i32 noundef %align, i32 noundef %min_addr, i32 noundef %nid, i1 noundef zeroext %exact_nid) local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %exact_nid, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = tail call ptr @memblock_alloc_exact_nid_raw(i32 noundef %size, i32 noundef %align, i32 noundef %min_addr, i32 noundef 0, i32 noundef %nid) #27
  br label %if.end

if.else:                                          ; preds = %entry
  %call1 = tail call ptr @memblock_alloc_try_nid_raw(i32 noundef %size, i32 noundef %align, i32 noundef %min_addr, i32 noundef 0, i32 noundef %nid) #27
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ptr.0 = phi ptr [ %call, %if.then ], [ %call1, %if.else ]
  %tobool2.not = icmp eq ptr %ptr.0, null
  %cmp.not = icmp eq i32 %size, 0
  %or.cond = or i1 %cmp.not, %tobool2.not
  br i1 %or.cond, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @page_init_poison(ptr noundef nonnull %ptr.0, i32 noundef %size) #27
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  ret ptr %ptr.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memblock_alloc_exact_nid_raw(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memblock_alloc_try_nid_raw(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_init_poison(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @setup_zone_pageset(ptr noundef %zone) local_unnamed_addr #0 section ".meminit.text" align 64 {
entry:
  %call = tail call noalias ptr @__alloc_percpu(i32 noundef 12, i32 noundef 1) #32
  %per_cpu_zonestats = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 6
  %0 = ptrtoint ptr %per_cpu_zonestats to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %per_cpu_zonestats, align 4
  %call1 = tail call noalias ptr @__alloc_percpu(i32 noundef 112, i32 noundef 4) #32
  %per_cpu_pageset = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 5
  %1 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call1, ptr %per_cpu_pageset, align 8
  %call222 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %cmp23 = icmp ult i32 %call222, %2
  br i1 %cmp23, label %for.body, label %for.end

for.body:                                         ; preds = %for.body, %entry
  %call224 = phi i32 [ %call2, %for.body ], [ %call222, %entry ]
  %3 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %per_cpu_pageset, align 8
  %5 = ptrtoint ptr %4 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call224
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %add = add i32 %7, %5
  %8 = inttoptr i32 %add to ptr
  %9 = ptrtoint ptr %per_cpu_zonestats to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %per_cpu_zonestats, align 4
  %11 = ptrtoint ptr %10 to i32
  %add14 = add i32 %7, %11
  %12 = inttoptr i32 %add14 to ptr
  tail call fastcc void @per_cpu_pages_init(ptr noundef %8, ptr noundef %12)
  %call2 = tail call i32 @cpumask_next(i32 noundef %call224, ptr noundef nonnull @__cpu_possible_mask) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %13 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call2, %13
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  tail call fastcc void @zone_set_pageset_high_and_batch(ptr noundef %zone, i32 noundef 0)
  ret void
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: argmemonly nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @per_cpu_pages_init(ptr noundef %pcp, ptr nocapture noundef writeonly %pzstats) unnamed_addr #20 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = call ptr @memset(ptr %pcp, i32 0, i32 16)
  %1 = call ptr @memset(ptr %pzstats, i32 0, i32 12)
  %arrayidx = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 0
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %arrayidx, ptr %arrayidx, align 4
  %prev.i = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %arrayidx, ptr %prev.i, align 4
  %arrayidx.1 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 1
  %4 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %arrayidx.1, ptr %arrayidx.1, align 4
  %prev.i.1 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 1, i32 1
  %5 = ptrtoint ptr %prev.i.1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %arrayidx.1, ptr %prev.i.1, align 4
  %arrayidx.2 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 2
  %6 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %arrayidx.2, ptr %arrayidx.2, align 4
  %prev.i.2 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 2, i32 1
  %7 = ptrtoint ptr %prev.i.2 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %arrayidx.2, ptr %prev.i.2, align 4
  %arrayidx.3 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 3
  %8 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %arrayidx.3, ptr %arrayidx.3, align 4
  %prev.i.3 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 3, i32 1
  %9 = ptrtoint ptr %prev.i.3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %arrayidx.3, ptr %prev.i.3, align 4
  %arrayidx.4 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 4
  %10 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %arrayidx.4, ptr %arrayidx.4, align 4
  %prev.i.4 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 4, i32 1
  %11 = ptrtoint ptr %prev.i.4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %arrayidx.4, ptr %prev.i.4, align 4
  %arrayidx.5 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 5
  %12 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %arrayidx.5, ptr %arrayidx.5, align 4
  %prev.i.5 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 5, i32 1
  %13 = ptrtoint ptr %prev.i.5 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %arrayidx.5, ptr %prev.i.5, align 4
  %arrayidx.6 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 6
  %14 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %arrayidx.6, ptr %arrayidx.6, align 4
  %prev.i.6 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 6, i32 1
  %15 = ptrtoint ptr %prev.i.6 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %arrayidx.6, ptr %prev.i.6, align 4
  %arrayidx.7 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 7
  %16 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %arrayidx.7, ptr %arrayidx.7, align 4
  %prev.i.7 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 7, i32 1
  %17 = ptrtoint ptr %prev.i.7 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %arrayidx.7, ptr %prev.i.7, align 4
  %arrayidx.8 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 8
  %18 = ptrtoint ptr %arrayidx.8 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %arrayidx.8, ptr %arrayidx.8, align 4
  %prev.i.8 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 8, i32 1
  %19 = ptrtoint ptr %prev.i.8 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %arrayidx.8, ptr %prev.i.8, align 4
  %arrayidx.9 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 9
  %20 = ptrtoint ptr %arrayidx.9 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %arrayidx.9, ptr %arrayidx.9, align 4
  %prev.i.9 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 9, i32 1
  %21 = ptrtoint ptr %prev.i.9 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %arrayidx.9, ptr %prev.i.9, align 4
  %arrayidx.10 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 10
  %22 = ptrtoint ptr %arrayidx.10 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %arrayidx.10, ptr %arrayidx.10, align 4
  %prev.i.10 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 10, i32 1
  %23 = ptrtoint ptr %prev.i.10 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %arrayidx.10, ptr %prev.i.10, align 4
  %arrayidx.11 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 11
  %24 = ptrtoint ptr %arrayidx.11 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %arrayidx.11, ptr %arrayidx.11, align 4
  %prev.i.11 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 11, i32 1
  %25 = ptrtoint ptr %prev.i.11 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %arrayidx.11, ptr %prev.i.11, align 4
  %high = getelementptr inbounds %struct.per_cpu_pages, ptr %pcp, i32 0, i32 1
  %26 = ptrtoint ptr %high to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %high, align 4
  %batch = getelementptr inbounds %struct.per_cpu_pages, ptr %pcp, i32 0, i32 2
  %27 = ptrtoint ptr %batch to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 1, ptr %batch, align 4
  %free_factor = getelementptr inbounds %struct.per_cpu_pages, ptr %pcp, i32 0, i32 3
  %28 = ptrtoint ptr %free_factor to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 0, ptr %free_factor, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @zone_set_pageset_high_and_batch(ptr noundef %zone, i32 noundef %cpu_online) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %managed_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #27
  %0 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %managed_pages.i.i, align 4
  %cmp.i = icmp ult i32 %1, 262144
  %phi.bo45.i = lshr i32 %1, 12
  %cond.i = select i1 %cmp.i, i32 %phi.bo45.i, i32 64
  %cmp1.i = icmp eq i32 %cond.i, 0
  %spec.store.select.i = select i1 %cmp1.i, i32 1, i32 %cond.i
  %div246.i = lshr i32 %spec.store.select.i, 1
  %add.i = add nuw nsw i32 %div246.i, %spec.store.select.i
  %2 = tail call i32 @llvm.ctlz.i32(i32 %add.i, i1 true) #27, !range !649
  %sub.i.i.op.i.i = xor i32 %2, 31
  %notmask.i = shl nsw i32 -1, %sub.i.i.op.i.i
  %3 = tail call i32 @llvm.smin.i32(i32 %notmask.i, i32 -2)
  %4 = xor i32 %3, -1
  %5 = load i32, ptr @percpu_pagelist_high_fraction, align 4
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %arrayidx.i = getelementptr [3 x i32], ptr %zone, i32 0, i32 1
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i, align 4
  %watermark_boost.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 1
  %8 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %watermark_boost.i, align 4
  %add.i20 = add i32 %9, %7
  br label %if.end.i.i.i

if.else.i:                                        ; preds = %entry
  %call.i.i.i.i22 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #27
  %10 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %managed_pages.i.i, align 4
  %12 = load i32, ptr @percpu_pagelist_high_fraction, align 4
  %div.i = udiv i32 %11, %12
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.else.i, %if.then.i
  %total_pages.0.i = phi i32 [ %div.i, %if.else.i ], [ %add.i20, %if.then.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %13 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_online_mask, i32 noundef %13) #27
  %add3.i = add i32 %call4.i.i.i, %cpu_online
  %tobool4.not.i = icmp eq i32 %add3.i, 0
  br i1 %tobool4.not.i, label %if.then5.i, label %zone_highsize.exit

if.then5.i:                                       ; preds = %if.end.i.i.i
  %call.i.i.i16.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @__num_online_cpus, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__num_online_cpus to i32))
  %14 = load volatile i32, ptr @__num_online_cpus, align 4
  br label %zone_highsize.exit

zone_highsize.exit:                               ; preds = %if.then5.i, %if.end.i.i.i
  %nr_split_cpus.0.i = phi i32 [ %add3.i, %if.end.i.i.i ], [ %14, %if.then5.i ]
  %div8.i = udiv i32 %total_pages.0.i, %nr_split_cpus.0.i
  %shl.i = shl i32 %4, 2
  %15 = tail call i32 @llvm.smax.i32(i32 %div8.i, i32 %shl.i) #27
  %pageset_high = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 7
  %16 = ptrtoint ptr %pageset_high to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pageset_high, align 16
  %cmp2 = icmp eq i32 %17, %15
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %zone_highsize.exit
  %pageset_batch = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 8
  %18 = ptrtoint ptr %pageset_batch to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %pageset_batch, align 4
  %cmp3 = icmp eq i32 %19, %4
  br i1 %cmp3, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true, %zone_highsize.exit
  %20 = ptrtoint ptr %pageset_high to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %15, ptr %pageset_high, align 16
  %pageset_batch5 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 8
  %21 = ptrtoint ptr %pageset_batch5 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %4, ptr %pageset_batch5, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %22 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #30
  %cmp5.i = icmp ult i32 %call4.i, %22
  br i1 %cmp5.i, label %do.body.lr.ph.i, label %cleanup

do.body.lr.ph.i:                                  ; preds = %if.end
  %per_cpu_pageset.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 5
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %do.body.lr.ph.i
  %call6.i = phi i32 [ %call4.i, %do.body.lr.ph.i ], [ %call.i, %do.body.i ]
  %23 = ptrtoint ptr %per_cpu_pageset.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %per_cpu_pageset.i, align 8
  %25 = ptrtoint ptr %24 to i32
  %arrayidx.i23 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call6.i
  %26 = ptrtoint ptr %arrayidx.i23 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx.i23, align 4
  %add.i24 = add i32 %27, %25
  %28 = inttoptr i32 %add.i24 to ptr
  %batch3.i.i = getelementptr inbounds %struct.per_cpu_pages, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %batch3.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile i32 %4, ptr %batch3.i.i, align 4
  %high10.i.i = getelementptr inbounds %struct.per_cpu_pages, ptr %28, i32 0, i32 1
  %30 = ptrtoint ptr %high10.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile i32 %15, ptr %high10.i.i, align 4
  %call.i = tail call i32 @cpumask_next(i32 noundef %call6.i, ptr noundef nonnull @__cpu_possible_mask) #30
  %cmp.i25 = icmp ult i32 %call.i, %22
  br i1 %cmp.i25, label %do.body.i, label %cleanup

cleanup:                                          ; preds = %do.body.i, %if.end, %land.lhs.true
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @setup_per_cpu_pageset() local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @first_online_pgdat() #27
  %tobool.not16 = icmp eq ptr %call, null
  br i1 %tobool.not16, label %for.end, label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %zone.017 = phi ptr [ %call2, %for.inc ], [ %call, %entry ]
  %present_pages.i = getelementptr inbounds %struct.zone, ptr %zone.017, i32 0, i32 13
  %0 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %present_pages.i, align 8
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %for.inc, label %if.else

if.else:                                          ; preds = %for.body
  tail call void @setup_zone_pageset(ptr noundef nonnull %zone.017) #31
  br label %for.inc

for.inc:                                          ; preds = %if.else, %for.body
  %call2 = tail call ptr @next_zone(ptr noundef nonnull %zone.017) #27
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %call3 = tail call ptr @first_online_pgdat() #27
  %tobool5.not19 = icmp eq ptr %call3, null
  br i1 %tobool5.not19, label %for.end10, label %for.body6

for.body6:                                        ; preds = %for.body6, %for.end
  %pgdat.020 = phi ptr [ %call9, %for.body6 ], [ %call3, %for.end ]
  %call7 = tail call noalias ptr @__alloc_percpu(i32 noundef 41, i32 noundef 1) #32
  %per_cpu_nodestats = getelementptr inbounds %struct.pglist_data, ptr %pgdat.020, i32 0, i32 30
  %2 = ptrtoint ptr %per_cpu_nodestats to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call7, ptr %per_cpu_nodestats, align 128
  %call9 = tail call ptr @next_online_pgdat(ptr noundef nonnull %pgdat.020) #27
  %tobool5.not = icmp eq ptr %call9, null
  br i1 %tobool5.not, label %for.end10, label %for.body6

for.end10:                                        ; preds = %for.body6, %for.end
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @init_currently_empty_zone(ptr noundef %zone, i32 noundef %zone_start_pfn, i32 noundef %size) local_unnamed_addr #0 section ".meminit.text" align 64 {
entry:
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %0 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %zone_pgdat, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %zone to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 1152
  %nr_zones = getelementptr inbounds %struct.pglist_data, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %nr_zones to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_zones, align 8
  %cmp.not = icmp slt i32 %sub.ptr.div, %3
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %add = add nsw i32 %sub.ptr.div, 1
  %4 = ptrtoint ptr %nr_zones to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %add, ptr %nr_zones, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %zone_start_pfn3 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %5 = ptrtoint ptr %zone_start_pfn3 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %zone_start_pfn, ptr %zone_start_pfn3, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mminit_loglevel to i32))
  %6 = load i32, ptr @mminit_loglevel, align 4
  %cmp4 = icmp sgt i32 %6, 2
  br i1 %cmp4, label %do.end, label %for.cond1.preheader.i.preheader

do.end:                                           ; preds = %if.end
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %1, i32 0, i32 8
  %7 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %node_id, align 64
  %9 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %zone_pgdat, align 4
  %sub.ptr.rhs.cast11 = ptrtoint ptr %10 to i32
  %sub.ptr.sub12 = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast11
  %sub.ptr.div13 = sdiv exact i32 %sub.ptr.sub12, 1152
  %add14 = add i32 %size, %zone_start_pfn
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.53, i32 noundef %8, i32 noundef %sub.ptr.div13, i32 noundef %zone_start_pfn, i32 noundef %add14) #29
  br label %for.cond1.preheader.i.preheader

for.cond1.preheader.i.preheader:                  ; preds = %do.end, %if.end
  br label %for.cond1.preheader.i

for.cond1.preheader.i:                            ; preds = %for.inc7.i, %for.cond1.preheader.i.preheader
  %order.017.i = phi i32 [ %inc8.i, %for.inc7.i ], [ 0, %for.cond1.preheader.i.preheader ]
  %arrayidx.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %order.017.i
  %nr_free.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 20, i32 %order.017.i, i32 1
  br label %for.body3.i

for.body3.i:                                      ; preds = %for.body3.i, %for.cond1.preheader.i
  %t.016.i = phi i32 [ 0, %for.cond1.preheader.i ], [ %inc.i, %for.body3.i ]
  %arrayidx4.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i, i32 0, i32 %t.016.i
  %11 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %arrayidx4.i, ptr %arrayidx4.i, align 4
  %prev.i.i = getelementptr [6 x %struct.list_head], ptr %arrayidx.i, i32 0, i32 %t.016.i, i32 1
  %12 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %arrayidx4.i, ptr %prev.i.i, align 4
  %13 = ptrtoint ptr %nr_free.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %nr_free.i, align 4
  %inc.i = add nuw nsw i32 %t.016.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 6
  br i1 %exitcond.not.i, label %for.inc7.i, label %for.body3.i

for.inc7.i:                                       ; preds = %for.body3.i
  %inc8.i = add nuw nsw i32 %order.017.i, 1
  %exitcond18.not.i = icmp eq i32 %inc8.i, 12
  br i1 %exitcond18.not.i, label %zone_init_free_lists.exit, label %for.cond1.preheader.i

zone_init_free_lists.exit:                        ; preds = %for.inc7.i
  %initialized = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 17
  %14 = ptrtoint ptr %initialized to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %initialized, align 8
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @get_pfn_range_for_nid(i32 noundef %nid, ptr nocapture noundef %start_pfn, ptr nocapture noundef %end_pfn) local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %this_start_pfn = alloca i32, align 4
  %this_end_pfn = alloca i32, align 4
  %i = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %this_start_pfn) #27
  %0 = ptrtoint ptr %this_start_pfn to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %this_start_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %this_end_pfn) #27
  %1 = ptrtoint ptr %this_end_pfn to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %this_end_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #27
  %2 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %start_pfn, align 4
  %3 = ptrtoint ptr %end_pfn to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %end_pfn, align 4
  %4 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %i, align 4
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef %nid, ptr noundef nonnull %this_start_pfn, ptr noundef nonnull %this_end_pfn, ptr noundef null) #27
  %5 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %i, align 4
  %cmp23 = icmp sgt i32 %6, -1
  br i1 %cmp23, label %for.body, label %for.end

for.body:                                         ; preds = %for.body, %entry
  %7 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %start_pfn, align 4
  %9 = ptrtoint ptr %this_start_pfn to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %this_start_pfn, align 4
  %11 = call i32 @llvm.umin.i32(i32 %8, i32 %10)
  %12 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %start_pfn, align 4
  %13 = ptrtoint ptr %end_pfn to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %end_pfn, align 4
  %15 = ptrtoint ptr %this_end_pfn to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %this_end_pfn, align 4
  %17 = call i32 @llvm.umax.i32(i32 %14, i32 %16)
  %18 = ptrtoint ptr %end_pfn to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %end_pfn, align 4
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef %nid, ptr noundef nonnull %this_start_pfn, ptr noundef nonnull %this_end_pfn, ptr noundef null) #27
  %19 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %i, align 4
  %cmp = icmp sgt i32 %20, -1
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %21 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %start_pfn, align 4
  %cmp8 = icmp eq i32 %22, -1
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %23 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %start_pfn, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %this_end_pfn) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %this_start_pfn) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__next_mem_pfn_range(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__absent_pages_in_range(i32 noundef %nid, i32 noundef %range_start_pfn, i32 noundef %range_end_pfn) local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %start_pfn = alloca i32, align 4
  %end_pfn = alloca i32, align 4
  %i = alloca i32, align 4
  %sub = sub i32 %range_end_pfn, %range_start_pfn
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %start_pfn) #27
  %0 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %start_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %end_pfn) #27
  %1 = ptrtoint ptr %end_pfn to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %end_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #27
  %2 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %i, align 4
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef %nid, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef null) #27
  %3 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %i, align 4
  %cmp37 = icmp sgt i32 %4, -1
  br i1 %cmp37, label %for.body, label %for.end

for.body:                                         ; preds = %for.body, %entry
  %nr_absent.038 = phi i32 [ %sub21, %for.body ], [ %sub, %entry ]
  %5 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %start_pfn, align 4
  %7 = call i32 @llvm.umax.i32(i32 %6, i32 %range_start_pfn)
  %8 = call i32 @llvm.umin.i32(i32 %7, i32 %range_end_pfn)
  %9 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %start_pfn, align 4
  %10 = ptrtoint ptr %end_pfn to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %end_pfn, align 4
  %12 = call i32 @llvm.umax.i32(i32 %11, i32 %range_start_pfn)
  %13 = call i32 @llvm.umin.i32(i32 %12, i32 %range_end_pfn)
  %14 = ptrtoint ptr %end_pfn to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %end_pfn, align 4
  %sub20.neg = add i32 %8, %nr_absent.038
  %sub21 = sub i32 %sub20.neg, %13
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef %nid, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef null) #27
  %15 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %i, align 4
  %cmp = icmp sgt i32 %16, -1
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %nr_absent.0.lcssa = phi i32 [ %sub, %entry ], [ %sub21, %for.body ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %end_pfn) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %start_pfn) #27
  ret i32 %nr_absent.0.lcssa
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @absent_pages_in_range(i32 noundef %start_pfn, i32 noundef %end_pfn) local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__absent_pages_in_range(i32 noundef 1, i32 noundef %start_pfn, i32 noundef %end_pfn) #31
  ret i32 %call
}

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @set_pageblock_order() local_unnamed_addr #21 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @free_area_init_memoryless_node(i32 noundef %nid) local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @free_area_init_node(i32 noundef %nid) #31
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_area_init_node(i32 noundef %nid) unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %start_pfn = alloca i32, align 4
  %end_pfn = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %start_pfn) #27
  %0 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %start_pfn, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %end_pfn) #27
  %1 = ptrtoint ptr %end_pfn to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %end_pfn, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 2) to i32))
  %2 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 2), align 8
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %lor.rhs, label %do.end

lor.rhs:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 16) to i32))
  %3 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 16), align 4
  %tobool1.not = icmp eq i32 %3, 0
  br i1 %tobool1.not, label %if.end, label %do.end, !prof !582

do.end:                                           ; preds = %lor.rhs, %entry
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 7652, i32 noundef 9, ptr noundef null) #27
  br label %if.end

if.end:                                           ; preds = %do.end, %lor.rhs
  call void @get_pfn_range_for_nid(i32 noundef %nid, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn) #31
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8) to i32))
  store i32 %nid, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8), align 64
  %4 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %start_pfn, align 4
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 5) to i32))
  store i32 %5, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 5), align 4
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 30) to i32))
  store ptr null, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 30), align 128
  %6 = ptrtoint ptr %end_pfn to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %end_pfn, align 4
  %tobool25.not = icmp eq i32 %7, 0
  %conv26 = zext i32 %7 to i64
  %shl27 = shl nuw nsw i64 %conv26, 12
  %sub = add nsw i64 %shl27, -1
  %cond = select i1 %tobool25.not, i64 0, i64 %sub
  %conv = zext i32 %5 to i64
  %shl = shl nuw nsw i64 %conv, 12
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.155, i32 noundef %nid, i64 noundef %shl, i64 noundef %cond) #29
  tail call fastcc void @calculate_node_totalpages(i32 noundef %5, i32 noundef %7) #31
  tail call fastcc void @alloc_node_mem_map() #31
  tail call fastcc void @free_area_init_core() #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %end_pfn) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %start_pfn) #27
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @node_map_pfn_alignment() local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %i = alloca i32, align 4
  %nid = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %start) #27
  %0 = ptrtoint ptr %start to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %start, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %end) #27
  %1 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %end, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nid) #27
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %nid, align 4, !annotation !637
  %3 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %i, align 4
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 1, ptr noundef nonnull %start, ptr noundef nonnull %end, ptr noundef nonnull %nid) #27
  %4 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i, align 4
  %cmp14 = icmp sgt i32 %5, -1
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.inc, %entry
  %last_nid.018 = phi i32 [ %last_nid.1, %for.inc ], [ -1, %entry ]
  %last_end.017 = phi i32 [ %last_end.1, %for.inc ], [ 0, %entry ]
  %accl_mask.015 = phi i32 [ %accl_mask.1, %for.inc ], [ 0, %entry ]
  %6 = ptrtoint ptr %start to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %start, align 4
  %tobool.not = icmp eq i32 %7, 0
  %cmp1 = icmp slt i32 %last_nid.018, 0
  %or.cond = select i1 %tobool.not, i1 true, i1 %cmp1
  br i1 %or.cond, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %for.body
  %8 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nid, align 4
  %cmp3 = icmp eq i32 %last_nid.018, %9
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %for.body
  %10 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nid, align 4
  %12 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %end, align 4
  br label %for.inc

if.end:                                           ; preds = %lor.lhs.false2
  %14 = call i32 @llvm.cttz.i32(i32 %7, i1 false) #27, !range !649
  %notmask = shl nsw i32 -1, %14
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %if.end
  %mask.0 = phi i32 [ %notmask, %if.end ], [ %shl5, %land.rhs ]
  %tobool4.not = icmp eq i32 %mask.0, 0
  br i1 %tobool4.not, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %while.cond
  %shl5 = shl i32 %mask.0, 1
  %and = and i32 %shl5, %7
  %cmp6.not = icmp ugt i32 %last_end.017, %and
  br i1 %cmp6.not, label %while.end, label %while.cond

while.end:                                        ; preds = %land.rhs, %while.cond
  %or = or i32 %mask.0, %accl_mask.015
  br label %for.inc

for.inc:                                          ; preds = %while.end, %if.then
  %accl_mask.1 = phi i32 [ %accl_mask.015, %if.then ], [ %or, %while.end ]
  %last_end.1 = phi i32 [ %13, %if.then ], [ %last_end.017, %while.end ]
  %last_nid.1 = phi i32 [ %11, %if.then ], [ %last_nid.018, %while.end ]
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 1, ptr noundef nonnull %start, ptr noundef nonnull %end, ptr noundef nonnull %nid) #27
  %15 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %i, align 4
  %cmp = icmp sgt i32 %16, -1
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  %accl_mask.0.lcssa = phi i32 [ 0, %entry ], [ %accl_mask.1, %for.inc ]
  %add = sub i32 0, %accl_mask.0.lcssa
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nid) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %end) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %start) #27
  ret i32 %add
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_min_pfn_with_active_regions() local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @memblock_start_of_DRAM() #27
  %shr = lshr i32 %call, 12
  ret i32 %shr
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @memblock_start_of_DRAM() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local zeroext i1 @arch_has_descending_max_zone_pfns() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret i1 false
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @free_area_init(ptr nocapture noundef readonly %max_zone_pfn) local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %start_pfn = alloca i32, align 4
  %end_pfn = alloca i32, align 4
  %i = alloca i32, align 4
  %nid = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %start_pfn) #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %end_pfn) #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #27
  %0 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %i, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nid) #27
  %1 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %nid, align 4, !annotation !637
  %2 = call ptr @memset(ptr @arch_zone_lowest_possible_pfn, i32 0, i32 16)
  %3 = call ptr @memset(ptr @arch_zone_highest_possible_pfn, i32 0, i32 16)
  %call.i = tail call i32 @memblock_start_of_DRAM() #27
  %shr.i = lshr i32 %call.i, 12
  %call1 = tail call zeroext i1 @arch_has_descending_max_zone_pfns()
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %storemerge123 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %4 = phi i32 [ %shr.i, %entry ], [ %12, %for.inc ]
  %5 = phi i32 [ -1, %entry ], [ %11, %for.inc ]
  %sub2 = sub nuw nsw i32 3, %storemerge123
  %zone.0 = select i1 %call1, i32 %sub2, i32 %storemerge123
  %cmp3 = icmp eq i32 %zone.0, 3
  br i1 %cmp3, label %for.inc, label %if.end5

if.end5:                                          ; preds = %for.body
  %arrayidx = getelementptr i32, ptr %max_zone_pfn, i32 %zone.0
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %8 = tail call i32 @llvm.umax.i32(i32 %7, i32 %4)
  %arrayidx7 = getelementptr [4 x i32], ptr @arch_zone_lowest_possible_pfn, i32 0, i32 %zone.0
  %9 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %4, ptr %arrayidx7, align 4
  %arrayidx8 = getelementptr [4 x i32], ptr @arch_zone_highest_possible_pfn, i32 0, i32 %zone.0
  %10 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %8, ptr %arrayidx8, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end5, %for.body
  %11 = phi i32 [ %5, %for.body ], [ %8, %if.end5 ]
  %12 = phi i32 [ %4, %for.body ], [ %8, %if.end5 ]
  %inc = add nuw nsw i32 %storemerge123, 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %13 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %start_pfn, align 4
  %14 = ptrtoint ptr %end_pfn to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %11, ptr %end_pfn, align 4
  store i32 0, ptr @zone_movable_pfn, align 4
  tail call fastcc void @find_zone_movable_pfns_for_nodes() #31
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.55) #29
  br label %do.end19

do.end19:                                         ; preds = %for.inc44, %for.end
  %storemerge119124134 = phi i32 [ 0, %for.end ], [ %inc45, %for.inc44 ]
  %arrayidx21 = getelementptr [4 x ptr], ptr @zone_names, i32 0, i32 %storemerge119124134
  %15 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx21, align 4
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.58, ptr noundef %16) #29
  %arrayidx23 = getelementptr [4 x i32], ptr @arch_zone_lowest_possible_pfn, i32 0, i32 %storemerge119124134
  %17 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx23, align 4
  %arrayidx24 = getelementptr [4 x i32], ptr @arch_zone_highest_possible_pfn, i32 0, i32 %storemerge119124134
  %19 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx24, align 4
  %cmp25 = icmp eq i32 %18, %20
  br i1 %cmp25, label %do.end29, label %do.end35

do.end29:                                         ; preds = %do.end19
  %call31 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.61) #29
  br label %for.inc44

do.end35:                                         ; preds = %do.end19
  %conv = zext i32 %18 to i64
  %shl = shl nuw nsw i64 %conv, 12
  %conv39 = zext i32 %20 to i64
  %shl40 = shl nuw nsw i64 %conv39, 12
  %sub41 = add nsw i64 %shl40, -1
  %call42 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.64, i64 noundef %shl, i64 noundef %sub41) #29
  br label %for.inc44

for.inc44:                                        ; preds = %do.end35, %do.end29
  %inc45 = add nuw nsw i32 %storemerge119124134, 1
  %cmp14 = icmp eq i32 %inc45, 3
  br i1 %cmp14, label %do.end49, label %do.end19

do.end49:                                         ; preds = %for.inc44
  %call51 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.67) #29
  %21 = load i32, ptr @zone_movable_pfn, align 4
  %tobool57.not = icmp eq i32 %21, 0
  br i1 %tobool57.not, label %for.inc68, label %do.end61

do.end61:                                         ; preds = %do.end49
  %conv64 = zext i32 %21 to i64
  %shl65 = shl nuw nsw i64 %conv64, 12
  %call66 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70, i32 noundef 0, i64 noundef %shl65) #29
  br label %for.inc68

for.inc68:                                        ; preds = %do.end61, %do.end49
  %call75 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.73) #29
  %22 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 -1, ptr %i, align 4
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 1, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef nonnull %nid) #27
  %23 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %i, align 4
  %cmp77127 = icmp sgt i32 %24, -1
  br i1 %cmp77127, label %do.end82, label %for.end94

do.end82:                                         ; preds = %do.end82, %for.inc68
  %25 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %nid, align 4
  %27 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %start_pfn, align 4
  %conv84 = zext i32 %28 to i64
  %shl85 = shl nuw nsw i64 %conv84, 12
  %29 = ptrtoint ptr %end_pfn to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %end_pfn, align 4
  %conv86 = zext i32 %30 to i64
  %shl87 = shl nuw nsw i64 %conv86, 12
  %sub88 = add nsw i64 %shl87, -1
  %call89 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.76, i32 noundef %26, i64 noundef %shl85, i64 noundef %sub88) #29
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 1, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef nonnull %nid) #27
  %31 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %i, align 4
  %cmp77 = icmp sgt i32 %32, -1
  br i1 %cmp77, label %do.end82, label %for.end94

for.end94:                                        ; preds = %do.end82, %for.inc68
  call void @mminit_verify_pageflags_layout() #27
  %33 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %nid, align 4
  call fastcc void @free_area_init_node(i32 noundef 0) #31
  %34 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 1, ptr %nid, align 4
  call fastcc void @memmap_init() #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nid) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %end_pfn) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %start_pfn) #27
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @find_zone_movable_pfns_for_nodes() unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %i = alloca i32, align 4
  %start_pfn = alloca i32, align 4
  %end_pfn = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #27
  %saved_node_state.sroa.0.0.copyload = load i32, ptr getelementptr inbounds ([7 x %struct.nodemask_t], ptr @node_states, i32 0, i32 4), align 4
  %call = tail call fastcc i32 @early_calculate_totalpages() #31
  %0 = load i32, ptr getelementptr inbounds ([7 x %struct.nodemask_t], ptr @node_states, i32 0, i32 4), align 4
  %and3.i.i = and i32 %0, 1
  %call.i.i.i.i = tail call i32 @__sw_hweight32(i32 noundef %and3.i.i) #27
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %entry
  %zone_index.025.i = phi i32 [ 3, %entry ], [ %dec.i, %for.inc.i ]
  %cmp1.i = icmp eq i32 %zone_index.025.i, 3
  br i1 %cmp1.i, label %for.inc.i, label %if.end.i

if.end.i:                                         ; preds = %for.body.i
  %arrayidx.i = getelementptr [4 x i32], ptr @arch_zone_highest_possible_pfn, i32 0, i32 %zone_index.025.i
  %1 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx.i, align 4
  %arrayidx2.i = getelementptr [4 x i32], ptr @arch_zone_lowest_possible_pfn, i32 0, i32 %zone_index.025.i
  %3 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx2.i, align 4
  %cmp3.i = icmp ugt i32 %2, %4
  br i1 %cmp3.i, label %find_usable_zone_for_movable.exit, label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i, %for.body.i
  %dec.i = add nsw i32 %zone_index.025.i, -1
  %cmp.not.i = icmp eq i32 %zone_index.025.i, 0
  br i1 %cmp.not.i, label %do.body9.i, label %for.body.i

do.body9.i:                                       ; preds = %for.inc.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 7143, 0\0A.popsection", ""() #27, !srcloc !654
  unreachable

find_usable_zone_for_movable.exit:                ; preds = %if.end.i
  store i32 %zone_index.025.i, ptr @movable_zone, align 4
  %.b265 = load i1, ptr @mirrored_kernelcore, align 1
  br i1 %.b265, label %if.then15, label %if.end50

if.then15:                                        ; preds = %find_usable_zone_for_movable.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2, i32 3) to i32))
  %5 = load ptr, ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2, i32 3), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2) to i32))
  %6 = load i32, ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2), align 4
  %add.ptr17 = getelementptr %struct.memblock_region, ptr %5, i32 %6
  %cmp18282 = icmp ult ptr %5, %add.ptr17
  br i1 %cmp18282, label %for.body19, label %out2

for.body19:                                       ; preds = %for.body19, %if.then15
  %r.1284 = phi ptr [ %incdec.ptr43, %for.body19 ], [ %5, %if.then15 ]
  %mem_below_4gb_not_mirrored.0.off0283 = phi i1 [ %spec.select, %for.body19 ], [ false, %if.then15 ]
  %flags.i = getelementptr inbounds %struct.memblock_region, ptr %r.1284, i32 0, i32 2
  %7 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %8, 2
  %tobool.i.not = icmp eq i32 %and.i, 0
  %spec.select = select i1 %tobool.i.not, i1 true, i1 %mem_below_4gb_not_mirrored.0.off0283
  %incdec.ptr43 = getelementptr %struct.memblock_region, ptr %r.1284, i32 1
  %cmp18 = icmp ult ptr %incdec.ptr43, %add.ptr17
  br i1 %cmp18, label %for.body19, label %for.end44

for.end44:                                        ; preds = %for.body19
  br i1 %spec.select, label %do.end, label %out2

do.end:                                           ; preds = %for.end44
  %call48 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.177) #29
  br label %out2

if.end50:                                         ; preds = %find_usable_zone_for_movable.exit
  %9 = load i32, ptr @required_kernelcore_percent, align 4
  %tobool51.not = icmp eq i32 %9, 0
  br i1 %tobool51.not, label %if.end54, label %if.then52

if.then52:                                        ; preds = %if.end50
  %mul = mul i32 %call, 100
  %mul53 = mul i32 %mul, %9
  %div = udiv i32 %mul53, 10000
  store i32 %div, ptr @required_kernelcore, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %if.end50
  %10 = load i32, ptr @required_movablecore_percent, align 4
  %tobool55.not = icmp eq i32 %10, 0
  br i1 %tobool55.not, label %if.end60thread-pre-split, label %if.then56

if.then56:                                        ; preds = %if.end54
  %mul57 = mul i32 %call, 100
  %mul58 = mul i32 %mul57, %10
  %div59 = udiv i32 %mul58, 10000
  store i32 %div59, ptr @required_movablecore, align 4
  br label %if.end60

if.end60thread-pre-split:                         ; preds = %if.end54
  %.pr = load i32, ptr @required_movablecore, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.end60thread-pre-split, %if.then56
  %11 = phi i32 [ %.pr, %if.end60thread-pre-split ], [ %div59, %if.then56 ]
  %tobool61.not = icmp eq i32 %11, 0
  br i1 %tobool61.not, label %if.end79, label %if.then62

if.then62:                                        ; preds = %if.end60
  %add = add i32 %11, 2047
  %div64267 = and i32 %add, -2048
  %12 = tail call i32 @llvm.umin.i32(i32 %call, i32 %div64267)
  store i32 %12, ptr @required_movablecore, align 4
  %sub72 = sub i32 %call, %12
  %13 = load i32, ptr @required_kernelcore, align 4
  %14 = tail call i32 @llvm.umax.i32(i32 %13, i32 %sub72)
  store i32 %14, ptr @required_kernelcore, align 4
  br label %if.end79

if.end79:                                         ; preds = %if.then62, %if.end60
  %15 = load i32, ptr @required_kernelcore, align 4
  %tobool80.not = icmp ne i32 %15, 0
  %cmp81.not = icmp ult i32 %15, %call
  %or.cond = select i1 %tobool80.not, i1 %cmp81.not, i1 false
  br i1 %or.cond, label %if.end92, label %out

if.end92:                                         ; preds = %land.lhs.true, %if.end79
  %usable_nodes.0 = phi i32 [ %dec, %land.lhs.true ], [ %call.i.i.i.i, %if.end79 ]
  %16 = load i32, ptr @required_kernelcore, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %start_pfn) #27
  %17 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -1, ptr %start_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %end_pfn) #27
  %18 = ptrtoint ptr %end_pfn to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 -1, ptr %end_pfn, align 4, !annotation !637
  %19 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -1, ptr %i, align 4
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 0, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef null) #27
  %20 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i, align 4
  %cmp94279 = icmp sgt i32 %21, -1
  br i1 %cmp94279, label %for.body95.preheader, label %for.end155

for.body95.preheader:                             ; preds = %if.end92
  %kernelcore_node.1 = udiv i32 %16, %usable_nodes.0
  br label %for.body95

for.body95:                                       ; preds = %for.inc154, %for.body95.preheader
  %kernelcore_remaining.0280 = phi i32 [ %kernelcore_remaining.2277, %for.inc154 ], [ %kernelcore_node.1, %for.body95.preheader ]
  %22 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %start_pfn, align 4
  %24 = load i32, ptr @zone_movable_pfn, align 4
  %25 = call i32 @llvm.umax.i32(i32 %23, i32 %24)
  %26 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %start_pfn, align 4
  %27 = ptrtoint ptr %end_pfn to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %end_pfn, align 4
  %cmp103.not = icmp ult i32 %25, %28
  br i1 %cmp103.not, label %if.end105, label %for.inc154

if.end105:                                        ; preds = %for.body95
  %cmp106 = icmp ult i32 %25, %4
  br i1 %cmp106, label %if.then107, label %cleanup151

if.then107:                                       ; preds = %if.end105
  %29 = call i32 @llvm.umin.i32(i32 %28, i32 %4)
  %sub114 = sub i32 %29, %25
  %30 = call i32 @llvm.usub.sat.i32(i32 %kernelcore_remaining.0280, i32 %sub114)
  %31 = load i32, ptr @required_kernelcore, align 4
  %32 = call i32 @llvm.usub.sat.i32(i32 %31, i32 %sub114)
  store i32 %32, ptr @required_kernelcore, align 4
  %cmp129.not = icmp ugt i32 %28, %4
  br i1 %cmp129.not, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %if.then107
  %33 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %4, ptr %start_pfn, align 4
  br label %cleanup151

cleanup:                                          ; preds = %if.then107
  store i32 %28, ptr @zone_movable_pfn, align 4
  br label %for.inc154

cleanup151:                                       ; preds = %cleanup.thread, %if.end105
  %kernelcore_remaining.1 = phi i32 [ %kernelcore_remaining.0280, %if.end105 ], [ %30, %cleanup.thread ]
  %34 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %start_pfn, align 4
  %sub134 = sub i32 %28, %35
  %36 = call i32 @llvm.umin.i32(i32 %sub134, i32 %kernelcore_remaining.1)
  %add138 = add i32 %36, %35
  store i32 %add138, ptr @zone_movable_pfn, align 4
  %37 = load i32, ptr @required_kernelcore, align 4
  %38 = call i32 @llvm.usub.sat.i32(i32 %37, i32 %36)
  store i32 %38, ptr @required_kernelcore, align 4
  %sub147 = sub i32 %kernelcore_remaining.1, %36
  %tobool148.not = icmp eq i32 %sub147, 0
  br i1 %tobool148.not, label %for.end155, label %for.inc154

for.inc154:                                       ; preds = %cleanup151, %cleanup, %for.body95
  %kernelcore_remaining.2277 = phi i32 [ %sub147, %cleanup151 ], [ %kernelcore_remaining.0280, %for.body95 ], [ %30, %cleanup ]
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 0, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef null) #27
  %39 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %i, align 4
  %cmp94 = icmp sgt i32 %40, -1
  br i1 %cmp94, label %for.body95, label %for.end155

for.end155:                                       ; preds = %for.inc154, %cleanup151, %if.end92
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %end_pfn) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %start_pfn) #27
  %dec = add i32 %usable_nodes.0, -1
  %tobool158.not = icmp eq i32 %dec, 0
  br i1 %tobool158.not, label %out2, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.end155
  %41 = load i32, ptr @required_kernelcore, align 4
  %cmp159 = icmp ugt i32 %41, %dec
  br i1 %cmp159, label %if.end92, label %out2

out2:                                             ; preds = %land.lhs.true, %for.end155, %do.end, %for.end44, %if.then15
  %42 = load i32, ptr @zone_movable_pfn, align 4
  %add170 = add i32 %42, 2047
  %div171266 = and i32 %add170, -2048
  store i32 %div171266, ptr @zone_movable_pfn, align 4
  br label %out

out:                                              ; preds = %out2, %if.end79
  store i32 %saved_node_state.sroa.0.0.copyload, ptr getelementptr inbounds ([7 x %struct.nodemask_t], ptr @node_states, i32 0, i32 4), align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mminit_verify_pageflags_layout() local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @memmap_init() unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %start_pfn = alloca i32, align 4
  %end_pfn = alloca i32, align 4
  %hole_pfn = alloca i32, align 4
  %i = alloca i32, align 4
  %nid = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %start_pfn) #27
  %0 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %start_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %end_pfn) #27
  %1 = ptrtoint ptr %end_pfn to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %end_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %hole_pfn) #27
  %2 = ptrtoint ptr %hole_pfn to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %hole_pfn, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nid) #27
  %3 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %nid, align 4, !annotation !637
  %4 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %i, align 4
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 1, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef nonnull %nid) #27
  %5 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %i, align 4
  %cmp14 = icmp sgt i32 %6, -1
  br i1 %cmp14, label %for.body3, label %for.end6

for.body3:                                        ; preds = %for.body3.backedge, %entry
  %zone_id.113 = phi i32 [ %zone_id.2, %for.body3.backedge ], [ 0, %entry ]
  %j.011 = phi i32 [ %j.011.be, %for.body3.backedge ], [ 0, %entry ]
  %present_pages.i = getelementptr %struct.zone, ptr @contig_page_data, i32 %j.011, i32 13
  %7 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %present_pages.i, align 8
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %for.body3
  %add.ptr = getelementptr %struct.zone, ptr @contig_page_data, i32 %j.011
  %9 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %start_pfn, align 4
  %11 = ptrtoint ptr %end_pfn to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %end_pfn, align 4
  call fastcc void @memmap_init_zone_range(ptr noundef %add.ptr, i32 noundef %10, i32 noundef %12, ptr noundef nonnull %hole_pfn) #31
  br label %cleanup

cleanup:                                          ; preds = %if.end, %for.body3
  %zone_id.2 = phi i32 [ %j.011, %if.end ], [ %zone_id.113, %for.body3 ]
  %inc = add nuw nsw i32 %j.011, 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %for.body3.backedge

for.body3.backedge:                               ; preds = %for.end, %cleanup
  %j.011.be = phi i32 [ %inc, %cleanup ], [ 0, %for.end ]
  br label %for.body3

for.end:                                          ; preds = %cleanup
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 1, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef nonnull %nid) #27
  %13 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %i, align 4
  %cmp = icmp sgt i32 %14, -1
  br i1 %cmp, label %for.body3.backedge, label %for.end6

for.end6:                                         ; preds = %for.end, %entry
  %zone_id.0.lcssa = phi i32 [ 0, %entry ], [ %zone_id.2, %for.end ]
  %15 = ptrtoint ptr %hole_pfn to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %hole_pfn, align 4
  %17 = ptrtoint ptr %end_pfn to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %end_pfn, align 4
  %19 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %nid, align 4
  call fastcc void @init_unavailable_range(i32 noundef %16, i32 noundef %18, i32 noundef %zone_id.0.lcssa, i32 noundef %20) #31
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nid) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %hole_pfn) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %end_pfn) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %start_pfn) #27
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @cmdline_parse_kernelcore(ptr noundef %p) #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @parse_option_str(ptr noundef %p, ptr noundef nonnull @.str.184) #27
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i1 true, ptr @mirrored_kernelcore, align 1
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @cmdline_parse_core(ptr noundef %p, ptr noundef nonnull @required_kernelcore, ptr noundef nonnull @required_kernelcore_percent) #31
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %call1, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @cmdline_parse_movablecore(ptr noundef %p) #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @cmdline_parse_core(ptr noundef %p, ptr noundef nonnull @required_movablecore, ptr noundef nonnull @required_movablecore_percent) #31
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @free_reserved_area(ptr noundef %start, ptr noundef %end, i32 noundef %poison, ptr noundef %s) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %start to i32
  %add = add i32 %0, 4095
  %and = and i32 %add, -4096
  %1 = inttoptr i32 %and to ptr
  %2 = ptrtoint ptr %end to i32
  %and1 = and i32 %2, -4096
  %3 = inttoptr i32 %and1 to ptr
  %cmp22 = icmp ult ptr %1, %3
  br i1 %cmp22, label %for.body.lr.ph, label %if.end10

for.body.lr.ph:                                   ; preds = %entry
  %cmp5 = icmp ult i32 %poison, 256
  %4 = trunc i32 %poison to i8
  br label %for.body

for.body:                                         ; preds = %if.end, %for.body.lr.ph
  %pages.024 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end ]
  %pos.023 = phi ptr [ %1, %for.body.lr.ph ], [ %add.ptr6, %if.end ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %5 = load ptr, ptr @mem_map, align 4
  %6 = ptrtoint ptr %pos.023 to i32
  %sub = add i32 %6, 1073741824
  %shr = lshr i32 %sub, 12
  %add.ptr = getelementptr %struct.page, ptr %5, i32 %shr
  %call = tail call ptr @page_address(ptr noundef %add.ptr) #27
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %7 = zext i8 %4 to i32
  %8 = call ptr @memset(ptr %call, i32 %7, i32 4096)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  tail call fastcc void @free_reserved_page(ptr noundef %add.ptr)
  %add.ptr6 = getelementptr i8, ptr %pos.023, i32 4096
  %inc = add nuw nsw i32 %pages.024, 1
  %cmp = icmp ult ptr %add.ptr6, %3
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %if.end
  %tobool7.not = icmp eq ptr %s, null
  br i1 %tobool7.not, label %if.end10, label %do.end

do.end:                                           ; preds = %for.end
  %shl = shl i32 %inc, 2
  %call9 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78, ptr noundef nonnull %s, i32 noundef %shl) #29
  br label %if.end10

if.end10:                                         ; preds = %do.end, %for.end, %entry
  %pages.0.lcssa29 = phi i32 [ %inc, %do.end ], [ %inc, %for.end ], [ 0, %entry ]
  ret i32 %pages.0.lcssa29
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_reserved_page(ptr noundef %page) unnamed_addr #5 align 64 {
entry:
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %2 = and i32 %1, 65536
  %tobool.not.i.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %if.then.i

PageCompound.exit.i:                              ; preds = %entry
  %3 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i.i = and i32 %5, 1
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %PageCompound.exit.i, %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.95) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 440, 0\0A.popsection", ""() #27, !srcloc !655
  unreachable

do.body7.i:                                       ; preds = %PageCompound.exit.i
  %6 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i = icmp eq i32 %7, -1
  br i1 %cmp.i.not.i, label %if.then16.i, label %ClearPageReserved.exit, !prof !584

if.then16.i:                                      ; preds = %do.body7.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 440, 0\0A.popsection", ""() #27, !srcloc !656
  unreachable

ClearPageReserved.exit:                           ; preds = %do.body7.i
  tail call void @_clear_bit(i32 noundef 12, ptr noundef %page) #27
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %8 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 1, ptr %_refcount.i.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_set, i32 0, i32 1), ptr blockaddress(@free_reserved_page, %if.then.i.i)) #27
          to label %init_page_count.exit [label %if.then.i.i], !srcloc !583

if.then.i.i:                                      ; preds = %ClearPageReserved.exit
  tail call void @__page_ref_set(ptr noundef %page, i32 noundef 1) #27
  br label %init_page_count.exit

init_page_count.exit:                             ; preds = %if.then.i.i, %ClearPageReserved.exit
  tail call void @__free_pages(ptr noundef %page, i32 noundef 0)
  tail call void @adjust_managed_page_count(ptr noundef %page, i32 noundef 1)
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @mem_init_print_info() local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 6) to i32))
  %0 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 6), align 8
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_zone_stat, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_zone_stat to i32))
  %1 = load volatile i32, ptr @vm_zone_stat, align 4
  %2 = tail call i32 @llvm.smax.i32(i32 %1, i32 0) #27
  %shl = shl i32 %2, 2
  %shl42 = shl i32 %0, 2
  %call.i.i.i92 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @_totalram_pages, i32 noundef 4) #27
  %3 = load volatile i32, ptr @_totalram_pages, align 4
  %4 = load i32, ptr @totalcma_pages, align 4
  %5 = add i32 %3, %4
  %sub49 = sub i32 %0, %5
  %shl50 = shl i32 %sub49, 2
  %shl51 = shl i32 %4, 2
  %call.i.i.i93 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @_totalhigh_pages, i32 noundef 4) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @_totalhigh_pages to i32))
  %6 = load volatile i32, ptr @_totalhigh_pages, align 4
  %shl53 = shl i32 %6, 2
  %call54 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.80, i32 noundef %shl, i32 noundef %shl42, i32 noundef lshr (i32 select (i1 or (i1 icmp ugt (ptr @_stext, ptr @__start_rodata), i1 icmp uge (ptr @__start_rodata, ptr @_etext)), i32 select (i1 or (i1 or (i1 icmp ugt (ptr @_stext, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @_etext)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 select (i1 select (i1 or (i1 or (i1 icmp ugt (ptr @_stext, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @_etext)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i1 icmp ugt (i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 ptrtoint (ptr @__end_rodata to i32), i32 ptrtoint (ptr @__start_rodata to i32))), i1 icmp ugt (i32 sub (i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32))), i32 sub (i32 ptrtoint (ptr @__end_rodata to i32), i32 ptrtoint (ptr @__start_rodata to i32)))), i32 sub (i32 select (i1 or (i1 or (i1 icmp ugt (ptr @_stext, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @_etext)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 sub (i32 ptrtoint (ptr @__end_rodata to i32), i32 ptrtoint (ptr @__start_rodata to i32))), i32 select (i1 or (i1 or (i1 icmp ugt (ptr @_stext, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @_etext)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @_etext to i32), i32 ptrtoint (ptr @_stext to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))))), i32 10), i32 noundef lshr (i32 select (i1 select (i1 xor (i1 or (i1 icmp ugt (ptr @_sdata, ptr @__start_rodata), i1 icmp uge (ptr @__start_rodata, ptr @_edata)), i1 true), i1 icmp ugt (i32 select (i1 or (i1 or (i1 icmp ugt (ptr @_sdata, ptr @__init_begin), i1 icmp uge (ptr @__init_begin, ptr @_edata)), i1 xor (i1 select (i1 or (i1 or (i1 icmp ugt (ptr @__init_begin, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @__init_end)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i1 icmp ult (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32))), i1 icmp ult (i32 sub (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32))), i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32)))), i1 true)), i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32)), i32 select (i1 or (i1 or (i1 icmp ugt (ptr @__init_begin, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @__init_end)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))))), i32 sub (i32 ptrtoint (ptr @__end_rodata to i32), i32 ptrtoint (ptr @__start_rodata to i32))), i1 false), i32 sub (i32 select (i1 or (i1 or (i1 icmp ugt (ptr @_sdata, ptr @__init_begin), i1 icmp uge (ptr @__init_begin, ptr @_edata)), i1 xor (i1 select (i1 or (i1 or (i1 icmp ugt (ptr @__init_begin, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @__init_end)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i1 icmp ult (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32))), i1 icmp ult (i32 sub (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32))), i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32)))), i1 true)), i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32)), i32 select (i1 or (i1 or (i1 icmp ugt (ptr @__init_begin, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @__init_end)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))))), i32 sub (i32 ptrtoint (ptr @__end_rodata to i32), i32 ptrtoint (ptr @__start_rodata to i32))), i32 select (i1 or (i1 or (i1 icmp ugt (ptr @_sdata, ptr @__init_begin), i1 icmp uge (ptr @__init_begin, ptr @_edata)), i1 xor (i1 select (i1 or (i1 or (i1 icmp ugt (ptr @__init_begin, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @__init_end)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i1 icmp ult (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32))), i1 icmp ult (i32 sub (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32))), i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32)))), i1 true)), i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @_edata to i32), i32 ptrtoint (ptr @_sdata to i32)), i32 select (i1 or (i1 or (i1 icmp ugt (ptr @__init_begin, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @__init_end)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32))))))), i32 10), i32 noundef lshr (i32 sub (i32 ptrtoint (ptr @__end_rodata to i32), i32 ptrtoint (ptr @__start_rodata to i32)), i32 10), i32 noundef lshr (i32 add (i32 select (i1 or (i1 or (i1 icmp ugt (ptr @__init_begin, ptr @_sinittext), i1 icmp uge (ptr @_sinittext, ptr @__init_end)), i1 icmp ule (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 sub (i32 ptrtoint (ptr @__init_end to i32), i32 ptrtoint (ptr @__init_begin to i32)), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32)))), i32 sub (i32 ptrtoint (ptr @_einittext to i32), i32 ptrtoint (ptr @_sinittext to i32))), i32 10), i32 noundef lshr (i32 sub (i32 ptrtoint (ptr @__bss_stop to i32), i32 ptrtoint (ptr @__bss_start to i32)), i32 10), i32 noundef %shl50, i32 noundef %shl51, i32 noundef %shl53) #29
  ret void
}

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @set_dma_reserve(i32 noundef %new_dma_reserve) local_unnamed_addr #22 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  store i32 %new_dma_reserve, ptr @dma_reserve, align 4
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @page_alloc_init() local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @__cpuhp_setup_state(i32 noundef 33, ptr noundef nonnull @.str.82, i1 noundef zeroext false, ptr noundef nonnull @page_alloc_cpu_online, ptr noundef nonnull @page_alloc_cpu_dead, i1 noundef zeroext false) #27
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %do.end, label %if.end, !prof !584

do.end:                                           ; preds = %entry
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 8347, i32 noundef 9, ptr noundef null) #27
  br label %if.end

if.end:                                           ; preds = %do.end, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @page_alloc_cpu_online(i32 noundef %cpu) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @first_online_pgdat() #27
  %tobool.not6 = icmp eq ptr %call, null
  br i1 %tobool.not6, label %for.end, label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %zone.07 = phi ptr [ %call2, %for.inc ], [ %call, %entry ]
  %present_pages.i = getelementptr inbounds %struct.zone, ptr %zone.07, i32 0, i32 13
  %0 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %present_pages.i, align 8
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %for.inc, label %if.else

if.else:                                          ; preds = %for.body
  tail call void @mutex_lock_nested(ptr noundef nonnull @pcp_batch_high_lock, i32 noundef 0) #27
  tail call fastcc void @zone_set_pageset_high_and_batch(ptr noundef nonnull %zone.07, i32 noundef 1) #27
  tail call void @mutex_unlock(ptr noundef nonnull @pcp_batch_high_lock) #27
  br label %for.inc

for.inc:                                          ; preds = %if.else, %for.body
  %call2 = tail call ptr @next_zone(ptr noundef nonnull %zone.07) #27
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @page_alloc_cpu_dead(i32 noundef %cpu) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @lru_add_drain_cpu(i32 noundef %cpu) #27
  %call.i = tail call ptr @first_online_pgdat() #27
  %tobool.not6.i = icmp eq ptr %call.i, null
  br i1 %tobool.not6.i, label %drain_pages.exit, label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %entry
  %zone.07.i = phi ptr [ %call2.i, %for.inc.i ], [ %call.i, %entry ]
  %present_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone.07.i, i32 0, i32 13
  %0 = ptrtoint ptr %present_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %present_pages.i.i, align 8
  %tobool.i.not.i = icmp eq i32 %1, 0
  br i1 %tobool.i.not.i, label %for.inc.i, label %if.else.i

if.else.i:                                        ; preds = %for.body.i
  tail call fastcc void @drain_pages_zone(i32 noundef %cpu, ptr noundef nonnull %zone.07.i) #27
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else.i, %for.body.i
  %call2.i = tail call ptr @next_zone(ptr noundef nonnull %zone.07.i) #27
  %tobool.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool.not.i, label %drain_pages.exit, label %for.body.i

drain_pages.exit:                                 ; preds = %for.inc.i, %entry
  tail call void @vm_events_fold_cpu(i32 noundef %cpu) #27
  tail call void @cpu_vm_stats_fold(i32 noundef %cpu) #27
  %call = tail call ptr @first_online_pgdat() #27
  %tobool.not9 = icmp eq ptr %call, null
  br i1 %tobool.not9, label %for.end, label %for.body

for.body:                                         ; preds = %for.inc, %drain_pages.exit
  %zone.010 = phi ptr [ %call2, %for.inc ], [ %call, %drain_pages.exit ]
  %present_pages.i = getelementptr inbounds %struct.zone, ptr %zone.010, i32 0, i32 13
  %2 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %present_pages.i, align 8
  %tobool.i.not = icmp eq i32 %3, 0
  br i1 %tobool.i.not, label %for.inc, label %if.else

if.else:                                          ; preds = %for.body
  tail call void @mutex_lock_nested(ptr noundef nonnull @pcp_batch_high_lock, i32 noundef 0) #27
  tail call fastcc void @zone_set_pageset_high_and_batch(ptr noundef nonnull %zone.010, i32 noundef 0) #27
  tail call void @mutex_unlock(ptr noundef nonnull @pcp_batch_high_lock) #27
  br label %for.inc

for.inc:                                          ; preds = %if.else, %for.body
  %call2 = tail call ptr @next_zone(ptr noundef nonnull %zone.010) #27
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %drain_pages.exit
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @setup_per_zone_wmarks() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef nonnull @setup_per_zone_wmarks.lock) #27
  %0 = load i32, ptr @min_free_kbytes, align 4
  %shr.i = ashr i32 %0, 2
  %call.i = tail call ptr @first_online_pgdat() #27
  %tobool.not437.i = icmp eq ptr %call.i, null
  br i1 %tobool.not437.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %entry
  %lowmem_pages.0440.i = phi i32 [ %lowmem_pages.1.i, %for.inc.i ], [ 0, %entry ]
  %zone.0438.i = phi ptr [ %call4.i, %for.inc.i ], [ %call.i, %entry ]
  %zone_pgdat.i.i = getelementptr inbounds %struct.zone, ptr %zone.0438.i, i32 0, i32 4
  %1 = ptrtoint ptr %zone_pgdat.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %zone_pgdat.i.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %zone.0438.i to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %2 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 1152
  switch i32 %sub.ptr.div.i.i, label %if.then.i [
    i32 2, label %for.inc.i
    i32 3, label %is_highmem.exit.i
  ]

is_highmem.exit.i:                                ; preds = %for.body.i
  %3 = load i32, ptr @movable_zone, align 4
  %cmp2.i.i.not.i = icmp eq i32 %3, 2
  br i1 %cmp2.i.i.not.i, label %for.inc.i, label %if.then.i

if.then.i:                                        ; preds = %is_highmem.exit.i, %for.body.i
  %managed_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone.0438.i, i32 0, i32 11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #27
  %4 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %managed_pages.i.i, align 4
  %add.i = add i32 %5, %lowmem_pages.0440.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %is_highmem.exit.i, %for.body.i
  %lowmem_pages.1.i = phi i32 [ %lowmem_pages.0440.i, %is_highmem.exit.i ], [ %add.i, %if.then.i ], [ %lowmem_pages.0440.i, %for.body.i ]
  %call4.i = tail call ptr @next_zone(ptr noundef nonnull %zone.0438.i) #27
  %tobool.not.i = icmp eq ptr %call4.i, null
  br i1 %tobool.not.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.inc.i, %entry
  %lowmem_pages.0.lcssa.i = phi i32 [ 0, %entry ], [ %lowmem_pages.1.i, %for.inc.i ]
  %call5.i = tail call ptr @first_online_pgdat() #27
  %tobool9.not442.i = icmp eq ptr %call5.i, null
  br i1 %tobool9.not442.i, label %__setup_per_zone_wmarks.exit, label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %for.end.i
  %conv17.i = zext i32 %shr.i to i64
  br label %for.body10.i

for.body10.i:                                     ; preds = %if.end233.i, %for.body10.lr.ph.i
  %zone.1443.i = phi ptr [ %call5.i, %for.body10.lr.ph.i ], [ %call274.i, %if.end233.i ]
  %lock.i = getelementptr inbounds %struct.zone, ptr %zone.1443.i, i32 0, i32 22
  %call14.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #27
  %managed_pages.i386.i = getelementptr inbounds %struct.zone, ptr %zone.1443.i, i32 0, i32 11
  %call.i.i.i387.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i386.i, i32 noundef 4) #27
  %6 = ptrtoint ptr %managed_pages.i386.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %managed_pages.i386.i, align 4
  %conv19.i = zext i32 %7 to i64
  %mul.i = mul nuw i64 %conv19.i, %conv17.i
  %cmp194.i = icmp ult i64 %mul.i, 4294967296
  br i1 %cmp194.i, label %if.then198.i, label %if.else204.i, !prof !582

if.then198.i:                                     ; preds = %for.body10.i
  %conv199.i = trunc i64 %mul.i to i32
  %div202.i = udiv i32 %conv199.i, %lowmem_pages.0.lcssa.i
  %conv203.i = zext i32 %div202.i to i64
  br label %if.end208.i

if.else204.i:                                     ; preds = %for.body10.i
  %8 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %lowmem_pages.0.lcssa.i, i64 %mul.i) #33, !srcloc !657
  %asmresult1.i.i = extractvalue { i64, i64 } %8, 1
  br label %if.end208.i

if.end208.i:                                      ; preds = %if.else204.i, %if.then198.i
  %tmp.0.i = phi i64 [ %conv203.i, %if.then198.i ], [ %asmresult1.i.i, %if.else204.i ]
  %zone_pgdat.i391.i = getelementptr inbounds %struct.zone, ptr %zone.1443.i, i32 0, i32 4
  %9 = ptrtoint ptr %zone_pgdat.i391.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %zone_pgdat.i391.i, align 4
  %sub.ptr.lhs.cast.i392.i = ptrtoint ptr %zone.1443.i to i32
  %sub.ptr.rhs.cast.i393.i = ptrtoint ptr %10 to i32
  %sub.ptr.sub.i394.i = sub i32 %sub.ptr.lhs.cast.i392.i, %sub.ptr.rhs.cast.i393.i
  %sub.ptr.div.i395.i = sdiv exact i32 %sub.ptr.sub.i394.i, 1152
  switch i32 %sub.ptr.div.i395.i, label %if.else229.i [
    i32 2, label %if.then212.i
    i32 3, label %is_highmem.exit400.i
  ]

is_highmem.exit400.i:                             ; preds = %if.end208.i
  %11 = load i32, ptr @movable_zone, align 4
  %cmp2.i.i396.not.i = icmp eq i32 %11, 2
  br i1 %cmp2.i.i396.not.i, label %if.then212.i, label %if.else229.i

if.then212.i:                                     ; preds = %is_highmem.exit400.i, %if.end208.i
  %call.i.i.i402.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i386.i, i32 noundef 4) #27
  %12 = ptrtoint ptr %managed_pages.i386.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %managed_pages.i386.i, align 4
  %cmp216.i = icmp ugt i32 %13, 33791
  %div214384.i = lshr i32 %13, 10
  %14 = tail call i32 @llvm.umin.i32(i32 %div214384.i, i32 128) #27
  %15 = select i1 %cmp216.i, i32 %14, i32 32
  br label %if.end233.i

if.else229.i:                                     ; preds = %is_highmem.exit400.i, %if.end208.i
  %conv230.i = trunc i64 %tmp.0.i to i32
  br label %if.end233.i

if.end233.i:                                      ; preds = %if.else229.i, %if.then212.i
  %storemerge.i = phi i32 [ %conv230.i, %if.else229.i ], [ %15, %if.then212.i ]
  %16 = ptrtoint ptr %zone.1443.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %storemerge.i, ptr %zone.1443.i, align 128
  %shr234.i = lshr i64 %tmp.0.i, 2
  %call.i.i.i404.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i386.i, i32 noundef 4) #27
  %17 = ptrtoint ptr %managed_pages.i386.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %managed_pages.i386.i, align 4
  %div236.i = udiv i32 %18, 10000
  %call.i.i.i406.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i386.i, i32 noundef 4) #27
  %19 = ptrtoint ptr %managed_pages.i386.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %managed_pages.i386.i, align 4
  %rem239.i = urem i32 %20, 10000
  %21 = load i32, ptr @watermark_scale_factor, align 4
  %mul241.i = mul i32 %21, %div236.i
  %mul242.i = mul i32 %rem239.i, %21
  %div243.i = udiv i32 %mul242.i, 10000
  %add244.i = add i32 %div243.i, %mul241.i
  %conv245.i = zext i32 %add244.i to i64
  %22 = tail call i64 @llvm.umax.i64(i64 %shr234.i, i64 %conv245.i) #27
  %watermark_boost.i = getelementptr inbounds %struct.zone, ptr %zone.1443.i, i32 0, i32 1
  %23 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %watermark_boost.i, align 4
  %24 = ptrtoint ptr %zone.1443.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %zone.1443.i, align 128
  %26 = trunc i64 %22 to i32
  %conv259.i = add i32 %25, %26
  %arrayidx261.i = getelementptr [3 x i32], ptr %zone.1443.i, i32 0, i32 1
  %27 = ptrtoint ptr %arrayidx261.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %conv259.i, ptr %arrayidx261.i, align 4
  %28 = shl i32 %26, 1
  %conv269.i = add i32 %28, %25
  %arrayidx271.i = getelementptr [3 x i32], ptr %zone.1443.i, i32 0, i32 2
  %29 = ptrtoint ptr %arrayidx271.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv269.i, ptr %arrayidx271.i, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call14.i) #27
  %call274.i = tail call ptr @next_zone(ptr noundef nonnull %zone.1443.i) #27
  %tobool9.not.i = icmp eq ptr %call274.i, null
  br i1 %tobool9.not.i, label %__setup_per_zone_wmarks.exit, label %for.body10.i

__setup_per_zone_wmarks.exit:                     ; preds = %if.end233.i, %for.end.i
  tail call fastcc void @calculate_totalreserve_pages() #27
  tail call void @_raw_spin_unlock(ptr noundef nonnull @setup_per_zone_wmarks.lock) #27
  %call = tail call ptr @first_online_pgdat() #27
  %tobool.not4 = icmp eq ptr %call, null
  br i1 %tobool.not4, label %for.end, label %for.body

for.body:                                         ; preds = %for.body, %__setup_per_zone_wmarks.exit
  %zone.05 = phi ptr [ %call1, %for.body ], [ %call, %__setup_per_zone_wmarks.exit ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @pcp_batch_high_lock, i32 noundef 0) #27
  tail call fastcc void @zone_set_pageset_high_and_batch(ptr noundef nonnull %zone.05, i32 noundef 0) #27
  tail call void @mutex_unlock(ptr noundef nonnull @pcp_batch_high_lock) #27
  %call1 = tail call ptr @next_zone(ptr noundef nonnull %zone.05) #27
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %__setup_per_zone_wmarks.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @zone_pcp_update(ptr noundef %zone, i32 noundef %cpu_online) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @pcp_batch_high_lock, i32 noundef 0) #27
  tail call fastcc void @zone_set_pageset_high_and_batch(ptr noundef %zone, i32 noundef %cpu_online)
  tail call void @mutex_unlock(ptr noundef nonnull @pcp_batch_high_lock) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @calculate_min_free_kbytes() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1) to i32))
  %0 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1), align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %0, 1
  br i1 %cmp.not.i.i.i.i, label %if.end.i.i.i.i, label %first_zones_zonelist.exit.i.i, !prof !584

if.end.i.i.i.i:                                   ; preds = %entry
  %call3.i.i.i.i = tail call ptr @__next_zones_zonelist(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), i32 noundef 1, ptr noundef null) #27
  br label %first_zones_zonelist.exit.i.i

first_zones_zonelist.exit.i.i:                    ; preds = %if.end.i.i.i.i, %entry
  %retval.0.i.i.i.i = phi ptr [ %call3.i.i.i.i, %if.end.i.i.i.i ], [ getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), %entry ]
  %1 = ptrtoint ptr %retval.0.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %zone.017.i.i = load ptr, ptr %retval.0.i.i.i.i, align 4
  %tobool.not18.i.i = icmp eq ptr %zone.017.i.i, null
  br i1 %tobool.not18.i.i, label %nr_free_buffer_pages.exit, label %for.body.i.i

for.body.i.i:                                     ; preds = %next_zones_zonelist.exit.i.i, %first_zones_zonelist.exit.i.i
  %zone.021.i.i = phi ptr [ %zone.0.i.i, %next_zones_zonelist.exit.i.i ], [ %zone.017.i.i, %first_zones_zonelist.exit.i.i ]
  %z.020.i.i = phi ptr [ %retval.0.i.i.i, %next_zones_zonelist.exit.i.i ], [ %retval.0.i.i.i.i, %first_zones_zonelist.exit.i.i ]
  %sum.019.i.i = phi i32 [ %sum.1.i.i, %next_zones_zonelist.exit.i.i ], [ 0, %first_zones_zonelist.exit.i.i ]
  %managed_pages.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.021.i.i, i32 0, i32 11
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i, i32 noundef 4) #27
  %2 = ptrtoint ptr %managed_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %managed_pages.i.i.i, align 4
  %arrayidx.i.i = getelementptr [3 x i32], ptr %zone.021.i.i, i32 0, i32 2
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i.i, align 8
  %watermark_boost.i.i = getelementptr inbounds %struct.zone, ptr %zone.021.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %watermark_boost.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %watermark_boost.i.i, align 4
  %add.i.i = add i32 %7, %5
  %8 = tail call i32 @llvm.usub.sat.i32(i32 %3, i32 %add.i.i) #27
  %sum.1.i.i = add i32 %8, %sum.019.i.i
  %incdec.ptr.i.i = getelementptr %struct.zoneref, ptr %z.020.i.i, i32 1
  %zone_idx.i.i.i.i = getelementptr %struct.zoneref, ptr %z.020.i.i, i32 1, i32 1
  %9 = ptrtoint ptr %zone_idx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %zone_idx.i.i.i.i, align 4
  %cmp.not.i.i.i = icmp ugt i32 %10, 1
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %next_zones_zonelist.exit.i.i, !prof !584

if.end.i.i.i:                                     ; preds = %for.body.i.i
  %call3.i.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr.i.i, i32 noundef 1, ptr noundef null) #27
  br label %next_zones_zonelist.exit.i.i

next_zones_zonelist.exit.i.i:                     ; preds = %if.end.i.i.i, %for.body.i.i
  %retval.0.i.i.i = phi ptr [ %call3.i.i.i, %if.end.i.i.i ], [ %incdec.ptr.i.i, %for.body.i.i ]
  %11 = ptrtoint ptr %retval.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %zone.0.i.i = load ptr, ptr %retval.0.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %zone.0.i.i, null
  br i1 %tobool.not.i.i, label %nr_free_buffer_pages.exit.loopexit, label %for.body.i.i

nr_free_buffer_pages.exit.loopexit:               ; preds = %next_zones_zonelist.exit.i.i
  %phi.bo = shl i32 %sum.1.i.i, 6
  br label %nr_free_buffer_pages.exit

nr_free_buffer_pages.exit:                        ; preds = %nr_free_buffer_pages.exit.loopexit, %first_zones_zonelist.exit.i.i
  %sum.0.lcssa.i.i = phi i32 [ 0, %first_zones_zonelist.exit.i.i ], [ %phi.bo, %nr_free_buffer_pages.exit.loopexit ]
  %call2 = tail call i32 @int_sqrt(i32 noundef %sum.0.lcssa.i.i) #27
  %12 = load i32, ptr @user_min_free_kbytes, align 4
  %cmp = icmp sgt i32 %call2, %12
  br i1 %cmp, label %if.then, label %do.end

if.then:                                          ; preds = %nr_free_buffer_pages.exit
  %13 = tail call i32 @llvm.smax.i32(i32 %call2, i32 128)
  %14 = tail call i32 @llvm.umin.i32(i32 %13, i32 262144)
  store i32 %14, ptr @min_free_kbytes, align 4
  br label %if.end

do.end:                                           ; preds = %nr_free_buffer_pages.exit
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.83, i32 noundef %call2, i32 noundef %12) #29
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @int_sqrt(i32 noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @init_per_zone_wmark_min() #0 section ".meminit.text" align 64 {
entry:
  tail call void @calculate_min_free_kbytes()
  tail call void @setup_per_zone_wmarks()
  tail call void @refresh_zone_stat_thresholds() #27
  tail call fastcc void @setup_per_zone_lowmem_reserve()
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @refresh_zone_stat_thresholds() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @setup_per_zone_lowmem_reserve() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @first_online_pgdat() #27
  %tobool.not47 = icmp eq ptr %call, null
  br i1 %tobool.not47, label %for.end23, label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.loopexit.2, %entry
  %pgdat.048 = phi ptr [ %call22, %for.cond1.loopexit.2 ], [ %call, %entry ]
  %0 = load i32, ptr @sysctl_lowmem_reserve_ratio, align 4
  %tobool4.not = icmp eq i32 %0, 0
  br i1 %tobool4.not, label %for.body9.preheader.thread, label %for.body9.preheader

for.body9.preheader.thread:                       ; preds = %for.cond1.preheader
  %managed_pages.i3976 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 1, i32 11
  %call.i.i.i4077 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i3976, i32 noundef 4) #27
  %1 = ptrtoint ptr %managed_pages.i3976 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %managed_pages.i3976, align 4
  br label %if.end

for.cond1.loopexit:                               ; preds = %if.else.267, %if.end.158
  %div.265.sink = phi i32 [ %div.265, %if.else.267 ], [ 0, %if.end.158 ]
  %3 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 0, i32 3, i32 3
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %div.265.sink, ptr %3, align 4
  %5 = load i32, ptr getelementptr inbounds ([4 x i32], ptr @sysctl_lowmem_reserve_ratio, i32 0, i32 1), align 4
  %tobool4.not.1 = icmp eq i32 %5, 0
  br i1 %tobool4.not.1, label %for.body9.preheader.1.thread, label %for.body9.preheader.1

for.body9.preheader.1.thread:                     ; preds = %for.cond1.loopexit
  %managed_pages.i39.172 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 2, i32 11
  %call.i.i.i40.173 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i39.172, i32 noundef 4) #27
  %6 = ptrtoint ptr %managed_pages.i39.172 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %managed_pages.i39.172, align 4
  br label %if.end.1

for.body9.preheader.1:                            ; preds = %for.cond1.loopexit
  %managed_pages.i.1 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 1, i32 11
  %call.i.i.i.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.1, i32 noundef 4) #27
  %8 = ptrtoint ptr %managed_pages.i.1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %managed_pages.i.1, align 4
  %tobool6.not.1 = icmp eq i32 %9, 0
  %managed_pages.i39.1 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 2, i32 11
  %call.i.i.i40.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i39.1, i32 noundef 4) #27
  %10 = ptrtoint ptr %managed_pages.i39.1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %managed_pages.i39.1, align 4
  br i1 %tobool6.not.1, label %if.end.1, label %if.else.1

if.else.1:                                        ; preds = %for.body9.preheader.1
  %div.1 = udiv i32 %11, %5
  br label %if.end.1

if.end.1:                                         ; preds = %if.else.1, %for.body9.preheader.1, %for.body9.preheader.1.thread
  %12 = phi i32 [ %11, %if.else.1 ], [ %7, %for.body9.preheader.1.thread ], [ %11, %for.body9.preheader.1 ]
  %13 = phi i1 [ false, %if.else.1 ], [ true, %for.body9.preheader.1.thread ], [ true, %for.body9.preheader.1 ]
  %div.1.sink = phi i32 [ %div.1, %if.else.1 ], [ 0, %for.body9.preheader.1.thread ], [ 0, %for.body9.preheader.1 ]
  %14 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 1, i32 3, i32 2
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %div.1.sink, ptr %14, align 4
  %managed_pages.i39.1.1 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 3, i32 11
  %call.i.i.i40.1.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i39.1.1, i32 noundef 4) #27
  %16 = ptrtoint ptr %managed_pages.i39.1.1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %managed_pages.i39.1.1, align 4
  br i1 %13, label %for.cond1.loopexit.1, label %if.else.1.1

if.else.1.1:                                      ; preds = %if.end.1
  %add13.1.1 = add i32 %17, %12
  %div.1.1 = udiv i32 %add13.1.1, %5
  br label %for.cond1.loopexit.1

for.cond1.loopexit.1:                             ; preds = %if.else.1.1, %if.end.1
  %div.1.1.sink = phi i32 [ %div.1.1, %if.else.1.1 ], [ 0, %if.end.1 ]
  %18 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 1, i32 3, i32 3
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %div.1.1.sink, ptr %18, align 4
  %20 = load i32, ptr getelementptr inbounds ([4 x i32], ptr @sysctl_lowmem_reserve_ratio, i32 0, i32 2), align 4
  %tobool4.not.2 = icmp eq i32 %20, 0
  br i1 %tobool4.not.2, label %for.body9.preheader.2.thread, label %for.body9.preheader.2

for.body9.preheader.2.thread:                     ; preds = %for.cond1.loopexit.1
  %managed_pages.i39.274 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 3, i32 11
  %call.i.i.i40.275 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i39.274, i32 noundef 4) #27
  %21 = ptrtoint ptr %managed_pages.i39.274 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %managed_pages.i39.274, align 4
  br label %for.cond1.loopexit.2

for.body9.preheader.2:                            ; preds = %for.cond1.loopexit.1
  %managed_pages.i.2 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 2, i32 11
  %call.i.i.i.2 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.2, i32 noundef 4) #27
  %23 = ptrtoint ptr %managed_pages.i.2 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %managed_pages.i.2, align 4
  %tobool6.not.2 = icmp eq i32 %24, 0
  %managed_pages.i39.2 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 3, i32 11
  %call.i.i.i40.2 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i39.2, i32 noundef 4) #27
  %25 = ptrtoint ptr %managed_pages.i39.2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %managed_pages.i39.2, align 4
  br i1 %tobool6.not.2, label %for.cond1.loopexit.2, label %if.else.2

if.else.2:                                        ; preds = %for.body9.preheader.2
  %div.2 = udiv i32 %26, %20
  br label %for.cond1.loopexit.2

for.cond1.loopexit.2:                             ; preds = %if.else.2, %for.body9.preheader.2, %for.body9.preheader.2.thread
  %div.2.sink = phi i32 [ %div.2, %if.else.2 ], [ 0, %for.body9.preheader.2.thread ], [ 0, %for.body9.preheader.2 ]
  %27 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 2, i32 3, i32 3
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %div.2.sink, ptr %27, align 4
  %call22 = tail call ptr @next_online_pgdat(ptr noundef nonnull %pgdat.048) #27
  %tobool.not = icmp eq ptr %call22, null
  br i1 %tobool.not, label %for.end23, label %for.cond1.preheader

for.body9.preheader:                              ; preds = %for.cond1.preheader
  %managed_pages.i = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 0, i32 11
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i, i32 noundef 4) #27
  %29 = ptrtoint ptr %managed_pages.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %managed_pages.i, align 4
  %tobool6.not = icmp eq i32 %30, 0
  %managed_pages.i39 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 1, i32 11
  %call.i.i.i40 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i39, i32 noundef 4) #27
  %31 = ptrtoint ptr %managed_pages.i39 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %managed_pages.i39, align 4
  br i1 %tobool6.not, label %if.end, label %if.else

if.else:                                          ; preds = %for.body9.preheader
  %div = udiv i32 %32, %0
  br label %if.end

if.end:                                           ; preds = %if.else, %for.body9.preheader, %for.body9.preheader.thread
  %33 = phi i32 [ %32, %if.else ], [ %2, %for.body9.preheader.thread ], [ %32, %for.body9.preheader ]
  %34 = phi i1 [ false, %if.else ], [ true, %for.body9.preheader.thread ], [ true, %for.body9.preheader ]
  %div.sink = phi i32 [ %div, %if.else ], [ 0, %for.body9.preheader.thread ], [ 0, %for.body9.preheader ]
  %35 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 0, i32 3, i32 1
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %div.sink, ptr %35, align 4
  %managed_pages.i39.150 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 2, i32 11
  %call.i.i.i40.151 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i39.150, i32 noundef 4) #27
  %37 = ptrtoint ptr %managed_pages.i39.150 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %managed_pages.i39.150, align 4
  %add13.1 = add i32 %38, %33
  br i1 %34, label %if.end.158, label %if.else.155

if.else.155:                                      ; preds = %if.end
  %div.153 = udiv i32 %add13.1, %0
  br label %if.end.158

if.end.158:                                       ; preds = %if.else.155, %if.end
  %div.153.sink = phi i32 [ %div.153, %if.else.155 ], [ 0, %if.end ]
  %39 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 0, i32 3, i32 2
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %div.153.sink, ptr %39, align 4
  %managed_pages.i39.261 = getelementptr [4 x %struct.zone], ptr %pgdat.048, i32 0, i32 3, i32 11
  %call.i.i.i40.262 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i39.261, i32 noundef 4) #27
  %41 = ptrtoint ptr %managed_pages.i39.261 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %managed_pages.i39.261, align 4
  br i1 %34, label %for.cond1.loopexit, label %if.else.267

if.else.267:                                      ; preds = %if.end.158
  %add13.263 = add i32 %42, %add13.1
  %div.265 = udiv i32 %add13.263, %0
  br label %for.cond1.loopexit

for.end23:                                        ; preds = %for.cond1.loopexit.2, %entry
  tail call fastcc void @calculate_totalreserve_pages()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @min_free_kbytes_sysctl_handler(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @proc_dointvec_minmax(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) #27
  %tobool.not = icmp ne i32 %call, 0
  %tobool1.not = icmp eq i32 %write, 0
  %or.cond = or i1 %tobool1.not, %tobool.not
  br i1 %or.cond, label %cleanup, label %if.then2

if.then2:                                         ; preds = %entry
  %0 = load i32, ptr @min_free_kbytes, align 4
  store i32 %0, ptr @user_min_free_kbytes, align 4
  tail call void @setup_per_zone_wmarks()
  br label %cleanup

cleanup:                                          ; preds = %if.then2, %entry
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proc_dointvec_minmax(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @watermark_scale_factor_sysctl_handler(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @proc_dointvec_minmax(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) #27
  %tobool.not = icmp ne i32 %call, 0
  %tobool1.not = icmp eq i32 %write, 0
  %or.cond = or i1 %tobool1.not, %tobool.not
  br i1 %or.cond, label %cleanup, label %if.then2

if.then2:                                         ; preds = %entry
  tail call void @setup_per_zone_wmarks()
  br label %cleanup

cleanup:                                          ; preds = %if.then2, %entry
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lowmem_reserve_ratio_sysctl_handler(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @proc_dointvec_minmax(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) #27
  %0 = load i32, ptr @sysctl_lowmem_reserve_ratio, align 4
  %cmp1 = icmp slt i32 %0, 1
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %entry
  store i32 0, ptr @sysctl_lowmem_reserve_ratio, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then, %entry
  %1 = load i32, ptr getelementptr inbounds ([4 x i32], ptr @sysctl_lowmem_reserve_ratio, i32 0, i32 1), align 4
  %cmp1.1 = icmp slt i32 %1, 1
  br i1 %cmp1.1, label %if.then.1, label %for.inc.1

if.then.1:                                        ; preds = %for.inc
  store i32 0, ptr getelementptr inbounds ([4 x i32], ptr @sysctl_lowmem_reserve_ratio, i32 0, i32 1), align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %for.inc
  %2 = load i32, ptr getelementptr inbounds ([4 x i32], ptr @sysctl_lowmem_reserve_ratio, i32 0, i32 2), align 4
  %cmp1.2 = icmp slt i32 %2, 1
  br i1 %cmp1.2, label %if.then.2, label %for.inc.2

if.then.2:                                        ; preds = %for.inc.1
  store i32 0, ptr getelementptr inbounds ([4 x i32], ptr @sysctl_lowmem_reserve_ratio, i32 0, i32 2), align 4
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2, %for.inc.1
  %3 = load i32, ptr getelementptr inbounds ([4 x i32], ptr @sysctl_lowmem_reserve_ratio, i32 0, i32 3), align 4
  %cmp1.3 = icmp slt i32 %3, 1
  br i1 %cmp1.3, label %if.then.3, label %for.inc.3

if.then.3:                                        ; preds = %for.inc.2
  store i32 0, ptr getelementptr inbounds ([4 x i32], ptr @sysctl_lowmem_reserve_ratio, i32 0, i32 3), align 4
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then.3, %for.inc.2
  tail call fastcc void @setup_per_zone_lowmem_reserve()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @percpu_pagelist_high_fraction_sysctl_handler(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @pcp_batch_high_lock, i32 noundef 0) #27
  %0 = load i32, ptr @percpu_pagelist_high_fraction, align 4
  %call = tail call i32 @proc_dointvec_minmax(ptr noundef %table, i32 noundef %write, ptr noundef %buffer, ptr noundef %length, ptr noundef %ppos) #27
  %tobool.not = icmp eq i32 %write, 0
  %cmp = icmp slt i32 %call, 0
  %or.cond = select i1 %tobool.not, i1 true, i1 %cmp
  br i1 %or.cond, label %out, label %if.end

if.end:                                           ; preds = %entry
  %1 = load i32, ptr @percpu_pagelist_high_fraction, align 4
  %tobool1.not = icmp ne i32 %1, 0
  %cmp2 = icmp slt i32 %1, 8
  %or.cond20 = and i1 %tobool1.not, %cmp2
  br i1 %or.cond20, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  store i32 %0, ptr @percpu_pagelist_high_fraction, align 4
  br label %out

if.end4:                                          ; preds = %if.end
  %cmp5 = icmp eq i32 %1, %0
  br i1 %cmp5, label %out, label %if.end7

if.end7:                                          ; preds = %if.end4
  %call8 = tail call ptr @first_online_pgdat() #27
  %tobool9.not21 = icmp eq ptr %call8, null
  br i1 %tobool9.not21, label %out, label %for.body

for.body:                                         ; preds = %for.inc, %if.end7
  %zone.022 = phi ptr [ %call13, %for.inc ], [ %call8, %if.end7 ]
  %present_pages.i = getelementptr inbounds %struct.zone, ptr %zone.022, i32 0, i32 13
  %2 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %present_pages.i, align 8
  %tobool.i.not = icmp eq i32 %3, 0
  br i1 %tobool.i.not, label %for.inc, label %if.else

if.else:                                          ; preds = %for.body
  tail call fastcc void @zone_set_pageset_high_and_batch(ptr noundef nonnull %zone.022, i32 noundef 0)
  br label %for.inc

for.inc:                                          ; preds = %if.else, %for.body
  %call13 = tail call ptr @next_zone(ptr noundef nonnull %zone.022) #27
  %tobool9.not = icmp eq ptr %call13, null
  br i1 %tobool9.not, label %out, label %for.body

out:                                              ; preds = %for.inc, %if.end7, %if.end4, %if.then3, %entry
  %ret.0 = phi i32 [ -22, %if.then3 ], [ %call, %if.end4 ], [ %call, %entry ], [ %call, %if.end7 ], [ %call, %for.inc ]
  tail call void @mutex_unlock(ptr noundef nonnull @pcp_batch_high_lock) #27
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_large_system_hash(ptr noundef %tablename, i32 noundef %bucketsize, i32 noundef %numentries, i32 noundef %scale, i32 noundef %flags, ptr noundef %_hash_shift, ptr noundef writeonly %_hash_mask, i32 noundef %low_limit, i32 noundef %high_limit) local_unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i32 %high_limit to i64
  %tobool.not = icmp eq i32 %numentries, 0
  br i1 %tobool.not, label %if.then, label %cond.false99

if.then:                                          ; preds = %entry
  %0 = load i32, ptr @nr_kernel_pages, align 4
  %sub1 = add i32 %0, -1
  %or = or i32 %sub1, 255
  %add = add i32 %or, 1
  %cmp = icmp sgt i32 %scale, 12
  %sub4 = add i32 %scale, -12
  %shr = lshr i32 %add, %sub4
  %sub5 = sub i32 12, %scale
  %shl = shl i32 %add, %sub5
  %numentries.addr.0 = select i1 %cmp, i32 %shr, i32 %shl
  %and = and i32 %flags, 2
  %tobool6.not = icmp eq i32 %and, 0
  br i1 %tobool6.not, label %if.else64, label %if.then9, !prof !582

if.then9:                                         ; preds = %if.then
  %and10 = and i32 %flags, 1
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %do.end, label %if.end32, !prof !584

do.end:                                           ; preds = %if.then9
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 8802, i32 noundef 9, ptr noundef null) #27
  br label %if.end32

if.end32:                                         ; preds = %do.end, %if.then9
  %1 = ptrtoint ptr %_hash_shift to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %_hash_shift, align 4
  %shr39 = lshr i32 %numentries.addr.0, %2
  %tobool40.not = icmp eq i32 %shr39, 0
  %shl42 = shl nuw i32 1, %2
  %spec.select = select i1 %tobool40.not, i32 %shl42, i32 %numentries.addr.0
  br label %cond.false99

if.else64:                                        ; preds = %if.then
  %mul = mul i32 %numentries.addr.0, %bucketsize
  %cmp65 = icmp ult i32 %mul, 4096
  br i1 %cmp65, label %if.then73, label %cond.false99, !prof !584

if.then73:                                        ; preds = %if.else64
  %div = udiv i32 4096, %bucketsize
  br label %cond.false99

cond.false99:                                     ; preds = %if.then73, %if.else64, %if.end32, %entry
  %numentries.addr.1 = phi i32 [ %numentries, %entry ], [ %div, %if.then73 ], [ %numentries.addr.0, %if.else64 ], [ %spec.select, %if.end32 ]
  %sub.i572 = add i32 %numentries.addr.1, -1
  %tobool.not.i.i.i = icmp eq i32 %sub.i572, 0
  %3 = tail call i32 @llvm.ctlz.i32(i32 %sub.i572, i1 true) #27, !range !649
  %sub.i.i.i = sub nuw nsw i32 32, %3
  %sub.i.i.op.i = shl nuw i32 1, %sub.i.i.i
  %shl.i = select i1 %tobool.not.i.i.i, i32 1, i32 %sub.i.i.op.i
  %cmp103 = icmp eq i32 %high_limit, 0
  br i1 %cmp103, label %if.then105, label %cond.end344

if.then105:                                       ; preds = %cond.false99
  %4 = load i32, ptr @nr_all_pages, align 4
  %conv106 = zext i32 %4 to i64
  %shl107 = shl nuw nsw i64 %conv106, 8
  %cmp294 = icmp ult i32 %4, 16777216
  br i1 %cmp294, label %if.then302, label %if.else308, !prof !582

if.then302:                                       ; preds = %if.then105
  %conv303 = trunc i64 %shl107 to i32
  %div306 = udiv i32 %conv303, %bucketsize
  %conv307 = zext i32 %div306 to i64
  br label %cond.end344

if.else308:                                       ; preds = %if.then105
  %5 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %bucketsize, i64 %shl107) #33, !srcloc !657
  %asmresult1.i = extractvalue { i64, i64 } %5, 1
  br label %cond.end344

cond.end344:                                      ; preds = %if.else308, %if.then302, %cond.false99
  %max.0 = phi i64 [ %conv307, %if.then302 ], [ %asmresult1.i, %if.else308 ], [ %conv, %cond.false99 ]
  %6 = tail call i64 @llvm.umin.i64(i64 %max.0, i64 2147483648)
  %7 = tail call i32 @llvm.umax.i32(i32 %shl.i, i32 %low_limit)
  %conv326 = zext i32 %7 to i64
  %cmp327 = icmp ult i64 %6, %conv326
  %conv330 = trunc i64 %6 to i32
  %numentries.addr.3 = select i1 %cmp327, i32 %conv330, i32 %7
  %tobool.not.i.i579 = icmp eq i32 %numentries.addr.3, 0
  %8 = tail call i32 @llvm.ctlz.i32(i32 %numentries.addr.3, i1 true) #27, !range !649
  %sub.i.op.i580 = xor i32 %8, 31
  %sub.i581 = select i1 %tobool.not.i.i579, i32 -1, i32 %sub.i.op.i580
  %and346 = and i32 %flags, 4
  %tobool347.not = icmp eq i32 %and346, 0
  %cond348 = select i1 %tobool347.not, i32 2592, i32 2848
  %and351 = and i32 %flags, 1
  %tobool352.not = icmp eq i32 %and351, 0
  br label %do.body349

do.body349:                                       ; preds = %land.rhs, %cond.end344
  %log2qty.0 = phi i32 [ %sub.i581, %cond.end344 ], [ %dec, %land.rhs ]
  %shl350 = shl i32 %bucketsize, %log2qty.0
  br i1 %tobool352.not, label %if.end14.i, label %if.then353

if.then353:                                       ; preds = %do.body349
  br i1 %tobool347.not, label %if.else358, label %if.then356

if.then356:                                       ; preds = %if.then353
  %call.i = tail call ptr @memblock_alloc_try_nid(i32 noundef %shl350, i32 noundef 128, i32 noundef 0, i32 noundef 0, i32 noundef -1) #27
  br label %do.cond375

if.else358:                                       ; preds = %if.then353
  %call.i582 = tail call ptr @memblock_alloc_try_nid_raw(i32 noundef %shl350, i32 noundef 128, i32 noundef 0, i32 noundef 0, i32 noundef -1) #27
  br label %do.cond375

if.end14.i:                                       ; preds = %do.body349
  %9 = add i32 %shl350, -8388609
  %cmp363 = icmp ult i32 %9, -8388608
  br i1 %cmp363, label %if.then365, label %if.else371

if.then365:                                       ; preds = %if.end14.i
  %call366 = tail call noalias ptr @__vmalloc(i32 noundef %shl350, i32 noundef %cond348) #32
  %tobool367.not = icmp eq ptr %call366, null
  br i1 %tobool367.not, label %do.cond375, label %do.end387

if.else371:                                       ; preds = %if.end14.i
  %call372 = tail call noalias ptr @alloc_pages_exact(i32 noundef %shl350, i32 noundef %cond348) #34
  tail call void @kmemleak_alloc(ptr noundef %call372, i32 noundef %shl350, i32 noundef 1, i32 noundef %cond348) #27
  br label %do.cond375

do.cond375:                                       ; preds = %if.else371, %if.then365, %if.else358, %if.then356
  %virt.0.off0 = phi i1 [ false, %if.then356 ], [ false, %if.else358 ], [ true, %if.then365 ], [ false, %if.else371 ]
  %table.0 = phi ptr [ %call.i, %if.then356 ], [ %call.i582, %if.else358 ], [ null, %if.then365 ], [ %call372, %if.else371 ]
  %tobool376.not = icmp eq ptr %table.0, null
  %cmp378 = icmp ugt i32 %shl350, 4096
  %or.cond = select i1 %tobool376.not, i1 %cmp378, i1 false
  br i1 %or.cond, label %land.rhs, label %do.end381

land.rhs:                                         ; preds = %do.cond375
  %dec = add i32 %log2qty.0, -1
  %tobool380.not = icmp eq i32 %dec, 0
  br i1 %tobool380.not, label %if.then383, label %do.body349

do.end381:                                        ; preds = %do.cond375
  br i1 %tobool376.not, label %if.then383, label %do.end387

if.then383:                                       ; preds = %do.end381, %land.rhs
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.85, ptr noundef %tablename) #35
  unreachable

do.end387:                                        ; preds = %do.end381, %if.then365
  %virt.0.off0621627 = phi i1 [ %virt.0.off0, %do.end381 ], [ true, %if.then365 ]
  %huge.1.off0622626 = phi ptr [ @.str.88, %do.end381 ], [ @.str.89, %if.then365 ]
  %table.0623625 = phi ptr [ %table.0, %do.end381 ], [ %call366, %if.then365 ]
  %shl389 = shl nuw i32 1, %log2qty.0
  %tobool.not.i.i583 = icmp eq i32 %shl350, 0
  %10 = tail call i32 @llvm.ctlz.i32(i32 %shl350, i1 true) #27, !range !649
  %sub.i.op.i584.op = sub nsw i32 19, %10
  %sub404 = select i1 %tobool.not.i.i583, i32 -13, i32 %sub.i.op.i584.op
  %spec.select569 = select i1 %virt.0.off0621627, ptr %huge.1.off0622626, ptr @.str.90
  %call414 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.86, ptr noundef %tablename, i32 noundef %shl389, i32 noundef %sub404, i32 noundef %shl350, ptr noundef nonnull %spec.select569) #29
  %tobool415.not = icmp eq ptr %_hash_shift, null
  br i1 %tobool415.not, label %if.end417, label %if.then416

if.then416:                                       ; preds = %do.end387
  %11 = ptrtoint ptr %_hash_shift to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %log2qty.0, ptr %_hash_shift, align 4
  br label %if.end417

if.end417:                                        ; preds = %if.then416, %do.end387
  %tobool418.not = icmp eq ptr %_hash_mask, null
  br i1 %tobool418.not, label %if.end422, label %if.then419

if.then419:                                       ; preds = %if.end417
  %sub421 = add i32 %shl389, -1
  %12 = ptrtoint ptr %_hash_mask to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %sub421, ptr %_hash_mask, align 4
  br label %if.end422

if.end422:                                        ; preds = %if.then419, %if.end417
  ret ptr %table.0623625
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__vmalloc(i32 noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmemleak_alloc(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3 section ".ref.text"

; Function Attrs: cold noreturn null_pointer_is_valid
declare dso_local void @panic(ptr noundef, ...) local_unnamed_addr #23

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @has_unmovable_pages(ptr noundef %zone, ptr noundef %page, i32 noundef %migratetype, i32 noundef %flags) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %1
  %rem = and i32 %add, 2047
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %get_pageblock_bitmap.exit.i.i, !prof !584

if.then.i.i.i.i.i:                                ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i:                    ; preds = %entry
  %shr.i.i.i.i.i = lshr i32 %3, 30
  %pageblock_flags.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i, i32 9
  %4 = ptrtoint ptr %pageblock_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pageblock_flags.i.i.i, align 8
  %6 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i8.i.i = icmp eq i32 %7, -1
  br i1 %cmp.i.not.i.i.i8.i.i, label %if.then.i.i.i9.i.i, label %get_pfnblock_flags_mask.exit, !prof !584

if.then.i.i.i9.i.i:                               ; preds = %get_pageblock_bitmap.exit.i.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pfnblock_flags_mask.exit:                     ; preds = %get_pageblock_bitmap.exit.i.i
  %shr.i.i.i10.i.i = lshr i32 %7, 30
  %zone_start_pfn.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i, i32 10
  %8 = ptrtoint ptr %zone_start_pfn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %zone_start_pfn.i.i.i, align 4
  %and.i.i.i = and i32 %9, -2048
  %sub.i.i.i = sub i32 %add, %and.i.i.i
  %10 = lshr i32 %sub.i.i.i, 9
  %div7.i.i = lshr i32 %sub.i.i.i, 14
  %and.i.i129 = and i32 %10, 28
  %arrayidx.i.i = getelementptr i32, ptr %5, i32 %div7.i.i
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i.i, align 4
  %shr.i.i130 = lshr i32 %12, %and.i.i129
  %and2.i.i = and i32 %shr.i.i130, 7
  %cmp = icmp eq i32 %and2.i.i, 4
  br i1 %cmp, label %if.then, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %get_pfnblock_flags_mask.exit
  %sub = sub nuw nsw i32 2048, %rem
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %sub.ptr.lhs.cast17 = ptrtoint ptr %zone to i32
  %and = and i32 %flags, 1
  %tobool65.not = icmp eq i32 %and, 0
  br label %for.body

if.then:                                          ; preds = %get_pfnblock_flags_mask.exit
  %cmp6 = icmp eq i32 %migratetype, 4
  %.page = select i1 %cmp6, ptr null, ptr %page, !prof !584
  br label %cleanup85

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %iter.0133 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %13 = load ptr, ptr @mem_map, align 4
  %add11 = add i32 %iter.0133, %add
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %14 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub12 = sub i32 %add11, %14
  %add.ptr = getelementptr %struct.page, ptr %13, i32 %sub12
  %15 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %add.ptr, align 4
  %cmp.i.not.i = icmp eq i32 %16, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PageReserved.exit, !prof !584

if.then.i:                                        ; preds = %for.body
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 440, 0\0A.popsection", ""() #27, !srcloc !658
  unreachable

PageReserved.exit:                                ; preds = %for.body
  %17 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %add.ptr, align 4
  %19 = and i32 %18, 4096
  %tobool14.not = icmp eq i32 %19, 0
  br i1 %tobool14.not, label %if.end16, label %cleanup85

if.end16:                                         ; preds = %PageReserved.exit
  %20 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %zone_pgdat, align 4
  %sub.ptr.rhs.cast18 = ptrtoint ptr %21 to i32
  %sub.ptr.sub19 = sub i32 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  %22 = icmp eq i32 %sub.ptr.sub19, 3456
  br i1 %22, label %for.inc, label %if.end23

if.end23:                                         ; preds = %if.end16
  %_refcount.i = getelementptr %struct.page, ptr %13, i32 %sub12, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i, i32 noundef 4) #27
  %23 = ptrtoint ptr %_refcount.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %_refcount.i, align 4
  %tobool55.not = icmp eq i32 %24, 0
  br i1 %tobool55.not, label %if.then56, label %if.end64

if.then56:                                        ; preds = %if.end23
  %25 = getelementptr %struct.page, ptr %13, i32 %sub12, i32 2
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %and.i = and i32 %27, -268435328
  %cmp.i.not = icmp eq i32 %and.i, -268435456
  br i1 %cmp.i.not, label %if.then59, label %for.inc

if.then59:                                        ; preds = %if.then56
  %private.i = getelementptr %struct.page, ptr %13, i32 %sub12, i32 1, i32 0, i32 3
  %28 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %private.i, align 4
  %notmask = shl nsw i32 -1, %29
  %sub61 = xor i32 %notmask, -1
  %add62 = add i32 %iter.0133, %sub61
  br label %for.inc

if.end64:                                         ; preds = %if.end23
  br i1 %tobool65.not, label %if.end77, label %land.lhs.true66

land.lhs.true66:                                  ; preds = %if.end64
  %30 = getelementptr %struct.page, ptr %13, i32 %sub12, i32 2
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %and.i119 = and i32 %32, -268435200
  %cmp.i120.not = icmp eq i32 %and.i119, -268435456
  br i1 %cmp.i120.not, label %for.inc, label %if.end77

if.end77:                                         ; preds = %land.lhs.true66, %if.end64
  %mapping.i = getelementptr %struct.page, ptr %13, i32 %sub12, i32 1, i32 0, i32 1
  %33 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %mapping.i, align 4
  %35 = ptrtoint ptr %34 to i32
  %and.i122 = and i32 %35, 3
  %cmp.i123.not = icmp eq i32 %and.i122, 2
  br i1 %cmp.i123.not, label %for.inc, label %lor.lhs.false80

lor.lhs.false80:                                  ; preds = %if.end77
  %36 = getelementptr %struct.page, ptr %13, i32 %sub12, i32 1
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %36, align 4
  %and.i.i = and i32 %38, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !582

if.then.i.i:                                      ; preds = %lor.lhs.false80
  %sub.i.i = add i32 %38, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false80
  %39 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %39, %if.end.i.i ]
  %40 = inttoptr i32 %retval.0.i.i to ptr
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  %cmp.i.not.i125 = icmp eq i32 %42, -1
  %43 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %36, align 4
  %and.i13.i = and i32 %44, 1
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i125, label %if.then.i126, label %do.end8.i, !prof !584

if.then.i126:                                     ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !582

if.then.i16.i:                                    ; preds = %if.then.i126
  %sub.i15.i = add i32 %44, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i126
  %45 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %45, %if.end.i17.i ]
  %46 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %46, ptr noundef nonnull @.str.187) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #27, !srcloc !611
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !582

if.then.i23.i:                                    ; preds = %do.end8.i
  %sub.i22.i = add i32 %44, -1
  br label %PageLRU.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  %47 = ptrtoint ptr %add.ptr to i32
  br label %PageLRU.exit

PageLRU.exit:                                     ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %47, %if.end.i24.i ]
  %48 = inttoptr i32 %retval.0.i25.i to ptr
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %48, align 4
  %51 = and i32 %50, 16
  %tobool82.not = icmp eq i32 %51, 0
  br i1 %tobool82.not, label %cleanup85, label %for.inc

for.inc:                                          ; preds = %PageLRU.exit, %if.end77, %land.lhs.true66, %if.then59, %if.then56, %if.end16
  %iter.2 = phi i32 [ %iter.0133, %if.end16 ], [ %iter.0133, %land.lhs.true66 ], [ %iter.0133, %if.end77 ], [ %iter.0133, %PageLRU.exit ], [ %add62, %if.then59 ], [ %iter.0133, %if.then56 ]
  %inc = add i32 %iter.2, 1
  %cmp10 = icmp ult i32 %inc, %sub
  br i1 %cmp10, label %for.body, label %cleanup85

cleanup85:                                        ; preds = %for.inc, %PageLRU.exit, %PageReserved.exit, %if.then
  %retval.3 = phi ptr [ %.page, %if.then ], [ %add.ptr, %PageReserved.exit ], [ %add.ptr, %PageLRU.exit ], [ null, %for.inc ]
  ret ptr %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @alloc_contig_range(i32 noundef %start, i32 noundef %end, i32 noundef %migratetype, i32 noundef %gfp_mask) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cc = alloca %struct.compact_control, align 4
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %cc) #27
  %0 = call ptr @memset(ptr %cc, i32 0, i32 88)
  %zone = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 7
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %1 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %2 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub = sub i32 %start, %2
  %add.ptr = getelementptr %struct.page, ptr %1, i32 %sub
  %3 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %add.ptr, align 4
  %cmp.i.not.i.i = icmp eq i32 %4, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %entry
  tail call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %entry
  %shr.i.i = lshr i32 %4, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i
  %5 = ptrtoint ptr %zone to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %arrayidx.i, ptr %zone, align 4
  %gfp_mask1 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 12
  %6 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %flags1.i, align 4
  %and.i87 = and i32 %11, 269221888
  %tobool.not.i = icmp eq i32 %and.i87, 0
  br i1 %tobool.not.i, label %current_gfp_context.exit, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %page_zone.exit
  %and4.i = and i32 %11, 524288
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %if.else.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.then.i
  %and7.i = and i32 %gfp_mask, -193
  br label %if.end12.i

if.else.i:                                        ; preds = %if.then.i
  %and8.i = and i32 %11, 262144
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  %and11.i = and i32 %gfp_mask, -129
  %spec.select.i = select i1 %tobool9.not.i, i32 %gfp_mask, i32 %and11.i
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else.i, %if.then6.i
  %flags.addr.0.i = phi i32 [ %and7.i, %if.then6.i ], [ %spec.select.i, %if.else.i ]
  %and13.i = and i32 %11, 268435456
  %tobool14.not.i = icmp eq i32 %and13.i, 0
  %and16.i = and i32 %flags.addr.0.i, -9
  %spec.select25.i = select i1 %tobool14.not.i, i32 %flags.addr.0.i, i32 %and16.i
  br label %current_gfp_context.exit

current_gfp_context.exit:                         ; preds = %if.end12.i, %page_zone.exit
  %flags.addr.1.i = phi i32 [ %gfp_mask, %page_zone.exit ], [ %spec.select25.i, %if.end12.i ]
  %12 = ptrtoint ptr %gfp_mask1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %flags.addr.1.i, ptr %gfp_mask1, align 4
  %order3 = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 13
  %13 = ptrtoint ptr %order3 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %order3, align 4
  %mode = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 17
  %14 = ptrtoint ptr %mode to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 2, ptr %mode, align 4
  %ignore_skip_hint = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 18
  %15 = ptrtoint ptr %ignore_skip_hint to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 1, ptr %ignore_skip_hint, align 4
  %no_set_skip_hint = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 19
  %16 = ptrtoint ptr %no_set_skip_hint to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %no_set_skip_hint, align 1
  %alloc_contig = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 26
  %17 = ptrtoint ptr %alloc_contig to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 1, ptr %alloc_contig, align 4
  %migratepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 1
  %18 = ptrtoint ptr %migratepages to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %migratepages, ptr %migratepages, align 4
  %prev.i = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 1, i32 1
  %19 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %migratepages, ptr %prev.i, align 4
  %and.i88 = and i32 %start, -2048
  %add.i = add i32 %end, 2047
  %and.i89 = and i32 %add.i, -2048
  %call7 = call i32 @start_isolate_page_range(i32 noundef %and.i88, i32 noundef %and.i89, i32 noundef %migratetype, i32 noundef 0) #27
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %if.end, label %cleanup

if.end:                                           ; preds = %current_gfp_context.exit
  %20 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %zone, align 4
  call fastcc void @__drain_all_pages(ptr noundef %21, i1 noundef zeroext false) #27
  %call9 = call fastcc i32 @__alloc_contig_migrate_range(ptr noundef nonnull %cc, i32 noundef %start, i32 noundef %end)
  switch i32 %call9, label %done [
    i32 0, label %if.end12
    i32 -16, label %if.end12
  ]

if.end12:                                         ; preds = %if.end, %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %22 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %23 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub13130 = sub i32 %start, %23
  %24 = getelementptr %struct.page, ptr %22, i32 %sub13130, i32 2
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 4
  %and.i131 = and i32 %26, -268435328
  %cmp.i.not132 = icmp eq i32 %and.i131, -268435456
  br i1 %cmp.i.not132, label %if.end29, label %while.body.preheader

while.body.preheader:                             ; preds = %if.end12
  %and = and i32 %start, -2
  %sub13 = sub i32 %and, %23
  %27 = getelementptr %struct.page, ptr %22, i32 %sub13, i32 2
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  %and.i = and i32 %29, -268435328
  %cmp.i.not = icmp eq i32 %and.i, -268435456
  br i1 %cmp.i.not, label %while.end, label %while.body.1

while.body.1:                                     ; preds = %while.body.preheader
  %and.1 = and i32 %start, -4
  %sub13.1 = sub i32 %and.1, %23
  %30 = getelementptr %struct.page, ptr %22, i32 %sub13.1, i32 2
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %and.i.1 = and i32 %32, -268435328
  %cmp.i.not.1 = icmp eq i32 %and.i.1, -268435456
  br i1 %cmp.i.not.1, label %while.end, label %while.body.2

while.body.2:                                     ; preds = %while.body.1
  %and.2 = and i32 %start, -8
  %sub13.2 = sub i32 %and.2, %23
  %33 = getelementptr %struct.page, ptr %22, i32 %sub13.2, i32 2
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %and.i.2 = and i32 %35, -268435328
  %cmp.i.not.2 = icmp eq i32 %and.i.2, -268435456
  br i1 %cmp.i.not.2, label %while.end, label %while.body.3

while.body.3:                                     ; preds = %while.body.2
  %and.3 = and i32 %start, -16
  %sub13.3 = sub i32 %and.3, %23
  %36 = getelementptr %struct.page, ptr %22, i32 %sub13.3, i32 2
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %36, align 4
  %and.i.3 = and i32 %38, -268435328
  %cmp.i.not.3 = icmp eq i32 %and.i.3, -268435456
  br i1 %cmp.i.not.3, label %while.end, label %while.body.4

while.body.4:                                     ; preds = %while.body.3
  %and.4 = and i32 %start, -32
  %sub13.4 = sub i32 %and.4, %23
  %39 = getelementptr %struct.page, ptr %22, i32 %sub13.4, i32 2
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  %and.i.4 = and i32 %41, -268435328
  %cmp.i.not.4 = icmp eq i32 %and.i.4, -268435456
  br i1 %cmp.i.not.4, label %while.end, label %while.body.5

while.body.5:                                     ; preds = %while.body.4
  %and.5 = and i32 %start, -64
  %sub13.5 = sub i32 %and.5, %23
  %42 = getelementptr %struct.page, ptr %22, i32 %sub13.5, i32 2
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  %and.i.5 = and i32 %44, -268435328
  %cmp.i.not.5 = icmp eq i32 %and.i.5, -268435456
  br i1 %cmp.i.not.5, label %while.end, label %while.body.6

while.body.6:                                     ; preds = %while.body.5
  %and.6 = and i32 %start, -128
  %sub13.6 = sub i32 %and.6, %23
  %45 = getelementptr %struct.page, ptr %22, i32 %sub13.6, i32 2
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %and.i.6 = and i32 %47, -268435328
  %cmp.i.not.6 = icmp eq i32 %and.i.6, -268435456
  br i1 %cmp.i.not.6, label %while.end, label %while.body.7

while.body.7:                                     ; preds = %while.body.6
  %and.7 = and i32 %start, -256
  %sub13.7 = sub i32 %and.7, %23
  %48 = getelementptr %struct.page, ptr %22, i32 %sub13.7, i32 2
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %48, align 4
  %and.i.7 = and i32 %50, -268435328
  %cmp.i.not.7 = icmp eq i32 %and.i.7, -268435456
  br i1 %cmp.i.not.7, label %while.end, label %while.body.8

while.body.8:                                     ; preds = %while.body.7
  %and.8 = and i32 %start, -512
  %sub13.8 = sub i32 %and.8, %23
  %51 = getelementptr %struct.page, ptr %22, i32 %sub13.8, i32 2
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %51, align 4
  %and.i.8 = and i32 %53, -268435328
  %cmp.i.not.8 = icmp eq i32 %and.i.8, -268435456
  br i1 %cmp.i.not.8, label %while.end, label %while.body.9

while.body.9:                                     ; preds = %while.body.8
  %and.9 = and i32 %start, -1024
  %sub13.9 = sub i32 %and.9, %23
  %54 = getelementptr %struct.page, ptr %22, i32 %sub13.9, i32 2
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %54, align 4
  %and.i.9 = and i32 %56, -268435328
  %cmp.i.not.9 = icmp eq i32 %and.i.9, -268435456
  br i1 %cmp.i.not.9, label %while.end, label %while.body.10

while.body.10:                                    ; preds = %while.body.9
  %and.10 = and i32 %start, -2048
  %sub13.10 = sub i32 %and.10, %23
  %57 = getelementptr %struct.page, ptr %22, i32 %sub13.10, i32 2
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %57, align 4
  %and.i.10 = and i32 %59, -268435328
  %cmp.i.not.10 = icmp eq i32 %and.i.10, -268435456
  br i1 %cmp.i.not.10, label %while.end, label %if.end29

while.end:                                        ; preds = %while.body.10, %while.body.9, %while.body.8, %while.body.7, %while.body.6, %while.body.5, %while.body.4, %while.body.3, %while.body.2, %while.body.1, %while.body.preheader
  %outer_start.0.lcssa = phi i32 [ %and, %while.body.preheader ], [ %and.1, %while.body.1 ], [ %and.2, %while.body.2 ], [ %and.3, %while.body.3 ], [ %and.4, %while.body.4 ], [ %and.5, %while.body.5 ], [ %and.6, %while.body.6 ], [ %and.7, %while.body.7 ], [ %and.8, %while.body.8 ], [ %and.9, %while.body.9 ], [ %and.10, %while.body.10 ]
  %cmp20.not = icmp eq i32 %outer_start.0.lcssa, %start
  br i1 %cmp20.not, label %if.end29, label %if.then21

if.then21:                                        ; preds = %while.end
  %sub22 = sub i32 %outer_start.0.lcssa, %23
  %private.i = getelementptr %struct.page, ptr %22, i32 %sub22, i32 1, i32 0, i32 3
  %60 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %private.i, align 4
  %shl25 = shl nuw i32 1, %61
  %add = add i32 %shl25, %outer_start.0.lcssa
  %cmp26.not = icmp ugt i32 %add, %start
  %spec.select = select i1 %cmp26.not, i32 %outer_start.0.lcssa, i32 %start
  br label %if.end29

if.end29:                                         ; preds = %if.then21, %while.end, %while.body.10, %if.end12
  %outer_start.2 = phi i32 [ %start, %while.end ], [ %spec.select, %if.then21 ], [ %start, %while.body.10 ], [ %start, %if.end12 ]
  %call30 = call i32 @test_pages_isolated(i32 noundef %outer_start.2, i32 noundef %end, i32 noundef 0) #27
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end33, label %done

if.end33:                                         ; preds = %if.end29
  %call34 = call i32 @isolate_freepages_range(ptr noundef nonnull %cc, i32 noundef %outer_start.2, i32 noundef %end) #27
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %done, label %if.end37

if.end37:                                         ; preds = %if.end33
  %cmp38.not = icmp eq i32 %outer_start.2, %start
  %sub40 = sub i32 %start, %outer_start.2
  %tobool.not27.i = icmp eq i32 %sub40, 0
  %or.cond = or i1 %cmp38.not, %tobool.not27.i
  br i1 %or.cond, label %if.end41, label %for.body.i

for.body.i:                                       ; preds = %page_count.exit.i, %if.end37
  %pfn.addr.030.i = phi i32 [ %inc.i, %page_count.exit.i ], [ %outer_start.2, %if.end37 ]
  %nr_pages.addr.029.i = phi i32 [ %dec.i, %page_count.exit.i ], [ %sub40, %if.end37 ]
  %count.028.i = phi i32 [ %add.i92, %page_count.exit.i ], [ 0, %if.end37 ]
  %dec.i = add i32 %nr_pages.addr.029.i, -1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %62 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %63 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i = sub i32 %pfn.addr.030.i, %63
  %add.ptr.i = getelementptr %struct.page, ptr %62, i32 %sub.i
  %64 = getelementptr %struct.page, ptr %62, i32 %sub.i, i32 1
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %64, align 4
  %and.i.i.i = and i32 %66, 1
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !582

if.then.i.i.i:                                    ; preds = %for.body.i
  %sub.i.i.i = add i32 %66, -1
  br label %page_count.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  %67 = ptrtoint ptr %add.ptr.i to i32
  br label %page_count.exit.i

page_count.exit.i:                                ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %67, %if.end.i.i.i ]
  %68 = inttoptr i32 %retval.0.i.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %68, i32 0, i32 3
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #27
  %69 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %cmp.i90 = icmp ne i32 %70, 1
  %conv.i91 = zext i1 %cmp.i90 to i32
  %add.i92 = add i32 %count.028.i, %conv.i91
  call void @__free_pages(ptr noundef %add.ptr.i, i32 noundef 0) #27
  %inc.i = add i32 %pfn.addr.030.i, 1
  %tobool.not.i93 = icmp eq i32 %dec.i, 0
  br i1 %tobool.not.i93, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %page_count.exit.i
  %cmp1.not.i = icmp eq i32 %add.i92, 0
  br i1 %cmp1.not.i, label %if.end41, label %do.end.i, !prof !582

do.end.i:                                         ; preds = %for.end.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9337, i32 noundef 9, ptr noundef nonnull @.str.91, i32 noundef %add.i92) #27
  br label %if.end41

if.end41:                                         ; preds = %do.end.i, %for.end.i, %if.end37
  %cmp42.not = icmp eq i32 %call34, %end
  %sub44 = sub i32 %call34, %end
  %tobool.not27.i94 = icmp eq i32 %sub44, 0
  %or.cond125 = or i1 %cmp42.not, %tobool.not27.i94
  br i1 %or.cond125, label %done, label %for.body.i103

for.body.i103:                                    ; preds = %page_count.exit.i115, %if.end41
  %pfn.addr.030.i95 = phi i32 [ %inc.i113, %page_count.exit.i115 ], [ %end, %if.end41 ]
  %nr_pages.addr.029.i96 = phi i32 [ %dec.i98, %page_count.exit.i115 ], [ %sub44, %if.end41 ]
  %count.028.i97 = phi i32 [ %add.i112, %page_count.exit.i115 ], [ 0, %if.end41 ]
  %dec.i98 = add i32 %nr_pages.addr.029.i96, -1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %71 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %72 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i99 = sub i32 %pfn.addr.030.i95, %72
  %add.ptr.i100 = getelementptr %struct.page, ptr %71, i32 %sub.i99
  %73 = getelementptr %struct.page, ptr %71, i32 %sub.i99, i32 1
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %73, align 4
  %and.i.i.i101 = and i32 %75, 1
  %tobool.not.i.i.i102 = icmp eq i32 %and.i.i.i101, 0
  br i1 %tobool.not.i.i.i102, label %if.end.i.i.i106, label %if.then.i.i.i105, !prof !582

if.then.i.i.i105:                                 ; preds = %for.body.i103
  %sub.i.i.i104 = add i32 %75, -1
  br label %page_count.exit.i115

if.end.i.i.i106:                                  ; preds = %for.body.i103
  %76 = ptrtoint ptr %add.ptr.i100 to i32
  br label %page_count.exit.i115

page_count.exit.i115:                             ; preds = %if.end.i.i.i106, %if.then.i.i.i105
  %retval.0.i.i.i107 = phi i32 [ %sub.i.i.i104, %if.then.i.i.i105 ], [ %76, %if.end.i.i.i106 ]
  %77 = inttoptr i32 %retval.0.i.i.i107 to ptr
  %_refcount.i.i.i.i108 = getelementptr inbounds %struct.page, ptr %77, i32 0, i32 3
  %call.i.i.i.i.i.i109 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i108, i32 noundef 4) #27
  %78 = ptrtoint ptr %_refcount.i.i.i.i108 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %_refcount.i.i.i.i108, align 4
  %cmp.i110 = icmp ne i32 %79, 1
  %conv.i111 = zext i1 %cmp.i110 to i32
  %add.i112 = add i32 %count.028.i97, %conv.i111
  call void @__free_pages(ptr noundef %add.ptr.i100, i32 noundef 0) #27
  %inc.i113 = add i32 %pfn.addr.030.i95, 1
  %tobool.not.i114 = icmp eq i32 %dec.i98, 0
  br i1 %tobool.not.i114, label %for.end.i117, label %for.body.i103

for.end.i117:                                     ; preds = %page_count.exit.i115
  %cmp1.not.i116 = icmp eq i32 %add.i112, 0
  br i1 %cmp1.not.i116, label %done, label %do.end.i118, !prof !582

do.end.i118:                                      ; preds = %for.end.i117
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9337, i32 noundef 9, ptr noundef nonnull @.str.91, i32 noundef %add.i112) #27
  br label %done

done:                                             ; preds = %do.end.i118, %for.end.i117, %if.end41, %if.end33, %if.end29, %if.end
  %ret.0 = phi i32 [ 0, %if.end41 ], [ %call9, %if.end ], [ -16, %if.end29 ], [ -16, %if.end33 ], [ 0, %for.end.i117 ], [ 0, %do.end.i118 ]
  call void @undo_isolate_page_range(i32 noundef %and.i88, i32 noundef %and.i89, i32 noundef %migratetype) #27
  br label %cleanup

cleanup:                                          ; preds = %done, %current_gfp_context.exit
  %retval.0 = phi i32 [ %ret.0, %done ], [ %call7, %current_gfp_context.exit ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %cc) #27
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @start_isolate_page_range(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__alloc_contig_migrate_range(ptr noundef %cc, i32 noundef %start, i32 noundef %end) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mtc = alloca %struct.migration_target_control, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %mtc) #27
  %0 = getelementptr inbounds %struct.migration_target_control, ptr %mtc, i32 0, i32 1
  %1 = getelementptr inbounds %struct.migration_target_control, ptr %mtc, i32 0, i32 2
  %zone = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 7
  %2 = ptrtoint ptr %mtc to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %mtc, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %0, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1068232, ptr %1, align 4
  tail call void @lru_cache_disable() #27
  %migratepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 1
  %nr_migratepages = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 3
  %migrate_pfn = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 5
  %5 = ptrtoint ptr %mtc to i32
  %mode = getelementptr inbounds %struct.compact_control, ptr %cc, i32 0, i32 17
  br label %while.cond

while.cond:                                       ; preds = %if.end17, %entry
  %pfn.0 = phi i32 [ %start, %entry ], [ %pfn.1, %if.end17 ]
  %tries.0 = phi i32 [ 0, %entry ], [ %tries.1, %if.end17 ]
  %ret.0 = phi i32 [ 0, %entry ], [ %call23, %if.end17 ]
  %cmp = icmp ult i32 %pfn.0, %end
  br i1 %cmp, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %6 = ptrtoint ptr %migratepages to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %migratepages, align 4
  %cmp.i.not = icmp eq ptr %7, %migratepages
  br i1 %cmp.i.not, label %while.end, label %while.body

while.body:                                       ; preds = %lor.rhs, %while.cond
  %8 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %stack.i.i.i, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %13, align 4
  %and1.i.i.i.i.i = and i32 %15, 1
  %tobool.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %if.end, label %fatal_signal_pending.exit

fatal_signal_pending.exit:                        ; preds = %while.body
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 116, i32 1
  %16 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %signal.i.i, align 4
  %18 = and i32 %17, 256
  %tobool4.not = icmp eq i32 %18, 0
  br i1 %tobool4.not, label %if.end, label %while.end

if.end:                                           ; preds = %fatal_signal_pending.exit, %while.body
  %19 = ptrtoint ptr %migratepages to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %migratepages, align 4
  %cmp.i58.not = icmp eq ptr %20, %migratepages
  br i1 %cmp.i58.not, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end
  %21 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %nr_migratepages, align 4
  %call9 = call i32 @isolate_migratepages_range(ptr noundef %cc, i32 noundef %pfn.0, i32 noundef %end) #27
  switch i32 %call9, label %while.end [
    i32 0, label %if.end13
    i32 -11, label %if.end13
  ]

if.end13:                                         ; preds = %if.then8, %if.then8
  %22 = ptrtoint ptr %migrate_pfn to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %migrate_pfn, align 4
  br label %if.end17

if.else:                                          ; preds = %if.end
  %inc = add i32 %tries.0, 1
  %cmp14 = icmp eq i32 %inc, 5
  br i1 %cmp14, label %while.end, label %if.end17

if.end17:                                         ; preds = %if.else, %if.end13
  %pfn.1 = phi i32 [ %23, %if.end13 ], [ %pfn.0, %if.else ]
  %tries.1 = phi i32 [ 0, %if.end13 ], [ %inc, %if.else ]
  %24 = ptrtoint ptr %zone to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %zone, align 4
  %call20 = call i32 @reclaim_clean_pages_from_list(ptr noundef %25, ptr noundef %migratepages) #27
  %26 = ptrtoint ptr %nr_migratepages to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %nr_migratepages, align 4
  %sub = sub i32 %27, %call20
  store i32 %sub, ptr %nr_migratepages, align 4
  %28 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mode, align 4
  %call23 = call i32 @migrate_pages(ptr noundef %migratepages, ptr noundef nonnull @alloc_migration_target, ptr noundef null, i32 noundef %5, i32 noundef %29, i32 noundef 6, ptr noundef null) #27
  %cmp24 = icmp eq i32 %call23, -12
  br i1 %cmp24, label %while.end, label %while.cond

while.end:                                        ; preds = %if.end17, %if.else, %if.then8, %fatal_signal_pending.exit, %lor.rhs
  %ret.1 = phi i32 [ -12, %if.end17 ], [ %ret.0, %lor.rhs ], [ -4, %fatal_signal_pending.exit ], [ %call9, %if.then8 ], [ -16, %if.else ]
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @lru_disable_count, i32 noundef 4) #27
  call void @llvm.prefetch.p0(ptr nonnull @lru_disable_count, i32 1, i32 3, i32 1) #27
  %30 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @lru_disable_count, ptr nonnull @lru_disable_count, i32 1, ptr nonnull elementtype(i32) @lru_disable_count) #27, !srcloc !659
  %cmp27 = icmp slt i32 %ret.1, 0
  br i1 %cmp27, label %if.then28, label %cleanup

if.then28:                                        ; preds = %while.end
  %cmp29 = icmp eq i32 %ret.1, -16
  br i1 %cmp29, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.then28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alloc_contig_dump_pages.descriptor, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__alloc_contig_migrate_range, %if.then.i)) #27
          to label %if.end32 [label %if.then.i], !srcloc !583

if.then.i:                                        ; preds = %if.then30
  call void @dump_stack() #29
  %31 = ptrtoint ptr %migratepages to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pn15.i = load ptr, ptr %migratepages, align 4
  %cmp.not16.i = icmp eq ptr %.pn15.i, %migratepages
  br i1 %cmp.not16.i, label %if.end32, label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %if.then.i
  %.pn17.i = phi ptr [ %.pn.i, %for.body.i ], [ %.pn15.i, %if.then.i ]
  %page.0.i = getelementptr i8, ptr %.pn17.i, i32 -4
  call void @dump_page(ptr noundef %page.0.i, ptr noundef nonnull @.str.190) #27
  %32 = ptrtoint ptr %.pn17.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %.pn.i = load ptr, ptr %.pn17.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %migratepages
  br i1 %cmp.not.i, label %if.end32, label %for.body.i

if.end32:                                         ; preds = %for.body.i, %if.then.i, %if.then30, %if.then28
  call void @putback_movable_pages(ptr noundef %migratepages) #27
  br label %cleanup

cleanup:                                          ; preds = %if.end32, %while.end
  %retval.0 = phi i32 [ %ret.1, %if.end32 ], [ 0, %while.end ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %mtc) #27
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @test_pages_isolated(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @isolate_freepages_range(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_contig_range(i32 noundef %pfn, i32 noundef %nr_pages) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not27 = icmp eq i32 %nr_pages, 0
  br i1 %tobool.not27, label %if.end, label %for.body

for.body:                                         ; preds = %page_count.exit, %entry
  %pfn.addr.030 = phi i32 [ %inc, %page_count.exit ], [ %pfn, %entry ]
  %nr_pages.addr.029 = phi i32 [ %dec, %page_count.exit ], [ %nr_pages, %entry ]
  %count.028 = phi i32 [ %add, %page_count.exit ], [ 0, %entry ]
  %dec = add i32 %nr_pages.addr.029, -1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub = sub i32 %pfn.addr.030, %1
  %add.ptr = getelementptr %struct.page, ptr %0, i32 %sub
  %2 = getelementptr %struct.page, ptr %0, i32 %sub, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i = and i32 %4, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !582

if.then.i.i:                                      ; preds = %for.body
  %sub.i.i = add i32 %4, -1
  br label %page_count.exit

if.end.i.i:                                       ; preds = %for.body
  %5 = ptrtoint ptr %add.ptr to i32
  br label %page_count.exit

page_count.exit:                                  ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %5, %if.end.i.i ]
  %6 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %6, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #27
  %7 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %_refcount.i.i.i, align 4
  %cmp = icmp ne i32 %8, 1
  %conv = zext i1 %cmp to i32
  %add = add i32 %count.028, %conv
  tail call void @__free_pages(ptr noundef %add.ptr, i32 noundef 0)
  %inc = add i32 %pfn.addr.030, 1
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %for.end, label %for.body

for.end:                                          ; preds = %page_count.exit
  %cmp1.not = icmp eq i32 %add, 0
  br i1 %cmp1.not, label %if.end, label %do.end, !prof !582

do.end:                                           ; preds = %for.end
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 9337, i32 noundef 9, ptr noundef nonnull @.str.91, i32 noundef %add) #27
  br label %if.end

if.end:                                           ; preds = %do.end, %for.end, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @undo_isolate_page_range(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_contig_pages(i32 noundef %nr_pages, i32 noundef %gfp_mask, i32 noundef %nid, ptr noundef %nodemask) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %and.i = and i32 %gfp_mask, 15
  %shr2.i = lshr i32 59624, %and.i
  %and3.i = and i32 %shr2.i, 1
  %tobool.not.i65 = icmp eq i32 %and3.i, 0
  br i1 %tobool.not.i65, label %gfp_zone.exit, label %do.body6.i, !prof !582

do.body6.i:                                       ; preds = %entry
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/gfp.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 485, 0\0A.popsection", ""() #27, !srcloc !639
  unreachable

gfp_zone.exit:                                    ; preds = %entry
  %mul.i = shl nuw nsw i32 %and.i, 1
  %shr.i = lshr i32 19988769, %mul.i
  %and1.i = and i32 %shr.i, 3
  %tobool.not.i.i = icmp eq ptr %nodemask, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end.i.i, !prof !582

land.rhs.i.i:                                     ; preds = %gfp_zone.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1) to i32))
  %0 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1), align 4
  %cmp.not.i.i = icmp ugt i32 %0, %and1.i
  br i1 %cmp.not.i.i, label %if.end.i.i, label %first_zones_zonelist.exit, !prof !584

if.end.i.i:                                       ; preds = %land.rhs.i.i, %gfp_zone.exit
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), i32 noundef %and1.i, ptr noundef %nodemask) #27
  br label %first_zones_zonelist.exit

first_zones_zonelist.exit:                        ; preds = %if.end.i.i, %land.rhs.i.i
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), %land.rhs.i.i ]
  %1 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %zone.0108 = load ptr, ptr %retval.0.i.i, align 4
  %tobool.not109 = icmp eq ptr %zone.0108, null
  br i1 %tobool.not109, label %cleanup, label %do.body4.lr.ph

do.body4.lr.ph:                                   ; preds = %first_zones_zonelist.exit
  %sub = add i32 %nr_pages, -1
  %neg = sub i32 0, %nr_pages
  br label %do.body4

do.body4:                                         ; preds = %next_zones_zonelist.exit, %do.body4.lr.ph
  %zone.0111 = phi ptr [ %zone.0108, %do.body4.lr.ph ], [ %zone.0, %next_zones_zonelist.exit ]
  %z.0110 = phi ptr [ %retval.0.i.i, %do.body4.lr.ph ], [ %retval.0.i, %next_zones_zonelist.exit ]
  %lock = getelementptr inbounds %struct.zone, ptr %zone.0111, i32 0, i32 22
  %call6 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #27
  %zone_start_pfn = getelementptr inbounds %struct.zone, ptr %zone.0111, i32 0, i32 10
  %2 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %zone_start_pfn, align 4
  %add = add i32 %sub, %3
  %and = and i32 %add, %neg
  %sub.i99 = add i32 %sub, %and
  %cmp.not.i.i66100 = icmp ugt i32 %3, %sub.i99
  br i1 %cmp.not.i.i66100, label %gfp_zone.exit82, label %zone_spans_last_pfn.exit.lr.ph

zone_spans_last_pfn.exit.lr.ph:                   ; preds = %do.body4
  %spanned_pages.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.0111, i32 0, i32 12
  br label %zone_spans_last_pfn.exit

zone_spans_last_pfn.exit:                         ; preds = %if.end31, %zone_spans_last_pfn.exit.lr.ph
  %4 = phi i32 [ %3, %zone_spans_last_pfn.exit.lr.ph ], [ %21, %if.end31 ]
  %sub.i105 = phi i32 [ %sub.i99, %zone_spans_last_pfn.exit.lr.ph ], [ %sub.i, %if.end31 ]
  %pfn.0102 = phi i32 [ %and, %zone_spans_last_pfn.exit.lr.ph ], [ %add.i68, %if.end31 ]
  %flags.0101 = phi i32 [ %call6, %zone_spans_last_pfn.exit.lr.ph ], [ %flags.1, %if.end31 ]
  %5 = ptrtoint ptr %spanned_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %spanned_pages.i.i.i, align 4
  %add.i.i.i = add i32 %6, %4
  %cmp1.i.i = icmp ugt i32 %add.i.i.i, %sub.i105
  br i1 %cmp1.i.i, label %while.body, label %gfp_zone.exit82

while.body:                                       ; preds = %zone_spans_last_pfn.exit
  %add.i68 = add i32 %pfn.0102, %nr_pages
  %cmp26.i = icmp ugt i32 %add.i68, %pfn.0102
  br i1 %cmp26.i, label %for.body.i.preheader, label %if.then

for.body.i.preheader:                             ; preds = %while.body
  %call.i91 = tail call i32 @pfn_valid(i32 noundef %pfn.0102) #27
  %tobool.not.i6992 = icmp eq i32 %call.i91, 0
  br i1 %tobool.not.i6992, label %if.end31, label %if.end.i71.preheader

if.end.i71.preheader:                             ; preds = %for.body.i.preheader
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %7 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %8 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i70127 = sub i32 %pfn.0102, %8
  %add.ptr.i128 = getelementptr %struct.page, ptr %7, i32 %sub.i70127
  %tobool1.not.i129 = icmp eq ptr %add.ptr.i128, null
  br i1 %tobool1.not.i129, label %if.end31, label %if.end3.i

for.cond.i:                                       ; preds = %PageReserved.exit.i
  %inc.i = add i32 %i.027.i94130, 1
  %cmp.i = icmp ult i32 %inc.i, %add.i68
  %exitcond.not.i = icmp eq i32 %inc.i, %add.i68
  br i1 %exitcond.not.i, label %pfn_range_valid_contig.exit, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %call.i = tail call i32 @pfn_valid(i32 noundef %inc.i) #27
  %tobool.not.i69 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i69, label %pfn_range_valid_contig.exit, label %if.end.i71

if.end.i71:                                       ; preds = %for.body.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %9 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %10 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub.i70 = sub i32 %inc.i, %10
  %add.ptr.i = getelementptr %struct.page, ptr %9, i32 %sub.i70
  %tobool1.not.i = icmp eq ptr %add.ptr.i, null
  br i1 %tobool1.not.i, label %pfn_range_valid_contig.exit, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i71, %if.end.i71.preheader
  %add.ptr.i132 = phi ptr [ %add.ptr.i, %if.end.i71 ], [ %add.ptr.i128, %if.end.i71.preheader ]
  %cmp28.i93131 = phi i1 [ %cmp.i, %if.end.i71 ], [ true, %if.end.i71.preheader ]
  %i.027.i94130 = phi i32 [ %inc.i, %if.end.i71 ], [ %pfn.0102, %if.end.i71.preheader ]
  %11 = ptrtoint ptr %add.ptr.i132 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %add.ptr.i132, align 4
  %cmp.i.not.i.i.i = icmp eq i32 %12, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %page_zone.exit.i, !prof !584

if.then.i.i.i:                                    ; preds = %if.end3.i
  tail call void @dump_page(ptr noundef nonnull %add.ptr.i132, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit.i:                                 ; preds = %if.end3.i
  %shr.i.i20.i = lshr i32 %12, 30
  %arrayidx.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i20.i
  %cmp5.not.i = icmp eq ptr %arrayidx.i.i, %zone.0111
  br i1 %cmp5.not.i, label %if.end7.i, label %pfn_range_valid_contig.exit

if.end7.i:                                        ; preds = %page_zone.exit.i
  %13 = ptrtoint ptr %add.ptr.i132 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %add.ptr.i132, align 4
  %cmp.i.not.i.i = icmp eq i32 %14, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %PageReserved.exit.i, !prof !584

if.then.i.i:                                      ; preds = %if.end7.i
  tail call void @dump_page(ptr noundef nonnull %add.ptr.i132, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 440, 0\0A.popsection", ""() #27, !srcloc !658
  unreachable

PageReserved.exit.i:                              ; preds = %if.end7.i
  %15 = ptrtoint ptr %add.ptr.i132 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %add.ptr.i132, align 4
  %17 = and i32 %16, 4096
  %tobool9.not.i = icmp eq i32 %17, 0
  br i1 %tobool9.not.i, label %for.cond.i, label %pfn_range_valid_contig.exit

pfn_range_valid_contig.exit:                      ; preds = %PageReserved.exit.i, %page_zone.exit.i, %if.end.i71, %for.body.i, %for.cond.i
  %cmp.lcssa.i = phi i1 [ %cmp28.i93131, %PageReserved.exit.i ], [ %cmp28.i93131, %page_zone.exit.i ], [ %cmp.i, %if.end.i71 ], [ %cmp.i, %for.body.i ], [ %cmp.i, %for.cond.i ]
  br i1 %cmp.lcssa.i, label %if.end31, label %if.then

if.then:                                          ; preds = %pfn_range_valid_contig.exit, %while.body
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %flags.0101) #27
  %call.i73 = tail call i32 @alloc_contig_range(i32 noundef %pfn.0102, i32 noundef %add.i68, i32 noundef 1, i32 noundef %gfp_mask) #27
  %tobool14.not = icmp eq i32 %call.i73, 0
  br i1 %tobool14.not, label %if.then15, label %do.body18

if.then15:                                        ; preds = %if.then
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %18 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %19 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub16 = sub i32 %pfn.0102, %19
  %add.ptr = getelementptr %struct.page, ptr %18, i32 %sub16
  br label %cleanup

do.body18:                                        ; preds = %if.then
  %call26 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #27
  br label %if.end31

if.end31:                                         ; preds = %do.body18, %pfn_range_valid_contig.exit, %if.end.i71.preheader, %for.body.i.preheader
  %flags.1 = phi i32 [ %call26, %do.body18 ], [ %flags.0101, %pfn_range_valid_contig.exit ], [ %flags.0101, %for.body.i.preheader ], [ %flags.0101, %if.end.i71.preheader ]
  %sub.i = add i32 %sub, %add.i68
  %20 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %zone_start_pfn, align 4
  %cmp.not.i.i66 = icmp ugt i32 %21, %sub.i
  br i1 %cmp.not.i.i66, label %gfp_zone.exit82, label %zone_spans_last_pfn.exit

gfp_zone.exit82:                                  ; preds = %if.end31, %zone_spans_last_pfn.exit, %do.body4
  %flags.0.lcssa = phi i32 [ %call6, %do.body4 ], [ %flags.1, %if.end31 ], [ %flags.0101, %zone_spans_last_pfn.exit ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %flags.0.lcssa) #27
  %incdec.ptr = getelementptr %struct.zoneref, ptr %z.0110, i32 1
  br i1 %tobool.not.i.i, label %land.rhs.i, label %if.end.i, !prof !582

land.rhs.i:                                       ; preds = %gfp_zone.exit82
  %zone_idx.i.i = getelementptr %struct.zoneref, ptr %z.0110, i32 1, i32 1
  %22 = ptrtoint ptr %zone_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %zone_idx.i.i, align 4
  %cmp.not.i = icmp ugt i32 %23, %and1.i
  br i1 %cmp.not.i, label %if.end.i, label %next_zones_zonelist.exit, !prof !584

if.end.i:                                         ; preds = %land.rhs.i, %gfp_zone.exit82
  %call3.i = tail call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr, i32 noundef %and1.i, ptr noundef %nodemask) #27
  br label %next_zones_zonelist.exit

next_zones_zonelist.exit:                         ; preds = %if.end.i, %land.rhs.i
  %retval.0.i = phi ptr [ %call3.i, %if.end.i ], [ %incdec.ptr, %land.rhs.i ]
  %24 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %zone.0 = load ptr, ptr %retval.0.i, align 4
  %tobool.not = icmp eq ptr %zone.0, null
  br i1 %tobool.not, label %cleanup, label %do.body4

cleanup:                                          ; preds = %next_zones_zonelist.exit, %if.then15, %first_zones_zonelist.exit
  %retval.0 = phi ptr [ %add.ptr, %if.then15 ], [ null, %first_zones_zonelist.exit ], [ null, %next_zones_zonelist.exit ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @zone_pcp_disable(ptr noundef %zone) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @pcp_batch_high_lock, i32 noundef 0) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #30
  %cmp5.i = icmp ult i32 %call4.i, %0
  br i1 %cmp5.i, label %do.body.lr.ph.i, label %__zone_set_pageset_high_and_batch.exit

do.body.lr.ph.i:                                  ; preds = %entry
  %per_cpu_pageset.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 5
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %do.body.lr.ph.i
  %call6.i = phi i32 [ %call4.i, %do.body.lr.ph.i ], [ %call.i, %do.body.i ]
  %1 = ptrtoint ptr %per_cpu_pageset.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %per_cpu_pageset.i, align 8
  %3 = ptrtoint ptr %2 to i32
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call6.i
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %5, %3
  %6 = inttoptr i32 %add.i to ptr
  %batch3.i.i = getelementptr inbounds %struct.per_cpu_pages, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %batch3.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 1, ptr %batch3.i.i, align 4
  %high10.i.i = getelementptr inbounds %struct.per_cpu_pages, ptr %6, i32 0, i32 1
  %8 = ptrtoint ptr %high10.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 0, ptr %high10.i.i, align 4
  %call.i = tail call i32 @cpumask_next(i32 noundef %call6.i, ptr noundef nonnull @__cpu_possible_mask) #30
  %cmp.i = icmp ult i32 %call.i, %0
  br i1 %cmp.i, label %do.body.i, label %__zone_set_pageset_high_and_batch.exit

__zone_set_pageset_high_and_batch.exit:           ; preds = %do.body.i, %entry
  tail call fastcc void @__drain_all_pages(ptr noundef %zone, i1 noundef zeroext true)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @zone_pcp_enable(ptr nocapture noundef readonly %zone) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %pageset_high = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 7
  %0 = ptrtoint ptr %pageset_high to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pageset_high, align 16
  %pageset_batch = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 8
  %2 = ptrtoint ptr %pageset_batch to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pageset_batch, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #30
  %cmp5.i = icmp ult i32 %call4.i, %4
  br i1 %cmp5.i, label %do.body.lr.ph.i, label %__zone_set_pageset_high_and_batch.exit

do.body.lr.ph.i:                                  ; preds = %entry
  %per_cpu_pageset.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 5
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %do.body.lr.ph.i
  %call6.i = phi i32 [ %call4.i, %do.body.lr.ph.i ], [ %call.i, %do.body.i ]
  %5 = ptrtoint ptr %per_cpu_pageset.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %per_cpu_pageset.i, align 8
  %7 = ptrtoint ptr %6 to i32
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call6.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %9, %7
  %10 = inttoptr i32 %add.i to ptr
  %batch3.i.i = getelementptr inbounds %struct.per_cpu_pages, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %batch3.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 %3, ptr %batch3.i.i, align 4
  %high10.i.i = getelementptr inbounds %struct.per_cpu_pages, ptr %10, i32 0, i32 1
  %12 = ptrtoint ptr %high10.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 %1, ptr %high10.i.i, align 4
  %call.i = tail call i32 @cpumask_next(i32 noundef %call6.i, ptr noundef nonnull @__cpu_possible_mask) #30
  %cmp.i = icmp ult i32 %call.i, %4
  br i1 %cmp.i, label %do.body.i, label %__zone_set_pageset_high_and_batch.exit

__zone_set_pageset_high_and_batch.exit:           ; preds = %do.body.i, %entry
  tail call void @mutex_unlock(ptr noundef nonnull @pcp_batch_high_lock) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @zone_pcp_reset(ptr noundef %zone) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %per_cpu_pageset = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 5
  %0 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %per_cpu_pageset, align 8
  %cmp.not = icmp eq ptr %1, @boot_pageset
  br i1 %cmp.not, label %if.end, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %call15 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %cmp116 = icmp ult i32 %call15, %2
  br i1 %cmp116, label %do.body.lr.ph, label %for.end

do.body.lr.ph:                                    ; preds = %for.cond.preheader
  %per_cpu_zonestats = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 6
  br label %do.body

do.body:                                          ; preds = %do.body, %do.body.lr.ph
  %call17 = phi i32 [ %call15, %do.body.lr.ph ], [ %call, %do.body ]
  %3 = ptrtoint ptr %per_cpu_zonestats to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %per_cpu_zonestats, align 4
  %5 = ptrtoint ptr %4 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call17
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %add = add i32 %7, %5
  %8 = inttoptr i32 %add to ptr
  tail call void @drain_zonestat(ptr noundef %zone, ptr noundef %8) #27
  %call = tail call i32 @cpumask_next(i32 noundef %call17, ptr noundef nonnull @__cpu_online_mask) #30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %cmp1 = icmp ult i32 %call, %9
  br i1 %cmp1, label %do.body, label %for.end

for.end:                                          ; preds = %do.body, %for.cond.preheader
  %10 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %per_cpu_pageset, align 8
  tail call void @free_percpu(ptr noundef %11) #27
  %per_cpu_zonestats4 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 6
  %12 = ptrtoint ptr %per_cpu_zonestats4 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %per_cpu_zonestats4, align 4
  tail call void @free_percpu(ptr noundef %13) #27
  %14 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @boot_pageset, ptr %per_cpu_pageset, align 8
  %15 = ptrtoint ptr %per_cpu_zonestats4 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @boot_zonestats, ptr %per_cpu_zonestats4, align 4
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @drain_zonestat(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @is_free_buddy_page(ptr noundef %page) local_unnamed_addr #9 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %sub.ptr.div, %1
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %cmp15 = phi i1 [ true, %entry ], [ %cmp, %for.inc ]
  %order.013 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %notmask = shl nsw i32 -1, %order.013
  %sub = xor i32 %notmask, -1
  %and = and i32 %add, %sub
  %idx.neg = sub i32 0, %and
  %2 = getelementptr %struct.page, ptr %page, i32 %idx.neg, i32 2
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %2, align 4
  %and.i = and i32 %4, -268435328
  %cmp.i.not = icmp eq i32 %and.i, -268435456
  br i1 %cmp.i.not, label %do.end, label %for.inc

do.end:                                           ; preds = %for.body
  %private = getelementptr %struct.page, ptr %page, i32 %idx.neg, i32 1, i32 0, i32 3
  %5 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %private, align 4
  %cmp1.not = icmp ult i32 %6, %order.013
  br i1 %cmp1.not, label %for.inc, label %for.end

for.inc:                                          ; preds = %do.end, %for.body
  %inc = add nuw nsw i32 %order.013, 1
  %cmp = icmp ult i32 %order.013, 11
  %exitcond.not = icmp eq i32 %inc, 12
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %do.end
  %cmp.lcssa = phi i1 [ %cmp15, %do.end ], [ %cmp, %for.inc ]
  ret i1 %cmp.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtobool(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mem_cgroup_uncharge(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_set(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_page_free(ptr noundef %page, i32 noundef %order) unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_free, i32 0, i32 1), ptr blockaddress(@trace_mm_page_free, %do.body)) #27
          to label %if.end48 [label %do.body], !srcloc !583

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !660
  %call42 = tail call i32 @__traceiter_mm_page_free(ptr noundef null, ptr noundef %page, i32 noundef %order) #27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !661
  %13 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !582

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !619
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_free, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_free, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #27
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #27
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_page_free.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_mm_page_free.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.98, i32 noundef 180, ptr noundef nonnull @.str.99) #27
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !620
  %31 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__memcg_kmem_uncharge_page(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @free_tail_pages_check(ptr noundef %head_page, ptr noundef %page) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %head_page to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  switch i32 %sub.ptr.div, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.epilog
  ]

sw.bb:                                            ; preds = %entry
  %0 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %page, align 4
  %2 = and i32 %1, 65536
  %tobool.not.i.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %do.end7.i

PageCompound.exit.i:                              ; preds = %sw.bb
  %3 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i.i = and i32 %5, 1
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.end7.i, !prof !584

if.then.i:                                        ; preds = %PageCompound.exit.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.107) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 789, 0\0A.popsection", ""() #27, !srcloc !662
  unreachable

do.end7.i:                                        ; preds = %PageCompound.exit.i, %sw.bb
  %6 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %6, align 4
  %and.i.i = and i32 %8, 1
  %tobool.not.i13.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i13.i, label %compound_mapcount.exit, label %if.then.i.i, !prof !582

if.then.i.i:                                      ; preds = %do.end7.i
  %sub.i.i = add i32 %8, -1
  br label %compound_mapcount.exit

compound_mapcount.exit:                           ; preds = %if.then.i.i, %do.end7.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %sub.ptr.lhs.cast, %do.end7.i ]
  %9 = inttoptr i32 %retval.0.i.i to ptr
  %compound_mapcount.i.i.i = getelementptr %struct.page, ptr %9, i32 1, i32 1, i32 0, i32 1
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %compound_mapcount.i.i.i, i32 noundef 4) #27
  %10 = ptrtoint ptr %compound_mapcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %compound_mapcount.i.i.i, align 4
  %tobool.not = icmp eq i32 %11, -1
  br i1 %tobool.not, label %sw.epilog, label %out.sink.split, !prof !582

sw.default:                                       ; preds = %entry
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %12 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mapping, align 4
  %cmp.not = icmp eq ptr %13, inttoptr (i32 1024 to ptr)
  br i1 %cmp.not, label %sw.epilog, label %out.sink.split

sw.epilog:                                        ; preds = %sw.default, %compound_mapcount.exit, %entry
  %14 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and.i = and i32 %16, 1
  %tobool6.not = icmp eq i32 %and.i, 0
  br i1 %tobool6.not, label %out.sink.split, label %if.end16, !prof !584

if.end16:                                         ; preds = %sw.epilog
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %14, align 4
  %and.i39 = and i32 %18, 1
  %tobool.not.i40 = icmp eq i32 %and.i39, 0
  br i1 %tobool.not.i40, label %_compound_head.exit, label %if.then.i41, !prof !582

if.then.i41:                                      ; preds = %if.end16
  %sub.i = add i32 %18, -1
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.then.i41, %if.end16
  %retval.0.i = phi i32 [ %sub.i, %if.then.i41 ], [ %sub.ptr.lhs.cast, %if.end16 ]
  %19 = inttoptr i32 %retval.0.i to ptr
  %cmp18.not = icmp eq ptr %19, %head_page
  br i1 %cmp18.not, label %out, label %out.sink.split, !prof !582

out.sink.split:                                   ; preds = %_compound_head.exit, %sw.epilog, %sw.default, %compound_mapcount.exit
  %.str.106.sink = phi ptr [ @.str.103, %compound_mapcount.exit ], [ @.str.104, %sw.default ], [ @.str.105, %sw.epilog ], [ @.str.106, %_compound_head.exit ]
  tail call fastcc void @bad_page(ptr noundef %page, ptr noundef nonnull %.str.106.sink)
  br label %out

out:                                              ; preds = %out.sink.split, %_compound_head.exit
  %ret.0 = phi i32 [ 0, %_compound_head.exit ], [ 1, %out.sink.split ]
  %mapping27 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %20 = ptrtoint ptr %mapping27 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %mapping27, align 4
  %21 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 0, ptr %21, align 4
  ret i32 %ret.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @check_free_page(ptr noundef %page) unnamed_addr #5 align 64 {
entry:
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %0, i32 noundef 4) #27
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %cmp.not.i = icmp eq i32 %2, -1
  br i1 %cmp.not.i, label %page_expected_state.exit, label %if.end, !prof !582

page_expected_state.exit:                         ; preds = %entry
  %mapping.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %3 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mapping.i, align 4
  %5 = ptrtoint ptr %4 to i32
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %6 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %_refcount.i.i, align 4
  %or.i = or i32 %7, %5
  %memcg_data.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 4
  %8 = ptrtoint ptr %memcg_data.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %memcg_data.i, align 4
  %or3.i = or i32 %or.i, %9
  %10 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %page, align 4
  %and.i = and i32 %11, 3207729
  %or4.i = or i32 %or3.i, %and.i
  %tobool5.not.i = icmp eq i32 %or4.i, 0
  br i1 %tobool5.not.i, label %return, label %if.end, !prof !582

if.end:                                           ; preds = %page_expected_state.exit, %entry
  tail call fastcc void @check_free_page_bad(ptr noundef %page)
  br label %return

return:                                           ; preds = %if.end, %page_expected_state.exit
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %page_expected_state.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_check_no_locks_freed(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_check_no_obj_freed(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mm_page_free(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__reset_page_owner(ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @bad_page(ptr noundef %page, ptr noundef %reason) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @bad_page.nr_shown, align 4
  %cmp = icmp eq i32 %0, 60
  br i1 %cmp, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %1 = load volatile i32, ptr @jiffies, align 128
  %2 = load i32, ptr @bad_page.resume, align 4
  %sub = sub i32 %1, %2
  %cmp1 = icmp slt i32 %sub, 0
  %3 = load i32, ptr @bad_page.nr_unshown, align 4
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %inc = add i32 %3, 1
  store i32 %inc, ptr @bad_page.nr_unshown, align 4
  br label %out

if.end:                                           ; preds = %if.then
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.end5.thread, label %do.end

do.end:                                           ; preds = %if.end
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, i32 noundef %3) #29
  store i32 0, ptr @bad_page.nr_unshown, align 4
  br label %if.end5.thread

if.end5.thread:                                   ; preds = %do.end, %if.end
  store i32 1, ptr @bad_page.nr_shown, align 4
  br label %if.then8

if.end5:                                          ; preds = %entry
  %inc6 = add i32 %0, 1
  store i32 %inc6, ptr @bad_page.nr_shown, align 4
  %cmp7 = icmp eq i32 %0, 0
  br i1 %cmp7, label %if.then8, label %do.end11

if.then8:                                         ; preds = %if.end5, %if.end5.thread
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %4, 6000
  store i32 %add, ptr @bad_page.resume, align 4
  br label %do.end11

do.end11:                                         ; preds = %if.then8, %if.end5
  %5 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 101
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %9 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %9 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %10 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add14 = add i32 %sub.ptr.div, %10
  %call15 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.111, ptr noundef %comm, i32 noundef %add14) #29
  tail call void @dump_page(ptr noundef %page, ptr noundef %reason) #27
  tail call void @print_modules() #27
  tail call void @dump_stack() #29
  br label %out

out:                                              ; preds = %do.end11, %if.then2
  %11 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %11, i32 noundef 4) #27
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 -1, ptr %11, align 4
  tail call void @add_taint(i32 noundef 5, i32 noundef 1) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @print_modules() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_taint(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @check_free_page_bad(ptr noundef %page) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %0, i32 noundef 4) #27
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %cmp.not.i = icmp eq i32 %2, -1
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %entry
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry
  %bad_reason.0.i = phi ptr [ @.str.113, %if.then.i ], [ null, %entry ]
  %mapping.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %3 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mapping.i, align 4
  %cmp2.not.i = icmp eq ptr %4, null
  br i1 %cmp2.not.i, label %if.end10.i, label %if.then9.i, !prof !582

if.then9.i:                                       ; preds = %if.end.i
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then9.i, %if.end.i
  %bad_reason.1.i = phi ptr [ @.str.114, %if.then9.i ], [ %bad_reason.0.i, %if.end.i ]
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #27
  %5 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i, align 4
  %cmp12.not.i = icmp eq i32 %6, 0
  br i1 %cmp12.not.i, label %if.end20.i, label %if.then19.i, !prof !582

if.then19.i:                                      ; preds = %if.end10.i
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.end10.i
  %bad_reason.2.i = phi ptr [ @.str.115, %if.then19.i ], [ %bad_reason.1.i, %if.end10.i ]
  %7 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %page, align 4
  %and.i = and i32 %8, 3207729
  %tobool22.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool22.not.i, label %if.end33.i, label %if.then29.i, !prof !582

if.then29.i:                                      ; preds = %if.end20.i
  br label %if.end33.i

if.end33.i:                                       ; preds = %if.then29.i, %if.end20.i
  %bad_reason.3.i = phi ptr [ %bad_reason.2.i, %if.end20.i ], [ @.str.117, %if.then29.i ]
  %memcg_data.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 4
  %9 = ptrtoint ptr %memcg_data.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %memcg_data.i, align 4
  %tobool34.not.i = icmp eq i32 %10, 0
  br i1 %tobool34.not.i, label %page_bad_reason.exit, label %if.then41.i, !prof !582

if.then41.i:                                      ; preds = %if.end33.i
  br label %page_bad_reason.exit

page_bad_reason.exit:                             ; preds = %if.then41.i, %if.end33.i
  %bad_reason.4.i = phi ptr [ @.str.118, %if.then41.i ], [ %bad_reason.3.i, %if.end33.i ]
  tail call fastcc void @bad_page(ptr noundef %page, ptr noundef %bad_reason.4.i)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kernel_poison_pages(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kasan_poison_pages(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__shuffle_free_memory(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kernel_unpoison_pages(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kasan_unpoison_pages(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kasan_disable_current() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kasan_enable_current() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmap_local_page_prot(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_local_indexed(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__set_page_owner(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #24

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_pcppages_bulk(ptr noundef %zone, i32 noundef %count, ptr noundef %pcp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %head = alloca %struct.list_head, align 4
  %batch = getelementptr inbounds %struct.per_cpu_pages, ptr %pcp, i32 0, i32 2
  %0 = ptrtoint ptr %batch to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %batch, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %head) #27
  %2 = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %3 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %head, ptr %head, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %head, ptr %2, align 4
  %5 = ptrtoint ptr %pcp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pcp, align 4
  %7 = call i32 @llvm.smin.i32(i32 %6, i32 %count)
  %cmp4144 = icmp sgt i32 %7, 0
  br i1 %cmp4144, label %do.body5.preheader, label %while.end

do.body5.preheader:                               ; preds = %do.end36, %entry
  %count.addr.0149 = phi i32 [ %sub.lcssa, %do.end36 ], [ %7, %entry ]
  %pindex.0148 = phi i32 [ %spec.store.select, %do.end36 ], [ 0, %entry ]
  %batch_free.0147 = phi i32 [ %dec32, %do.end36 ], [ 0, %entry ]
  %nr_freed.0146 = phi i32 [ %add.lcssa, %do.end36 ], [ 0, %entry ]
  %prefetch_nr.0145 = phi i32 [ %prefetch_nr.2, %do.end36 ], [ %1, %entry ]
  br label %do.body5

do.body5:                                         ; preds = %do.body5, %do.body5.preheader
  %batch_free.1 = phi i32 [ %inc, %do.body5 ], [ %batch_free.0147, %do.body5.preheader ]
  %pindex.1 = phi i32 [ %spec.store.select, %do.body5 ], [ %pindex.0148, %do.body5.preheader ]
  %inc = add i32 %batch_free.1, 1
  %inc6 = add i32 %pindex.1, 1
  %cmp7 = icmp eq i32 %inc6, 12
  %spec.store.select = select i1 %cmp7, i32 0, i32 %inc6
  %arrayidx = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 %spec.store.select
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %arrayidx, align 4
  %cmp.i.not = icmp eq ptr %9, %arrayidx
  br i1 %cmp.i.not, label %do.body5, label %do.end9

do.end9:                                          ; preds = %do.body5
  %cmp.i135 = icmp ugt i32 %spec.store.select, 11
  br i1 %cmp.i135, label %do.body2.i, label %pindex_to_order.exit, !prof !584

do.body2.i:                                       ; preds = %do.end9
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 686, 0\0A.popsection", ""() #27, !srcloc !663
  unreachable

pindex_to_order.exit:                             ; preds = %do.end9
  %cmp10 = icmp eq i32 %inc, 12
  %spec.select = select i1 %cmp10, i32 %count.addr.0149, i32 %inc
  %div.lhs.trunc.i = trunc i32 %spec.store.select to i8
  %div9.i = udiv i8 %div.lhs.trunc.i, 3
  %div.zext.i = zext i8 %div9.i to i32
  %prev18 = getelementptr %struct.per_cpu_pages, ptr %pcp, i32 0, i32 4, i32 %spec.store.select, i32 1
  %shl = shl nuw nsw i32 1, %div.zext.i
  %10 = shl i32 %spec.select, %div.zext.i
  %11 = add i32 %nr_freed.0146, %10
  %12 = sub i32 %count.addr.0149, %10
  br label %do.body17

do.body17:                                        ; preds = %land.rhs, %pindex_to_order.exit
  %prefetch_nr.1 = phi i32 [ %prefetch_nr.0145, %pindex_to_order.exit ], [ %prefetch_nr.2, %land.rhs ]
  %nr_freed.1 = phi i32 [ %nr_freed.0146, %pindex_to_order.exit ], [ %add, %land.rhs ]
  %batch_free.3 = phi i32 [ %spec.select, %pindex_to_order.exit ], [ %dec32, %land.rhs ]
  %count.addr.1 = phi i32 [ %count.addr.0149, %pindex_to_order.exit ], [ %sub, %land.rhs ]
  %13 = ptrtoint ptr %prev18 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev18, align 4
  %add.ptr = getelementptr i8, ptr %14, i32 -4
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %14) #27
  br i1 %call.i.i, label %if.end.i.i, label %list_del.exit

if.end.i.i:                                       ; preds = %do.body17
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i, align 4
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %14, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %do.body17
  %21 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 256 to ptr), ptr %14, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %add = add i32 %nr_freed.1, %shl
  %sub = sub i32 %count.addr.1, %shl
  %index = getelementptr inbounds %struct.anon.8, ptr %14, i32 0, i32 2
  %23 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %index, align 4
  %shl24 = shl i32 %24, 8
  %or = or i32 %shl24, %div.zext.i
  store i32 %or, ptr %index, align 4
  %25 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %2, align 4
  %call.i.i137 = call zeroext i1 @__list_add_valid(ptr noundef %14, ptr noundef %26, ptr noundef nonnull %head) #27
  br i1 %call.i.i137, label %if.end.i.i138, label %list_add_tail.exit

if.end.i.i138:                                    ; preds = %list_del.exit
  %27 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %14, ptr %2, align 4
  %28 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %head, ptr %14, align 4
  %29 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %26, ptr %prev.i, align 4
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %14, ptr %26, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i138, %list_del.exit
  %tobool27.not = icmp eq i32 %prefetch_nr.1, 0
  br i1 %tobool27.not, label %do.cond30, label %if.then28

if.then28:                                        ; preds = %list_add_tail.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %31 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %31 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %32 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i = add i32 %sub.ptr.div.i, %32
  %xor.i.i = xor i32 %add.i, 1
  %sub.i = sub i32 %xor.i.i, %add.i
  %add.ptr.i = getelementptr %struct.page, ptr %add.ptr, i32 %sub.i
  call void asm sideeffect "pld\09${0:a}", "r"(ptr %add.ptr.i) #27, !srcloc !664
  %dec = add i32 %prefetch_nr.1, -1
  br label %do.cond30

do.cond30:                                        ; preds = %if.then28, %list_add_tail.exit
  %prefetch_nr.2 = phi i32 [ %dec, %if.then28 ], [ 0, %list_add_tail.exit ]
  %cmp31 = icmp sgt i32 %sub, 0
  br i1 %cmp31, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %do.cond30
  %dec32 = add i32 %batch_free.3, -1
  %tobool33.not = icmp eq i32 %dec32, 0
  br i1 %tobool33.not, label %do.end36, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %33 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %arrayidx, align 4
  %cmp.i139.not = icmp eq ptr %34, %arrayidx
  br i1 %cmp.i139.not, label %do.end36, label %do.body17

do.end36:                                         ; preds = %land.rhs, %land.lhs.true
  %add.lcssa = phi i32 [ %11, %land.lhs.true ], [ %add, %land.rhs ]
  %sub.lcssa = phi i32 [ %12, %land.lhs.true ], [ %sub, %land.rhs ]
  %cmp4 = icmp sgt i32 %sub.lcssa, 0
  br i1 %cmp4, label %do.body5.preheader, label %while.end

while.end:                                        ; preds = %do.end36, %do.cond30, %entry
  %nr_freed.0.lcssa = phi i32 [ 0, %entry ], [ %add, %do.cond30 ], [ %add.lcssa, %do.end36 ]
  %35 = ptrtoint ptr %pcp to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %pcp, align 4
  %sub38 = sub i32 %36, %nr_freed.0.lcssa
  store i32 %sub38, ptr %pcp, align 4
  %lock = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 22
  call void @_raw_spin_lock(ptr noundef %lock) #27
  %nr_isolate_pageblock.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 16
  %37 = ptrtoint ptr %nr_isolate_pageblock.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %nr_isolate_pageblock.i, align 4
  %tobool.i.not = icmp eq i32 %38, 0
  %39 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %head, align 4
  %cmp50.not152 = icmp eq ptr %40, %head
  br i1 %cmp50.not152, label %for.end, label %for.body

for.body:                                         ; preds = %if.end78, %while.end
  %.pn.in153 = phi ptr [ %.pn156, %if.end78 ], [ %40, %while.end ]
  %page.0154 = getelementptr i8, ptr %.pn.in153, i32 -4
  %41 = ptrtoint ptr %.pn.in153 to i32
  call void @__asan_load4_noabort(i32 %41)
  %.pn156 = load ptr, ptr %.pn.in153, align 4
  %index.i = getelementptr i8, ptr %.pn.in153, i32 12
  %42 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %index.i, align 4
  %and = and i32 %43, 255
  %shr = ashr i32 %43, 8
  %cmp.i141 = icmp eq i32 %shr, 5
  br i1 %cmp.i141, label %if.then58, label %do.end67, !prof !584

if.then58:                                        ; preds = %for.body
  call void @dump_page(ptr noundef %page.0154, ptr noundef nonnull @.str.122) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1541, 0\0A.popsection", ""() #27, !srcloc !665
  unreachable

do.end67:                                         ; preds = %for.body
  br i1 %tobool.i.not, label %do.end67.if.end78_crit_edge, label %if.then75, !prof !582

do.end67.if.end78_crit_edge:                      ; preds = %do.end67
  %.pre = ptrtoint ptr %page.0154 to i32
  br label %if.end78

if.then75:                                        ; preds = %do.end67
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %44 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page.0154 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %44 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %45 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add76 = add i32 %sub.ptr.div, %45
  %call77 = call i32 @get_pfnblock_flags_mask(ptr noundef %page.0154, i32 noundef %add76, i32 noundef 7)
  br label %if.end78

if.end78:                                         ; preds = %if.then75, %do.end67.if.end78_crit_edge
  %sub.ptr.lhs.cast79.pre-phi = phi i32 [ %.pre, %do.end67.if.end78_crit_edge ], [ %sub.ptr.lhs.cast, %if.then75 ]
  %mt.0 = phi i32 [ %shr, %do.end67.if.end78_crit_edge ], [ %call77, %if.then75 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %46 = load ptr, ptr @mem_map, align 4
  %sub.ptr.rhs.cast80 = ptrtoint ptr %46 to i32
  %sub.ptr.sub81 = sub i32 %sub.ptr.lhs.cast79.pre-phi, %sub.ptr.rhs.cast80
  %sub.ptr.div82 = sdiv exact i32 %sub.ptr.sub81, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %47 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add83 = add i32 %sub.ptr.div82, %47
  call fastcc void @__free_one_page(ptr noundef %page.0154, i32 noundef %add83, ptr noundef %zone, i32 noundef %and, i32 noundef %mt.0, i32 noundef 0)
  call fastcc void @trace_mm_page_pcpu_drain(ptr noundef %page.0154, i32 noundef %and, i32 noundef %mt.0)
  %cmp50.not = icmp eq ptr %.pn156, %head
  br i1 %cmp50.not, label %for.end, label %for.body

for.end:                                          ; preds = %if.end78, %while.end
  call void @_raw_spin_unlock(ptr noundef %lock) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %head) #27
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_page_pcpu_drain(ptr noundef %page, i32 noundef %order, i32 noundef %migratetype) unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_pcpu_drain, i32 0, i32 1), ptr blockaddress(@trace_mm_page_pcpu_drain, %do.body)) #27
          to label %if.end48 [label %do.body], !srcloc !583

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !666
  %call42 = tail call i32 @__traceiter_mm_page_pcpu_drain(ptr noundef null, ptr noundef %page, i32 noundef %order, i32 noundef %migratetype) #27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !667
  %13 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !582

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !619
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_pcpu_drain, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_pcpu_drain, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #27
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #27
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_page_pcpu_drain.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_mm_page_pcpu_drain.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.98, i32 noundef 284, ptr noundef nonnull @.str.99) #27
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !620
  %31 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mm_page_pcpu_drain(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @drain_local_pages_wq(ptr nocapture noundef readonly %work) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -4
  tail call void @migrate_disable() #27
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %cpu1.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %cpu1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu1.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  tail call fastcc void @drain_pages_zone(i32 noundef %5, ptr noundef nonnull %1) #27
  br label %drain_local_pages.exit

if.else.i:                                        ; preds = %entry
  %call.i.i = tail call ptr @first_online_pgdat() #27
  %tobool.not6.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not6.i.i, label %drain_local_pages.exit, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.else.i
  %zone.07.i.i = phi ptr [ %call2.i.i, %for.inc.i.i ], [ %call.i.i, %if.else.i ]
  %present_pages.i.i.i = getelementptr inbounds %struct.zone, ptr %zone.07.i.i, i32 0, i32 13
  %6 = ptrtoint ptr %present_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %present_pages.i.i.i, align 8
  %tobool.i.not.i.i = icmp eq i32 %7, 0
  br i1 %tobool.i.not.i.i, label %for.inc.i.i, label %if.else.i.i

if.else.i.i:                                      ; preds = %for.body.i.i
  tail call fastcc void @drain_pages_zone(i32 noundef %5, ptr noundef nonnull %zone.07.i.i) #27
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.else.i.i, %for.body.i.i
  %call2.i.i = tail call ptr @next_zone(ptr noundef nonnull %zone.07.i.i) #27
  %tobool.not.i.i = icmp eq ptr %call2.i.i, null
  br i1 %tobool.not.i.i, label %drain_local_pages.exit, label %for.body.i.i

drain_local_pages.exit:                           ; preds = %for.inc.i.i, %if.else.i, %if.then.i
  tail call void @migrate_enable() #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_work(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_disable() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_enable() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @touch_softlockup_watchdog() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @free_pcp_prepare(ptr noundef %page, i32 noundef %order) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.end10.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %entry
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.96) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1301, 0\0A.popsection", ""() #27, !srcloc !599
  unreachable

do.end10.i:                                       ; preds = %entry
  tail call fastcc void @trace_mm_page_free(ptr noundef %page, i32 noundef %order) #27
  %tobool27.not.i = icmp eq i32 %order, 0
  br i1 %tobool27.not.i, label %if.end81.i, label %if.then34.i, !prof !582

if.then34.i:                                      ; preds = %do.end10.i
  %3 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %page, align 4
  %5 = and i32 %4, 65536
  %tobool.not.i.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %land.rhs.i

PageCompound.exit.i:                              ; preds = %if.then34.i
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %7, 1
  %tobool36.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool36.not.i, label %if.end61.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %PageCompound.exit.i, %if.then34.i
  %call41.i = tail call fastcc i32 @compound_order(ptr noundef %page) #27
  %cmp.not.i = icmp eq i32 %call41.i, %order
  br i1 %cmp.not.i, label %if.end61.i, label %if.then49.i, !prof !582

if.then49.i:                                      ; preds = %land.rhs.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.97) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/page_alloc.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1325, 0\0A.popsection", ""() #27, !srcloc !600
  unreachable

if.end61.i:                                       ; preds = %land.rhs.i, %PageCompound.exit.i
  %tobool36.not14.i = phi i1 [ true, %PageCompound.exit.i ], [ false, %land.rhs.i ]
  %shl.i = shl nuw i32 1, %order
  %cmp6221.i = icmp sgt i32 %shl.i, 1
  br i1 %cmp6221.i, label %for.body.i, label %if.end81.i

for.body.i:                                       ; preds = %for.inc.i, %if.end61.i
  %i.023.i = phi i32 [ %inc80.i, %for.inc.i ], [ 1, %if.end61.i ]
  %bad.022.i = phi i32 [ %bad.2.i, %for.inc.i ], [ 0, %if.end61.i ]
  br i1 %tobool36.not14.i, label %if.end67.i, label %if.then65.i

if.then65.i:                                      ; preds = %for.body.i
  %add.ptr.i = getelementptr %struct.page, ptr %page, i32 %i.023.i
  %call66.i = tail call fastcc i32 @free_tail_pages_check(ptr noundef %page, ptr noundef %add.ptr.i) #27
  %add.i = add i32 %call66.i, %bad.022.i
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.then65.i, %for.body.i
  %bad.1.i = phi i32 [ %add.i, %if.then65.i ], [ %bad.022.i, %for.body.i ]
  %add.ptr68.i = getelementptr %struct.page, ptr %page, i32 %i.023.i
  %call69.i = tail call fastcc i32 @check_free_page(ptr noundef %add.ptr68.i) #27
  %tobool70.not.i = icmp eq i32 %call69.i, 0
  br i1 %tobool70.not.i, label %if.end78.i, label %if.then77.i, !prof !582

if.then77.i:                                      ; preds = %if.end67.i
  %inc.i = add i32 %bad.1.i, 1
  br label %for.inc.i

if.end78.i:                                       ; preds = %if.end67.i
  %8 = ptrtoint ptr %add.ptr68.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %add.ptr68.i, align 4
  %and.i = and i32 %9, -4194304
  store i32 %and.i, ptr %add.ptr68.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end78.i, %if.then77.i
  %bad.2.i = phi i32 [ %inc.i, %if.then77.i ], [ %bad.1.i, %if.end78.i ]
  %inc80.i = add nuw nsw i32 %i.023.i, 1
  %exitcond.not.i = icmp eq i32 %inc80.i, %shl.i
  br i1 %exitcond.not.i, label %if.end81.i, label %for.body.i

if.end81.i:                                       ; preds = %for.inc.i, %if.end61.i, %do.end10.i
  %bad.3.i = phi i32 [ 0, %do.end10.i ], [ 0, %if.end61.i ], [ %bad.2.i, %for.inc.i ]
  %mapping.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %10 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mapping.i.i, align 4
  %12 = ptrtoint ptr %11 to i32
  %and.i1.i = and i32 %12, 3
  %cmp.i.not.i = icmp eq i32 %and.i1.i, 0
  br i1 %cmp.i.not.i, label %if.end85.i, label %if.then84.i

if.then84.i:                                      ; preds = %if.end81.i
  %13 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %mapping.i.i, align 4
  br label %if.end85.i

if.end85.i:                                       ; preds = %if.then84.i, %if.end81.i
  callbr void asm sideeffect "1:\0A\09b ${1:l}\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memcg_kmem_enabled_key, i32 1), ptr blockaddress(@free_pcp_prepare, %if.then94.i)) #27
          to label %land.lhs.true88.i [label %if.then94.i], !srcloc !601

land.lhs.true88.i:                                ; preds = %if.end85.i
  %14 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %0, align 4
  %and.i.i2.i = and i32 %15, 1
  %tobool.not.i.i.i = icmp eq i32 %and.i.i2.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !582

if.then.i.i.i:                                    ; preds = %land.lhs.true88.i
  %sub.i.i.i = add i32 %15, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true88.i
  %16 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i3.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %16, %if.end.i.i.i ]
  %17 = inttoptr i32 %retval.0.i.i3.i to ptr
  %18 = getelementptr inbounds %struct.page, ptr %17, i32 0, i32 1
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %18, align 4
  %and.i.i.i.i = and i32 %20, 1
  %tobool.not.i2.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i2.i.i, label %do.body7.i.i.i, label %if.then.i3.i.i, !prof !582

if.then.i3.i.i:                                   ; preds = %_compound_head.exit.i.i
  tail call void @dump_page(ptr noundef %17, ptr noundef nonnull @.str.101) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 537, 0\0A.popsection", ""() #27, !srcloc !602
  unreachable

do.body7.i.i.i:                                   ; preds = %_compound_head.exit.i.i
  %memcg_data.i.i.i = getelementptr inbounds %struct.anon.85, ptr %17, i32 0, i32 7
  %21 = ptrtoint ptr %memcg_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %memcg_data.i.i.i, align 4
  %and.i4.i.i = and i32 %22, 1
  %tobool8.not.i.i.i = icmp eq i32 %and.i4.i.i, 0
  br i1 %tobool8.not.i.i.i, label %PageMemcgKmem.exit.i, label %if.then15.i.i.i, !prof !582

if.then15.i.i.i:                                  ; preds = %do.body7.i.i.i
  tail call void @dump_page(ptr noundef %17, ptr noundef nonnull @.str.102) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 538, 0\0A.popsection", ""() #27, !srcloc !603
  unreachable

PageMemcgKmem.exit.i:                             ; preds = %do.body7.i.i.i
  %and23.i.i.i = and i32 %22, 2
  %tobool24.i.i.not.i = icmp eq i32 %and23.i.i.i, 0
  br i1 %tobool24.i.i.not.i, label %if.then94.i, label %if.then91.i

if.then91.i:                                      ; preds = %PageMemcgKmem.exit.i
  tail call void @__memcg_kmem_uncharge_page(ptr noundef %page, i32 noundef %order) #27
  br label %if.then94.i

if.then94.i:                                      ; preds = %if.then91.i, %PageMemcgKmem.exit.i, %if.end85.i
  %23 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 2
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %23, i32 noundef 4) #27
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %23, align 4
  %cmp.not.i.i.i = icmp eq i32 %25, -1
  br i1 %cmp.not.i.i.i, label %page_expected_state.exit.i.i, label %if.end.i.i, !prof !582

page_expected_state.exit.i.i:                     ; preds = %if.then94.i
  %26 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mapping.i.i, align 4
  %28 = ptrtoint ptr %27 to i32
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #27
  %29 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %or.i.i.i = or i32 %30, %28
  %memcg_data.i.i4.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 4
  %31 = ptrtoint ptr %memcg_data.i.i4.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %memcg_data.i.i4.i, align 4
  %or3.i.i.i = or i32 %or.i.i.i, %32
  %33 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %page, align 4
  %and.i.i5.i = and i32 %34, 3207729
  %or4.i.i.i = or i32 %or3.i.i.i, %and.i.i5.i
  %tobool5.not.i.i.i = icmp eq i32 %or4.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %check_free_page.exit.i, label %if.end.i.i, !prof !582

if.end.i.i:                                       ; preds = %page_expected_state.exit.i.i, %if.then94.i
  tail call fastcc void @check_free_page_bad(ptr noundef %page) #27
  br label %check_free_page.exit.i

check_free_page.exit.i:                           ; preds = %if.end.i.i, %page_expected_state.exit.i.i
  %retval.0.i.neg.i = phi i32 [ -1, %if.end.i.i ], [ 0, %page_expected_state.exit.i.i ]
  %tobool98.not.i = icmp eq i32 %bad.3.i, %retval.0.i.neg.i
  br i1 %tobool98.not.i, label %if.end100.i, label %free_pages_prepare.exit

if.end100.i:                                      ; preds = %check_free_page.exit.i
  %35 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %page, align 4
  %and102.i = and i32 %36, -4194304
  store i32 %and102.i, ptr %page, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @page_owner_inited, ptr blockaddress(@free_pcp_prepare, %if.then.i.i)) #27
          to label %reset_page_owner.exit.i [label %if.then.i.i], !srcloc !583

if.then.i.i:                                      ; preds = %if.end100.i
  %conv103.i = trunc i32 %order to i16
  tail call void @__reset_page_owner(ptr noundef %page, i16 noundef zeroext %conv103.i) #27
  br label %reset_page_owner.exit.i

reset_page_owner.exit.i:                          ; preds = %if.then.i.i, %if.end100.i
  %37 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %page, align 4
  %shr.i.i = lshr i32 %38, 30
  switch i32 %shr.i.i, label %if.then107.i [
    i32 2, label %if.end112.i
    i32 3, label %is_highmem_idx.exit.i
  ]

is_highmem_idx.exit.i:                            ; preds = %reset_page_owner.exit.i
  %39 = load i32, ptr @movable_zone, align 4
  %cmp2.i.not.i = icmp eq i32 %39, 2
  br i1 %cmp2.i.not.i, label %if.end112.i, label %if.then107.i

if.then107.i:                                     ; preds = %is_highmem_idx.exit.i, %reset_page_owner.exit.i
  %call108.i = tail call ptr @page_address(ptr noundef %page) #27
  %shl109.i = shl i32 4096, %order
  tail call void @debug_check_no_locks_freed(ptr noundef %call108.i, i32 noundef %shl109.i) #27
  %call110.i = tail call ptr @page_address(ptr noundef %page) #27
  tail call void @debug_check_no_obj_freed(ptr noundef %call110.i, i32 noundef %shl109.i) #27
  br label %if.end112.i

if.end112.i:                                      ; preds = %if.then107.i, %is_highmem_idx.exit.i, %reset_page_owner.exit.i
  %shl113.i = shl nuw i32 1, %order
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @_page_poisoning_enabled, ptr blockaddress(@free_pcp_prepare, %if.then.i7.i)) #27
          to label %kernel_poison_pages.exit.i [label %if.then.i7.i], !srcloc !583

if.then.i7.i:                                     ; preds = %if.end112.i
  tail call void @__kernel_poison_pages(ptr noundef %page, i32 noundef %shl113.i) #27
  br label %kernel_poison_pages.exit.i

kernel_poison_pages.exit.i:                       ; preds = %if.then.i7.i, %if.end112.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @init_on_free, i32 1), ptr blockaddress(@free_pcp_prepare, %if.then126.i)) #27
          to label %if.then122.i [label %if.then126.i], !srcloc !583

if.then122.i:                                     ; preds = %kernel_poison_pages.exit.i
  tail call void @kasan_disable_current() #27
  %cmp224.i.not.i = icmp eq i32 %order, 31
  br i1 %cmp224.i.not.i, label %kernel_init_free_pages.exit.i, label %for.body3.i.i

for.body3.i.i:                                    ; preds = %for.body3.i.i, %if.then122.i
  %i.125.i.i = phi i32 [ %inc9.i.i, %for.body3.i.i ], [ 0, %if.then122.i ]
  %add.ptr4.i.i = getelementptr %struct.page, ptr %page, i32 %i.125.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %40 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i.i.i = or i32 %40, 512
  %call.i.i.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr4.i.i, i32 noundef %or.i.i.i.i) #27
  %41 = call ptr @memset(ptr %call.i.i.i.i, i32 0, i32 4096)
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i.i.i) #27
  %inc9.i.i = add nuw nsw i32 %i.125.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc9.i.i, %shl113.i
  br i1 %exitcond.not.i.i, label %kernel_init_free_pages.exit.i, label %for.body3.i.i

kernel_init_free_pages.exit.i:                    ; preds = %for.body3.i.i, %if.then122.i
  tail call void @kasan_enable_current() #27
  br label %if.then126.i

if.then126.i:                                     ; preds = %kernel_init_free_pages.exit.i, %kernel_poison_pages.exit.i
  %retval.0.i.i1020.i = phi i1 [ true, %kernel_init_free_pages.exit.i ], [ false, %kernel_poison_pages.exit.i ]
  tail call void @__kasan_poison_pages(ptr noundef %page, i32 noundef %order, i1 noundef zeroext %retval.0.i.i1020.i) #27
  br label %free_pages_prepare.exit

free_pages_prepare.exit:                          ; preds = %if.then126.i, %check_free_page.exit.i
  ret i1 %tobool98.not.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_locks_off() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mm_page_free_batched(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__split_page_owner(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mod_zone_page_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @shuffle_pick_tail() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_reporting_notify() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @setup_fault_attr(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fault_create_debugfs_attr(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @debugfs_create_bool(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @debugfs_create_u32(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @show_mem(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__cpuset_node_allowed(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__next_zones_zonelist(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_page_alloc_zone_locked(ptr noundef %page, i32 noundef %order, i32 noundef %migratetype) unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_alloc_zone_locked, i32 0, i32 1), ptr blockaddress(@trace_mm_page_alloc_zone_locked, %do.body)) #27
          to label %if.end48 [label %do.body], !srcloc !583

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !668
  %call42 = tail call i32 @__traceiter_mm_page_alloc_zone_locked(ptr noundef null, ptr noundef %page, i32 noundef %order, i32 noundef %migratetype) #27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !669
  %13 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !582

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !619
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_alloc_zone_locked, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_alloc_zone_locked, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #27
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #27
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_page_alloc_zone_locked.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_mm_page_alloc_zone_locked.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.98, i32 noundef 261, ptr noundef nonnull @.str.99) #27
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !620
  %31 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_page_alloc_extfrag(ptr noundef %page, i32 noundef %alloc_order, i32 noundef %fallback_order, i32 noundef %alloc_migratetype, i32 noundef %fallback_migratetype) unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_alloc_extfrag, i32 0, i32 1), ptr blockaddress(@trace_mm_page_alloc_extfrag, %do.body)) #27
          to label %if.end48 [label %do.body], !srcloc !583

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !670
  %call42 = tail call i32 @__traceiter_mm_page_alloc_extfrag(ptr noundef null, ptr noundef %page, i32 noundef %alloc_order, i32 noundef %fallback_order, i32 noundef %alloc_migratetype, i32 noundef %fallback_migratetype) #27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !671
  %13 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !582

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !619
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_alloc_extfrag, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mm_page_alloc_extfrag, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #27
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #27
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_page_alloc_extfrag.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_mm_page_alloc_extfrag.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.98, i32 noundef 325, ptr noundef nonnull @.str.99) #27
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !620
  %31 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mm_page_alloc_extfrag(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mm_page_alloc_zone_locked(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @node_dirty_ok(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @reserve_highatomic_pageblock(ptr noundef %page, ptr noundef %zone) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %managed_pages.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 11
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i, i32 noundef 4) #27
  %0 = ptrtoint ptr %managed_pages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %managed_pages.i, align 4
  %div = udiv i32 %1, 100
  %add = add nuw nsw i32 %div, 2048
  %nr_reserved_highatomic = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 2
  %2 = ptrtoint ptr %nr_reserved_highatomic to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_reserved_highatomic, align 16
  %cmp.not = icmp ult i32 %3, %add
  br i1 %cmp.not, label %do.body1, label %cleanup

do.body1:                                         ; preds = %entry
  %lock = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 22
  %call4 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #27
  %4 = ptrtoint ptr %nr_reserved_highatomic to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_reserved_highatomic, align 16
  %cmp8.not = icmp ult i32 %5, %add
  br i1 %cmp8.not, label %if.end11, label %out_unlock

if.end11:                                         ; preds = %do.body1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %6 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %6 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %7 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add12 = add i32 %sub.ptr.div, %7
  %8 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %9, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i, label %get_pageblock_bitmap.exit.i.i, !prof !584

if.then.i.i.i.i.i:                                ; preds = %if.end11
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i:                    ; preds = %if.end11
  %shr.i.i.i.i.i = lshr i32 %9, 30
  %pageblock_flags.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i, i32 9
  %10 = ptrtoint ptr %pageblock_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pageblock_flags.i.i.i, align 8
  %12 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %page, align 4
  %cmp.i.not.i.i.i8.i.i = icmp eq i32 %13, -1
  br i1 %cmp.i.not.i.i.i8.i.i, label %if.then.i.i.i9.i.i, label %get_pfnblock_flags_mask.exit, !prof !584

if.then.i.i.i9.i.i:                               ; preds = %get_pageblock_bitmap.exit.i.i
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pfnblock_flags_mask.exit:                     ; preds = %get_pageblock_bitmap.exit.i.i
  %shr.i.i.i10.i.i = lshr i32 %13, 30
  %zone_start_pfn.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i, i32 10
  %14 = ptrtoint ptr %zone_start_pfn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %zone_start_pfn.i.i.i, align 4
  %and.i.i.i = and i32 %15, -2048
  %sub.i.i.i = sub i32 %add12, %and.i.i.i
  %16 = lshr i32 %sub.i.i.i, 9
  %div7.i.i = lshr i32 %sub.i.i.i, 14
  %and.i.i = and i32 %16, 28
  %arrayidx.i.i = getelementptr i32, ptr %11, i32 %div7.i.i
  %17 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i.i, align 4
  %shr.i.i = lshr i32 %18, %and.i.i
  %and2.i.i = and i32 %shr.i.i, 7
  %and2.i.i.off = add nsw i32 %and2.i.i, -3
  %switch = icmp ult i32 %and2.i.i.off, 3
  br i1 %switch, label %out_unlock, label %if.then20

if.then20:                                        ; preds = %get_pfnblock_flags_mask.exit
  %add22 = add i32 %5, 2048
  %19 = ptrtoint ptr %nr_reserved_highatomic to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %add22, ptr %nr_reserved_highatomic, align 16
  tail call void @set_pfnblock_flags_mask(ptr noundef %page, i32 noundef 3, i32 noundef %add12, i32 noundef 7) #27
  %call23 = tail call i32 @move_freepages_block(ptr noundef %zone, ptr noundef %page, i32 noundef 3, ptr noundef null)
  br label %out_unlock

out_unlock:                                       ; preds = %if.then20, %get_pfnblock_flags_mask.exit, %do.body1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call4) #27
  br label %cleanup

cleanup:                                          ; preds = %out_unlock, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wakeup_kswapd(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @read_mems_allowed_begin() unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_pre_enable_key, ptr blockaddress(@read_mems_allowed_begin, %if.end)) #27
          to label %return [label %if.end], !srcloc !583

if.end:                                           ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %and.i.i = and i32 %4, 128
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.body24.critedge.i

if.then.i:                                        ; preds = %if.end
  tail call void @trace_hardirqs_off() #27
  %dep_map.c.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 161, i32 0, i32 1
  %5 = tail call ptr @llvm.returnaddress(i32 0) #27
  %6 = ptrtoint ptr %5 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %6) #27
  tail call void @lock_release(ptr noundef %dep_map.c.i, i32 noundef %6) #27
  tail call void @trace_hardirqs_on() #27
  br label %do.body24.i

do.body24.critedge.i:                             ; preds = %if.end
  %dep_map.c48.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 161, i32 0, i32 1
  %7 = tail call ptr @llvm.returnaddress(i32 0) #27
  %8 = ptrtoint ptr %7 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %8) #27
  tail call void @lock_release(ptr noundef %dep_map.c48.i, i32 noundef %8) #27
  br label %do.body24.i

do.body24.i:                                      ; preds = %do.body24.critedge.i, %if.then.i
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i.i = and i32 %9, 128
  %tobool32.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool32.not.i, label %if.then36.i, label %seqcount_lockdep_reader_access.exit, !prof !584

if.then36.i:                                      ; preds = %do.body24.i
  tail call void @warn_bogus_irq_restore() #27
  br label %seqcount_lockdep_reader_access.exit

seqcount_lockdep_reader_access.exit:              ; preds = %if.then36.i, %do.body24.i
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %4) #27, !srcloc !615
  %10 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task, align 8
  %mems_allowed_seq826 = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 161
  %12 = ptrtoint ptr %mems_allowed_seq826 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %mems_allowed_seq826, align 4
  %and27 = and i32 %13, 1
  %tobool10.not28 = icmp eq i32 %and27, 0
  br i1 %tobool10.not28, label %while.end, label %do.end

do.end:                                           ; preds = %do.end, %seqcount_lockdep_reader_access.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !672
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #27, !srcloc !673
  %14 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task, align 8
  %mems_allowed_seq8 = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 161
  %16 = ptrtoint ptr %mems_allowed_seq8 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %mems_allowed_seq8, align 4
  %and = and i32 %17, 1
  %tobool10.not = icmp eq i32 %and, 0
  br i1 %tobool10.not, label %while.end, label %do.end

while.end:                                        ; preds = %do.end, %seqcount_lockdep_reader_access.exit
  %.lcssa = phi i32 [ %13, %seqcount_lockdep_reader_access.exit ], [ %17, %do.end ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #27, !srcloc !674
  br label %return

return:                                           ; preds = %while.end, %entry
  %retval.0 = phi i32 [ %.lcssa, %while.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__alloc_pages_direct_compact(i32 noundef %gfp_mask, i32 noundef %order, i32 noundef %alloc_flags, ptr noundef %ac, i32 noundef %prio, ptr nocapture noundef %compact_result) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %page = alloca ptr, align 4
  %pflags = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %page) #27
  %0 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %page, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pflags) #27
  %1 = ptrtoint ptr %pflags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %pflags, align 4, !annotation !637
  %tobool.not = icmp eq i32 %order, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  call void @psi_memstall_enter(ptr noundef nonnull %pflags) #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @delayacct_key, ptr blockaddress(@__alloc_pages_direct_compact, %if.end.i)) #27
          to label %delayacct_compact_start.exit [label %if.end.i], !srcloc !583

if.end.i:                                         ; preds = %if.end
  %2 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %delays.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 181
  %6 = ptrtoint ptr %delays.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %delays.i, align 8
  %tobool4.not.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i, label %delayacct_compact_start.exit, label %if.then5.i

if.then5.i:                                       ; preds = %if.end.i
  call void @__delayacct_compact_start() #27
  br label %delayacct_compact_start.exit

delayacct_compact_start.exit:                     ; preds = %if.then5.i, %if.end.i, %if.end
  %8 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i30 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i30 to ptr
  %task.i31 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task.i31 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task.i31, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags1.i, align 4
  %and.i = and i32 %13, 2048
  %or.i = or i32 %13, 2048
  store i32 %or.i, ptr %flags1.i, align 4
  %call1 = call i32 @try_to_compact_pages(i32 noundef %gfp_mask, i32 noundef %order, i32 noundef %alloc_flags, ptr noundef %ac, i32 noundef %prio, ptr noundef nonnull %page) #27
  %14 = ptrtoint ptr %compact_result to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call1, ptr %compact_result, align 4
  %15 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i32 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i32 to ptr
  %task.i33 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task.i33 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task.i33, align 8
  %flags1.i34 = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %flags1.i34 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags1.i34, align 4
  %and.i35 = and i32 %20, -2049
  %or.i36 = or i32 %and.i35, %and.i
  store i32 %or.i36, ptr %flags1.i34, align 4
  call void @psi_memstall_leave(ptr noundef nonnull %pflags) #27
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @delayacct_key, ptr blockaddress(@__alloc_pages_direct_compact, %if.end.i41)) #27
          to label %delayacct_compact_end.exit [label %if.end.i41], !srcloc !583

if.end.i41:                                       ; preds = %delayacct_compact_start.exit
  %21 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i37 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i37 to ptr
  %task.i38 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task.i38 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task.i38, align 8
  %delays.i39 = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 181
  %25 = ptrtoint ptr %delays.i39 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %delays.i39, align 8
  %tobool4.not.i40 = icmp eq ptr %26, null
  br i1 %tobool4.not.i40, label %delayacct_compact_end.exit, label %if.then5.i42

if.then5.i42:                                     ; preds = %if.end.i41
  call void @__delayacct_compact_end() #27
  br label %delayacct_compact_end.exit

delayacct_compact_end.exit:                       ; preds = %if.then5.i42, %if.end.i41, %delayacct_compact_start.exit
  %27 = ptrtoint ptr %compact_result to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %compact_result, align 4
  %cmp = icmp eq i32 %28, 1
  br i1 %cmp, label %cleanup, label %if.end3

if.end3:                                          ; preds = %delayacct_compact_end.exit
  %29 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %30 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i43 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i43 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cpu.i, align 4
  %arrayidx13.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %33
  %34 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx13.i, align 4
  %add.i = add i32 %35, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 54) to i32)
  %36 = inttoptr i32 %add.i to ptr
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %36, align 4
  %add14.i = add i32 %38, 1
  store i32 %add14.i, ptr %36, align 4
  %39 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i.i = and i32 %39, 128
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %count_vm_event.exit, !prof !584

if.then.i:                                        ; preds = %if.end3
  call void @warn_bogus_irq_restore() #27
  br label %count_vm_event.exit

count_vm_event.exit:                              ; preds = %if.then.i, %if.end3
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %29) #27, !srcloc !615
  %40 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %page, align 4
  %tobool4.not = icmp eq ptr %41, null
  br i1 %tobool4.not, label %if.end10, label %if.then5

if.then5:                                         ; preds = %count_vm_event.exit
  call void @post_alloc_hook(ptr noundef nonnull %41, i32 noundef %order, i32 noundef %gfp_mask) #27
  %and.i45 = and i32 %gfp_mask, 262144
  %tobool1.not.i = icmp eq i32 %and.i45, 0
  br i1 %tobool1.not.i, label %if.end6, label %if.then.i46

if.then.i46:                                      ; preds = %if.then5
  call void @prep_compound_page(ptr noundef nonnull %41, i32 noundef %order) #27
  br label %if.end6

if.end6:                                          ; preds = %if.then.i46, %if.then5
  %and2.i = and i32 %alloc_flags, 4
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  %spec.select.i = select i1 %tobool3.not.i, ptr null, ptr inttoptr (i32 2 to ptr)
  %42 = getelementptr inbounds %struct.page, ptr %41, i32 0, i32 1
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %spec.select.i, ptr %42, align 4
  %44 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %44)
  %.pr = load ptr, ptr %page, align 4
  %tobool7.not = icmp eq ptr %.pr, null
  br i1 %tobool7.not, label %if.end10, label %if.then12

if.end10:                                         ; preds = %if.end6, %count_vm_event.exit
  %call9 = call fastcc ptr @get_page_from_freelist(i32 noundef %gfp_mask, i32 noundef %order, i32 noundef %alloc_flags, ptr noundef %ac)
  %45 = ptrtoint ptr %page to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %call9, ptr %page, align 4
  %tobool11.not = icmp eq ptr %call9, null
  br i1 %tobool11.not, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.end10, %if.end6
  %46 = phi ptr [ %call9, %if.end10 ], [ %.pr, %if.end6 ]
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %46, align 4
  %cmp.i.not.i.i = icmp eq i32 %48, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %page_zone.exit, !prof !584

if.then.i.i:                                      ; preds = %if.then12
  call void @dump_page(ptr noundef nonnull %46, ptr noundef nonnull @.str.92) #27
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

page_zone.exit:                                   ; preds = %if.then12
  %shr.i.i = lshr i32 %48, 30
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i
  %compact_blockskip_flush = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i, i32 33
  %49 = ptrtoint ptr %compact_blockskip_flush to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 0, ptr %compact_blockskip_flush, align 4
  call void @compaction_defer_reset(ptr noundef %arrayidx.i, i32 noundef %order, i1 noundef zeroext true) #27
  %50 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %51 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i48 = and i32 %51, -16384
  %52 = inttoptr i32 %and.i.i48 to ptr
  %cpu.i49 = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 3
  %53 = ptrtoint ptr %cpu.i49 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %cpu.i49, align 4
  %arrayidx13.i50 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %54
  %55 = ptrtoint ptr %arrayidx13.i50 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx13.i50, align 4
  %add.i51 = add i32 %56, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 56) to i32)
  %57 = inttoptr i32 %add.i51 to ptr
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %57, align 4
  %add14.i52 = add i32 %59, 1
  store i32 %add14.i52, ptr %57, align 4
  %60 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i.i53 = and i32 %60, 128
  %tobool.not.i54 = icmp eq i32 %and.i.i.i53, 0
  br i1 %tobool.not.i54, label %if.then.i55, label %count_vm_event.exit56, !prof !584

if.then.i55:                                      ; preds = %page_zone.exit
  call void @warn_bogus_irq_restore() #27
  br label %count_vm_event.exit56

count_vm_event.exit56:                            ; preds = %if.then.i55, %page_zone.exit
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %50) #27, !srcloc !615
  %61 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %page, align 4
  br label %cleanup

if.end14:                                         ; preds = %if.end10
  %63 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !613
  %64 = call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i57 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i57 to ptr
  %cpu.i58 = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 3
  %66 = ptrtoint ptr %cpu.i58 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %cpu.i58, align 4
  %arrayidx13.i59 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %67
  %68 = ptrtoint ptr %arrayidx13.i59 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx13.i59, align 4
  %add.i60 = add i32 %69, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 55) to i32)
  %70 = inttoptr i32 %add.i60 to ptr
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %70, align 4
  %add14.i61 = add i32 %72, 1
  store i32 %add14.i61, ptr %70, align 4
  %73 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #27, !srcloc !614
  %and.i.i.i62 = and i32 %73, 128
  %tobool.not.i63 = icmp eq i32 %and.i.i.i62, 0
  br i1 %tobool.not.i63, label %if.then.i64, label %count_vm_event.exit65, !prof !584

if.then.i64:                                      ; preds = %if.end14
  call void @warn_bogus_irq_restore() #27
  br label %count_vm_event.exit65

count_vm_event.exit65:                            ; preds = %if.then.i64, %if.end14
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %63) #27, !srcloc !615
  call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 4410, i32 noundef 0) #27
  %call.i = call i32 @__cond_resched() #27
  br label %cleanup

cleanup:                                          ; preds = %count_vm_event.exit65, %count_vm_event.exit56, %delayacct_compact_end.exit, %entry
  %retval.0 = phi ptr [ %62, %count_vm_event.exit56 ], [ null, %count_vm_event.exit65 ], [ null, %entry ], [ null, %delayacct_compact_end.exit ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pflags) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %page) #27
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_memstall_enter(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @try_to_compact_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_memstall_leave(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @compaction_defer_reset(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__delayacct_compact_start() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__delayacct_compact_end() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @unreserve_highatomic_pageblock(ptr nocapture noundef readonly %ac, i1 noundef zeroext %force) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ac to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ac, align 4
  %highest_zoneidx = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 4
  %2 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %highest_zoneidx, align 4
  %nodemask = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 1
  %4 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end.i.i, !prof !582

land.rhs.i.i:                                     ; preds = %entry
  %zone_idx.i.i.i = getelementptr inbounds %struct.zoneref, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %zone_idx.i.i.i, align 4
  %cmp.not.i.i = icmp ugt i32 %7, %3
  br i1 %cmp.not.i.i, label %if.end.i.i, label %first_zones_zonelist.exit, !prof !584

if.end.i.i:                                       ; preds = %land.rhs.i.i, %entry
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %1, i32 noundef %3, ptr noundef %5) #27
  br label %first_zones_zonelist.exit

first_zones_zonelist.exit:                        ; preds = %if.end.i.i, %land.rhs.i.i
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ %1, %land.rhs.i.i ]
  %8 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %zone.097 = load ptr, ptr %retval.0.i.i, align 4
  %tobool.not98 = icmp eq ptr %zone.097, null
  br i1 %tobool.not98, label %cleanup42, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %first_zones_zonelist.exit
  %migratetype = getelementptr inbounds %struct.alloc_context, ptr %ac, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %next_zones_zonelist.exit, %for.body.lr.ph
  %zone.0100 = phi ptr [ %zone.097, %for.body.lr.ph ], [ %zone.0, %next_zones_zonelist.exit ]
  %z.099 = phi ptr [ %retval.0.i.i, %for.body.lr.ph ], [ %retval.0.i, %next_zones_zonelist.exit ]
  br i1 %force, label %do.body4, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %nr_reserved_highatomic = getelementptr inbounds %struct.zone, ptr %zone.0100, i32 0, i32 2
  %9 = ptrtoint ptr %nr_reserved_highatomic to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nr_reserved_highatomic, align 16
  %cmp = icmp ult i32 %10, 2049
  br i1 %cmp, label %for.inc36, label %do.body4

do.body4:                                         ; preds = %land.lhs.true, %for.body
  %lock = getelementptr inbounds %struct.zone, ptr %zone.0100, i32 0, i32 22
  %call7 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #27
  %nr_reserved_highatomic20 = getelementptr inbounds %struct.zone, ptr %zone.0100, i32 0, i32 2
  br label %for.body13

for.body13:                                       ; preds = %for.inc, %do.body4
  %order.096 = phi i32 [ 0, %do.body4 ], [ %inc, %for.inc ]
  %arrayidx.i = getelementptr %struct.zone, ptr %zone.0100, i32 0, i32 20, i32 %order.096, i32 0, i32 3
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %arrayidx.i, align 4
  %cmp.not.i74 = icmp eq ptr %12, %arrayidx.i
  %add.ptr.i = getelementptr i8, ptr %12, i32 -4
  %tobool15.not85 = icmp eq ptr %add.ptr.i, null
  %tobool15.not = or i1 %cmp.not.i74, %tobool15.not85
  br i1 %tobool15.not, label %for.inc, label %if.end17

if.end17:                                         ; preds = %for.body13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %13 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %14 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %15 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %add.ptr.i, align 4
  %cmp.i.not.i.i.i.i.i.i = icmp eq i32 %16, -1
  br i1 %cmp.i.not.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %get_pageblock_bitmap.exit.i.i.i, !prof !584

if.then.i.i.i.i.i.i:                              ; preds = %if.end17
  tail call void @dump_page(ptr noundef nonnull %add.ptr.i, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

get_pageblock_bitmap.exit.i.i.i:                  ; preds = %if.end17
  %shr.i.i.i.i.i.i = lshr i32 %16, 30
  %pageblock_flags.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i.i.i.i, i32 9
  %17 = ptrtoint ptr %pageblock_flags.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pageblock_flags.i.i.i.i, align 8
  %19 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %add.ptr.i, align 4
  %cmp.i.not.i.i.i8.i.i.i = icmp eq i32 %20, -1
  br i1 %cmp.i.not.i.i.i8.i.i.i, label %if.then.i.i.i9.i.i.i, label %is_migrate_highatomic_page.exit, !prof !584

if.then.i.i.i9.i.i.i:                             ; preds = %get_pageblock_bitmap.exit.i.i.i
  tail call void @dump_page(ptr noundef nonnull %add.ptr.i, ptr noundef nonnull @.str.92) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #27, !srcloc !586
  unreachable

is_migrate_highatomic_page.exit:                  ; preds = %get_pageblock_bitmap.exit.i.i.i
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %13 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  %add.i = add i32 %sub.ptr.div.i, %14
  %shr.i.i.i10.i.i.i = lshr i32 %20, 30
  %zone_start_pfn.i.i.i.i = getelementptr [4 x %struct.zone], ptr @contig_page_data, i32 0, i32 %shr.i.i.i10.i.i.i, i32 10
  %21 = ptrtoint ptr %zone_start_pfn.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %zone_start_pfn.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %22, -2048
  %sub.i.i.i.i = sub i32 %add.i, %and.i.i.i.i
  %23 = lshr i32 %sub.i.i.i.i, 9
  %div7.i.i.i = lshr i32 %sub.i.i.i.i, 14
  %and.i.i.i = and i32 %23, 28
  %arrayidx.i.i.i = getelementptr i32, ptr %18, i32 %div7.i.i.i
  %24 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i.i.i, align 4
  %shr.i.i.i = lshr i32 %25, %and.i.i.i
  %and2.i.i.i = and i32 %shr.i.i.i, 7
  %cmp.i = icmp eq i32 %and2.i.i.i, 3
  br i1 %cmp.i, label %if.then19, label %if.end25

if.then19:                                        ; preds = %is_migrate_highatomic_page.exit
  %26 = ptrtoint ptr %nr_reserved_highatomic20 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %nr_reserved_highatomic20, align 16
  %28 = tail call i32 @llvm.usub.sat.i32(i32 %27, i32 2048)
  %29 = ptrtoint ptr %nr_reserved_highatomic20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %nr_reserved_highatomic20, align 16
  br label %if.end25

if.end25:                                         ; preds = %if.then19, %is_migrate_highatomic_page.exit
  %30 = ptrtoint ptr %migratetype to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %migratetype, align 4
  %32 = load i32, ptr @page_group_by_mobility_disabled, align 4
  %tobool.not.i75 = icmp ne i32 %32, 0
  %cmp.i76 = icmp slt i32 %31, 3
  %spec.select.i77 = and i1 %cmp.i76, %tobool.not.i75
  br i1 %spec.select.i77, label %if.then.i, label %set_pageblock_migratetype.exit, !prof !584

if.then.i:                                        ; preds = %if.end25
  br label %set_pageblock_migratetype.exit

set_pageblock_migratetype.exit:                   ; preds = %if.then.i, %if.end25
  %migratetype.addr.0.i = phi i32 [ 0, %if.then.i ], [ %31, %if.end25 ]
  tail call void @set_pfnblock_flags_mask(ptr noundef nonnull %add.ptr.i, i32 noundef %migratetype.addr.0.i, i32 noundef %add.i, i32 noundef 7) #27
  %33 = ptrtoint ptr %migratetype to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %migratetype, align 4
  %call27 = tail call i32 @move_freepages_block(ptr noundef nonnull %zone.0100, ptr noundef nonnull %add.ptr.i, i32 noundef %34, ptr noundef null)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %for.inc, label %cleanup

cleanup:                                          ; preds = %set_pageblock_migratetype.exit
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call7) #27
  br label %cleanup42

for.inc:                                          ; preds = %set_pageblock_migratetype.exit, %for.body13
  %inc = add nuw nsw i32 %order.096, 1
  %exitcond.not = icmp eq i32 %inc, 12
  br i1 %exitcond.not, label %for.end, label %for.body13

for.end:                                          ; preds = %for.inc
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call7) #27
  br label %for.inc36

for.inc36:                                        ; preds = %for.end, %land.lhs.true
  %incdec.ptr = getelementptr %struct.zoneref, ptr %z.099, i32 1
  %35 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %highest_zoneidx, align 4
  %37 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %nodemask, align 4
  %tobool.not.i = icmp eq ptr %38, null
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end.i, !prof !582

land.rhs.i:                                       ; preds = %for.inc36
  %zone_idx.i.i = getelementptr %struct.zoneref, ptr %z.099, i32 1, i32 1
  %39 = ptrtoint ptr %zone_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %zone_idx.i.i, align 4
  %cmp.not.i = icmp ugt i32 %40, %36
  br i1 %cmp.not.i, label %if.end.i, label %next_zones_zonelist.exit, !prof !584

if.end.i:                                         ; preds = %land.rhs.i, %for.inc36
  %call3.i = tail call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr, i32 noundef %36, ptr noundef %38) #27
  br label %next_zones_zonelist.exit

next_zones_zonelist.exit:                         ; preds = %if.end.i, %land.rhs.i
  %retval.0.i = phi ptr [ %call3.i, %if.end.i ], [ %incdec.ptr, %land.rhs.i ]
  %41 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %zone.0 = load ptr, ptr %retval.0.i, align 4
  %tobool.not = icmp eq ptr %zone.0, null
  br i1 %tobool.not, label %cleanup42, label %for.body

cleanup42:                                        ; preds = %next_zones_zonelist.exit, %cleanup, %first_zones_zonelist.exit
  %tobool.not91 = phi i1 [ true, %cleanup ], [ false, %first_zones_zonelist.exit ], [ false, %next_zones_zonelist.exit ]
  ret i1 %tobool.not91
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__cpuset_memory_pressure_bump() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @try_to_free_pages(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @zone_reclaimable_pages(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_reclaim_retry_zone(ptr noundef %zoneref, i32 noundef %order, i32 noundef %reclaimable, i32 noundef %available, i32 noundef %min_wmark, i32 noundef %no_progress_loops, i1 noundef zeroext %wmark_check) unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_reclaim_retry_zone, i32 0, i32 1), ptr blockaddress(@trace_reclaim_retry_zone, %do.body)) #27
          to label %if.end49 [label %do.body], !srcloc !583

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i76 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i76
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end70, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !675
  %call43 = tail call i32 @__traceiter_reclaim_retry_zone(ptr noundef null, ptr noundef %zoneref, i32 noundef %order, i32 noundef %reclaimable, i32 noundef %available, i32 noundef %min_wmark, i32 noundef %no_progress_loops, i1 noundef zeroext %wmark_check) #27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !676
  %13 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i74 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i74 to ptr
  %preempt_count.i.i75 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i75 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i75, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i75, align 4
  br label %if.end49

if.end49:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i77 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i77 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i78 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i78, label %cpu_online.exit86, label %land.rhs.i.i.i.i80

land.rhs.i.i.i.i80:                               ; preds = %if.end49
  %.b37.i.i.i.i79 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i79, label %cpu_online.exit86, label %if.then.i.i.i.i81, !prof !582

if.then.i.i.i.i81:                                ; preds = %land.rhs.i.i.i.i80
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit86

cpu_online.exit86:                                ; preds = %if.then.i.i.i.i81, %land.rhs.i.i.i.i80, %if.end49
  %div3.i.i.i82 = lshr i32 %20, 5
  %arrayidx.i.i.i83 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i82
  %22 = ptrtoint ptr %arrayidx.i.i.i83 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i83, align 4
  %and.i.i.i84 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i84
  %25 = and i32 %23, %24
  %tobool.i85.not = icmp eq i32 %25, 0
  br i1 %tobool.i85.not, label %if.end70, label %if.then53

if.then53:                                        ; preds = %cpu_online.exit86
  %26 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !619
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_reclaim_retry_zone, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_reclaim_retry_zone, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #27
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #27
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %do.end68, label %land.lhs.true63

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @trace_reclaim_retry_zone.__warned, align 1
  br i1 %.b73, label %do.end68, label %if.then65

if.then65:                                        ; preds = %land.lhs.true63
  store i1 true, ptr @trace_reclaim_retry_zone.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.151, i32 noundef 72, ptr noundef nonnull @.str.99) #27
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63, %land.lhs.true, %if.then53
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !620
  %31 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i87 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i88 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i88 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i88, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i88, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit86, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout_uninterruptible(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_reclaim_retry_zone(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @compaction_zonelist_suitable(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_compact_retry(i32 noundef %order, i32 noundef %priority, i32 noundef %result, i32 noundef %retries, i32 noundef %max_retries, i1 noundef zeroext %ret) unnamed_addr #5 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_compact_retry, i32 0, i32 1), ptr blockaddress(@trace_compact_retry, %do.body)) #27
          to label %if.end49 [label %do.body], !srcloc !583

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !582

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i76 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i76
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end70, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !677
  %call43 = tail call i32 @__traceiter_compact_retry(ptr noundef null, i32 noundef %order, i32 noundef %priority, i32 noundef %result, i32 noundef %retries, i32 noundef %max_retries, i1 noundef zeroext %ret) #27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !678
  %13 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i74 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i74 to ptr
  %preempt_count.i.i75 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i75 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i75, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i75, align 4
  br label %if.end49

if.end49:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i77 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i77 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i78 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i78, label %cpu_online.exit86, label %land.rhs.i.i.i.i80

land.rhs.i.i.i.i80:                               ; preds = %if.end49
  %.b37.i.i.i.i79 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i79, label %cpu_online.exit86, label %if.then.i.i.i.i81, !prof !582

if.then.i.i.i.i81:                                ; preds = %land.rhs.i.i.i.i80
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.100, i32 noundef 108, i32 noundef 9, ptr noundef null) #27
  br label %cpu_online.exit86

cpu_online.exit86:                                ; preds = %if.then.i.i.i.i81, %land.rhs.i.i.i.i80, %if.end49
  %div3.i.i.i82 = lshr i32 %20, 5
  %arrayidx.i.i.i83 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i82
  %22 = ptrtoint ptr %arrayidx.i.i.i83 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i83, align 4
  %and.i.i.i84 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i84
  %25 = and i32 %23, %24
  %tobool.i85.not = icmp eq i32 %25, 0
  br i1 %tobool.i85.not, label %if.end70, label %if.then53

if.then53:                                        ; preds = %cpu_online.exit86
  %26 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !619
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_compact_retry, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_compact_retry, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #27
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #27
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %do.end68, label %land.lhs.true63

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @trace_compact_retry.__warned, align 1
  br i1 %.b73, label %do.end68, label %if.then65

if.then65:                                        ; preds = %land.lhs.true63
  store i1 true, ptr @trace_compact_retry.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.151, i32 noundef 190, ptr noundef nonnull @.str.99) #27
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63, %land.lhs.true, %if.then53
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !620
  %31 = tail call i32 @llvm.read_register.i32(metadata !572) #27
  %and.i.i.i.i87 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i88 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i88 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i88, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i88, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit86, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_compact_retry(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cpuset_nodemask_valid_mems_allowed(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @out_of_memory(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_mm_page_alloc(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #25

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__nr_free_highpages() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mminit_verify_zonelist() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpuset_init_current_mems_allowed() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @build_zonerefs_node(ptr noundef %pgdat, ptr nocapture noundef writeonly %zonerefs) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %managed_pages.i.i = getelementptr %struct.zone, ptr %pgdat, i32 3, i32 11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #27
  %0 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %managed_pages.i.i, align 4
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %do.cond, label %if.then

if.then:                                          ; preds = %entry
  %add.ptr = getelementptr %struct.zone, ptr %pgdat, i32 3
  %2 = ptrtoint ptr %zonerefs to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %add.ptr, ptr %zonerefs, align 4
  %zone_pgdat.i = getelementptr %struct.zone, ptr %pgdat, i32 3, i32 4
  %3 = ptrtoint ptr %zone_pgdat.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %zone_pgdat.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %4 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 1152
  %zone_idx.i = getelementptr %struct.zoneref, ptr %zonerefs, i32 0, i32 1
  %5 = ptrtoint ptr %zone_idx.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %sub.ptr.div.i, ptr %zone_idx.i, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.then, %entry
  %nr_zones.1 = phi i32 [ 1, %if.then ], [ 0, %entry ]
  %managed_pages.i.i.1 = getelementptr %struct.zone, ptr %pgdat, i32 2, i32 11
  %call.i.i.i.i.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.1, i32 noundef 4) #27
  %6 = ptrtoint ptr %managed_pages.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %managed_pages.i.i.1, align 4
  %tobool.i.not.1 = icmp eq i32 %7, 0
  br i1 %tobool.i.not.1, label %do.cond.1, label %if.then.1

if.then.1:                                        ; preds = %do.cond
  %add.ptr.1 = getelementptr %struct.zone, ptr %pgdat, i32 2
  %inc.1 = add nuw nsw i32 %nr_zones.1, 1
  %arrayidx.1 = getelementptr %struct.zoneref, ptr %zonerefs, i32 %nr_zones.1
  %8 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %add.ptr.1, ptr %arrayidx.1, align 4
  %zone_pgdat.i.1 = getelementptr %struct.zone, ptr %pgdat, i32 2, i32 4
  %9 = ptrtoint ptr %zone_pgdat.i.1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %zone_pgdat.i.1, align 4
  %sub.ptr.lhs.cast.i.1 = ptrtoint ptr %add.ptr.1 to i32
  %sub.ptr.rhs.cast.i.1 = ptrtoint ptr %10 to i32
  %sub.ptr.sub.i.1 = sub i32 %sub.ptr.lhs.cast.i.1, %sub.ptr.rhs.cast.i.1
  %sub.ptr.div.i.1 = sdiv exact i32 %sub.ptr.sub.i.1, 1152
  %zone_idx.i.1 = getelementptr %struct.zoneref, ptr %zonerefs, i32 %nr_zones.1, i32 1
  %11 = ptrtoint ptr %zone_idx.i.1 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %sub.ptr.div.i.1, ptr %zone_idx.i.1, align 4
  br label %do.cond.1

do.cond.1:                                        ; preds = %if.then.1, %do.cond
  %nr_zones.1.1 = phi i32 [ %inc.1, %if.then.1 ], [ %nr_zones.1, %do.cond ]
  %managed_pages.i.i.2 = getelementptr %struct.zone, ptr %pgdat, i32 1, i32 11
  %call.i.i.i.i.2 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.2, i32 noundef 4) #27
  %12 = ptrtoint ptr %managed_pages.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %managed_pages.i.i.2, align 4
  %tobool.i.not.2 = icmp eq i32 %13, 0
  br i1 %tobool.i.not.2, label %do.cond.2, label %if.then.2

if.then.2:                                        ; preds = %do.cond.1
  %add.ptr.2 = getelementptr %struct.zone, ptr %pgdat, i32 1
  %inc.2 = add nuw nsw i32 %nr_zones.1.1, 1
  %arrayidx.2 = getelementptr %struct.zoneref, ptr %zonerefs, i32 %nr_zones.1.1
  %14 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %add.ptr.2, ptr %arrayidx.2, align 4
  %zone_pgdat.i.2 = getelementptr %struct.zone, ptr %pgdat, i32 1, i32 4
  %15 = ptrtoint ptr %zone_pgdat.i.2 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %zone_pgdat.i.2, align 4
  %sub.ptr.lhs.cast.i.2 = ptrtoint ptr %add.ptr.2 to i32
  %sub.ptr.rhs.cast.i.2 = ptrtoint ptr %16 to i32
  %sub.ptr.sub.i.2 = sub i32 %sub.ptr.lhs.cast.i.2, %sub.ptr.rhs.cast.i.2
  %sub.ptr.div.i.2 = sdiv exact i32 %sub.ptr.sub.i.2, 1152
  %zone_idx.i.2 = getelementptr %struct.zoneref, ptr %zonerefs, i32 %nr_zones.1.1, i32 1
  %17 = ptrtoint ptr %zone_idx.i.2 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %sub.ptr.div.i.2, ptr %zone_idx.i.2, align 4
  br label %do.cond.2

do.cond.2:                                        ; preds = %if.then.2, %do.cond.1
  %nr_zones.1.2 = phi i32 [ %inc.2, %if.then.2 ], [ %nr_zones.1.1, %do.cond.1 ]
  %managed_pages.i.i.3 = getelementptr %struct.zone, ptr %pgdat, i32 0, i32 11
  %call.i.i.i.i.3 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.3, i32 noundef 4) #27
  %18 = ptrtoint ptr %managed_pages.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %managed_pages.i.i.3, align 4
  %tobool.i.not.3 = icmp eq i32 %19, 0
  br i1 %tobool.i.not.3, label %do.cond.3, label %if.then.3

if.then.3:                                        ; preds = %do.cond.2
  %inc.3 = add nuw nsw i32 %nr_zones.1.2, 1
  %arrayidx.3 = getelementptr %struct.zoneref, ptr %zonerefs, i32 %nr_zones.1.2
  %20 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %pgdat, ptr %arrayidx.3, align 4
  %zone_pgdat.i.3 = getelementptr %struct.zone, ptr %pgdat, i32 0, i32 4
  %21 = ptrtoint ptr %zone_pgdat.i.3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %zone_pgdat.i.3, align 4
  %sub.ptr.lhs.cast.i.3 = ptrtoint ptr %pgdat to i32
  %sub.ptr.rhs.cast.i.3 = ptrtoint ptr %22 to i32
  %sub.ptr.sub.i.3 = sub i32 %sub.ptr.lhs.cast.i.3, %sub.ptr.rhs.cast.i.3
  %sub.ptr.div.i.3 = sdiv exact i32 %sub.ptr.sub.i.3, 1152
  %zone_idx.i.3 = getelementptr %struct.zoneref, ptr %zonerefs, i32 %nr_zones.1.2, i32 1
  %23 = ptrtoint ptr %zone_idx.i.3 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %sub.ptr.div.i.3, ptr %zone_idx.i.3, align 4
  br label %do.cond.3

do.cond.3:                                        ; preds = %if.then.3, %do.cond.2
  %nr_zones.1.3 = phi i32 [ %inc.3, %if.then.3 ], [ %nr_zones.1.2, %do.cond.2 ]
  ret i32 %nr_zones.1.3
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_weight(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @calculate_node_totalpages(i32 noundef %node_start_pfn, i32 noundef %node_end_pfn) unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %zone_start_pfn = alloca i32, align 4
  %zone_end_pfn = alloca i32, align 4
  br label %for.body

for.body:                                         ; preds = %if.end, %entry
  %realtotalpages.05 = phi i32 [ 0, %entry ], [ %add5, %if.end ]
  %totalpages.04 = phi i32 [ 0, %entry ], [ %add, %if.end ]
  %i.02 = phi i32 [ 0, %entry ], [ %inc, %if.end ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %zone_start_pfn) #27
  %0 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %zone_start_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %zone_end_pfn) #27
  %1 = ptrtoint ptr %zone_end_pfn to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %zone_end_pfn, align 4, !annotation !637
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8) to i32))
  %2 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8), align 64
  %call = call fastcc i32 @zone_spanned_pages_in_node(i32 noundef %2, i32 noundef %i.02, i32 noundef %node_start_pfn, i32 noundef %node_end_pfn, ptr noundef nonnull %zone_start_pfn, ptr noundef nonnull %zone_end_pfn) #31
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8) to i32))
  %3 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8), align 64
  %call2 = tail call fastcc i32 @zone_absent_pages_in_node(i32 noundef %3, i32 noundef %i.02, i32 noundef %node_start_pfn, i32 noundef %node_end_pfn) #31
  %sub = sub i32 %call, %call2
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %4 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %zone_start_pfn, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %.sink = phi i32 [ %5, %if.then ], [ 0, %for.body ]
  %6 = getelementptr %struct.zone, ptr @contig_page_data, i32 %i.02, i32 10
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %.sink, ptr %6, align 4
  %spanned_pages = getelementptr %struct.zone, ptr @contig_page_data, i32 %i.02, i32 12
  %8 = ptrtoint ptr %spanned_pages to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call, ptr %spanned_pages, align 4
  %present_pages = getelementptr %struct.zone, ptr @contig_page_data, i32 %i.02, i32 13
  %9 = ptrtoint ptr %present_pages to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %sub, ptr %present_pages, align 8
  %add = add i32 %call, %totalpages.04
  %add5 = add i32 %sub, %realtotalpages.05
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %zone_end_pfn) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %zone_start_pfn) #27
  %inc = add nuw nsw i32 %i.02, 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %if.end
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 7) to i32))
  store i32 %add, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 7), align 4
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 6) to i32))
  store i32 %add5, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 6), align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @calculate_node_totalpages.__UNIQUE_ID_ddebug466, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@calculate_node_totalpages, %if.then10)) #27
          to label %do.end [label %if.then10], !srcloc !583

if.then10:                                        ; preds = %for.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8) to i32))
  %10 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8), align 64
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @calculate_node_totalpages.__UNIQUE_ID_ddebug466, ptr noundef nonnull @.str.159, i32 noundef %10, i32 noundef %add5) #27
  br label %do.end

do.end:                                           ; preds = %if.then10, %for.end
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @alloc_node_mem_map() unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 7) to i32))
  %0 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 7), align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 5) to i32))
  %1 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 5), align 4
  %sub = and i32 %1, 2047
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 3) to i32))
  %2 = load ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 3), align 4
  %tobool2.not = icmp eq ptr %2, null
  br i1 %tobool2.not, label %if.then3, label %do.body

if.then3:                                         ; preds = %if.end
  %and = and i32 %1, -2048
  %add.i = add i32 %0, 2047
  %add = add i32 %add.i, %1
  %and4 = and i32 %add, -2048
  %sub5 = sub i32 %and4, %and
  %mul = mul i32 %sub5, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8) to i32))
  %3 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8), align 64
  %call6 = tail call ptr @memmap_alloc(i32 noundef %mul, i32 noundef 128, i32 noundef 0, i32 noundef %3, i1 noundef zeroext false) #31
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.then3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8) to i32))
  %4 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8), align 64
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.160, i32 noundef %mul, i32 noundef %4) #35
  unreachable

if.end10:                                         ; preds = %if.then3
  %add.ptr = getelementptr %struct.page, ptr %call6, i32 %sub
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 3) to i32))
  store ptr %add.ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 3), align 4
  br label %do.body

do.body:                                          ; preds = %if.end10, %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alloc_node_mem_map.__UNIQUE_ID_ddebug469, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alloc_node_mem_map, %if.then17)) #27
          to label %do.end [label %if.then17], !srcloc !583

if.then17:                                        ; preds = %do.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8) to i32))
  %5 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 8), align 64
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 3) to i32))
  %6 = load ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 3), align 4
  %7 = ptrtoint ptr %6 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @alloc_node_mem_map.__UNIQUE_ID_ddebug469, ptr noundef nonnull @.str.162, ptr noundef nonnull @.str.161, i32 noundef %5, i32 noundef ptrtoint (ptr @contig_page_data to i32), i32 noundef %7) #27
  br label %do.end

do.end:                                           ; preds = %if.then17, %do.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 3) to i32))
  %8 = load ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 3), align 4
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  store ptr %8, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %9 = load i32, ptr @__pv_phys_pfn_offset, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 5) to i32))
  %10 = load i32, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 5), align 4
  %cmp27.not = icmp eq i32 %9, %10
  br i1 %cmp27.not, label %cleanup, label %if.then28

if.then28:                                        ; preds = %do.end
  %idx.neg = sub nsw i32 0, %sub
  %add.ptr29 = getelementptr %struct.page, ptr %8, i32 %idx.neg
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  store ptr %add.ptr29, ptr @mem_map, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then28, %do.end, %entry
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_area_init_core() unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @pgdat_init_internals() #31
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 30) to i32))
  store ptr @boot_nodestats, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 30), align 128
  br label %for.body

for.body:                                         ; preds = %cleanup, %entry
  %j.029 = phi i32 [ 0, %entry ], [ %inc, %cleanup ]
  %add.ptr = getelementptr %struct.zone, ptr @contig_page_data, i32 %j.029
  %spanned_pages = getelementptr %struct.zone, ptr @contig_page_data, i32 %j.029, i32 12
  %0 = ptrtoint ptr %spanned_pages to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spanned_pages, align 4
  %present_pages = getelementptr %struct.zone, ptr @contig_page_data, i32 %j.029, i32 13
  %2 = ptrtoint ptr %present_pages to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %present_pages, align 8
  %mul.i = mul i32 %1, 36
  %add1.i = add i32 %mul.i, 4095
  %shr2.i = lshr i32 %add1.i, 12
  switch i32 %j.029, label %if.then [
    i32 2, label %if.else44
    i32 3, label %is_highmem_idx.exit
  ]

is_highmem_idx.exit:                              ; preds = %for.body
  %4 = load i32, ptr @movable_zone, align 4
  %cmp2.i.not = icmp eq i32 %4, 2
  br i1 %cmp2.i.not, label %if.else44, label %if.then

if.then:                                          ; preds = %is_highmem_idx.exit, %for.body
  %cmp2.not = icmp ult i32 %3, %shr2.i
  br i1 %cmp2.not, label %do.end14, label %if.then3

if.then3:                                         ; preds = %if.then
  %sub = sub i32 %3, %shr2.i
  %tobool4.not = icmp ult i32 %add1.i, 4096
  br i1 %tobool4.not, label %if.end19, label %do.body

do.body:                                          ; preds = %if.then3
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @free_area_init_core.__UNIQUE_ID_ddebug467, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@free_area_init_core, %if.then10)) #27
          to label %if.end19 [label %if.then10], !srcloc !583

if.then10:                                        ; preds = %do.body
  %arrayidx = getelementptr [4 x ptr], ptr @zone_names, i32 0, i32 %j.029
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @free_area_init_core.__UNIQUE_ID_ddebug467, ptr noundef nonnull @.str.164, ptr noundef %6, i32 noundef %shr2.i) #27
  br label %if.end19

do.end14:                                         ; preds = %if.then
  %arrayidx16 = getelementptr [4 x ptr], ptr @zone_names, i32 0, i32 %j.029
  %7 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx16, align 4
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.165, ptr noundef %8, i32 noundef %shr2.i, i32 noundef %3) #29
  br label %if.end19

if.end19:                                         ; preds = %do.end14, %if.then10, %do.body, %if.then3
  %freesize.0 = phi i32 [ %sub, %if.then10 ], [ %sub, %if.then3 ], [ %3, %do.end14 ], [ %sub, %do.body ]
  %cmp20 = icmp eq i32 %j.029, 0
  br i1 %cmp20, label %land.lhs.true, label %if.end40

land.lhs.true:                                    ; preds = %if.end19
  %9 = load i32, ptr @dma_reserve, align 4
  %cmp21 = icmp ugt i32 %freesize.0, %9
  br i1 %cmp21, label %if.then22, label %if.then43

if.then22:                                        ; preds = %land.lhs.true
  %sub23 = sub i32 %freesize.0, %9
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @free_area_init_core.__UNIQUE_ID_ddebug468, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@free_area_init_core, %if.then36)) #27
          to label %if.end40 [label %if.then36], !srcloc !583

if.then36:                                        ; preds = %if.then22
  %10 = load i32, ptr @dma_reserve, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @free_area_init_core.__UNIQUE_ID_ddebug468, ptr noundef nonnull @.str.166, ptr noundef nonnull @.str.179, i32 noundef %10) #27
  br label %if.then43

if.end40:                                         ; preds = %if.then22, %if.end19
  %freesize.1 = phi i32 [ %freesize.0, %if.end19 ], [ %sub23, %if.then22 ]
  %cond = icmp eq i32 %j.029, 3
  br i1 %cond, label %is_highmem_idx.exit8, label %if.then43

is_highmem_idx.exit8:                             ; preds = %if.end40
  %.pr = load i32, ptr @movable_zone, align 4
  %cmp2.i4.not = icmp eq i32 %.pr, 2
  br i1 %cmp2.i4.not, label %if.else44, label %if.then43

if.then43:                                        ; preds = %is_highmem_idx.exit8, %if.end40, %if.then36, %land.lhs.true
  %freesize.11728 = phi i32 [ %freesize.1, %is_highmem_idx.exit8 ], [ %freesize.1, %if.end40 ], [ %freesize.0, %land.lhs.true ], [ %sub23, %if.then36 ]
  %11 = load i32, ptr @nr_kernel_pages, align 4
  %add = add i32 %11, %freesize.11728
  br label %if.end49.sink.split

if.else44:                                        ; preds = %is_highmem_idx.exit8, %is_highmem_idx.exit, %for.body
  %freesize.11724 = phi i32 [ %freesize.1, %is_highmem_idx.exit8 ], [ %3, %for.body ], [ %3, %is_highmem_idx.exit ]
  %12 = load i32, ptr @nr_kernel_pages, align 4
  %mul = shl nuw nsw i32 %shr2.i, 1
  %cmp45 = icmp ugt i32 %12, %mul
  br i1 %cmp45, label %if.then46, label %if.end49

if.then46:                                        ; preds = %if.else44
  %sub47 = sub i32 %12, %shr2.i
  br label %if.end49.sink.split

if.end49.sink.split:                              ; preds = %if.then46, %if.then43
  %sub47.sink = phi i32 [ %sub47, %if.then46 ], [ %add, %if.then43 ]
  %freesize.11723.ph = phi i32 [ %freesize.11724, %if.then46 ], [ %freesize.11728, %if.then43 ]
  store i32 %sub47.sink, ptr @nr_kernel_pages, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.end49.sink.split, %if.else44
  %freesize.11723 = phi i32 [ %freesize.11724, %if.else44 ], [ %freesize.11723.ph, %if.end49.sink.split ]
  %13 = load i32, ptr @nr_all_pages, align 4
  %add50 = add i32 %13, %freesize.11723
  store i32 %add50, ptr @nr_all_pages, align 4
  tail call fastcc void @zone_init_internals(ptr noundef %add.ptr, i32 noundef %j.029, i32 noundef %freesize.11723) #31
  %tobool51.not = icmp eq i32 %1, 0
  br i1 %tobool51.not, label %cleanup, label %if.end53

if.end53:                                         ; preds = %if.end49
  tail call fastcc void @setup_usemap(ptr noundef %add.ptr)
  %zone_start_pfn = getelementptr %struct.zone, ptr @contig_page_data, i32 %j.029, i32 10
  %14 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %zone_start_pfn, align 4
  tail call void @init_currently_empty_zone(ptr noundef %add.ptr, i32 noundef %15, i32 noundef %1) #31
  br label %cleanup

cleanup:                                          ; preds = %if.end53, %if.end49
  %inc = add nuw nsw i32 %j.029, 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %cleanup
  ret void
}

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @zone_spanned_pages_in_node(i32 noundef %nid, i32 noundef %zone_type, i32 noundef %node_start_pfn, i32 noundef %node_end_pfn, ptr nocapture noundef %zone_start_pfn, ptr nocapture noundef %zone_end_pfn) unnamed_addr #26 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = or i32 %node_end_pfn, %node_start_pfn
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx1 = getelementptr [4 x i32], ptr @arch_zone_highest_possible_pfn, i32 0, i32 %zone_type
  %2 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx1, align 4
  %arrayidx = getelementptr [4 x i32], ptr @arch_zone_lowest_possible_pfn, i32 0, i32 %zone_type
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %6 = tail call i32 @llvm.umax.i32(i32 %5, i32 %node_start_pfn)
  %7 = tail call i32 @llvm.umin.i32(i32 %6, i32 %3)
  %8 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %zone_start_pfn, align 4
  %9 = tail call i32 @llvm.umax.i32(i32 %5, i32 %node_end_pfn)
  %10 = tail call i32 @llvm.umin.i32(i32 %9, i32 %3)
  %11 = ptrtoint ptr %zone_end_pfn to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %zone_end_pfn, align 4
  tail call fastcc void @adjust_zone_range_for_zone_movable(i32 noundef %nid, i32 noundef %zone_type, i32 noundef %node_end_pfn, ptr noundef %zone_start_pfn, ptr noundef %zone_end_pfn) #31
  %12 = ptrtoint ptr %zone_end_pfn to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %zone_end_pfn, align 4
  %cmp21 = icmp ult i32 %13, %node_start_pfn
  br i1 %cmp21, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %14 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %zone_start_pfn, align 4
  %cmp22 = icmp ugt i32 %15, %node_end_pfn
  br i1 %cmp22, label %cleanup, label %if.end24

if.end24:                                         ; preds = %lor.lhs.false
  %16 = tail call i32 @llvm.umin.i32(i32 %13, i32 %node_end_pfn)
  %17 = ptrtoint ptr %zone_end_pfn to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %zone_end_pfn, align 4
  %18 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %zone_start_pfn, align 4
  %20 = tail call i32 @llvm.umax.i32(i32 %19, i32 %node_start_pfn)
  %21 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %zone_start_pfn, align 4
  %22 = ptrtoint ptr %zone_end_pfn to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %zone_end_pfn, align 4
  %sub = sub i32 %23, %20
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %lor.lhs.false, %if.end, %entry
  %retval.0 = phi i32 [ %sub, %if.end24 ], [ 0, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @zone_absent_pages_in_node(i32 noundef %nid, i32 noundef %zone_type, i32 noundef %node_start_pfn, i32 noundef %node_end_pfn) unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = or i32 %node_end_pfn, %node_start_pfn
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx1 = getelementptr [4 x i32], ptr @arch_zone_highest_possible_pfn, i32 0, i32 %zone_type
  %2 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx1, align 4
  %arrayidx = getelementptr [4 x i32], ptr @arch_zone_lowest_possible_pfn, i32 0, i32 %zone_type
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %6 = tail call i32 @llvm.umax.i32(i32 %5, i32 %node_start_pfn)
  %7 = tail call i32 @llvm.umin.i32(i32 %6, i32 %3)
  %8 = tail call i32 @llvm.umax.i32(i32 %5, i32 %node_end_pfn)
  %9 = tail call i32 @llvm.umin.i32(i32 %8, i32 %3)
  %arrayidx.i = getelementptr [1 x i32], ptr @zone_movable_pfn, i32 0, i32 %nid
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq i32 %11, 0
  br i1 %tobool.not.i, label %adjust_zone_range_for_zone_movable.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %cmp.i = icmp eq i32 %zone_type, 3
  br i1 %cmp.i, label %if.then1.i, label %if.else.i

if.then1.i:                                       ; preds = %if.then.i
  %12 = load i32, ptr @movable_zone, align 4
  %arrayidx3.i = getelementptr [4 x i32], ptr @arch_zone_highest_possible_pfn, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx3.i, align 4
  %15 = tail call i32 @llvm.umin.i32(i32 %14, i32 %node_end_pfn) #27
  br label %adjust_zone_range_for_zone_movable.exit

if.else.i:                                        ; preds = %if.then.i
  %.b1.i = load i1, ptr @mirrored_kernelcore, align 1
  %.b1.i.not = xor i1 %.b1.i, true
  %cmp7.i = icmp ult i32 %7, %11
  %or.cond128 = select i1 %.b1.i.not, i1 %cmp7.i, i1 false
  %cmp10.i = icmp ugt i32 %9, %11
  %or.cond129 = select i1 %or.cond128, i1 %cmp10.i, i1 false
  %16 = select i1 %or.cond129, i1 true, i1 %cmp7.i
  %spec.select134 = select i1 %16, i32 %7, i32 %9
  %spec.select135 = select i1 %or.cond129, i32 %11, i32 %9
  br label %adjust_zone_range_for_zone_movable.exit

adjust_zone_range_for_zone_movable.exit:          ; preds = %if.else.i, %if.then1.i, %if.end
  %zone_start_pfn.0 = phi i32 [ %7, %if.end ], [ %11, %if.then1.i ], [ %spec.select134, %if.else.i ]
  %zone_end_pfn.0 = phi i32 [ %9, %if.end ], [ %15, %if.then1.i ], [ %spec.select135, %if.else.i ]
  %call = tail call i32 @__absent_pages_in_range(i32 noundef %nid, i32 noundef %zone_start_pfn.0, i32 noundef %zone_end_pfn.0) #31
  %.b113 = load i1, ptr @mirrored_kernelcore, align 1
  br i1 %.b113, label %land.lhs.true22, label %cleanup

land.lhs.true22:                                  ; preds = %adjust_zone_range_for_zone_movable.exit
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i, align 4
  %tobool24.not = icmp eq i32 %18, 0
  br i1 %tobool24.not, label %cleanup, label %if.then25

if.then25:                                        ; preds = %land.lhs.true22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2, i32 3) to i32))
  %19 = load ptr, ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2, i32 3), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2) to i32))
  %20 = load i32, ptr getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 2), align 4
  %add.ptr = getelementptr %struct.memblock_region, ptr %19, i32 %20
  %cmp26130 = icmp ult ptr %19, %add.ptr
  br i1 %cmp26130, label %for.body, label %cleanup

for.body:                                         ; preds = %for.inc, %if.then25
  %nr_absent.0133 = phi i32 [ %nr_absent.2, %for.inc ], [ %call, %if.then25 ]
  %r.0131 = phi ptr [ %incdec.ptr, %for.inc ], [ %19, %if.then25 ]
  %21 = ptrtoint ptr %r.0131 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %r.0131, align 4
  %sub.i = add i32 %22, 4095
  %shr.i = lshr i32 %sub.i, 12
  %23 = tail call i32 @llvm.umax.i32(i32 %shr.i, i32 %zone_start_pfn.0)
  %24 = tail call i32 @llvm.umin.i32(i32 %23, i32 %zone_end_pfn.0)
  %size.i = getelementptr inbounds %struct.memblock_region, ptr %r.0131, i32 0, i32 1
  %25 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %size.i, align 4
  %add.i = add i32 %26, %22
  %shr.i114 = lshr i32 %add.i, 12
  %27 = tail call i32 @llvm.umax.i32(i32 %shr.i114, i32 %zone_start_pfn.0)
  %28 = tail call i32 @llvm.umin.i32(i32 %27, i32 %zone_end_pfn.0)
  switch i32 %zone_type, label %for.inc [
    i32 3, label %land.lhs.true54
    i32 1, label %land.lhs.true59
  ]

land.lhs.true54:                                  ; preds = %for.body
  %flags.i = getelementptr inbounds %struct.memblock_region, ptr %r.0131, i32 0, i32 2
  %29 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %30, 2
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %for.inc, label %if.then56

if.then56:                                        ; preds = %land.lhs.true54
  %sub = sub i32 %nr_absent.0133, %24
  %add = add i32 %sub, %28
  br label %for.inc

land.lhs.true59:                                  ; preds = %for.body
  %flags.i115 = getelementptr inbounds %struct.memblock_region, ptr %r.0131, i32 0, i32 2
  %31 = ptrtoint ptr %flags.i115 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags.i115, align 4
  %and.i116 = and i32 %32, 2
  %tobool.i117.not = icmp eq i32 %and.i116, 0
  br i1 %tobool.i117.not, label %if.then61, label %for.inc

if.then61:                                        ; preds = %land.lhs.true59
  %sub62 = sub i32 %nr_absent.0133, %24
  %add63 = add i32 %sub62, %28
  br label %for.inc

for.inc:                                          ; preds = %if.then61, %land.lhs.true59, %if.then56, %land.lhs.true54, %for.body
  %nr_absent.2 = phi i32 [ %nr_absent.0133, %land.lhs.true59 ], [ %add63, %if.then61 ], [ %nr_absent.0133, %land.lhs.true54 ], [ %add, %if.then56 ], [ %nr_absent.0133, %for.body ]
  %incdec.ptr = getelementptr %struct.memblock_region, ptr %r.0131, i32 1
  %cmp26 = icmp ult ptr %incdec.ptr, %add.ptr
  br i1 %cmp26, label %for.body, label %cleanup

cleanup:                                          ; preds = %for.inc, %if.then25, %land.lhs.true22, %adjust_zone_range_for_zone_movable.exit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %call, %land.lhs.true22 ], [ %call, %adjust_zone_range_for_zone_movable.exit ], [ %call, %if.then25 ], [ %nr_absent.2, %for.inc ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @adjust_zone_range_for_zone_movable(i32 noundef %nid, i32 noundef %zone_type, i32 noundef %node_end_pfn, ptr nocapture noundef %zone_start_pfn, ptr nocapture noundef %zone_end_pfn) unnamed_addr #26 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [1 x i32], ptr @zone_movable_pfn, i32 0, i32 %nid
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end19, label %if.then

if.then:                                          ; preds = %entry
  %cmp = icmp eq i32 %zone_type, 3
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then
  %2 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %zone_start_pfn, align 4
  %3 = load i32, ptr @movable_zone, align 4
  %arrayidx3 = getelementptr [4 x i32], ptr @arch_zone_highest_possible_pfn, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx3, align 4
  %6 = tail call i32 @llvm.umin.i32(i32 %5, i32 %node_end_pfn)
  %7 = ptrtoint ptr %zone_end_pfn to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %zone_end_pfn, align 4
  br label %if.end19

if.else:                                          ; preds = %if.then
  %.b1 = load i1, ptr @mirrored_kernelcore, align 1
  br i1 %.b1, label %if.else13, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %8 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %zone_start_pfn, align 4
  %cmp7 = icmp ult i32 %9, %1
  br i1 %cmp7, label %land.lhs.true8, label %if.else13

land.lhs.true8:                                   ; preds = %land.lhs.true
  %10 = ptrtoint ptr %zone_end_pfn to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %zone_end_pfn, align 4
  %cmp10 = icmp ugt i32 %11, %1
  br i1 %cmp10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %land.lhs.true8
  %12 = ptrtoint ptr %zone_end_pfn to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %1, ptr %zone_end_pfn, align 4
  br label %if.end19

if.else13:                                        ; preds = %land.lhs.true8, %land.lhs.true, %if.else
  %13 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %zone_start_pfn, align 4
  %cmp15.not = icmp ult i32 %14, %1
  br i1 %cmp15.not, label %if.end19, label %if.then16

if.then16:                                        ; preds = %if.else13
  %15 = ptrtoint ptr %zone_end_pfn to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %zone_end_pfn, align 4
  %17 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %zone_start_pfn, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.else13, %if.then11, %if.then1, %entry
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pgdat_init_internals() unnamed_addr #0 section ".meminit.text" align 64 {
entry:
  tail call void @__init_waitqueue_head(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 20), ptr noundef nonnull @.str.172, ptr noundef nonnull @pgdat_init_kcompactd.__key) #27
  tail call void @__init_waitqueue_head(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 9), ptr noundef nonnull @.str.167, ptr noundef nonnull @pgdat_init_internals.__key) #27
  tail call void @__init_waitqueue_head(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 10), ptr noundef nonnull @.str.169, ptr noundef nonnull @pgdat_init_internals.__key.168) #27
  br label %do.body4

do.body4:                                         ; preds = %do.body4, %entry
  %i.01 = phi i32 [ 0, %entry ], [ %inc, %do.body4 ]
  %arrayidx = getelementptr %struct.pglist_data, ptr @contig_page_data, i32 0, i32 11, i32 %i.01
  tail call void @__init_waitqueue_head(ptr noundef %arrayidx, ptr noundef nonnull @.str.171, ptr noundef nonnull @pgdat_init_internals.__key.170) #27
  %inc = add nuw nsw i32 %i.01, 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %do.body4

for.end:                                          ; preds = %do.body4
  tail call void @pgdat_page_ext_init(ptr noundef nonnull @contig_page_data) #27
  tail call void @lruvec_init(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 26)) #27
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @zone_init_internals(ptr noundef %zone, i32 noundef %idx, i32 noundef %remaining_pages) unnamed_addr #0 section ".meminit.text" align 64 {
entry:
  %managed_pages = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 11
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %managed_pages, i32 noundef 4) #27
  %0 = ptrtoint ptr %managed_pages to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile i32 %remaining_pages, ptr %managed_pages, align 4
  %arrayidx = getelementptr [4 x ptr], ptr @zone_names, i32 0, i32 %idx
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  %name = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 15
  %3 = ptrtoint ptr %name to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %2, ptr %name, align 16
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %4 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @contig_page_data, ptr %zone_pgdat, align 4
  %lock = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 22
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.173, ptr noundef nonnull @zone_init_internals.__key, i16 noundef signext 3) #27
  tail call fastcc void @zone_pcp_init(ptr noundef %zone) #31
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @setup_usemap(ptr nocapture noundef %zone) unnamed_addr #10 section ".ref.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %zone_start_pfn = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %0 = ptrtoint ptr %zone_start_pfn to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %zone_start_pfn, align 4
  %spanned_pages = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %2 = ptrtoint ptr %spanned_pages to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %spanned_pages, align 4
  %and.i = and i32 %1, 2047
  %add.i = add i32 %3, 2047
  %add1.i = add i32 %add.i, %and.i
  %4 = lshr i32 %add1.i, 9
  %mul2.i = and i32 %4, 8388604
  %add6.i = add nuw nsw i32 %mul2.i, 31
  %div719.i = lshr i32 %add6.i, 3
  %div920.i = and i32 %div719.i, 2097148
  %pageblock_flags = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 9
  %5 = ptrtoint ptr %pageblock_flags to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %pageblock_flags, align 8
  %tobool.not = icmp eq i32 %div920.i, 0
  br i1 %tobool.not, label %if.end8, label %if.then

if.then:                                          ; preds = %entry
  %call.i = tail call ptr @memblock_alloc_try_nid(i32 noundef %div920.i, i32 noundef 128, i32 noundef 0, i32 noundef 0, i32 noundef 0) #27
  %6 = ptrtoint ptr %pageblock_flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call.i, ptr %pageblock_flags, align 8
  %tobool5.not = icmp eq ptr %call.i, null
  br i1 %tobool5.not, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.then
  %name = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 15
  %7 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name, align 16
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.176, i32 noundef %div920.i, ptr noundef %8, i32 noundef 0) #35
  unreachable

if.end8:                                          ; preds = %if.then, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pgdat_page_ext_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lruvec_init(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @zone_pcp_init(ptr noundef %zone) unnamed_addr #0 section ".meminit.text" align 64 {
entry:
  %per_cpu_pageset = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 5
  %0 = ptrtoint ptr %per_cpu_pageset to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @boot_pageset, ptr %per_cpu_pageset, align 8
  %per_cpu_zonestats = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 6
  %1 = ptrtoint ptr %per_cpu_zonestats to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @boot_zonestats, ptr %per_cpu_zonestats, align 4
  %pageset_high = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 7
  %2 = ptrtoint ptr %pageset_high to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %pageset_high, align 16
  %pageset_batch = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 8
  %3 = ptrtoint ptr %pageset_batch to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %pageset_batch, align 4
  %present_pages.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 13
  %4 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %present_pages.i, align 8
  %tobool.i.not = icmp eq i32 %5, 0
  br i1 %tobool.i.not, label %if.end6, label %do.body

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @zone_pcp_init.__UNIQUE_ID_ddebug423, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@zone_pcp_init, %if.then4)) #27
          to label %if.end6 [label %if.then4], !srcloc !583

if.then4:                                         ; preds = %do.body
  %name = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 15
  %6 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %name, align 16
  %8 = ptrtoint ptr %present_pages.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %present_pages.i, align 8
  %managed_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #27
  %10 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %managed_pages.i.i, align 4
  %cmp.i = icmp ult i32 %11, 262144
  %phi.bo45.i = lshr i32 %11, 12
  %cond.i = select i1 %cmp.i, i32 %phi.bo45.i, i32 64
  %cmp1.i = icmp eq i32 %cond.i, 0
  %spec.store.select.i = select i1 %cmp1.i, i32 1, i32 %cond.i
  %div246.i = lshr i32 %spec.store.select.i, 1
  %add.i = add nuw nsw i32 %div246.i, %spec.store.select.i
  %12 = tail call i32 @llvm.ctlz.i32(i32 %add.i, i1 true) #27, !range !649
  %sub.i.i.op.i.i = xor i32 %12, 31
  %notmask.i = shl nsw i32 -1, %sub.i.i.op.i.i
  %sub28.i = xor i32 %notmask.i, -1
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @zone_pcp_init.__UNIQUE_ID_ddebug423, ptr noundef nonnull @.str.175, ptr noundef %7, i32 noundef %9, i32 noundef %sub28.i) #27
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %do.body, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memblock_alloc_try_nid(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #25

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @early_calculate_totalpages() unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %start_pfn = alloca i32, align 4
  %end_pfn = alloca i32, align 4
  %i = alloca i32, align 4
  %nid = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %start_pfn) #27
  %0 = ptrtoint ptr %start_pfn to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %start_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %end_pfn) #27
  %1 = ptrtoint ptr %end_pfn to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %end_pfn, align 4, !annotation !637
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nid) #27
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %nid, align 4, !annotation !637
  %3 = ptrtoint ptr %i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %i, align 4
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 1, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef nonnull %nid) #27
  %4 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i, align 4
  %cmp3 = icmp sgt i32 %5, -1
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.body, %entry
  %totalpages.04 = phi i32 [ %add, %for.body ], [ 0, %entry ]
  %6 = ptrtoint ptr %end_pfn to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %end_pfn, align 4
  %8 = ptrtoint ptr %start_pfn to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %start_pfn, align 4
  %sub = add i32 %7, %totalpages.04
  %add = sub i32 %sub, %9
  call void @__next_mem_pfn_range(ptr noundef nonnull %i, i32 noundef 1, ptr noundef nonnull %start_pfn, ptr noundef nonnull %end_pfn, ptr noundef nonnull %nid) #27
  %10 = ptrtoint ptr %i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %i, align 4
  %cmp = icmp sgt i32 %11, -1
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %totalpages.0.lcssa = phi i32 [ 0, %entry ], [ %add, %for.body ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nid) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %end_pfn) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %start_pfn) #27
  ret i32 %totalpages.0.lcssa
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @memmap_init_zone_range(ptr noundef %zone, i32 noundef %start_pfn, i32 noundef %end_pfn, ptr nocapture noundef %hole_pfn) unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %zone_start_pfn1 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 10
  %0 = ptrtoint ptr %zone_start_pfn1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %zone_start_pfn1, align 4
  %spanned_pages = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 12
  %2 = ptrtoint ptr %spanned_pages to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %spanned_pages, align 4
  %add = add i32 %3, %1
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %4 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %zone_pgdat, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %zone to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %5 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 1152
  %6 = tail call i32 @llvm.umax.i32(i32 %1, i32 %start_pfn)
  %7 = tail call i32 @llvm.umin.i32(i32 %6, i32 %add)
  %8 = tail call i32 @llvm.umax.i32(i32 %1, i32 %end_pfn)
  %9 = tail call i32 @llvm.umin.i32(i32 %8, i32 %add)
  %cmp20.not = icmp ugt i32 %9, %7
  br i1 %cmp20.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %sub = sub i32 %9, %7
  tail call void @memmap_init_range(i32 noundef %sub, i32 undef, i32 noundef %sub.ptr.div, i32 noundef %7, i32 undef, i32 noundef 0, ptr undef, i32 noundef 1) #31
  %10 = ptrtoint ptr %hole_pfn to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %hole_pfn, align 4
  %cmp21 = icmp ult i32 %11, %7
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end
  tail call fastcc void @init_unavailable_range(i32 noundef %11, i32 noundef %7, i32 noundef %sub.ptr.div, i32 noundef 0) #31
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %if.end
  %12 = ptrtoint ptr %hole_pfn to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %9, ptr %hole_pfn, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %entry
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @init_unavailable_range(i32 noundef %spfn, i32 noundef %epfn, i32 noundef %zone, i32 noundef %node) unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp27 = icmp ult i32 %spfn, %epfn
  br i1 %cmp27, label %for.body, label %if.end13

for.body:                                         ; preds = %for.inc, %entry
  %pfn.029 = phi i32 [ %inc9, %for.inc ], [ %spfn, %entry ]
  %pgcnt.028 = phi i64 [ %pgcnt.1, %for.inc ], [ 0, %entry ]
  %and = and i32 %pfn.029, -2048
  %call = tail call i32 @pfn_valid(i32 noundef %and) #27
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %sub5 = or i32 %pfn.029, 2047
  br label %for.inc

if.end:                                           ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %1 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub6 = sub i32 %pfn.029, %1
  %add.ptr = getelementptr %struct.page, ptr %0, i32 %sub6
  tail call fastcc void @__init_single_page(ptr noundef %add.ptr, i32 noundef %zone) #31
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %2 = load ptr, ptr @mem_map, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %3 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub7 = sub i32 %pfn.029, %3
  %add.ptr8 = getelementptr %struct.page, ptr %2, i32 %sub7
  %4 = ptrtoint ptr %add.ptr8 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %add.ptr8, align 4
  %6 = and i32 %5, 65536
  %tobool.not.i.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i.i, label %PageCompound.exit.i, label %if.then.i

PageCompound.exit.i:                              ; preds = %if.end
  %7 = getelementptr %struct.page, ptr %2, i32 %sub7, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 4
  %and.i.i.i = and i32 %9, 1
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !582

if.then.i:                                        ; preds = %PageCompound.exit.i, %if.end
  tail call void @dump_page(ptr noundef %add.ptr8, ptr noundef nonnull @.str.95) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 442, 0\0A.popsection", ""() #27, !srcloc !594
  unreachable

do.body7.i:                                       ; preds = %PageCompound.exit.i
  %10 = ptrtoint ptr %add.ptr8 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %add.ptr8, align 4
  %cmp.i.not.i = icmp eq i32 %11, -1
  br i1 %cmp.i.not.i, label %if.then16.i, label %__SetPageReserved.exit, !prof !584

if.then16.i:                                      ; preds = %do.body7.i
  tail call void @dump_page(ptr noundef %add.ptr8, ptr noundef nonnull @.str.93) #27
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 442, 0\0A.popsection", ""() #27, !srcloc !595
  unreachable

__SetPageReserved.exit:                           ; preds = %do.body7.i
  %or.i.i = or i32 %11, 4096
  %12 = ptrtoint ptr %add.ptr8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or.i.i, ptr %add.ptr8, align 4
  %inc = add i64 %pgcnt.028, 1
  br label %for.inc

for.inc:                                          ; preds = %__SetPageReserved.exit, %if.then
  %pgcnt.1 = phi i64 [ %inc, %__SetPageReserved.exit ], [ %pgcnt.028, %if.then ]
  %pfn.1 = phi i32 [ %pfn.029, %__SetPageReserved.exit ], [ %sub5, %if.then ]
  %inc9 = add i32 %pfn.1, 1
  %cmp = icmp ult i32 %inc9, %epfn
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc
  %tobool10.not = icmp eq i64 %pgcnt.1, 0
  br i1 %tobool10.not, label %if.end13, label %do.end

do.end:                                           ; preds = %for.end
  %arrayidx = getelementptr [4 x ptr], ptr @zone_names, i32 0, i32 %zone
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx, align 4
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.182, i32 noundef %node, ptr noundef %14, i64 noundef %pgcnt.1) #29
  br label %if.end13

if.end13:                                         ; preds = %do.end, %for.end, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @parse_option_str(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cmdline_parse_core(ptr noundef %p, ptr nocapture noundef writeonly %core, ptr nocapture noundef writeonly %percent) unnamed_addr #0 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %p.addr = alloca ptr, align 4
  %endptr = alloca ptr, align 4
  %0 = ptrtoint ptr %p.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %p, ptr %p.addr, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %endptr) #27
  %1 = ptrtoint ptr %endptr to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %endptr, align 4, !annotation !637
  %tobool.not = icmp eq ptr %p, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = call i64 @simple_strtoull(ptr noundef nonnull %p, ptr noundef nonnull %endptr, i32 noundef 0) #27
  %2 = ptrtoint ptr %endptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %endptr, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %3, align 1
  %cmp = icmp eq i8 %5, 37
  br i1 %cmp, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %cmp3 = icmp ugt i64 %call, 100
  br i1 %cmp3, label %do.end, label %if.end19, !prof !584

do.end:                                           ; preds = %if.then2
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 8125, i32 noundef 9, ptr noundef null) #27
  br label %if.end19

if.end19:                                         ; preds = %do.end, %if.then2
  %conv26 = trunc i64 %call to i32
  br label %if.end62

if.else:                                          ; preds = %if.end
  %6 = ptrtoint ptr %p.addr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %p.addr, align 4
  %call27 = call i64 @memparse(ptr noundef %7, ptr noundef nonnull %p.addr) #27
  %shr = lshr i64 %call27, 12
  %cmp29 = icmp ugt i64 %call27, 17592186044415
  br i1 %cmp29, label %do.end46, label %if.end52, !prof !584

do.end46:                                         ; preds = %if.else
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 8131, i32 noundef 9, ptr noundef null) #27
  br label %if.end52

if.end52:                                         ; preds = %do.end46, %if.else
  %conv61 = trunc i64 %shr to i32
  %8 = ptrtoint ptr %core to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %conv61, ptr %core, align 4
  br label %if.end62

if.end62:                                         ; preds = %if.end52, %if.end19
  %storemerge = phi i32 [ 0, %if.end52 ], [ %conv26, %if.end19 ]
  %9 = ptrtoint ptr %percent to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %storemerge, ptr %percent, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end62, %entry
  %retval.0 = phi i32 [ 0, %if.end62 ], [ -22, %entry ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %endptr) #27
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @simple_strtoull(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @memparse(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_setup_state(i32 noundef, ptr noundef, i1 noundef zeroext, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_add_drain_cpu(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @vm_events_fold_cpu(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpu_vm_stats_fold(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @calculate_totalreserve_pages() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @first_online_pgdat() #27
  %tobool.not51 = icmp eq ptr %call, null
  br i1 %tobool.not51, label %for.end23, label %for.end.3

for.end.3:                                        ; preds = %for.end.3, %entry
  %reserve_pages.053 = phi i32 [ %add17.3, %for.end.3 ], [ 0, %entry ]
  %pgdat.052 = phi ptr [ %call22, %for.end.3 ], [ %call, %entry ]
  %totalreserve_pages = getelementptr inbounds %struct.pglist_data, ptr %pgdat.052, i32 0, i32 23
  %0 = ptrtoint ptr %totalreserve_pages to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %totalreserve_pages, align 8
  %managed_pages.i = getelementptr %struct.zone, ptr %pgdat.052, i32 0, i32 11
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i, i32 noundef 4) #27
  %1 = ptrtoint ptr %managed_pages.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %managed_pages.i, align 4
  %arrayidx = getelementptr %struct.zone, ptr %pgdat.052, i32 0, i32 3, i32 0
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx, align 4
  %arrayidx.156 = getelementptr %struct.zone, ptr %pgdat.052, i32 0, i32 3, i32 1
  %5 = ptrtoint ptr %arrayidx.156 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx.156, align 4
  %7 = call i32 @llvm.smax.i32(i32 %4, i32 %6)
  %arrayidx.258 = getelementptr %struct.zone, ptr %pgdat.052, i32 0, i32 3, i32 2
  %8 = ptrtoint ptr %arrayidx.258 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx.258, align 4
  %10 = call i32 @llvm.smax.i32(i32 %7, i32 %9)
  %arrayidx.362 = getelementptr %struct.zone, ptr %pgdat.052, i32 0, i32 3, i32 3
  %11 = ptrtoint ptr %arrayidx.362 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.362, align 4
  %13 = call i32 @llvm.smax.i32(i32 %10, i32 %12)
  %14 = call i32 @llvm.smax.i32(i32 %13, i32 0)
  %arrayidx10 = getelementptr %struct.zone, ptr %pgdat.052, i32 0, i32 0, i32 2
  %15 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx10, align 8
  %watermark_boost = getelementptr %struct.zone, ptr %pgdat.052, i32 0, i32 1
  %17 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %watermark_boost, align 4
  %add = add i32 %16, %14
  %add11 = add i32 %add, %18
  %19 = tail call i32 @llvm.umin.i32(i32 %add11, i32 %2)
  %20 = ptrtoint ptr %totalreserve_pages to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %totalreserve_pages, align 8
  %add16 = add i32 %19, %21
  store i32 %add16, ptr %totalreserve_pages, align 8
  %add17 = add i32 %19, %reserve_pages.053
  %managed_pages.i.1 = getelementptr %struct.zone, ptr %pgdat.052, i32 1, i32 11
  %call.i.i.i.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.1, i32 noundef 4) #27
  %22 = ptrtoint ptr %managed_pages.i.1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %managed_pages.i.1, align 4
  %arrayidx.1 = getelementptr %struct.zone, ptr %pgdat.052, i32 1, i32 3, i32 1
  %24 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.1, align 4
  %arrayidx.1.1 = getelementptr %struct.zone, ptr %pgdat.052, i32 1, i32 3, i32 2
  %26 = ptrtoint ptr %arrayidx.1.1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx.1.1, align 4
  %28 = call i32 @llvm.smax.i32(i32 %25, i32 %27)
  %arrayidx.1.2 = getelementptr %struct.zone, ptr %pgdat.052, i32 1, i32 3, i32 3
  %29 = ptrtoint ptr %arrayidx.1.2 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx.1.2, align 4
  %31 = call i32 @llvm.smax.i32(i32 %28, i32 %30)
  %32 = call i32 @llvm.smax.i32(i32 %31, i32 0)
  %arrayidx10.1 = getelementptr %struct.zone, ptr %pgdat.052, i32 1, i32 0, i32 2
  %33 = ptrtoint ptr %arrayidx10.1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx10.1, align 8
  %watermark_boost.1 = getelementptr %struct.zone, ptr %pgdat.052, i32 1, i32 1
  %35 = ptrtoint ptr %watermark_boost.1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %watermark_boost.1, align 4
  %add.1 = add i32 %34, %32
  %add11.1 = add i32 %add.1, %36
  %37 = tail call i32 @llvm.umin.i32(i32 %add11.1, i32 %23)
  %38 = ptrtoint ptr %totalreserve_pages to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %totalreserve_pages, align 8
  %add16.1 = add i32 %37, %39
  store i32 %add16.1, ptr %totalreserve_pages, align 8
  %add17.1 = add i32 %37, %add17
  %managed_pages.i.2 = getelementptr %struct.zone, ptr %pgdat.052, i32 2, i32 11
  %call.i.i.i.2 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.2, i32 noundef 4) #27
  %40 = ptrtoint ptr %managed_pages.i.2 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %managed_pages.i.2, align 4
  %arrayidx.2 = getelementptr %struct.zone, ptr %pgdat.052, i32 2, i32 3, i32 2
  %42 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx.2, align 4
  %arrayidx.2.1 = getelementptr %struct.zone, ptr %pgdat.052, i32 2, i32 3, i32 3
  %44 = ptrtoint ptr %arrayidx.2.1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx.2.1, align 4
  %46 = call i32 @llvm.smax.i32(i32 %43, i32 %45)
  %47 = call i32 @llvm.smax.i32(i32 %46, i32 0)
  %arrayidx10.2 = getelementptr %struct.zone, ptr %pgdat.052, i32 2, i32 0, i32 2
  %48 = ptrtoint ptr %arrayidx10.2 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx10.2, align 8
  %watermark_boost.2 = getelementptr %struct.zone, ptr %pgdat.052, i32 2, i32 1
  %50 = ptrtoint ptr %watermark_boost.2 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %watermark_boost.2, align 4
  %add.2 = add i32 %49, %47
  %add11.2 = add i32 %add.2, %51
  %52 = tail call i32 @llvm.umin.i32(i32 %add11.2, i32 %41)
  %53 = ptrtoint ptr %totalreserve_pages to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %totalreserve_pages, align 8
  %add16.2 = add i32 %52, %54
  store i32 %add16.2, ptr %totalreserve_pages, align 8
  %add17.2 = add i32 %52, %add17.1
  %managed_pages.i.3 = getelementptr %struct.zone, ptr %pgdat.052, i32 3, i32 11
  %call.i.i.i.3 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.3, i32 noundef 4) #27
  %55 = ptrtoint ptr %managed_pages.i.3 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %managed_pages.i.3, align 4
  %arrayidx.3 = getelementptr %struct.zone, ptr %pgdat.052, i32 3, i32 3, i32 3
  %57 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx.3, align 4
  %59 = tail call i32 @llvm.smax.i32(i32 %58, i32 0)
  %arrayidx10.3 = getelementptr %struct.zone, ptr %pgdat.052, i32 3, i32 0, i32 2
  %60 = ptrtoint ptr %arrayidx10.3 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx10.3, align 8
  %watermark_boost.3 = getelementptr %struct.zone, ptr %pgdat.052, i32 3, i32 1
  %62 = ptrtoint ptr %watermark_boost.3 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %watermark_boost.3, align 4
  %add.3 = add i32 %61, %59
  %add11.3 = add i32 %add.3, %63
  %64 = tail call i32 @llvm.umin.i32(i32 %add11.3, i32 %56)
  %65 = ptrtoint ptr %totalreserve_pages to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %totalreserve_pages, align 8
  %add16.3 = add i32 %64, %66
  store i32 %add16.3, ptr %totalreserve_pages, align 8
  %add17.3 = add i32 %64, %add17.2
  %call22 = tail call ptr @next_online_pgdat(ptr noundef nonnull %pgdat.052) #27
  %tobool.not = icmp eq ptr %call22, null
  br i1 %tobool.not, label %for.end23, label %for.end.3

for.end23:                                        ; preds = %for.end.3, %entry
  %reserve_pages.0.lcssa = phi i32 [ 0, %entry ], [ %add17.3, %for.end.3 ]
  store i32 %reserve_pages.0.lcssa, ptr @totalreserve_pages, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_cache_disable() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @isolate_migratepages_range(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @reclaim_clean_pages_from_list(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @migrate_pages(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_migration_target(ptr noundef, i32 noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @putback_movable_pages(ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #25

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #27

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #28 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 210)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #28 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 210)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #8 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { nocallback nofree nosync nounwind willreturn }
attributes #12 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #13 = { mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { nounwind null_pointer_is_valid sanitize_address sspstrong allocsize(0) uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong allocsize(1) uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { cold nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { argmemonly nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #22 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #23 = { cold noreturn null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind readonly }
attributes #25 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #26 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #27 = { nounwind }
attributes #28 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #29 = { cold nounwind }
attributes #30 = { nounwind readonly willreturn }
attributes #31 = { cold }
attributes #32 = { nounwind allocsize(0) }
attributes #33 = { nounwind readnone }
attributes #34 = { allocsize(0) }
attributes #35 = { cold noreturn nounwind }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !60, !61, !62, !63, !65, !67, !69, !71, !73, !75, !76, !78, !80, !81, !82, !84, !85, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !131, !132, !133, !135, !136, !137, !138, !139, !141, !142, !143, !145, !146, !147, !149, !150, !151, !153, !154, !156, !157, !158, !160, !161, !162, !164, !165, !166, !168, !169, !170, !172, !173, !174, !175, !176, !177, !179, !180, !181, !182, !184, !185, !186, !187, !189, !190, !191, !193, !194, !195, !197, !198, !199, !201, !202, !203, !205, !206, !207, !209, !210, !211, !213, !214, !215, !217, !219, !221, !223, !224, !225, !226, !228, !229, !230, !231, !233, !235, !237, !238, !239, !240, !242, !244, !246, !247, !248, !249, !250, !251, !252, !254, !256, !258, !259, !261, !262, !264, !266, !268, !270, !272, !274, !276, !278, !280, !282, !284, !286, !288, !290, !291, !293, !294, !296, !297, !298, !299, !301, !303, !305, !307, !309, !311, !313, !315, !317, !318, !319, !320, !322, !323, !325, !327, !329, !331, !333, !335, !337, !339, !341, !343, !345, !346, !347, !348, !350, !351, !352, !354, !356, !358, !360, !362, !364, !366, !368, !370, !372, !374, !376, !377, !379, !381, !383, !384, !386, !387, !388, !390, !391, !392, !394, !396, !397, !399, !401, !403, !405, !407, !408, !409, !410, !412, !413, !414, !416, !418, !420, !422, !424, !426, !428, !430, !432, !434, !436, !437, !439, !440, !442, !444, !446, !448, !450, !452, !454, !456, !457, !458, !460, !461, !463, !465, !466, !468, !469, !471, !473, !474, !475, !476, !478, !480, !482, !484, !485, !486, !487, !489, !490, !491, !492, !494, !496, !497, !498, !500, !501, !502, !504, !505, !506, !508, !509, !511, !512, !514, !515, !517, !518, !520, !521, !523, !524, !526, !527, !528, !530, !532, !533, !534, !535, !537, !539, !541, !543, !545, !547, !549, !551, !553, !554, !555, !556, !557, !559, !560, !562, !563, !564, !566, !568, !569, !570}
!llvm.named.register.sp = !{!572}
!llvm.module.flags = !{!573, !574, !575, !576, !577, !578, !579, !580}
!llvm.ident = !{!581}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../mm/page_alloc.c", i32 132, i32 10}
!2 = !{ptr @pagesets, !3, !"pagesets", i1 false, i1 false}
!3 = !{!"../mm/page_alloc.c", i32 131, i32 8}
!4 = !{ptr @vm_numa_stat_key, !5, !"vm_numa_stat_key", i1 false, i1 false}
!5 = !{!"../mm/page_alloc.c", i32 140, i32 1}
!6 = !{ptr @node_states, !7, !"node_states", i1 false, i1 false}
!7 = !{!"../mm/page_alloc.c", i32 169, i32 12}
!8 = !{ptr @__ksymtab_node_states, !9, !"__ksymtab_node_states", i1 false, i1 false}
!9 = !{!"../mm/page_alloc.c", i32 181, i32 1}
!10 = !{ptr @__ksymtab__totalram_pages, !11, !"__ksymtab__totalram_pages", i1 false, i1 false}
!11 = !{!"../mm/page_alloc.c", i32 184, i32 1}
!12 = !{ptr @gfp_allowed_mask, !13, !"gfp_allowed_mask", i1 false, i1 false}
!13 = !{!"../mm/page_alloc.c", i32 189, i32 7}
!14 = !{ptr @init_on_alloc, !15, !"init_on_alloc", i1 false, i1 false}
!15 = !{!"../mm/page_alloc.c", i32 190, i32 1}
!16 = !{ptr @__ksymtab_init_on_alloc, !17, !"__ksymtab_init_on_alloc", i1 false, i1 false}
!17 = !{!"../mm/page_alloc.c", i32 191, i32 1}
!18 = !{ptr @init_on_free, !19, !"init_on_free", i1 false, i1 false}
!19 = !{!"../mm/page_alloc.c", i32 193, i32 1}
!20 = !{ptr @__ksymtab_init_on_free, !21, !"__ksymtab_init_on_free", i1 false, i1 false}
!21 = !{!"../mm/page_alloc.c", i32 194, i32 1}
!22 = !{ptr @__setup_early_init_on_alloc, !23, !"__setup_early_init_on_alloc", i1 false, i1 false}
!23 = !{!"../mm/page_alloc.c", i32 203, i32 1}
!24 = !{ptr @__setup_early_init_on_free, !25, !"__setup_early_init_on_free", i1 false, i1 false}
!25 = !{!"../mm/page_alloc.c", i32 211, i32 1}
!26 = !{ptr @.str.1, !27, !"<string literal>", i1 false, i1 false}
!27 = !{!"../mm/page_alloc.c", i32 246, i32 2}
!28 = !{ptr @sysctl_lowmem_reserve_ratio, !29, !"sysctl_lowmem_reserve_ratio", i1 false, i1 false}
!29 = !{!"../mm/page_alloc.c", i32 287, i32 5}
!30 = !{ptr @.str.2, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../mm/page_alloc.c", i32 319, i32 2}
!32 = !{ptr @.str.3, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../mm/page_alloc.c", i32 320, i32 2}
!34 = !{ptr @.str.4, !35, !"<string literal>", i1 false, i1 false}
!35 = !{!"../mm/page_alloc.c", i32 321, i32 2}
!36 = !{ptr @.str.5, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../mm/page_alloc.c", i32 322, i32 2}
!38 = !{ptr @.str.6, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../mm/page_alloc.c", i32 324, i32 2}
!40 = !{ptr @.str.7, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../mm/page_alloc.c", i32 327, i32 2}
!42 = !{ptr @migratetype_names, !43, !"migratetype_names", i1 false, i1 false}
!43 = !{!"../mm/page_alloc.c", i32 318, i32 20}
!44 = !{ptr @compound_page_dtors, !45, !"compound_page_dtors", i1 false, i1 false}
!45 = !{!"../mm/page_alloc.c", i32 331, i32 28}
!46 = !{ptr @min_free_kbytes, !47, !"min_free_kbytes", i1 false, i1 false}
!47 = !{!"../mm/page_alloc.c", i32 342, i32 5}
!48 = !{ptr @user_min_free_kbytes, !49, !"user_min_free_kbytes", i1 false, i1 false}
!49 = !{!"../mm/page_alloc.c", i32 343, i32 5}
!50 = !{ptr @watermark_boost_factor, !51, !"watermark_boost_factor", i1 false, i1 false}
!51 = !{!"../mm/page_alloc.c", i32 344, i32 5}
!52 = !{ptr @watermark_scale_factor, !53, !"watermark_scale_factor", i1 false, i1 false}
!53 = !{!"../mm/page_alloc.c", i32 345, i32 5}
!54 = !{ptr @__ksymtab_movable_zone, !55, !"__ksymtab_movable_zone", i1 false, i1 false}
!55 = !{!"../mm/page_alloc.c", i32 362, i32 1}
!56 = !{ptr @.str.8, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../mm/page_alloc.c", i32 550, i32 2}
!58 = !{ptr @.str.9, !59, !"<string literal>", i1 false, i1 false}
!59 = !{!"../mm/page_alloc.c", i32 854, i32 3}
!60 = !{ptr @.str.10, !59, !"<string literal>", i1 false, i1 false}
!61 = !{ptr @init_mem_debugging_and_hardening._entry, !59, !"_entry", i1 false, i1 false}
!62 = !{ptr @init_mem_debugging_and_hardening._entry_ptr, !59, !"_entry_ptr", i1 false, i1 false}
!63 = !{ptr @.str.11, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../mm/page_alloc.c", i32 3501, i32 2}
!65 = !{ptr @.str.12, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../mm/page_alloc.c", i32 3502, i32 2}
!67 = !{ptr @__ksymtab_split_page, !68, !"__ksymtab_split_page", i1 false, i1 false}
!68 = !{!"../mm/page_alloc.c", i32 3509, i32 1}
!69 = !{ptr @__setup_setup_fail_page_alloc, !70, !"__setup_setup_fail_page_alloc", i1 false, i1 false}
!70 = !{!"../mm/page_alloc.c", i32 3771, i32 1}
!71 = !{ptr @__initcall__kmod_page_alloc__395_3807_fail_page_alloc_debugfs7, !72, !"__initcall__kmod_page_alloc__395_3807_fail_page_alloc_debugfs7", i1 false, i1 false}
!72 = !{!"../mm/page_alloc.c", i32 3807, i32 1}
!73 = !{ptr @.str.13, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../mm/page_alloc.c", i32 4221, i32 9}
!75 = !{ptr @warn_alloc.nopage_rs, !74, !"nopage_rs", i1 false, i1 false}
!76 = !{ptr @__func__.warn_alloc, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../mm/page_alloc.c", i32 4224, i32 8}
!78 = !{ptr @.str.14, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../mm/page_alloc.c", i32 4231, i32 2}
!80 = !{ptr @warn_alloc._entry, !79, !"_entry", i1 false, i1 false}
!81 = !{ptr @warn_alloc._entry_ptr, !79, !"_entry_ptr", i1 false, i1 false}
!82 = !{ptr @.str.16, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../mm/page_alloc.c", i32 4237, i32 2}
!84 = !{ptr @warn_alloc._entry.15, !83, !"_entry", i1 false, i1 false}
!85 = !{ptr @warn_alloc._entry_ptr.17, !83, !"_entry_ptr", i1 false, i1 false}
!86 = !{ptr @__ksymtab_fs_reclaim_acquire, !87, !"__ksymtab_fs_reclaim_acquire", i1 false, i1 false}
!87 = !{!"../mm/page_alloc.c", i32 4578, i32 1}
!88 = !{ptr @__ksymtab_fs_reclaim_release, !89, !"__ksymtab_fs_reclaim_release", i1 false, i1 false}
!89 = !{!"../mm/page_alloc.c", i32 4589, i32 1}
!90 = !{ptr @__ksymtab___alloc_pages_bulk, !91, !"__ksymtab___alloc_pages_bulk", i1 false, i1 false}
!91 = !{!"../mm/page_alloc.c", i32 5346, i32 1}
!92 = distinct !{null, !93, !"__already_done", i1 false, i1 false}
!93 = !{!"../mm/page_alloc.c", i32 5364, i32 3}
!94 = !{ptr @__ksymtab___alloc_pages, !95, !"__ksymtab___alloc_pages", i1 false, i1 false}
!95 = !{!"../mm/page_alloc.c", i32 5415, i32 1}
!96 = !{ptr @__ksymtab___folio_alloc, !97, !"__ksymtab___folio_alloc", i1 false, i1 false}
!97 = !{!"../mm/page_alloc.c", i32 5427, i32 1}
!98 = !{ptr @__ksymtab___get_free_pages, !99, !"__ksymtab___get_free_pages", i1 false, i1 false}
!99 = !{!"../mm/page_alloc.c", i32 5443, i32 1}
!100 = !{ptr @__ksymtab_get_zeroed_page, !101, !"__ksymtab_get_zeroed_page", i1 false, i1 false}
!101 = !{!"../mm/page_alloc.c", i32 5449, i32 1}
!102 = !{ptr @__ksymtab___free_pages, !103, !"__ksymtab___free_pages", i1 false, i1 false}
!103 = !{!"../mm/page_alloc.c", i32 5479, i32 1}
!104 = !{ptr @__ksymtab_free_pages, !105, !"__ksymtab_free_pages", i1 false, i1 false}
!105 = !{!"../mm/page_alloc.c", i32 5489, i32 1}
!106 = !{ptr @.str.18, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../mm/page_alloc.c", i32 5525, i32 2}
!108 = !{ptr @__ksymtab___page_frag_cache_drain, !109, !"__ksymtab___page_frag_cache_drain", i1 false, i1 false}
!109 = !{!"../mm/page_alloc.c", i32 5530, i32 1}
!110 = !{ptr @__ksymtab_page_frag_alloc_align, !111, !"__ksymtab_page_frag_alloc_align", i1 false, i1 false}
!111 = !{!"../mm/page_alloc.c", i32 5591, i32 1}
!112 = !{ptr @__ksymtab_page_frag_free, !113, !"__ksymtab_page_frag_free", i1 false, i1 false}
!113 = !{!"../mm/page_alloc.c", i32 5603, i32 1}
!114 = distinct !{null, !115, !"__already_done", i1 false, i1 false}
!115 = !{!"../mm/page_alloc.c", i32 5641, i32 6}
!116 = !{ptr @__ksymtab_alloc_pages_exact, !117, !"__ksymtab_alloc_pages_exact", i1 false, i1 false}
!117 = !{!"../mm/page_alloc.c", i32 5647, i32 1}
!118 = distinct !{null, !119, !"__already_done", i1 false, i1 false}
!119 = !{!"../mm/page_alloc.c", i32 5666, i32 6}
!120 = !{ptr @__ksymtab_free_pages_exact, !121, !"__ksymtab_free_pages_exact", i1 false, i1 false}
!121 = !{!"../mm/page_alloc.c", i32 5692, i32 1}
!122 = !{ptr @__ksymtab_nr_free_buffer_pages, !123, !"__ksymtab_nr_free_buffer_pages", i1 false, i1 false}
!123 = !{!"../mm/page_alloc.c", i32 5739, i32 1}
!124 = !{ptr @__ksymtab_si_mem_available, !125, !"__ksymtab_si_mem_available", i1 false, i1 false}
!125 = !{!"../mm/page_alloc.c", i32 5791, i32 1}
!126 = !{ptr @__ksymtab_si_meminfo, !127, !"__ksymtab_si_meminfo", i1 false, i1 false}
!127 = !{!"../mm/page_alloc.c", i32 5804, i32 1}
!128 = !{ptr @.str.19, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../mm/page_alloc.c", i32 5912, i32 2}
!130 = !{ptr @.str.20, !129, !"<string literal>", i1 false, i1 false}
!131 = !{ptr @show_free_areas._entry, !129, !"_entry", i1 false, i1 false}
!132 = !{ptr @show_free_areas._entry_ptr, !129, !"_entry_ptr", i1 false, i1 false}
!133 = !{ptr @.str.22, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../mm/page_alloc.c", i32 5943, i32 3}
!135 = !{ptr @show_free_areas._entry.21, !134, !"_entry", i1 false, i1 false}
!136 = !{ptr @show_free_areas._entry_ptr.23, !134, !"_entry_ptr", i1 false, i1 false}
!137 = !{ptr @.str.24, !134, !"<string literal>", i1 false, i1 false}
!138 = !{ptr @.str.25, !134, !"<string literal>", i1 false, i1 false}
!139 = !{ptr @.str.27, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../mm/page_alloc.c", i32 6006, i32 3}
!141 = !{ptr @show_free_areas._entry.26, !140, !"_entry", i1 false, i1 false}
!142 = !{ptr @show_free_areas._entry_ptr.28, !140, !"_entry_ptr", i1 false, i1 false}
!143 = !{ptr @.str.30, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../mm/page_alloc.c", i32 6048, i32 3}
!145 = !{ptr @show_free_areas._entry.29, !144, !"_entry", i1 false, i1 false}
!146 = !{ptr @show_free_areas._entry_ptr.31, !144, !"_entry_ptr", i1 false, i1 false}
!147 = !{ptr @.str.33, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../mm/page_alloc.c", i32 6050, i32 4}
!149 = !{ptr @show_free_areas._entry.32, !148, !"_entry", i1 false, i1 false}
!150 = !{ptr @show_free_areas._entry_ptr.34, !148, !"_entry_ptr", i1 false, i1 false}
!151 = !{ptr @show_free_areas._entry.35, !152, !"_entry", i1 false, i1 false}
!152 = !{!"../mm/page_alloc.c", i32 6051, i32 3}
!153 = !{ptr @show_free_areas._entry_ptr.36, !152, !"_entry_ptr", i1 false, i1 false}
!154 = !{ptr @.str.38, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../mm/page_alloc.c", i32 6062, i32 3}
!156 = !{ptr @show_free_areas._entry.37, !155, !"_entry", i1 false, i1 false}
!157 = !{ptr @show_free_areas._entry_ptr.39, !155, !"_entry_ptr", i1 false, i1 false}
!158 = !{ptr @.str.41, !159, !"<string literal>", i1 false, i1 false}
!159 = !{!"../mm/page_alloc.c", i32 6080, i32 4}
!160 = !{ptr @show_free_areas._entry.40, !159, !"_entry", i1 false, i1 false}
!161 = !{ptr @show_free_areas._entry_ptr.42, !159, !"_entry_ptr", i1 false, i1 false}
!162 = !{ptr @.str.44, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../mm/page_alloc.c", i32 6085, i32 3}
!164 = !{ptr @show_free_areas._entry.43, !163, !"_entry", i1 false, i1 false}
!165 = !{ptr @show_free_areas._entry_ptr.45, !163, !"_entry_ptr", i1 false, i1 false}
!166 = !{ptr @.str.47, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../mm/page_alloc.c", i32 6090, i32 2}
!168 = !{ptr @show_free_areas._entry.46, !167, !"_entry", i1 false, i1 false}
!169 = !{ptr @show_free_areas._entry_ptr.48, !167, !"_entry_ptr", i1 false, i1 false}
!170 = !{ptr @.str.49, !171, !"<string literal>", i1 false, i1 false}
!171 = !{!"../mm/page_alloc.c", i32 6485, i32 2}
!172 = !{ptr @.str.50, !171, !"<string literal>", i1 false, i1 false}
!173 = !{ptr @build_all_zonelists._entry, !171, !"_entry", i1 false, i1 false}
!174 = !{ptr @build_all_zonelists._entry_ptr, !171, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @.str.51, !171, !"<string literal>", i1 false, i1 false}
!176 = !{ptr @.str.52, !171, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @.str.53, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../mm/page_alloc.c", i32 7087, i32 2}
!179 = !{ptr @.str.54, !178, !"<string literal>", i1 false, i1 false}
!180 = !{ptr @init_currently_empty_zone._entry, !178, !"_entry", i1 false, i1 false}
!181 = !{ptr @init_currently_empty_zone._entry_ptr, !178, !"_entry_ptr", i1 false, i1 false}
!182 = !{ptr @.str.55, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../mm/page_alloc.c", i32 8059, i32 2}
!184 = !{ptr @.str.56, !183, !"<string literal>", i1 false, i1 false}
!185 = !{ptr @free_area_init._entry, !183, !"_entry", i1 false, i1 false}
!186 = !{ptr @free_area_init._entry_ptr, !183, !"_entry_ptr", i1 false, i1 false}
!187 = !{ptr @.str.58, !188, !"<string literal>", i1 false, i1 false}
!188 = !{!"../mm/page_alloc.c", i32 8063, i32 3}
!189 = !{ptr @free_area_init._entry.57, !188, !"_entry", i1 false, i1 false}
!190 = !{ptr @free_area_init._entry_ptr.59, !188, !"_entry_ptr", i1 false, i1 false}
!191 = !{ptr @.str.61, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../mm/page_alloc.c", i32 8066, i32 4}
!193 = !{ptr @free_area_init._entry.60, !192, !"_entry", i1 false, i1 false}
!194 = !{ptr @free_area_init._entry_ptr.62, !192, !"_entry_ptr", i1 false, i1 false}
!195 = !{ptr @.str.64, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../mm/page_alloc.c", i32 8068, i32 4}
!197 = !{ptr @free_area_init._entry.63, !196, !"_entry", i1 false, i1 false}
!198 = !{ptr @free_area_init._entry_ptr.65, !196, !"_entry_ptr", i1 false, i1 false}
!199 = !{ptr @.str.67, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../mm/page_alloc.c", i32 8076, i32 2}
!201 = !{ptr @free_area_init._entry.66, !200, !"_entry", i1 false, i1 false}
!202 = !{ptr @free_area_init._entry_ptr.68, !200, !"_entry_ptr", i1 false, i1 false}
!203 = !{ptr @.str.70, !204, !"<string literal>", i1 false, i1 false}
!204 = !{!"../mm/page_alloc.c", i32 8079, i32 4}
!205 = !{ptr @free_area_init._entry.69, !204, !"_entry", i1 false, i1 false}
!206 = !{ptr @free_area_init._entry_ptr.71, !204, !"_entry_ptr", i1 false, i1 false}
!207 = !{ptr @.str.73, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../mm/page_alloc.c", i32 8088, i32 2}
!209 = !{ptr @free_area_init._entry.72, !208, !"_entry", i1 false, i1 false}
!210 = !{ptr @free_area_init._entry_ptr.74, !208, !"_entry_ptr", i1 false, i1 false}
!211 = !{ptr @.str.76, !212, !"<string literal>", i1 false, i1 false}
!212 = !{!"../mm/page_alloc.c", i32 8090, i32 3}
!213 = !{ptr @free_area_init._entry.75, !212, !"_entry", i1 false, i1 false}
!214 = !{ptr @free_area_init._entry_ptr.77, !212, !"_entry_ptr", i1 false, i1 false}
!215 = !{ptr @__setup_cmdline_parse_kernelcore, !216, !"__setup_cmdline_parse_kernelcore", i1 false, i1 false}
!216 = !{!"../mm/page_alloc.c", i32 8165, i32 1}
!217 = !{ptr @__setup_cmdline_parse_movablecore, !218, !"__setup_cmdline_parse_movablecore", i1 false, i1 false}
!218 = !{!"../mm/page_alloc.c", i32 8166, i32 1}
!219 = !{ptr @__ksymtab_adjust_managed_page_count, !220, !"__ksymtab_adjust_managed_page_count", i1 false, i1 false}
!220 = !{!"../mm/page_alloc.c", i32 8177, i32 1}
!221 = !{ptr @.str.78, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../mm/page_alloc.c", i32 8210, i32 3}
!223 = !{ptr @.str.79, !222, !"<string literal>", i1 false, i1 false}
!224 = !{ptr @free_reserved_area._entry, !222, !"_entry", i1 false, i1 false}
!225 = !{ptr @free_reserved_area._entry_ptr, !222, !"_entry_ptr", i1 false, i1 false}
!226 = !{ptr @.str.80, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../mm/page_alloc.c", i32 8250, i32 2}
!228 = !{ptr @.str.81, !227, !"<string literal>", i1 false, i1 false}
!229 = !{ptr @mem_init_print_info._entry, !227, !"_entry", i1 false, i1 false}
!230 = !{ptr @mem_init_print_info._entry_ptr, !227, !"_entry_ptr", i1 false, i1 false}
!231 = !{ptr @.str.82, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../mm/page_alloc.c", i32 8344, i32 6}
!233 = !{ptr @setup_per_zone_wmarks.lock, !234, !"lock", i1 false, i1 false}
!234 = !{!"../mm/page_alloc.c", i32 8496, i32 9}
!235 = !{ptr @.str.83, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../mm/page_alloc.c", i32 8545, i32 3}
!237 = !{ptr @.str.84, !236, !"<string literal>", i1 false, i1 false}
!238 = !{ptr @calculate_min_free_kbytes._entry, !236, !"_entry", i1 false, i1 false}
!239 = !{ptr @calculate_min_free_kbytes._entry_ptr, !236, !"_entry_ptr", i1 false, i1 false}
!240 = !{ptr @__initcall__kmod_page_alloc__500_8566_init_per_zone_wmark_min2, !241, !"__initcall__kmod_page_alloc__500_8566_init_per_zone_wmark_min2", i1 false, i1 false}
!241 = !{!"../mm/page_alloc.c", i32 8566, i32 1}
!242 = !{ptr @.str.85, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../mm/page_alloc.c", i32 8853, i32 9}
!244 = !{ptr @.str.86, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../mm/page_alloc.c", i32 8855, i32 2}
!246 = !{ptr @.str.87, !245, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @alloc_large_system_hash._entry, !245, !"_entry", i1 false, i1 false}
!248 = !{ptr @alloc_large_system_hash._entry_ptr, !245, !"_entry_ptr", i1 false, i1 false}
!249 = !{ptr @.str.88, !245, !"<string literal>", i1 false, i1 false}
!250 = !{ptr @.str.89, !245, !"<string literal>", i1 false, i1 false}
!251 = !{ptr @.str.90, !245, !"<string literal>", i1 false, i1 false}
!252 = !{ptr @__ksymtab_alloc_contig_range, !253, !"__ksymtab_alloc_contig_range", i1 false, i1 false}
!253 = !{!"../mm/page_alloc.c", i32 9229, i32 1}
!254 = !{ptr @.str.91, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../mm/page_alloc.c", i32 9337, i32 2}
!256 = !{ptr @__ksymtab_free_contig_range, !257, !"__ksymtab_free_contig_range", i1 false, i1 false}
!257 = !{!"../mm/page_alloc.c", i32 9339, i32 1}
!258 = !{ptr @__pcpu_unique_pagesets, !3, !"__pcpu_unique_pagesets", i1 false, i1 false}
!259 = !{ptr @__pcpu_unique_pcpu_drain, !260, !"__pcpu_unique_pcpu_drain", i1 false, i1 false}
!260 = !{!"../mm/page_alloc.c", i32 159, i32 8}
!261 = !{ptr @pcpu_drain, !260, !"pcpu_drain", i1 false, i1 false}
!262 = !{ptr @_totalram_pages, !263, !"_totalram_pages", i1 false, i1 false}
!263 = !{!"../mm/page_alloc.c", i32 183, i32 15}
!264 = !{ptr @totalreserve_pages, !265, !"totalreserve_pages", i1 false, i1 false}
!265 = !{!"../mm/page_alloc.c", i32 185, i32 15}
!266 = !{ptr @totalcma_pages, !267, !"totalcma_pages", i1 false, i1 false}
!267 = !{!"../mm/page_alloc.c", i32 186, i32 15}
!268 = !{ptr @percpu_pagelist_high_fraction, !269, !"percpu_pagelist_high_fraction", i1 false, i1 false}
!269 = !{!"../mm/page_alloc.c", i32 188, i32 5}
!270 = !{ptr @saved_gfp_mask, !271, !"saved_gfp_mask", i1 false, i1 false}
!271 = !{!"../mm/page_alloc.c", i32 242, i32 14}
!272 = !{ptr @nr_kernel_pages, !273, !"nr_kernel_pages", i1 false, i1 false}
!273 = !{!"../mm/page_alloc.c", i32 347, i32 22}
!274 = !{ptr @nr_all_pages, !275, !"nr_all_pages", i1 false, i1 false}
!275 = !{!"../mm/page_alloc.c", i32 348, i32 22}
!276 = !{ptr @dma_reserve, !277, !"dma_reserve", i1 false, i1 false}
!277 = !{!"../mm/page_alloc.c", i32 349, i32 22}
!278 = !{ptr @arch_zone_lowest_possible_pfn, !279, !"arch_zone_lowest_possible_pfn", i1 false, i1 false}
!279 = !{!"../mm/page_alloc.c", i32 351, i32 22}
!280 = !{ptr @arch_zone_highest_possible_pfn, !281, !"arch_zone_highest_possible_pfn", i1 false, i1 false}
!281 = !{!"../mm/page_alloc.c", i32 352, i32 22}
!282 = !{ptr @zone_movable_pfn, !283, !"zone_movable_pfn", i1 false, i1 false}
!283 = !{!"../mm/page_alloc.c", i32 357, i32 22}
!284 = !{ptr @movable_zone, !285, !"movable_zone", i1 false, i1 false}
!285 = !{!"../mm/page_alloc.c", i32 361, i32 5}
!286 = !{ptr @page_group_by_mobility_disabled, !287, !"page_group_by_mobility_disabled", i1 false, i1 false}
!287 = !{!"../mm/page_alloc.c", i32 371, i32 5}
!288 = !{ptr @__pcpu_unique_boot_pageset, !289, !"__pcpu_unique_boot_pageset", i1 false, i1 false}
!289 = !{!"../mm/page_alloc.c", i32 6381, i32 8}
!290 = !{ptr @boot_pageset, !289, !"boot_pageset", i1 false, i1 false}
!291 = !{ptr @__pcpu_unique_boot_zonestats, !292, !"__pcpu_unique_boot_zonestats", i1 false, i1 false}
!292 = !{!"../mm/page_alloc.c", i32 6382, i32 8}
!293 = !{ptr @boot_zonestats, !292, !"boot_zonestats", i1 false, i1 false}
!294 = !{ptr @__pcpu_unique_boot_nodestats, !295, !"__pcpu_unique_boot_nodestats", i1 false, i1 false}
!295 = !{!"../mm/page_alloc.c", i32 6383, i32 8}
!296 = !{ptr @boot_nodestats, !295, !"boot_nodestats", i1 false, i1 false}
!297 = !{ptr @__setup_str_early_init_on_alloc, !23, !"__setup_str_early_init_on_alloc", i1 false, i1 false}
!298 = !{ptr @__setup_str_early_init_on_free, !25, !"__setup_str_early_init_on_free", i1 false, i1 false}
!299 = !{ptr @.str.92, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../include/linux/mm.h", i32 1368, i32 10}
!301 = !{ptr @.str.93, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../include/linux/page-flags.h", i32 698, i32 1}
!303 = distinct !{null, !304, !"<string literal>", i1 false, i1 false}
!304 = !{!"../include/linux/mm.h", i32 882, i32 2}
!305 = !{ptr @_init_on_alloc_enabled_early, !306, !"_init_on_alloc_enabled_early", i1 false, i1 false}
!306 = !{!"../mm/page_alloc.c", i32 196, i32 13}
!307 = !{ptr @_init_on_free_enabled_early, !308, !"_init_on_free_enabled_early", i1 false, i1 false}
!308 = !{!"../mm/page_alloc.c", i32 205, i32 13}
!309 = !{ptr @.str.95, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../include/linux/page-flags.h", i32 442, i32 2}
!311 = !{ptr @.str.96, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../mm/page_alloc.c", i32 1301, i32 2}
!313 = !{ptr @.str.97, !314, !"<string literal>", i1 false, i1 false}
!314 = !{!"../mm/page_alloc.c", i32 1325, i32 3}
!315 = distinct !{null, !316, !"__already_done", i1 false, i1 false}
!316 = !{!"../include/trace/events/kmem.h", i32 160, i32 1}
!317 = !{ptr @.str.98, !316, !"<string literal>", i1 false, i1 false}
!318 = distinct !{null, !316, !"__warned", i1 false, i1 false}
!319 = !{ptr @.str.99, !316, !"<string literal>", i1 false, i1 false}
!320 = distinct !{null, !321, !"__already_done", i1 false, i1 false}
!321 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!322 = !{ptr @.str.100, !321, !"<string literal>", i1 false, i1 false}
!323 = !{ptr @.str.101, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../include/linux/memcontrol.h", i32 537, i32 2}
!325 = !{ptr @.str.102, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../include/linux/memcontrol.h", i32 538, i32 2}
!327 = !{ptr @.str.103, !328, !"<string literal>", i1 false, i1 false}
!328 = !{!"../mm/page_alloc.c", i32 1242, i32 19}
!329 = !{ptr @.str.104, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../mm/page_alloc.c", i32 1254, i32 19}
!331 = !{ptr @.str.105, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../mm/page_alloc.c", i32 1260, i32 18}
!333 = !{ptr @.str.106, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../mm/page_alloc.c", i32 1264, i32 18}
!335 = !{ptr @.str.107, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../include/linux/mm.h", i32 789, i32 2}
!337 = !{ptr @bad_page.resume, !338, !"resume", i1 false, i1 false}
!338 = !{!"../mm/page_alloc.c", i32 626, i32 23}
!339 = !{ptr @bad_page.nr_shown, !340, !"nr_shown", i1 false, i1 false}
!340 = !{!"../mm/page_alloc.c", i32 627, i32 23}
!341 = !{ptr @bad_page.nr_unshown, !342, !"nr_unshown", i1 false, i1 false}
!342 = !{!"../mm/page_alloc.c", i32 628, i32 23}
!343 = !{ptr @.str.108, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../mm/page_alloc.c", i32 640, i32 4}
!345 = !{ptr @.str.109, !344, !"<string literal>", i1 false, i1 false}
!346 = !{ptr @bad_page._entry, !344, !"_entry", i1 false, i1 false}
!347 = !{ptr @bad_page._entry_ptr, !344, !"_entry_ptr", i1 false, i1 false}
!348 = !{ptr @.str.111, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../mm/page_alloc.c", i32 650, i32 2}
!350 = !{ptr @bad_page._entry.110, !349, !"_entry", i1 false, i1 false}
!351 = !{ptr @bad_page._entry_ptr.112, !349, !"_entry_ptr", i1 false, i1 false}
!352 = !{ptr @.str.113, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../mm/page_alloc.c", i32 1190, i32 16}
!354 = !{ptr @.str.114, !355, !"<string literal>", i1 false, i1 false}
!355 = !{!"../mm/page_alloc.c", i32 1192, i32 16}
!356 = !{ptr @.str.115, !357, !"<string literal>", i1 false, i1 false}
!357 = !{!"../mm/page_alloc.c", i32 1194, i32 16}
!358 = !{ptr @.str.116, !359, !"<string literal>", i1 false, i1 false}
!359 = !{!"../mm/page_alloc.c", i32 1197, i32 17}
!360 = !{ptr @.str.117, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../mm/page_alloc.c", i32 1199, i32 17}
!362 = !{ptr @.str.118, !363, !"<string literal>", i1 false, i1 false}
!363 = !{!"../mm/page_alloc.c", i32 1203, i32 16}
!364 = !{ptr @.str.119, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../mm/internal.h", i32 145, i32 2}
!366 = distinct !{null, !367, !"<string literal>", i1 false, i1 false}
!367 = !{!"../mm/page_alloc.c", i32 2536, i32 3}
!368 = !{ptr @.str.121, !369, !"<string literal>", i1 false, i1 false}
!369 = !{!"../mm/page_alloc.c", i32 2537, i32 3}
!370 = !{ptr @fallbacks, !371, !"fallbacks", i1 false, i1 false}
!371 = !{!"../mm/page_alloc.c", i32 2483, i32 12}
!372 = !{ptr @.str.122, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../mm/page_alloc.c", i32 1541, i32 3}
!374 = distinct !{null, !375, !"__already_done", i1 false, i1 false}
!375 = !{!"../include/trace/events/kmem.h", i32 263, i32 1}
!376 = distinct !{null, !375, !"__warned", i1 false, i1 false}
!377 = !{ptr @__drain_all_pages.cpus_with_pcps, !378, !"cpus_with_pcps", i1 false, i1 false}
!378 = !{!"../mm/page_alloc.c", i32 3183, i32 19}
!379 = distinct !{null, !380, !"__already_done", i1 false, i1 false}
!380 = !{!"../mm/page_alloc.c", i32 3189, i32 6}
!381 = !{ptr @__drain_all_pages.__key, !382, !"__key", i1 false, i1 false}
!382 = !{!"../mm/page_alloc.c", i32 3244, i32 3}
!383 = !{ptr @.str.123, !382, !"<string literal>", i1 false, i1 false}
!384 = !{ptr @.str.124, !385, !"<string literal>", i1 false, i1 false}
!385 = !{!"../mm/page_alloc.c", i32 158, i32 8}
!386 = !{ptr @.str.125, !385, !"<string literal>", i1 false, i1 false}
!387 = !{ptr @pcpu_drain_mutex, !385, !"pcpu_drain_mutex", i1 false, i1 false}
!388 = !{ptr @.str.126, !389, !"<string literal>", i1 false, i1 false}
!389 = !{!"../include/linux/local_lock_internal.h", i32 30, i32 2}
!390 = !{ptr @.str.127, !389, !"<string literal>", i1 false, i1 false}
!391 = !{ptr @.str.128, !389, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @.str.129, !393, !"<string literal>", i1 false, i1 false}
!393 = !{!"../include/linux/local_lock_internal.h", i32 36, i32 2}
!394 = distinct !{null, !395, !"__already_done", i1 false, i1 false}
!395 = !{!"../include/trace/events/kmem.h", i32 182, i32 1}
!396 = distinct !{null, !395, !"__warned", i1 false, i1 false}
!397 = !{ptr @.str.130, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../include/linux/page-flags.h", i32 878, i32 1}
!399 = !{ptr @.str.131, !400, !"<string literal>", i1 false, i1 false}
!400 = !{!"../mm/page_alloc.c", i32 1084, i32 2}
!401 = !{ptr @.str.132, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../mm/page_alloc.c", i32 1090, i32 2}
!403 = !{ptr @.str.133, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../mm/page_alloc.c", i32 1091, i32 2}
!405 = !{ptr @.str.134, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../mm/page_alloc.c", i32 591, i32 3}
!407 = !{ptr @.str.135, !406, !"<string literal>", i1 false, i1 false}
!408 = !{ptr @page_outside_zone_boundaries._entry, !406, !"_entry", i1 false, i1 false}
!409 = !{ptr @page_outside_zone_boundaries._entry_ptr, !406, !"_entry_ptr", i1 false, i1 false}
!410 = !{ptr @.str.136, !411, !"<string literal>", i1 false, i1 false}
!411 = !{!"../mm/page_alloc.c", i32 918, i32 2}
!412 = !{ptr @.str.137, !398, !"<string literal>", i1 false, i1 false}
!413 = !{ptr @__setup_str_setup_fail_page_alloc, !70, !"__setup_str_setup_fail_page_alloc", i1 false, i1 false}
!414 = !{ptr @.str.138, !415, !"<string literal>", i1 false, i1 false}
!415 = !{!"../mm/page_alloc.c", i32 3761, i32 10}
!416 = !{ptr @fail_page_alloc, !417, !"fail_page_alloc", i1 false, i1 false}
!417 = !{!"../mm/page_alloc.c", i32 3760, i32 3}
!418 = !{ptr @.str.139, !419, !"<string literal>", i1 false, i1 false}
!419 = !{!"../mm/page_alloc.c", i32 3795, i32 34}
!420 = !{ptr @.str.140, !421, !"<string literal>", i1 false, i1 false}
!421 = !{!"../mm/page_alloc.c", i32 3798, i32 22}
!422 = !{ptr @.str.141, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../mm/page_alloc.c", i32 3800, i32 22}
!424 = !{ptr @.str.142, !425, !"<string literal>", i1 false, i1 false}
!425 = !{!"../mm/page_alloc.c", i32 3802, i32 21}
!426 = !{ptr @.str.143, !427, !"<string literal>", i1 false, i1 false}
!427 = !{!"../mm/page_alloc.c", i32 4535, i32 2}
!428 = !{ptr @__fs_reclaim_map, !429, !"__fs_reclaim_map", i1 false, i1 false}
!429 = !{!"../mm/page_alloc.c", i32 4534, i32 27}
!430 = !{ptr @.str.144, !431, !"<string literal>", i1 false, i1 false}
!431 = !{!"../include/linux/gfp.h", i32 347, i32 2}
!432 = !{ptr @.str.145, !433, !"<string literal>", i1 false, i1 false}
!433 = !{!"../mm/page_alloc.c", i32 2304, i32 3}
!434 = distinct !{null, !435, !"__already_done", i1 false, i1 false}
!435 = !{!"../include/trace/events/kmem.h", i32 286, i32 1}
!436 = distinct !{null, !435, !"__warned", i1 false, i1 false}
!437 = distinct !{null, !438, !"__already_done", i1 false, i1 false}
!438 = !{!"../include/trace/events/kmem.h", i32 256, i32 1}
!439 = distinct !{null, !438, !"__warned", i1 false, i1 false}
!440 = distinct !{null, !441, !"__already_done", i1 false, i1 false}
!441 = !{!"../mm/page_alloc.c", i32 3708, i32 2}
!442 = !{ptr @.str.146, !443, !"<string literal>", i1 false, i1 false}
!443 = !{!"../mm/page_alloc.c", i32 3744, i32 2}
!444 = distinct !{null, !445, !"__already_done", i1 false, i1 false}
!445 = !{!"../mm/page_alloc.c", i32 4886, i32 6}
!446 = distinct !{null, !447, !"__already_done", i1 false, i1 false}
!447 = !{!"../mm/page_alloc.c", i32 5101, i32 7}
!448 = distinct !{null, !449, !"__already_done", i1 false, i1 false}
!449 = !{!"../mm/page_alloc.c", i32 5109, i32 3}
!450 = distinct !{null, !451, !"__already_done", i1 false, i1 false}
!451 = !{!"../mm/page_alloc.c", i32 5117, i32 3}
!452 = !{ptr @.str.150, !453, !"<string literal>", i1 false, i1 false}
!453 = !{!"../mm/page_alloc.c", i32 5134, i32 4}
!454 = distinct !{null, !455, !"__already_done", i1 false, i1 false}
!455 = !{!"../include/trace/events/oom.h", i32 32, i32 1}
!456 = !{ptr @.str.151, !455, !"<string literal>", i1 false, i1 false}
!457 = distinct !{null, !455, !"__warned", i1 false, i1 false}
!458 = distinct !{null, !459, !"__already_done", i1 false, i1 false}
!459 = !{!"../include/trace/events/oom.h", i32 155, i32 1}
!460 = distinct !{null, !459, !"__warned", i1 false, i1 false}
!461 = distinct !{null, !462, !"__already_done", i1 false, i1 false}
!462 = !{!"../mm/page_alloc.c", i32 4332, i32 28}
!463 = distinct !{null, !464, !"__already_done", i1 false, i1 false}
!464 = !{!"../include/trace/events/kmem.h", i32 201, i32 1}
!465 = distinct !{null, !464, !"__warned", i1 false, i1 false}
!466 = distinct !{null, !467, !"__already_done", i1 false, i1 false}
!467 = !{!"../include/linux/vmstat.h", i32 202, i32 2}
!468 = distinct !{null, !467, !"<string literal>", i1 false, i1 false}
!469 = distinct !{null, !470, !"types", i1 false, i1 false}
!470 = !{!"../mm/page_alloc.c", i32 5863, i32 20}
!471 = !{ptr @.str.153, !472, !"<string literal>", i1 false, i1 false}
!472 = !{!"../mm/page_alloc.c", i32 5885, i32 2}
!473 = !{ptr @.str.154, !472, !"<string literal>", i1 false, i1 false}
!474 = !{ptr @show_migration_types._entry, !472, !"_entry", i1 false, i1 false}
!475 = !{ptr @show_migration_types._entry_ptr, !472, !"_entry_ptr", i1 false, i1 false}
!476 = !{ptr @__build_all_zonelists.lock, !477, !"lock", i1 false, i1 false}
!477 = !{!"../mm/page_alloc.c", i32 6390, i32 9}
!478 = !{ptr @overlap_memmap_init.r, !479, !"r", i1 false, i1 false}
!479 = !{!"../mm/page_alloc.c", i32 6498, i32 33}
!480 = distinct !{null, !481, !"mirrored_kernelcore", i1 false, i1 false}
!481 = !{!"../mm/page_alloc.c", i32 358, i32 13}
!482 = !{ptr @.str.155, !483, !"<string literal>", i1 false, i1 false}
!483 = !{!"../mm/page_alloc.c", i32 7660, i32 2}
!484 = !{ptr @.str.156, !483, !"<string literal>", i1 false, i1 false}
!485 = !{ptr @free_area_init_node._entry, !483, !"_entry", i1 false, i1 false}
!486 = !{ptr @free_area_init_node._entry_ptr, !483, !"_entry_ptr", i1 false, i1 false}
!487 = !{ptr @.str.157, !488, !"<string literal>", i1 false, i1 false}
!488 = !{!"../mm/page_alloc.c", i32 7345, i32 2}
!489 = !{ptr @.str.158, !488, !"<string literal>", i1 false, i1 false}
!490 = !{ptr @.str.159, !488, !"<string literal>", i1 false, i1 false}
!491 = !{ptr @calculate_node_totalpages.__UNIQUE_ID_ddebug466, !488, !"__UNIQUE_ID_ddebug466", i1 false, i1 false}
!492 = !{ptr @.str.160, !493, !"<string literal>", i1 false, i1 false}
!493 = !{!"../mm/page_alloc.c", i32 7614, i32 10}
!494 = !{ptr @.str.161, !495, !"<string literal>", i1 false, i1 false}
!495 = !{!"../mm/page_alloc.c", i32 7618, i32 2}
!496 = !{ptr @.str.162, !495, !"<string literal>", i1 false, i1 false}
!497 = !{ptr @alloc_node_mem_map.__UNIQUE_ID_ddebug469, !495, !"__UNIQUE_ID_ddebug469", i1 false, i1 false}
!498 = !{ptr @.str.163, !499, !"<string literal>", i1 false, i1 false}
!499 = !{!"../mm/page_alloc.c", i32 7550, i32 6}
!500 = !{ptr @.str.164, !499, !"<string literal>", i1 false, i1 false}
!501 = !{ptr @free_area_init_core.__UNIQUE_ID_ddebug467, !499, !"__UNIQUE_ID_ddebug467", i1 false, i1 false}
!502 = !{ptr @.str.165, !503, !"<string literal>", i1 false, i1 false}
!503 = !{!"../mm/page_alloc.c", i32 7553, i32 5}
!504 = !{ptr @free_area_init_core._entry, !503, !"_entry", i1 false, i1 false}
!505 = !{ptr @free_area_init_core._entry_ptr, !503, !"_entry_ptr", i1 false, i1 false}
!506 = !{ptr @.str.166, !507, !"<string literal>", i1 false, i1 false}
!507 = !{!"../mm/page_alloc.c", i32 7560, i32 4}
!508 = !{ptr @free_area_init_core.__UNIQUE_ID_ddebug468, !507, !"__UNIQUE_ID_ddebug468", i1 false, i1 false}
!509 = !{ptr @pgdat_init_internals.__key, !510, !"__key", i1 false, i1 false}
!510 = !{!"../mm/page_alloc.c", i32 7475, i32 2}
!511 = !{ptr @.str.167, !510, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @pgdat_init_internals.__key.168, !513, !"__key", i1 false, i1 false}
!513 = !{!"../mm/page_alloc.c", i32 7476, i32 2}
!514 = !{ptr @.str.169, !513, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @pgdat_init_internals.__key.170, !516, !"__key", i1 false, i1 false}
!516 = !{!"../mm/page_alloc.c", i32 7479, i32 3}
!517 = !{ptr @.str.171, !516, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @pgdat_init_kcompactd.__key, !519, !"__key", i1 false, i1 false}
!519 = !{!"../mm/page_alloc.c", i32 7460, i32 2}
!520 = !{ptr @.str.172, !519, !"<string literal>", i1 false, i1 false}
!521 = !{ptr @zone_init_internals.__key, !522, !"__key", i1 false, i1 false}
!522 = !{!"../mm/page_alloc.c", i32 7492, i32 2}
!523 = !{ptr @.str.173, !522, !"<string literal>", i1 false, i1 false}
!524 = !{ptr @.str.174, !525, !"<string literal>", i1 false, i1 false}
!525 = !{!"../mm/page_alloc.c", i32 7071, i32 3}
!526 = !{ptr @.str.175, !525, !"<string literal>", i1 false, i1 false}
!527 = !{ptr @zone_pcp_init.__UNIQUE_ID_ddebug423, !525, !"__UNIQUE_ID_ddebug423", i1 false, i1 false}
!528 = !{ptr @.str.176, !529, !"<string literal>", i1 false, i1 false}
!529 = !{!"../mm/page_alloc.c", i32 7379, i32 10}
!530 = !{ptr @.str.177, !531, !"<string literal>", i1 false, i1 false}
!531 = !{!"../mm/page_alloc.c", i32 7836, i32 4}
!532 = !{ptr @.str.178, !531, !"<string literal>", i1 false, i1 false}
!533 = !{ptr @find_zone_movable_pfns_for_nodes._entry, !531, !"_entry", i1 false, i1 false}
!534 = !{ptr @find_zone_movable_pfns_for_nodes._entry_ptr, !531, !"_entry_ptr", i1 false, i1 false}
!535 = !{ptr @required_kernelcore_percent, !536, !"required_kernelcore_percent", i1 false, i1 false}
!536 = !{!"../mm/page_alloc.c", i32 354, i32 22}
!537 = !{ptr @required_kernelcore, !538, !"required_kernelcore", i1 false, i1 false}
!538 = !{!"../mm/page_alloc.c", i32 353, i32 22}
!539 = !{ptr @required_movablecore_percent, !540, !"required_movablecore_percent", i1 false, i1 false}
!540 = !{!"../mm/page_alloc.c", i32 356, i32 22}
!541 = !{ptr @required_movablecore, !542, !"required_movablecore", i1 false, i1 false}
!542 = !{!"../mm/page_alloc.c", i32 355, i32 22}
!543 = !{ptr @.str.179, !544, !"<string literal>", i1 false, i1 false}
!544 = !{!"../mm/page_alloc.c", i32 303, i32 3}
!545 = !{ptr @.str.180, !546, !"<string literal>", i1 false, i1 false}
!546 = !{!"../mm/page_alloc.c", i32 308, i32 3}
!547 = !{ptr @.str.181, !548, !"<string literal>", i1 false, i1 false}
!548 = !{!"../mm/page_alloc.c", i32 310, i32 3}
!549 = !{ptr @zone_names, !550, !"zone_names", i1 false, i1 false}
!550 = !{!"../mm/page_alloc.c", i32 301, i32 21}
!551 = !{ptr @.str.182, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../mm/page_alloc.c", i32 6747, i32 3}
!553 = !{ptr @.str.183, !552, !"<string literal>", i1 false, i1 false}
!554 = !{ptr @init_unavailable_range._entry, !552, !"_entry", i1 false, i1 false}
!555 = !{ptr @init_unavailable_range._entry_ptr, !552, !"_entry_ptr", i1 false, i1 false}
!556 = !{ptr @__setup_str_cmdline_parse_kernelcore, !216, !"__setup_str_cmdline_parse_kernelcore", i1 false, i1 false}
!557 = !{ptr @.str.184, !558, !"<string literal>", i1 false, i1 false}
!558 = !{!"../mm/page_alloc.c", i32 8146, i32 26}
!559 = !{ptr @__setup_str_cmdline_parse_movablecore, !218, !"__setup_str_cmdline_parse_movablecore", i1 false, i1 false}
!560 = !{ptr @.str.185, !561, !"<string literal>", i1 false, i1 false}
!561 = !{!"../mm/page_alloc.c", i32 125, i32 8}
!562 = !{ptr @.str.186, !561, !"<string literal>", i1 false, i1 false}
!563 = !{ptr @pcp_batch_high_lock, !561, !"pcp_batch_high_lock", i1 false, i1 false}
!564 = !{ptr @.str.187, !565, !"<string literal>", i1 false, i1 false}
!565 = !{!"../include/linux/page-flags.h", i32 422, i32 1}
!566 = !{ptr @.str.188, !567, !"<string literal>", i1 false, i1 false}
!567 = !{!"../mm/page_alloc.c", i32 9004, i32 2}
!568 = !{ptr @.str.189, !567, !"<string literal>", i1 false, i1 false}
!569 = !{ptr @alloc_contig_dump_pages.descriptor, !567, !"descriptor", i1 false, i1 false}
!570 = !{ptr @.str.190, !571, !"<string literal>", i1 false, i1 false}
!571 = !{!"../mm/page_alloc.c", i32 9011, i32 20}
!572 = !{!"sp"}
!573 = !{i32 1, !"wchar_size", i32 2}
!574 = !{i32 1, !"min_enum_size", i32 4}
!575 = !{i32 8, !"branch-target-enforcement", i32 0}
!576 = !{i32 8, !"sign-return-address", i32 0}
!577 = !{i32 8, !"sign-return-address-all", i32 0}
!578 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!579 = !{i32 7, !"uwtable", i32 1}
!580 = !{i32 7, !"frame-pointer", i32 2}
!581 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!582 = !{!"branch_weights", i32 2000, i32 1}
!583 = !{i64 2148535831, i64 2148535836, i64 2148535849, i64 2148535893, i64 2148535927, i64 2148535948}
!584 = !{!"branch_weights", i32 1, i32 2000}
!585 = !{i64 2151256938, i64 2151257429, i64 2151256975, i64 2151257031, i64 2151257065, i64 2151257089, i64 2151257130, i64 2151257151, i64 2151257179, i64 2151257213}
!586 = !{i64 2153410905, i64 2153411389, i64 2153410942, i64 2153410998, i64 2153411032, i64 2153411056, i64 2153411097, i64 2153411118, i64 2153411146, i64 2153411180}
!587 = !{!"branch_weights", i32 1073205, i32 2146410443}
!588 = !{i64 2156674209, i64 2156674689, i64 2156674246, i64 2156674302, i64 2156674336, i64 2156674360, i64 2156674401, i64 2156674422, i64 2156674450, i64 2156674484}
!589 = !{i64 2156679497}
!590 = !{i64 1444646, i64 1444667, i64 1444690, i64 1444709, i64 1444728}
!591 = !{i64 2156679922}
!592 = !{i64 2151259725, i64 2151260216, i64 2151259762, i64 2151259818, i64 2151259852, i64 2151259876, i64 2151259917, i64 2151259938, i64 2151259966, i64 2151260000}
!593 = !{i8 0, i8 2}
!594 = !{i64 2150910278, i64 2150910769, i64 2150910315, i64 2150910371, i64 2150910405, i64 2150910429, i64 2150910470, i64 2150910491, i64 2150910519, i64 2150910553}
!595 = !{i64 2150912219, i64 2150912710, i64 2150912256, i64 2150912312, i64 2150912346, i64 2150912370, i64 2150912411, i64 2150912432, i64 2150912460, i64 2150912494}
!596 = !{i64 2150905463, i64 2150905954, i64 2150905500, i64 2150905556, i64 2150905590, i64 2150905614, i64 2150905655, i64 2150905676, i64 2150905704, i64 2150905738}
!597 = !{i64 2150907404, i64 2150907895, i64 2150907441, i64 2150907497, i64 2150907531, i64 2150907555, i64 2150907596, i64 2150907617, i64 2150907645, i64 2150907679}
!598 = !{i64 2148935154, i64 2148935180, i64 2148935209, i64 2148935243, i64 2148935274, i64 2148935297}
!599 = !{i64 2156713804, i64 2156714285, i64 2156713841, i64 2156713897, i64 2156713931, i64 2156713955, i64 2156713996, i64 2156714017, i64 2156714045, i64 2156714079}
!600 = !{i64 2156715763, i64 2156716244, i64 2156715800, i64 2156715856, i64 2156715890, i64 2156715914, i64 2156715955, i64 2156715976, i64 2156716004, i64 2156716038}
!601 = !{i64 2148536234, i64 2148536239, i64 2148536260, i64 2148536304, i64 2148536338, i64 2148536359}
!602 = !{i64 2154887747, i64 2154888238, i64 2154887784, i64 2154887840, i64 2154887874, i64 2154887898, i64 2154887939, i64 2154887960, i64 2154887988, i64 2154888022}
!603 = !{i64 2154889647, i64 2154890138, i64 2154889684, i64 2154889740, i64 2154889774, i64 2154889798, i64 2154889839, i64 2154889860, i64 2154889888, i64 2154889922}
!604 = !{!"branch_weights", i32 4001, i32 4000000}
!605 = !{i64 2156595534, i64 2156596012, i64 2156595571, i64 2156595627, i64 2156595661, i64 2156595685, i64 2156595726, i64 2156595747, i64 2156595775, i64 2156595809}
!606 = !{i64 2156597300, i64 2156597778, i64 2156597337, i64 2156597393, i64 2156597427, i64 2156597451, i64 2156597492, i64 2156597513, i64 2156597541, i64 2156597575}
!607 = !{i64 2153381150, i64 2153381633, i64 2153381187, i64 2153381243, i64 2153381277, i64 2153381301, i64 2153381342, i64 2153381363, i64 2153381391, i64 2153381425}
!608 = !{i64 2149023630}
!609 = !{i64 2148938339, i64 2148938371, i64 2148938400, i64 2148938434, i64 2148938465, i64 2148938488}
!610 = !{i64 2149023859}
!611 = !{i64 2150632218, i64 2150632709, i64 2150632255, i64 2150632311, i64 2150632345, i64 2150632369, i64 2150632410, i64 2150632431, i64 2150632459, i64 2150632493}
!612 = !{i64 2156747562, i64 2156748043, i64 2156747599, i64 2156747655, i64 2156747689, i64 2156747713, i64 2156747754, i64 2156747775, i64 2156747803, i64 2156747837}
!613 = !{i64 1339834, i64 1339895}
!614 = !{i64 1342566}
!615 = !{i64 1342851}
!616 = !{i64 2156686823, i64 2156687303, i64 2156686860, i64 2156686916, i64 2156686950, i64 2156686974, i64 2156687015, i64 2156687036, i64 2156687064, i64 2156687098}
!617 = !{i64 2155663037}
!618 = !{i64 2155663248}
!619 = !{i64 2150279046}
!620 = !{i64 2150280082}
!621 = !{i64 2156830388, i64 2156830869, i64 2156830425, i64 2156830481, i64 2156830515, i64 2156830539, i64 2156830580, i64 2156830601, i64 2156830629, i64 2156830663}
!622 = !{i64 2156836209, i64 2156836690, i64 2156836246, i64 2156836302, i64 2156836336, i64 2156836360, i64 2156836401, i64 2156836422, i64 2156836450, i64 2156836484}
!623 = !{i64 2156839108, i64 2156839589, i64 2156839145, i64 2156839201, i64 2156839235, i64 2156839259, i64 2156839300, i64 2156839321, i64 2156839349, i64 2156839383}
!624 = !{i64 2151227017, i64 2151227508, i64 2151227054, i64 2151227110, i64 2151227144, i64 2151227168, i64 2151227209, i64 2151227230, i64 2151227258, i64 2151227292}
!625 = !{i64 2151234720, i64 2151235211, i64 2151234757, i64 2151234813, i64 2151234847, i64 2151234871, i64 2151234912, i64 2151234933, i64 2151234961, i64 2151234995}
!626 = !{i64 2151236661, i64 2151237152, i64 2151236698, i64 2151236754, i64 2151236788, i64 2151236812, i64 2151236853, i64 2151236874, i64 2151236902, i64 2151236936}
!627 = !{i64 2151287301, i64 2151287792, i64 2151287338, i64 2151287394, i64 2151287428, i64 2151287452, i64 2151287493, i64 2151287514, i64 2151287542, i64 2151287576}
!628 = !{i64 2156700288, i64 2156700769, i64 2156700325, i64 2156700381, i64 2156700415, i64 2156700439, i64 2156700480, i64 2156700501, i64 2156700529, i64 2156700563}
!629 = !{i64 2156702236, i64 2156702717, i64 2156702273, i64 2156702329, i64 2156702363, i64 2156702387, i64 2156702428, i64 2156702449, i64 2156702477, i64 2156702511}
!630 = !{!"branch_weights", i32 4000000, i32 2001, i32 2000}
!631 = !{i64 2156703848, i64 2156704329, i64 2156703885, i64 2156703941, i64 2156703975, i64 2156703999, i64 2156704040, i64 2156704061, i64 2156704089, i64 2156704123}
!632 = !{i64 2156705703, i64 2156706184, i64 2156705740, i64 2156705796, i64 2156705830, i64 2156705854, i64 2156705895, i64 2156705916, i64 2156705944, i64 2156705978}
!633 = !{i64 2156707483, i64 2156707964, i64 2156707520, i64 2156707576, i64 2156707610, i64 2156707634, i64 2156707675, i64 2156707696, i64 2156707724, i64 2156707758}
!634 = !{!"branch_weights", i32 2002, i32 2000}
!635 = !{i64 2156695018, i64 2156695498, i64 2156695055, i64 2156695111, i64 2156695145, i64 2156695169, i64 2156695210, i64 2156695231, i64 2156695259, i64 2156695293}
!636 = !{i64 2151285250, i64 2151285741, i64 2151285287, i64 2151285343, i64 2151285377, i64 2151285401, i64 2151285442, i64 2151285463, i64 2151285491, i64 2151285525}
!637 = !{!"auto-init"}
!638 = !{!"branch_weights", i32 1, i32 4001}
!639 = !{i64 2151471878, i64 2151472362, i64 2151471915, i64 2151471971, i64 2151472005, i64 2151472029, i64 2151472070, i64 2151472091, i64 2151472119, i64 2151472153}
!640 = !{i64 2156742272, i64 2156742753, i64 2156742309, i64 2156742365, i64 2156742399, i64 2156742423, i64 2156742464, i64 2156742485, i64 2156742513, i64 2156742547}
!641 = !{i64 2156758005, i64 2156758486, i64 2156758042, i64 2156758098, i64 2156758132, i64 2156758156, i64 2156758197, i64 2156758218, i64 2156758246, i64 2156758280}
!642 = !{i64 2156855765, i64 2156856246, i64 2156855802, i64 2156855858, i64 2156855892, i64 2156855916, i64 2156855957, i64 2156855978, i64 2156856006, i64 2156856040}
!643 = !{i64 2150113015}
!644 = !{i64 2155680277}
!645 = !{i64 2155680536}
!646 = !{i64 2156913486, i64 2156913967, i64 2156913523, i64 2156913579, i64 2156913613, i64 2156913637, i64 2156913678, i64 2156913699, i64 2156913727, i64 2156913761}
!647 = !{i64 2156918088, i64 2156918569, i64 2156918125, i64 2156918181, i64 2156918215, i64 2156918239, i64 2156918280, i64 2156918301, i64 2156918329, i64 2156918363}
!648 = !{i32 0, i32 256}
!649 = !{i32 0, i32 33}
!650 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!651 = !{i64 2151474979, i64 2151475463, i64 2151475016, i64 2151475072, i64 2151475106, i64 2151475130, i64 2151475171, i64 2151475192, i64 2151475220, i64 2151475254}
!652 = !{i64 2157071915}
!653 = !{i64 2157077289}
!654 = !{i64 2157157033, i64 2157157514, i64 2157157070, i64 2157157126, i64 2157157160, i64 2157157184, i64 2157157225, i64 2157157246, i64 2157157274, i64 2157157308}
!655 = !{i64 2150902491, i64 2150902664, i64 2150902679, i64 2150902731, i64 2150902790, i64 2150902814, i64 2150902855, i64 2150902876, i64 2150902904, i64 2150902936}
!656 = !{i64 2150903262, i64 2150903435, i64 2150903450, i64 2150903502, i64 2150903561, i64 2150903585, i64 2150903626, i64 2150903647, i64 2150903675, i64 2150903707}
!657 = !{i64 2148784939, i64 2148785219, i64 2148785553, i64 2148785887}
!658 = !{i64 2150882216, i64 2150882707, i64 2150882253, i64 2150882309, i64 2150882343, i64 2150882367, i64 2150882408, i64 2150882429, i64 2150882457, i64 2150882491}
!659 = !{i64 2148937619, i64 2148937645, i64 2148937674, i64 2148937708, i64 2148937739, i64 2148937762}
!660 = !{i64 2155642883}
!661 = !{i64 2155643092}
!662 = !{i64 2153383602, i64 2153384085, i64 2153383639, i64 2153383695, i64 2153383729, i64 2153383753, i64 2153383794, i64 2153383815, i64 2153383843, i64 2153383877}
!663 = !{i64 2156688579, i64 2156689059, i64 2156688616, i64 2156688672, i64 2156688706, i64 2156688730, i64 2156688771, i64 2156688792, i64 2156688820, i64 2156688854}
!664 = !{i64 1434422}
!665 = !{i64 2156733831, i64 2156734312, i64 2156733868, i64 2156733924, i64 2156733958, i64 2156733982, i64 2156734023, i64 2156734044, i64 2156734072, i64 2156734106}
!666 = !{i64 2155719194}
!667 = !{i64 2155719441}
!668 = !{i64 2155697578}
!669 = !{i64 2155697839}
!670 = !{i64 2155737713}
!671 = !{i64 2155738074}
!672 = !{i64 2155355253}
!673 = !{i64 2155355095}
!674 = !{i64 2155355423}
!675 = !{i64 2155832048}
!676 = !{i64 2155832409}
!677 = !{i64 2155933945}
!678 = !{i64 2155934234}
