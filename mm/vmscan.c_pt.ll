; ModuleID = '/llk/IR_all_yes/mm/vmscan.c_pt.bc'
source_filename = "../mm/vmscan.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+register_shrinker\22, \22a\22\09"
module asm "\09.weak\09__crc_register_shrinker\09\09\09\09"
module asm "\09.long\09__crc_register_shrinker\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_shrinker:\09\09\09\09\09"
module asm "\09.asciz \09\22register_shrinker\22\09\09\09\09\09"
module asm "__kstrtabns_register_shrinker:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unregister_shrinker\22, \22a\22\09"
module asm "\09.weak\09__crc_unregister_shrinker\09\09\09\09"
module asm "\09.long\09__crc_unregister_shrinker\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_shrinker:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_shrinker\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_shrinker:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+synchronize_shrinkers\22, \22a\22\09"
module asm "\09.weak\09__crc_synchronize_shrinkers\09\09\09\09"
module asm "\09.long\09__crc_synchronize_shrinkers\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_synchronize_shrinkers:\09\09\09\09\09"
module asm "\09.asciz \09\22synchronize_shrinkers\22\09\09\09\09\09"
module asm "__kstrtabns_synchronize_shrinkers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+check_move_unevictable_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_check_move_unevictable_pages\09\09\09\09"
module asm "\09.long\09__crc_check_move_unevictable_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_check_move_unevictable_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22check_move_unevictable_pages\22\09\09\09\09\09"
module asm "__kstrtabns_check_move_unevictable_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.104 }
%union.anon.104 = type { %struct.anon.105 }
%struct.anon.105 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.106, %struct.trace_event, ptr, ptr, %union.anon.107, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.106 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.107 = type { ptr }
%union.anon.108 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.109 = type { %struct.bpf_raw_event_map }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%union.anon.111 = type { %struct.bpf_raw_event_map }
%union.anon.112 = type { %struct.bpf_raw_event_map }
%union.anon.113 = type { %struct.bpf_raw_event_map }
%union.anon.114 = type { %struct.bpf_raw_event_map }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%union.anon.116 = type { %struct.bpf_raw_event_map }
%union.anon.117 = type { %struct.bpf_raw_event_map }
%union.anon.118 = type { %struct.bpf_raw_event_map }
%union.anon.119 = type { %struct.bpf_raw_event_map }
%union.anon.120 = type { %struct.bpf_raw_event_map }
%union.anon.121 = type { %struct.bpf_raw_event_map }
%union.anon.122 = type { %struct.bpf_raw_event_map }
%union.anon.123 = type { %struct.bpf_raw_event_map }
%union.anon.124 = type { %struct.bpf_raw_event_map }
%union.anon.125 = type { %struct.bpf_raw_event_map }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.trace_print_flags = type { i32, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.static_key_true = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t, %union.anon }
%union.anon = type { i32 }
%struct.static_key_false = type { %struct.static_key }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.vm_event_state = type { [76 x i32] }
%struct.pglist_data = type { [4 x %struct.zone], [1 x %struct.zonelist], i32, ptr, ptr, i32, i32, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, [4 x %struct.wait_queue_head], %struct.atomic_t, i32, ptr, i32, i32, i32, i32, i32, %struct.wait_queue_head, ptr, i8, i32, [36 x i8], %struct.zone_padding, %struct.lruvec, i32, [12 x i8], %struct.zone_padding, ptr, [40 x %struct.atomic_t], [92 x i8] }
%struct.zone = type { [3 x i32], i32, i32, [4 x i32], ptr, ptr, ptr, i32, i32, ptr, i32, %struct.atomic_t, i32, i32, i32, ptr, i32, i32, [36 x i8], %struct.zone_padding, [12 x %struct.free_area], i32, %struct.spinlock, [96 x i8], %struct.zone_padding, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i8, i8, [90 x i8], %struct.zone_padding, [11 x %struct.atomic_t], [0 x %struct.atomic_t], [84 x i8] }
%struct.free_area = type { [6 x %struct.list_head], i32 }
%struct.zonelist = type { [5 x %struct.zoneref] }
%struct.zoneref = type { ptr, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.lruvec = type { [5 x %struct.list_head], %struct.spinlock, i32, i32, %struct.atomic_t, [2 x i32], i32, ptr }
%struct.zone_padding = type { [0 x i8] }
%struct.cgroup_root = type { ptr, i32, i32, %struct.cgroup, i64, %struct.atomic_t, %struct.list_head, i32, [4096 x i8], [64 x i8] }
%struct.cgroup = type { %struct.cgroup_subsys_state, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, %struct.cgroup_file, %struct.cgroup_file, i16, i16, i16, i16, [14 x ptr], ptr, %struct.list_head, [14 x %struct.list_head], ptr, ptr, ptr, %struct.list_head, %struct.cgroup_base_stat, %struct.cgroup_base_stat, %struct.prev_cputime, %struct.list_head, %struct.mutex, %struct.wait_queue_head, %struct.work_struct, %struct.psi_group, %struct.cgroup_bpf, %struct.atomic_t, %struct.cgroup_freezer_state, [0 x i64] }
%struct.cgroup_subsys_state = type { ptr, ptr, %struct.percpu_ref, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i64, %struct.atomic_t, %struct.work_struct, %struct.rcu_work, ptr }
%struct.percpu_ref = type { i32, ptr }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, ptr }
%struct.callback_head = type { ptr, ptr }
%struct.cgroup_file = type { ptr, i32, %struct.timer_list }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.cgroup_base_stat = type { %struct.task_cputime }
%struct.task_cputime = type { i64, i64, i64 }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.psi_group = type { %struct.mutex, ptr, [6 x i64], i64, i64, %struct.delayed_work, [2 x [6 x i64]], [6 x [3 x i32]], ptr, %struct.timer_list, %struct.wait_queue_head, %struct.atomic_t, %struct.mutex, %struct.list_head, [6 x i32], i32, i64, [6 x i64], i64, i64 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.cgroup_bpf = type { [23 x ptr], [23 x %struct.list_head], [23 x i32], %struct.list_head, ptr, %struct.percpu_ref, %struct.work_struct }
%struct.cgroup_freezer_state = type { i8, i32, i32, i32 }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_mm_vmscan_kswapd_sleep = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_mm_vmscan_kswapd_wake = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_vmscan_wakeup_kswapd = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_vmscan_direct_reclaim_begin_template = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_vmscan_direct_reclaim_end_template = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_mm_shrink_slab_start = type { %struct.trace_entry, ptr, ptr, i32, i32, i32, i32, i64, i32, i32, [0 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.shrink_control = type { i32, i32, i32, i32, ptr }
%struct.trace_event_raw_mm_shrink_slab_end = type { %struct.trace_entry, ptr, i32, ptr, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_vmscan_lru_isolate = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_vmscan_writepage = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.page = type { i32, %union.anon.18, %union.anon.65, %struct.atomic_t, i32 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.65 = type { %struct.atomic_t }
%struct.trace_event_raw_mm_vmscan_lru_shrink_inactive = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.reclaim_stat = type { i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32 }
%struct.trace_event_raw_mm_vmscan_lru_shrink_active = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_vmscan_node_reclaim_begin = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_mm_vmscan_throttled = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.mem_cgroup = type { %struct.cgroup_subsys_state, %struct.mem_cgroup_id, %struct.page_counter, %union.anon.81, %struct.page_counter, %struct.page_counter, %struct.work_struct, i32, %struct.vmpressure, i8, i8, i32, i32, i32, %struct.cgroup_file, %struct.cgroup_file, %struct.cgroup_file, %struct.mutex, %struct.mem_cgroup_thresholds, %struct.mem_cgroup_thresholds, %struct.list_head, i32, %struct.spinlock, i32, [20 x i8], %struct.memcg_padding, %struct.memcg_vmstats, [9 x %struct.atomic_t], [9 x %struct.atomic_t], i32, i8, i32, i32, ptr, %struct.list_head, [92 x i8], %struct.memcg_padding, %struct.atomic_t, ptr, ptr, %struct.list_head, %struct.wb_domain, [4 x %struct.memcg_cgwb_frn], %struct.list_head, %struct.spinlock, [0 x ptr], [84 x i8] }
%struct.mem_cgroup_id = type { i32, %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.81 = type { %struct.page_counter }
%struct.page_counter = type { %struct.atomic_t, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t, i32, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr }
%struct.vmpressure = type { i32, i32, i32, i32, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.work_struct }
%struct.mem_cgroup_thresholds = type { ptr, ptr }
%struct.memcg_vmstats = type { [44 x i32], [76 x i32], [44 x i32], [76 x i32] }
%struct.memcg_padding = type { [0 x i8] }
%struct.wb_domain = type { %struct.spinlock, %struct.fprop_global, %struct.timer_list, i32, i32, i32 }
%struct.fprop_global = type { %struct.percpu_counter, i32, %struct.seqcount }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.memcg_cgwb_frn = type { i64, i32, i64, %struct.wb_completion }
%struct.wb_completion = type { %struct.atomic_t, ptr }
%struct.mem_cgroup_per_node = type { %struct.lruvec, ptr, %struct.lruvec_stats, [4 x [5 x i32]], %struct.mem_cgroup_reclaim_iter, ptr, %struct.rb_node, i32, i8, ptr }
%struct.lruvec_stats = type { [40 x i32], [40 x i32] }
%struct.mem_cgroup_reclaim_iter = type { ptr, i32 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.shrinker_info = type { %struct.callback_head, ptr, ptr }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.59, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.31 }
%struct.llist_node = type { ptr }
%union.anon.31 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34 }
%struct.anon.34 = type { ptr, i32, i32, i32, i64, ptr }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.tlbflush_unmap_batch = type {}
%union.anon.59 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.71, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.72, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.73, ptr, %struct.address_space, %struct.list_head, %union.anon.76, i32, i32, ptr, ptr, ptr, ptr }
%struct.kgid_t = type { i32 }
%union.anon.71 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.72 = type { %struct.callback_head }
%struct.atomic64_t = type { i64 }
%union.anon.73 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%union.anon.76 = type { ptr }
%struct.address_space_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.scan_control = type { i32, ptr, ptr, i32, i32, i16, i8, i8, i8, i32, i32, i32, %struct.anon.126, %struct.reclaim_state }
%struct.anon.126 = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.reclaim_state = type { i32 }
%struct.writeback_control = type { i32, i32, i64, i64, i32, i16, ptr, ptr, i32, i32, i32, i32, i32, i32 }
%struct.anon.67 = type { i32, %struct.list_head, ptr, i32, ptr, %struct.atomic_t, %struct.atomic_t, i32 }
%struct.anon.22 = type { i32, i8, i8, %struct.atomic_t, i32 }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.blk_plug = type { ptr, ptr, i16, i16, i8, i8, i8, %struct.list_head }
%struct.pagevec = type { i8, i8, [15 x ptr] }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.obj_cgroup = type { %struct.percpu_ref, ptr, %struct.atomic_t, %union.anon.82 }
%union.anon.82 = type { %struct.list_head }
%struct.migration_target_control = type { i32, ptr, i32 }
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i32, i32, %struct.kref, i32, i32, i32, i32, %struct.atomic_t, %struct.bdi_writeback, %struct.list_head, %struct.xarray, %struct.mutex, %struct.rw_semaphore, %struct.wait_queue_head, ptr, [64 x i8], ptr, %struct.timer_list, ptr }
%struct.kref = type { %struct.refcount_struct }
%struct.bdi_writeback = type { ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.atomic_t, [4 x %struct.percpu_counter], i32, i32, i32, i32, i32, i32, i32, i32, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, %struct.delayed_work, i32, %struct.list_head, %struct.percpu_ref, %struct.fprop_local_percpu, ptr, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.41 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%union.anon.41 = type { %struct.work_struct }

@__tpstrtab_mm_vmscan_kswapd_sleep = internal constant [23 x i8] c"mm_vmscan_kswapd_sleep\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_kswapd_sleep = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_kswapd_sleep }, align 4
@__tracepoint_mm_vmscan_kswapd_sleep = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_kswapd_sleep, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_kswapd_sleep, ptr null, ptr @__traceiter_mm_vmscan_kswapd_sleep, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_kswapd_sleep = internal constant ptr @__tracepoint_mm_vmscan_kswapd_sleep, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_kswapd_wake = internal constant [22 x i8] c"mm_vmscan_kswapd_wake\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_kswapd_wake = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_kswapd_wake }, align 4
@__tracepoint_mm_vmscan_kswapd_wake = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_kswapd_wake, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_kswapd_wake, ptr null, ptr @__traceiter_mm_vmscan_kswapd_wake, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_kswapd_wake = internal constant ptr @__tracepoint_mm_vmscan_kswapd_wake, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_wakeup_kswapd = internal constant [24 x i8] c"mm_vmscan_wakeup_kswapd\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_wakeup_kswapd = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_wakeup_kswapd }, align 4
@__tracepoint_mm_vmscan_wakeup_kswapd = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_wakeup_kswapd, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_wakeup_kswapd, ptr null, ptr @__traceiter_mm_vmscan_wakeup_kswapd, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_wakeup_kswapd = internal constant ptr @__tracepoint_mm_vmscan_wakeup_kswapd, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_direct_reclaim_begin = internal constant [31 x i8] c"mm_vmscan_direct_reclaim_begin\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_direct_reclaim_begin = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_direct_reclaim_begin }, align 4
@__tracepoint_mm_vmscan_direct_reclaim_begin = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_direct_reclaim_begin, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_direct_reclaim_begin, ptr null, ptr @__traceiter_mm_vmscan_direct_reclaim_begin, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_direct_reclaim_begin = internal constant ptr @__tracepoint_mm_vmscan_direct_reclaim_begin, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_memcg_reclaim_begin = internal constant [30 x i8] c"mm_vmscan_memcg_reclaim_begin\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_memcg_reclaim_begin = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_memcg_reclaim_begin }, align 4
@__tracepoint_mm_vmscan_memcg_reclaim_begin = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_memcg_reclaim_begin, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_memcg_reclaim_begin, ptr null, ptr @__traceiter_mm_vmscan_memcg_reclaim_begin, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_memcg_reclaim_begin = internal constant ptr @__tracepoint_mm_vmscan_memcg_reclaim_begin, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_memcg_softlimit_reclaim_begin = internal constant [40 x i8] c"mm_vmscan_memcg_softlimit_reclaim_begin\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_memcg_softlimit_reclaim_begin = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_memcg_softlimit_reclaim_begin }, align 4
@__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_memcg_softlimit_reclaim_begin, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_memcg_softlimit_reclaim_begin, ptr null, ptr @__traceiter_mm_vmscan_memcg_softlimit_reclaim_begin, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_memcg_softlimit_reclaim_begin = internal constant ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_direct_reclaim_end = internal constant [29 x i8] c"mm_vmscan_direct_reclaim_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_direct_reclaim_end = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_direct_reclaim_end }, align 4
@__tracepoint_mm_vmscan_direct_reclaim_end = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_direct_reclaim_end, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_direct_reclaim_end, ptr null, ptr @__traceiter_mm_vmscan_direct_reclaim_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_direct_reclaim_end = internal constant ptr @__tracepoint_mm_vmscan_direct_reclaim_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_memcg_reclaim_end = internal constant [28 x i8] c"mm_vmscan_memcg_reclaim_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_memcg_reclaim_end = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_memcg_reclaim_end }, align 4
@__tracepoint_mm_vmscan_memcg_reclaim_end = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_memcg_reclaim_end, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_memcg_reclaim_end, ptr null, ptr @__traceiter_mm_vmscan_memcg_reclaim_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_memcg_reclaim_end = internal constant ptr @__tracepoint_mm_vmscan_memcg_reclaim_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_memcg_softlimit_reclaim_end = internal constant [38 x i8] c"mm_vmscan_memcg_softlimit_reclaim_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_memcg_softlimit_reclaim_end = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_memcg_softlimit_reclaim_end }, align 4
@__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_memcg_softlimit_reclaim_end, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_memcg_softlimit_reclaim_end, ptr null, ptr @__traceiter_mm_vmscan_memcg_softlimit_reclaim_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_memcg_softlimit_reclaim_end = internal constant ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_shrink_slab_start = internal constant [21 x i8] c"mm_shrink_slab_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_shrink_slab_start = dso_local global %struct.static_call_key { ptr @__traceiter_mm_shrink_slab_start }, align 4
@__tracepoint_mm_shrink_slab_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_shrink_slab_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_shrink_slab_start, ptr null, ptr @__traceiter_mm_shrink_slab_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_shrink_slab_start = internal constant ptr @__tracepoint_mm_shrink_slab_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_shrink_slab_end = internal constant [19 x i8] c"mm_shrink_slab_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_shrink_slab_end = dso_local global %struct.static_call_key { ptr @__traceiter_mm_shrink_slab_end }, align 4
@__tracepoint_mm_shrink_slab_end = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_shrink_slab_end, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_shrink_slab_end, ptr null, ptr @__traceiter_mm_shrink_slab_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_shrink_slab_end = internal constant ptr @__tracepoint_mm_shrink_slab_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_lru_isolate = internal constant [22 x i8] c"mm_vmscan_lru_isolate\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_lru_isolate = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_lru_isolate }, align 4
@__tracepoint_mm_vmscan_lru_isolate = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_lru_isolate, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_lru_isolate, ptr null, ptr @__traceiter_mm_vmscan_lru_isolate, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_lru_isolate = internal constant ptr @__tracepoint_mm_vmscan_lru_isolate, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_writepage = internal constant [20 x i8] c"mm_vmscan_writepage\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_writepage = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_writepage }, align 4
@__tracepoint_mm_vmscan_writepage = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_writepage, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_writepage, ptr null, ptr @__traceiter_mm_vmscan_writepage, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_writepage = internal constant ptr @__tracepoint_mm_vmscan_writepage, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_lru_shrink_inactive = internal constant [30 x i8] c"mm_vmscan_lru_shrink_inactive\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_lru_shrink_inactive = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_lru_shrink_inactive }, align 4
@__tracepoint_mm_vmscan_lru_shrink_inactive = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_lru_shrink_inactive, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_lru_shrink_inactive, ptr null, ptr @__traceiter_mm_vmscan_lru_shrink_inactive, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_lru_shrink_inactive = internal constant ptr @__tracepoint_mm_vmscan_lru_shrink_inactive, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_lru_shrink_active = internal constant [28 x i8] c"mm_vmscan_lru_shrink_active\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_lru_shrink_active = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_lru_shrink_active }, align 4
@__tracepoint_mm_vmscan_lru_shrink_active = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_lru_shrink_active, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_lru_shrink_active, ptr null, ptr @__traceiter_mm_vmscan_lru_shrink_active, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_lru_shrink_active = internal constant ptr @__tracepoint_mm_vmscan_lru_shrink_active, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_node_reclaim_begin = internal constant [29 x i8] c"mm_vmscan_node_reclaim_begin\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_node_reclaim_begin = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_node_reclaim_begin }, align 4
@__tracepoint_mm_vmscan_node_reclaim_begin = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_node_reclaim_begin, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_node_reclaim_begin, ptr null, ptr @__traceiter_mm_vmscan_node_reclaim_begin, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_node_reclaim_begin = internal constant ptr @__tracepoint_mm_vmscan_node_reclaim_begin, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_node_reclaim_end = internal constant [27 x i8] c"mm_vmscan_node_reclaim_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_node_reclaim_end = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_node_reclaim_end }, align 4
@__tracepoint_mm_vmscan_node_reclaim_end = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_node_reclaim_end, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_node_reclaim_end, ptr null, ptr @__traceiter_mm_vmscan_node_reclaim_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_node_reclaim_end = internal constant ptr @__tracepoint_mm_vmscan_node_reclaim_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_mm_vmscan_throttled = internal constant [20 x i8] c"mm_vmscan_throttled\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mm_vmscan_throttled = dso_local global %struct.static_call_key { ptr @__traceiter_mm_vmscan_throttled }, align 4
@__tracepoint_mm_vmscan_throttled = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mm_vmscan_throttled, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mm_vmscan_throttled, ptr null, ptr @__traceiter_mm_vmscan_throttled, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mm_vmscan_throttled = internal constant ptr @__tracepoint_mm_vmscan_throttled, section "__tracepoints_ptrs", align 4
@str__vmscan__trace_system_name = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vmscan\00", [25 x i8] zeroinitializer }, align 32
@.str = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"COMPACT_SKIPPED\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_SKIPPED = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_SKIPPED = internal global ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_DEFERRED\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_DEFERRED = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.1, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_DEFERRED = internal global ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_CONTINUE\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_CONTINUE = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.2, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_CONTINUE = internal global ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"COMPACT_SUCCESS\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_SUCCESS = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.3, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_SUCCESS = internal global ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"COMPACT_PARTIAL_SKIPPED\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.4, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED = internal global ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_COMPLETE\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_COMPLETE = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.5, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_COMPLETE = internal global ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"COMPACT_NO_SUITABLE_PAGE\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.6, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE = internal global ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, section "_ftrace_eval_map", align 4
@.str.7 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"COMPACT_NOT_SUITABLE_ZONE\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.7, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE = internal global ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, section "_ftrace_eval_map", align 4
@.str.8 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"COMPACT_CONTENDED\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_CONTENDED = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.8, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_CONTENDED = internal global ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, section "_ftrace_eval_map", align 4
@.str.9 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"COMPACT_PRIO_SYNC_FULL\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.9, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, section "_ftrace_eval_map", align 4
@.str.10 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"COMPACT_PRIO_SYNC_LIGHT\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.10, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, section "_ftrace_eval_map", align 4
@.str.11 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"COMPACT_PRIO_ASYNC\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_ASYNC = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.11, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_ASYNC = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, section "_ftrace_eval_map", align 4
@.str.12 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ZONE_DMA\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_DMA = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.12, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_DMA = internal global ptr @__TRACE_SYSTEM_ZONE_DMA, section "_ftrace_eval_map", align 4
@.str.13 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ZONE_NORMAL\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_NORMAL = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.13, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_NORMAL = internal global ptr @__TRACE_SYSTEM_ZONE_NORMAL, section "_ftrace_eval_map", align 4
@.str.14 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ZONE_HIGHMEM\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_HIGHMEM = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.14, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_HIGHMEM = internal global ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, section "_ftrace_eval_map", align 4
@.str.15 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ZONE_MOVABLE\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_MOVABLE = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.15, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_MOVABLE = internal global ptr @__TRACE_SYSTEM_ZONE_MOVABLE, section "_ftrace_eval_map", align 4
@.str.16 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"LRU_INACTIVE_ANON\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_INACTIVE_ANON = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.16, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_INACTIVE_ANON = internal global ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, section "_ftrace_eval_map", align 4
@.str.17 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_ACTIVE_ANON\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_ACTIVE_ANON = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.17, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_ACTIVE_ANON = internal global ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, section "_ftrace_eval_map", align 4
@.str.18 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"LRU_INACTIVE_FILE\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_INACTIVE_FILE = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.18, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_INACTIVE_FILE = internal global ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, section "_ftrace_eval_map", align 4
@.str.19 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_ACTIVE_FILE\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_ACTIVE_FILE = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.19, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_ACTIVE_FILE = internal global ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, section "_ftrace_eval_map", align 4
@.str.20 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_UNEVICTABLE\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_UNEVICTABLE = internal global %struct.trace_eval_map { ptr @str__vmscan__trace_system_name, ptr @.str.20, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_UNEVICTABLE = internal global ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, section "_ftrace_eval_map", align 4
@trace_event_fields_mm_vmscan_kswapd_sleep = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_kswapd_sleep = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_kswapd_sleep, ptr @perf_trace_mm_vmscan_kswapd_sleep, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_kswapd_sleep, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_kswapd_sleep, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_kswapd_sleep, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_kswapd_sleep = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_kswapd_sleep, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_kswapd_sleep = internal global { [19 x i8], [45 x i8] } { [19 x i8] c"\22nid=%d\22, REC->nid\00", [45 x i8] zeroinitializer }, align 32
@event_mm_vmscan_kswapd_sleep = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_kswapd_sleep, %union.anon.106 { ptr @__tracepoint_mm_vmscan_kswapd_sleep }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_kswapd_sleep }, ptr @print_fmt_mm_vmscan_kswapd_sleep, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_kswapd_sleep = internal global ptr @event_mm_vmscan_kswapd_sleep, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_kswapd_wake = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.32, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.33, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_kswapd_wake = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_kswapd_wake, ptr @perf_trace_mm_vmscan_kswapd_wake, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_kswapd_wake, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_kswapd_wake, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_kswapd_wake, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_kswapd_wake = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_kswapd_wake, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_kswapd_wake = internal global { [40 x i8], [56 x i8] } { [40 x i8] c"\22nid=%d order=%d\22, REC->nid, REC->order\00", [56 x i8] zeroinitializer }, align 32
@event_mm_vmscan_kswapd_wake = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_kswapd_wake, %union.anon.106 { ptr @__tracepoint_mm_vmscan_kswapd_wake }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_kswapd_wake }, ptr @print_fmt_mm_vmscan_kswapd_wake, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_kswapd_wake = internal global ptr @event_mm_vmscan_kswapd_wake, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_wakeup_kswapd = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.32, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.33, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.36, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_wakeup_kswapd = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_wakeup_kswapd, ptr @perf_trace_mm_vmscan_wakeup_kswapd, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_wakeup_kswapd, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_wakeup_kswapd, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_wakeup_kswapd, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_wakeup_kswapd = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_wakeup_kswapd, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_wakeup_kswapd = internal global { [3030 x i8], [746 x i8] } { [3030 x i8] c"\22nid=%d order=%d gfp_flags=%s\22, REC->nid, REC->order, (REC->gfp_flags) ? __print_flags(REC->gfp_flags, \22|\22, {(unsigned long)(((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))) | (( gfp_t)0x400u)), \22GFP_TRANSHUGE\22}, {(unsigned long)((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))), \22GFP_TRANSHUGE_LIGHT\22}, {(unsigned long)((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)), \22GFP_HIGHUSER_MOVABLE\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)), \22GFP_HIGHUSER\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)), \22GFP_USER\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)) | (( gfp_t)0x400000u)), \22GFP_KERNEL_ACCOUNT\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)), \22GFP_KERNEL\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u)), \22GFP_NOFS\22}, {(unsigned long)((( gfp_t)0x20u)|(( gfp_t)0x200u)|(( gfp_t)0x800u)), \22GFP_ATOMIC\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u))), \22GFP_NOIO\22}, {(unsigned long)((( gfp_t)0x800u)), \22GFP_NOWAIT\22}, {(unsigned long)(( gfp_t)0x01u), \22GFP_DMA\22}, {(unsigned long)(( gfp_t)0x02u), \22__GFP_HIGHMEM\22}, {(unsigned long)(( gfp_t)0x04u), \22GFP_DMA32\22}, {(unsigned long)(( gfp_t)0x20u), \22__GFP_HIGH\22}, {(unsigned long)(( gfp_t)0x200u), \22__GFP_ATOMIC\22}, {(unsigned long)(( gfp_t)0x40u), \22__GFP_IO\22}, {(unsigned long)(( gfp_t)0x80u), \22__GFP_FS\22}, {(unsigned long)(( gfp_t)0x2000u), \22__GFP_NOWARN\22}, {(unsigned long)(( gfp_t)0x4000u), \22__GFP_RETRY_MAYFAIL\22}, {(unsigned long)(( gfp_t)0x8000u), \22__GFP_NOFAIL\22}, {(unsigned long)(( gfp_t)0x10000u), \22__GFP_NORETRY\22}, {(unsigned long)(( gfp_t)0x40000u), \22__GFP_COMP\22}, {(unsigned long)(( gfp_t)0x100u), \22__GFP_ZERO\22}, {(unsigned long)(( gfp_t)0x80000u), \22__GFP_NOMEMALLOC\22}, {(unsigned long)(( gfp_t)0x20000u), \22__GFP_MEMALLOC\22}, {(unsigned long)(( gfp_t)0x100000u), \22__GFP_HARDWALL\22}, {(unsigned long)(( gfp_t)0x200000u), \22__GFP_THISNODE\22}, {(unsigned long)(( gfp_t)0x10u), \22__GFP_RECLAIMABLE\22}, {(unsigned long)(( gfp_t)0x08u), \22__GFP_MOVABLE\22}, {(unsigned long)(( gfp_t)0x400000u), \22__GFP_ACCOUNT\22}, {(unsigned long)(( gfp_t)0x1000u), \22__GFP_WRITE\22}, {(unsigned long)(( gfp_t)(0x400u|0x800u)), \22__GFP_RECLAIM\22}, {(unsigned long)(( gfp_t)0x400u), \22__GFP_DIRECT_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800u), \22__GFP_KSWAPD_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800000u), \22__GFP_ZEROTAGS\22}, {(unsigned long)(( gfp_t)0x1000000u),\22__GFP_SKIP_KASAN_POISON\22} ) : \22none\22\00", [746 x i8] zeroinitializer }, align 32
@event_mm_vmscan_wakeup_kswapd = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_wakeup_kswapd, %union.anon.106 { ptr @__tracepoint_mm_vmscan_wakeup_kswapd }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_wakeup_kswapd }, ptr @print_fmt_mm_vmscan_wakeup_kswapd, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_wakeup_kswapd = internal global ptr @event_mm_vmscan_wakeup_kswapd, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_direct_reclaim_begin_template = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.33, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.36, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_direct_reclaim_begin_template = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_direct_reclaim_begin_template, ptr @perf_trace_mm_vmscan_direct_reclaim_begin_template, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_direct_reclaim_begin_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_direct_reclaim_begin_template, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_direct_reclaim_begin_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_direct_reclaim_begin_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_direct_reclaim_begin_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_direct_reclaim_begin_template = internal global { [3013 x i8], [763 x i8] } { [3013 x i8] c"\22order=%d gfp_flags=%s\22, REC->order, (REC->gfp_flags) ? __print_flags(REC->gfp_flags, \22|\22, {(unsigned long)(((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))) | (( gfp_t)0x400u)), \22GFP_TRANSHUGE\22}, {(unsigned long)((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))), \22GFP_TRANSHUGE_LIGHT\22}, {(unsigned long)((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)), \22GFP_HIGHUSER_MOVABLE\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)), \22GFP_HIGHUSER\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)), \22GFP_USER\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)) | (( gfp_t)0x400000u)), \22GFP_KERNEL_ACCOUNT\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)), \22GFP_KERNEL\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u)), \22GFP_NOFS\22}, {(unsigned long)((( gfp_t)0x20u)|(( gfp_t)0x200u)|(( gfp_t)0x800u)), \22GFP_ATOMIC\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u))), \22GFP_NOIO\22}, {(unsigned long)((( gfp_t)0x800u)), \22GFP_NOWAIT\22}, {(unsigned long)(( gfp_t)0x01u), \22GFP_DMA\22}, {(unsigned long)(( gfp_t)0x02u), \22__GFP_HIGHMEM\22}, {(unsigned long)(( gfp_t)0x04u), \22GFP_DMA32\22}, {(unsigned long)(( gfp_t)0x20u), \22__GFP_HIGH\22}, {(unsigned long)(( gfp_t)0x200u), \22__GFP_ATOMIC\22}, {(unsigned long)(( gfp_t)0x40u), \22__GFP_IO\22}, {(unsigned long)(( gfp_t)0x80u), \22__GFP_FS\22}, {(unsigned long)(( gfp_t)0x2000u), \22__GFP_NOWARN\22}, {(unsigned long)(( gfp_t)0x4000u), \22__GFP_RETRY_MAYFAIL\22}, {(unsigned long)(( gfp_t)0x8000u), \22__GFP_NOFAIL\22}, {(unsigned long)(( gfp_t)0x10000u), \22__GFP_NORETRY\22}, {(unsigned long)(( gfp_t)0x40000u), \22__GFP_COMP\22}, {(unsigned long)(( gfp_t)0x100u), \22__GFP_ZERO\22}, {(unsigned long)(( gfp_t)0x80000u), \22__GFP_NOMEMALLOC\22}, {(unsigned long)(( gfp_t)0x20000u), \22__GFP_MEMALLOC\22}, {(unsigned long)(( gfp_t)0x100000u), \22__GFP_HARDWALL\22}, {(unsigned long)(( gfp_t)0x200000u), \22__GFP_THISNODE\22}, {(unsigned long)(( gfp_t)0x10u), \22__GFP_RECLAIMABLE\22}, {(unsigned long)(( gfp_t)0x08u), \22__GFP_MOVABLE\22}, {(unsigned long)(( gfp_t)0x400000u), \22__GFP_ACCOUNT\22}, {(unsigned long)(( gfp_t)0x1000u), \22__GFP_WRITE\22}, {(unsigned long)(( gfp_t)(0x400u|0x800u)), \22__GFP_RECLAIM\22}, {(unsigned long)(( gfp_t)0x400u), \22__GFP_DIRECT_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800u), \22__GFP_KSWAPD_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800000u), \22__GFP_ZEROTAGS\22}, {(unsigned long)(( gfp_t)0x1000000u),\22__GFP_SKIP_KASAN_POISON\22} ) : \22none\22\00", [763 x i8] zeroinitializer }, align 32
@event_mm_vmscan_direct_reclaim_begin = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_direct_reclaim_begin_template, %union.anon.106 { ptr @__tracepoint_mm_vmscan_direct_reclaim_begin }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_begin_template }, ptr @print_fmt_mm_vmscan_direct_reclaim_begin_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_direct_reclaim_begin = internal global ptr @event_mm_vmscan_direct_reclaim_begin, section "_ftrace_events", align 4
@event_mm_vmscan_memcg_reclaim_begin = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_direct_reclaim_begin_template, %union.anon.106 { ptr @__tracepoint_mm_vmscan_memcg_reclaim_begin }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_begin_template }, ptr @print_fmt_mm_vmscan_direct_reclaim_begin_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_memcg_reclaim_begin = internal global ptr @event_mm_vmscan_memcg_reclaim_begin, section "_ftrace_events", align 4
@event_mm_vmscan_memcg_softlimit_reclaim_begin = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_direct_reclaim_begin_template, %union.anon.106 { ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_begin_template }, ptr @print_fmt_mm_vmscan_direct_reclaim_begin_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_memcg_softlimit_reclaim_begin = internal global ptr @event_mm_vmscan_memcg_softlimit_reclaim_begin, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_direct_reclaim_end_template = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.79, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_direct_reclaim_end_template = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_direct_reclaim_end_template, ptr @perf_trace_mm_vmscan_direct_reclaim_end_template, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_direct_reclaim_end_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_direct_reclaim_end_template, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_direct_reclaim_end_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_direct_reclaim_end_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_direct_reclaim_end_template = internal global { [38 x i8], [58 x i8] } { [38 x i8] c"\22nr_reclaimed=%lu\22, REC->nr_reclaimed\00", [58 x i8] zeroinitializer }, align 32
@event_mm_vmscan_direct_reclaim_end = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_direct_reclaim_end_template, %union.anon.106 { ptr @__tracepoint_mm_vmscan_direct_reclaim_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template }, ptr @print_fmt_mm_vmscan_direct_reclaim_end_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_direct_reclaim_end = internal global ptr @event_mm_vmscan_direct_reclaim_end, section "_ftrace_events", align 4
@event_mm_vmscan_memcg_reclaim_end = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_direct_reclaim_end_template, %union.anon.106 { ptr @__tracepoint_mm_vmscan_memcg_reclaim_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template }, ptr @print_fmt_mm_vmscan_direct_reclaim_end_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_memcg_reclaim_end = internal global ptr @event_mm_vmscan_memcg_reclaim_end, section "_ftrace_events", align 4
@event_mm_vmscan_memcg_softlimit_reclaim_end = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_direct_reclaim_end_template, %union.anon.106 { ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template }, ptr @print_fmt_mm_vmscan_direct_reclaim_end_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_memcg_softlimit_reclaim_end = internal global ptr @event_mm_vmscan_memcg_softlimit_reclaim_end, section "_ftrace_events", align 4
@trace_event_fields_mm_shrink_slab_start = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.81, %union.anon.104 { %struct.anon.105 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.83, %union.anon.104 { %struct.anon.105 { ptr @.str.84, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.85, %union.anon.104 { %struct.anon.105 { ptr @.str.86, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.36, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.87, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.88, %union.anon.104 { %struct.anon.105 { ptr @.str.89, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.90, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.91, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_mm_shrink_slab_start = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_shrink_slab_start, ptr @perf_trace_mm_shrink_slab_start, ptr @trace_event_reg, ptr @trace_event_fields_mm_shrink_slab_start, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_shrink_slab_start, i64 24), ptr getelementptr (i8, ptr @event_class_mm_shrink_slab_start, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_shrink_slab_start = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_shrink_slab_start, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_shrink_slab_start = internal global { [3206 x i8], [826 x i8] } { [3206 x i8] c"\22%pS %p: nid: %d objects to shrink %ld gfp_flags %s cache items %ld delta %lld total_scan %ld priority %d\22, REC->shrink, REC->shr, REC->nid, REC->nr_objects_to_shrink, (REC->gfp_flags) ? __print_flags(REC->gfp_flags, \22|\22, {(unsigned long)(((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))) | (( gfp_t)0x400u)), \22GFP_TRANSHUGE\22}, {(unsigned long)((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))), \22GFP_TRANSHUGE_LIGHT\22}, {(unsigned long)((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)), \22GFP_HIGHUSER_MOVABLE\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)), \22GFP_HIGHUSER\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)), \22GFP_USER\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)) | (( gfp_t)0x400000u)), \22GFP_KERNEL_ACCOUNT\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)), \22GFP_KERNEL\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u)), \22GFP_NOFS\22}, {(unsigned long)((( gfp_t)0x20u)|(( gfp_t)0x200u)|(( gfp_t)0x800u)), \22GFP_ATOMIC\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u))), \22GFP_NOIO\22}, {(unsigned long)((( gfp_t)0x800u)), \22GFP_NOWAIT\22}, {(unsigned long)(( gfp_t)0x01u), \22GFP_DMA\22}, {(unsigned long)(( gfp_t)0x02u), \22__GFP_HIGHMEM\22}, {(unsigned long)(( gfp_t)0x04u), \22GFP_DMA32\22}, {(unsigned long)(( gfp_t)0x20u), \22__GFP_HIGH\22}, {(unsigned long)(( gfp_t)0x200u), \22__GFP_ATOMIC\22}, {(unsigned long)(( gfp_t)0x40u), \22__GFP_IO\22}, {(unsigned long)(( gfp_t)0x80u), \22__GFP_FS\22}, {(unsigned long)(( gfp_t)0x2000u), \22__GFP_NOWARN\22}, {(unsigned long)(( gfp_t)0x4000u), \22__GFP_RETRY_MAYFAIL\22}, {(unsigned long)(( gfp_t)0x8000u), \22__GFP_NOFAIL\22}, {(unsigned long)(( gfp_t)0x10000u), \22__GFP_NORETRY\22}, {(unsigned long)(( gfp_t)0x40000u), \22__GFP_COMP\22}, {(unsigned long)(( gfp_t)0x100u), \22__GFP_ZERO\22}, {(unsigned long)(( gfp_t)0x80000u), \22__GFP_NOMEMALLOC\22}, {(unsigned long)(( gfp_t)0x20000u), \22__GFP_MEMALLOC\22}, {(unsigned long)(( gfp_t)0x100000u), \22__GFP_HARDWALL\22}, {(unsigned long)(( gfp_t)0x200000u), \22__GFP_THISNODE\22}, {(unsigned long)(( gfp_t)0x10u), \22__GFP_RECLAIMABLE\22}, {(unsigned long)(( gfp_t)0x08u), \22__GFP_MOVABLE\22}, {(unsigned long)(( gfp_t)0x400000u), \22__GFP_ACCOUNT\22}, {(unsigned long)(( gfp_t)0x1000u), \22__GFP_WRITE\22}, {(unsigned long)(( gfp_t)(0x400u|0x800u)), \22__GFP_RECLAIM\22}, {(unsigned long)(( gfp_t)0x400u), \22__GFP_DIRECT_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800u), \22__GFP_KSWAPD_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800000u), \22__GFP_ZEROTAGS\22}, {(unsigned long)(( gfp_t)0x1000000u),\22__GFP_SKIP_KASAN_POISON\22} ) : \22none\22, REC->cache_items, REC->delta, REC->total_scan, REC->priority\00", [826 x i8] zeroinitializer }, align 32
@event_mm_shrink_slab_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_shrink_slab_start, %union.anon.106 { ptr @__tracepoint_mm_shrink_slab_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_shrink_slab_start }, ptr @print_fmt_mm_shrink_slab_start, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_shrink_slab_start = internal global ptr @event_mm_shrink_slab_start, section "_ftrace_events", align 4
@trace_event_fields_mm_shrink_slab_end = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.81, %union.anon.104 { %struct.anon.105 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.83, %union.anon.104 { %struct.anon.105 { ptr @.str.84, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.85, %union.anon.104 { %struct.anon.105 { ptr @.str.93, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.85, %union.anon.104 { %struct.anon.105 { ptr @.str.94, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.95, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.85, %union.anon.104 { %struct.anon.105 { ptr @.str.90, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_mm_shrink_slab_end = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_shrink_slab_end, ptr @perf_trace_mm_shrink_slab_end, ptr @trace_event_reg, ptr @trace_event_fields_mm_shrink_slab_end, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_shrink_slab_end, i64 24), ptr getelementptr (i8, ptr @event_class_mm_shrink_slab_end, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_shrink_slab_end = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_shrink_slab_end, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_shrink_slab_end = internal global { [198 x i8], [58 x i8] } { [198 x i8] c"\22%pS %p: nid: %d unused scan count %ld new scan count %ld total_scan %ld last shrinker return val %d\22, REC->shrink, REC->shr, REC->nid, REC->unused_scan, REC->new_scan, REC->total_scan, REC->retval\00", [58 x i8] zeroinitializer }, align 32
@event_mm_shrink_slab_end = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_shrink_slab_end, %union.anon.106 { ptr @__tracepoint_mm_shrink_slab_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_shrink_slab_end }, ptr @print_fmt_mm_shrink_slab_end, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_shrink_slab_end = internal global ptr @event_mm_shrink_slab_end, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_lru_isolate = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.97, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.33, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.98, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.101, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.102, %union.anon.104 { %struct.anon.105 { ptr @.str.103, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.104, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_lru_isolate = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_lru_isolate, ptr @perf_trace_mm_vmscan_lru_isolate, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_lru_isolate, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_lru_isolate, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_lru_isolate, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_lru_isolate = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_lru_isolate, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_lru_isolate = internal global { [434 x i8], [110 x i8] } { [434 x i8] c"\22isolate_mode=%d classzone=%d order=%d nr_requested=%lu nr_scanned=%lu nr_skipped=%lu nr_taken=%lu lru=%s\22, REC->isolate_mode, REC->highest_zoneidx, REC->order, REC->nr_requested, REC->nr_scanned, REC->nr_skipped, REC->nr_taken, __print_symbolic(REC->lru, {LRU_INACTIVE_ANON, \22inactive_anon\22}, {LRU_ACTIVE_ANON, \22active_anon\22}, {LRU_INACTIVE_FILE, \22inactive_file\22}, {LRU_ACTIVE_FILE, \22active_file\22}, {LRU_UNEVICTABLE, \22unevictable\22})\00", [110 x i8] zeroinitializer }, align 32
@event_mm_vmscan_lru_isolate = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_lru_isolate, %union.anon.106 { ptr @__tracepoint_mm_vmscan_lru_isolate }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_lru_isolate }, ptr @print_fmt_mm_vmscan_lru_isolate, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_lru_isolate = internal global ptr @event_mm_vmscan_lru_isolate, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_writepage = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.111, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.112, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_writepage = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_writepage, ptr @perf_trace_mm_vmscan_writepage, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_writepage, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_writepage, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_writepage, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_writepage = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_writepage, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_writepage = internal global { [326 x i8], [90 x i8] } { [326 x i8] c"\22page=%p pfn=0x%lx flags=%s\22, (mem_map + ((REC->pfn) - (__pv_phys_pfn_offset))), REC->pfn, (REC->reclaim_flags) ? __print_flags(REC->reclaim_flags, \22|\22, {0x0001u, \22RECLAIM_WB_ANON\22}, {0x0002u, \22RECLAIM_WB_FILE\22}, {0x0010u, \22RECLAIM_WB_MIXED\22}, {0x0004u, \22RECLAIM_WB_SYNC\22}, {0x0008u, \22RECLAIM_WB_ASYNC\22} ) : \22RECLAIM_WB_NONE\22\00", [90 x i8] zeroinitializer }, align 32
@event_mm_vmscan_writepage = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_writepage, %union.anon.106 { ptr @__tracepoint_mm_vmscan_writepage }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_writepage }, ptr @print_fmt_mm_vmscan_writepage, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_writepage = internal global ptr @event_mm_vmscan_writepage, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_lru_shrink_inactive = internal global { [14 x %struct.trace_event_fields], [80 x i8] } { [14 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.79, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.121, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.122, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.123, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.124, %union.anon.104 { %struct.anon.105 { ptr @.str.125, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.124, %union.anon.104 { %struct.anon.105 { ptr @.str.126, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.127, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.128, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.91, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.112, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [80 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_lru_shrink_inactive = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_lru_shrink_inactive, ptr @perf_trace_mm_vmscan_lru_shrink_inactive, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_lru_shrink_inactive, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_lru_shrink_inactive, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_lru_shrink_inactive, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_lru_shrink_inactive = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_lru_shrink_inactive, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_lru_shrink_inactive = internal global { [645 x i8], [187 x i8] } { [645 x i8] c"\22nid=%d nr_scanned=%ld nr_reclaimed=%ld nr_dirty=%ld nr_writeback=%ld nr_congested=%ld nr_immediate=%ld nr_activate_anon=%d nr_activate_file=%d nr_ref_keep=%ld nr_unmap_fail=%ld priority=%d flags=%s\22, REC->nid, REC->nr_scanned, REC->nr_reclaimed, REC->nr_dirty, REC->nr_writeback, REC->nr_congested, REC->nr_immediate, REC->nr_activate0, REC->nr_activate1, REC->nr_ref_keep, REC->nr_unmap_fail, REC->priority, (REC->reclaim_flags) ? __print_flags(REC->reclaim_flags, \22|\22, {0x0001u, \22RECLAIM_WB_ANON\22}, {0x0002u, \22RECLAIM_WB_FILE\22}, {0x0010u, \22RECLAIM_WB_MIXED\22}, {0x0004u, \22RECLAIM_WB_SYNC\22}, {0x0008u, \22RECLAIM_WB_ASYNC\22} ) : \22RECLAIM_WB_NONE\22\00", [187 x i8] zeroinitializer }, align 32
@event_mm_vmscan_lru_shrink_inactive = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_lru_shrink_inactive, %union.anon.106 { ptr @__tracepoint_mm_vmscan_lru_shrink_inactive }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_lru_shrink_inactive }, ptr @print_fmt_mm_vmscan_lru_shrink_inactive, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_lru_shrink_inactive = internal global ptr @event_mm_vmscan_lru_shrink_inactive, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_lru_shrink_active = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.101, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.131, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.104 { %struct.anon.105 { ptr @.str.132, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.91, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.112, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_lru_shrink_active = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_lru_shrink_active, ptr @perf_trace_mm_vmscan_lru_shrink_active, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_lru_shrink_active, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_lru_shrink_active, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_lru_shrink_active, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_lru_shrink_active = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_lru_shrink_active, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_lru_shrink_active = internal global { [427 x i8], [117 x i8] } { [427 x i8] c"\22nid=%d nr_taken=%ld nr_active=%ld nr_deactivated=%ld nr_referenced=%ld priority=%d flags=%s\22, REC->nid, REC->nr_taken, REC->nr_active, REC->nr_deactivated, REC->nr_referenced, REC->priority, (REC->reclaim_flags) ? __print_flags(REC->reclaim_flags, \22|\22, {0x0001u, \22RECLAIM_WB_ANON\22}, {0x0002u, \22RECLAIM_WB_FILE\22}, {0x0010u, \22RECLAIM_WB_MIXED\22}, {0x0004u, \22RECLAIM_WB_SYNC\22}, {0x0008u, \22RECLAIM_WB_ASYNC\22} ) : \22RECLAIM_WB_NONE\22\00", [117 x i8] zeroinitializer }, align 32
@event_mm_vmscan_lru_shrink_active = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_lru_shrink_active, %union.anon.106 { ptr @__tracepoint_mm_vmscan_lru_shrink_active }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_lru_shrink_active }, ptr @print_fmt_mm_vmscan_lru_shrink_active, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_lru_shrink_active = internal global ptr @event_mm_vmscan_lru_shrink_active, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_node_reclaim_begin = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.33, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.104 { %struct.anon.105 { ptr @.str.36, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_node_reclaim_begin = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_node_reclaim_begin, ptr @perf_trace_mm_vmscan_node_reclaim_begin, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_node_reclaim_begin, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_node_reclaim_begin, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_node_reclaim_begin, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_node_reclaim_begin = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_node_reclaim_begin, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_node_reclaim_begin = internal global { [3030 x i8], [746 x i8] } { [3030 x i8] c"\22nid=%d order=%d gfp_flags=%s\22, REC->nid, REC->order, (REC->gfp_flags) ? __print_flags(REC->gfp_flags, \22|\22, {(unsigned long)(((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))) | (( gfp_t)0x400u)), \22GFP_TRANSHUGE\22}, {(unsigned long)((((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)) | (( gfp_t)0x40000u) | (( gfp_t)0x80000u) | (( gfp_t)0x2000u)) & ~(( gfp_t)(0x400u|0x800u))), \22GFP_TRANSHUGE_LIGHT\22}, {(unsigned long)((((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)) | (( gfp_t)0x08u) | (( gfp_t)0x1000000u)), \22GFP_HIGHUSER_MOVABLE\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)) | (( gfp_t)0x02u)), \22GFP_HIGHUSER\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u) | (( gfp_t)0x100000u)), \22GFP_USER\22}, {(unsigned long)(((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)) | (( gfp_t)0x400000u)), \22GFP_KERNEL_ACCOUNT\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u) | (( gfp_t)0x80u)), \22GFP_KERNEL\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u)) | (( gfp_t)0x40u)), \22GFP_NOFS\22}, {(unsigned long)((( gfp_t)0x20u)|(( gfp_t)0x200u)|(( gfp_t)0x800u)), \22GFP_ATOMIC\22}, {(unsigned long)((( gfp_t)(0x400u|0x800u))), \22GFP_NOIO\22}, {(unsigned long)((( gfp_t)0x800u)), \22GFP_NOWAIT\22}, {(unsigned long)(( gfp_t)0x01u), \22GFP_DMA\22}, {(unsigned long)(( gfp_t)0x02u), \22__GFP_HIGHMEM\22}, {(unsigned long)(( gfp_t)0x04u), \22GFP_DMA32\22}, {(unsigned long)(( gfp_t)0x20u), \22__GFP_HIGH\22}, {(unsigned long)(( gfp_t)0x200u), \22__GFP_ATOMIC\22}, {(unsigned long)(( gfp_t)0x40u), \22__GFP_IO\22}, {(unsigned long)(( gfp_t)0x80u), \22__GFP_FS\22}, {(unsigned long)(( gfp_t)0x2000u), \22__GFP_NOWARN\22}, {(unsigned long)(( gfp_t)0x4000u), \22__GFP_RETRY_MAYFAIL\22}, {(unsigned long)(( gfp_t)0x8000u), \22__GFP_NOFAIL\22}, {(unsigned long)(( gfp_t)0x10000u), \22__GFP_NORETRY\22}, {(unsigned long)(( gfp_t)0x40000u), \22__GFP_COMP\22}, {(unsigned long)(( gfp_t)0x100u), \22__GFP_ZERO\22}, {(unsigned long)(( gfp_t)0x80000u), \22__GFP_NOMEMALLOC\22}, {(unsigned long)(( gfp_t)0x20000u), \22__GFP_MEMALLOC\22}, {(unsigned long)(( gfp_t)0x100000u), \22__GFP_HARDWALL\22}, {(unsigned long)(( gfp_t)0x200000u), \22__GFP_THISNODE\22}, {(unsigned long)(( gfp_t)0x10u), \22__GFP_RECLAIMABLE\22}, {(unsigned long)(( gfp_t)0x08u), \22__GFP_MOVABLE\22}, {(unsigned long)(( gfp_t)0x400000u), \22__GFP_ACCOUNT\22}, {(unsigned long)(( gfp_t)0x1000u), \22__GFP_WRITE\22}, {(unsigned long)(( gfp_t)(0x400u|0x800u)), \22__GFP_RECLAIM\22}, {(unsigned long)(( gfp_t)0x400u), \22__GFP_DIRECT_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800u), \22__GFP_KSWAPD_RECLAIM\22}, {(unsigned long)(( gfp_t)0x800000u), \22__GFP_ZEROTAGS\22}, {(unsigned long)(( gfp_t)0x1000000u),\22__GFP_SKIP_KASAN_POISON\22} ) : \22none\22\00", [746 x i8] zeroinitializer }, align 32
@event_mm_vmscan_node_reclaim_begin = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_node_reclaim_begin, %union.anon.106 { ptr @__tracepoint_mm_vmscan_node_reclaim_begin }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_node_reclaim_begin }, ptr @print_fmt_mm_vmscan_node_reclaim_begin, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_node_reclaim_begin = internal global ptr @event_mm_vmscan_node_reclaim_begin, section "_ftrace_events", align 4
@event_mm_vmscan_node_reclaim_end = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_direct_reclaim_end_template, %union.anon.106 { ptr @__tracepoint_mm_vmscan_node_reclaim_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template }, ptr @print_fmt_mm_vmscan_direct_reclaim_end_template, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_node_reclaim_end = internal global ptr @event_mm_vmscan_node_reclaim_end, section "_ftrace_events", align 4
@trace_event_fields_mm_vmscan_throttled = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.30, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.134, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.135, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.29, %union.anon.104 { %struct.anon.105 { ptr @.str.136, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_mm_vmscan_throttled = internal global %struct.trace_event_class { ptr @str__vmscan__trace_system_name, ptr @trace_event_raw_event_mm_vmscan_throttled, ptr @perf_trace_mm_vmscan_throttled, ptr @trace_event_reg, ptr @trace_event_fields_mm_vmscan_throttled, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mm_vmscan_throttled, i64 24), ptr getelementptr (i8, ptr @event_class_mm_vmscan_throttled, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mm_vmscan_throttled = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mm_vmscan_throttled, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mm_vmscan_throttled = internal global { [435 x i8], [109 x i8] } { [435 x i8] c"\22nid=%d usec_timeout=%d usect_delayed=%d reason=%s\22, REC->nid, REC->usec_timeout, REC->usec_delayed, (REC->reason) ? __print_flags(REC->reason, \22|\22, {(1 << VMSCAN_THROTTLE_WRITEBACK), \22VMSCAN_THROTTLE_WRITEBACK\22}, {(1 << VMSCAN_THROTTLE_ISOLATED), \22VMSCAN_THROTTLE_ISOLATED\22}, {(1 << VMSCAN_THROTTLE_NOPROGRESS), \22VMSCAN_THROTTLE_NOPROGRESS\22}, {(1 << VMSCAN_THROTTLE_CONGESTED), \22VMSCAN_THROTTLE_CONGESTED\22} ) : \22VMSCAN_THROTTLE_NONE\22\00", [109 x i8] zeroinitializer }, align 32
@event_mm_vmscan_throttled = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mm_vmscan_throttled, %union.anon.106 { ptr @__tracepoint_mm_vmscan_throttled }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mm_vmscan_throttled }, ptr @print_fmt_mm_vmscan_throttled, ptr null, %union.anon.107 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mm_vmscan_throttled = internal global ptr @event_mm_vmscan_throttled, section "_ftrace_events", align 4
@__bpf_trace_tp_map_mm_vmscan_kswapd_sleep = internal global %union.anon.108 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_kswapd_sleep, ptr @__bpf_trace_mm_vmscan_kswapd_sleep, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_kswapd_wake = internal global %union.anon.109 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_kswapd_wake, ptr @__bpf_trace_mm_vmscan_kswapd_wake, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_wakeup_kswapd = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_wakeup_kswapd, ptr @__bpf_trace_mm_vmscan_wakeup_kswapd, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_direct_reclaim_begin = internal global %union.anon.111 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_direct_reclaim_begin, ptr @__bpf_trace_mm_vmscan_direct_reclaim_begin_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_memcg_reclaim_begin = internal global %union.anon.112 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_memcg_reclaim_begin, ptr @__bpf_trace_mm_vmscan_direct_reclaim_begin_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_memcg_softlimit_reclaim_begin = internal global %union.anon.113 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin, ptr @__bpf_trace_mm_vmscan_direct_reclaim_begin_template, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_direct_reclaim_end = internal global %union.anon.114 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_direct_reclaim_end, ptr @__bpf_trace_mm_vmscan_direct_reclaim_end_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_memcg_reclaim_end = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_memcg_reclaim_end, ptr @__bpf_trace_mm_vmscan_direct_reclaim_end_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_memcg_softlimit_reclaim_end = internal global %union.anon.116 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end, ptr @__bpf_trace_mm_vmscan_direct_reclaim_end_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_shrink_slab_start = internal global %union.anon.117 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_shrink_slab_start, ptr @__bpf_trace_mm_shrink_slab_start, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_shrink_slab_end = internal global %union.anon.118 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_shrink_slab_end, ptr @__bpf_trace_mm_shrink_slab_end, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_lru_isolate = internal global %union.anon.119 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_lru_isolate, ptr @__bpf_trace_mm_vmscan_lru_isolate, i32 8, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_writepage = internal global %union.anon.120 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_writepage, ptr @__bpf_trace_mm_vmscan_writepage, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_lru_shrink_inactive = internal global %union.anon.121 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_lru_shrink_inactive, ptr @__bpf_trace_mm_vmscan_lru_shrink_inactive, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_lru_shrink_active = internal global %union.anon.122 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_lru_shrink_active, ptr @__bpf_trace_mm_vmscan_lru_shrink_active, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_node_reclaim_begin = internal global %union.anon.123 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_node_reclaim_begin, ptr @__bpf_trace_mm_vmscan_node_reclaim_begin, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_node_reclaim_end = internal global %union.anon.124 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_node_reclaim_end, ptr @__bpf_trace_mm_vmscan_direct_reclaim_end_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_mm_vmscan_throttled = internal global %union.anon.125 { %struct.bpf_raw_event_map { ptr @__tracepoint_mm_vmscan_throttled, ptr @__bpf_trace_mm_vmscan_throttled, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@vm_swappiness = dso_local global { i32, [28 x i8] } { i32 60, [28 x i8] zeroinitializer }, align 32
@shrinker_rwsem = internal global { %struct.rw_semaphore, [32 x i8] } { %struct.rw_semaphore { %struct.atomic_t zeroinitializer, %struct.atomic_t zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.143, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.list_head { ptr getelementptr (i8, ptr @shrinker_rwsem, i64 56), ptr getelementptr (i8, ptr @shrinker_rwsem, i64 56) }, ptr @shrinker_rwsem, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.144, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [32 x i8] zeroinitializer }, align 32
@shrinker_nr_max = internal global { i32, [28 x i8] } zeroinitializer, align 32
@set_shrinker_bit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.21 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"mm/vmscan.c\00", [20 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@root_mem_cgroup = external dso_local local_unnamed_addr global ptr, align 4
@shrinker_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @shrinker_list, ptr @shrinker_list }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_register_shrinker = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_shrinker = external dso_local constant [0 x i8], align 1
@__ksymtab_register_shrinker = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_shrinker to i32), ptr @__kstrtab_register_shrinker, ptr @__kstrtabns_register_shrinker }, section "___ksymtab+register_shrinker", align 4
@__kstrtab_unregister_shrinker = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_shrinker = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_shrinker = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_shrinker to i32), ptr @__kstrtab_unregister_shrinker, ptr @__kstrtabns_unregister_shrinker }, section "___ksymtab+unregister_shrinker", align 4
@__kstrtab_synchronize_shrinkers = external dso_local constant [0 x i8], align 1
@__kstrtabns_synchronize_shrinkers = external dso_local constant [0 x i8], align 1
@__ksymtab_synchronize_shrinkers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @synchronize_shrinkers to i32), ptr @__kstrtab_synchronize_shrinkers, ptr @__kstrtabns_synchronize_shrinkers }, section "___ksymtab+synchronize_shrinkers", align 4
@reclaim_throttle.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.23 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"VM_BUG_ON_PAGE(!page_count(page))\00", [62 x i8] zeroinitializer }, align 32
@isolate_lru_page._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.24, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.isolate_lru_page = private unnamed_addr constant [17 x i8] c"isolate_lru_page\00", align 1
@.str.25 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"trying to isolate tail page\00", [36 x i8] zeroinitializer }, align 32
@laptop_mode = external dso_local local_unnamed_addr global i32, align 4
@mem_cgroup_shrink_node.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.26 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"kswapd%d\00", [23 x i8] zeroinitializer }, align 32
@system_state = external dso_local local_unnamed_addr global i32, align 4
@kswapd_run._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.28, ptr @.str.21, i32 4639, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013vmscan: Failed to start kswapd on node %d\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"kswapd_run\00", [21 x i8] zeroinitializer }, align 32
@kswapd_run._entry_ptr = internal global ptr @kswapd_run._entry, section ".printk_index", align 4
@__initcall__kmod_vmscan__477_4668_kswapd_init6 = internal global ptr @kswapd_init, section ".initcall6.init", align 4
@__kstrtab_check_move_unevictable_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_check_move_unevictable_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_check_move_unevictable_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @check_move_unevictable_pages to i32), ptr @__kstrtab_check_move_unevictable_pages, ptr @__kstrtabns_check_move_unevictable_pages }, section "___ksymtab_gpl+check_move_unevictable_pages", align 4
@.str.29 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"nid\00", [28 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"nid=%d\0A\00", [24 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"zid\00", [28 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"order\00", [26 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"nid=%d order=%d\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"gfp_t\00", [26 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"gfp_flags\00", [22 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"nid=%d order=%d gfp_flags=%s\0A\00", [34 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_vmscan_wakeup_kswapd.__flags = internal constant { [38 x %struct.trace_print_flags], [80 x i8] } { [38 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 18621642, ptr @.str.38 }, %struct.trace_print_flags { i32 18620618, ptr @.str.39 }, %struct.trace_print_flags { i32 17829066, ptr @.str.40 }, %struct.trace_print_flags { i32 1051842, ptr @.str.41 }, %struct.trace_print_flags { i32 1051840, ptr @.str.42 }, %struct.trace_print_flags { i32 4197568, ptr @.str.43 }, %struct.trace_print_flags { i32 3264, ptr @.str.44 }, %struct.trace_print_flags { i32 3136, ptr @.str.45 }, %struct.trace_print_flags { i32 2592, ptr @.str.46 }, %struct.trace_print_flags { i32 3072, ptr @.str.47 }, %struct.trace_print_flags { i32 2048, ptr @.str.48 }, %struct.trace_print_flags { i32 1, ptr @.str.49 }, %struct.trace_print_flags { i32 2, ptr @.str.50 }, %struct.trace_print_flags { i32 4, ptr @.str.51 }, %struct.trace_print_flags { i32 32, ptr @.str.52 }, %struct.trace_print_flags { i32 512, ptr @.str.53 }, %struct.trace_print_flags { i32 64, ptr @.str.54 }, %struct.trace_print_flags { i32 128, ptr @.str.55 }, %struct.trace_print_flags { i32 8192, ptr @.str.56 }, %struct.trace_print_flags { i32 16384, ptr @.str.57 }, %struct.trace_print_flags { i32 32768, ptr @.str.58 }, %struct.trace_print_flags { i32 65536, ptr @.str.59 }, %struct.trace_print_flags { i32 262144, ptr @.str.60 }, %struct.trace_print_flags { i32 256, ptr @.str.61 }, %struct.trace_print_flags { i32 524288, ptr @.str.62 }, %struct.trace_print_flags { i32 131072, ptr @.str.63 }, %struct.trace_print_flags { i32 1048576, ptr @.str.64 }, %struct.trace_print_flags { i32 2097152, ptr @.str.65 }, %struct.trace_print_flags { i32 16, ptr @.str.66 }, %struct.trace_print_flags { i32 8, ptr @.str.67 }, %struct.trace_print_flags { i32 4194304, ptr @.str.68 }, %struct.trace_print_flags { i32 4096, ptr @.str.69 }, %struct.trace_print_flags { i32 3072, ptr @.str.70 }, %struct.trace_print_flags { i32 1024, ptr @.str.71 }, %struct.trace_print_flags { i32 2048, ptr @.str.72 }, %struct.trace_print_flags { i32 8388608, ptr @.str.73 }, %struct.trace_print_flags { i32 16777216, ptr @.str.74 }, %struct.trace_print_flags { i32 -1, ptr null }], [80 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"GFP_TRANSHUGE\00", [18 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GFP_TRANSHUGE_LIGHT\00", [44 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFP_HIGHUSER_MOVABLE\00", [43 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"GFP_HIGHUSER\00", [19 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"GFP_USER\00", [23 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFP_KERNEL_ACCOUNT\00", [45 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GFP_KERNEL\00", [21 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"GFP_NOFS\00", [23 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GFP_ATOMIC\00", [21 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"GFP_NOIO\00", [23 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GFP_NOWAIT\00", [21 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"GFP_DMA\00", [24 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_HIGHMEM\00", [18 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"GFP_DMA32\00", [22 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__GFP_HIGH\00", [21 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__GFP_ATOMIC\00", [19 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"__GFP_IO\00", [23 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"__GFP_FS\00", [23 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__GFP_NOWARN\00", [19 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__GFP_RETRY_MAYFAIL\00", [44 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__GFP_NOFAIL\00", [19 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_NORETRY\00", [18 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__GFP_COMP\00", [21 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__GFP_ZERO\00", [21 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__GFP_NOMEMALLOC\00", [47 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_MEMALLOC\00", [17 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_HARDWALL\00", [17 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_THISNODE\00", [17 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__GFP_RECLAIMABLE\00", [46 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_MOVABLE\00", [18 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_ACCOUNT\00", [18 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"__GFP_WRITE\00", [20 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__GFP_RECLAIM\00", [18 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__GFP_DIRECT_RECLAIM\00", [43 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__GFP_KSWAPD_RECLAIM\00", [43 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__GFP_ZEROTAGS\00", [17 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"__GFP_SKIP_KASAN_POISON\00", [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"|\00", [30 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"order=%d gfp_flags=%s\0A\00", [41 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_vmscan_direct_reclaim_begin_template.__flags = internal constant { [38 x %struct.trace_print_flags], [80 x i8] } { [38 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 18621642, ptr @.str.38 }, %struct.trace_print_flags { i32 18620618, ptr @.str.39 }, %struct.trace_print_flags { i32 17829066, ptr @.str.40 }, %struct.trace_print_flags { i32 1051842, ptr @.str.41 }, %struct.trace_print_flags { i32 1051840, ptr @.str.42 }, %struct.trace_print_flags { i32 4197568, ptr @.str.43 }, %struct.trace_print_flags { i32 3264, ptr @.str.44 }, %struct.trace_print_flags { i32 3136, ptr @.str.45 }, %struct.trace_print_flags { i32 2592, ptr @.str.46 }, %struct.trace_print_flags { i32 3072, ptr @.str.47 }, %struct.trace_print_flags { i32 2048, ptr @.str.48 }, %struct.trace_print_flags { i32 1, ptr @.str.49 }, %struct.trace_print_flags { i32 2, ptr @.str.50 }, %struct.trace_print_flags { i32 4, ptr @.str.51 }, %struct.trace_print_flags { i32 32, ptr @.str.52 }, %struct.trace_print_flags { i32 512, ptr @.str.53 }, %struct.trace_print_flags { i32 64, ptr @.str.54 }, %struct.trace_print_flags { i32 128, ptr @.str.55 }, %struct.trace_print_flags { i32 8192, ptr @.str.56 }, %struct.trace_print_flags { i32 16384, ptr @.str.57 }, %struct.trace_print_flags { i32 32768, ptr @.str.58 }, %struct.trace_print_flags { i32 65536, ptr @.str.59 }, %struct.trace_print_flags { i32 262144, ptr @.str.60 }, %struct.trace_print_flags { i32 256, ptr @.str.61 }, %struct.trace_print_flags { i32 524288, ptr @.str.62 }, %struct.trace_print_flags { i32 131072, ptr @.str.63 }, %struct.trace_print_flags { i32 1048576, ptr @.str.64 }, %struct.trace_print_flags { i32 2097152, ptr @.str.65 }, %struct.trace_print_flags { i32 16, ptr @.str.66 }, %struct.trace_print_flags { i32 8, ptr @.str.67 }, %struct.trace_print_flags { i32 4194304, ptr @.str.68 }, %struct.trace_print_flags { i32 4096, ptr @.str.69 }, %struct.trace_print_flags { i32 3072, ptr @.str.70 }, %struct.trace_print_flags { i32 1024, ptr @.str.71 }, %struct.trace_print_flags { i32 2048, ptr @.str.72 }, %struct.trace_print_flags { i32 8388608, ptr @.str.73 }, %struct.trace_print_flags { i32 16777216, ptr @.str.74 }, %struct.trace_print_flags { i32 -1, ptr null }], [80 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_reclaimed\00", [19 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"nr_reclaimed=%lu\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"struct shrinker *\00", [46 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"shr\00", [28 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"void *\00", [25 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"shrink\00", [25 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"long\00", [27 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"nr_objects_to_shrink\00", [43 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"cache_items\00", [20 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"unsigned long long\00", [45 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"delta\00", [26 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"total_scan\00", [21 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"priority\00", [23 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [106 x i8], [54 x i8] } { [106 x i8] c"%pS %p: nid: %d objects to shrink %ld gfp_flags %s cache items %ld delta %lld total_scan %ld priority %d\0A\00", [54 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_shrink_slab_start.__flags = internal constant { [38 x %struct.trace_print_flags], [80 x i8] } { [38 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 18621642, ptr @.str.38 }, %struct.trace_print_flags { i32 18620618, ptr @.str.39 }, %struct.trace_print_flags { i32 17829066, ptr @.str.40 }, %struct.trace_print_flags { i32 1051842, ptr @.str.41 }, %struct.trace_print_flags { i32 1051840, ptr @.str.42 }, %struct.trace_print_flags { i32 4197568, ptr @.str.43 }, %struct.trace_print_flags { i32 3264, ptr @.str.44 }, %struct.trace_print_flags { i32 3136, ptr @.str.45 }, %struct.trace_print_flags { i32 2592, ptr @.str.46 }, %struct.trace_print_flags { i32 3072, ptr @.str.47 }, %struct.trace_print_flags { i32 2048, ptr @.str.48 }, %struct.trace_print_flags { i32 1, ptr @.str.49 }, %struct.trace_print_flags { i32 2, ptr @.str.50 }, %struct.trace_print_flags { i32 4, ptr @.str.51 }, %struct.trace_print_flags { i32 32, ptr @.str.52 }, %struct.trace_print_flags { i32 512, ptr @.str.53 }, %struct.trace_print_flags { i32 64, ptr @.str.54 }, %struct.trace_print_flags { i32 128, ptr @.str.55 }, %struct.trace_print_flags { i32 8192, ptr @.str.56 }, %struct.trace_print_flags { i32 16384, ptr @.str.57 }, %struct.trace_print_flags { i32 32768, ptr @.str.58 }, %struct.trace_print_flags { i32 65536, ptr @.str.59 }, %struct.trace_print_flags { i32 262144, ptr @.str.60 }, %struct.trace_print_flags { i32 256, ptr @.str.61 }, %struct.trace_print_flags { i32 524288, ptr @.str.62 }, %struct.trace_print_flags { i32 131072, ptr @.str.63 }, %struct.trace_print_flags { i32 1048576, ptr @.str.64 }, %struct.trace_print_flags { i32 2097152, ptr @.str.65 }, %struct.trace_print_flags { i32 16, ptr @.str.66 }, %struct.trace_print_flags { i32 8, ptr @.str.67 }, %struct.trace_print_flags { i32 4194304, ptr @.str.68 }, %struct.trace_print_flags { i32 4096, ptr @.str.69 }, %struct.trace_print_flags { i32 3072, ptr @.str.70 }, %struct.trace_print_flags { i32 1024, ptr @.str.71 }, %struct.trace_print_flags { i32 2048, ptr @.str.72 }, %struct.trace_print_flags { i32 8388608, ptr @.str.73 }, %struct.trace_print_flags { i32 16777216, ptr @.str.74 }, %struct.trace_print_flags { i32 -1, ptr null }], [80 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"unused_scan\00", [20 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"new_scan\00", [23 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"retval\00", [25 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [101 x i8], [59 x i8] } { [101 x i8] c"%pS %p: nid: %d unused scan count %ld new scan count %ld total_scan %ld last shrinker return val %d\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"highest_zoneidx\00", [16 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_requested\00", [19 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nr_scanned\00", [21 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nr_skipped\00", [21 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nr_taken\00", [23 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"isolate_mode_t\00", [17 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"isolate_mode\00", [19 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"lru\00", [28 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [106 x i8], [54 x i8] } { [106 x i8] c"isolate_mode=%d classzone=%d order=%d nr_requested=%lu nr_scanned=%lu nr_skipped=%lu nr_taken=%lu lru=%s\0A\00", [54 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_vmscan_lru_isolate.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.106 }, %struct.trace_print_flags { i32 1, ptr @.str.107 }, %struct.trace_print_flags { i32 2, ptr @.str.108 }, %struct.trace_print_flags { i32 3, ptr @.str.109 }, %struct.trace_print_flags { i32 4, ptr @.str.110 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"inactive_anon\00", [18 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"active_anon\00", [20 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"inactive_file\00", [18 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"active_file\00", [20 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"unevictable\00", [20 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@.str.111 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pfn\00", [28 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"reclaim_flags\00", [18 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"page=%p pfn=0x%lx flags=%s\0A\00", [36 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_vmscan_writepage.__flags = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.114 }, %struct.trace_print_flags { i32 2, ptr @.str.115 }, %struct.trace_print_flags { i32 16, ptr @.str.116 }, %struct.trace_print_flags { i32 4, ptr @.str.117 }, %struct.trace_print_flags { i32 8, ptr @.str.118 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"RECLAIM_WB_ANON\00", [16 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"RECLAIM_WB_FILE\00", [16 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"RECLAIM_WB_MIXED\00", [47 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"RECLAIM_WB_SYNC\00", [16 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"RECLAIM_WB_ASYNC\00", [47 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"RECLAIM_WB_NONE\00", [16 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nr_dirty\00", [23 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_writeback\00", [19 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_congested\00", [19 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_immediate\00", [19 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_activate0\00", [19 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"nr_activate1\00", [19 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"nr_ref_keep\00", [20 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"nr_unmap_fail\00", [18 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [199 x i8], [57 x i8] } { [199 x i8] c"nid=%d nr_scanned=%ld nr_reclaimed=%ld nr_dirty=%ld nr_writeback=%ld nr_congested=%ld nr_immediate=%ld nr_activate_anon=%d nr_activate_file=%d nr_ref_keep=%ld nr_unmap_fail=%ld priority=%d flags=%s\0A\00", [57 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_vmscan_lru_shrink_inactive.__flags = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.114 }, %struct.trace_print_flags { i32 2, ptr @.str.115 }, %struct.trace_print_flags { i32 16, ptr @.str.116 }, %struct.trace_print_flags { i32 4, ptr @.str.117 }, %struct.trace_print_flags { i32 8, ptr @.str.118 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nr_active\00", [22 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"nr_deactivated\00", [17 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"nr_referenced\00", [18 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [93 x i8], [35 x i8] } { [93 x i8] c"nid=%d nr_taken=%ld nr_active=%ld nr_deactivated=%ld nr_referenced=%ld priority=%d flags=%s\0A\00", [35 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_vmscan_lru_shrink_active.__flags = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.114 }, %struct.trace_print_flags { i32 2, ptr @.str.115 }, %struct.trace_print_flags { i32 16, ptr @.str.116 }, %struct.trace_print_flags { i32 4, ptr @.str.117 }, %struct.trace_print_flags { i32 8, ptr @.str.118 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_vmscan_node_reclaim_begin.__flags = internal constant { [38 x %struct.trace_print_flags], [80 x i8] } { [38 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 18621642, ptr @.str.38 }, %struct.trace_print_flags { i32 18620618, ptr @.str.39 }, %struct.trace_print_flags { i32 17829066, ptr @.str.40 }, %struct.trace_print_flags { i32 1051842, ptr @.str.41 }, %struct.trace_print_flags { i32 1051840, ptr @.str.42 }, %struct.trace_print_flags { i32 4197568, ptr @.str.43 }, %struct.trace_print_flags { i32 3264, ptr @.str.44 }, %struct.trace_print_flags { i32 3136, ptr @.str.45 }, %struct.trace_print_flags { i32 2592, ptr @.str.46 }, %struct.trace_print_flags { i32 3072, ptr @.str.47 }, %struct.trace_print_flags { i32 2048, ptr @.str.48 }, %struct.trace_print_flags { i32 1, ptr @.str.49 }, %struct.trace_print_flags { i32 2, ptr @.str.50 }, %struct.trace_print_flags { i32 4, ptr @.str.51 }, %struct.trace_print_flags { i32 32, ptr @.str.52 }, %struct.trace_print_flags { i32 512, ptr @.str.53 }, %struct.trace_print_flags { i32 64, ptr @.str.54 }, %struct.trace_print_flags { i32 128, ptr @.str.55 }, %struct.trace_print_flags { i32 8192, ptr @.str.56 }, %struct.trace_print_flags { i32 16384, ptr @.str.57 }, %struct.trace_print_flags { i32 32768, ptr @.str.58 }, %struct.trace_print_flags { i32 65536, ptr @.str.59 }, %struct.trace_print_flags { i32 262144, ptr @.str.60 }, %struct.trace_print_flags { i32 256, ptr @.str.61 }, %struct.trace_print_flags { i32 524288, ptr @.str.62 }, %struct.trace_print_flags { i32 131072, ptr @.str.63 }, %struct.trace_print_flags { i32 1048576, ptr @.str.64 }, %struct.trace_print_flags { i32 2097152, ptr @.str.65 }, %struct.trace_print_flags { i32 16, ptr @.str.66 }, %struct.trace_print_flags { i32 8, ptr @.str.67 }, %struct.trace_print_flags { i32 4194304, ptr @.str.68 }, %struct.trace_print_flags { i32 4096, ptr @.str.69 }, %struct.trace_print_flags { i32 3072, ptr @.str.70 }, %struct.trace_print_flags { i32 1024, ptr @.str.71 }, %struct.trace_print_flags { i32 2048, ptr @.str.72 }, %struct.trace_print_flags { i32 8388608, ptr @.str.73 }, %struct.trace_print_flags { i32 16777216, ptr @.str.74 }, %struct.trace_print_flags { i32 -1, ptr null }], [80 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"usec_timeout\00", [19 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"usec_delayed\00", [19 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"reason\00", [25 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"nid=%d usec_timeout=%d usect_delayed=%d reason=%s\0A\00", [45 x i8] zeroinitializer }, align 32
@trace_raw_output_mm_vmscan_throttled.__flags = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.138 }, %struct.trace_print_flags { i32 2, ptr @.str.139 }, %struct.trace_print_flags { i32 4, ptr @.str.140 }, %struct.trace_print_flags { i32 8, ptr @.str.141 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"VMSCAN_THROTTLE_WRITEBACK\00", [38 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"VMSCAN_THROTTLE_ISOLATED\00", [39 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"VMSCAN_THROTTLE_NOPROGRESS\00", [37 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"VMSCAN_THROTTLE_CONGESTED\00", [38 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"VMSCAN_THROTTLE_NONE\00", [43 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str.143 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"shrinker_rwsem.wait_lock\00", [39 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"shrinker_rwsem\00", [17 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.145 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.147 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@shrinker_info_protected.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.148 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"suspicious rcu_dereference_protected() usage\00", [51 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@nr_swap_pages = external dso_local global %struct.atomic_t, align 4
@numa_demotion_enabled = external dso_local local_unnamed_addr global i8, align 1
@shrinker_idr = internal global { %struct.idr, [36 x i8] } { %struct.idr { %struct.xarray { %struct.spinlock { %union.anon.3 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.149, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108868, ptr null }, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@memory_cgrp_subsys_enabled_key = external dso_local global %struct.static_key_true, align 4
@.str.149 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"shrinker_idr.xa_lock\00", [43 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@memcg_kmem_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.150 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"include/trace/events/vmscan.h\00", [34 x i8] zeroinitializer }, align 32
@trace_mm_shrink_slab_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.151 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@trace_mm_shrink_slab_end.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@vm_node_stat = external dso_local global [40 x %struct.atomic_t], align 4
@trace_mm_vmscan_throttled.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.153 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(page))\00", [61 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(((typeof(page))_compound_head(page))))\00", [61 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_freeze = external dso_local global %struct.tracepoint, align 4
@.str.157 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"VM_BUG_ON_PAGE(page_count(page) != 0)\00", [58 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_unfreeze = external dso_local global %struct.tracepoint, align 4
@.str.158 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@.str.159 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"VM_BUG_ON_PAGE(PageActive(page))\00", [63 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"VM_BUG_ON_PAGE(PageLRU(page) || PageUnevictable(page))\00", [41 x i8] zeroinitializer }, align 32
@memory_cgrp_subsys_on_dfl_key = external dso_local global %struct.static_key_true, align 4
@.str.161 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"VM_BUG_ON_PAGE(1 && PageTail(page))\00", [60 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"VM_BUG_ON_PAGE(!hpage_pincount_available(page))\00", [48 x i8] zeroinitializer }, align 32
@pageout._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.164, ptr @.str.165, ptr @.str.21, i32 1196, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016vmscan: %s: orphaned page\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"pageout\00", [24 x i8] zeroinitializer }, align 32
@pageout._entry_ptr = internal global ptr @pageout._entry, section ".printk_index", align 4
@.str.166 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/pagemap.h\00", [40 x i8] zeroinitializer }, align 32
@trace_mm_vmscan_writepage.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@vm_event_states = external dso_local global %struct.vm_event_state, section ".data..percpu", align 4
@.str.167 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"VM_BUG_ON_PAGE(PageTail(&folio->page))\00", [57 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"VM_BUG_ON_FOLIO(folio->memcg_data & MEMCG_DATA_OBJCGS)\00", [41 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"VM_BUG_ON_FOLIO(folio_test_slab(folio))\00", [56 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"VM_BUG_ON_PAGE(page[1].compound_dtor >= NR_COMPOUND_DTORS)\00", [37 x i8] zeroinitializer }, align 32
@compound_page_dtors = external dso_local local_unnamed_addr constant [2 x ptr], align 4
@.str.174 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"VM_BUG_ON_FOLIO(((unsigned int) folio_ref_count(folio) + 127u <= 127u))\00", [56 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@.str.175 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"VM_BUG_ON_FOLIO(folio_test_active(folio) && folio_test_unevictable(folio))\00", [53 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(p))\00", [32 x i8] zeroinitializer }, align 32
@contig_page_data = external dso_local global %struct.pglist_data, align 128
@set_task_reclaim_state.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@set_task_reclaim_state.__already_done.177 = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_mm_vmscan_direct_reclaim_begin.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@delayacct_key = external dso_local global %struct.static_key_false, align 4
@buffer_heads_over_limit = external dso_local local_unnamed_addr global i32, align 4
@vm_zone_stat = external dso_local global [11 x %struct.atomic_t], align 4
@cgrp_dfl_root = external dso_local local_unnamed_addr global %struct.cgroup_root, align 8
@trace_mm_vmscan_direct_reclaim_end.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_vmscan_memcg_softlimit_reclaim_begin.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_page_ref_mod_unless = external dso_local global %struct.tracepoint, align 4
@trace_mm_vmscan_lru_isolate.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.178 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"VM_BUG_ON_PAGE(PageLRU(page))\00", [34 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [184 x i8], [40 x i8] } { [184 x i8] c"VM_BUG_ON_PAGE(!folio_matches_lruvec((_Generic((page), const struct page *: (const struct folio *)_compound_head(page), struct page *: (struct folio *)_compound_head(page))), lruvec))\00", [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"VM_BUG_ON_FOLIO(!folio_test_lru(folio))\00", [56 x i8] zeroinitializer }, align 32
@trace_mm_vmscan_lru_shrink_inactive.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@total_swap_pages = external dso_local local_unnamed_addr global i32, align 4
@trace_mm_vmscan_lru_shrink_active.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_vmscan_memcg_softlimit_reclaim_end.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_vmscan_memcg_reclaim_begin.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_mm_vmscan_memcg_reclaim_end.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@cpusets_enabled_key = external dso_local global %struct.static_key_false, align 4
@trace_mm_vmscan_wakeup_kswapd.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@system_freezing_cnt = external dso_local global %struct.atomic_t, align 4
@trace_mm_vmscan_kswapd_sleep.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.181 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/freezer.h\00", [40 x i8] zeroinitializer }, align 32
@trace_mm_vmscan_kswapd_wake.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967258]
@__sancov_gen_cov_switch_values.182 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.183 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.184 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 8]
@__sancov_gen_cov_switch_values.185 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@___asan_gen_.186 = private unnamed_addr constant [31 x i8] c"str__vmscan__trace_system_name\00", align 1
@___asan_gen_.187 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.187, i32 36, i32 1 }
@___asan_gen_.215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.250, i32 274, i32 1 }
@___asan_gen_.224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.250, i32 275, i32 1 }
@___asan_gen_.236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.250, i32 277, i32 1 }
@___asan_gen_.250 = private unnamed_addr constant [34 x i8] c"../include/trace/events/mmflags.h\00", align 1
@___asan_gen_.251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.250, i32 278, i32 1 }
@___asan_gen_.252 = private unnamed_addr constant [42 x i8] c"trace_event_fields_mm_vmscan_kswapd_sleep\00", align 1
@___asan_gen_.255 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_mm_vmscan_kswapd_sleep\00", align 1
@___asan_gen_.258 = private unnamed_addr constant [33 x i8] c"print_fmt_mm_vmscan_kswapd_sleep\00", align 1
@___asan_gen_.261 = private unnamed_addr constant [29 x i8] c"event_mm_vmscan_kswapd_sleep\00", align 1
@___asan_gen_.264 = private unnamed_addr constant [41 x i8] c"trace_event_fields_mm_vmscan_kswapd_wake\00", align 1
@___asan_gen_.267 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_mm_vmscan_kswapd_wake\00", align 1
@___asan_gen_.270 = private unnamed_addr constant [32 x i8] c"print_fmt_mm_vmscan_kswapd_wake\00", align 1
@___asan_gen_.273 = private unnamed_addr constant [28 x i8] c"event_mm_vmscan_kswapd_wake\00", align 1
@___asan_gen_.276 = private unnamed_addr constant [43 x i8] c"trace_event_fields_mm_vmscan_wakeup_kswapd\00", align 1
@___asan_gen_.279 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_mm_vmscan_wakeup_kswapd\00", align 1
@___asan_gen_.282 = private unnamed_addr constant [34 x i8] c"print_fmt_mm_vmscan_wakeup_kswapd\00", align 1
@___asan_gen_.285 = private unnamed_addr constant [30 x i8] c"event_mm_vmscan_wakeup_kswapd\00", align 1
@___asan_gen_.288 = private unnamed_addr constant [59 x i8] c"trace_event_fields_mm_vmscan_direct_reclaim_begin_template\00", align 1
@___asan_gen_.291 = private unnamed_addr constant [63 x i8] c"trace_event_type_funcs_mm_vmscan_direct_reclaim_begin_template\00", align 1
@___asan_gen_.294 = private unnamed_addr constant [50 x i8] c"print_fmt_mm_vmscan_direct_reclaim_begin_template\00", align 1
@___asan_gen_.297 = private unnamed_addr constant [37 x i8] c"event_mm_vmscan_direct_reclaim_begin\00", align 1
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 136, i32 1 }
@___asan_gen_.300 = private unnamed_addr constant [36 x i8] c"event_mm_vmscan_memcg_reclaim_begin\00", align 1
@___asan_gen_.302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 144, i32 1 }
@___asan_gen_.303 = private unnamed_addr constant [46 x i8] c"event_mm_vmscan_memcg_softlimit_reclaim_begin\00", align 1
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 151, i32 1 }
@___asan_gen_.306 = private unnamed_addr constant [57 x i8] c"trace_event_fields_mm_vmscan_direct_reclaim_end_template\00", align 1
@___asan_gen_.309 = private unnamed_addr constant [61 x i8] c"trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template\00", align 1
@___asan_gen_.312 = private unnamed_addr constant [48 x i8] c"print_fmt_mm_vmscan_direct_reclaim_end_template\00", align 1
@___asan_gen_.315 = private unnamed_addr constant [35 x i8] c"event_mm_vmscan_direct_reclaim_end\00", align 1
@___asan_gen_.317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 176, i32 1 }
@___asan_gen_.318 = private unnamed_addr constant [34 x i8] c"event_mm_vmscan_memcg_reclaim_end\00", align 1
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 184, i32 1 }
@___asan_gen_.321 = private unnamed_addr constant [44 x i8] c"event_mm_vmscan_memcg_softlimit_reclaim_end\00", align 1
@___asan_gen_.323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 191, i32 1 }
@___asan_gen_.324 = private unnamed_addr constant [40 x i8] c"trace_event_fields_mm_shrink_slab_start\00", align 1
@___asan_gen_.327 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_mm_shrink_slab_start\00", align 1
@___asan_gen_.330 = private unnamed_addr constant [31 x i8] c"print_fmt_mm_shrink_slab_start\00", align 1
@___asan_gen_.333 = private unnamed_addr constant [27 x i8] c"event_mm_shrink_slab_start\00", align 1
@___asan_gen_.336 = private unnamed_addr constant [38 x i8] c"trace_event_fields_mm_shrink_slab_end\00", align 1
@___asan_gen_.339 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_mm_shrink_slab_end\00", align 1
@___asan_gen_.342 = private unnamed_addr constant [29 x i8] c"print_fmt_mm_shrink_slab_end\00", align 1
@___asan_gen_.345 = private unnamed_addr constant [25 x i8] c"event_mm_shrink_slab_end\00", align 1
@___asan_gen_.348 = private unnamed_addr constant [41 x i8] c"trace_event_fields_mm_vmscan_lru_isolate\00", align 1
@___asan_gen_.351 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_mm_vmscan_lru_isolate\00", align 1
@___asan_gen_.354 = private unnamed_addr constant [32 x i8] c"print_fmt_mm_vmscan_lru_isolate\00", align 1
@___asan_gen_.357 = private unnamed_addr constant [28 x i8] c"event_mm_vmscan_lru_isolate\00", align 1
@___asan_gen_.360 = private unnamed_addr constant [39 x i8] c"trace_event_fields_mm_vmscan_writepage\00", align 1
@___asan_gen_.363 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_mm_vmscan_writepage\00", align 1
@___asan_gen_.366 = private unnamed_addr constant [30 x i8] c"print_fmt_mm_vmscan_writepage\00", align 1
@___asan_gen_.369 = private unnamed_addr constant [26 x i8] c"event_mm_vmscan_writepage\00", align 1
@___asan_gen_.372 = private unnamed_addr constant [49 x i8] c"trace_event_fields_mm_vmscan_lru_shrink_inactive\00", align 1
@___asan_gen_.375 = private unnamed_addr constant [53 x i8] c"trace_event_type_funcs_mm_vmscan_lru_shrink_inactive\00", align 1
@___asan_gen_.378 = private unnamed_addr constant [40 x i8] c"print_fmt_mm_vmscan_lru_shrink_inactive\00", align 1
@___asan_gen_.381 = private unnamed_addr constant [36 x i8] c"event_mm_vmscan_lru_shrink_inactive\00", align 1
@___asan_gen_.384 = private unnamed_addr constant [47 x i8] c"trace_event_fields_mm_vmscan_lru_shrink_active\00", align 1
@___asan_gen_.387 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_mm_vmscan_lru_shrink_active\00", align 1
@___asan_gen_.390 = private unnamed_addr constant [38 x i8] c"print_fmt_mm_vmscan_lru_shrink_active\00", align 1
@___asan_gen_.393 = private unnamed_addr constant [34 x i8] c"event_mm_vmscan_lru_shrink_active\00", align 1
@___asan_gen_.396 = private unnamed_addr constant [48 x i8] c"trace_event_fields_mm_vmscan_node_reclaim_begin\00", align 1
@___asan_gen_.399 = private unnamed_addr constant [52 x i8] c"trace_event_type_funcs_mm_vmscan_node_reclaim_begin\00", align 1
@___asan_gen_.402 = private unnamed_addr constant [39 x i8] c"print_fmt_mm_vmscan_node_reclaim_begin\00", align 1
@___asan_gen_.405 = private unnamed_addr constant [35 x i8] c"event_mm_vmscan_node_reclaim_begin\00", align 1
@___asan_gen_.408 = private unnamed_addr constant [33 x i8] c"event_mm_vmscan_node_reclaim_end\00", align 1
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 464, i32 1 }
@___asan_gen_.411 = private unnamed_addr constant [39 x i8] c"trace_event_fields_mm_vmscan_throttled\00", align 1
@___asan_gen_.414 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_mm_vmscan_throttled\00", align 1
@___asan_gen_.417 = private unnamed_addr constant [30 x i8] c"print_fmt_mm_vmscan_throttled\00", align 1
@___asan_gen_.420 = private unnamed_addr constant [26 x i8] c"event_mm_vmscan_throttled\00", align 1
@___asan_gen_.423 = private unnamed_addr constant [14 x i8] c"vm_swappiness\00", align 1
@___asan_gen_.425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 177, i32 5 }
@___asan_gen_.426 = private unnamed_addr constant [15 x i8] c"shrinker_rwsem\00", align 1
@___asan_gen_.429 = private unnamed_addr constant [16 x i8] c"shrinker_nr_max\00", align 1
@___asan_gen_.431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 195, i32 12 }
@___asan_gen_.437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 342, i32 10 }
@___asan_gen_.438 = private unnamed_addr constant [14 x i8] c"shrinker_list\00", align 1
@___asan_gen_.440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 191, i32 8 }
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 2244, i32 2 }
@___asan_gen_.444 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 2245, i32 2 }
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 4635, i32 18 }
@___asan_gen_.464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 4639, i32 3 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 49, i32 1 }
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 66, i32 1 }
@___asan_gen_.611 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 89, i32 1 }
@___asan_gen_.617 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 115, i32 1 }
@___asan_gen_.626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 159, i32 1 }
@___asan_gen_.677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 244, i32 1 }
@___asan_gen_.705 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.722 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 281, i32 1 }
@___asan_gen_.752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 330, i32 1 }
@___asan_gen_.785 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 353, i32 1 }
@___asan_gen_.800 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 404, i32 1 }
@___asan_gen_.803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 440, i32 1 }
@___asan_gen_.816 = private unnamed_addr constant [8 x i8] c"__flags\00", align 1
@___asan_gen_.833 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 471, i32 1 }
@___asan_gen_.839 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 192, i32 8 }
@___asan_gen_.845 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.847, i32 695, i32 2 }
@___asan_gen_.847 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.847, i32 723, i32 2 }
@___asan_gen_.851 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 211, i32 9 }
@___asan_gen_.852 = private unnamed_addr constant [13 x i8] c"shrinker_idr\00", align 1
@___asan_gen_.857 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 350, i32 8 }
@___asan_gen_.859 = private unnamed_addr constant [33 x i8] c"../include/trace/events/vmscan.h\00", align 1
@___asan_gen_.860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.859, i32 199, i32 1 }
@___asan_gen_.862 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.863 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.862, i32 108, i32 2 }
@___asan_gen_.866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 698, i32 1 }
@___asan_gen_.869 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 414, i32 1 }
@___asan_gen_.872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 260, i32 2 }
@___asan_gen_.874 = private unnamed_addr constant [28 x i8] c"../include/linux/page_ref.h\00", align 1
@___asan_gen_.875 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.874, i32 332, i32 2 }
@___asan_gen_.878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.922, i32 717, i32 2 }
@___asan_gen_.881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 1546, i32 3 }
@___asan_gen_.884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 1941, i32 3 }
@___asan_gen_.886 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.887 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.886, i32 466, i32 1 }
@___asan_gen_.890 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.922, i32 910, i32 2 }
@___asan_gen_.891 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.899 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 1196, i32 5 }
@___asan_gen_.901 = private unnamed_addr constant [27 x i8] c"../include/linux/pagemap.h\00", align 1
@___asan_gen_.902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.901, i32 788, i32 2 }
@___asan_gen_.905 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.910, i32 537, i32 2 }
@___asan_gen_.908 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.910, i32 538, i32 2 }
@___asan_gen_.910 = private unnamed_addr constant [30 x i8] c"../include/linux/memcontrol.h\00", align 1
@___asan_gen_.911 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.910, i32 417, i32 2 }
@___asan_gen_.914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.922, i32 888, i32 2 }
@___asan_gen_.917 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.922, i32 1160, i32 2 }
@___asan_gen_.920 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.931, i32 83, i32 2 }
@___asan_gen_.922 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.922, i32 1368, i32 10 }
@___asan_gen_.926 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 2319, i32 3 }
@___asan_gen_.928 = private constant [15 x i8] c"../mm/vmscan.c\00", align 1
@___asan_gen_.929 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.928, i32 2358, i32 3 }
@___asan_gen_.931 = private unnamed_addr constant [29 x i8] c"../include/linux/mm_inline.h\00", align 1
@___asan_gen_.932 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.931, i32 55, i32 2 }
@___asan_gen_.933 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.934 = private unnamed_addr constant [27 x i8] c"../include/linux/freezer.h\00", align 1
@___asan_gen_.935 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 57, i32 2 }
@llvm.compiler.used = appending global [384 x ptr] [ptr @TRACE_SYSTEM_COMPACT_COMPLETE, ptr @TRACE_SYSTEM_COMPACT_CONTENDED, ptr @TRACE_SYSTEM_COMPACT_CONTINUE, ptr @TRACE_SYSTEM_COMPACT_DEFERRED, ptr @TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, ptr @TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, ptr @TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, ptr @TRACE_SYSTEM_COMPACT_PRIO_ASYNC, ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, ptr @TRACE_SYSTEM_COMPACT_SKIPPED, ptr @TRACE_SYSTEM_COMPACT_SUCCESS, ptr @TRACE_SYSTEM_LRU_ACTIVE_ANON, ptr @TRACE_SYSTEM_LRU_ACTIVE_FILE, ptr @TRACE_SYSTEM_LRU_INACTIVE_ANON, ptr @TRACE_SYSTEM_LRU_INACTIVE_FILE, ptr @TRACE_SYSTEM_LRU_UNEVICTABLE, ptr @TRACE_SYSTEM_ZONE_DMA, ptr @TRACE_SYSTEM_ZONE_HIGHMEM, ptr @TRACE_SYSTEM_ZONE_MOVABLE, ptr @TRACE_SYSTEM_ZONE_NORMAL, ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, ptr @__TRACE_SYSTEM_ZONE_DMA, ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, ptr @__TRACE_SYSTEM_ZONE_MOVABLE, ptr @__TRACE_SYSTEM_ZONE_NORMAL, ptr @__bpf_trace_tp_map_mm_shrink_slab_end, ptr @__bpf_trace_tp_map_mm_shrink_slab_start, ptr @__bpf_trace_tp_map_mm_vmscan_direct_reclaim_begin, ptr @__bpf_trace_tp_map_mm_vmscan_direct_reclaim_end, ptr @__bpf_trace_tp_map_mm_vmscan_kswapd_sleep, ptr @__bpf_trace_tp_map_mm_vmscan_kswapd_wake, ptr @__bpf_trace_tp_map_mm_vmscan_lru_isolate, ptr @__bpf_trace_tp_map_mm_vmscan_lru_shrink_active, ptr @__bpf_trace_tp_map_mm_vmscan_lru_shrink_inactive, ptr @__bpf_trace_tp_map_mm_vmscan_memcg_reclaim_begin, ptr @__bpf_trace_tp_map_mm_vmscan_memcg_reclaim_end, ptr @__bpf_trace_tp_map_mm_vmscan_memcg_softlimit_reclaim_begin, ptr @__bpf_trace_tp_map_mm_vmscan_memcg_softlimit_reclaim_end, ptr @__bpf_trace_tp_map_mm_vmscan_node_reclaim_begin, ptr @__bpf_trace_tp_map_mm_vmscan_node_reclaim_end, ptr @__bpf_trace_tp_map_mm_vmscan_throttled, ptr @__bpf_trace_tp_map_mm_vmscan_wakeup_kswapd, ptr @__bpf_trace_tp_map_mm_vmscan_writepage, ptr @__event_mm_shrink_slab_end, ptr @__event_mm_shrink_slab_start, ptr @__event_mm_vmscan_direct_reclaim_begin, ptr @__event_mm_vmscan_direct_reclaim_end, ptr @__event_mm_vmscan_kswapd_sleep, ptr @__event_mm_vmscan_kswapd_wake, ptr @__event_mm_vmscan_lru_isolate, ptr @__event_mm_vmscan_lru_shrink_active, ptr @__event_mm_vmscan_lru_shrink_inactive, ptr @__event_mm_vmscan_memcg_reclaim_begin, ptr @__event_mm_vmscan_memcg_reclaim_end, ptr @__event_mm_vmscan_memcg_softlimit_reclaim_begin, ptr @__event_mm_vmscan_memcg_softlimit_reclaim_end, ptr @__event_mm_vmscan_node_reclaim_begin, ptr @__event_mm_vmscan_node_reclaim_end, ptr @__event_mm_vmscan_throttled, ptr @__event_mm_vmscan_wakeup_kswapd, ptr @__event_mm_vmscan_writepage, ptr @__initcall__kmod_vmscan__477_4668_kswapd_init6, ptr @__ksymtab_check_move_unevictable_pages, ptr @__ksymtab_register_shrinker, ptr @__ksymtab_synchronize_shrinkers, ptr @__ksymtab_unregister_shrinker, ptr @__tracepoint_mm_shrink_slab_end, ptr @__tracepoint_mm_shrink_slab_start, ptr @__tracepoint_mm_vmscan_direct_reclaim_begin, ptr @__tracepoint_mm_vmscan_direct_reclaim_end, ptr @__tracepoint_mm_vmscan_kswapd_sleep, ptr @__tracepoint_mm_vmscan_kswapd_wake, ptr @__tracepoint_mm_vmscan_lru_isolate, ptr @__tracepoint_mm_vmscan_lru_shrink_active, ptr @__tracepoint_mm_vmscan_lru_shrink_inactive, ptr @__tracepoint_mm_vmscan_memcg_reclaim_begin, ptr @__tracepoint_mm_vmscan_memcg_reclaim_end, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end, ptr @__tracepoint_mm_vmscan_node_reclaim_begin, ptr @__tracepoint_mm_vmscan_node_reclaim_end, ptr @__tracepoint_mm_vmscan_throttled, ptr @__tracepoint_mm_vmscan_wakeup_kswapd, ptr @__tracepoint_mm_vmscan_writepage, ptr @__tracepoint_ptr_mm_shrink_slab_end, ptr @__tracepoint_ptr_mm_shrink_slab_start, ptr @__tracepoint_ptr_mm_vmscan_direct_reclaim_begin, ptr @__tracepoint_ptr_mm_vmscan_direct_reclaim_end, ptr @__tracepoint_ptr_mm_vmscan_kswapd_sleep, ptr @__tracepoint_ptr_mm_vmscan_kswapd_wake, ptr @__tracepoint_ptr_mm_vmscan_lru_isolate, ptr @__tracepoint_ptr_mm_vmscan_lru_shrink_active, ptr @__tracepoint_ptr_mm_vmscan_lru_shrink_inactive, ptr @__tracepoint_ptr_mm_vmscan_memcg_reclaim_begin, ptr @__tracepoint_ptr_mm_vmscan_memcg_reclaim_end, ptr @__tracepoint_ptr_mm_vmscan_memcg_softlimit_reclaim_begin, ptr @__tracepoint_ptr_mm_vmscan_memcg_softlimit_reclaim_end, ptr @__tracepoint_ptr_mm_vmscan_node_reclaim_begin, ptr @__tracepoint_ptr_mm_vmscan_node_reclaim_end, ptr @__tracepoint_ptr_mm_vmscan_throttled, ptr @__tracepoint_ptr_mm_vmscan_wakeup_kswapd, ptr @__tracepoint_ptr_mm_vmscan_writepage, ptr @event_class_mm_shrink_slab_end, ptr @event_class_mm_shrink_slab_start, ptr @event_class_mm_vmscan_direct_reclaim_begin_template, ptr @event_class_mm_vmscan_direct_reclaim_end_template, ptr @event_class_mm_vmscan_kswapd_sleep, ptr @event_class_mm_vmscan_kswapd_wake, ptr @event_class_mm_vmscan_lru_isolate, ptr @event_class_mm_vmscan_lru_shrink_active, ptr @event_class_mm_vmscan_lru_shrink_inactive, ptr @event_class_mm_vmscan_node_reclaim_begin, ptr @event_class_mm_vmscan_throttled, ptr @event_class_mm_vmscan_wakeup_kswapd, ptr @event_class_mm_vmscan_writepage, ptr @event_mm_shrink_slab_end, ptr @event_mm_shrink_slab_start, ptr @event_mm_vmscan_direct_reclaim_begin, ptr @event_mm_vmscan_direct_reclaim_end, ptr @event_mm_vmscan_kswapd_sleep, ptr @event_mm_vmscan_kswapd_wake, ptr @event_mm_vmscan_lru_isolate, ptr @event_mm_vmscan_lru_shrink_active, ptr @event_mm_vmscan_lru_shrink_inactive, ptr @event_mm_vmscan_memcg_reclaim_begin, ptr @event_mm_vmscan_memcg_reclaim_end, ptr @event_mm_vmscan_memcg_softlimit_reclaim_begin, ptr @event_mm_vmscan_memcg_softlimit_reclaim_end, ptr @event_mm_vmscan_node_reclaim_begin, ptr @event_mm_vmscan_node_reclaim_end, ptr @event_mm_vmscan_throttled, ptr @event_mm_vmscan_wakeup_kswapd, ptr @event_mm_vmscan_writepage, ptr @kswapd_run._entry, ptr @kswapd_run._entry_ptr, ptr @pageout._entry, ptr @pageout._entry_ptr, ptr @str__vmscan__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @trace_event_fields_mm_vmscan_kswapd_sleep, ptr @trace_event_type_funcs_mm_vmscan_kswapd_sleep, ptr @print_fmt_mm_vmscan_kswapd_sleep, ptr @trace_event_fields_mm_vmscan_kswapd_wake, ptr @trace_event_type_funcs_mm_vmscan_kswapd_wake, ptr @print_fmt_mm_vmscan_kswapd_wake, ptr @trace_event_fields_mm_vmscan_wakeup_kswapd, ptr @trace_event_type_funcs_mm_vmscan_wakeup_kswapd, ptr @print_fmt_mm_vmscan_wakeup_kswapd, ptr @trace_event_fields_mm_vmscan_direct_reclaim_begin_template, ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_begin_template, ptr @print_fmt_mm_vmscan_direct_reclaim_begin_template, ptr @trace_event_fields_mm_vmscan_direct_reclaim_end_template, ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template, ptr @print_fmt_mm_vmscan_direct_reclaim_end_template, ptr @trace_event_fields_mm_shrink_slab_start, ptr @trace_event_type_funcs_mm_shrink_slab_start, ptr @print_fmt_mm_shrink_slab_start, ptr @trace_event_fields_mm_shrink_slab_end, ptr @trace_event_type_funcs_mm_shrink_slab_end, ptr @print_fmt_mm_shrink_slab_end, ptr @trace_event_fields_mm_vmscan_lru_isolate, ptr @trace_event_type_funcs_mm_vmscan_lru_isolate, ptr @print_fmt_mm_vmscan_lru_isolate, ptr @trace_event_fields_mm_vmscan_writepage, ptr @trace_event_type_funcs_mm_vmscan_writepage, ptr @print_fmt_mm_vmscan_writepage, ptr @trace_event_fields_mm_vmscan_lru_shrink_inactive, ptr @trace_event_type_funcs_mm_vmscan_lru_shrink_inactive, ptr @print_fmt_mm_vmscan_lru_shrink_inactive, ptr @trace_event_fields_mm_vmscan_lru_shrink_active, ptr @trace_event_type_funcs_mm_vmscan_lru_shrink_active, ptr @print_fmt_mm_vmscan_lru_shrink_active, ptr @trace_event_fields_mm_vmscan_node_reclaim_begin, ptr @trace_event_type_funcs_mm_vmscan_node_reclaim_begin, ptr @print_fmt_mm_vmscan_node_reclaim_begin, ptr @trace_event_fields_mm_vmscan_throttled, ptr @trace_event_type_funcs_mm_vmscan_throttled, ptr @print_fmt_mm_vmscan_throttled, ptr @vm_swappiness, ptr @shrinker_rwsem, ptr @shrinker_nr_max, ptr @.str.21, ptr @.str.22, ptr @shrinker_list, ptr @.str.23, ptr @isolate_lru_page._rs, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @trace_raw_output_mm_vmscan_wakeup_kswapd.__flags, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @trace_raw_output_mm_vmscan_direct_reclaim_begin_template.__flags, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @trace_raw_output_mm_shrink_slab_start.__flags, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @trace_raw_output_mm_vmscan_lru_isolate.symbols, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @trace_raw_output_mm_vmscan_writepage.__flags, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @trace_raw_output_mm_vmscan_lru_shrink_inactive.__flags, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @trace_raw_output_mm_vmscan_lru_shrink_active.__flags, ptr @trace_raw_output_mm_vmscan_node_reclaim_begin.__flags, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @trace_raw_output_mm_vmscan_throttled.__flags, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @shrinker_idr, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181], section "llvm.metadata"
@0 = internal global [250 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__vmscan__trace_system_name to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_kswapd_sleep to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_kswapd_sleep to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_kswapd_sleep to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_kswapd_sleep to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_kswapd_wake to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_kswapd_wake to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_kswapd_wake to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_kswapd_wake to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_wakeup_kswapd to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_wakeup_kswapd to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_wakeup_kswapd to i32), i32 3030, i32 3776, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_wakeup_kswapd to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_direct_reclaim_begin_template to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_begin_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_direct_reclaim_begin_template to i32), i32 3013, i32 3776, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_direct_reclaim_begin to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_memcg_reclaim_begin to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_memcg_softlimit_reclaim_begin to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_direct_reclaim_end_template to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_direct_reclaim_end_template to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_direct_reclaim_end to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_memcg_reclaim_end to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_memcg_softlimit_reclaim_end to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_shrink_slab_start to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_shrink_slab_start to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_shrink_slab_start to i32), i32 3206, i32 4032, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_shrink_slab_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_shrink_slab_end to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_shrink_slab_end to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_shrink_slab_end to i32), i32 198, i32 256, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_shrink_slab_end to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_lru_isolate to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_lru_isolate to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_lru_isolate to i32), i32 434, i32 544, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_lru_isolate to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_writepage to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_writepage to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_writepage to i32), i32 326, i32 416, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_writepage to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_lru_shrink_inactive to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_lru_shrink_inactive to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_lru_shrink_inactive to i32), i32 645, i32 832, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_lru_shrink_inactive to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_lru_shrink_active to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_lru_shrink_active to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_lru_shrink_active to i32), i32 427, i32 544, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_lru_shrink_active to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_node_reclaim_begin to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_node_reclaim_begin to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_node_reclaim_begin to i32), i32 3030, i32 3776, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_node_reclaim_begin to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_node_reclaim_end to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mm_vmscan_throttled to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mm_vmscan_throttled to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mm_vmscan_throttled to i32), i32 435, i32 544, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mm_vmscan_throttled to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vm_swappiness to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @shrinker_rwsem to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @shrinker_nr_max to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @shrinker_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @isolate_lru_page._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kswapd_run._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_vmscan_wakeup_kswapd.__flags to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_vmscan_direct_reclaim_begin_template.__flags to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 106, i32 160, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_shrink_slab_start.__flags to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 101, i32 160, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 106, i32 160, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_vmscan_lru_isolate.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_vmscan_writepage.__flags to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 199, i32 256, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_vmscan_lru_shrink_inactive.__flags to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 93, i32 128, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_vmscan_lru_shrink_active.__flags to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_vmscan_node_reclaim_begin.__flags to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_mm_vmscan_throttled.__flags to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @shrinker_idr to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pageout._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 184, i32 224, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_kswapd_sleep(ptr nocapture readnone %__data, i32 noundef %nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_kswapd_sleep, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_kswapd_wake(ptr nocapture readnone %__data, i32 noundef %nid, i32 noundef %zid, i32 noundef %order) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_kswapd_wake, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid, i32 noundef %zid, i32 noundef %order) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_wakeup_kswapd(ptr nocapture readnone %__data, i32 noundef %nid, i32 noundef %zid, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_wakeup_kswapd, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid, i32 noundef %zid, i32 noundef %order, i32 noundef %gfp_flags) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_direct_reclaim_begin(ptr nocapture readnone %__data, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_direct_reclaim_begin, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %order, i32 noundef %gfp_flags) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_memcg_reclaim_begin(ptr nocapture readnone %__data, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_reclaim_begin, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %order, i32 noundef %gfp_flags) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_memcg_softlimit_reclaim_begin(ptr nocapture readnone %__data, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %order, i32 noundef %gfp_flags) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_direct_reclaim_end(ptr nocapture readnone %__data, i32 noundef %nr_reclaimed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_direct_reclaim_end, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nr_reclaimed) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_memcg_reclaim_end(ptr nocapture readnone %__data, i32 noundef %nr_reclaimed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_reclaim_end, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nr_reclaimed) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_memcg_softlimit_reclaim_end(ptr nocapture readnone %__data, i32 noundef %nr_reclaimed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nr_reclaimed) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_shrink_slab_start(ptr nocapture readnone %__data, ptr noundef %shr, ptr noundef %sc, i32 noundef %nr_objects_to_shrink, i32 noundef %cache_items, i64 noundef %delta, i32 noundef %total_scan, i32 noundef %priority) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_shrink_slab_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %shr, ptr noundef %sc, i32 noundef %nr_objects_to_shrink, i32 noundef %cache_items, i64 noundef %delta, i32 noundef %total_scan, i32 noundef %priority) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_shrink_slab_end(ptr nocapture readnone %__data, ptr noundef %shr, i32 noundef %nid, i32 noundef %shrinker_retval, i32 noundef %unused_scan_cnt, i32 noundef %new_scan_cnt, i32 noundef %total_scan) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_shrink_slab_end, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %shr, i32 noundef %nid, i32 noundef %shrinker_retval, i32 noundef %unused_scan_cnt, i32 noundef %new_scan_cnt, i32 noundef %total_scan) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_lru_isolate(ptr nocapture readnone %__data, i32 noundef %highest_zoneidx, i32 noundef %order, i32 noundef %nr_requested, i32 noundef %nr_scanned, i32 noundef %nr_skipped, i32 noundef %nr_taken, i32 noundef %isolate_mode, i32 noundef %lru) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_isolate, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %highest_zoneidx, i32 noundef %order, i32 noundef %nr_requested, i32 noundef %nr_scanned, i32 noundef %nr_skipped, i32 noundef %nr_taken, i32 noundef %isolate_mode, i32 noundef %lru) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_writepage(ptr nocapture readnone %__data, ptr noundef %page) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_writepage, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %page) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_lru_shrink_inactive(ptr nocapture readnone %__data, i32 noundef %nid, i32 noundef %nr_scanned, i32 noundef %nr_reclaimed, ptr noundef %stat, i32 noundef %priority, i32 noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_shrink_inactive, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid, i32 noundef %nr_scanned, i32 noundef %nr_reclaimed, ptr noundef %stat, i32 noundef %priority, i32 noundef %file) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_lru_shrink_active(ptr nocapture readnone %__data, i32 noundef %nid, i32 noundef %nr_taken, i32 noundef %nr_active, i32 noundef %nr_deactivated, i32 noundef %nr_referenced, i32 noundef %priority, i32 noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_shrink_active, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid, i32 noundef %nr_taken, i32 noundef %nr_active, i32 noundef %nr_deactivated, i32 noundef %nr_referenced, i32 noundef %priority, i32 noundef %file) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_node_reclaim_begin(ptr nocapture readnone %__data, i32 noundef %nid, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_node_reclaim_begin, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid, i32 noundef %order, i32 noundef %gfp_flags) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_node_reclaim_end(ptr nocapture readnone %__data, i32 noundef %nr_reclaimed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_node_reclaim_end, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nr_reclaimed) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mm_vmscan_throttled(ptr nocapture readnone %__data, i32 noundef %nid, i32 noundef %usec_timeout, i32 noundef %usec_delayed, i32 noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_throttled, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %nid, i32 noundef %usec_timeout, i32 noundef %usec_delayed, i32 noundef %reason) #13
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_kswapd_sleep(ptr noundef %__data, i32 noundef %nid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %nid6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_sleep, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nid, ptr %nid6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_kswapd_sleep(ptr noundef %__data, i32 noundef %nid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_sleep, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nid, ptr %nid17, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_kswapd_wake(ptr noundef %__data, i32 noundef %nid, i32 noundef %zid, i32 noundef %order) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %nid6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_wake, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nid, ptr %nid6, align 4
  %zid7 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_wake, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %zid7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %zid, ptr %zid7, align 4
  %order8 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_wake, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %order8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %order, ptr %order8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_kswapd_wake(ptr noundef %__data, i32 noundef %nid, i32 noundef %zid, i32 noundef %order) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_wake, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nid, ptr %nid17, align 4
  %zid18 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_wake, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %zid18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %zid, ptr %zid18, align 4
  %order19 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_wake, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %order19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %order, ptr %order19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_wakeup_kswapd(ptr noundef %__data, i32 noundef %nid, i32 noundef %zid, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %nid6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nid, ptr %nid6, align 4
  %zid7 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %zid7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %zid, ptr %zid7, align 4
  %order8 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %order8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %order, ptr %order8, align 4
  %gfp_flags9 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %gfp_flags9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %gfp_flags, ptr %gfp_flags9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_wakeup_kswapd(ptr noundef %__data, i32 noundef %nid, i32 noundef %zid, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nid, ptr %nid17, align 4
  %zid18 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %zid18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %zid, ptr %zid18, align 4
  %order19 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %order19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %order, ptr %order19, align 4
  %gfp_flags20 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %gfp_flags20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %gfp_flags, ptr %gfp_flags20, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_direct_reclaim_begin_template(ptr noundef %__data, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %order6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_direct_reclaim_begin_template, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %order6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %order, ptr %order6, align 4
  %gfp_flags7 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_direct_reclaim_begin_template, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gfp_flags7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gfp_flags, ptr %gfp_flags7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_direct_reclaim_begin_template(ptr noundef %__data, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %order17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_direct_reclaim_begin_template, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %order17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %order, ptr %order17, align 4
  %gfp_flags18 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_direct_reclaim_begin_template, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %gfp_flags18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gfp_flags, ptr %gfp_flags18, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_direct_reclaim_end_template(ptr noundef %__data, i32 noundef %nr_reclaimed) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %nr_reclaimed6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_direct_reclaim_end_template, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nr_reclaimed6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nr_reclaimed, ptr %nr_reclaimed6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_direct_reclaim_end_template(ptr noundef %__data, i32 noundef %nr_reclaimed) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nr_reclaimed17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_direct_reclaim_end_template, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nr_reclaimed17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nr_reclaimed, ptr %nr_reclaimed17, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_shrink_slab_start(ptr noundef %__data, ptr noundef %shr, ptr nocapture noundef readonly %sc, i32 noundef %nr_objects_to_shrink, i32 noundef %cache_items, i64 noundef %delta, i32 noundef %total_scan, i32 noundef %priority) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %shr6 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %shr6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %shr, ptr %shr6, align 8
  %scan_objects = getelementptr inbounds %struct.shrinker, ptr %shr, i32 0, i32 1
  %4 = ptrtoint ptr %scan_objects to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %scan_objects, align 4
  %shrink = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %shrink to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %shrink, align 4
  %nid = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 1
  %7 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %nid, align 4
  %nid7 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %nid7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %nid7, align 8
  %nr_objects_to_shrink8 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %nr_objects_to_shrink8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %nr_objects_to_shrink, ptr %nr_objects_to_shrink8, align 4
  %11 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sc, align 4
  %gfp_flags = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call3, i32 0, i32 5
  %13 = ptrtoint ptr %gfp_flags to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %gfp_flags, align 8
  %cache_items9 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call3, i32 0, i32 6
  %14 = ptrtoint ptr %cache_items9 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %cache_items, ptr %cache_items9, align 4
  %delta10 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call3, i32 0, i32 7
  %15 = ptrtoint ptr %delta10 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %delta, ptr %delta10, align 8
  %total_scan11 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call3, i32 0, i32 8
  %16 = ptrtoint ptr %total_scan11 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %total_scan, ptr %total_scan11, align 8
  %priority12 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call3, i32 0, i32 9
  %17 = ptrtoint ptr %priority12 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %priority, ptr %priority12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_shrink_slab_start(ptr noundef %__data, ptr noundef %shr, ptr nocapture noundef readonly %sc, i32 noundef %nr_objects_to_shrink, i32 noundef %cache_items, i64 noundef %delta, i32 noundef %total_scan, i32 noundef %priority) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %shr17 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %shr17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %shr, ptr %shr17, align 8
  %scan_objects = getelementptr inbounds %struct.shrinker, ptr %shr, i32 0, i32 1
  %28 = ptrtoint ptr %scan_objects to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %scan_objects, align 4
  %shrink = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %shrink to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %shrink, align 4
  %nid = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 1
  %31 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %nid, align 4
  %nid18 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %nid18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %nid18, align 8
  %nr_objects_to_shrink19 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %nr_objects_to_shrink19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %nr_objects_to_shrink, ptr %nr_objects_to_shrink19, align 4
  %35 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %sc, align 4
  %gfp_flags = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call13, i32 0, i32 5
  %37 = ptrtoint ptr %gfp_flags to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %gfp_flags, align 8
  %cache_items20 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call13, i32 0, i32 6
  %38 = ptrtoint ptr %cache_items20 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %cache_items, ptr %cache_items20, align 4
  %delta21 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call13, i32 0, i32 7
  %39 = ptrtoint ptr %delta21 to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %delta, ptr %delta21, align 8
  %total_scan22 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call13, i32 0, i32 8
  %40 = ptrtoint ptr %total_scan22 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %total_scan, ptr %total_scan22, align 8
  %priority23 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %call13, i32 0, i32 9
  %41 = ptrtoint ptr %priority23 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %priority, ptr %priority23, align 4
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_shrink_slab_end(ptr noundef %__data, ptr noundef %shr, i32 noundef %nid, i32 noundef %shrinker_retval, i32 noundef %unused_scan_cnt, i32 noundef %new_scan_cnt, i32 noundef %total_scan) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %shr6 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %shr6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %shr, ptr %shr6, align 4
  %nid7 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %nid7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %nid, ptr %nid7, align 4
  %scan_objects = getelementptr inbounds %struct.shrinker, ptr %shr, i32 0, i32 1
  %5 = ptrtoint ptr %scan_objects to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %scan_objects, align 4
  %shrink = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %shrink to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %shrink, align 4
  %unused_scan = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %unused_scan to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %unused_scan_cnt, ptr %unused_scan, align 4
  %new_scan = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call3, i32 0, i32 5
  %9 = ptrtoint ptr %new_scan to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %new_scan_cnt, ptr %new_scan, align 4
  %retval = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call3, i32 0, i32 6
  %10 = ptrtoint ptr %retval to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %shrinker_retval, ptr %retval, align 4
  %total_scan8 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call3, i32 0, i32 7
  %11 = ptrtoint ptr %total_scan8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %total_scan, ptr %total_scan8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_shrink_slab_end(ptr noundef %__data, ptr noundef %shr, i32 noundef %nid, i32 noundef %shrinker_retval, i32 noundef %unused_scan_cnt, i32 noundef %new_scan_cnt, i32 noundef %total_scan) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %shr17 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %shr17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %shr, ptr %shr17, align 4
  %nid18 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %nid18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %nid, ptr %nid18, align 4
  %scan_objects = getelementptr inbounds %struct.shrinker, ptr %shr, i32 0, i32 1
  %29 = ptrtoint ptr %scan_objects to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %scan_objects, align 4
  %shrink = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %shrink to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %30, ptr %shrink, align 4
  %unused_scan = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %unused_scan to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %unused_scan_cnt, ptr %unused_scan, align 4
  %new_scan = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call13, i32 0, i32 5
  %33 = ptrtoint ptr %new_scan to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %new_scan_cnt, ptr %new_scan, align 4
  %retval = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call13, i32 0, i32 6
  %34 = ptrtoint ptr %retval to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %shrinker_retval, ptr %retval, align 4
  %total_scan19 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %call13, i32 0, i32 7
  %35 = ptrtoint ptr %total_scan19 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %total_scan, ptr %total_scan19, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_lru_isolate(ptr noundef %__data, i32 noundef %highest_zoneidx, i32 noundef %order, i32 noundef %nr_requested, i32 noundef %nr_scanned, i32 noundef %nr_skipped, i32 noundef %nr_taken, i32 noundef %isolate_mode, i32 noundef %lru) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %highest_zoneidx6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %highest_zoneidx6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %highest_zoneidx, ptr %highest_zoneidx6, align 4
  %order7 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %order7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %order, ptr %order7, align 4
  %nr_requested8 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %nr_requested8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %nr_requested, ptr %nr_requested8, align 4
  %nr_scanned9 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %nr_scanned9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %nr_scanned, ptr %nr_scanned9, align 4
  %nr_skipped10 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %nr_skipped10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %nr_skipped, ptr %nr_skipped10, align 4
  %nr_taken11 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %nr_taken11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %nr_taken, ptr %nr_taken11, align 4
  %isolate_mode12 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call3, i32 0, i32 7
  %9 = ptrtoint ptr %isolate_mode12 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %isolate_mode, ptr %isolate_mode12, align 4
  %lru13 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call3, i32 0, i32 8
  %10 = ptrtoint ptr %lru13 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %lru, ptr %lru13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_lru_isolate(ptr noundef %__data, i32 noundef %highest_zoneidx, i32 noundef %order, i32 noundef %nr_requested, i32 noundef %nr_scanned, i32 noundef %nr_skipped, i32 noundef %nr_taken, i32 noundef %isolate_mode, i32 noundef %lru) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %highest_zoneidx17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %highest_zoneidx17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %highest_zoneidx, ptr %highest_zoneidx17, align 4
  %order18 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %order18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %order, ptr %order18, align 4
  %nr_requested19 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %nr_requested19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %nr_requested, ptr %nr_requested19, align 4
  %nr_scanned20 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %nr_scanned20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %nr_scanned, ptr %nr_scanned20, align 4
  %nr_skipped21 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %nr_skipped21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %nr_skipped, ptr %nr_skipped21, align 4
  %nr_taken22 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %nr_taken22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %nr_taken, ptr %nr_taken22, align 4
  %isolate_mode23 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call13, i32 0, i32 7
  %33 = ptrtoint ptr %isolate_mode23 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %isolate_mode, ptr %isolate_mode23, align 4
  %lru24 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %call13, i32 0, i32 8
  %34 = ptrtoint ptr %lru24 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %lru, ptr %lru24, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_writepage(ptr noundef %__data, ptr noundef %page) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %3 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %4 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add6 = add i32 %sub.ptr.div, %4
  %pfn = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_writepage, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %add6, ptr %pfn, align 4
  %6 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %6, align 4
  %and.i.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end5._compound_head.exit.i_crit_edge, label %if.then.i.i, !prof !557

if.end5._compound_head.exit.i_crit_edge:          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  br label %_compound_head.exit.i

if.then.i.i:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %8, -1
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.then.i.i, %if.end5._compound_head.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %sub.ptr.lhs.cast, %if.end5._compound_head.exit.i_crit_edge ]
  %9 = inttoptr i32 %retval.0.i.i to ptr
  %10 = getelementptr inbounds %struct.page, ptr %9, i32 0, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  %and.i.i.i.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %page_is_file_lru.exit, label %if.then.i.i.i.i, !prof !557

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %9, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

page_is_file_lru.exit:                            ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %9, align 4
  %15 = and i32 %14, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool8.not.not = icmp eq i32 %15, 0
  %or = select i1 %tobool8.not.not, i32 10, i32 9
  %reclaim_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_writepage, ptr %call3, i32 0, i32 2
  %16 = ptrtoint ptr %reclaim_flags to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %or, ptr %reclaim_flags, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %page_is_file_lru.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_writepage(ptr noundef %__data, ptr noundef %page) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %27 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %27 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %28 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add17 = add i32 %sub.ptr.div, %28
  %pfn = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_writepage, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %add17, ptr %pfn, align 4
  %30 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  %and.i.i = and i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end16._compound_head.exit.i_crit_edge, label %if.then.i.i, !prof !557

if.end16._compound_head.exit.i_crit_edge:         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %_compound_head.exit.i

if.then.i.i:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %32, -1
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.then.i.i, %if.end16._compound_head.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %sub.ptr.lhs.cast, %if.end16._compound_head.exit.i_crit_edge ]
  %33 = inttoptr i32 %retval.0.i.i to ptr
  %34 = getelementptr inbounds %struct.page, ptr %33, i32 0, i32 1
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  %and.i.i.i.i.i = and i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %page_is_file_lru.exit, label %if.then.i.i.i.i, !prof !557

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %33, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

page_is_file_lru.exit:                            ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %37 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %33, align 4
  %39 = and i32 %38, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool19.not.not = icmp eq i32 %39, 0
  %or = select i1 %tobool19.not.not, i32 10, i32 9
  %reclaim_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_writepage, ptr %call13, i32 0, i32 2
  %40 = ptrtoint ptr %reclaim_flags to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %or, ptr %reclaim_flags, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %page_is_file_lru.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_lru_shrink_inactive(ptr noundef %__data, i32 noundef %nid, i32 noundef %nr_scanned, i32 noundef %nr_reclaimed, ptr nocapture noundef readonly %stat, i32 noundef %priority, i32 noundef %file) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 60) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %nid6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nid, ptr %nid6, align 4
  %nr_scanned7 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %nr_scanned7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %nr_scanned, ptr %nr_scanned7, align 4
  %nr_reclaimed8 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %nr_reclaimed8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %nr_reclaimed, ptr %nr_reclaimed8, align 4
  %6 = ptrtoint ptr %stat to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %stat, align 4
  %nr_dirty9 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %nr_dirty9 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %nr_dirty9, align 4
  %nr_writeback = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 3
  %9 = ptrtoint ptr %nr_writeback to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nr_writeback, align 4
  %nr_writeback10 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %nr_writeback10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %nr_writeback10, align 4
  %nr_congested = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 2
  %12 = ptrtoint ptr %nr_congested to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_congested, align 4
  %nr_congested11 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 6
  %14 = ptrtoint ptr %nr_congested11 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %nr_congested11, align 4
  %nr_immediate = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 4
  %15 = ptrtoint ptr %nr_immediate to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %nr_immediate, align 4
  %nr_immediate12 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 7
  %17 = ptrtoint ptr %nr_immediate12 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %nr_immediate12, align 4
  %nr_activate = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 6
  %18 = ptrtoint ptr %nr_activate to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %nr_activate, align 4
  %nr_activate0 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 8
  %20 = ptrtoint ptr %nr_activate0 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %nr_activate0, align 4
  %arrayidx14 = getelementptr %struct.reclaim_stat, ptr %stat, i32 0, i32 6, i32 1
  %21 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx14, align 4
  %nr_activate1 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 9
  %23 = ptrtoint ptr %nr_activate1 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %nr_activate1, align 4
  %nr_ref_keep = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 7
  %24 = ptrtoint ptr %nr_ref_keep to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %nr_ref_keep, align 4
  %nr_ref_keep15 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 10
  %26 = ptrtoint ptr %nr_ref_keep15 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %nr_ref_keep15, align 4
  %nr_unmap_fail = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 8
  %27 = ptrtoint ptr %nr_unmap_fail to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %nr_unmap_fail, align 4
  %nr_unmap_fail16 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 11
  %29 = ptrtoint ptr %nr_unmap_fail16 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %nr_unmap_fail16, align 4
  %priority17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 12
  %30 = ptrtoint ptr %priority17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %priority, ptr %priority17, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %file)
  %tobool18.not = icmp eq i32 %file, 0
  %or = select i1 %tobool18.not, i32 9, i32 10
  %reclaim_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call3, i32 0, i32 13
  %31 = ptrtoint ptr %reclaim_flags to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or, ptr %reclaim_flags, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_lru_shrink_inactive(ptr noundef %__data, i32 noundef %nid, i32 noundef %nr_scanned, i32 noundef %nr_reclaimed, ptr nocapture noundef readonly %stat, i32 noundef %priority, i32 noundef %file) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nid, ptr %nid17, align 4
  %nr_scanned18 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %nr_scanned18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %nr_scanned, ptr %nr_scanned18, align 4
  %nr_reclaimed19 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %nr_reclaimed19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %nr_reclaimed, ptr %nr_reclaimed19, align 4
  %30 = ptrtoint ptr %stat to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %stat, align 4
  %nr_dirty20 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %nr_dirty20 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %nr_dirty20, align 4
  %nr_writeback = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 3
  %33 = ptrtoint ptr %nr_writeback to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %nr_writeback, align 4
  %nr_writeback21 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %nr_writeback21 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %nr_writeback21, align 4
  %nr_congested = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 2
  %36 = ptrtoint ptr %nr_congested to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %nr_congested, align 4
  %nr_congested22 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 6
  %38 = ptrtoint ptr %nr_congested22 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %nr_congested22, align 4
  %nr_immediate = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 4
  %39 = ptrtoint ptr %nr_immediate to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %nr_immediate, align 4
  %nr_immediate23 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 7
  %41 = ptrtoint ptr %nr_immediate23 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %nr_immediate23, align 4
  %nr_activate = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 6
  %42 = ptrtoint ptr %nr_activate to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %nr_activate, align 4
  %nr_activate0 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 8
  %44 = ptrtoint ptr %nr_activate0 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %nr_activate0, align 4
  %arrayidx26 = getelementptr %struct.reclaim_stat, ptr %stat, i32 0, i32 6, i32 1
  %45 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx26, align 4
  %nr_activate1 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 9
  %47 = ptrtoint ptr %nr_activate1 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %nr_activate1, align 4
  %nr_ref_keep = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 7
  %48 = ptrtoint ptr %nr_ref_keep to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %nr_ref_keep, align 4
  %nr_ref_keep27 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 10
  %50 = ptrtoint ptr %nr_ref_keep27 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %nr_ref_keep27, align 4
  %nr_unmap_fail = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 8
  %51 = ptrtoint ptr %nr_unmap_fail to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %nr_unmap_fail, align 4
  %nr_unmap_fail28 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 11
  %53 = ptrtoint ptr %nr_unmap_fail28 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %nr_unmap_fail28, align 4
  %priority29 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 12
  %54 = ptrtoint ptr %priority29 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %priority, ptr %priority29, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %file)
  %tobool30.not = icmp eq i32 %file, 0
  %or = select i1 %tobool30.not, i32 9, i32 10
  %reclaim_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %call13, i32 0, i32 13
  %55 = ptrtoint ptr %reclaim_flags to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %or, ptr %reclaim_flags, align 4
  %56 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %rctx, align 4
  %58 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %57, ptr noundef %__data, i64 noundef 1, ptr noundef %59, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_lru_shrink_active(ptr noundef %__data, i32 noundef %nid, i32 noundef %nr_taken, i32 noundef %nr_active, i32 noundef %nr_deactivated, i32 noundef %nr_referenced, i32 noundef %priority, i32 noundef %file) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %nid6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nid, ptr %nid6, align 4
  %nr_taken7 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %nr_taken7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %nr_taken, ptr %nr_taken7, align 4
  %nr_active8 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %nr_active8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %nr_active, ptr %nr_active8, align 4
  %nr_deactivated9 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %nr_deactivated9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %nr_deactivated, ptr %nr_deactivated9, align 4
  %nr_referenced10 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %nr_referenced10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %nr_referenced, ptr %nr_referenced10, align 4
  %priority11 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %priority11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %priority, ptr %priority11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %file)
  %tobool12.not = icmp eq i32 %file, 0
  %or = select i1 %tobool12.not, i32 9, i32 10
  %reclaim_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call3, i32 0, i32 7
  %9 = ptrtoint ptr %reclaim_flags to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or, ptr %reclaim_flags, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_lru_shrink_active(ptr noundef %__data, i32 noundef %nid, i32 noundef %nr_taken, i32 noundef %nr_active, i32 noundef %nr_deactivated, i32 noundef %nr_referenced, i32 noundef %priority, i32 noundef %file) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nid, ptr %nid17, align 4
  %nr_taken18 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %nr_taken18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %nr_taken, ptr %nr_taken18, align 4
  %nr_active19 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %nr_active19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %nr_active, ptr %nr_active19, align 4
  %nr_deactivated20 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %nr_deactivated20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %nr_deactivated, ptr %nr_deactivated20, align 4
  %nr_referenced21 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %nr_referenced21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %nr_referenced, ptr %nr_referenced21, align 4
  %priority22 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %priority22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %priority, ptr %priority22, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %file)
  %tobool23.not = icmp eq i32 %file, 0
  %or = select i1 %tobool23.not, i32 9, i32 10
  %reclaim_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %call13, i32 0, i32 7
  %33 = ptrtoint ptr %reclaim_flags to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %or, ptr %reclaim_flags, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_node_reclaim_begin(ptr noundef %__data, i32 noundef %nid, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %nid6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_node_reclaim_begin, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nid, ptr %nid6, align 4
  %order7 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_node_reclaim_begin, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %order7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %order, ptr %order7, align 4
  %gfp_flags8 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_node_reclaim_begin, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %gfp_flags8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %gfp_flags, ptr %gfp_flags8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_node_reclaim_begin(ptr noundef %__data, i32 noundef %nid, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_node_reclaim_begin, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nid, ptr %nid17, align 4
  %order18 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_node_reclaim_begin, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %order18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %order, ptr %order18, align 4
  %gfp_flags19 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_node_reclaim_begin, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %gfp_flags19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %gfp_flags, ptr %gfp_flags19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mm_vmscan_throttled(ptr noundef %__data, i32 noundef %nid, i32 noundef %usec_timeout, i32 noundef %usec_delayed, i32 noundef %reason) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #13
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !557

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !558

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #13
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #13
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %nid6 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %nid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %nid, ptr %nid6, align 4
  %usec_timeout7 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %usec_timeout7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %usec_timeout, ptr %usec_timeout7, align 4
  %usec_delayed8 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %usec_delayed8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %usec_delayed, ptr %usec_delayed8, align 4
  %shl = shl nuw i32 1, %reason
  %reason9 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %reason9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %shl, ptr %reason9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mm_vmscan_throttled(ptr noundef %__data, i32 noundef %nid, i32 noundef %usec_timeout, i32 noundef %usec_delayed, i32 noundef %reason) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #13
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #13
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !559
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #13
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #13
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #13
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !547) #13
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nid17 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %nid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %nid, ptr %nid17, align 4
  %usec_timeout18 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %usec_timeout18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %usec_timeout, ptr %usec_timeout18, align 4
  %usec_delayed19 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %usec_delayed19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %usec_delayed, ptr %usec_delayed19, align 4
  %shl = shl nuw i32 1, %reason
  %reason20 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %reason20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %shl, ptr %reason20, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_kswapd_sleep(ptr noundef %__data, i32 noundef %nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %nid to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_kswapd_wake(ptr noundef %__data, i32 noundef %nid, i32 noundef %zid, i32 noundef %order) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %nid to i64
  %conv4 = zext i32 %zid to i64
  %conv8 = zext i32 %order to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_wakeup_kswapd(ptr noundef %__data, i32 noundef %nid, i32 noundef %zid, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %nid to i64
  %conv4 = zext i32 %zid to i64
  %conv8 = zext i32 %order to i64
  %conv12 = zext i32 %gfp_flags to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_direct_reclaim_begin_template(ptr noundef %__data, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %order to i64
  %conv4 = zext i32 %gfp_flags to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_direct_reclaim_end_template(ptr noundef %__data, i32 noundef %nr_reclaimed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %nr_reclaimed to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_shrink_slab_start(ptr noundef %__data, ptr noundef %shr, ptr noundef %sc, i32 noundef %nr_objects_to_shrink, i32 noundef %cache_items, i64 noundef %delta, i32 noundef %total_scan, i32 noundef %priority) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %0 = ptrtoint ptr %shr to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %sc to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %nr_objects_to_shrink to i64
  %conv12 = zext i32 %cache_items to i64
  %conv19 = zext i32 %total_scan to i64
  %conv23 = zext i32 %priority to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %delta, i64 noundef %conv19, i64 noundef %conv23) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_shrink_slab_end(ptr noundef %__data, ptr noundef %shr, i32 noundef %nid, i32 noundef %shrinker_retval, i32 noundef %unused_scan_cnt, i32 noundef %new_scan_cnt, i32 noundef %total_scan) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %0 = ptrtoint ptr %shr to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %nid to i64
  %conv8 = zext i32 %shrinker_retval to i64
  %conv12 = zext i32 %unused_scan_cnt to i64
  %conv16 = zext i32 %new_scan_cnt to i64
  %conv20 = zext i32 %total_scan to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_lru_isolate(ptr noundef %__data, i32 noundef %highest_zoneidx, i32 noundef %order, i32 noundef %nr_requested, i32 noundef %nr_scanned, i32 noundef %nr_skipped, i32 noundef %nr_taken, i32 noundef %isolate_mode, i32 noundef %lru) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %highest_zoneidx to i64
  %conv4 = zext i32 %order to i64
  %conv8 = zext i32 %nr_requested to i64
  %conv12 = zext i32 %nr_scanned to i64
  %conv16 = zext i32 %nr_skipped to i64
  %conv20 = zext i32 %nr_taken to i64
  %conv24 = zext i32 %isolate_mode to i64
  %conv28 = zext i32 %lru to i64
  tail call void @bpf_trace_run8(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24, i64 noundef %conv28) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_writepage(ptr noundef %__data, ptr noundef %page) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %0 = ptrtoint ptr %page to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_lru_shrink_inactive(ptr noundef %__data, i32 noundef %nid, i32 noundef %nr_scanned, i32 noundef %nr_reclaimed, ptr noundef %stat, i32 noundef %priority, i32 noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %nid to i64
  %conv4 = zext i32 %nr_scanned to i64
  %conv8 = zext i32 %nr_reclaimed to i64
  %0 = ptrtoint ptr %stat to i32
  %conv12 = zext i32 %0 to i64
  %conv16 = zext i32 %priority to i64
  %conv20 = zext i32 %file to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_lru_shrink_active(ptr noundef %__data, i32 noundef %nid, i32 noundef %nr_taken, i32 noundef %nr_active, i32 noundef %nr_deactivated, i32 noundef %nr_referenced, i32 noundef %priority, i32 noundef %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %nid to i64
  %conv4 = zext i32 %nr_taken to i64
  %conv8 = zext i32 %nr_active to i64
  %conv12 = zext i32 %nr_deactivated to i64
  %conv16 = zext i32 %nr_referenced to i64
  %conv20 = zext i32 %priority to i64
  %conv24 = zext i32 %file to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_node_reclaim_begin(ptr noundef %__data, i32 noundef %nid, i32 noundef %order, i32 noundef %gfp_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %nid to i64
  %conv4 = zext i32 %order to i64
  %conv8 = zext i32 %gfp_flags to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mm_vmscan_throttled(ptr noundef %__data, i32 noundef %nid, i32 noundef %usec_timeout, i32 noundef %usec_delayed, i32 noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i32 %nid to i64
  %conv4 = zext i32 %usec_timeout to i64
  %conv8 = zext i32 %usec_delayed to i64
  %conv12 = zext i32 %reason to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_shrinker_info(ptr nocapture noundef readonly %memcg) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %nodeinfo = getelementptr inbounds %struct.mem_cgroup, ptr %memcg, i32 0, i32 45
  %0 = ptrtoint ptr %nodeinfo to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nodeinfo, align 4
  %shrinker_info = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %shrinker_info to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %shrinker_info, align 4
  tail call void @kvfree(ptr noundef %3) #13
  %4 = ptrtoint ptr %shrinker_info to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr null, ptr %shrinker_info, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @alloc_shrinker_info(ptr nocapture noundef readonly %memcg) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @shrinker_rwsem) #13
  %0 = load i32, ptr @shrinker_nr_max, align 4
  %sub.i = add i32 %0, 31
  %div.i = sdiv i32 %sub.i, 32
  %mul.i = shl nsw i32 %div.i, 2
  %sub.i51 = shl i32 %0, 2
  %or.i = add i32 %sub.i51, -4
  %add.i = or i32 %or.i, 124
  %mul.i52 = add i32 %add.i, 4
  %add = add nsw i32 %mul.i, 16
  %add2 = add i32 %add, %mul.i52
  %call.i = tail call noalias ptr @kvmalloc_node(i32 noundef %add2, i32 noundef 3520, i32 noundef 0) #16
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %nodeinfo.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg, i32 0, i32 45
  %1 = ptrtoint ptr %nodeinfo.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %nodeinfo.i, align 4
  %shrinker_info.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %2, i32 0, i32 5
  %3 = ptrtoint ptr %shrinker_info.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %shrinker_info.i, align 4
  tail call void @kvfree(ptr noundef %4) #13
  %5 = ptrtoint ptr %shrinker_info.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr null, ptr %shrinker_info.i, align 4
  br label %for.end

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr = getelementptr %struct.shrinker_info, ptr %call.i, i32 1
  %nr_deferred = getelementptr inbounds %struct.shrinker_info, ptr %call.i, i32 0, i32 1
  %6 = ptrtoint ptr %nr_deferred to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %add.ptr, ptr %nr_deferred, align 4
  %add.ptr5 = getelementptr i8, ptr %add.ptr, i32 %mul.i52
  %map = getelementptr inbounds %struct.shrinker_info, ptr %call.i, i32 0, i32 2
  %7 = ptrtoint ptr %map to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr5, ptr %map, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !561
  %nodeinfo28 = getelementptr inbounds %struct.mem_cgroup, ptr %memcg, i32 0, i32 45
  %8 = ptrtoint ptr %nodeinfo28 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nodeinfo28, align 4
  %shrinker_info30 = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %shrinker_info30 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %call.i, ptr %shrinker_info30, align 4
  br label %for.end

for.end:                                          ; preds = %if.end, %if.then
  %ret.0 = phi i32 [ -12, %if.then ], [ 0, %if.end ]
  tail call void @up_write(ptr noundef nonnull @shrinker_rwsem) #13
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @set_shrinker_bit(ptr noundef readonly %memcg, i32 noundef %nid, i32 noundef %shrinker_id) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shrinker_id)
  %cmp = icmp slt i32 %shrinker_id, 0
  %tobool.not = icmp eq ptr %memcg, null
  %or.cond = or i1 %tobool.not, %cmp
  br i1 %or.cond, label %entry.if.end20_crit_edge, label %land.lhs.true1

entry.if.end20_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end20

land.lhs.true1:                                   ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %0 = load ptr, ptr @root_mem_cgroup, align 4
  %cmp.i = icmp eq ptr %0, %memcg
  br i1 %cmp.i, label %land.lhs.true1.if.end20_crit_edge, label %if.then

land.lhs.true1.if.end20_crit_edge:                ; preds = %land.lhs.true1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end20

if.then:                                          ; preds = %land.lhs.true1
  %1 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %4, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !562
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #13
  %call.i = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i, label %if.then.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then.rcu_read_lock.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.145, i32 noundef 696, ptr noundef nonnull @.str.146) #13
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then.rcu_read_lock.exit_crit_edge
  %arrayidx = getelementptr %struct.mem_cgroup, ptr %memcg, i32 0, i32 45, i32 %nid
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %shrinker_info = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %6, i32 0, i32 5
  %7 = ptrtoint ptr %shrinker_info to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %shrinker_info, align 4
  %call3 = tail call i32 @rcu_read_lock_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true5, label %rcu_read_lock.exit.do.end12_crit_edge

rcu_read_lock.exit.do.end12_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end12

land.lhs.true5:                                   ; preds = %rcu_read_lock.exit
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %land.lhs.true5.do.end12_crit_edge, label %land.lhs.true8

land.lhs.true5.do.end12_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end12

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %.b24 = load i1, ptr @set_shrinker_bit.__warned, align 1
  br i1 %.b24, label %land.lhs.true8.do.end12_crit_edge, label %if.then10

land.lhs.true8.do.end12_crit_edge:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end12

if.then10:                                        ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @set_shrinker_bit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.21, i32 noundef 342, ptr noundef nonnull @.str.22) #13
  br label %do.end12

do.end12:                                         ; preds = %if.then10, %land.lhs.true8.do.end12_crit_edge, %land.lhs.true5.do.end12_crit_edge, %rcu_read_lock.exit.do.end12_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !563
  %map = getelementptr inbounds %struct.shrinker_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %map, align 4
  tail call void @_set_bit(i32 noundef %shrinker_id, ptr noundef %10) #13
  %call.i25 = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i25, label %do.end12.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i28

do.end12.rcu_read_unlock.exit_crit_edge:          ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true.i28:                                ; preds = %do.end12
  %call1.i26 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i26)
  %tobool.not.i27 = icmp eq i32 %call1.i26, 0
  br i1 %tobool.not.i27, label %land.lhs.true.i28.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i30

land.lhs.true.i28.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i28
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true2.i30:                               ; preds = %land.lhs.true.i28
  %.b4.i29 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i29, label %land.lhs.true2.i30.rcu_read_unlock.exit_crit_edge, label %if.then.i31

land.lhs.true2.i30.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i30
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

if.then.i31:                                      ; preds = %land.lhs.true2.i30
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.145, i32 noundef 724, ptr noundef nonnull @.str.147) #13
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i31, %land.lhs.true2.i30.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i28.rcu_read_unlock.exit_crit_edge, %do.end12.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !564
  %11 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i.i32 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i32 to ptr
  %preempt_count.i.i.i.i33 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i.i.i33 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i.i.i33, align 4
  %sub.i.i.i = add i32 %14, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i33, align 4
  tail call void @rcu_read_unlock_strict() #13
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #13
  br label %if.end20

if.end20:                                         ; preds = %rcu_read_unlock.exit, %land.lhs.true1.if.end20_crit_edge, %entry.if.end20_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @reparent_shrinker_deferred(ptr nocapture noundef readonly %memcg) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %parent.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg, i32 0, i32 2, i32 13
  %0 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  %add.ptr.i = getelementptr i8, ptr %1, i32 -176
  %tobool.not32 = icmp eq ptr %add.ptr.i, null
  %tobool.not = or i1 %tobool.not.i, %tobool.not32
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %2 = load ptr, ptr @root_mem_cgroup, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %parent.0 = phi ptr [ %add.ptr.i, %entry.if.end_crit_edge ], [ %2, %if.then ]
  tail call void @down_read(ptr noundef nonnull @shrinker_rwsem) #13
  %call.i.i19 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 6), i32 noundef -1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i19)
  %tobool.not.i20 = icmp eq i32 %call.i.i19, 0
  br i1 %tobool.not.i20, label %land.lhs.true.i, label %if.end.shrinker_info_protected.exit_crit_edge

if.end.shrinker_info_protected.exit_crit_edge:    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.shrinker_info_protected.exit_crit_edge, label %land.lhs.true3.i

land.lhs.true.i.shrinker_info_protected.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %.b5.i = load i1, ptr @shrinker_info_protected.__warned, align 1
  br i1 %.b5.i, label %land.lhs.true3.i.shrinker_info_protected.exit_crit_edge, label %if.then.i

land.lhs.true3.i.shrinker_info_protected.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit

if.then.i:                                        ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @shrinker_info_protected.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.21, i32 noundef 212, ptr noundef nonnull @.str.148) #13
  br label %shrinker_info_protected.exit

shrinker_info_protected.exit:                     ; preds = %if.then.i, %land.lhs.true3.i.shrinker_info_protected.exit_crit_edge, %land.lhs.true.i.shrinker_info_protected.exit_crit_edge, %if.end.shrinker_info_protected.exit_crit_edge
  %arrayidx.i = getelementptr %struct.mem_cgroup, ptr %memcg, i32 0, i32 45, i32 0
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx.i, align 4
  %shrinker_info.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %shrinker_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %shrinker_info.i, align 4
  %call.i.i21 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 6), i32 noundef -1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i21)
  %tobool.not.i22 = icmp eq i32 %call.i.i21, 0
  br i1 %tobool.not.i22, label %land.lhs.true.i25, label %shrinker_info_protected.exit.shrinker_info_protected.exit31_crit_edge

shrinker_info_protected.exit.shrinker_info_protected.exit31_crit_edge: ; preds = %shrinker_info_protected.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit31

land.lhs.true.i25:                                ; preds = %shrinker_info_protected.exit
  %call1.i23 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i23)
  %tobool2.not.i24 = icmp eq i32 %call1.i23, 0
  br i1 %tobool2.not.i24, label %land.lhs.true.i25.shrinker_info_protected.exit31_crit_edge, label %land.lhs.true3.i27

land.lhs.true.i25.shrinker_info_protected.exit31_crit_edge: ; preds = %land.lhs.true.i25
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit31

land.lhs.true3.i27:                               ; preds = %land.lhs.true.i25
  %.b5.i26 = load i1, ptr @shrinker_info_protected.__warned, align 1
  br i1 %.b5.i26, label %land.lhs.true3.i27.shrinker_info_protected.exit31_crit_edge, label %if.then.i28

land.lhs.true3.i27.shrinker_info_protected.exit31_crit_edge: ; preds = %land.lhs.true3.i27
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit31

if.then.i28:                                      ; preds = %land.lhs.true3.i27
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @shrinker_info_protected.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.21, i32 noundef 212, ptr noundef nonnull @.str.148) #13
  br label %shrinker_info_protected.exit31

shrinker_info_protected.exit31:                   ; preds = %if.then.i28, %land.lhs.true3.i27.shrinker_info_protected.exit31_crit_edge, %land.lhs.true.i25.shrinker_info_protected.exit31_crit_edge, %shrinker_info_protected.exit.shrinker_info_protected.exit31_crit_edge
  %7 = load i32, ptr @shrinker_nr_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp433 = icmp sgt i32 %7, 0
  br i1 %cmp433, label %for.body5.lr.ph, label %shrinker_info_protected.exit31.for.end10_crit_edge

shrinker_info_protected.exit31.for.end10_crit_edge: ; preds = %shrinker_info_protected.exit31
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end10

for.body5.lr.ph:                                  ; preds = %shrinker_info_protected.exit31
  %arrayidx.i29 = getelementptr %struct.mem_cgroup, ptr %parent.0, i32 0, i32 45, i32 0
  %8 = ptrtoint ptr %arrayidx.i29 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.i29, align 4
  %shrinker_info.i30 = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %shrinker_info.i30 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %shrinker_info.i30, align 4
  %nr_deferred = getelementptr inbounds %struct.shrinker_info, ptr %6, i32 0, i32 1
  %nr_deferred7 = getelementptr inbounds %struct.shrinker_info, ptr %11, i32 0, i32 1
  br label %for.body5

for.body5:                                        ; preds = %for.body5.for.body5_crit_edge, %for.body5.lr.ph
  %i.034 = phi i32 [ 0, %for.body5.lr.ph ], [ %inc, %for.body5.for.body5_crit_edge ]
  %12 = ptrtoint ptr %nr_deferred to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %nr_deferred, align 4
  %arrayidx = getelementptr %struct.atomic_t, ptr %13, i32 %i.034
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx, i32 noundef 4) #13
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %arrayidx, align 4
  %16 = ptrtoint ptr %nr_deferred7 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nr_deferred7, align 4
  %arrayidx8 = getelementptr %struct.atomic_t, ptr %17, i32 %i.034
  %call.i.i18 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx8, i32 noundef 4) #13
  tail call void @llvm.prefetch.p0(ptr %arrayidx8, i32 1, i32 3, i32 1) #13
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx8, ptr %arrayidx8, i32 %15, ptr elementtype(i32) %arrayidx8) #13, !srcloc !565
  %inc = add nuw nsw i32 %i.034, 1
  %19 = load i32, ptr @shrinker_nr_max, align 4
  %cmp4 = icmp slt i32 %inc, %19
  br i1 %cmp4, label %for.body5.for.body5_crit_edge, label %for.body5.for.end10_crit_edge

for.body5.for.end10_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end10

for.body5.for.body5_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body5

for.end10:                                        ; preds = %for.body5.for.end10_crit_edge, %shrinker_info_protected.exit31.for.end10_crit_edge
  tail call void @up_read(ptr noundef nonnull @shrinker_rwsem) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @zone_reclaimable_pages(ptr noundef %zone) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx.i = getelementptr %struct.zone, ptr %zone, i32 0, i32 37, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i, i32 noundef 4) #13
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %arrayidx.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %call114.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #17
  call void @__sanitizer_cov_trace_cmp4(i32 %call114.i, i32 %2)
  %cmp15.i = icmp ult i32 %call114.i, %2
  br i1 %cmp15.i, label %do.body.lr.ph.i, label %entry.zone_page_state_snapshot.exit_crit_edge

entry.zone_page_state_snapshot.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit

do.body.lr.ph.i:                                  ; preds = %entry
  %per_cpu_zonestats.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 6
  %3 = ptrtoint ptr %per_cpu_zonestats.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %per_cpu_zonestats.i, align 4
  %5 = ptrtoint ptr %4 to i32
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body.lr.ph.i
  %call117.i = phi i32 [ %call114.i, %do.body.lr.ph.i ], [ %call1.i, %do.body.i.do.body.i_crit_edge ]
  %x.016.i = phi i32 [ %1, %do.body.lr.ph.i ], [ %add5.i, %do.body.i.do.body.i_crit_edge ]
  %arrayidx3.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call117.i
  %6 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx3.i, align 4
  %add.i = add i32 %7, %5
  %8 = inttoptr i32 %add.i to ptr
  %arrayidx4.i = getelementptr [11 x i8], ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx4.i, align 1
  %conv.i = sext i8 %10 to i32
  %add5.i = add i32 %x.016.i, %conv.i
  %call1.i = tail call i32 @cpumask_next(i32 noundef %call117.i, ptr noundef nonnull @__cpu_online_mask) #17
  %cmp.i = icmp ult i32 %call1.i, %2
  br i1 %cmp.i, label %do.body.i.do.body.i_crit_edge, label %do.body.i.zone_page_state_snapshot.exit_crit_edge

do.body.i.zone_page_state_snapshot.exit_crit_edge: ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i

zone_page_state_snapshot.exit:                    ; preds = %do.body.i.zone_page_state_snapshot.exit_crit_edge, %entry.zone_page_state_snapshot.exit_crit_edge
  %x.0.lcssa.i = phi i32 [ %1, %entry.zone_page_state_snapshot.exit_crit_edge ], [ %add5.i, %do.body.i.zone_page_state_snapshot.exit_crit_edge ]
  %11 = tail call i32 @llvm.smax.i32(i32 %x.0.lcssa.i, i32 0) #13
  %arrayidx.i13 = getelementptr %struct.zone, ptr %zone, i32 0, i32 37, i32 4
  %call.i.i.i14 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i13, i32 noundef 4) #13
  %12 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %arrayidx.i13, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %14 = load i32, ptr @nr_cpu_ids, align 4
  %call114.i15 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #17
  call void @__sanitizer_cov_trace_cmp4(i32 %call114.i15, i32 %14)
  %cmp15.i16 = icmp ult i32 %call114.i15, %14
  br i1 %cmp15.i16, label %do.body.lr.ph.i18, label %zone_page_state_snapshot.exit.zone_page_state_snapshot.exit30_crit_edge

zone_page_state_snapshot.exit.zone_page_state_snapshot.exit30_crit_edge: ; preds = %zone_page_state_snapshot.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit30

do.body.lr.ph.i18:                                ; preds = %zone_page_state_snapshot.exit
  %per_cpu_zonestats.i17 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 6
  %15 = ptrtoint ptr %per_cpu_zonestats.i17 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %per_cpu_zonestats.i17, align 4
  %17 = ptrtoint ptr %16 to i32
  br label %do.body.i28

do.body.i28:                                      ; preds = %do.body.i28.do.body.i28_crit_edge, %do.body.lr.ph.i18
  %call117.i19 = phi i32 [ %call114.i15, %do.body.lr.ph.i18 ], [ %call1.i26, %do.body.i28.do.body.i28_crit_edge ]
  %x.016.i20 = phi i32 [ %13, %do.body.lr.ph.i18 ], [ %add5.i25, %do.body.i28.do.body.i28_crit_edge ]
  %arrayidx3.i21 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call117.i19
  %18 = ptrtoint ptr %arrayidx3.i21 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx3.i21, align 4
  %add.i22 = add i32 %19, %17
  %20 = inttoptr i32 %add.i22 to ptr
  %arrayidx4.i23 = getelementptr [11 x i8], ptr %20, i32 0, i32 4
  %21 = ptrtoint ptr %arrayidx4.i23 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx4.i23, align 1
  %conv.i24 = sext i8 %22 to i32
  %add5.i25 = add i32 %x.016.i20, %conv.i24
  %call1.i26 = tail call i32 @cpumask_next(i32 noundef %call117.i19, ptr noundef nonnull @__cpu_online_mask) #17
  %cmp.i27 = icmp ult i32 %call1.i26, %14
  br i1 %cmp.i27, label %do.body.i28.do.body.i28_crit_edge, label %do.body.i28.zone_page_state_snapshot.exit30_crit_edge

do.body.i28.zone_page_state_snapshot.exit30_crit_edge: ; preds = %do.body.i28
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit30

do.body.i28.do.body.i28_crit_edge:                ; preds = %do.body.i28
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i28

zone_page_state_snapshot.exit30:                  ; preds = %do.body.i28.zone_page_state_snapshot.exit30_crit_edge, %zone_page_state_snapshot.exit.zone_page_state_snapshot.exit30_crit_edge
  %x.0.lcssa.i29 = phi i32 [ %13, %zone_page_state_snapshot.exit.zone_page_state_snapshot.exit30_crit_edge ], [ %add5.i25, %do.body.i28.zone_page_state_snapshot.exit30_crit_edge ]
  %23 = tail call i32 @llvm.smax.i32(i32 %x.0.lcssa.i29, i32 0) #13
  %add = add nuw i32 %23, %11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @nr_swap_pages, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_swap_pages to i32))
  %24 = load volatile i32, ptr @nr_swap_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp1.i = icmp sgt i32 %24, 0
  br i1 %cmp1.i, label %zone_page_state_snapshot.exit30.if.then_crit_edge, label %if.end7.i

zone_page_state_snapshot.exit30.if.then_crit_edge: ; preds = %zone_page_state_snapshot.exit30
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

if.end7.i:                                        ; preds = %zone_page_state_snapshot.exit30
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @numa_demotion_enabled to i32))
  %25 = load i8, ptr @numa_demotion_enabled, align 1, !range !566
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.not.i.i = icmp eq i8 %25, 0
  br i1 %tobool.not.i.i, label %if.end7.i.if.end_crit_edge, label %can_reclaim_anon_pages.exit

if.end7.i.if.end_crit_edge:                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

can_reclaim_anon_pages.exit:                      ; preds = %if.end7.i
  %call9.i.i = tail call i32 @next_demotion_node(i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call9.i.i)
  %cmp.i.i.not = icmp eq i32 %call9.i.i, -1
  br i1 %cmp.i.i.not, label %can_reclaim_anon_pages.exit.if.end_crit_edge, label %can_reclaim_anon_pages.exit.if.then_crit_edge

can_reclaim_anon_pages.exit.if.then_crit_edge:    ; preds = %can_reclaim_anon_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

can_reclaim_anon_pages.exit.if.end_crit_edge:     ; preds = %can_reclaim_anon_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %can_reclaim_anon_pages.exit.if.then_crit_edge, %zone_page_state_snapshot.exit30.if.then_crit_edge
  %arrayidx.i31 = getelementptr %struct.zone, ptr %zone, i32 0, i32 37, i32 1
  %call.i.i.i32 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i31, i32 noundef 4) #13
  %26 = ptrtoint ptr %arrayidx.i31 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %arrayidx.i31, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %call114.i33 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #17
  call void @__sanitizer_cov_trace_cmp4(i32 %call114.i33, i32 %28)
  %cmp15.i34 = icmp ult i32 %call114.i33, %28
  br i1 %cmp15.i34, label %do.body.lr.ph.i36, label %if.then.zone_page_state_snapshot.exit48_crit_edge

if.then.zone_page_state_snapshot.exit48_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit48

do.body.lr.ph.i36:                                ; preds = %if.then
  %per_cpu_zonestats.i35 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 6
  %29 = ptrtoint ptr %per_cpu_zonestats.i35 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %per_cpu_zonestats.i35, align 4
  %31 = ptrtoint ptr %30 to i32
  br label %do.body.i46

do.body.i46:                                      ; preds = %do.body.i46.do.body.i46_crit_edge, %do.body.lr.ph.i36
  %call117.i37 = phi i32 [ %call114.i33, %do.body.lr.ph.i36 ], [ %call1.i44, %do.body.i46.do.body.i46_crit_edge ]
  %x.016.i38 = phi i32 [ %27, %do.body.lr.ph.i36 ], [ %add5.i43, %do.body.i46.do.body.i46_crit_edge ]
  %arrayidx3.i39 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call117.i37
  %32 = ptrtoint ptr %arrayidx3.i39 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx3.i39, align 4
  %add.i40 = add i32 %33, %31
  %34 = inttoptr i32 %add.i40 to ptr
  %arrayidx4.i41 = getelementptr [11 x i8], ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %arrayidx4.i41 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx4.i41, align 1
  %conv.i42 = sext i8 %36 to i32
  %add5.i43 = add i32 %x.016.i38, %conv.i42
  %call1.i44 = tail call i32 @cpumask_next(i32 noundef %call117.i37, ptr noundef nonnull @__cpu_online_mask) #17
  %cmp.i45 = icmp ult i32 %call1.i44, %28
  br i1 %cmp.i45, label %do.body.i46.do.body.i46_crit_edge, label %do.body.i46.zone_page_state_snapshot.exit48_crit_edge

do.body.i46.zone_page_state_snapshot.exit48_crit_edge: ; preds = %do.body.i46
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit48

do.body.i46.do.body.i46_crit_edge:                ; preds = %do.body.i46
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i46

zone_page_state_snapshot.exit48:                  ; preds = %do.body.i46.zone_page_state_snapshot.exit48_crit_edge, %if.then.zone_page_state_snapshot.exit48_crit_edge
  %x.0.lcssa.i47 = phi i32 [ %27, %if.then.zone_page_state_snapshot.exit48_crit_edge ], [ %add5.i43, %do.body.i46.zone_page_state_snapshot.exit48_crit_edge ]
  %37 = tail call i32 @llvm.smax.i32(i32 %x.0.lcssa.i47, i32 0) #13
  %arrayidx.i49 = getelementptr %struct.zone, ptr %zone, i32 0, i32 37, i32 2
  %call.i.i.i50 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i49, i32 noundef 4) #13
  %38 = ptrtoint ptr %arrayidx.i49 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %arrayidx.i49, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %40 = load i32, ptr @nr_cpu_ids, align 4
  %call114.i51 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #17
  call void @__sanitizer_cov_trace_cmp4(i32 %call114.i51, i32 %40)
  %cmp15.i52 = icmp ult i32 %call114.i51, %40
  br i1 %cmp15.i52, label %do.body.lr.ph.i54, label %zone_page_state_snapshot.exit48.zone_page_state_snapshot.exit66_crit_edge

zone_page_state_snapshot.exit48.zone_page_state_snapshot.exit66_crit_edge: ; preds = %zone_page_state_snapshot.exit48
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit66

do.body.lr.ph.i54:                                ; preds = %zone_page_state_snapshot.exit48
  %per_cpu_zonestats.i53 = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 6
  %41 = ptrtoint ptr %per_cpu_zonestats.i53 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %per_cpu_zonestats.i53, align 4
  %43 = ptrtoint ptr %42 to i32
  br label %do.body.i64

do.body.i64:                                      ; preds = %do.body.i64.do.body.i64_crit_edge, %do.body.lr.ph.i54
  %call117.i55 = phi i32 [ %call114.i51, %do.body.lr.ph.i54 ], [ %call1.i62, %do.body.i64.do.body.i64_crit_edge ]
  %x.016.i56 = phi i32 [ %39, %do.body.lr.ph.i54 ], [ %add5.i61, %do.body.i64.do.body.i64_crit_edge ]
  %arrayidx3.i57 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call117.i55
  %44 = ptrtoint ptr %arrayidx3.i57 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx3.i57, align 4
  %add.i58 = add i32 %45, %43
  %46 = inttoptr i32 %add.i58 to ptr
  %arrayidx4.i59 = getelementptr [11 x i8], ptr %46, i32 0, i32 2
  %47 = ptrtoint ptr %arrayidx4.i59 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %arrayidx4.i59, align 1
  %conv.i60 = sext i8 %48 to i32
  %add5.i61 = add i32 %x.016.i56, %conv.i60
  %call1.i62 = tail call i32 @cpumask_next(i32 noundef %call117.i55, ptr noundef nonnull @__cpu_online_mask) #17
  %cmp.i63 = icmp ult i32 %call1.i62, %40
  br i1 %cmp.i63, label %do.body.i64.do.body.i64_crit_edge, label %do.body.i64.zone_page_state_snapshot.exit66_crit_edge

do.body.i64.zone_page_state_snapshot.exit66_crit_edge: ; preds = %do.body.i64
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit66

do.body.i64.do.body.i64_crit_edge:                ; preds = %do.body.i64
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i64

zone_page_state_snapshot.exit66:                  ; preds = %do.body.i64.zone_page_state_snapshot.exit66_crit_edge, %zone_page_state_snapshot.exit48.zone_page_state_snapshot.exit66_crit_edge
  %x.0.lcssa.i65 = phi i32 [ %39, %zone_page_state_snapshot.exit48.zone_page_state_snapshot.exit66_crit_edge ], [ %add5.i61, %do.body.i64.zone_page_state_snapshot.exit66_crit_edge ]
  %49 = tail call i32 @llvm.smax.i32(i32 %x.0.lcssa.i65, i32 0) #13
  %add6 = add i32 %37, %add
  %add7 = add i32 %add6, %49
  br label %if.end

if.end:                                           ; preds = %zone_page_state_snapshot.exit66, %can_reclaim_anon_pages.exit.if.end_crit_edge, %if.end7.i.if.end_crit_edge
  %nr.0 = phi i32 [ %add7, %zone_page_state_snapshot.exit66 ], [ %add, %can_reclaim_anon_pages.exit.if.end_crit_edge ], [ %add, %if.end7.i.if.end_crit_edge ]
  ret i32 %nr.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @prealloc_shrinker(ptr noundef %shrinker) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end4_crit_edge, label %if.then

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4

if.then:                                          ; preds = %entry
  %call = tail call fastcc i32 @prealloc_memcg_shrinker(ptr noundef %shrinker)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -38, i32 %call)
  %cmp.not = icmp eq i32 %call, -38
  br i1 %cmp.not, label %if.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and3 = and i32 %3, -5
  store i32 %and3, ptr %flags, align 4
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry.if.end4_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %4 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %4, i32 noundef 3520, i32 noundef 4) #18
  %nr_deferred = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 7
  %5 = ptrtoint ptr %nr_deferred to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call7.i.i, ptr %nr_deferred, align 4
  %tobool12.not = icmp eq ptr %call7.i.i, null
  %spec.select = select i1 %tobool12.not, i32 -12, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then.cleanup_crit_edge ], [ %spec.select, %if.end4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @prealloc_memcg_shrinker(ptr noundef %shrinker) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@prealloc_memcg_shrinker, %cleanup)) #13
          to label %if.end [label %cleanup], !srcloc !567

if.end:                                           ; preds = %entry
  tail call void @down_write(ptr noundef nonnull @shrinker_rwsem) #13
  %call1 = tail call i32 @idr_alloc(ptr noundef nonnull @shrinker_idr, ptr noundef %shrinker, i32 noundef 0, i32 noundef 0, i32 noundef 3264) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.end.unlock_crit_edge, label %if.end3

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %unlock

if.end3:                                          ; preds = %if.end
  %0 = load i32, ptr @shrinker_nr_max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call1, i32 %0)
  %cmp4.not = icmp slt i32 %call1, %0
  br i1 %cmp4.not, label %if.end3.if.end10_crit_edge, label %if.then5

if.end3.if.end10_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

if.then5:                                         ; preds = %if.end3
  %add.i = add nuw i32 %call1, 1
  %or.i.i = or i32 %call1, 31
  %add.i.i = add i32 %or.i.i, 1
  %sub1.i.i = add i32 %0, -1
  %or2.i.i = or i32 %sub1.i.i, 31
  %add3.i.i = add i32 %or2.i.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %add3.i.i)
  %cmp.i.i = icmp sgt i32 %add.i.i, %add3.i.i
  br i1 %cmp.i.i, label %if.end.i, label %if.then5.expand_shrinker_info.exit.thread_crit_edge

if.then5.expand_shrinker_info.exit.thread_crit_edge: ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  br label %expand_shrinker_info.exit.thread

if.end.i:                                         ; preds = %if.then5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %1 = load ptr, ptr @root_mem_cgroup, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.i.expand_shrinker_info.exit.thread_crit_edge, label %do.body.i

if.end.i.expand_shrinker_info.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %expand_shrinker_info.exit.thread

do.body.i:                                        ; preds = %if.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool3.not.i = icmp eq i32 %2, 0
  br i1 %tobool3.not.i, label %do.body.i.if.end21.i_crit_edge, label %land.rhs.i

do.body.i.if.end21.i_crit_edge:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21.i

land.rhs.i:                                       ; preds = %do.body.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 6), i32 noundef -1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end21.i_crit_edge, !prof !558

land.rhs.i.if.end21.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end21.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 313, i32 noundef 9, ptr noundef null) #13
  br label %if.end21.i

if.end21.i:                                       ; preds = %do.end.i, %land.rhs.i.if.end21.i_crit_edge, %do.body.i.if.end21.i_crit_edge
  %sub.i.i = add nuw i32 %call1, 32
  %div.i.i = sdiv i32 %sub.i.i, 32
  %mul.i.i = shl nsw i32 %div.i.i, 2
  %sub.i55.i = shl i32 %add.i, 2
  %or.i56.i = add i32 %sub.i55.i, -4
  %add.i57.i = or i32 %or.i56.i, 124
  %mul.i58.i = add i32 %add.i57.i, 4
  %3 = load i32, ptr @shrinker_nr_max, align 4
  %sub.i59.i = add i32 %3, 31
  %div.i60.i = sdiv i32 %sub.i59.i, 32
  %mul.i61.i = shl nsw i32 %div.i60.i, 2
  %sub.i62.i = shl i32 %3, 2
  %or.i63.i = add i32 %sub.i62.i, -4
  %add.i64.i = or i32 %or.i63.i, 124
  %mul.i65.i = add i32 %add.i64.i, 4
  %call34.i = tail call ptr @mem_cgroup_iter(ptr noundef null, ptr noundef null, ptr noundef null) #13
  %add.i66.i = add nsw i32 %mul.i.i, 16
  %add1.i.i = add i32 %add.i66.i, %mul.i58.i
  %sub.i67.i = sub nsw i32 %mul.i.i, %mul.i61.i
  %sub15.i.i = sub i32 %mul.i58.i, %mul.i65.i
  br label %do.body35.i

do.body35.i:                                      ; preds = %do.cond40.i.do.body35.i_crit_edge, %if.end21.i
  %memcg.0.i = phi ptr [ %call34.i, %if.end21.i ], [ %call41.i, %do.cond40.i.do.body35.i_crit_edge ]
  %nodeinfo.i.i = getelementptr %struct.mem_cgroup, ptr %memcg.0.i, i32 0, i32 45
  %4 = ptrtoint ptr %nodeinfo.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nodeinfo.i.i, align 4
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 6), i32 noundef -1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %do.body35.i.shrinker_info_protected.exit.i.i_crit_edge

do.body35.i.shrinker_info_protected.exit.i.i_crit_edge: ; preds = %do.body35.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %do.body35.i
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %land.lhs.true.i.i.i.shrinker_info_protected.exit.i.i_crit_edge, label %land.lhs.true3.i.i.i

land.lhs.true.i.i.i.shrinker_info_protected.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit.i.i

land.lhs.true3.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b5.i.i.i = load i1, ptr @shrinker_info_protected.__warned, align 1
  br i1 %.b5.i.i.i, label %land.lhs.true3.i.i.i.shrinker_info_protected.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true3.i.i.i.shrinker_info_protected.exit.i.i_crit_edge: ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @shrinker_info_protected.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.21, i32 noundef 212, ptr noundef nonnull @.str.148) #13
  br label %shrinker_info_protected.exit.i.i

shrinker_info_protected.exit.i.i:                 ; preds = %if.then.i.i.i, %land.lhs.true3.i.i.i.shrinker_info_protected.exit.i.i_crit_edge, %land.lhs.true.i.i.i.shrinker_info_protected.exit.i.i_crit_edge, %do.body35.i.shrinker_info_protected.exit.i.i_crit_edge
  %6 = ptrtoint ptr %nodeinfo.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nodeinfo.i.i, align 4
  %shrinker_info.i.i.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %shrinker_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %shrinker_info.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %shrinker_info_protected.exit.i.i.do.cond40.i_crit_edge, label %if.end.i.i

shrinker_info_protected.exit.i.i.do.cond40.i_crit_edge: ; preds = %shrinker_info_protected.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.cond40.i

if.end.i.i:                                       ; preds = %shrinker_info_protected.exit.i.i
  %call2.i.i = tail call noalias ptr @kvmalloc_node(i32 noundef %add1.i.i, i32 noundef 3264, i32 noundef 0) #16
  %tobool3.not.i.i = icmp eq ptr %call2.i.i, null
  br i1 %tobool3.not.i.i, label %if.then7, label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i.i = getelementptr %struct.shrinker_info, ptr %call2.i.i, i32 1
  %nr_deferred.i.i = getelementptr inbounds %struct.shrinker_info, ptr %call2.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %nr_deferred.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %add.ptr.i.i, ptr %nr_deferred.i.i, align 4
  %add.ptr7.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %mul.i58.i
  %map.i.i = getelementptr inbounds %struct.shrinker_info, ptr %call2.i.i, i32 0, i32 2
  %11 = ptrtoint ptr %map.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %add.ptr7.i.i, ptr %map.i.i, align 4
  %12 = call ptr @memset(ptr %add.ptr7.i.i, i32 255, i32 %mul.i61.i)
  %13 = load ptr, ptr %map.i.i, align 4
  %add.ptr10.i.i = getelementptr i8, ptr %13, i32 %mul.i61.i
  %14 = call ptr @memset(ptr %add.ptr10.i.i, i32 0, i32 %sub.i67.i)
  %15 = load ptr, ptr %nr_deferred.i.i, align 4
  %nr_deferred12.i.i = getelementptr inbounds %struct.shrinker_info, ptr %9, i32 0, i32 1
  %16 = ptrtoint ptr %nr_deferred12.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nr_deferred12.i.i, align 4
  %18 = call ptr @memcpy(ptr %15, ptr %17, i32 %mul.i65.i)
  %19 = load ptr, ptr %nr_deferred.i.i, align 4
  %add.ptr14.i.i = getelementptr i8, ptr %19, i32 %mul.i65.i
  %20 = call ptr @memset(ptr %add.ptr14.i.i, i32 0, i32 %sub15.i.i)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !568
  %shrinker_info38.i.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %5, i32 0, i32 5
  %21 = ptrtoint ptr %shrinker_info38.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %call2.i.i, ptr %shrinker_info38.i.i, align 4
  tail call void @kvfree_call_rcu(ptr noundef nonnull %9, ptr noundef null) #13
  br label %do.cond40.i

do.cond40.i:                                      ; preds = %if.end5.i.i, %shrinker_info_protected.exit.i.i.do.cond40.i_crit_edge
  %call41.i = tail call ptr @mem_cgroup_iter(ptr noundef null, ptr noundef %memcg.0.i, ptr noundef null) #13
  %cmp42.not.i = icmp eq ptr %call41.i, null
  br i1 %cmp42.not.i, label %do.cond40.i.expand_shrinker_info.exit.thread_crit_edge, label %do.cond40.i.do.body35.i_crit_edge

do.cond40.i.do.body35.i_crit_edge:                ; preds = %do.cond40.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body35.i

do.cond40.i.expand_shrinker_info.exit.thread_crit_edge: ; preds = %do.cond40.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %expand_shrinker_info.exit.thread

expand_shrinker_info.exit.thread:                 ; preds = %do.cond40.i.expand_shrinker_info.exit.thread_crit_edge, %if.end.i.expand_shrinker_info.exit.thread_crit_edge, %if.then5.expand_shrinker_info.exit.thread_crit_edge
  store i32 %add.i, ptr @shrinker_nr_max, align 4
  br label %if.end10

if.then7:                                         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @mem_cgroup_iter_break(ptr noundef null, ptr noundef %memcg.0.i) #13
  %call8 = tail call ptr @idr_remove(ptr noundef nonnull @shrinker_idr, i32 noundef %call1) #13
  br label %unlock

if.end10:                                         ; preds = %expand_shrinker_info.exit.thread, %if.end3.if.end10_crit_edge
  %id11 = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 6
  %22 = ptrtoint ptr %id11 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %call1, ptr %id11, align 4
  br label %unlock

unlock:                                           ; preds = %if.end10, %if.then7, %if.end.unlock_crit_edge
  %ret.0 = phi i32 [ -12, %if.end.unlock_crit_edge ], [ -12, %if.then7 ], [ 0, %if.end10 ]
  tail call void @up_write(ptr noundef nonnull @shrinker_rwsem) #13
  br label %cleanup

cleanup:                                          ; preds = %unlock, %entry
  %retval.0 = phi i32 [ %ret.0, %unlock ], [ -38, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_prealloced_shrinker(ptr nocapture noundef %shrinker) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @down_write(ptr noundef nonnull @shrinker_rwsem) #13
  %id1.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 6
  %2 = ptrtoint ptr %id1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %id1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.i = icmp slt i32 %3, 0
  br i1 %cmp.i, label %do.body3.i, label %do.body9.i, !prof !558

do.body3.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 382, 0\0A.popsection", ""() #13, !srcloc !569
  unreachable

do.body9.i:                                       ; preds = %if.then
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool10.not.i = icmp eq i32 %4, 0
  br i1 %tobool10.not.i, label %do.body9.i.unregister_memcg_shrinker.exit_crit_edge, label %land.rhs.i

do.body9.i.unregister_memcg_shrinker.exit_crit_edge: ; preds = %do.body9.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %unregister_memcg_shrinker.exit

land.rhs.i:                                       ; preds = %do.body9.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 6), i32 noundef -1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp11.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp11.not.i, label %do.end29.i, label %land.rhs.i.unregister_memcg_shrinker.exit_crit_edge, !prof !558

land.rhs.i.unregister_memcg_shrinker.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %unregister_memcg_shrinker.exit

do.end29.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 384, i32 noundef 9, ptr noundef null) #13
  br label %unregister_memcg_shrinker.exit

unregister_memcg_shrinker.exit:                   ; preds = %do.end29.i, %land.rhs.i.unregister_memcg_shrinker.exit_crit_edge, %do.body9.i.unregister_memcg_shrinker.exit_crit_edge
  %call44.i = tail call ptr @idr_remove(ptr noundef nonnull @shrinker_idr, i32 noundef %3) #13
  tail call void @up_write(ptr noundef nonnull @shrinker_rwsem) #13
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %nr_deferred = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 7
  %5 = ptrtoint ptr %nr_deferred to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nr_deferred, align 4
  tail call void @kfree(ptr noundef %6) #13
  %7 = ptrtoint ptr %nr_deferred to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %nr_deferred, align 4
  br label %return

return:                                           ; preds = %if.end, %unregister_memcg_shrinker.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @register_shrinker_prepared(ptr noundef %shrinker) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @shrinker_rwsem) #13
  %list = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 5
  %0 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @shrinker_list, i32 0, i32 1), align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %0, ptr noundef nonnull @shrinker_list) #13
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_add_tail.exit_crit_edge

entry.list_add_tail.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  store ptr %list, ptr getelementptr inbounds (%struct.list_head, ptr @shrinker_list, i32 0, i32 1), align 4
  %1 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @shrinker_list, ptr %list, align 4
  %prev3.i.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 5, i32 1
  %2 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %0, ptr %prev3.i.i, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %list, ptr %0, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %entry.list_add_tail.exit_crit_edge
  %flags = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 4
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %or = or i32 %5, 1
  store i32 %or, ptr %flags, align 4
  tail call void @up_write(ptr noundef nonnull @shrinker_rwsem) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @register_shrinker(ptr noundef %shrinker) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 4
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end4.i_crit_edge, label %if.then.i

entry.if.end4.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end4.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call fastcc i32 @prealloc_memcg_shrinker(ptr noundef %shrinker) #13
  %2 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values)
  switch i32 %call.i, label %if.then.i.cleanup_crit_edge [
    i32 -38, label %if.end.i
    i32 0, label %if.then.i.if.end_crit_edge
  ]

if.then.i.if.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i, align 4
  %and3.i = and i32 %4, -5
  store i32 %and3.i, ptr %flags.i, align 4
  br label %if.end4.i

if.end4.i:                                        ; preds = %if.end.i, %entry.if.end4.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %5 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %5, i32 noundef 3520, i32 noundef 4) #18
  %nr_deferred.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 7
  %6 = ptrtoint ptr %nr_deferred.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call7.i.i.i, ptr %nr_deferred.i, align 4
  %tobool12.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool12.not.i, label %if.end4.i.cleanup_crit_edge, label %if.end4.i.if.end_crit_edge

if.end4.i.if.end_crit_edge:                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end4.i.cleanup_crit_edge:                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %if.end4.i.if.end_crit_edge, %if.then.i.if.end_crit_edge
  tail call void @down_write(ptr noundef nonnull @shrinker_rwsem) #13
  %list.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 5
  %7 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @shrinker_list, i32 0, i32 1), align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %list.i, ptr noundef %7, ptr noundef nonnull @shrinker_list) #13
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end.register_shrinker_prepared.exit_crit_edge

if.end.register_shrinker_prepared.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %register_shrinker_prepared.exit

if.end.i.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  store ptr %list.i, ptr getelementptr inbounds (%struct.list_head, ptr @shrinker_list, i32 0, i32 1), align 4
  %8 = ptrtoint ptr %list.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @shrinker_list, ptr %list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 5, i32 1
  %9 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %7, ptr %prev3.i.i.i, align 4
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %list.i, ptr %7, align 4
  br label %register_shrinker_prepared.exit

register_shrinker_prepared.exit:                  ; preds = %if.end.i.i.i, %if.end.register_shrinker_prepared.exit_crit_edge
  %11 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags.i, align 4
  %or.i = or i32 %12, 1
  store i32 %or.i, ptr %flags.i, align 4
  tail call void @up_write(ptr noundef nonnull @shrinker_rwsem) #13
  br label %cleanup

cleanup:                                          ; preds = %register_shrinker_prepared.exit, %if.end4.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %register_shrinker_prepared.exit ], [ -12, %if.end4.i.cleanup_crit_edge ], [ %call.i, %if.then.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unregister_shrinker(ptr noundef %shrinker) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %entry
  tail call void @down_write(ptr noundef nonnull @shrinker_rwsem) #13
  %list = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #13
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_del.exit_crit_edge

if.end.list_del.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 5, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end.list_del.exit_crit_edge
  %8 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 256 to ptr), ptr %list, align 4
  %prev.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 5, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 4
  %and2 = and i32 %11, -2
  store i32 %and2, ptr %flags, align 4
  %and4 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %list_del.exit.if.end7_crit_edge, label %if.then6

list_del.exit.if.end7_crit_edge:                  ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.then6:                                         ; preds = %list_del.exit
  %id1.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 6
  %12 = ptrtoint ptr %id1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp.i = icmp slt i32 %13, 0
  br i1 %cmp.i, label %do.body3.i, label %do.body9.i, !prof !558

do.body3.i:                                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 382, 0\0A.popsection", ""() #13, !srcloc !569
  unreachable

do.body9.i:                                       ; preds = %if.then6
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %14 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool10.not.i = icmp eq i32 %14, 0
  br i1 %tobool10.not.i, label %do.body9.i.unregister_memcg_shrinker.exit_crit_edge, label %land.rhs.i

do.body9.i.unregister_memcg_shrinker.exit_crit_edge: ; preds = %do.body9.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %unregister_memcg_shrinker.exit

land.rhs.i:                                       ; preds = %do.body9.i
  %call.i.i15 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 6), i32 noundef -1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i15)
  %cmp11.not.i = icmp eq i32 %call.i.i15, 0
  br i1 %cmp11.not.i, label %do.end29.i, label %land.rhs.i.unregister_memcg_shrinker.exit_crit_edge, !prof !558

land.rhs.i.unregister_memcg_shrinker.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %unregister_memcg_shrinker.exit

do.end29.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 384, i32 noundef 9, ptr noundef null) #13
  br label %unregister_memcg_shrinker.exit

unregister_memcg_shrinker.exit:                   ; preds = %do.end29.i, %land.rhs.i.unregister_memcg_shrinker.exit_crit_edge, %do.body9.i.unregister_memcg_shrinker.exit_crit_edge
  %call44.i = tail call ptr @idr_remove(ptr noundef nonnull @shrinker_idr, i32 noundef %13) #13
  br label %if.end7

if.end7:                                          ; preds = %unregister_memcg_shrinker.exit, %list_del.exit.if.end7_crit_edge
  tail call void @up_write(ptr noundef nonnull @shrinker_rwsem) #13
  %nr_deferred = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 7
  %15 = ptrtoint ptr %nr_deferred to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %nr_deferred, align 4
  tail call void @kfree(ptr noundef %16) #13
  %17 = ptrtoint ptr %nr_deferred to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %nr_deferred, align 4
  br label %return

return:                                           ; preds = %if.end7, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @synchronize_shrinkers() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @shrinker_rwsem) #13
  tail call void @up_write(ptr noundef nonnull @shrinker_rwsem) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @drop_slab() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  br label %do.body.i

do.body.i:                                        ; preds = %do.cond6.i.do.body.i_crit_edge, %entry
  %shift.0.i = phi i32 [ 0, %entry ], [ %inc.i, %do.cond6.i.do.body.i_crit_edge ]
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %stack.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %stack.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %stack.i.i.i.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %and1.i.i.i.i.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %do.body.i.if.end.i_crit_edge, label %fatal_signal_pending.exit.i

do.body.i.if.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

fatal_signal_pending.exit.i:                      ; preds = %do.body.i
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 116, i32 1
  %8 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %signal.i.i.i, align 4
  %10 = and i32 %9, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i, label %fatal_signal_pending.exit.i.if.end.i_crit_edge, label %fatal_signal_pending.exit.i.drop_slab_node.exit_crit_edge

fatal_signal_pending.exit.i.drop_slab_node.exit_crit_edge: ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %drop_slab_node.exit

fatal_signal_pending.exit.i.if.end.i_crit_edge:   ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.end.i:                                         ; preds = %fatal_signal_pending.exit.i.if.end.i_crit_edge, %do.body.i.if.end.i_crit_edge
  %call2.i = tail call ptr @mem_cgroup_iter(ptr noundef null, ptr noundef null, ptr noundef null) #13
  br label %do.body3.i

do.body3.i:                                       ; preds = %do.body3.i.do.body3.i_crit_edge, %if.end.i
  %freed.1.i = phi i32 [ 0, %if.end.i ], [ %add.i, %do.body3.i.do.body3.i_crit_edge ]
  %memcg.0.i = phi ptr [ %call2.i, %if.end.i ], [ %call5.i, %do.body3.i.do.body3.i_crit_edge ]
  %call4.i = tail call fastcc i32 @shrink_slab(i32 noundef 3264, i32 noundef 0, ptr noundef %memcg.0.i, i32 noundef 0) #13
  %add.i = add i32 %call4.i, %freed.1.i
  %call5.i = tail call ptr @mem_cgroup_iter(ptr noundef null, ptr noundef %memcg.0.i, ptr noundef null) #13
  %cmp.not.i = icmp eq ptr %call5.i, null
  br i1 %cmp.not.i, label %do.cond6.i, label %do.body3.i.do.body3.i_crit_edge

do.body3.i.do.body3.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body3.i

do.cond6.i:                                       ; preds = %do.body3.i
  %inc.i = add i32 %shift.0.i, 1
  %shr.i = lshr i32 %add.i, %shift.0.i
  %cmp7.i = icmp ugt i32 %shr.i, 1
  br i1 %cmp7.i, label %do.cond6.i.do.body.i_crit_edge, label %do.cond6.i.drop_slab_node.exit_crit_edge

do.cond6.i.drop_slab_node.exit_crit_edge:         ; preds = %do.cond6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %drop_slab_node.exit

do.cond6.i.do.body.i_crit_edge:                   ; preds = %do.cond6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i

drop_slab_node.exit:                              ; preds = %do.cond6.i.drop_slab_node.exit_crit_edge, %fatal_signal_pending.exit.i.drop_slab_node.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @reclaim_throttle(ptr noundef %pgdat, i32 noundef %reason) local_unnamed_addr #0 align 64 {
entry:
  %wait = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.pglist_data, ptr %pgdat, i32 0, i32 11, i32 %reason
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait) #13
  %0 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %1 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 2
  %2 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3
  %3 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %4 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %wait, align 4
  %5 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  %9 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %0, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @autoremove_wake_function, ptr %1, align 4
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %2, ptr %2, align 4
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %2, ptr %3, align 4
  %13 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flags.i, align 4
  %and.i92 = and i32 %18, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i92)
  %tobool.not = icmp eq i32 %and.i92, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %19 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task, align 8
  %flags7 = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %flags7 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags7, align 4
  %and = and i32 %22, 2097168
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  br i1 %tobool8.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  call void @__might_resched(ptr noundef nonnull @.str.21, i32 noundef 1070, i32 noundef 0) #13
  %call.i = call i32 @__cond_resched() #13
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %23 = zext i32 %reason to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.182)
  switch i32 %reason, label %land.end [
    i32 0, label %sw.bb
    i32 3, label %if.end.sw.bb21_crit_edge
    i32 2, label %if.end.sw.bb21_crit_edge96
    i32 1, label %if.end.sw.epilog_crit_edge
  ]

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end.sw.bb21_crit_edge96:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb21

if.end.sw.bb21_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb21

sw.bb:                                            ; preds = %if.end
  %nr_writeback_throttled = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 12
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %nr_writeback_throttled, i32 noundef 4) #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !570
  call void @llvm.prefetch.p0(ptr %nr_writeback_throttled, i32 1, i32 3, i32 1) #13
  %24 = call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_writeback_throttled, ptr %nr_writeback_throttled, i32 1, ptr elementtype(i32) %nr_writeback_throttled) #13, !srcloc !571
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %24, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !572
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i)
  %cmp = icmp eq i32 %asmresult.i.i.i.i, 1
  br i1 %cmp, label %do.body13, label %sw.bb.sw.epilog_crit_edge

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

do.body13:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 33), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 33) to i32))
  %25 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 33), align 4
  %26 = call i32 @llvm.smax.i32(i32 %25, i32 0) #13
  %nr_reclaim_start = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 13
  %27 = ptrtoint ptr %nr_reclaim_start to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile i32 %26, ptr %nr_reclaim_start, align 128
  br label %sw.epilog

sw.bb21:                                          ; preds = %if.end.sw.bb21_crit_edge, %if.end.sw.bb21_crit_edge96
  %kswapd_failures.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 17
  %28 = ptrtoint ptr %kswapd_failures.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %kswapd_failures.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %29)
  %cmp.i = icmp sgt i32 %29, 15
  br i1 %cmp.i, label %sw.bb21.if.then23_crit_edge, label %sw.bb21.for.body.i_crit_edge

sw.bb21.for.body.i_crit_edge:                     ; preds = %sw.bb21
  br label %for.body.i

sw.bb21.if.then23_crit_edge:                      ; preds = %sw.bb21
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then23

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %sw.bb21.for.body.i_crit_edge
  %i.022.i = phi i32 [ %inc.i, %cleanup.i.for.body.i_crit_edge ], [ 0, %sw.bb21.for.body.i_crit_edge ]
  %write_pending.021.i = phi i32 [ %write_pending.1.i, %cleanup.i.for.body.i_crit_edge ], [ 0, %sw.bb21.for.body.i_crit_edge ]
  %reclaimable.020.i = phi i32 [ %reclaimable.1.i, %cleanup.i.for.body.i_crit_edge ], [ 0, %sw.bb21.for.body.i_crit_edge ]
  %present_pages.i.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.022.i, i32 13
  %30 = ptrtoint ptr %present_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %present_pages.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.i.not.i = icmp eq i32 %31, 0
  br i1 %tobool.i.not.i, label %for.body.i.cleanup.i_crit_edge, label %if.end3.i

for.body.i.cleanup.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.i

if.end3.i:                                        ; preds = %for.body.i
  %add.ptr.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.022.i
  %call4.i = call i32 @zone_reclaimable_pages(ptr noundef %add.ptr.i) #13
  %add.i = add i32 %call4.i, %reclaimable.020.i
  %arrayidx.i.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.022.i, i32 37, i32 6
  %call.i.i.i.i93 = call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i, i32 noundef 4) #13
  %32 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %arrayidx.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %34 = load i32, ptr @nr_cpu_ids, align 4
  %call114.i.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #17
  call void @__sanitizer_cov_trace_cmp4(i32 %call114.i.i, i32 %34)
  %cmp15.i.i = icmp ult i32 %call114.i.i, %34
  br i1 %cmp15.i.i, label %do.body.lr.ph.i.i, label %if.end3.i.zone_page_state_snapshot.exit.i_crit_edge

if.end3.i.zone_page_state_snapshot.exit.i_crit_edge: ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit.i

do.body.lr.ph.i.i:                                ; preds = %if.end3.i
  %per_cpu_zonestats.i.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.022.i, i32 6
  %35 = ptrtoint ptr %per_cpu_zonestats.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %per_cpu_zonestats.i.i, align 4
  %37 = ptrtoint ptr %36 to i32
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %do.body.lr.ph.i.i
  %call117.i.i = phi i32 [ %call114.i.i, %do.body.lr.ph.i.i ], [ %call1.i.i, %do.body.i.i.do.body.i.i_crit_edge ]
  %x.016.i.i = phi i32 [ %33, %do.body.lr.ph.i.i ], [ %add5.i.i, %do.body.i.i.do.body.i.i_crit_edge ]
  %arrayidx3.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call117.i.i
  %38 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx3.i.i, align 4
  %add.i.i = add i32 %39, %37
  %40 = inttoptr i32 %add.i.i to ptr
  %arrayidx4.i.i = getelementptr [11 x i8], ptr %40, i32 0, i32 6
  %41 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx4.i.i, align 1
  %conv.i.i = sext i8 %42 to i32
  %add5.i.i = add i32 %x.016.i.i, %conv.i.i
  %call1.i.i = call i32 @cpumask_next(i32 noundef %call117.i.i, ptr noundef nonnull @__cpu_online_mask) #17
  %cmp.i.i = icmp ult i32 %call1.i.i, %34
  br i1 %cmp.i.i, label %do.body.i.i.do.body.i.i_crit_edge, label %do.body.i.i.zone_page_state_snapshot.exit.i_crit_edge

do.body.i.i.zone_page_state_snapshot.exit.i_crit_edge: ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %zone_page_state_snapshot.exit.i

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i.i

zone_page_state_snapshot.exit.i:                  ; preds = %do.body.i.i.zone_page_state_snapshot.exit.i_crit_edge, %if.end3.i.zone_page_state_snapshot.exit.i_crit_edge
  %x.0.lcssa.i.i = phi i32 [ %33, %if.end3.i.zone_page_state_snapshot.exit.i_crit_edge ], [ %add5.i.i, %do.body.i.i.zone_page_state_snapshot.exit.i_crit_edge ]
  %43 = call i32 @llvm.smax.i32(i32 %x.0.lcssa.i.i, i32 0) #13
  %add6.i = add i32 %43, %write_pending.021.i
  br label %cleanup.i

cleanup.i:                                        ; preds = %zone_page_state_snapshot.exit.i, %for.body.i.cleanup.i_crit_edge
  %reclaimable.1.i = phi i32 [ %add.i, %zone_page_state_snapshot.exit.i ], [ %reclaimable.020.i, %for.body.i.cleanup.i_crit_edge ]
  %write_pending.1.i = phi i32 [ %add6.i, %zone_page_state_snapshot.exit.i ], [ %write_pending.021.i, %for.body.i.cleanup.i_crit_edge ]
  %inc.i = add nuw nsw i32 %i.022.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 4
  br i1 %exitcond.not.i, label %skip_throttle_noprogress.exit, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

skip_throttle_noprogress.exit:                    ; preds = %cleanup.i
  %mul.i = shl i32 %write_pending.1.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i, i32 %reclaimable.1.i)
  %cmp7.not.i.not = icmp sgt i32 %mul.i, %reclaimable.1.i
  br i1 %cmp7.not.i.not, label %skip_throttle_noprogress.exit.sw.epilog_crit_edge, label %skip_throttle_noprogress.exit.if.then23_crit_edge

skip_throttle_noprogress.exit.if.then23_crit_edge: ; preds = %skip_throttle_noprogress.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then23

skip_throttle_noprogress.exit.sw.epilog_crit_edge: ; preds = %skip_throttle_noprogress.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then23:                                        ; preds = %skip_throttle_noprogress.exit.if.then23_crit_edge, %sw.bb21.if.then23_crit_edge
  call void @__might_resched(ptr noundef nonnull @.str.21, i32 noundef 1098, i32 noundef 0) #13
  %call.i94 = call i32 @__cond_resched() #13
  br label %cleanup

land.end:                                         ; preds = %if.end
  %.b90 = load i1, ptr @reclaim_throttle.__already_done, align 1
  br i1 %.b90, label %land.end.sw.epilog_crit_edge, label %if.then33, !prof !557

land.end.sw.epilog_crit_edge:                     ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then33:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @reclaim_throttle.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 1109, i32 noundef 9, ptr noundef null) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then33, %land.end.sw.epilog_crit_edge, %skip_throttle_noprogress.exit.sw.epilog_crit_edge, %do.body13, %sw.bb.sw.epilog_crit_edge, %if.end.sw.epilog_crit_edge
  %timeout.0 = phi i32 [ 10, %do.body13 ], [ 10, %sw.bb.sw.epilog_crit_edge ], [ 1, %skip_throttle_noprogress.exit.sw.epilog_crit_edge ], [ 2, %if.end.sw.epilog_crit_edge ], [ 100, %if.then33 ], [ 100, %land.end.sw.epilog_crit_edge ]
  call void @prepare_to_wait(ptr noundef %arrayidx, ptr noundef nonnull %wait, i32 noundef 2) #13
  %call67 = call i32 @schedule_timeout(i32 noundef %timeout.0) #13
  call void @finish_wait(ptr noundef %arrayidx, ptr noundef nonnull %wait) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %reason)
  %cmp68 = icmp eq i32 %reason, 0
  br i1 %cmp68, label %if.then69, label %sw.epilog.if.end71_crit_edge

sw.epilog.if.end71_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end71

if.then69:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  %nr_writeback_throttled70 = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 12
  %call.i.i91 = call zeroext i1 @__kasan_check_write(ptr noundef %nr_writeback_throttled70, i32 noundef 4) #13
  call void @llvm.prefetch.p0(ptr %nr_writeback_throttled70, i32 1, i32 3, i32 1) #13
  %44 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_writeback_throttled70, ptr %nr_writeback_throttled70, i32 1, ptr elementtype(i32) %nr_writeback_throttled70) #13, !srcloc !573
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %sw.epilog.if.end71_crit_edge
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %45 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %node_id, align 64
  %call72 = call i32 @jiffies_to_usecs(i32 noundef %timeout.0) #13
  %sub = sub i32 %timeout.0, %call67
  %call73 = call i32 @jiffies_to_usecs(i32 noundef %sub) #13
  call fastcc void @trace_mm_vmscan_throttled(i32 noundef %46, i32 noundef %call72, i32 noundef %call73, i32 noundef %reason)
  br label %cleanup

cleanup:                                          ; preds = %if.end71, %if.then23, %if.then
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @autoremove_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @prepare_to_wait(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_throttled(i32 noundef %nid, i32 noundef %usec_timeout, i32 noundef %usec_delayed, i32 noundef %reason) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_throttled, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_throttled, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !574
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_throttled, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nid, i32 noundef %usec_timeout, i32 noundef %usec_delayed, i32 noundef %reason) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !575
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !575
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_throttled, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_throttled.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_throttled.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 496, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jiffies_to_usecs(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__acct_reclaim_writeback(ptr noundef %pgdat, ptr noundef %folio, i32 noundef %nr_throttled) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp.i.not.i.i.i.i = icmp eq i32 %1, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i, label %folio_pgdat.exit.i, !prof !558

if.then.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.176) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #13, !srcloc !578
  unreachable

folio_pgdat.exit.i:                               ; preds = %entry
  %2 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %folio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp.i.not.i.i.i1.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i.i.i1.i, label %if.then.i.i.i2.i, label %PageHead.exit.i.i.i, !prof !558

if.then.i.i.i2.i:                                 ; preds = %folio_pgdat.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.153) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i.i.i:                              ; preds = %folio_pgdat.exit.i
  %4 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %folio, align 4
  %6 = and i32 %5, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i.i.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i.i.i, label %PageHead.exit.i.i.i.node_stat_add_folio.exit_crit_edge, label %if.end.i.i.i

PageHead.exit.i.i.i.node_stat_add_folio.exit_crit_edge: ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %node_stat_add_folio.exit

if.end.i.i.i:                                     ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %compound_nr.i.i.i = getelementptr %struct.page, ptr %folio, i32 1, i32 1, i32 0, i32 2
  %7 = ptrtoint ptr %compound_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %compound_nr.i.i.i, align 4
  br label %node_stat_add_folio.exit

node_stat_add_folio.exit:                         ; preds = %if.end.i.i.i, %PageHead.exit.i.i.i.node_stat_add_folio.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %8, %if.end.i.i.i ], [ 1, %PageHead.exit.i.i.i.node_stat_add_folio.exit_crit_edge ]
  tail call void @mod_node_page_state(ptr noundef nonnull @contig_page_data, i32 noundef 33, i32 noundef %retval.0.i.i.i) #13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 33), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 33) to i32))
  %9 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 33), align 4
  %10 = tail call i32 @llvm.smax.i32(i32 %9, i32 0) #13
  %nr_reclaim_start = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 13
  %11 = ptrtoint ptr %nr_reclaim_start to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %nr_reclaim_start, align 128
  %sub = sub i32 %10, %12
  %mul = shl i32 %nr_throttled, 5
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %mul)
  %cmp = icmp ugt i32 %sub, %mul
  br i1 %cmp, label %if.then, label %node_stat_add_folio.exit.if.end_crit_edge

node_stat_add_folio.exit.if.end_crit_edge:        ; preds = %node_stat_add_folio.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %node_stat_add_folio.exit
  call void @__sanitizer_cov_trace_pc() #15
  %reclaim_wait = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 11
  tail call void @__wake_up(ptr noundef %reclaim_wait, i32 noundef 3, i32 noundef 1, ptr noundef null) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %node_stat_add_folio.exit.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @remove_mapping(ptr noundef %mapping, ptr noundef %page) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__remove_mapping(ptr noundef %mapping, ptr noundef %page, i1 noundef zeroext false, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.then

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !557

if.then.i.i.i:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i = add i32 %2, -1
  br label %page_count.exit.i

if.end.i.i.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %page to i32
  br label %page_count.exit.i

page_count.exit.i:                                ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i29.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %3, %if.end.i.i.i ]
  %4 = inttoptr i32 %retval.0.i.i29.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #13
  %5 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.not.i = icmp eq i32 %6, 0
  br i1 %cmp.not.i, label %do.body6.i, label %if.then.i, !prof !557

if.then.i:                                        ; preds = %page_count.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.157) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page_ref.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 332, 0\0A.popsection", ""() #13, !srcloc !580
  unreachable

do.body6.i:                                       ; preds = %page_count.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %_refcount.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !581
  %7 = ptrtoint ptr %_refcount.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 1, ptr %_refcount.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_unfreeze, i32 0, i32 1), ptr blockaddress(@remove_mapping, %if.then22.i)) #13
          to label %return [label %if.then22.i], !srcloc !567

if.then22.i:                                      ; preds = %do.body6.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__page_ref_unfreeze(ptr noundef %page, i32 noundef 1) #13
  br label %return

return:                                           ; preds = %if.then22.i, %do.body6.i, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %entry.return_crit_edge ], [ 1, %do.body6.i ], [ 1, %if.then22.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__remove_mapping(ptr noundef %mapping, ptr noundef %page, i1 noundef zeroext %reclaimed, ptr noundef %target_memcg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %2, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i to ptr
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %cmp.i.not.i = icmp eq i32 %6, -1
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %0, align 4
  %and.i16.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !557

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i = add i32 %8, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %9 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %9, %if.end.i20.i ]
  %10 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %10, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #13, !srcloc !582
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !557

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i = add i32 %8, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #15
  %11 = ptrtoint ptr %page to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %11, %if.end.i27.i ]
  %12 = inttoptr i32 %retval.0.i28.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and1.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not, label %do.body4, label %do.body10, !prof !558

do.body4:                                         ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1248, 0\0A.popsection", ""() #13, !srcloc !583
  unreachable

do.body10:                                        ; preds = %PageLocked.exit
  %call11 = tail call ptr @page_mapping(ptr noundef %page) #13
  %cmp.not = icmp eq ptr %call11, %mapping
  br i1 %cmp.not, label %do.end27, label %do.body19, !prof !557

do.body19:                                        ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1249, 0\0A.popsection", ""() #13, !srcloc !584
  unreachable

do.end27:                                         ; preds = %do.body10
  %15 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %0, align 4
  %and.i.i134 = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i134)
  %tobool.not.i.i135 = icmp eq i32 %and.i.i134, 0
  br i1 %tobool.not.i.i135, label %if.end.i.i138, label %if.then.i.i137, !prof !557

if.then.i.i137:                                   ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i136 = add i32 %16, -1
  br label %_compound_head.exit.i140

if.end.i.i138:                                    ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #15
  %17 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i140

_compound_head.exit.i140:                         ; preds = %if.end.i.i138, %if.then.i.i137
  %retval.0.i.i139 = phi i32 [ %sub.i.i136, %if.then.i.i137 ], [ %17, %if.end.i.i138 ]
  %18 = inttoptr i32 %retval.0.i.i139 to ptr
  %19 = getelementptr inbounds %struct.page, ptr %18, i32 0, i32 1
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  %and.i.i.i.i.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_test_swapbacked.exit.i.i, label %if.then.i.i.i.i, !prof !557

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i140
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %18, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_swapbacked.exit.i.i:                   ; preds = %_compound_head.exit.i140
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %18, align 4
  %24 = and i32 %23, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.i.not.i.i = icmp eq i32 %24, 0
  br i1 %tobool.i.not.i.i, label %folio_test_swapbacked.exit.i.i.if.then29_crit_edge, label %land.rhs.i.i

folio_test_swapbacked.exit.i.i.if.then29_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then29

land.rhs.i.i:                                     ; preds = %folio_test_swapbacked.exit.i.i
  %25 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %19, align 4
  %and.i.i.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %PageSwapCache.exit, label %if.then.i.i.i, !prof !557

if.then.i.i.i:                                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %18, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

PageSwapCache.exit:                               ; preds = %land.rhs.i.i
  %27 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %18, align 4
  %29 = and i32 %28, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.i.i.not = icmp eq i32 %29, 0
  br i1 %tobool.i.i.not, label %PageSwapCache.exit.if.then29_crit_edge, label %PageSwapCache.exit.if.end30_crit_edge

PageSwapCache.exit.if.end30_crit_edge:            ; preds = %PageSwapCache.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end30

PageSwapCache.exit.if.then29_crit_edge:           ; preds = %PageSwapCache.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then29

if.then29:                                        ; preds = %PageSwapCache.exit.if.then29_crit_edge, %folio_test_swapbacked.exit.i.i.if.then29_crit_edge
  %30 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mapping, align 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %31, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #13
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %PageSwapCache.exit.if.end30_crit_edge
  %i_pages = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %i_pages) #13
  %32 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %33)
  %cmp.i.not.i.i = icmp eq i32 %33, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i189, label %PageHead.exit.i, !prof !558

if.then.i.i189:                                   ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.153) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i:                                  ; preds = %if.end30
  %34 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %page, align 4
  %36 = and i32 %35, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i = icmp eq i32 %36, 0
  br i1 %tobool.not.i, label %PageHead.exit.i.compound_nr.exit_crit_edge, label %if.end.i

PageHead.exit.i.compound_nr.exit_crit_edge:       ; preds = %PageHead.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %compound_nr.exit

if.end.i:                                         ; preds = %PageHead.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %compound_nr.i = getelementptr %struct.page, ptr %page, i32 1, i32 1, i32 0, i32 2
  %37 = ptrtoint ptr %compound_nr.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %compound_nr.i, align 4
  br label %compound_nr.exit

compound_nr.exit:                                 ; preds = %if.end.i, %PageHead.exit.i.compound_nr.exit_crit_edge
  %retval.0.i = phi i32 [ %38, %if.end.i ], [ 1, %PageHead.exit.i.compound_nr.exit_crit_edge ]
  %add = add i32 %retval.0.i, 1
  %_refcount.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !585
  tail call void @llvm.prefetch.p0(ptr %_refcount.i, i32 1, i32 3, i32 1) #13
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge, %compound_nr.exit
  %39 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i, ptr %_refcount.i, i32 %add, i32 0, ptr elementtype(i32) %_refcount.i) #13, !srcloc !586
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %39, 0
  %tobool.not.i.i.i.i190 = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i190, label %atomic_cmpxchg.exit.i, label %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge

do.body.i.i.i.i.do.body.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i.i.i.i

atomic_cmpxchg.exit.i:                            ; preds = %do.body.i.i.i.i
  %asmresult3.i.i.i.i = extractvalue { i32, i32 } %39, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !587
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult3.i.i.i.i, i32 %add)
  %cmp.i = icmp eq i32 %asmresult3.i.i.i.i, %add
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_freeze, i32 0, i32 1), ptr blockaddress(@__remove_mapping, %if.then.i191)) #13
          to label %page_ref_freeze.exit [label %if.then.i191], !srcloc !567

if.then.i191:                                     ; preds = %atomic_cmpxchg.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %lnot.ext.i = zext i1 %cmp.i to i32
  tail call void @__page_ref_freeze(ptr noundef %page, i32 noundef %add, i32 noundef %lnot.ext.i) #13
  br label %page_ref_freeze.exit

page_ref_freeze.exit:                             ; preds = %if.then.i191, %atomic_cmpxchg.exit.i
  br i1 %cmp.i, label %if.end35, label %page_ref_freeze.exit.cannot_free_crit_edge

page_ref_freeze.exit.cannot_free_crit_edge:       ; preds = %page_ref_freeze.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cannot_free

if.end35:                                         ; preds = %page_ref_freeze.exit
  %40 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %0, align 4
  %and.i.i141 = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i141)
  %tobool.not.i.i142 = icmp eq i32 %and.i.i141, 0
  br i1 %tobool.not.i.i142, label %if.end.i.i145, label %if.then.i.i144, !prof !557

if.then.i.i144:                                   ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i143 = add i32 %41, -1
  br label %_compound_head.exit.i148

if.end.i.i145:                                    ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #15
  %42 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i148

_compound_head.exit.i148:                         ; preds = %if.end.i.i145, %if.then.i.i144
  %retval.0.i.i146 = phi i32 [ %sub.i.i143, %if.then.i.i144 ], [ %42, %if.end.i.i145 ]
  %43 = inttoptr i32 %retval.0.i.i146 to ptr
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %45)
  %cmp.i.not.i147 = icmp eq i32 %45, -1
  %46 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %0, align 4
  %and.i13.i = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i147, label %if.then.i149, label %do.end8.i, !prof !558

if.then.i149:                                     ; preds = %_compound_head.exit.i148
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !557

if.then.i16.i:                                    ; preds = %if.then.i149
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i = add i32 %47, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i149
  call void @__sanitizer_cov_trace_pc() #15
  %48 = ptrtoint ptr %page to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %48, %if.end.i17.i ]
  %49 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %49, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #13, !srcloc !588
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i148
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !557

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i = add i32 %47, -1
  br label %PageDirty.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %50 = ptrtoint ptr %page to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %50, %if.end.i24.i ]
  %51 = inttoptr i32 %retval.0.i25.i to ptr
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  %54 = and i32 %53, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool37.not = icmp eq i32 %54, 0
  br i1 %tobool37.not, label %if.end45, label %if.then44, !prof !557

if.then44:                                        ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @page_ref_unfreeze(ptr noundef %page, i32 noundef %add)
  br label %cannot_free

if.end45:                                         ; preds = %PageDirty.exit
  %55 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %0, align 4
  %and.i.i151 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i151)
  %tobool.not.i.i152 = icmp eq i32 %and.i.i151, 0
  br i1 %tobool.not.i.i152, label %if.end.i.i155, label %if.then.i.i154, !prof !557

if.then.i.i154:                                   ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i153 = add i32 %56, -1
  br label %_compound_head.exit.i159

if.end.i.i155:                                    ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #15
  %57 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i159

_compound_head.exit.i159:                         ; preds = %if.end.i.i155, %if.then.i.i154
  %retval.0.i.i156 = phi i32 [ %sub.i.i153, %if.then.i.i154 ], [ %57, %if.end.i.i155 ]
  %58 = inttoptr i32 %retval.0.i.i156 to ptr
  %59 = getelementptr inbounds %struct.page, ptr %58, i32 0, i32 1
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %59, align 4
  %and.i.i.i.i.i157 = and i32 %61, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i157)
  %tobool.not.i.i.i.i158 = icmp eq i32 %and.i.i.i.i.i157, 0
  br i1 %tobool.not.i.i.i.i158, label %folio_test_swapbacked.exit.i.i162, label %if.then.i.i.i.i160, !prof !557

if.then.i.i.i.i160:                               ; preds = %_compound_head.exit.i159
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %58, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_swapbacked.exit.i.i162:                ; preds = %_compound_head.exit.i159
  %62 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %58, align 4
  %64 = and i32 %63, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool.i.not.i.i161 = icmp eq i32 %64, 0
  br i1 %tobool.i.not.i.i161, label %folio_test_swapbacked.exit.i.i162.if.else_crit_edge, label %land.rhs.i.i165

folio_test_swapbacked.exit.i.i162.if.else_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i162
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

land.rhs.i.i165:                                  ; preds = %folio_test_swapbacked.exit.i.i162
  %65 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %59, align 4
  %and.i.i.i.i163 = and i32 %66, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i163)
  %tobool.not.i.i.i164 = icmp eq i32 %and.i.i.i.i163, 0
  br i1 %tobool.not.i.i.i164, label %PageSwapCache.exit169, label %if.then.i.i.i166, !prof !557

if.then.i.i.i166:                                 ; preds = %land.rhs.i.i165
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %58, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

PageSwapCache.exit169:                            ; preds = %land.rhs.i.i165
  %67 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %58, align 4
  %69 = and i32 %68, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool.i.i167.not = icmp eq i32 %69, 0
  br i1 %tobool.i.i167.not, label %PageSwapCache.exit169.if.else_crit_edge, label %if.then47

PageSwapCache.exit169.if.else_crit_edge:          ; preds = %PageSwapCache.exit169
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

if.then47:                                        ; preds = %PageSwapCache.exit169
  %private = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %70 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %private, align 4
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %71, 0
  tail call void @mem_cgroup_swapout(ptr noundef %page, [1 x i32] %.fca.0.insert) #13
  br i1 %reclaimed, label %land.lhs.true, label %if.then47.if.end53_crit_edge

if.then47.if.end53_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end53

land.lhs.true:                                    ; preds = %if.then47
  %flags.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  %72 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %flags.i, align 4
  %74 = and i32 %73, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool50.not = icmp eq i32 %74, 0
  br i1 %tobool50.not, label %if.then51, label %land.lhs.true.if.end53_crit_edge

land.lhs.true.if.end53_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end53

if.then51:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  %call52 = tail call ptr @workingset_eviction(ptr noundef %page, ptr noundef %target_memcg) #13
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %land.lhs.true.if.end53_crit_edge, %if.then47.if.end53_crit_edge
  %shadow.0 = phi ptr [ null, %land.lhs.true.if.end53_crit_edge ], [ %call52, %if.then51 ], [ null, %if.then47.if.end53_crit_edge ]
  tail call void @__delete_from_swap_cache(ptr noundef %page, [1 x i32] %.fca.0.insert, ptr noundef %shadow.0) #13
  tail call void @_raw_spin_unlock_irq(ptr noundef %i_pages) #13
  tail call void @put_swap_page(ptr noundef %page, [1 x i32] %.fca.0.insert) #13
  br label %cleanup

if.else:                                          ; preds = %PageSwapCache.exit169.if.else_crit_edge, %folio_test_swapbacked.exit.i.i162.if.else_crit_edge
  %a_ops = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 9
  %75 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %a_ops, align 4
  %freepage58 = getelementptr inbounds %struct.address_space_operations, ptr %76, i32 0, i32 11
  %77 = ptrtoint ptr %freepage58 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %freepage58, align 4
  br i1 %reclaimed, label %land.lhs.true60, label %if.else.if.end70_crit_edge

if.else.if.end70_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end70

land.lhs.true60:                                  ; preds = %if.else
  %79 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %0, align 4
  %and.i.i195 = and i32 %80, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i195)
  %tobool.not.i.i196 = icmp eq i32 %and.i.i195, 0
  br i1 %tobool.not.i.i196, label %if.end.i.i199, label %if.then.i.i198, !prof !557

if.then.i.i198:                                   ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i197 = add i32 %80, -1
  br label %_compound_head.exit.i203

if.end.i.i199:                                    ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #15
  %81 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i203

_compound_head.exit.i203:                         ; preds = %if.end.i.i199, %if.then.i.i198
  %retval.0.i.i200 = phi i32 [ %sub.i.i197, %if.then.i.i198 ], [ %81, %if.end.i.i199 ]
  %82 = inttoptr i32 %retval.0.i.i200 to ptr
  %83 = getelementptr inbounds %struct.page, ptr %82, i32 0, i32 1
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %83, align 4
  %and.i.i.i.i.i201 = and i32 %85, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i201)
  %tobool.not.i.i.i.i202 = icmp eq i32 %and.i.i.i.i.i201, 0
  br i1 %tobool.not.i.i.i.i202, label %page_is_file_lru.exit, label %if.then.i.i.i.i204, !prof !557

if.then.i.i.i.i204:                               ; preds = %_compound_head.exit.i203
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %82, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

page_is_file_lru.exit:                            ; preds = %_compound_head.exit.i203
  %86 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %82, align 4
  %88 = and i32 %87, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %88)
  %tobool62.not.not = icmp eq i32 %88, 0
  br i1 %tobool62.not.not, label %land.lhs.true63, label %page_is_file_lru.exit.if.end70_crit_edge

page_is_file_lru.exit.if.end70_crit_edge:         ; preds = %page_is_file_lru.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end70

land.lhs.true63:                                  ; preds = %page_is_file_lru.exit
  %flags.i205 = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  %89 = ptrtoint ptr %flags.i205 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load volatile i32, ptr %flags.i205, align 4
  %91 = and i32 %90, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %91)
  %tobool65.not = icmp eq i32 %91, 0
  br i1 %tobool65.not, label %land.lhs.true66, label %land.lhs.true63.if.end70_crit_edge

land.lhs.true63.if.end70_crit_edge:               ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end70

land.lhs.true66:                                  ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #15
  %call69 = tail call ptr @workingset_eviction(ptr noundef %page, ptr noundef %target_memcg) #13
  br label %if.end70

if.end70:                                         ; preds = %land.lhs.true66, %land.lhs.true63.if.end70_crit_edge, %page_is_file_lru.exit.if.end70_crit_edge, %if.else.if.end70_crit_edge
  %shadow.1 = phi ptr [ null, %land.lhs.true63.if.end70_crit_edge ], [ %call69, %land.lhs.true66 ], [ null, %page_is_file_lru.exit.if.end70_crit_edge ], [ null, %if.else.if.end70_crit_edge ]
  %92 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %0, align 4
  %and.i.i208 = and i32 %93, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i208)
  %tobool.not.i.i209 = icmp eq i32 %and.i.i208, 0
  br i1 %tobool.not.i.i209, label %if.end.i.i212, label %if.then.i.i211, !prof !557

if.then.i.i211:                                   ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i210 = add i32 %93, -1
  br label %__delete_from_page_cache.exit

if.end.i.i212:                                    ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #15
  %94 = ptrtoint ptr %page to i32
  br label %__delete_from_page_cache.exit

__delete_from_page_cache.exit:                    ; preds = %if.end.i.i212, %if.then.i.i211
  %retval.0.i.i213 = phi i32 [ %sub.i.i210, %if.then.i.i211 ], [ %94, %if.end.i.i212 ]
  %95 = inttoptr i32 %retval.0.i.i213 to ptr
  tail call void @__filemap_remove_folio(ptr noundef %95, ptr noundef %shadow.1) #13
  tail call void @_raw_spin_unlock_irq(ptr noundef %i_pages) #13
  %96 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %mapping, align 4
  tail call void @inode_add_lru(ptr noundef %97) #13
  %98 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %mapping, align 4
  %i_lock78 = getelementptr inbounds %struct.inode, ptr %99, i32 0, i32 18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock78) #13
  %cmp79.not = icmp eq ptr %78, null
  br i1 %cmp79.not, label %__delete_from_page_cache.exit.cleanup_crit_edge, label %if.then80

__delete_from_page_cache.exit.cleanup_crit_edge:  ; preds = %__delete_from_page_cache.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then80:                                        ; preds = %__delete_from_page_cache.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %78(ptr noundef %page) #13
  br label %cleanup

cannot_free:                                      ; preds = %if.then44, %page_ref_freeze.exit.cannot_free_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef %i_pages) #13
  %100 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile i32, ptr %0, align 4
  %and.i.i170 = and i32 %101, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i170)
  %tobool.not.i.i171 = icmp eq i32 %and.i.i170, 0
  br i1 %tobool.not.i.i171, label %if.end.i.i174, label %if.then.i.i173, !prof !557

if.then.i.i173:                                   ; preds = %cannot_free
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i172 = add i32 %101, -1
  br label %_compound_head.exit.i178

if.end.i.i174:                                    ; preds = %cannot_free
  call void @__sanitizer_cov_trace_pc() #15
  %102 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i178

_compound_head.exit.i178:                         ; preds = %if.end.i.i174, %if.then.i.i173
  %retval.0.i.i175 = phi i32 [ %sub.i.i172, %if.then.i.i173 ], [ %102, %if.end.i.i174 ]
  %103 = inttoptr i32 %retval.0.i.i175 to ptr
  %104 = getelementptr inbounds %struct.page, ptr %103, i32 0, i32 1
  %105 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %104, align 4
  %and.i.i.i.i.i176 = and i32 %106, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i176)
  %tobool.not.i.i.i.i177 = icmp eq i32 %and.i.i.i.i.i176, 0
  br i1 %tobool.not.i.i.i.i177, label %folio_test_swapbacked.exit.i.i181, label %if.then.i.i.i.i179, !prof !557

if.then.i.i.i.i179:                               ; preds = %_compound_head.exit.i178
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %103, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_swapbacked.exit.i.i181:                ; preds = %_compound_head.exit.i178
  %107 = ptrtoint ptr %103 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %103, align 4
  %109 = and i32 %108, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %109)
  %tobool.i.not.i.i180 = icmp eq i32 %109, 0
  br i1 %tobool.i.not.i.i180, label %folio_test_swapbacked.exit.i.i181.if.then86_crit_edge, label %land.rhs.i.i184

folio_test_swapbacked.exit.i.i181.if.then86_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i181
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then86

land.rhs.i.i184:                                  ; preds = %folio_test_swapbacked.exit.i.i181
  %110 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %104, align 4
  %and.i.i.i.i182 = and i32 %111, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i182)
  %tobool.not.i.i.i183 = icmp eq i32 %and.i.i.i.i182, 0
  br i1 %tobool.not.i.i.i183, label %PageSwapCache.exit188, label %if.then.i.i.i185, !prof !557

if.then.i.i.i185:                                 ; preds = %land.rhs.i.i184
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %103, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

PageSwapCache.exit188:                            ; preds = %land.rhs.i.i184
  %112 = ptrtoint ptr %103 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load volatile i32, ptr %103, align 4
  %114 = and i32 %113, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %114)
  %tobool.i.i186.not = icmp eq i32 %114, 0
  br i1 %tobool.i.i186.not, label %PageSwapCache.exit188.if.then86_crit_edge, label %PageSwapCache.exit188.cleanup_crit_edge

PageSwapCache.exit188.cleanup_crit_edge:          ; preds = %PageSwapCache.exit188
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

PageSwapCache.exit188.if.then86_crit_edge:        ; preds = %PageSwapCache.exit188
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then86

if.then86:                                        ; preds = %PageSwapCache.exit188.if.then86_crit_edge, %folio_test_swapbacked.exit.i.i181.if.then86_crit_edge
  %115 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %mapping, align 4
  %i_lock88 = getelementptr inbounds %struct.inode, ptr %116, i32 0, i32 18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock88) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then86, %PageSwapCache.exit188.cleanup_crit_edge, %if.then80, %__delete_from_page_cache.exit.cleanup_crit_edge, %if.end53
  %retval.0 = phi i32 [ 1, %__delete_from_page_cache.exit.cleanup_crit_edge ], [ 1, %if.then80 ], [ 1, %if.end53 ], [ 0, %if.then86 ], [ 0, %PageSwapCache.exit188.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @page_ref_unfreeze(ptr noundef %page, i32 noundef %count) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %2, -1
  br label %page_count.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %page to i32
  br label %page_count.exit

page_count.exit:                                  ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i29 = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i29 to ptr
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #13
  %5 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.not = icmp eq i32 %6, 0
  br i1 %cmp.not, label %do.body6, label %if.then, !prof !557

if.then:                                          ; preds = %page_count.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.157) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page_ref.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 332, 0\0A.popsection", ""() #13, !srcloc !580
  unreachable

do.body6:                                         ; preds = %page_count.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count)
  %cmp7 = icmp eq i32 %count, 0
  br i1 %cmp7, label %do.body15, label %do.end20, !prof !558

do.body15:                                        ; preds = %do.body6
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page_ref.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 333, 0\0A.popsection", ""() #13, !srcloc !589
  unreachable

do.end20:                                         ; preds = %do.body6
  %_refcount = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 3
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !581
  %7 = ptrtoint ptr %_refcount to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 %count, ptr %_refcount, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_unfreeze, i32 0, i32 1), ptr blockaddress(@page_ref_unfreeze, %if.then22)) #13
          to label %if.end23 [label %if.then22], !srcloc !567

if.then22:                                        ; preds = %do.end20
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__page_ref_unfreeze(ptr noundef %page, i32 noundef %count) #13
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %do.end20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @putback_lru_page(ptr noundef %page) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @lru_cache_add(ptr noundef %page) #13
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %2, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #13
  %5 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.i.i.i.i = icmp eq i32 %6, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !558

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %4, ptr noundef nonnull @.str.158) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #13, !srcloc !590
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !591
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #13
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #13, !srcloc !592
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %7, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !593
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@putback_lru_page, %if.then.i.i.i.i.i)) #13
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !567

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %4, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #13
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__put_page(ptr noundef %4) #13
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_cache_add(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @reclaim_clean_pages_from_list(ptr nocapture noundef readonly %zone, ptr noundef %page_list) local_unnamed_addr #0 align 64 {
entry:
  %sc = alloca %struct.scan_control, align 4
  %stat = alloca %struct.reclaim_stat, align 4
  %clean_pages = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %sc) #13
  %0 = call ptr @memset(ptr %sc, i32 0, i32 72)
  %1 = getelementptr inbounds { i32, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, %struct.anon.126, %struct.reclaim_state }, ptr %sc, i32 0, i32 5
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 4, ptr %1, align 4
  %3 = getelementptr inbounds { i32, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, %struct.anon.126, %struct.reclaim_state }, ptr %sc, i32 0, i32 11
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 3264, ptr %3, align 4
  call void @llvm.lifetime.start.p0(i64 44, ptr nonnull %stat) #13
  %5 = call ptr @memset(ptr %stat, i32 255, i32 44)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %clean_pages) #13
  %6 = getelementptr inbounds %struct.list_head, ptr %clean_pages, i32 0, i32 1
  %7 = ptrtoint ptr %clean_pages to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %clean_pages, ptr %clean_pages, align 4
  %8 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %clean_pages, ptr %6, align 4
  %9 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %page_list, align 4
  %cmp.not116 = icmp eq ptr %10, %page_list
  br i1 %cmp.not116, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in117 = phi ptr [ %.pn120, %for.inc.for.body_crit_edge ], [ %10, %entry.for.body_crit_edge ]
  %page.0119 = getelementptr i8, ptr %.pn.in117, i32 -4
  %11 = ptrtoint ptr %.pn.in117 to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn120 = load ptr, ptr %.pn.in117, align 4
  %12 = load volatile i32, ptr %.pn.in117, align 4
  %and.i.i81 = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i81)
  %tobool.not.i.i82 = icmp eq i32 %and.i.i81, 0
  br i1 %tobool.not.i.i82, label %if.end.i.i85, label %if.then.i.i84, !prof !557

if.then.i.i84:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i83 = add i32 %12, -1
  br label %_compound_head.exit.i87

if.end.i.i85:                                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %13 = ptrtoint ptr %page.0119 to i32
  br label %_compound_head.exit.i87

_compound_head.exit.i87:                          ; preds = %if.end.i.i85, %if.then.i.i84
  %retval.0.i.i86 = phi i32 [ %sub.i.i83, %if.then.i.i84 ], [ %13, %if.end.i.i85 ]
  %14 = inttoptr i32 %retval.0.i.i86 to ptr
  %15 = getelementptr inbounds %struct.page, ptr %14, i32 0, i32 1
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %and.i.i.i.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %page_is_file_lru.exit, label %if.then.i.i.i.i, !prof !557

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i87
  call void @__sanitizer_cov_trace_pc() #15
  %18 = inttoptr i32 %retval.0.i.i86 to ptr
  call void @dump_page(ptr noundef %18, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

page_is_file_lru.exit:                            ; preds = %_compound_head.exit.i87
  %19 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %14, align 4
  %21 = and i32 %20, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool9.not.not = icmp eq i32 %21, 0
  br i1 %tobool9.not.not, label %land.lhs.true10, label %page_is_file_lru.exit.for.inc_crit_edge

page_is_file_lru.exit.for.inc_crit_edge:          ; preds = %page_is_file_lru.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

land.lhs.true10:                                  ; preds = %page_is_file_lru.exit
  %22 = ptrtoint ptr %.pn.in117 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %.pn.in117, align 4
  %and.i.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %23, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #15
  %24 = ptrtoint ptr %page.0119 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %24, %if.end.i.i ]
  %25 = inttoptr i32 %retval.0.i.i to ptr
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %25, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %27)
  %cmp.i.not.i = icmp eq i32 %27, -1
  %28 = ptrtoint ptr %.pn.in117 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %.pn.in117, align 4
  %and.i13.i = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !557

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i = add i32 %29, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %30 = ptrtoint ptr %page.0119 to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %30, %if.end.i17.i ]
  %31 = inttoptr i32 %retval.0.i18.i to ptr
  call void @dump_page(ptr noundef %31, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #13, !srcloc !588
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !557

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i = add i32 %29, -1
  br label %PageDirty.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %32 = ptrtoint ptr %page.0119 to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %32, %if.end.i24.i ]
  %33 = inttoptr i32 %retval.0.i25.i to ptr
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  %36 = and i32 %35, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool12.not = icmp eq i32 %36, 0
  br i1 %tobool12.not, label %land.lhs.true13, label %PageDirty.exit.for.inc_crit_edge

PageDirty.exit.for.inc_crit_edge:                 ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

land.lhs.true13:                                  ; preds = %PageDirty.exit
  %mapping.i = getelementptr i8, ptr %.pn.in117, i32 8
  %37 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mapping.i, align 4
  %39 = ptrtoint ptr %38 to i32
  %and.i = and i32 %39, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 2
  br i1 %cmp.i.not, label %land.lhs.true13.for.inc_crit_edge, label %land.lhs.true16

land.lhs.true13.for.inc_crit_edge:                ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %40 = ptrtoint ptr %.pn.in117 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %.pn.in117, align 4
  %and.i.i48 = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i48)
  %tobool.not.i.i49 = icmp eq i32 %and.i.i48, 0
  br i1 %tobool.not.i.i49, label %if.end.i.i52, label %if.then.i.i51, !prof !557

if.then.i.i51:                                    ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i50 = add i32 %41, -1
  br label %_compound_head.exit.i57

if.end.i.i52:                                     ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #15
  %42 = ptrtoint ptr %page.0119 to i32
  br label %_compound_head.exit.i57

_compound_head.exit.i57:                          ; preds = %if.end.i.i52, %if.then.i.i51
  %retval.0.i.i53 = phi i32 [ %sub.i.i50, %if.then.i.i51 ], [ %42, %if.end.i.i52 ]
  %43 = inttoptr i32 %retval.0.i.i53 to ptr
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %45)
  %cmp.i.not.i54 = icmp eq i32 %45, -1
  %46 = ptrtoint ptr %.pn.in117 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %.pn.in117, align 4
  %and.i13.i55 = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i55)
  %tobool.not.i14.i56 = icmp eq i32 %and.i13.i55, 0
  br i1 %cmp.i.not.i54, label %if.then.i58, label %do.end8.i64, !prof !558

if.then.i58:                                      ; preds = %_compound_head.exit.i57
  br i1 %tobool.not.i14.i56, label %if.end.i17.i61, label %if.then.i16.i60, !prof !557

if.then.i16.i60:                                  ; preds = %if.then.i58
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i59 = add i32 %47, -1
  br label %_compound_head.exit19.i63

if.end.i17.i61:                                   ; preds = %if.then.i58
  call void @__sanitizer_cov_trace_pc() #15
  %48 = ptrtoint ptr %page.0119 to i32
  br label %_compound_head.exit19.i63

_compound_head.exit19.i63:                        ; preds = %if.end.i17.i61, %if.then.i16.i60
  %retval.0.i18.i62 = phi i32 [ %sub.i15.i59, %if.then.i16.i60 ], [ %48, %if.end.i17.i61 ]
  %49 = inttoptr i32 %retval.0.i18.i62 to ptr
  call void @dump_page(ptr noundef %49, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 499, 0\0A.popsection", ""() #13, !srcloc !594
  unreachable

do.end8.i64:                                      ; preds = %_compound_head.exit.i57
  br i1 %tobool.not.i14.i56, label %if.end.i24.i67, label %if.then.i23.i66, !prof !557

if.then.i23.i66:                                  ; preds = %do.end8.i64
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i65 = add i32 %47, -1
  br label %PageUnevictable.exit

if.end.i24.i67:                                   ; preds = %do.end8.i64
  call void @__sanitizer_cov_trace_pc() #15
  %50 = ptrtoint ptr %page.0119 to i32
  br label %PageUnevictable.exit

PageUnevictable.exit:                             ; preds = %if.end.i24.i67, %if.then.i23.i66
  %retval.0.i25.i68 = phi i32 [ %sub.i22.i65, %if.then.i23.i66 ], [ %50, %if.end.i24.i67 ]
  %51 = inttoptr i32 %retval.0.i25.i68 to ptr
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  %54 = and i32 %53, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool18.not = icmp eq i32 %54, 0
  br i1 %tobool18.not, label %if.then, label %PageUnevictable.exit.for.inc_crit_edge

PageUnevictable.exit.for.inc_crit_edge:           ; preds = %PageUnevictable.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then:                                          ; preds = %PageUnevictable.exit
  %55 = ptrtoint ptr %.pn.in117 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %.pn.in117, align 4
  %and.i.i71 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i71)
  %tobool.not.i.i72 = icmp eq i32 %and.i.i71, 0
  br i1 %tobool.not.i.i72, label %if.end.i.i75, label %if.then.i.i74, !prof !557

if.then.i.i74:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i73 = add i32 %56, -1
  br label %_compound_head.exit.i78

if.end.i.i75:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %57 = ptrtoint ptr %page.0119 to i32
  br label %_compound_head.exit.i78

_compound_head.exit.i78:                          ; preds = %if.end.i.i75, %if.then.i.i74
  %retval.0.i.i76 = phi i32 [ %sub.i.i73, %if.then.i.i74 ], [ %57, %if.end.i.i75 ]
  %58 = inttoptr i32 %retval.0.i.i76 to ptr
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %58, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %60)
  %cmp.i.not.i77 = icmp eq i32 %60, -1
  %61 = ptrtoint ptr %.pn.in117 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %.pn.in117, align 4
  %and.i12.i = and i32 %62, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i)
  %tobool.not.i13.i = icmp eq i32 %and.i12.i, 0
  br i1 %cmp.i.not.i77, label %if.then.i79, label %do.end8.i80, !prof !558

if.then.i79:                                      ; preds = %_compound_head.exit.i78
  br i1 %tobool.not.i13.i, label %if.end.i16.i, label %if.then.i15.i, !prof !557

if.then.i15.i:                                    ; preds = %if.then.i79
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i = add i32 %62, -1
  br label %_compound_head.exit18.i

if.end.i16.i:                                     ; preds = %if.then.i79
  call void @__sanitizer_cov_trace_pc() #15
  %63 = ptrtoint ptr %page.0119 to i32
  br label %_compound_head.exit18.i

_compound_head.exit18.i:                          ; preds = %if.end.i16.i, %if.then.i15.i
  %retval.0.i17.i = phi i32 [ %sub.i14.i, %if.then.i15.i ], [ %63, %if.end.i16.i ]
  %64 = inttoptr i32 %retval.0.i17.i to ptr
  call void @dump_page(ptr noundef %64, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 424, 0\0A.popsection", ""() #13, !srcloc !595
  unreachable

do.end8.i80:                                      ; preds = %_compound_head.exit.i78
  br i1 %tobool.not.i13.i, label %if.end.i23.i, label %if.then.i22.i, !prof !557

if.then.i22.i:                                    ; preds = %do.end8.i80
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i = add i32 %62, -1
  br label %ClearPageActive.exit

if.end.i23.i:                                     ; preds = %do.end8.i80
  call void @__sanitizer_cov_trace_pc() #15
  %65 = ptrtoint ptr %page.0119 to i32
  br label %ClearPageActive.exit

ClearPageActive.exit:                             ; preds = %if.end.i23.i, %if.then.i22.i
  %retval.0.i24.i = phi i32 [ %sub.i21.i, %if.then.i22.i ], [ %65, %if.end.i23.i ]
  %66 = inttoptr i32 %retval.0.i24.i to ptr
  call void @_clear_bit(i32 noundef 5, ptr noundef %66) #13
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in117) #13
  br i1 %call.i.i, label %if.end.i.i88, label %ClearPageActive.exit.__list_del_entry.exit.i_crit_edge

ClearPageActive.exit.__list_del_entry.exit.i_crit_edge: ; preds = %ClearPageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %__list_del_entry.exit.i

if.end.i.i88:                                     ; preds = %ClearPageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in117, i32 0, i32 1
  %67 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %prev.i.i, align 4
  %69 = ptrtoint ptr %.pn.in117 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %.pn.in117, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %68, ptr %prev1.i.i.i, align 4
  %72 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %72)
  store volatile ptr %70, ptr %68, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i88, %ClearPageActive.exit.__list_del_entry.exit.i_crit_edge
  %73 = ptrtoint ptr %clean_pages to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %clean_pages, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %.pn.in117, ptr noundef nonnull %clean_pages, ptr noundef %74) #13
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.for.inc_crit_edge

__list_del_entry.exit.i.for.inc_crit_edge:        ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %74, i32 0, i32 1
  %75 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %.pn.in117, ptr %prev1.i.i2.i, align 4
  %76 = ptrtoint ptr %.pn.in117 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %74, ptr %.pn.in117, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in117, i32 0, i32 1
  %77 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %clean_pages, ptr %prev3.i.i.i, align 4
  %78 = ptrtoint ptr %clean_pages to i32
  call void @__asan_store4_noabort(i32 %78)
  store volatile ptr %.pn.in117, ptr %clean_pages, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.for.inc_crit_edge, %PageUnevictable.exit.for.inc_crit_edge, %land.lhs.true13.for.inc_crit_edge, %PageDirty.exit.for.inc_crit_edge, %page_is_file_lru.exit.for.inc_crit_edge
  %cmp.not = icmp eq ptr %.pn120, %page_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %79 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i89 = and i32 %79, -16384
  %80 = inttoptr i32 %and.i.i89 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 2
  %81 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %82, i32 0, i32 3
  %83 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %flags1.i, align 4
  %and.i90 = and i32 %84, 2048
  %or.i = or i32 %84, 2048
  store i32 %or.i, ptr %flags1.i, align 4
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %85 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %zone_pgdat, align 4
  %call26 = call fastcc i32 @shrink_page_list(ptr noundef nonnull %clean_pages, ptr noundef %86, ptr noundef nonnull %sc, ptr noundef nonnull %stat, i1 noundef zeroext true)
  %87 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i91 = and i32 %87, -16384
  %88 = inttoptr i32 %and.i.i91 to ptr
  %task.i92 = getelementptr inbounds %struct.thread_info, ptr %88, i32 0, i32 2
  %89 = ptrtoint ptr %task.i92 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %task.i92, align 8
  %flags1.i93 = getelementptr inbounds %struct.task_struct, ptr %90, i32 0, i32 3
  %91 = ptrtoint ptr %flags1.i93 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %flags1.i93, align 4
  %and.i94 = and i32 %92, -2049
  %or.i95 = or i32 %and.i94, %and.i90
  store i32 %or.i95, ptr %flags1.i93, align 4
  %93 = ptrtoint ptr %clean_pages to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile ptr, ptr %clean_pages, align 4
  %cmp.i.not.i96 = icmp eq ptr %94, %clean_pages
  br i1 %cmp.i.not.i96, label %for.end.list_splice.exit_crit_edge, label %if.then.i97

for.end.list_splice.exit_crit_edge:               ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_splice.exit

if.then.i97:                                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  %95 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %page_list, align 4
  %97 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %6, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %94, i32 0, i32 1
  %99 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr %page_list, ptr %prev3.i.i, align 4
  store ptr %94, ptr %page_list, align 4
  %100 = ptrtoint ptr %98 to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %96, ptr %98, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %96, i32 0, i32 1
  %101 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %98, ptr %prev6.i.i, align 4
  br label %list_splice.exit

list_splice.exit:                                 ; preds = %if.then.i97, %for.end.list_splice.exit_crit_edge
  %102 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %zone_pgdat, align 4
  %sub = sub i32 0, %call26
  call void @mod_node_page_state(ptr noundef %103, i32 noundef 8, i32 noundef %sub) #13
  %104 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %zone_pgdat, align 4
  %nr_lazyfree_fail = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 9
  %106 = ptrtoint ptr %nr_lazyfree_fail to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %nr_lazyfree_fail, align 4
  call void @mod_node_page_state(ptr noundef %105, i32 noundef 7, i32 noundef %107) #13
  %108 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %zone_pgdat, align 4
  %sub31 = sub i32 0, %107
  call void @mod_node_page_state(ptr noundef %109, i32 noundef 8, i32 noundef %sub31) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %clean_pages) #13
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %stat) #13
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %sc) #13
  ret i32 %call26
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @list_move(ptr noundef %list, ptr noundef %head) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %call.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #13
  br i1 %call.i, label %if.end.i, label %entry.__list_del_entry.exit_crit_edge

entry.__list_del_entry.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %__list_del_entry.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %0 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i, align 4
  %2 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %list, align 4
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev1.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %3, ptr %1, align 4
  br label %__list_del_entry.exit

__list_del_entry.exit:                            ; preds = %if.end.i, %entry.__list_del_entry.exit_crit_edge
  %6 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %head, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %head, ptr noundef %7) #13
  br i1 %call.i.i, label %if.end.i.i, label %__list_del_entry.exit.list_add.exit_crit_edge

__list_del_entry.exit.list_add.exit_crit_edge:    ; preds = %__list_del_entry.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_add.exit

if.end.i.i:                                       ; preds = %__list_del_entry.exit
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i2 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %list, ptr %prev1.i.i2, align 4
  %9 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %7, ptr %list, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %head, ptr %prev3.i.i, align 4
  %11 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %list, ptr %head, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %__list_del_entry.exit.list_add.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @shrink_page_list(ptr noundef %page_list, ptr noundef %pgdat, ptr noundef %sc, ptr nocapture noundef %stat, i1 noundef zeroext %ignore_references) unnamed_addr #0 align 64 {
entry:
  %nr_succeeded.i = alloca i32, align 4
  %wbc.i = alloca %struct.writeback_control, align 8
  %vm_flags.i = alloca i32, align 4
  %ret_pages = alloca %struct.list_head, align 4
  %free_pages = alloca %struct.list_head, align 4
  %demote_pages = alloca %struct.list_head, align 4
  %dirty = alloca i8, align 1
  %writeback = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ret_pages) #13
  %0 = getelementptr inbounds %struct.list_head, ptr %ret_pages, i32 0, i32 1
  %1 = ptrtoint ptr %ret_pages to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %ret_pages, ptr %ret_pages, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %ret_pages, ptr %0, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %free_pages) #13
  %3 = getelementptr inbounds %struct.list_head, ptr %free_pages, i32 0, i32 1
  %4 = ptrtoint ptr %free_pages to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %free_pages, ptr %free_pages, align 4
  %5 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %free_pages, ptr %3, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %demote_pages) #13
  %6 = getelementptr inbounds %struct.list_head, ptr %demote_pages, i32 0, i32 1
  %7 = ptrtoint ptr %demote_pages to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %demote_pages, ptr %demote_pages, align 4
  %8 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %demote_pages, ptr %6, align 4
  %9 = call ptr @memset(ptr %stat, i32 0, i32 44)
  call void @__might_resched(ptr noundef nonnull @.str.21, i32 noundef 1527, i32 noundef 0) #13
  %call.i = call i32 @__cond_resched() #13
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %10 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %node_id, align 64
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @numa_demotion_enabled to i32))
  %12 = load i8, ptr @numa_demotion_enabled, align 1, !range !566
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.not.i1100 = icmp eq i8 %12, 0
  br i1 %tobool.not.i1100, label %entry.can_demote.exit_crit_edge, label %if.end.i

entry.can_demote.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_demote.exit

if.end.i:                                         ; preds = %entry
  %tobool1.not.i = icmp eq ptr %sc, null
  br i1 %tobool1.not.i, label %if.end.i.if.end8.i_crit_edge, label %if.then2.i

if.end.i.if.end8.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8.i

if.then2.i:                                       ; preds = %if.end.i
  %no_demotion.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %13 = ptrtoint ptr %no_demotion.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %bf.load.i = load i16, ptr %no_demotion.i, align 4
  %14 = and i16 %bf.load.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool3.not.i = icmp eq i16 %14, 0
  br i1 %tobool3.not.i, label %if.end5.i, label %if.then2.i.can_demote.exit_crit_edge

if.then2.i.can_demote.exit_crit_edge:             ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_demote.exit

if.end5.i:                                        ; preds = %if.then2.i
  %target_mem_cgroup.i.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %15 = ptrtoint ptr %target_mem_cgroup.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %target_mem_cgroup.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %16, null
  br i1 %tobool.i.not.i, label %if.end5.i.if.end8.i_crit_edge, label %if.end5.i.can_demote.exit_crit_edge

if.end5.i.can_demote.exit_crit_edge:              ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_demote.exit

if.end5.i.if.end8.i_crit_edge:                    ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.end5.i.if.end8.i_crit_edge, %if.end.i.if.end8.i_crit_edge
  %call9.i = call i32 @next_demotion_node(i32 noundef %11) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call9.i)
  %cmp.i = icmp ne i32 %call9.i, -1
  br label %can_demote.exit

can_demote.exit:                                  ; preds = %if.end8.i, %if.end5.i.can_demote.exit_crit_edge, %if.then2.i.can_demote.exit_crit_edge, %entry.can_demote.exit_crit_edge
  %retval.0.i = phi i1 [ false, %entry.can_demote.exit_crit_edge ], [ false, %if.then2.i.can_demote.exit_crit_edge ], [ false, %if.end5.i.can_demote.exit_crit_edge ], [ %cmp.i, %if.end8.i ]
  %prev10 = getelementptr inbounds %struct.list_head, ptr %page_list, i32 0, i32 1
  %nr_scanned = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %may_unmap = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %gfp_mask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %nr_unqueued_dirty = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 1
  %nr_congested = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 2
  %flags = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 27
  %nr_immediate = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 4
  %target_mem_cgroup.i.i1132 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %nr_writeback = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 3
  %nr_ref_keep = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 7
  %17 = getelementptr inbounds { i32, i32, i64, i64, i32, i8, i8, [2 x i8], ptr, ptr, i32, i32, i32, i32, i32, i32 }, ptr %wbc.i, i32 0, i32 3
  %18 = getelementptr inbounds { i32, i32, i64, i64, i32, i8, i8, [2 x i8], ptr, ptr, i32, i32, i32, i32, i32, i32 }, ptr %wbc.i, i32 0, i32 5
  %nr_pageout = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 5
  %nr_unmap_fail = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 8
  %nr_lazyfree_fail = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 9
  br label %retry

retry:                                            ; preds = %retry.backedge, %can_demote.exit
  %do_demote_pass.0.off0 = phi i1 [ %retval.0.i, %can_demote.exit ], [ false, %retry.backedge ]
  %nr_reclaimed.0 = phi i32 [ 0, %can_demote.exit ], [ %add398, %retry.backedge ]
  %19 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %page_list, align 4
  %cmp.i1101.not2095 = icmp eq ptr %20, %page_list
  br i1 %cmp.i1101.not2095, label %retry.while.end_crit_edge, label %retry.while.body_crit_edge

retry.while.body_crit_edge:                       ; preds = %retry
  br label %while.body

retry.while.end_crit_edge:                        ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body:                                       ; preds = %cleanup388.while.body_crit_edge, %retry.while.body_crit_edge
  %nr_reclaimed.12096 = phi i32 [ %nr_reclaimed.2, %cleanup388.while.body_crit_edge ], [ %nr_reclaimed.0, %retry.while.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %dirty) #13
  %21 = ptrtoint ptr %dirty to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 -1, ptr %dirty, align 1, !annotation !559
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %writeback) #13
  %22 = ptrtoint ptr %writeback to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 -1, ptr %writeback, align 1, !annotation !559
  call void @__might_resched(ptr noundef nonnull @.str.21, i32 noundef 1538, i32 noundef 0) #13
  %call.i1102 = call i32 @__cond_resched() #13
  %23 = ptrtoint ptr %prev10 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev10, align 4
  %add.ptr = getelementptr i8, ptr %24, i32 -4
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %24) #13
  br i1 %call.i.i, label %if.end.i.i1103, label %while.body.list_del.exit_crit_edge

while.body.list_del.exit_crit_edge:               ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_del.exit

if.end.i.i1103:                                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %prev.i.i, align 4
  %27 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %24, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %26, ptr %prev1.i.i.i, align 4
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %28, ptr %26, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i1103, %while.body.list_del.exit_crit_edge
  %31 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 256 to ptr), ptr %24, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %32 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %33 = load volatile i32, ptr %24, align 4
  %and.i.i1104 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1104)
  %tobool.not.i.i1105 = icmp eq i32 %and.i.i1104, 0
  br i1 %tobool.not.i.i1105, label %if.end.i.i1108, label %if.then.i.i1107, !prof !557

if.then.i.i1107:                                  ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1106 = add i32 %33, -1
  br label %_compound_head.exit.i1112

if.end.i.i1108:                                   ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #15
  %34 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i1112

_compound_head.exit.i1112:                        ; preds = %if.end.i.i1108, %if.then.i.i1107
  %retval.0.i.i1109 = phi i32 [ %sub.i.i1106, %if.then.i.i1107 ], [ %34, %if.end.i.i1108 ]
  %35 = inttoptr i32 %retval.0.i.i1109 to ptr
  %36 = getelementptr inbounds %struct.page, ptr %35, i32 0, i32 1
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %36, align 4
  %and.i.i.i.i1110 = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i1110)
  %tobool.not.i.i.i1111 = icmp eq i32 %and.i.i.i.i1110, 0
  br i1 %tobool.not.i.i.i1111, label %folio_flags.exit.i.i1115, label %if.then.i.i.i1113, !prof !557

if.then.i.i.i1113:                                ; preds = %_compound_head.exit.i1112
  call void @__sanitizer_cov_trace_pc() #15
  %39 = inttoptr i32 %retval.0.i.i1109 to ptr
  call void @dump_page(ptr noundef %39, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_flags.exit.i.i1115:                         ; preds = %_compound_head.exit.i1112
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %35, i32 noundef 4) #13
  %40 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %35, align 4
  %and.i.i4.i.i = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i1114 = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i1114, label %trylock_page.exit, label %folio_flags.exit.i.i1115.keep_crit_edge

folio_flags.exit.i.i1115.keep_crit_edge:          ; preds = %folio_flags.exit.i.i1115
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep

trylock_page.exit:                                ; preds = %folio_flags.exit.i.i1115
  call void @llvm.prefetch.p0(ptr %35, i32 1, i32 3, i32 1) #13
  %42 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %35, ptr %35, i32 1, ptr elementtype(i32) %35) #13, !srcloc !596
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %42, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !597
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool13.not.not = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool13.not.not, label %do.body, label %trylock_page.exit.keep_crit_edge

trylock_page.exit.keep_crit_edge:                 ; preds = %trylock_page.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep

do.body:                                          ; preds = %trylock_page.exit
  %43 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %24, align 4
  %and.i.i = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %44, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %45 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %45, %if.end.i.i ]
  %46 = inttoptr i32 %retval.0.i.i to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %46, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %48)
  %cmp.i.not.i = icmp eq i32 %48, -1
  %49 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %24, align 4
  %and.i13.i = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !557

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i = add i32 %50, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %51 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %51, %if.end.i17.i ]
  %52 = inttoptr i32 %retval.0.i18.i to ptr
  call void @dump_page(ptr noundef %52, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 424, 0\0A.popsection", ""() #13, !srcloc !598
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !557

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i = add i32 %50, -1
  br label %PageActive.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %53 = ptrtoint ptr %add.ptr to i32
  br label %PageActive.exit

PageActive.exit:                                  ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %53, %if.end.i24.i ]
  %54 = inttoptr i32 %retval.0.i25.i to ptr
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %54, align 4
  %57 = and i32 %56, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool15.not = icmp eq i32 %57, 0
  br i1 %tobool15.not, label %do.end26, label %if.then19, !prof !557

if.then19:                                        ; preds = %PageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.159) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1546, 0\0A.popsection", ""() #13, !srcloc !599
  unreachable

do.end26:                                         ; preds = %PageActive.exit
  %58 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %59)
  %cmp.i.not.i.i = icmp eq i32 %59, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i1116, label %PageHead.exit.i, !prof !558

if.then.i.i1116:                                  ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.153) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i:                                  ; preds = %do.end26
  %60 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %add.ptr, align 4
  %62 = and i32 %61, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.i1117 = icmp eq i32 %62, 0
  br i1 %tobool.not.i1117, label %PageHead.exit.i.compound_nr.exit_crit_edge, label %if.end.i1118

PageHead.exit.i.compound_nr.exit_crit_edge:       ; preds = %PageHead.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %compound_nr.exit

if.end.i1118:                                     ; preds = %PageHead.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %compound_nr.i = getelementptr i8, ptr %24, i32 48
  %63 = ptrtoint ptr %compound_nr.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %compound_nr.i, align 4
  br label %compound_nr.exit

compound_nr.exit:                                 ; preds = %if.end.i1118, %PageHead.exit.i.compound_nr.exit_crit_edge
  %retval.0.i1119 = phi i32 [ %64, %if.end.i1118 ], [ 1, %PageHead.exit.i.compound_nr.exit_crit_edge ]
  %65 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %nr_scanned, align 4
  %add = add i32 %66, %retval.0.i1119
  store i32 %add, ptr %nr_scanned, align 4
  %call28 = call fastcc zeroext i1 @page_evictable(ptr noundef %add.ptr)
  br i1 %call28, label %if.end38, label %compound_nr.exit.activate_locked_crit_edge, !prof !557

compound_nr.exit.activate_locked_crit_edge:       ; preds = %compound_nr.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %activate_locked

if.end38:                                         ; preds = %compound_nr.exit
  %67 = ptrtoint ptr %may_unmap to i32
  call void @__asan_load2_noabort(i32 %67)
  %bf.load = load i16, ptr %may_unmap, align 4
  %68 = and i16 %bf.load, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %68)
  %tobool39.not = icmp eq i16 %68, 0
  br i1 %tobool39.not, label %land.lhs.true, label %if.end38.if.end42_crit_edge

if.end38.if.end42_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end42

land.lhs.true:                                    ; preds = %if.end38
  %call40 = call zeroext i1 @page_mapped(ptr noundef %add.ptr) #13
  br i1 %call40, label %land.lhs.true.keep_locked_crit_edge, label %land.lhs.true.if.end42_crit_edge

land.lhs.true.if.end42_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end42

land.lhs.true.keep_locked_crit_edge:              ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end42:                                         ; preds = %land.lhs.true.if.end42_crit_edge, %if.end38.if.end42_crit_edge
  %69 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %gfp_mask, align 4
  %and = and i32 %70, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool43.not = icmp eq i32 %and, 0
  br i1 %tobool43.not, label %lor.rhs, label %if.end42.lor.end_crit_edge

if.end42.lor.end_crit_edge:                       ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.end

lor.rhs:                                          ; preds = %if.end42
  %71 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %24, align 4
  %and.i.i554 = and i32 %72, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i554)
  %tobool.not.i.i555 = icmp eq i32 %and.i.i554, 0
  br i1 %tobool.not.i.i555, label %if.end.i.i558, label %if.then.i.i557, !prof !557

if.then.i.i557:                                   ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i556 = add i32 %72, -1
  br label %_compound_head.exit.i560

if.end.i.i558:                                    ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #15
  %73 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i560

_compound_head.exit.i560:                         ; preds = %if.end.i.i558, %if.then.i.i557
  %retval.0.i.i559 = phi i32 [ %sub.i.i556, %if.then.i.i557 ], [ %73, %if.end.i.i558 ]
  %74 = inttoptr i32 %retval.0.i.i559 to ptr
  %75 = getelementptr inbounds %struct.page, ptr %74, i32 0, i32 1
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %75, align 4
  %and.i.i.i.i.i = and i32 %77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_test_swapbacked.exit.i.i, label %if.then.i.i.i.i, !prof !557

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i560
  call void @__sanitizer_cov_trace_pc() #15
  %78 = inttoptr i32 %retval.0.i.i559 to ptr
  call void @dump_page(ptr noundef %78, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_swapbacked.exit.i.i:                   ; preds = %_compound_head.exit.i560
  %79 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %74, align 4
  %81 = and i32 %80, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool.i.not.i.i = icmp eq i32 %81, 0
  br i1 %tobool.i.not.i.i, label %folio_test_swapbacked.exit.i.i.lor.end_crit_edge, label %land.rhs.i.i

folio_test_swapbacked.exit.i.i.lor.end_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.end

land.rhs.i.i:                                     ; preds = %folio_test_swapbacked.exit.i.i
  %82 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %75, align 4
  %and.i.i.i.i = and i32 %83, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %PageSwapCache.exit, label %if.then.i.i.i, !prof !557

if.then.i.i.i:                                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %84 = inttoptr i32 %retval.0.i.i559 to ptr
  call void @dump_page(ptr noundef %84, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

PageSwapCache.exit:                               ; preds = %land.rhs.i.i
  %85 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %74, align 4
  %87 = and i32 %86, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %tobool.i.i.not = icmp eq i32 %87, 0
  br i1 %tobool.i.i.not, label %PageSwapCache.exit.lor.end_crit_edge, label %land.rhs

PageSwapCache.exit.lor.end_crit_edge:             ; preds = %PageSwapCache.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.end

land.rhs:                                         ; preds = %PageSwapCache.exit
  call void @__sanitizer_cov_trace_pc() #15
  %and46 = and i32 %70, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46)
  %tobool47 = icmp ne i32 %and46, 0
  br label %lor.end

lor.end:                                          ; preds = %land.rhs, %PageSwapCache.exit.lor.end_crit_edge, %folio_test_swapbacked.exit.i.i.lor.end_crit_edge, %if.end42.lor.end_crit_edge
  %88 = phi i1 [ true, %if.end42.lor.end_crit_edge ], [ false, %PageSwapCache.exit.lor.end_crit_edge ], [ %tobool47, %land.rhs ], [ false, %folio_test_swapbacked.exit.i.i.lor.end_crit_edge ]
  %89 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load volatile i32, ptr %24, align 4
  %and.i.i74.i = and i32 %90, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i74.i)
  %tobool.not.i.i75.i = icmp eq i32 %and.i.i74.i, 0
  br i1 %tobool.not.i.i75.i, label %if.end.i.i78.i, label %if.then.i.i77.i, !prof !557

if.then.i.i77.i:                                  ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i76.i = add i32 %90, -1
  br label %_compound_head.exit.i80.i

if.end.i.i78.i:                                   ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #15
  %91 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i80.i

_compound_head.exit.i80.i:                        ; preds = %if.end.i.i78.i, %if.then.i.i77.i
  %retval.0.i.i79.i = phi i32 [ %sub.i.i76.i, %if.then.i.i77.i ], [ %91, %if.end.i.i78.i ]
  %92 = inttoptr i32 %retval.0.i.i79.i to ptr
  %93 = getelementptr inbounds %struct.page, ptr %92, i32 0, i32 1
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %93, align 4
  %and.i.i.i.i.i.i = and i32 %95, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %page_is_file_lru.exit.i, label %if.then.i.i.i.i.i, !prof !557

if.then.i.i.i.i.i:                                ; preds = %_compound_head.exit.i80.i
  call void @__sanitizer_cov_trace_pc() #15
  %96 = inttoptr i32 %retval.0.i.i79.i to ptr
  call void @dump_page(ptr noundef %96, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

page_is_file_lru.exit.i:                          ; preds = %_compound_head.exit.i80.i
  %97 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %92, align 4
  %99 = and i32 %98, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %tobool.not.not.i = icmp eq i32 %99, 0
  br i1 %tobool.not.not.i, label %lor.lhs.false.i, label %page_is_file_lru.exit.i.lor.lhs.false.thread_crit_edge

page_is_file_lru.exit.i.lor.lhs.false.thread_crit_edge: ; preds = %page_is_file_lru.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false.thread

lor.lhs.false.i:                                  ; preds = %page_is_file_lru.exit.i
  %100 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile i32, ptr %24, align 4
  %and.i2.i.i = and i32 %101, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i.i)
  %tobool.not.i.i.i1120 = icmp eq i32 %and.i2.i.i, 0
  br i1 %tobool.not.i.i.i1120, label %if.end.i.i.i, label %if.then.i.i.i1121, !prof !557

if.then.i.i.i1121:                                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i = add i32 %101, -1
  br label %PageAnon.exit.i

if.end.i.i.i:                                     ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  %102 = ptrtoint ptr %add.ptr to i32
  br label %PageAnon.exit.i

PageAnon.exit.i:                                  ; preds = %if.end.i.i.i, %if.then.i.i.i1121
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i1121 ], [ %102, %if.end.i.i.i ]
  %103 = inttoptr i32 %retval.0.i.i.i to ptr
  %mapping.i.i.i = getelementptr inbounds %struct.anon.67, ptr %103, i32 0, i32 2
  %104 = ptrtoint ptr %mapping.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %mapping.i.i.i, align 4
  %106 = ptrtoint ptr %105 to i32
  %and.i.i.i = and i32 %106, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i.i.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i.i.not.i, label %PageAnon.exit.i.if.end.i1126_crit_edge, label %land.lhs.true.i

PageAnon.exit.i.if.end.i1126_crit_edge:           ; preds = %PageAnon.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i1126

land.lhs.true.i:                                  ; preds = %PageAnon.exit.i
  %107 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %24, align 4
  %and.i.i34.i = and i32 %108, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i34.i)
  %tobool.not.i.i35.i = icmp eq i32 %and.i.i34.i, 0
  br i1 %tobool.not.i.i35.i, label %if.end.i.i38.i, label %if.then.i.i37.i, !prof !557

if.then.i.i37.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i36.i = add i32 %108, -1
  br label %_compound_head.exit.i.i

if.end.i.i38.i:                                   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  %109 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i38.i, %if.then.i.i37.i
  %retval.0.i.i39.i = phi i32 [ %sub.i.i36.i, %if.then.i.i37.i ], [ %109, %if.end.i.i38.i ]
  %110 = inttoptr i32 %retval.0.i.i39.i to ptr
  %111 = ptrtoint ptr %110 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %110, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %112)
  %cmp.i.not.i.i1122 = icmp eq i32 %112, -1
  %113 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %24, align 4
  %and.i16.i.i = and i32 %114, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i1122, label %if.then.i.i1123, label %do.end10.i.i, !prof !558

if.then.i.i1123:                                  ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i20.i.i, label %if.then.i19.i.i, !prof !557

if.then.i19.i.i:                                  ; preds = %if.then.i.i1123
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i.i = add i32 %114, -1
  br label %_compound_head.exit22.i.i

if.end.i20.i.i:                                   ; preds = %if.then.i.i1123
  call void @__sanitizer_cov_trace_pc() #15
  %115 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.end.i20.i.i, %if.then.i19.i.i
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %115, %if.end.i20.i.i ]
  %116 = inttoptr i32 %retval.0.i21.i.i to ptr
  call void @dump_page(ptr noundef %116, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #13, !srcloc !600
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i27.i.i, label %if.then.i26.i.i, !prof !557

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i.i = add i32 %114, -1
  br label %PageSwapBacked.exit.i

if.end.i27.i.i:                                   ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %117 = ptrtoint ptr %add.ptr to i32
  br label %PageSwapBacked.exit.i

PageSwapBacked.exit.i:                            ; preds = %if.end.i27.i.i, %if.then.i26.i.i
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %117, %if.end.i27.i.i ]
  %118 = inttoptr i32 %retval.0.i28.i.i to ptr
  %119 = ptrtoint ptr %118 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile i32, ptr %118, align 4
  %121 = and i32 %120, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %121)
  %tobool3.not.i1124 = icmp eq i32 %121, 0
  br i1 %tobool3.not.i1124, label %PageSwapBacked.exit.i.lor.lhs.false.thread_crit_edge, label %PageSwapBacked.exit.i.if.end.i1126_crit_edge

PageSwapBacked.exit.i.if.end.i1126_crit_edge:     ; preds = %PageSwapBacked.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i1126

PageSwapBacked.exit.i.lor.lhs.false.thread_crit_edge: ; preds = %PageSwapBacked.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false.thread

lor.lhs.false.thread:                             ; preds = %PageSwapBacked.exit.i.lor.lhs.false.thread_crit_edge, %page_is_file_lru.exit.i.lor.lhs.false.thread_crit_edge
  %122 = ptrtoint ptr %dirty to i32
  call void @__asan_store1_noabort(i32 %122)
  store i8 0, ptr %dirty, align 1
  %123 = ptrtoint ptr %writeback to i32
  call void @__asan_store1_noabort(i32 %123)
  store i8 0, ptr %writeback, align 1
  br label %if.end58

if.end.i1126:                                     ; preds = %PageSwapBacked.exit.i.if.end.i1126_crit_edge, %PageAnon.exit.i.if.end.i1126_crit_edge
  %124 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile i32, ptr %24, align 4
  %and.i.i40.i = and i32 %125, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i40.i)
  %tobool.not.i.i41.i = icmp eq i32 %and.i.i40.i, 0
  br i1 %tobool.not.i.i41.i, label %if.end.i.i44.i, label %if.then.i.i43.i, !prof !557

if.then.i.i43.i:                                  ; preds = %if.end.i1126
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i42.i = add i32 %125, -1
  br label %_compound_head.exit.i47.i

if.end.i.i44.i:                                   ; preds = %if.end.i1126
  call void @__sanitizer_cov_trace_pc() #15
  %126 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i47.i

_compound_head.exit.i47.i:                        ; preds = %if.end.i.i44.i, %if.then.i.i43.i
  %retval.0.i.i45.i = phi i32 [ %sub.i.i42.i, %if.then.i.i43.i ], [ %126, %if.end.i.i44.i ]
  %127 = inttoptr i32 %retval.0.i.i45.i to ptr
  %128 = ptrtoint ptr %127 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load volatile i32, ptr %127, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %129)
  %cmp.i.not.i46.i = icmp eq i32 %129, -1
  %130 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %24, align 4
  %and.i13.i.i = and i32 %131, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i.i)
  %tobool.not.i14.i.i = icmp eq i32 %and.i13.i.i, 0
  br i1 %cmp.i.not.i46.i, label %if.then.i48.i, label %do.end8.i.i, !prof !558

if.then.i48.i:                                    ; preds = %_compound_head.exit.i47.i
  br i1 %tobool.not.i14.i.i, label %if.end.i17.i.i, label %if.then.i16.i.i, !prof !557

if.then.i16.i.i:                                  ; preds = %if.then.i48.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i.i = add i32 %131, -1
  br label %_compound_head.exit19.i.i

if.end.i17.i.i:                                   ; preds = %if.then.i48.i
  call void @__sanitizer_cov_trace_pc() #15
  %132 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i.i

_compound_head.exit19.i.i:                        ; preds = %if.end.i17.i.i, %if.then.i16.i.i
  %retval.0.i18.i.i = phi i32 [ %sub.i15.i.i, %if.then.i16.i.i ], [ %132, %if.end.i17.i.i ]
  %133 = inttoptr i32 %retval.0.i18.i.i to ptr
  call void @dump_page(ptr noundef %133, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #13, !srcloc !588
  unreachable

do.end8.i.i:                                      ; preds = %_compound_head.exit.i47.i
  br i1 %tobool.not.i14.i.i, label %if.end.i24.i.i, label %if.then.i23.i.i, !prof !557

if.then.i23.i.i:                                  ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i.i = add i32 %131, -1
  br label %PageDirty.exit.i

if.end.i24.i.i:                                   ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %134 = ptrtoint ptr %add.ptr to i32
  br label %PageDirty.exit.i

PageDirty.exit.i:                                 ; preds = %if.end.i24.i.i, %if.then.i23.i.i
  %retval.0.i25.i.i = phi i32 [ %sub.i22.i.i, %if.then.i23.i.i ], [ %134, %if.end.i24.i.i ]
  %135 = inttoptr i32 %retval.0.i25.i.i to ptr
  %136 = ptrtoint ptr %135 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load volatile i32, ptr %135, align 4
  %138 = trunc i32 %137 to i8
  %139 = lshr i8 %138, 3
  %140 = and i8 %139, 1
  %141 = ptrtoint ptr %dirty to i32
  call void @__asan_store1_noabort(i32 %141)
  store i8 %140, ptr %dirty, align 1
  %142 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load volatile i32, ptr %24, align 4
  %and.i.i51.i = and i32 %143, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i51.i)
  %tobool.not.i.i52.i = icmp eq i32 %and.i.i51.i, 0
  br i1 %tobool.not.i.i52.i, label %if.end.i.i55.i, label %if.then.i.i54.i, !prof !557

if.then.i.i54.i:                                  ; preds = %PageDirty.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i53.i = add i32 %143, -1
  br label %_compound_head.exit.i60.i

if.end.i.i55.i:                                   ; preds = %PageDirty.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %144 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i60.i

_compound_head.exit.i60.i:                        ; preds = %if.end.i.i55.i, %if.then.i.i54.i
  %retval.0.i.i56.i = phi i32 [ %sub.i.i53.i, %if.then.i.i54.i ], [ %144, %if.end.i.i55.i ]
  %145 = inttoptr i32 %retval.0.i.i56.i to ptr
  %146 = ptrtoint ptr %145 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load volatile i32, ptr %145, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %147)
  %cmp.i.not.i57.i = icmp eq i32 %147, -1
  %148 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load volatile i32, ptr %24, align 4
  %and.i16.i58.i = and i32 %149, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i58.i)
  %tobool.not.i17.i59.i = icmp eq i32 %and.i16.i58.i, 0
  br i1 %cmp.i.not.i57.i, label %if.then.i61.i, label %do.end10.i67.i, !prof !558

if.then.i61.i:                                    ; preds = %_compound_head.exit.i60.i
  br i1 %tobool.not.i17.i59.i, label %if.end.i20.i64.i, label %if.then.i19.i63.i, !prof !557

if.then.i19.i63.i:                                ; preds = %if.then.i61.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i62.i = add i32 %149, -1
  br label %_compound_head.exit22.i66.i

if.end.i20.i64.i:                                 ; preds = %if.then.i61.i
  call void @__sanitizer_cov_trace_pc() #15
  %150 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i66.i

_compound_head.exit22.i66.i:                      ; preds = %if.end.i20.i64.i, %if.then.i19.i63.i
  %retval.0.i21.i65.i = phi i32 [ %sub.i18.i62.i, %if.then.i19.i63.i ], [ %150, %if.end.i20.i64.i ]
  %151 = inttoptr i32 %retval.0.i21.i65.i to ptr
  call void @dump_page(ptr noundef %151, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #13, !srcloc !601
  unreachable

do.end10.i67.i:                                   ; preds = %_compound_head.exit.i60.i
  br i1 %tobool.not.i17.i59.i, label %if.end.i27.i70.i, label %if.then.i26.i69.i, !prof !557

if.then.i26.i69.i:                                ; preds = %do.end10.i67.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i68.i = add i32 %149, -1
  br label %PageWriteback.exit.i

if.end.i27.i70.i:                                 ; preds = %do.end10.i67.i
  call void @__sanitizer_cov_trace_pc() #15
  %152 = ptrtoint ptr %add.ptr to i32
  br label %PageWriteback.exit.i

PageWriteback.exit.i:                             ; preds = %if.end.i27.i70.i, %if.then.i26.i69.i
  %retval.0.i28.i71.i = phi i32 [ %sub.i25.i68.i, %if.then.i26.i69.i ], [ %152, %if.end.i27.i70.i ]
  %153 = inttoptr i32 %retval.0.i28.i71.i to ptr
  %154 = ptrtoint ptr %153 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load volatile i32, ptr %153, align 4
  %156 = lshr i32 %155, 15
  %157 = trunc i32 %156 to i8
  %158 = and i8 %157, 1
  %159 = ptrtoint ptr %writeback to i32
  call void @__asan_store1_noabort(i32 %159)
  store i8 %158, ptr %writeback, align 1
  %160 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %add.ptr, align 4
  %and.i.i1127 = and i32 %161, 24576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1127)
  %tobool.i.not.i1128 = icmp eq i32 %and.i.i1127, 0
  br i1 %tobool.i.not.i1128, label %PageWriteback.exit.i.page_check_dirty_writeback.exit_crit_edge, label %if.end12.i

PageWriteback.exit.i.page_check_dirty_writeback.exit_crit_edge: ; preds = %PageWriteback.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %page_check_dirty_writeback.exit

if.end12.i:                                       ; preds = %PageWriteback.exit.i
  %call13.i = call ptr @page_mapping(ptr noundef %add.ptr) #13
  %tobool14.not.i = icmp eq ptr %call13.i, null
  br i1 %tobool14.not.i, label %if.end12.i.page_check_dirty_writeback.exit_crit_edge, label %land.lhs.true15.i

if.end12.i.page_check_dirty_writeback.exit_crit_edge: ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %page_check_dirty_writeback.exit

land.lhs.true15.i:                                ; preds = %if.end12.i
  %a_ops.i = getelementptr inbounds %struct.address_space, ptr %call13.i, i32 0, i32 9
  %162 = ptrtoint ptr %a_ops.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %a_ops.i, align 4
  %is_dirty_writeback.i = getelementptr inbounds %struct.address_space_operations, ptr %163, i32 0, i32 18
  %164 = ptrtoint ptr %is_dirty_writeback.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %is_dirty_writeback.i, align 4
  %tobool16.not.i = icmp eq ptr %165, null
  br i1 %tobool16.not.i, label %land.lhs.true15.i.page_check_dirty_writeback.exit_crit_edge, label %if.then17.i1129

land.lhs.true15.i.page_check_dirty_writeback.exit_crit_edge: ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %page_check_dirty_writeback.exit

if.then17.i1129:                                  ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #15
  call void %165(ptr noundef %add.ptr, ptr noundef nonnull %dirty, ptr noundef nonnull %writeback) #13
  br label %page_check_dirty_writeback.exit

page_check_dirty_writeback.exit:                  ; preds = %if.then17.i1129, %land.lhs.true15.i.page_check_dirty_writeback.exit_crit_edge, %if.end12.i.page_check_dirty_writeback.exit_crit_edge, %PageWriteback.exit.i.page_check_dirty_writeback.exit_crit_edge
  %166 = ptrtoint ptr %dirty to i32
  call void @__asan_load1_noabort(i32 %166)
  %.pr = load i8, ptr %dirty, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool49.not = icmp eq i8 %.pr, 0
  br i1 %tobool49.not, label %lor.lhs.false, label %land.lhs.true54

lor.lhs.false:                                    ; preds = %page_check_dirty_writeback.exit
  %167 = ptrtoint ptr %writeback to i32
  call void @__asan_load1_noabort(i32 %167)
  %.pr1422 = load i8, ptr %writeback, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr1422)
  %tobool50.not = icmp eq i8 %.pr1422, 0
  br i1 %tobool50.not, label %lor.lhs.false.if.end58_crit_edge, label %if.end52.thread1426

lor.lhs.false.if.end58_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end58

if.end52.thread1426:                              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  %168 = ptrtoint ptr %stat to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %stat, align 4
  %inc1428 = add i32 %169, 1
  store i32 %inc1428, ptr %stat, align 4
  br label %if.end58

land.lhs.true54:                                  ; preds = %page_check_dirty_writeback.exit
  %170 = ptrtoint ptr %stat to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %stat, align 4
  %inc = add i32 %171, 1
  store i32 %inc, ptr %stat, align 4
  %172 = ptrtoint ptr %writeback to i32
  call void @__asan_load1_noabort(i32 %172)
  %173 = load i8, ptr %writeback, align 1, !range !566
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %173)
  %tobool55.not = icmp eq i8 %173, 0
  br i1 %tobool55.not, label %if.then56, label %land.lhs.true54.if.end58_crit_edge

land.lhs.true54.if.end58_crit_edge:               ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end58

if.then56:                                        ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #15
  %174 = ptrtoint ptr %nr_unqueued_dirty to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %nr_unqueued_dirty, align 4
  %inc57 = add i32 %175, 1
  store i32 %inc57, ptr %nr_unqueued_dirty, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then56, %land.lhs.true54.if.end58_crit_edge, %if.end52.thread1426, %lor.lhs.false.if.end58_crit_edge, %lor.lhs.false.thread
  %call59 = call ptr @page_mapping(ptr noundef %add.ptr) #13
  %176 = ptrtoint ptr %dirty to i32
  call void @__asan_load1_noabort(i32 %176)
  %177 = load i8, ptr %dirty, align 1, !range !566
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %177)
  %tobool60.not = icmp eq i8 %177, 0
  br i1 %tobool60.not, label %lor.lhs.false61, label %land.lhs.true63

lor.lhs.false61:                                  ; preds = %if.end58
  %178 = ptrtoint ptr %writeback to i32
  call void @__asan_load1_noabort(i32 %178)
  %179 = load i8, ptr %writeback, align 1, !range !566
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %179)
  %tobool62.not = icmp eq i8 %179, 0
  %tobool64.not = icmp eq ptr %call59, null
  %or.cond = select i1 %tobool62.not, i1 true, i1 %tobool64.not
  br i1 %or.cond, label %lor.lhs.false61.lor.lhs.false68_crit_edge, label %lor.lhs.false61.land.lhs.true65_crit_edge

lor.lhs.false61.land.lhs.true65_crit_edge:        ; preds = %lor.lhs.false61
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true65

lor.lhs.false61.lor.lhs.false68_crit_edge:        ; preds = %lor.lhs.false61
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false68

land.lhs.true63:                                  ; preds = %if.end58
  %tobool64.not.old = icmp eq ptr %call59, null
  br i1 %tobool64.not.old, label %land.lhs.true63.lor.lhs.false68thread-pre-split_crit_edge, label %land.lhs.true63.land.lhs.true65_crit_edge

land.lhs.true63.land.lhs.true65_crit_edge:        ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true65

land.lhs.true63.lor.lhs.false68thread-pre-split_crit_edge: ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false68thread-pre-split

land.lhs.true65:                                  ; preds = %land.lhs.true63.land.lhs.true65_crit_edge, %lor.lhs.false61.land.lhs.true65_crit_edge
  %180 = ptrtoint ptr %call59 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %call59, align 4
  %call.i1130 = call i32 @inode_congested(ptr noundef %181, i32 noundef 1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1130)
  %tobool67.not = icmp eq i32 %call.i1130, 0
  br i1 %tobool67.not, label %land.lhs.true65.lor.lhs.false68thread-pre-split_crit_edge, label %land.lhs.true65.if.then73_crit_edge

land.lhs.true65.if.then73_crit_edge:              ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then73

land.lhs.true65.lor.lhs.false68thread-pre-split_crit_edge: ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false68thread-pre-split

lor.lhs.false68thread-pre-split:                  ; preds = %land.lhs.true65.lor.lhs.false68thread-pre-split_crit_edge, %land.lhs.true63.lor.lhs.false68thread-pre-split_crit_edge
  %182 = ptrtoint ptr %writeback to i32
  call void @__asan_load1_noabort(i32 %182)
  %.pr1429 = load i8, ptr %writeback, align 1
  br label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %lor.lhs.false68thread-pre-split, %lor.lhs.false61.lor.lhs.false68_crit_edge
  %183 = phi i8 [ %.pr1429, %lor.lhs.false68thread-pre-split ], [ %179, %lor.lhs.false61.lor.lhs.false68_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %183)
  %tobool69.not = icmp eq i8 %183, 0
  br i1 %tobool69.not, label %lor.lhs.false68.if.end75_crit_edge, label %land.lhs.true70

lor.lhs.false68.if.end75_crit_edge:               ; preds = %lor.lhs.false68
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end75

land.lhs.true70:                                  ; preds = %lor.lhs.false68
  %184 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load volatile i32, ptr %24, align 4
  %and.i.i561 = and i32 %185, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i561)
  %tobool.not.i.i562 = icmp eq i32 %and.i.i561, 0
  br i1 %tobool.not.i.i562, label %if.end.i.i565, label %if.then.i.i564, !prof !557

if.then.i.i564:                                   ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i563 = add i32 %185, -1
  br label %_compound_head.exit.i568

if.end.i.i565:                                    ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #15
  %186 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i568

_compound_head.exit.i568:                         ; preds = %if.end.i.i565, %if.then.i.i564
  %retval.0.i.i566 = phi i32 [ %sub.i.i563, %if.then.i.i564 ], [ %186, %if.end.i.i565 ]
  %187 = inttoptr i32 %retval.0.i.i566 to ptr
  %188 = ptrtoint ptr %187 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load volatile i32, ptr %187, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %189)
  %cmp.i.not.i567 = icmp eq i32 %189, -1
  %190 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load volatile i32, ptr %24, align 4
  %and.i16.i = and i32 %191, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i567, label %if.then.i569, label %do.end10.i, !prof !558

if.then.i569:                                     ; preds = %_compound_head.exit.i568
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !557

if.then.i19.i:                                    ; preds = %if.then.i569
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i = add i32 %191, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i569
  call void @__sanitizer_cov_trace_pc() #15
  %192 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %192, %if.end.i20.i ]
  %193 = inttoptr i32 %retval.0.i21.i to ptr
  call void @dump_page(ptr noundef %193, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !602
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i568
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !557

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i = add i32 %191, -1
  br label %PageReclaim.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #15
  %194 = ptrtoint ptr %add.ptr to i32
  br label %PageReclaim.exit

PageReclaim.exit:                                 ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %194, %if.end.i27.i ]
  %195 = inttoptr i32 %retval.0.i28.i to ptr
  %196 = ptrtoint ptr %195 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load volatile i32, ptr %195, align 4
  %198 = and i32 %197, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %198)
  %tobool72.not = icmp eq i32 %198, 0
  br i1 %tobool72.not, label %PageReclaim.exit.if.end75_crit_edge, label %PageReclaim.exit.if.then73_crit_edge

PageReclaim.exit.if.then73_crit_edge:             ; preds = %PageReclaim.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then73

PageReclaim.exit.if.end75_crit_edge:              ; preds = %PageReclaim.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end75

if.then73:                                        ; preds = %PageReclaim.exit.if.then73_crit_edge, %land.lhs.true65.if.then73_crit_edge
  %199 = ptrtoint ptr %nr_congested to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %nr_congested, align 4
  %inc74 = add i32 %200, 1
  store i32 %inc74, ptr %nr_congested, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.then73, %PageReclaim.exit.if.end75_crit_edge, %lor.lhs.false68.if.end75_crit_edge
  %201 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load volatile i32, ptr %24, align 4
  %and.i.i572 = and i32 %202, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i572)
  %tobool.not.i.i573 = icmp eq i32 %and.i.i572, 0
  br i1 %tobool.not.i.i573, label %if.end.i.i576, label %if.then.i.i575, !prof !557

if.then.i.i575:                                   ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i574 = add i32 %202, -1
  br label %_compound_head.exit.i581

if.end.i.i576:                                    ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #15
  %203 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i581

_compound_head.exit.i581:                         ; preds = %if.end.i.i576, %if.then.i.i575
  %retval.0.i.i577 = phi i32 [ %sub.i.i574, %if.then.i.i575 ], [ %203, %if.end.i.i576 ]
  %204 = inttoptr i32 %retval.0.i.i577 to ptr
  %205 = ptrtoint ptr %204 to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load volatile i32, ptr %204, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %206)
  %cmp.i.not.i578 = icmp eq i32 %206, -1
  %207 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load volatile i32, ptr %24, align 4
  %and.i16.i579 = and i32 %208, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i579)
  %tobool.not.i17.i580 = icmp eq i32 %and.i16.i579, 0
  br i1 %cmp.i.not.i578, label %if.then.i582, label %do.end10.i588, !prof !558

if.then.i582:                                     ; preds = %_compound_head.exit.i581
  br i1 %tobool.not.i17.i580, label %if.end.i20.i585, label %if.then.i19.i584, !prof !557

if.then.i19.i584:                                 ; preds = %if.then.i582
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i583 = add i32 %208, -1
  br label %_compound_head.exit22.i587

if.end.i20.i585:                                  ; preds = %if.then.i582
  call void @__sanitizer_cov_trace_pc() #15
  %209 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i587

_compound_head.exit22.i587:                       ; preds = %if.end.i20.i585, %if.then.i19.i584
  %retval.0.i21.i586 = phi i32 [ %sub.i18.i583, %if.then.i19.i584 ], [ %209, %if.end.i20.i585 ]
  %210 = inttoptr i32 %retval.0.i21.i586 to ptr
  call void @dump_page(ptr noundef %210, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #13, !srcloc !601
  unreachable

do.end10.i588:                                    ; preds = %_compound_head.exit.i581
  br i1 %tobool.not.i17.i580, label %if.end.i27.i591, label %if.then.i26.i590, !prof !557

if.then.i26.i590:                                 ; preds = %do.end10.i588
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i589 = add i32 %208, -1
  br label %PageWriteback.exit

if.end.i27.i591:                                  ; preds = %do.end10.i588
  call void @__sanitizer_cov_trace_pc() #15
  %211 = ptrtoint ptr %add.ptr to i32
  br label %PageWriteback.exit

PageWriteback.exit:                               ; preds = %if.end.i27.i591, %if.then.i26.i590
  %retval.0.i28.i592 = phi i32 [ %sub.i25.i589, %if.then.i26.i590 ], [ %211, %if.end.i27.i591 ]
  %212 = inttoptr i32 %retval.0.i28.i592 to ptr
  %213 = ptrtoint ptr %212 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load volatile i32, ptr %212, align 4
  %215 = and i32 %214, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %215)
  %tobool77.not = icmp eq i32 %215, 0
  br i1 %tobool77.not, label %if.end99, label %if.then78

if.then78:                                        ; preds = %PageWriteback.exit
  %216 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i1131 = and i32 %216, -16384
  %217 = inttoptr i32 %and.i.i1131 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %217, i32 0, i32 2
  %218 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %219, i32 0, i32 3
  %220 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %221, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool80.not = icmp eq i32 %and.i, 0
  br i1 %tobool80.not, label %if.then78.if.else_crit_edge, label %land.lhs.true81

if.then78.if.else_crit_edge:                      ; preds = %if.then78
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

land.lhs.true81:                                  ; preds = %if.then78
  %222 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load volatile i32, ptr %24, align 4
  %and.i.i595 = and i32 %223, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i595)
  %tobool.not.i.i596 = icmp eq i32 %and.i.i595, 0
  br i1 %tobool.not.i.i596, label %if.end.i.i599, label %if.then.i.i598, !prof !557

if.then.i.i598:                                   ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i597 = add i32 %223, -1
  br label %_compound_head.exit.i604

if.end.i.i599:                                    ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #15
  %224 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i604

_compound_head.exit.i604:                         ; preds = %if.end.i.i599, %if.then.i.i598
  %retval.0.i.i600 = phi i32 [ %sub.i.i597, %if.then.i.i598 ], [ %224, %if.end.i.i599 ]
  %225 = inttoptr i32 %retval.0.i.i600 to ptr
  %226 = ptrtoint ptr %225 to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load volatile i32, ptr %225, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %227)
  %cmp.i.not.i601 = icmp eq i32 %227, -1
  %228 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load volatile i32, ptr %24, align 4
  %and.i16.i602 = and i32 %229, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i602)
  %tobool.not.i17.i603 = icmp eq i32 %and.i16.i602, 0
  br i1 %cmp.i.not.i601, label %if.then.i605, label %do.end10.i611, !prof !558

if.then.i605:                                     ; preds = %_compound_head.exit.i604
  br i1 %tobool.not.i17.i603, label %if.end.i20.i608, label %if.then.i19.i607, !prof !557

if.then.i19.i607:                                 ; preds = %if.then.i605
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i606 = add i32 %229, -1
  br label %_compound_head.exit22.i610

if.end.i20.i608:                                  ; preds = %if.then.i605
  call void @__sanitizer_cov_trace_pc() #15
  %230 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i610

_compound_head.exit22.i610:                       ; preds = %if.end.i20.i608, %if.then.i19.i607
  %retval.0.i21.i609 = phi i32 [ %sub.i18.i606, %if.then.i19.i607 ], [ %230, %if.end.i20.i608 ]
  %231 = inttoptr i32 %retval.0.i21.i609 to ptr
  call void @dump_page(ptr noundef %231, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !602
  unreachable

do.end10.i611:                                    ; preds = %_compound_head.exit.i604
  br i1 %tobool.not.i17.i603, label %if.end.i27.i614, label %if.then.i26.i613, !prof !557

if.then.i26.i613:                                 ; preds = %do.end10.i611
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i612 = add i32 %229, -1
  br label %PageReclaim.exit618

if.end.i27.i614:                                  ; preds = %do.end10.i611
  call void @__sanitizer_cov_trace_pc() #15
  %232 = ptrtoint ptr %add.ptr to i32
  br label %PageReclaim.exit618

PageReclaim.exit618:                              ; preds = %if.end.i27.i614, %if.then.i26.i613
  %retval.0.i28.i615 = phi i32 [ %sub.i25.i612, %if.then.i26.i613 ], [ %232, %if.end.i27.i614 ]
  %233 = inttoptr i32 %retval.0.i28.i615 to ptr
  %234 = ptrtoint ptr %233 to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load volatile i32, ptr %233, align 4
  %236 = and i32 %235, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %236)
  %tobool83.not = icmp eq i32 %236, 0
  br i1 %tobool83.not, label %PageReclaim.exit618.if.else_crit_edge, label %land.lhs.true84

PageReclaim.exit618.if.else_crit_edge:            ; preds = %PageReclaim.exit618
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

land.lhs.true84:                                  ; preds = %PageReclaim.exit618
  %237 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load volatile i32, ptr %flags, align 4
  %239 = and i32 %238, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %239)
  %tobool86.not = icmp eq i32 %239, 0
  br i1 %tobool86.not, label %land.lhs.true84.if.else_crit_edge, label %if.then87

land.lhs.true84.if.else_crit_edge:                ; preds = %land.lhs.true84
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

if.then87:                                        ; preds = %land.lhs.true84
  call void @__sanitizer_cov_trace_pc() #15
  %240 = ptrtoint ptr %nr_immediate to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %nr_immediate, align 4
  %inc88 = add i32 %241, 1
  store i32 %inc88, ptr %nr_immediate, align 4
  br label %activate_locked

if.else:                                          ; preds = %land.lhs.true84.if.else_crit_edge, %PageReclaim.exit618.if.else_crit_edge, %if.then78.if.else_crit_edge
  %242 = ptrtoint ptr %target_mem_cgroup.i.i1132 to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %target_mem_cgroup.i.i1132, align 4
  %tobool.i.not.i1133 = icmp eq ptr %243, null
  br i1 %tobool.i.not.i1133, label %if.else.if.then95_crit_edge, label %if.end.i1134

if.else.if.then95_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then95

if.end.i1134:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@shrink_page_list, %lor.lhs.false90)) #13
          to label %if.then95 [label %lor.lhs.false90], !srcloc !567

lor.lhs.false90:                                  ; preds = %if.end.i1134
  %244 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load volatile i32, ptr %24, align 4
  %and.i.i619 = and i32 %245, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i619)
  %tobool.not.i.i620 = icmp eq i32 %and.i.i619, 0
  br i1 %tobool.not.i.i620, label %if.end.i.i623, label %if.then.i.i622, !prof !557

if.then.i.i622:                                   ; preds = %lor.lhs.false90
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i621 = add i32 %245, -1
  br label %_compound_head.exit.i628

if.end.i.i623:                                    ; preds = %lor.lhs.false90
  call void @__sanitizer_cov_trace_pc() #15
  %246 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i628

_compound_head.exit.i628:                         ; preds = %if.end.i.i623, %if.then.i.i622
  %retval.0.i.i624 = phi i32 [ %sub.i.i621, %if.then.i.i622 ], [ %246, %if.end.i.i623 ]
  %247 = inttoptr i32 %retval.0.i.i624 to ptr
  %248 = ptrtoint ptr %247 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load volatile i32, ptr %247, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %249)
  %cmp.i.not.i625 = icmp eq i32 %249, -1
  %250 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load volatile i32, ptr %24, align 4
  %and.i16.i626 = and i32 %251, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i626)
  %tobool.not.i17.i627 = icmp eq i32 %and.i16.i626, 0
  br i1 %cmp.i.not.i625, label %if.then.i629, label %do.end10.i635, !prof !558

if.then.i629:                                     ; preds = %_compound_head.exit.i628
  br i1 %tobool.not.i17.i627, label %if.end.i20.i632, label %if.then.i19.i631, !prof !557

if.then.i19.i631:                                 ; preds = %if.then.i629
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i630 = add i32 %251, -1
  br label %_compound_head.exit22.i634

if.end.i20.i632:                                  ; preds = %if.then.i629
  call void @__sanitizer_cov_trace_pc() #15
  %252 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i634

_compound_head.exit22.i634:                       ; preds = %if.end.i20.i632, %if.then.i19.i631
  %retval.0.i21.i633 = phi i32 [ %sub.i18.i630, %if.then.i19.i631 ], [ %252, %if.end.i20.i632 ]
  %253 = inttoptr i32 %retval.0.i21.i633 to ptr
  call void @dump_page(ptr noundef %253, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !602
  unreachable

do.end10.i635:                                    ; preds = %_compound_head.exit.i628
  br i1 %tobool.not.i17.i627, label %if.end.i27.i638, label %if.then.i26.i637, !prof !557

if.then.i26.i637:                                 ; preds = %do.end10.i635
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i636 = add i32 %251, -1
  br label %PageReclaim.exit642

if.end.i27.i638:                                  ; preds = %do.end10.i635
  call void @__sanitizer_cov_trace_pc() #15
  %254 = ptrtoint ptr %add.ptr to i32
  br label %PageReclaim.exit642

PageReclaim.exit642:                              ; preds = %if.end.i27.i638, %if.then.i26.i637
  %retval.0.i28.i639 = phi i32 [ %sub.i25.i636, %if.then.i26.i637 ], [ %254, %if.end.i27.i638 ]
  %255 = inttoptr i32 %retval.0.i28.i639 to ptr
  %256 = ptrtoint ptr %255 to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load volatile i32, ptr %255, align 4
  %258 = and i32 %257, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %258)
  %tobool92.not = icmp eq i32 %258, 0
  %.not = xor i1 %88, true
  %brmerge = select i1 %tobool92.not, i1 true, i1 %.not
  br i1 %brmerge, label %PageReclaim.exit642.if.then95_crit_edge, label %if.else97

PageReclaim.exit642.if.then95_crit_edge:          ; preds = %PageReclaim.exit642
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then95

if.then95:                                        ; preds = %PageReclaim.exit642.if.then95_crit_edge, %if.end.i1134, %if.else.if.then95_crit_edge
  %259 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load volatile i32, ptr %24, align 4
  %and.i.i643 = and i32 %260, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i643)
  %tobool.not.i = icmp eq i32 %and.i.i643, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i644, !prof !557

if.then.i644:                                     ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.161) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !603
  unreachable

do.body7.i:                                       ; preds = %if.then95
  %261 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load volatile i32, ptr %24, align 4
  %and.i31.i = and i32 %262, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i)
  %tobool.not.i.i645 = icmp eq i32 %and.i31.i, 0
  br i1 %tobool.not.i.i645, label %if.end.i.i648, label %if.then.i.i647, !prof !557

if.then.i.i647:                                   ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i646 = add i32 %262, -1
  br label %_compound_head.exit.i651

if.end.i.i648:                                    ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #15
  %263 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i651

_compound_head.exit.i651:                         ; preds = %if.end.i.i648, %if.then.i.i647
  %retval.0.i.i649 = phi i32 [ %sub.i.i646, %if.then.i.i647 ], [ %263, %if.end.i.i648 ]
  %264 = inttoptr i32 %retval.0.i.i649 to ptr
  %265 = ptrtoint ptr %264 to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load volatile i32, ptr %264, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %266)
  %cmp.i.not.i650 = icmp eq i32 %266, -1
  %267 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load volatile i32, ptr %24, align 4
  %and.i32.i = and i32 %268, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i)
  %tobool.not.i33.i = icmp eq i32 %and.i32.i, 0
  br i1 %cmp.i.not.i650, label %if.then17.i, label %do.end24.i, !prof !558

if.then17.i:                                      ; preds = %_compound_head.exit.i651
  br i1 %tobool.not.i33.i, label %if.end.i36.i, label %if.then.i35.i, !prof !557

if.then.i35.i:                                    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i34.i = add i32 %268, -1
  br label %_compound_head.exit38.i

if.end.i36.i:                                     ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #15
  %269 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit38.i

_compound_head.exit38.i:                          ; preds = %if.end.i36.i, %if.then.i35.i
  %retval.0.i37.i = phi i32 [ %sub.i34.i, %if.then.i35.i ], [ %269, %if.end.i36.i ]
  %270 = inttoptr i32 %retval.0.i37.i to ptr
  call void @dump_page(ptr noundef %270, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !604
  unreachable

do.end24.i:                                       ; preds = %_compound_head.exit.i651
  br i1 %tobool.not.i33.i, label %if.end.i43.i, label %if.then.i42.i, !prof !557

if.then.i42.i:                                    ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i41.i = add i32 %268, -1
  br label %SetPageReclaim.exit

if.end.i43.i:                                     ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #15
  %271 = ptrtoint ptr %add.ptr to i32
  br label %SetPageReclaim.exit

SetPageReclaim.exit:                              ; preds = %if.end.i43.i, %if.then.i42.i
  %retval.0.i44.i = phi i32 [ %sub.i41.i, %if.then.i42.i ], [ %271, %if.end.i43.i ]
  %272 = inttoptr i32 %retval.0.i44.i to ptr
  call void @_set_bit(i32 noundef 18, ptr noundef %272) #13
  %273 = ptrtoint ptr %nr_writeback to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %nr_writeback, align 4
  %inc96 = add i32 %274, 1
  store i32 %inc96, ptr %nr_writeback, align 4
  br label %activate_locked

if.else97:                                        ; preds = %PageReclaim.exit642
  call void @unlock_page(ptr noundef %add.ptr) #13
  call void @wait_on_page_writeback(ptr noundef %add.ptr) #13
  %275 = ptrtoint ptr %prev10 to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load ptr, ptr %prev10, align 4
  %call.i.i1137 = call zeroext i1 @__list_add_valid(ptr noundef %24, ptr noundef %276, ptr noundef %page_list) #13
  br i1 %call.i.i1137, label %if.end.i.i1138, label %if.else97.cleanup388_crit_edge

if.else97.cleanup388_crit_edge:                   ; preds = %if.else97
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup388

if.end.i.i1138:                                   ; preds = %if.else97
  call void @__sanitizer_cov_trace_pc() #15
  %277 = ptrtoint ptr %prev10 to i32
  call void @__asan_store4_noabort(i32 %277)
  store ptr %24, ptr %prev10, align 4
  %278 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %278)
  store ptr %page_list, ptr %24, align 4
  %279 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %279)
  store ptr %276, ptr %prev.i, align 4
  %280 = ptrtoint ptr %276 to i32
  call void @__asan_store4_noabort(i32 %280)
  store volatile ptr %24, ptr %276, align 4
  br label %cleanup388

if.end99:                                         ; preds = %PageWriteback.exit
  br i1 %ignore_references, label %if.end99.sw.epilog_crit_edge, label %if.then101

if.end99.sw.epilog_crit_edge:                     ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.then101:                                       ; preds = %if.end99
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vm_flags.i) #13
  %281 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_store4_noabort(i32 %281)
  store i32 -1, ptr %vm_flags.i, align 4, !annotation !559
  %282 = ptrtoint ptr %target_mem_cgroup.i.i1132 to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load ptr, ptr %target_mem_cgroup.i.i1132, align 4
  %call.i1139 = call i32 @page_referenced(ptr noundef %add.ptr, i32 noundef 1, ptr noundef %283, ptr noundef nonnull %vm_flags.i) #13
  %284 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load volatile i32, ptr %24, align 4
  %and.i.i.i1140 = and i32 %285, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1140)
  %tobool.not.i.i.i1141 = icmp eq i32 %and.i.i.i1140, 0
  br i1 %tobool.not.i.i.i1141, label %if.end.i.i.i1144, label %if.then.i.i.i1143, !prof !557

if.then.i.i.i1143:                                ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i1142 = add i32 %285, -1
  br label %_compound_head.exit.i.i1149

if.end.i.i.i1144:                                 ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #15
  %286 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i.i1149

_compound_head.exit.i.i1149:                      ; preds = %if.end.i.i.i1144, %if.then.i.i.i1143
  %retval.0.i.i.i1145 = phi i32 [ %sub.i.i.i1142, %if.then.i.i.i1143 ], [ %286, %if.end.i.i.i1144 ]
  %287 = inttoptr i32 %retval.0.i.i.i1145 to ptr
  %288 = ptrtoint ptr %287 to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load volatile i32, ptr %287, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %289)
  %cmp.i.not.i.i1146 = icmp eq i32 %289, -1
  %290 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load volatile i32, ptr %24, align 4
  %and.i13.i.i1147 = and i32 %291, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i.i1147)
  %tobool.not.i14.i.i1148 = icmp eq i32 %and.i13.i.i1147, 0
  br i1 %cmp.i.not.i.i1146, label %if.then.i.i1150, label %do.end8.i.i1156, !prof !558

if.then.i.i1150:                                  ; preds = %_compound_head.exit.i.i1149
  br i1 %tobool.not.i14.i.i1148, label %if.end.i17.i.i1153, label %if.then.i16.i.i1152, !prof !557

if.then.i16.i.i1152:                              ; preds = %if.then.i.i1150
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i.i1151 = add i32 %291, -1
  br label %_compound_head.exit19.i.i1155

if.end.i17.i.i1153:                               ; preds = %if.then.i.i1150
  call void @__sanitizer_cov_trace_pc() #15
  %292 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i.i1155

_compound_head.exit19.i.i1155:                    ; preds = %if.end.i17.i.i1153, %if.then.i16.i.i1152
  %retval.0.i18.i.i1154 = phi i32 [ %sub.i15.i.i1151, %if.then.i16.i.i1152 ], [ %292, %if.end.i17.i.i1153 ]
  %293 = inttoptr i32 %retval.0.i18.i.i1154 to ptr
  call void @dump_page(ptr noundef %293, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 418, 0\0A.popsection", ""() #13, !srcloc !605
  unreachable

do.end8.i.i1156:                                  ; preds = %_compound_head.exit.i.i1149
  br i1 %tobool.not.i14.i.i1148, label %if.end.i24.i.i1159, label %if.then.i23.i.i1158, !prof !557

if.then.i23.i.i1158:                              ; preds = %do.end8.i.i1156
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i.i1157 = add i32 %291, -1
  br label %TestClearPageReferenced.exit.i

if.end.i24.i.i1159:                               ; preds = %do.end8.i.i1156
  call void @__sanitizer_cov_trace_pc() #15
  %294 = ptrtoint ptr %add.ptr to i32
  br label %TestClearPageReferenced.exit.i

TestClearPageReferenced.exit.i:                   ; preds = %if.end.i24.i.i1159, %if.then.i23.i.i1158
  %retval.0.i25.i.i1160 = phi i32 [ %sub.i22.i.i1157, %if.then.i23.i.i1158 ], [ %294, %if.end.i24.i.i1159 ]
  %295 = inttoptr i32 %retval.0.i25.i.i1160 to ptr
  %call10.i.i = call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %295) #13
  %296 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %vm_flags.i, align 4
  %and.i1161 = and i32 %297, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1161)
  %tobool.not.i1162 = icmp eq i32 %and.i1161, 0
  br i1 %tobool.not.i1162, label %if.end.i1163, label %TestClearPageReferenced.exit.i.if.end103.thread1435_crit_edge

TestClearPageReferenced.exit.i.if.end103.thread1435_crit_edge: ; preds = %TestClearPageReferenced.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end103.thread1435

if.end.i1163:                                     ; preds = %TestClearPageReferenced.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1139)
  %tobool2.not.i = icmp eq i32 %call.i1139, 0
  br i1 %tobool2.not.i, label %if.end13.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i1163
  %298 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load volatile i32, ptr %24, align 4
  %and.i.i28.i = and i32 %299, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i28.i)
  %tobool.not.i.i29.i = icmp eq i32 %and.i.i28.i, 0
  br i1 %tobool.not.i.i29.i, label %if.end.i.i32.i, label %if.then.i.i31.i, !prof !557

if.then.i.i31.i:                                  ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i30.i = add i32 %299, -1
  br label %_compound_head.exit.i35.i

if.end.i.i32.i:                                   ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #15
  %300 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i35.i

_compound_head.exit.i35.i:                        ; preds = %if.end.i.i32.i, %if.then.i.i31.i
  %retval.0.i.i33.i = phi i32 [ %sub.i.i30.i, %if.then.i.i31.i ], [ %300, %if.end.i.i32.i ]
  %301 = inttoptr i32 %retval.0.i.i33.i to ptr
  %302 = ptrtoint ptr %301 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load volatile i32, ptr %301, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %303)
  %cmp.i.not.i34.i = icmp eq i32 %303, -1
  %304 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load volatile i32, ptr %24, align 4
  %and.i12.i.i = and i32 %305, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i.i)
  %tobool.not.i13.i.i = icmp eq i32 %and.i12.i.i, 0
  br i1 %cmp.i.not.i34.i, label %if.then.i36.i, label %do.end8.i37.i, !prof !558

if.then.i36.i:                                    ; preds = %_compound_head.exit.i35.i
  br i1 %tobool.not.i13.i.i, label %if.end.i16.i.i, label %if.then.i15.i.i, !prof !557

if.then.i15.i.i:                                  ; preds = %if.then.i36.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i.i = add i32 %305, -1
  br label %_compound_head.exit18.i.i

if.end.i16.i.i:                                   ; preds = %if.then.i36.i
  call void @__sanitizer_cov_trace_pc() #15
  %306 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit18.i.i

_compound_head.exit18.i.i:                        ; preds = %if.end.i16.i.i, %if.then.i15.i.i
  %retval.0.i17.i.i = phi i32 [ %sub.i14.i.i, %if.then.i15.i.i ], [ %306, %if.end.i16.i.i ]
  %307 = inttoptr i32 %retval.0.i17.i.i to ptr
  call void @dump_page(ptr noundef %307, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 417, 0\0A.popsection", ""() #13, !srcloc !606
  unreachable

do.end8.i37.i:                                    ; preds = %_compound_head.exit.i35.i
  br i1 %tobool.not.i13.i.i, label %if.end.i23.i.i, label %if.then.i22.i.i, !prof !557

if.then.i22.i.i:                                  ; preds = %do.end8.i37.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i.i = add i32 %305, -1
  br label %SetPageReferenced.exit.i

if.end.i23.i.i:                                   ; preds = %do.end8.i37.i
  call void @__sanitizer_cov_trace_pc() #15
  %308 = ptrtoint ptr %add.ptr to i32
  br label %SetPageReferenced.exit.i

SetPageReferenced.exit.i:                         ; preds = %if.end.i23.i.i, %if.then.i22.i.i
  %retval.0.i24.i.i = phi i32 [ %sub.i21.i.i, %if.then.i22.i.i ], [ %308, %if.end.i23.i.i ]
  %309 = inttoptr i32 %retval.0.i24.i.i to ptr
  call void @_set_bit(i32 noundef 1, ptr noundef %309) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool4.not.i = icmp ne i32 %call10.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i1139)
  %cmp.i1164 = icmp sgt i32 %call.i1139, 1
  %or.cond.i = select i1 %tobool4.not.i, i1 true, i1 %cmp.i1164
  br i1 %or.cond.i, label %SetPageReferenced.exit.i.if.end103.thread1438_crit_edge, label %if.end6.i

SetPageReferenced.exit.i.if.end103.thread1438_crit_edge: ; preds = %SetPageReferenced.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end103.thread1438

if.end6.i:                                        ; preds = %SetPageReferenced.exit.i
  %310 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %vm_flags.i, align 4
  %and7.i = and i32 %311, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %if.end6.i.sw.bb104_crit_edge, label %land.lhs.true.i1165

if.end6.i.sw.bb104_crit_edge:                     ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb104

land.lhs.true.i1165:                              ; preds = %if.end6.i
  %312 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load volatile i32, ptr %24, align 4
  %and.i.i38.i = and i32 %313, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i38.i)
  %tobool.not.i.i39.i = icmp eq i32 %and.i.i38.i, 0
  br i1 %tobool.not.i.i39.i, label %if.end.i.i42.i, label %if.then.i.i41.i, !prof !557

if.then.i.i41.i:                                  ; preds = %land.lhs.true.i1165
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i40.i = add i32 %313, -1
  br label %_compound_head.exit.i45.i

if.end.i.i42.i:                                   ; preds = %land.lhs.true.i1165
  call void @__sanitizer_cov_trace_pc() #15
  %314 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i45.i

_compound_head.exit.i45.i:                        ; preds = %if.end.i.i42.i, %if.then.i.i41.i
  %retval.0.i.i43.i = phi i32 [ %sub.i.i40.i, %if.then.i.i41.i ], [ %314, %if.end.i.i42.i ]
  %315 = inttoptr i32 %retval.0.i.i43.i to ptr
  %316 = ptrtoint ptr %315 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load volatile i32, ptr %315, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %317)
  %cmp.i.not.i44.i = icmp eq i32 %317, -1
  %318 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load volatile i32, ptr %24, align 4
  %and.i16.i.i1166 = and i32 %319, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i1166)
  %tobool.not.i17.i.i1167 = icmp eq i32 %and.i16.i.i1166, 0
  br i1 %cmp.i.not.i44.i, label %if.then.i46.i, label %do.end10.i.i1173, !prof !558

if.then.i46.i:                                    ; preds = %_compound_head.exit.i45.i
  br i1 %tobool.not.i17.i.i1167, label %if.end.i20.i.i1170, label %if.then.i19.i.i1169, !prof !557

if.then.i19.i.i1169:                              ; preds = %if.then.i46.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i.i1168 = add i32 %319, -1
  br label %_compound_head.exit22.i.i1172

if.end.i20.i.i1170:                               ; preds = %if.then.i46.i
  call void @__sanitizer_cov_trace_pc() #15
  %320 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i.i1172

_compound_head.exit22.i.i1172:                    ; preds = %if.end.i20.i.i1170, %if.then.i19.i.i1169
  %retval.0.i21.i.i1171 = phi i32 [ %sub.i18.i.i1168, %if.then.i19.i.i1169 ], [ %320, %if.end.i20.i.i1170 ]
  %321 = inttoptr i32 %retval.0.i21.i.i1171 to ptr
  call void @dump_page(ptr noundef %321, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #13, !srcloc !600
  unreachable

do.end10.i.i1173:                                 ; preds = %_compound_head.exit.i45.i
  br i1 %tobool.not.i17.i.i1167, label %if.end.i27.i.i1176, label %if.then.i26.i.i1175, !prof !557

if.then.i26.i.i1175:                              ; preds = %do.end10.i.i1173
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i.i1174 = add i32 %319, -1
  br label %PageSwapBacked.exit.i1178

if.end.i27.i.i1176:                               ; preds = %do.end10.i.i1173
  call void @__sanitizer_cov_trace_pc() #15
  %322 = ptrtoint ptr %add.ptr to i32
  br label %PageSwapBacked.exit.i1178

PageSwapBacked.exit.i1178:                        ; preds = %if.end.i27.i.i1176, %if.then.i26.i.i1175
  %retval.0.i28.i.i1177 = phi i32 [ %sub.i25.i.i1174, %if.then.i26.i.i1175 ], [ %322, %if.end.i27.i.i1176 ]
  %323 = inttoptr i32 %retval.0.i28.i.i1177 to ptr
  %324 = ptrtoint ptr %323 to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load volatile i32, ptr %323, align 4
  %326 = and i32 %325, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %326)
  %tobool10.not.i = icmp eq i32 %326, 0
  br i1 %tobool10.not.i, label %PageSwapBacked.exit.i1178.if.end103.thread1438_crit_edge, label %PageSwapBacked.exit.i1178.sw.bb104_crit_edge

PageSwapBacked.exit.i1178.sw.bb104_crit_edge:     ; preds = %PageSwapBacked.exit.i1178
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb104

PageSwapBacked.exit.i1178.if.end103.thread1438_crit_edge: ; preds = %PageSwapBacked.exit.i1178
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end103.thread1438

if.end13.i:                                       ; preds = %if.end.i1163
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i.i)
  %tobool14.not.i1180 = icmp eq i32 %call10.i.i, 0
  br i1 %tobool14.not.i1180, label %if.end13.i.if.end19.i_crit_edge, label %land.lhs.true15.i1181

if.end13.i.if.end19.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19.i

land.lhs.true15.i1181:                            ; preds = %if.end13.i
  %327 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load volatile i32, ptr %24, align 4
  %and.i.i47.i = and i32 %328, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i47.i)
  %tobool.not.i.i48.i = icmp eq i32 %and.i.i47.i, 0
  br i1 %tobool.not.i.i48.i, label %if.end.i.i51.i, label %if.then.i.i50.i, !prof !557

if.then.i.i50.i:                                  ; preds = %land.lhs.true15.i1181
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i49.i = add i32 %328, -1
  br label %_compound_head.exit.i56.i

if.end.i.i51.i:                                   ; preds = %land.lhs.true15.i1181
  call void @__sanitizer_cov_trace_pc() #15
  %329 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i56.i

_compound_head.exit.i56.i:                        ; preds = %if.end.i.i51.i, %if.then.i.i50.i
  %retval.0.i.i52.i = phi i32 [ %sub.i.i49.i, %if.then.i.i50.i ], [ %329, %if.end.i.i51.i ]
  %330 = inttoptr i32 %retval.0.i.i52.i to ptr
  %331 = ptrtoint ptr %330 to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load volatile i32, ptr %330, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %332)
  %cmp.i.not.i53.i = icmp eq i32 %332, -1
  %333 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load volatile i32, ptr %24, align 4
  %and.i16.i54.i = and i32 %334, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i54.i)
  %tobool.not.i17.i55.i = icmp eq i32 %and.i16.i54.i, 0
  br i1 %cmp.i.not.i53.i, label %if.then.i57.i, label %do.end10.i63.i, !prof !558

if.then.i57.i:                                    ; preds = %_compound_head.exit.i56.i
  br i1 %tobool.not.i17.i55.i, label %if.end.i20.i60.i, label %if.then.i19.i59.i, !prof !557

if.then.i19.i59.i:                                ; preds = %if.then.i57.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i58.i = add i32 %334, -1
  br label %_compound_head.exit22.i62.i

if.end.i20.i60.i:                                 ; preds = %if.then.i57.i
  call void @__sanitizer_cov_trace_pc() #15
  %335 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i62.i

_compound_head.exit22.i62.i:                      ; preds = %if.end.i20.i60.i, %if.then.i19.i59.i
  %retval.0.i21.i61.i = phi i32 [ %sub.i18.i58.i, %if.then.i19.i59.i ], [ %335, %if.end.i20.i60.i ]
  %336 = inttoptr i32 %retval.0.i21.i61.i to ptr
  call void @dump_page(ptr noundef %336, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #13, !srcloc !600
  unreachable

do.end10.i63.i:                                   ; preds = %_compound_head.exit.i56.i
  br i1 %tobool.not.i17.i55.i, label %if.end.i27.i66.i, label %if.then.i26.i65.i, !prof !557

if.then.i26.i65.i:                                ; preds = %do.end10.i63.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i64.i = add i32 %334, -1
  br label %PageSwapBacked.exit70.i

if.end.i27.i66.i:                                 ; preds = %do.end10.i63.i
  call void @__sanitizer_cov_trace_pc() #15
  %337 = ptrtoint ptr %add.ptr to i32
  br label %PageSwapBacked.exit70.i

PageSwapBacked.exit70.i:                          ; preds = %if.end.i27.i66.i, %if.then.i26.i65.i
  %retval.0.i28.i67.i = phi i32 [ %sub.i25.i64.i, %if.then.i26.i65.i ], [ %337, %if.end.i27.i66.i ]
  %338 = inttoptr i32 %retval.0.i28.i67.i to ptr
  %339 = ptrtoint ptr %338 to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load volatile i32, ptr %338, align 4
  %341 = and i32 %340, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %341)
  %tobool17.not.i = icmp eq i32 %341, 0
  br i1 %tobool17.not.i, label %PageSwapBacked.exit70.i.if.end103.thread1435_crit_edge, label %PageSwapBacked.exit70.i.if.end19.i_crit_edge

PageSwapBacked.exit70.i.if.end19.i_crit_edge:     ; preds = %PageSwapBacked.exit70.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19.i

PageSwapBacked.exit70.i.if.end103.thread1435_crit_edge: ; preds = %PageSwapBacked.exit70.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end103.thread1435

if.end19.i:                                       ; preds = %PageSwapBacked.exit70.i.if.end19.i_crit_edge, %if.end13.i.if.end19.i_crit_edge
  br label %if.end103.thread1435

if.end103.thread1435:                             ; preds = %if.end19.i, %PageSwapBacked.exit70.i.if.end103.thread1435_crit_edge, %TestClearPageReferenced.exit.i.if.end103.thread1435_crit_edge
  %retval.0.i1182.ph = phi i32 [ 1, %PageSwapBacked.exit70.i.if.end103.thread1435_crit_edge ], [ 0, %TestClearPageReferenced.exit.i.if.end103.thread1435_crit_edge ], [ 0, %if.end19.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vm_flags.i) #13
  br label %sw.epilog

if.end103.thread1438:                             ; preds = %PageSwapBacked.exit.i1178.if.end103.thread1438_crit_edge, %SetPageReferenced.exit.i.if.end103.thread1438_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vm_flags.i) #13
  br label %activate_locked

sw.bb104:                                         ; preds = %PageSwapBacked.exit.i1178.sw.bb104_crit_edge, %if.end6.i.sw.bb104_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vm_flags.i) #13
  %342 = ptrtoint ptr %nr_ref_keep to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %nr_ref_keep, align 4
  %add105 = add i32 %343, %retval.0.i1119
  store i32 %add105, ptr %nr_ref_keep, align 4
  br label %keep_locked

sw.epilog:                                        ; preds = %if.end103.thread1435, %if.end99.sw.epilog_crit_edge
  %references.01434 = phi i32 [ %retval.0.i1182.ph, %if.end103.thread1435 ], [ 0, %if.end99.sw.epilog_crit_edge ]
  br i1 %do_demote_pass.0.off0, label %land.lhs.true108, label %if.end115

land.lhs.true108:                                 ; preds = %sw.epilog
  %344 = ptrtoint ptr %demote_pages to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load ptr, ptr %demote_pages, align 4
  %call.i.i1183 = call zeroext i1 @__list_add_valid(ptr noundef %24, ptr noundef nonnull %demote_pages, ptr noundef %345) #13
  br i1 %call.i.i1183, label %if.end.i.i1185, label %land.lhs.true108.list_add.exit_crit_edge

land.lhs.true108.list_add.exit_crit_edge:         ; preds = %land.lhs.true108
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_add.exit

if.end.i.i1185:                                   ; preds = %land.lhs.true108
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %345, i32 0, i32 1
  %346 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %346)
  store ptr %24, ptr %prev1.i.i, align 4
  %347 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %347)
  store ptr %345, ptr %24, align 4
  %348 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %348)
  store ptr %demote_pages, ptr %prev.i, align 4
  %349 = ptrtoint ptr %demote_pages to i32
  call void @__asan_store4_noabort(i32 %349)
  store volatile ptr %24, ptr %demote_pages, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i1185, %land.lhs.true108.list_add.exit_crit_edge
  call void @unlock_page(ptr noundef %add.ptr) #13
  br label %cleanup388

if.end115:                                        ; preds = %sw.epilog
  %350 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load volatile i32, ptr %24, align 4
  %and.i2.i = and i32 %351, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i)
  %tobool.not.i.i652 = icmp eq i32 %and.i2.i, 0
  br i1 %tobool.not.i.i652, label %if.end.i.i655, label %if.then.i.i654, !prof !557

if.then.i.i654:                                   ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i653 = add i32 %351, -1
  br label %PageAnon.exit

if.end.i.i655:                                    ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #15
  %352 = ptrtoint ptr %add.ptr to i32
  br label %PageAnon.exit

PageAnon.exit:                                    ; preds = %if.end.i.i655, %if.then.i.i654
  %retval.0.i.i656 = phi i32 [ %sub.i.i653, %if.then.i.i654 ], [ %352, %if.end.i.i655 ]
  %353 = inttoptr i32 %retval.0.i.i656 to ptr
  %mapping.i.i = getelementptr inbounds %struct.anon.67, ptr %353, i32 0, i32 2
  %354 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load ptr, ptr %mapping.i.i, align 4
  %356 = ptrtoint ptr %355 to i32
  %and.i.i657 = and i32 %356, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i657)
  %cmp.i.i.not = icmp eq i32 %and.i.i657, 0
  br i1 %cmp.i.i.not, label %PageAnon.exit.if.end178_crit_edge, label %land.lhs.true117

PageAnon.exit.if.end178_crit_edge:                ; preds = %PageAnon.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end178

land.lhs.true117:                                 ; preds = %PageAnon.exit
  %357 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load volatile i32, ptr %24, align 4
  %and.i.i659 = and i32 %358, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i659)
  %tobool.not.i.i660 = icmp eq i32 %and.i.i659, 0
  br i1 %tobool.not.i.i660, label %if.end.i.i663, label %if.then.i.i662, !prof !557

if.then.i.i662:                                   ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i661 = add i32 %358, -1
  br label %_compound_head.exit.i668

if.end.i.i663:                                    ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #15
  %359 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i668

_compound_head.exit.i668:                         ; preds = %if.end.i.i663, %if.then.i.i662
  %retval.0.i.i664 = phi i32 [ %sub.i.i661, %if.then.i.i662 ], [ %359, %if.end.i.i663 ]
  %360 = inttoptr i32 %retval.0.i.i664 to ptr
  %361 = ptrtoint ptr %360 to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load volatile i32, ptr %360, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %362)
  %cmp.i.not.i665 = icmp eq i32 %362, -1
  %363 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load volatile i32, ptr %24, align 4
  %and.i16.i666 = and i32 %364, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i666)
  %tobool.not.i17.i667 = icmp eq i32 %and.i16.i666, 0
  br i1 %cmp.i.not.i665, label %if.then.i669, label %do.end10.i675, !prof !558

if.then.i669:                                     ; preds = %_compound_head.exit.i668
  br i1 %tobool.not.i17.i667, label %if.end.i20.i672, label %if.then.i19.i671, !prof !557

if.then.i19.i671:                                 ; preds = %if.then.i669
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i670 = add i32 %364, -1
  br label %_compound_head.exit22.i674

if.end.i20.i672:                                  ; preds = %if.then.i669
  call void @__sanitizer_cov_trace_pc() #15
  %365 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i674

_compound_head.exit22.i674:                       ; preds = %if.end.i20.i672, %if.then.i19.i671
  %retval.0.i21.i673 = phi i32 [ %sub.i18.i670, %if.then.i19.i671 ], [ %365, %if.end.i20.i672 ]
  %366 = inttoptr i32 %retval.0.i21.i673 to ptr
  call void @dump_page(ptr noundef %366, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #13, !srcloc !600
  unreachable

do.end10.i675:                                    ; preds = %_compound_head.exit.i668
  br i1 %tobool.not.i17.i667, label %if.end.i27.i678, label %if.then.i26.i677, !prof !557

if.then.i26.i677:                                 ; preds = %do.end10.i675
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i676 = add i32 %364, -1
  br label %PageSwapBacked.exit

if.end.i27.i678:                                  ; preds = %do.end10.i675
  call void @__sanitizer_cov_trace_pc() #15
  %367 = ptrtoint ptr %add.ptr to i32
  br label %PageSwapBacked.exit

PageSwapBacked.exit:                              ; preds = %if.end.i27.i678, %if.then.i26.i677
  %retval.0.i28.i679 = phi i32 [ %sub.i25.i676, %if.then.i26.i677 ], [ %367, %if.end.i27.i678 ]
  %368 = inttoptr i32 %retval.0.i28.i679 to ptr
  %369 = ptrtoint ptr %368 to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load volatile i32, ptr %368, align 4
  %371 = and i32 %370, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %371)
  %tobool119.not = icmp eq i32 %371, 0
  br i1 %tobool119.not, label %PageSwapBacked.exit.if.end178_crit_edge, label %if.then120

PageSwapBacked.exit.if.end178_crit_edge:          ; preds = %PageSwapBacked.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end178

if.then120:                                       ; preds = %PageSwapBacked.exit
  %372 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load volatile i32, ptr %24, align 4
  %and.i.i682 = and i32 %373, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i682)
  %tobool.not.i.i683 = icmp eq i32 %and.i.i682, 0
  br i1 %tobool.not.i.i683, label %if.end.i.i686, label %if.then.i.i685, !prof !557

if.then.i.i685:                                   ; preds = %if.then120
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i684 = add i32 %373, -1
  br label %_compound_head.exit.i690

if.end.i.i686:                                    ; preds = %if.then120
  call void @__sanitizer_cov_trace_pc() #15
  %374 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i690

_compound_head.exit.i690:                         ; preds = %if.end.i.i686, %if.then.i.i685
  %retval.0.i.i687 = phi i32 [ %sub.i.i684, %if.then.i.i685 ], [ %374, %if.end.i.i686 ]
  %375 = inttoptr i32 %retval.0.i.i687 to ptr
  %376 = getelementptr inbounds %struct.page, ptr %375, i32 0, i32 1
  %377 = ptrtoint ptr %376 to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load volatile i32, ptr %376, align 4
  %and.i.i.i.i.i688 = and i32 %378, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i688)
  %tobool.not.i.i.i.i689 = icmp eq i32 %and.i.i.i.i.i688, 0
  br i1 %tobool.not.i.i.i.i689, label %folio_test_swapbacked.exit.i.i693, label %if.then.i.i.i.i691, !prof !557

if.then.i.i.i.i691:                               ; preds = %_compound_head.exit.i690
  call void @__sanitizer_cov_trace_pc() #15
  %379 = inttoptr i32 %retval.0.i.i687 to ptr
  call void @dump_page(ptr noundef %379, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_swapbacked.exit.i.i693:                ; preds = %_compound_head.exit.i690
  %380 = ptrtoint ptr %375 to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load volatile i32, ptr %375, align 4
  %382 = and i32 %381, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %382)
  %tobool.i.not.i.i692 = icmp eq i32 %382, 0
  br i1 %tobool.i.not.i.i692, label %folio_test_swapbacked.exit.i.i693.if.then122_crit_edge, label %land.rhs.i.i696

folio_test_swapbacked.exit.i.i693.if.then122_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i693
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then122

land.rhs.i.i696:                                  ; preds = %folio_test_swapbacked.exit.i.i693
  %383 = ptrtoint ptr %376 to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load volatile i32, ptr %376, align 4
  %and.i.i.i.i694 = and i32 %384, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i694)
  %tobool.not.i.i.i695 = icmp eq i32 %and.i.i.i.i694, 0
  br i1 %tobool.not.i.i.i695, label %PageSwapCache.exit700, label %if.then.i.i.i697, !prof !557

if.then.i.i.i697:                                 ; preds = %land.rhs.i.i696
  call void @__sanitizer_cov_trace_pc() #15
  %385 = inttoptr i32 %retval.0.i.i687 to ptr
  call void @dump_page(ptr noundef %385, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

PageSwapCache.exit700:                            ; preds = %land.rhs.i.i696
  %386 = ptrtoint ptr %375 to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load volatile i32, ptr %375, align 4
  %388 = and i32 %387, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %388)
  %tobool.i.i698.not = icmp eq i32 %388, 0
  br i1 %tobool.i.i698.not, label %PageSwapCache.exit700.if.then122_crit_edge, label %PageSwapCache.exit700.if.end178_crit_edge

PageSwapCache.exit700.if.end178_crit_edge:        ; preds = %PageSwapCache.exit700
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end178

PageSwapCache.exit700.if.then122_crit_edge:       ; preds = %PageSwapCache.exit700
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then122

if.then122:                                       ; preds = %PageSwapCache.exit700.if.then122_crit_edge, %folio_test_swapbacked.exit.i.i693.if.then122_crit_edge
  %389 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load i32, ptr %gfp_mask, align 4
  %and124 = and i32 %390, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and124)
  %tobool125.not = icmp eq i32 %and124, 0
  br i1 %tobool125.not, label %if.then122.keep_locked_crit_edge, label %if.end127

if.then122.keep_locked_crit_edge:                 ; preds = %if.then122
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end127:                                        ; preds = %if.then122
  %391 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %391)
  %392 = load volatile i32, ptr %24, align 4
  %and.i.i.i1186 = and i32 %392, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1186)
  %tobool.not.i5.i.i = icmp eq i32 %and.i.i.i1186, 0
  br i1 %tobool.not.i5.i.i, label %if.end.i.i.i1189, label %if.then.i.i.i1188, !prof !557

if.then.i.i.i1188:                                ; preds = %if.end127
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i1187 = add i32 %392, -1
  br label %_compound_head.exit.i.i1192

if.end.i.i.i1189:                                 ; preds = %if.end127
  call void @__sanitizer_cov_trace_pc() #15
  %393 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i.i1192

_compound_head.exit.i.i1192:                      ; preds = %if.end.i.i.i1189, %if.then.i.i.i1188
  %retval.0.i.i.i1190 = phi i32 [ %sub.i.i.i1187, %if.then.i.i.i1188 ], [ %393, %if.end.i.i.i1189 ]
  %394 = inttoptr i32 %retval.0.i.i.i1190 to ptr
  %395 = ptrtoint ptr %394 to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load volatile i32, ptr %394, align 4
  %397 = and i32 %396, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %397)
  %tobool.not.i.i.i1191 = icmp eq i32 %397, 0
  br i1 %tobool.not.i.i.i1191, label %PageCompound.exit.i.i, label %_compound_head.exit.i.i1192.land.rhs.i.i1195_crit_edge

_compound_head.exit.i.i1192.land.rhs.i.i1195_crit_edge: ; preds = %_compound_head.exit.i.i1192
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.rhs.i.i1195

PageCompound.exit.i.i:                            ; preds = %_compound_head.exit.i.i1192
  %398 = getelementptr inbounds %struct.page, ptr %394, i32 0, i32 1
  %399 = ptrtoint ptr %398 to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load volatile i32, ptr %398, align 4
  %and.i.i.i.i1193 = and i32 %400, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i1193)
  %tobool.not.i.i1194 = icmp eq i32 %and.i.i.i.i1193, 0
  br i1 %tobool.not.i.i1194, label %PageCompound.exit.i.i.if.end.i1206_crit_edge, label %PageCompound.exit.i.i.land.rhs.i.i1195_crit_edge

PageCompound.exit.i.i.land.rhs.i.i1195_crit_edge: ; preds = %PageCompound.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.rhs.i.i1195

PageCompound.exit.i.i.if.end.i1206_crit_edge:     ; preds = %PageCompound.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i1206

land.rhs.i.i1195:                                 ; preds = %PageCompound.exit.i.i.land.rhs.i.i1195_crit_edge, %_compound_head.exit.i.i1192.land.rhs.i.i1195_crit_edge
  %401 = ptrtoint ptr %394 to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load volatile i32, ptr %394, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %402)
  %cmp.i.not.i.i.i.i = icmp eq i32 %402, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i1196, label %PageHead.exit.i.i.i, !prof !558

if.then.i.i.i.i1196:                              ; preds = %land.rhs.i.i1195
  call void @__sanitizer_cov_trace_pc() #15
  %403 = inttoptr i32 %retval.0.i.i.i1190 to ptr
  call void @dump_page(ptr noundef %403, ptr noundef nonnull @.str.153) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i.i.i:                              ; preds = %land.rhs.i.i1195
  %404 = ptrtoint ptr %394 to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load volatile i32, ptr %394, align 4
  %406 = and i32 %405, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %406)
  %tobool.not.i6.i.i = icmp eq i32 %406, 0
  br i1 %tobool.not.i6.i.i, label %PageHead.exit.i.i.i.if.end.i1206_crit_edge, label %hpage_pincount_available.exit.i

PageHead.exit.i.i.i.if.end.i1206_crit_edge:       ; preds = %PageHead.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i1206

hpage_pincount_available.exit.i:                  ; preds = %PageHead.exit.i.i.i
  %407 = getelementptr %struct.page, ptr %394, i32 1, i32 1
  %compound_order.i.i.i = getelementptr inbounds %struct.anon.22, ptr %407, i32 0, i32 2
  %408 = ptrtoint ptr %compound_order.i.i.i to i32
  call void @__asan_load1_noabort(i32 %408)
  %409 = load i8, ptr %compound_order.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %409)
  %phi.cmp.i.i = icmp ugt i8 %409, 1
  br i1 %phi.cmp.i.i, label %if.then.i1197, label %hpage_pincount_available.exit.i.if.end.i1206_crit_edge

hpage_pincount_available.exit.i.if.end.i1206_crit_edge: ; preds = %hpage_pincount_available.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i1206

if.then.i1197:                                    ; preds = %hpage_pincount_available.exit.i
  %410 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %410)
  %411 = load volatile i32, ptr %24, align 4
  %and.i.i.i7.i = and i32 %411, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i7.i)
  %tobool.not.i5.i.i.i = icmp eq i32 %and.i.i.i7.i, 0
  br i1 %tobool.not.i5.i.i.i, label %if.end.i.i.i.i1198, label %if.then.i.i.i8.i, !prof !557

if.then.i.i.i8.i:                                 ; preds = %if.then.i1197
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i.i = add i32 %411, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i.i1198:                               ; preds = %if.then.i1197
  call void @__sanitizer_cov_trace_pc() #15
  %412 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i.i1198, %if.then.i.i.i8.i
  %retval.0.i.i.i.i1199 = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i8.i ], [ %412, %if.end.i.i.i.i1198 ]
  %413 = inttoptr i32 %retval.0.i.i.i.i1199 to ptr
  %414 = ptrtoint ptr %413 to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load volatile i32, ptr %413, align 4
  %416 = and i32 %415, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %416)
  %tobool.not.i.i.i.i1200 = icmp eq i32 %416, 0
  br i1 %tobool.not.i.i.i.i1200, label %PageCompound.exit.i.i.i, label %_compound_head.exit.i.i.i.land.rhs.i.i.i_crit_edge

_compound_head.exit.i.i.i.land.rhs.i.i.i_crit_edge: ; preds = %_compound_head.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.rhs.i.i.i

PageCompound.exit.i.i.i:                          ; preds = %_compound_head.exit.i.i.i
  %417 = getelementptr inbounds %struct.page, ptr %413, i32 0, i32 1
  %418 = ptrtoint ptr %417 to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load volatile i32, ptr %417, align 4
  %and.i.i.i.i.i1201 = and i32 %419, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i1201)
  %tobool.not.i.i9.i = icmp eq i32 %and.i.i.i.i.i1201, 0
  br i1 %tobool.not.i.i9.i, label %PageCompound.exit.i.i.i.if.then.i.i1203_crit_edge, label %PageCompound.exit.i.i.i.land.rhs.i.i.i_crit_edge, !prof !607

PageCompound.exit.i.i.i.land.rhs.i.i.i_crit_edge: ; preds = %PageCompound.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.rhs.i.i.i

PageCompound.exit.i.i.i.if.then.i.i1203_crit_edge: ; preds = %PageCompound.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i1203

land.rhs.i.i.i:                                   ; preds = %PageCompound.exit.i.i.i.land.rhs.i.i.i_crit_edge, %_compound_head.exit.i.i.i.land.rhs.i.i.i_crit_edge
  %420 = ptrtoint ptr %413 to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load volatile i32, ptr %413, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %421)
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %421, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i.i.i1202, label %PageHead.exit.i.i.i.i, !prof !558

if.then.i.i.i.i.i1202:                            ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %422 = inttoptr i32 %retval.0.i.i.i.i1199 to ptr
  call void @dump_page(ptr noundef %422, ptr noundef nonnull @.str.153) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %land.rhs.i.i.i
  %423 = ptrtoint ptr %413 to i32
  call void @__asan_load4_noabort(i32 %423)
  %424 = load volatile i32, ptr %413, align 4
  %425 = and i32 %424, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %425)
  %tobool.not.i6.i.i.i = icmp eq i32 %425, 0
  br i1 %tobool.not.i6.i.i.i, label %PageHead.exit.i.i.i.i.if.then.i.i1203_crit_edge, label %hpage_pincount_available.exit.i.i, !prof !607

PageHead.exit.i.i.i.i.if.then.i.i1203_crit_edge:  ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i1203

hpage_pincount_available.exit.i.i:                ; preds = %PageHead.exit.i.i.i.i
  %426 = getelementptr %struct.page, ptr %413, i32 1, i32 1
  %compound_order.i.i.i.i = getelementptr inbounds %struct.anon.22, ptr %426, i32 0, i32 2
  %427 = ptrtoint ptr %compound_order.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %427)
  %428 = load i8, ptr %compound_order.i.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %428)
  %phi.cmp.i.i.i = icmp ugt i8 %428, 1
  br i1 %phi.cmp.i.i.i, label %do.end6.i.i, label %hpage_pincount_available.exit.i.i.if.then.i.i1203_crit_edge, !prof !557

hpage_pincount_available.exit.i.i.if.then.i.i1203_crit_edge: ; preds = %hpage_pincount_available.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i1203

if.then.i.i1203:                                  ; preds = %hpage_pincount_available.exit.i.i.if.then.i.i1203_crit_edge, %PageHead.exit.i.i.i.i.if.then.i.i1203_crit_edge, %PageCompound.exit.i.i.i.if.then.i.i1203_crit_edge
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.162) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 910, 0\0A.popsection", ""() #13, !srcloc !608
  unreachable

do.end6.i.i:                                      ; preds = %hpage_pincount_available.exit.i.i
  %429 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %429)
  %430 = load volatile i32, ptr %24, align 4
  %and.i.i10.i = and i32 %430, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i10.i)
  %tobool.not.i12.i.i = icmp eq i32 %and.i.i10.i, 0
  br i1 %tobool.not.i12.i.i, label %if.end.i.i13.i, label %if.then.i.i12.i, !prof !557

if.then.i.i12.i:                                  ; preds = %do.end6.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i11.i = add i32 %430, -1
  br label %compound_pincount.exit.i

if.end.i.i13.i:                                   ; preds = %do.end6.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %431 = ptrtoint ptr %add.ptr to i32
  br label %compound_pincount.exit.i

compound_pincount.exit.i:                         ; preds = %if.end.i.i13.i, %if.then.i.i12.i
  %retval.0.i.i14.i = phi i32 [ %sub.i.i11.i, %if.then.i.i12.i ], [ %431, %if.end.i.i13.i ]
  %432 = inttoptr i32 %retval.0.i.i14.i to ptr
  %hpage_pinned_refcount.i.i.i.i = getelementptr %struct.page, ptr %432, i32 2, i32 1, i32 0, i32 0, i32 1
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %hpage_pinned_refcount.i.i.i.i, i32 noundef 4) #13
  %433 = ptrtoint ptr %hpage_pinned_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %433)
  %434 = load volatile i32, ptr %hpage_pinned_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %434)
  %cmp.i1204 = icmp sgt i32 %434, 0
  br i1 %cmp.i1204, label %compound_pincount.exit.i.keep_locked_crit_edge, label %compound_pincount.exit.i.if.end130_crit_edge

compound_pincount.exit.i.if.end130_crit_edge:     ; preds = %compound_pincount.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end130

compound_pincount.exit.i.keep_locked_crit_edge:   ; preds = %compound_pincount.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end.i1206:                                     ; preds = %hpage_pincount_available.exit.i.if.end.i1206_crit_edge, %PageHead.exit.i.i.i.if.end.i1206_crit_edge, %PageCompound.exit.i.i.if.end.i1206_crit_edge
  %435 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %435)
  %436 = load volatile i32, ptr %24, align 4
  %and.i.i1205 = and i32 %436, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1205)
  %tobool.not.i16.i = icmp eq i32 %and.i.i1205, 0
  br i1 %tobool.not.i16.i, label %if.end.i.i1208, label %if.then.i17.i, !prof !557

if.then.i17.i:                                    ; preds = %if.end.i1206
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1207 = add i32 %436, -1
  br label %page_maybe_dma_pinned.exit

if.end.i.i1208:                                   ; preds = %if.end.i1206
  call void @__sanitizer_cov_trace_pc() #15
  %437 = ptrtoint ptr %add.ptr to i32
  br label %page_maybe_dma_pinned.exit

page_maybe_dma_pinned.exit:                       ; preds = %if.end.i.i1208, %if.then.i17.i
  %retval.0.i.i1209 = phi i32 [ %sub.i.i1207, %if.then.i17.i ], [ %437, %if.end.i.i1208 ]
  %438 = inttoptr i32 %retval.0.i.i1209 to ptr
  %_refcount.i.i = getelementptr inbounds %struct.page, ptr %438, i32 0, i32 3
  %call.i.i.i.i1210 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #13
  %439 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %439)
  %440 = load volatile i32, ptr %_refcount.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1023, i32 %440)
  %cmp4.i = icmp ugt i32 %440, 1023
  br i1 %cmp4.i, label %page_maybe_dma_pinned.exit.keep_locked_crit_edge, label %page_maybe_dma_pinned.exit.if.end130_crit_edge

page_maybe_dma_pinned.exit.if.end130_crit_edge:   ; preds = %page_maybe_dma_pinned.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end130

page_maybe_dma_pinned.exit.keep_locked_crit_edge: ; preds = %page_maybe_dma_pinned.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end130:                                        ; preds = %page_maybe_dma_pinned.exit.if.end130_crit_edge, %compound_pincount.exit.i.if.end130_crit_edge
  %call145 = call i32 @add_to_swap(ptr noundef %add.ptr) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call145)
  %tobool146.not = icmp eq i32 %call145, 0
  br i1 %tobool146.not, label %if.then147, label %if.end160

if.then147:                                       ; preds = %if.end130
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retval.0.i1119)
  %cmp324 = icmp ugt i32 %retval.0.i1119, 1
  br i1 %cmp324, label %if.then325, label %if.then147.activate_locked_crit_edge

if.then147.activate_locked_crit_edge:             ; preds = %if.then147
  call void @__sanitizer_cov_trace_pc() #15
  br label %activate_locked

if.end160:                                        ; preds = %if.end130
  call void @__sanitizer_cov_trace_pc() #15
  %call161 = call ptr @page_mapping(ptr noundef %add.ptr) #13
  br label %if.end178

if.end178:                                        ; preds = %if.end160, %PageSwapCache.exit700.if.end178_crit_edge, %PageSwapBacked.exit.if.end178_crit_edge, %PageAnon.exit.if.end178_crit_edge
  %may_enter_fs.0.shrunk = phi i1 [ %88, %PageSwapCache.exit700.if.end178_crit_edge ], [ true, %if.end160 ], [ %88, %PageSwapBacked.exit.if.end178_crit_edge ], [ %88, %PageAnon.exit.if.end178_crit_edge ]
  %mapping.0 = phi ptr [ %call59, %PageSwapCache.exit700.if.end178_crit_edge ], [ %call161, %if.end160 ], [ %call59, %PageSwapBacked.exit.if.end178_crit_edge ], [ %call59, %PageAnon.exit.if.end178_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retval.0.i1119)
  %cmp = icmp ugt i32 %retval.0.i1119, 1
  br i1 %cmp, label %land.lhs.true179, label %if.end178.if.end185_crit_edge

if.end178.if.end185_crit_edge:                    ; preds = %if.end178
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end185

land.lhs.true179:                                 ; preds = %if.end178
  call void @__sanitizer_cov_trace_pc() #15
  %441 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %441)
  %442 = load i32, ptr %nr_scanned, align 4
  %sub.neg = sub i32 1, %retval.0.i1119
  %sub184 = add i32 %sub.neg, %442
  store i32 %sub184, ptr %nr_scanned, align 4
  br label %if.end185

if.end185:                                        ; preds = %land.lhs.true179, %if.end178.if.end185_crit_edge
  %nr_pages.0 = phi i32 [ 1, %land.lhs.true179 ], [ %retval.0.i1119, %if.end178.if.end185_crit_edge ]
  %call186 = call zeroext i1 @page_mapped(ptr noundef %add.ptr) #13
  br i1 %call186, label %if.then187, label %if.end185.if.end214_crit_edge

if.end185.if.end214_crit_edge:                    ; preds = %if.end185
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end214

if.then187:                                       ; preds = %if.end185
  %443 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %443)
  %444 = load volatile i32, ptr %24, align 4
  %and.i.i701 = and i32 %444, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i701)
  %tobool.not.i.i702 = icmp eq i32 %and.i.i701, 0
  br i1 %tobool.not.i.i702, label %if.end.i.i705, label %if.then.i.i704, !prof !557

if.then.i.i704:                                   ; preds = %if.then187
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i703 = add i32 %444, -1
  br label %_compound_head.exit.i710

if.end.i.i705:                                    ; preds = %if.then187
  call void @__sanitizer_cov_trace_pc() #15
  %445 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i710

_compound_head.exit.i710:                         ; preds = %if.end.i.i705, %if.then.i.i704
  %retval.0.i.i706 = phi i32 [ %sub.i.i703, %if.then.i.i704 ], [ %445, %if.end.i.i705 ]
  %446 = inttoptr i32 %retval.0.i.i706 to ptr
  %447 = ptrtoint ptr %446 to i32
  call void @__asan_load4_noabort(i32 %447)
  %448 = load volatile i32, ptr %446, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %448)
  %cmp.i.not.i707 = icmp eq i32 %448, -1
  %449 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %449)
  %450 = load volatile i32, ptr %24, align 4
  %and.i16.i708 = and i32 %450, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i708)
  %tobool.not.i17.i709 = icmp eq i32 %and.i16.i708, 0
  br i1 %cmp.i.not.i707, label %if.then.i711, label %do.end10.i717, !prof !558

if.then.i711:                                     ; preds = %_compound_head.exit.i710
  br i1 %tobool.not.i17.i709, label %if.end.i20.i714, label %if.then.i19.i713, !prof !557

if.then.i19.i713:                                 ; preds = %if.then.i711
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i712 = add i32 %450, -1
  br label %_compound_head.exit22.i716

if.end.i20.i714:                                  ; preds = %if.then.i711
  call void @__sanitizer_cov_trace_pc() #15
  %451 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i716

_compound_head.exit22.i716:                       ; preds = %if.end.i20.i714, %if.then.i19.i713
  %retval.0.i21.i715 = phi i32 [ %sub.i18.i712, %if.then.i19.i713 ], [ %451, %if.end.i20.i714 ]
  %452 = inttoptr i32 %retval.0.i21.i715 to ptr
  call void @dump_page(ptr noundef %452, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #13, !srcloc !600
  unreachable

do.end10.i717:                                    ; preds = %_compound_head.exit.i710
  br i1 %tobool.not.i17.i709, label %if.end.i27.i720, label %if.then.i26.i719, !prof !557

if.then.i26.i719:                                 ; preds = %do.end10.i717
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i718 = add i32 %450, -1
  br label %PageSwapBacked.exit724

if.end.i27.i720:                                  ; preds = %do.end10.i717
  call void @__sanitizer_cov_trace_pc() #15
  %453 = ptrtoint ptr %add.ptr to i32
  br label %PageSwapBacked.exit724

PageSwapBacked.exit724:                           ; preds = %if.end.i27.i720, %if.then.i26.i719
  %retval.0.i28.i721 = phi i32 [ %sub.i25.i718, %if.then.i26.i719 ], [ %453, %if.end.i27.i720 ]
  %454 = inttoptr i32 %retval.0.i28.i721 to ptr
  %455 = ptrtoint ptr %454 to i32
  call void @__asan_load4_noabort(i32 %455)
  %456 = load volatile i32, ptr %454, align 4
  call void @try_to_unmap(ptr noundef %add.ptr, i32 noundef 64) #13
  %call202 = call zeroext i1 @page_mapped(ptr noundef %add.ptr) #13
  br i1 %call202, label %if.then203, label %PageSwapBacked.exit724.if.end214_crit_edge

PageSwapBacked.exit724.if.end214_crit_edge:       ; preds = %PageSwapBacked.exit724
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end214

if.then203:                                       ; preds = %PageSwapBacked.exit724
  %457 = and i32 %456, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %457)
  %tobool190.not = icmp eq i32 %457, 0
  %458 = ptrtoint ptr %nr_unmap_fail to i32
  call void @__asan_load4_noabort(i32 %458)
  %459 = load i32, ptr %nr_unmap_fail, align 4
  %add204 = add i32 %459, %nr_pages.0
  store i32 %add204, ptr %nr_unmap_fail, align 4
  br i1 %tobool190.not, label %land.lhs.true206, label %if.then203.activate_locked_crit_edge

if.then203.activate_locked_crit_edge:             ; preds = %if.then203
  call void @__sanitizer_cov_trace_pc() #15
  br label %activate_locked

land.lhs.true206:                                 ; preds = %if.then203
  %460 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load volatile i32, ptr %24, align 4
  %and.i.i725 = and i32 %461, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i725)
  %tobool.not.i.i726 = icmp eq i32 %and.i.i725, 0
  br i1 %tobool.not.i.i726, label %if.end.i.i729, label %if.then.i.i728, !prof !557

if.then.i.i728:                                   ; preds = %land.lhs.true206
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i727 = add i32 %461, -1
  br label %_compound_head.exit.i734

if.end.i.i729:                                    ; preds = %land.lhs.true206
  call void @__sanitizer_cov_trace_pc() #15
  %462 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i734

_compound_head.exit.i734:                         ; preds = %if.end.i.i729, %if.then.i.i728
  %retval.0.i.i730 = phi i32 [ %sub.i.i727, %if.then.i.i728 ], [ %462, %if.end.i.i729 ]
  %463 = inttoptr i32 %retval.0.i.i730 to ptr
  %464 = ptrtoint ptr %463 to i32
  call void @__asan_load4_noabort(i32 %464)
  %465 = load volatile i32, ptr %463, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %465)
  %cmp.i.not.i731 = icmp eq i32 %465, -1
  %466 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %466)
  %467 = load volatile i32, ptr %24, align 4
  %and.i16.i732 = and i32 %467, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i732)
  %tobool.not.i17.i733 = icmp eq i32 %and.i16.i732, 0
  br i1 %cmp.i.not.i731, label %if.then.i735, label %do.end10.i741, !prof !558

if.then.i735:                                     ; preds = %_compound_head.exit.i734
  br i1 %tobool.not.i17.i733, label %if.end.i20.i738, label %if.then.i19.i737, !prof !557

if.then.i19.i737:                                 ; preds = %if.then.i735
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i736 = add i32 %467, -1
  br label %_compound_head.exit22.i740

if.end.i20.i738:                                  ; preds = %if.then.i735
  call void @__sanitizer_cov_trace_pc() #15
  %468 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i740

_compound_head.exit22.i740:                       ; preds = %if.end.i20.i738, %if.then.i19.i737
  %retval.0.i21.i739 = phi i32 [ %sub.i18.i736, %if.then.i19.i737 ], [ %468, %if.end.i20.i738 ]
  %469 = inttoptr i32 %retval.0.i21.i739 to ptr
  call void @dump_page(ptr noundef %469, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #13, !srcloc !600
  unreachable

do.end10.i741:                                    ; preds = %_compound_head.exit.i734
  br i1 %tobool.not.i17.i733, label %if.end.i27.i744, label %if.then.i26.i743, !prof !557

if.then.i26.i743:                                 ; preds = %do.end10.i741
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i742 = add i32 %467, -1
  br label %PageSwapBacked.exit748

if.end.i27.i744:                                  ; preds = %do.end10.i741
  call void @__sanitizer_cov_trace_pc() #15
  %470 = ptrtoint ptr %add.ptr to i32
  br label %PageSwapBacked.exit748

PageSwapBacked.exit748:                           ; preds = %if.end.i27.i744, %if.then.i26.i743
  %retval.0.i28.i745 = phi i32 [ %sub.i25.i742, %if.then.i26.i743 ], [ %470, %if.end.i27.i744 ]
  %471 = inttoptr i32 %retval.0.i28.i745 to ptr
  %472 = ptrtoint ptr %471 to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load volatile i32, ptr %471, align 4
  %474 = and i32 %473, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %474)
  %tobool208.not = icmp eq i32 %474, 0
  br i1 %tobool208.not, label %PageSwapBacked.exit748.activate_locked_crit_edge, label %if.then209

PageSwapBacked.exit748.activate_locked_crit_edge: ; preds = %PageSwapBacked.exit748
  call void @__sanitizer_cov_trace_pc() #15
  br label %activate_locked

if.then209:                                       ; preds = %PageSwapBacked.exit748
  call void @__sanitizer_cov_trace_pc() #15
  %475 = ptrtoint ptr %nr_lazyfree_fail to i32
  call void @__asan_load4_noabort(i32 %475)
  %476 = load i32, ptr %nr_lazyfree_fail, align 4
  %add210 = add i32 %476, %nr_pages.0
  store i32 %add210, ptr %nr_lazyfree_fail, align 4
  br label %activate_locked

if.end214:                                        ; preds = %PageSwapBacked.exit724.if.end214_crit_edge, %if.end185.if.end214_crit_edge
  %477 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %477)
  %478 = load volatile i32, ptr %24, align 4
  %and.i.i749 = and i32 %478, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i749)
  %tobool.not.i.i750 = icmp eq i32 %and.i.i749, 0
  br i1 %tobool.not.i.i750, label %if.end.i.i753, label %if.then.i.i752, !prof !557

if.then.i.i752:                                   ; preds = %if.end214
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i751 = add i32 %478, -1
  br label %_compound_head.exit.i758

if.end.i.i753:                                    ; preds = %if.end214
  call void @__sanitizer_cov_trace_pc() #15
  %479 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i758

_compound_head.exit.i758:                         ; preds = %if.end.i.i753, %if.then.i.i752
  %retval.0.i.i754 = phi i32 [ %sub.i.i751, %if.then.i.i752 ], [ %479, %if.end.i.i753 ]
  %480 = inttoptr i32 %retval.0.i.i754 to ptr
  %481 = ptrtoint ptr %480 to i32
  call void @__asan_load4_noabort(i32 %481)
  %482 = load volatile i32, ptr %480, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %482)
  %cmp.i.not.i755 = icmp eq i32 %482, -1
  %483 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %483)
  %484 = load volatile i32, ptr %24, align 4
  %and.i13.i756 = and i32 %484, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i756)
  %tobool.not.i14.i757 = icmp eq i32 %and.i13.i756, 0
  br i1 %cmp.i.not.i755, label %if.then.i759, label %do.end8.i765, !prof !558

if.then.i759:                                     ; preds = %_compound_head.exit.i758
  br i1 %tobool.not.i14.i757, label %if.end.i17.i762, label %if.then.i16.i761, !prof !557

if.then.i16.i761:                                 ; preds = %if.then.i759
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i760 = add i32 %484, -1
  br label %_compound_head.exit19.i764

if.end.i17.i762:                                  ; preds = %if.then.i759
  call void @__sanitizer_cov_trace_pc() #15
  %485 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i764

_compound_head.exit19.i764:                       ; preds = %if.end.i17.i762, %if.then.i16.i761
  %retval.0.i18.i763 = phi i32 [ %sub.i15.i760, %if.then.i16.i761 ], [ %485, %if.end.i17.i762 ]
  %486 = inttoptr i32 %retval.0.i18.i763 to ptr
  call void @dump_page(ptr noundef %486, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #13, !srcloc !588
  unreachable

do.end8.i765:                                     ; preds = %_compound_head.exit.i758
  br i1 %tobool.not.i14.i757, label %if.end.i24.i768, label %if.then.i23.i767, !prof !557

if.then.i23.i767:                                 ; preds = %do.end8.i765
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i766 = add i32 %484, -1
  br label %PageDirty.exit

if.end.i24.i768:                                  ; preds = %do.end8.i765
  call void @__sanitizer_cov_trace_pc() #15
  %487 = ptrtoint ptr %add.ptr to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i768, %if.then.i23.i767
  %retval.0.i25.i769 = phi i32 [ %sub.i22.i766, %if.then.i23.i767 ], [ %487, %if.end.i24.i768 ]
  %488 = inttoptr i32 %retval.0.i25.i769 to ptr
  %489 = ptrtoint ptr %488 to i32
  call void @__asan_load4_noabort(i32 %489)
  %490 = load volatile i32, ptr %488, align 4
  %491 = and i32 %490, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %491)
  %tobool216.not = icmp eq i32 %491, 0
  br i1 %tobool216.not, label %PageDirty.exit.if.end273_crit_edge, label %if.then217

PageDirty.exit.if.end273_crit_edge:               ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end273

if.then217:                                       ; preds = %PageDirty.exit
  %492 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %492)
  %493 = load volatile i32, ptr %24, align 4
  %and.i.i1213 = and i32 %493, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1213)
  %tobool.not.i.i1214 = icmp eq i32 %and.i.i1213, 0
  br i1 %tobool.not.i.i1214, label %if.end.i.i1217, label %if.then.i.i1216, !prof !557

if.then.i.i1216:                                  ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1215 = add i32 %493, -1
  br label %_compound_head.exit.i1221

if.end.i.i1217:                                   ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #15
  %494 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i1221

_compound_head.exit.i1221:                        ; preds = %if.end.i.i1217, %if.then.i.i1216
  %retval.0.i.i1218 = phi i32 [ %sub.i.i1215, %if.then.i.i1216 ], [ %494, %if.end.i.i1217 ]
  %495 = inttoptr i32 %retval.0.i.i1218 to ptr
  %496 = getelementptr inbounds %struct.page, ptr %495, i32 0, i32 1
  %497 = ptrtoint ptr %496 to i32
  call void @__asan_load4_noabort(i32 %497)
  %498 = load volatile i32, ptr %496, align 4
  %and.i.i.i.i.i1219 = and i32 %498, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i1219)
  %tobool.not.i.i.i.i1220 = icmp eq i32 %and.i.i.i.i.i1219, 0
  br i1 %tobool.not.i.i.i.i1220, label %page_is_file_lru.exit, label %if.then.i.i.i.i1222, !prof !557

if.then.i.i.i.i1222:                              ; preds = %_compound_head.exit.i1221
  call void @__sanitizer_cov_trace_pc() #15
  %499 = inttoptr i32 %retval.0.i.i1218 to ptr
  call void @dump_page(ptr noundef %499, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

page_is_file_lru.exit:                            ; preds = %_compound_head.exit.i1221
  %500 = ptrtoint ptr %495 to i32
  call void @__asan_load4_noabort(i32 %500)
  %501 = load volatile i32, ptr %495, align 4
  %502 = and i32 %501, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %502)
  %tobool219.not.not = icmp eq i32 %502, 0
  br i1 %tobool219.not.not, label %land.lhs.true220, label %page_is_file_lru.exit.if.end231_crit_edge

page_is_file_lru.exit.if.end231_crit_edge:        ; preds = %page_is_file_lru.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end231

land.lhs.true220:                                 ; preds = %page_is_file_lru.exit
  %503 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i1223 = and i32 %503, -16384
  %504 = inttoptr i32 %and.i.i1223 to ptr
  %task.i1224 = getelementptr inbounds %struct.thread_info, ptr %504, i32 0, i32 2
  %505 = ptrtoint ptr %task.i1224 to i32
  call void @__asan_load4_noabort(i32 %505)
  %506 = load ptr, ptr %task.i1224, align 8
  %flags.i1225 = getelementptr inbounds %struct.task_struct, ptr %506, i32 0, i32 3
  %507 = ptrtoint ptr %flags.i1225 to i32
  call void @__asan_load4_noabort(i32 %507)
  %508 = load i32, ptr %flags.i1225, align 4
  %and.i1226 = and i32 %508, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1226)
  %tobool222.not = icmp eq i32 %and.i1226, 0
  br i1 %tobool222.not, label %land.lhs.true220.if.then230_crit_edge, label %lor.lhs.false223

land.lhs.true220.if.then230_crit_edge:            ; preds = %land.lhs.true220
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then230

lor.lhs.false223:                                 ; preds = %land.lhs.true220
  %509 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %509)
  %510 = load volatile i32, ptr %24, align 4
  %and.i.i772 = and i32 %510, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i772)
  %tobool.not.i.i773 = icmp eq i32 %and.i.i772, 0
  br i1 %tobool.not.i.i773, label %if.end.i.i776, label %if.then.i.i775, !prof !557

if.then.i.i775:                                   ; preds = %lor.lhs.false223
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i774 = add i32 %510, -1
  br label %_compound_head.exit.i781

if.end.i.i776:                                    ; preds = %lor.lhs.false223
  call void @__sanitizer_cov_trace_pc() #15
  %511 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i781

_compound_head.exit.i781:                         ; preds = %if.end.i.i776, %if.then.i.i775
  %retval.0.i.i777 = phi i32 [ %sub.i.i774, %if.then.i.i775 ], [ %511, %if.end.i.i776 ]
  %512 = inttoptr i32 %retval.0.i.i777 to ptr
  %513 = ptrtoint ptr %512 to i32
  call void @__asan_load4_noabort(i32 %513)
  %514 = load volatile i32, ptr %512, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %514)
  %cmp.i.not.i778 = icmp eq i32 %514, -1
  %515 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %515)
  %516 = load volatile i32, ptr %24, align 4
  %and.i16.i779 = and i32 %516, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i779)
  %tobool.not.i17.i780 = icmp eq i32 %and.i16.i779, 0
  br i1 %cmp.i.not.i778, label %if.then.i782, label %do.end10.i788, !prof !558

if.then.i782:                                     ; preds = %_compound_head.exit.i781
  br i1 %tobool.not.i17.i780, label %if.end.i20.i785, label %if.then.i19.i784, !prof !557

if.then.i19.i784:                                 ; preds = %if.then.i782
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i783 = add i32 %516, -1
  br label %_compound_head.exit22.i787

if.end.i20.i785:                                  ; preds = %if.then.i782
  call void @__sanitizer_cov_trace_pc() #15
  %517 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i787

_compound_head.exit22.i787:                       ; preds = %if.end.i20.i785, %if.then.i19.i784
  %retval.0.i21.i786 = phi i32 [ %sub.i18.i783, %if.then.i19.i784 ], [ %517, %if.end.i20.i785 ]
  %518 = inttoptr i32 %retval.0.i21.i786 to ptr
  call void @dump_page(ptr noundef %518, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !602
  unreachable

do.end10.i788:                                    ; preds = %_compound_head.exit.i781
  br i1 %tobool.not.i17.i780, label %if.end.i27.i791, label %if.then.i26.i790, !prof !557

if.then.i26.i790:                                 ; preds = %do.end10.i788
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i789 = add i32 %516, -1
  br label %PageReclaim.exit795

if.end.i27.i791:                                  ; preds = %do.end10.i788
  call void @__sanitizer_cov_trace_pc() #15
  %519 = ptrtoint ptr %add.ptr to i32
  br label %PageReclaim.exit795

PageReclaim.exit795:                              ; preds = %if.end.i27.i791, %if.then.i26.i790
  %retval.0.i28.i792 = phi i32 [ %sub.i25.i789, %if.then.i26.i790 ], [ %519, %if.end.i27.i791 ]
  %520 = inttoptr i32 %retval.0.i28.i792 to ptr
  %521 = ptrtoint ptr %520 to i32
  call void @__asan_load4_noabort(i32 %521)
  %522 = load volatile i32, ptr %520, align 4
  %523 = and i32 %522, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %523)
  %tobool225.not = icmp eq i32 %523, 0
  br i1 %tobool225.not, label %PageReclaim.exit795.if.then230_crit_edge, label %lor.lhs.false226

PageReclaim.exit795.if.then230_crit_edge:         ; preds = %PageReclaim.exit795
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then230

lor.lhs.false226:                                 ; preds = %PageReclaim.exit795
  %524 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %524)
  %525 = load volatile i32, ptr %flags, align 4
  %and1.i796 = and i32 %525, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i796)
  %tobool229.not = icmp eq i32 %and1.i796, 0
  br i1 %tobool229.not, label %lor.lhs.false226.if.then230_crit_edge, label %lor.lhs.false226.if.end231_crit_edge

lor.lhs.false226.if.end231_crit_edge:             ; preds = %lor.lhs.false226
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end231

lor.lhs.false226.if.then230_crit_edge:            ; preds = %lor.lhs.false226
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then230

if.then230:                                       ; preds = %lor.lhs.false226.if.then230_crit_edge, %PageReclaim.exit795.if.then230_crit_edge, %land.lhs.true220.if.then230_crit_edge
  call void @inc_node_page_state(ptr noundef %add.ptr, i32 noundef 30) #13
  %526 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %526)
  %527 = load volatile i32, ptr %24, align 4
  %and.i.i797 = and i32 %527, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i797)
  %tobool.not.i798 = icmp eq i32 %and.i.i797, 0
  br i1 %tobool.not.i798, label %do.body7.i802, label %if.then.i799, !prof !557

if.then.i799:                                     ; preds = %if.then230
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.161) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !603
  unreachable

do.body7.i802:                                    ; preds = %if.then230
  %528 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %528)
  %529 = load volatile i32, ptr %24, align 4
  %and.i31.i800 = and i32 %529, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i800)
  %tobool.not.i.i801 = icmp eq i32 %and.i31.i800, 0
  br i1 %tobool.not.i.i801, label %if.end.i.i805, label %if.then.i.i804, !prof !557

if.then.i.i804:                                   ; preds = %do.body7.i802
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i803 = add i32 %529, -1
  br label %_compound_head.exit.i810

if.end.i.i805:                                    ; preds = %do.body7.i802
  call void @__sanitizer_cov_trace_pc() #15
  %530 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i810

_compound_head.exit.i810:                         ; preds = %if.end.i.i805, %if.then.i.i804
  %retval.0.i.i806 = phi i32 [ %sub.i.i803, %if.then.i.i804 ], [ %530, %if.end.i.i805 ]
  %531 = inttoptr i32 %retval.0.i.i806 to ptr
  %532 = ptrtoint ptr %531 to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load volatile i32, ptr %531, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %533)
  %cmp.i.not.i807 = icmp eq i32 %533, -1
  %534 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %534)
  %535 = load volatile i32, ptr %24, align 4
  %and.i32.i808 = and i32 %535, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i808)
  %tobool.not.i33.i809 = icmp eq i32 %and.i32.i808, 0
  br i1 %cmp.i.not.i807, label %if.then17.i811, label %do.end24.i817, !prof !558

if.then17.i811:                                   ; preds = %_compound_head.exit.i810
  br i1 %tobool.not.i33.i809, label %if.end.i36.i814, label %if.then.i35.i813, !prof !557

if.then.i35.i813:                                 ; preds = %if.then17.i811
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i34.i812 = add i32 %535, -1
  br label %_compound_head.exit38.i816

if.end.i36.i814:                                  ; preds = %if.then17.i811
  call void @__sanitizer_cov_trace_pc() #15
  %536 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit38.i816

_compound_head.exit38.i816:                       ; preds = %if.end.i36.i814, %if.then.i35.i813
  %retval.0.i37.i815 = phi i32 [ %sub.i34.i812, %if.then.i35.i813 ], [ %536, %if.end.i36.i814 ]
  %537 = inttoptr i32 %retval.0.i37.i815 to ptr
  call void @dump_page(ptr noundef %537, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !604
  unreachable

do.end24.i817:                                    ; preds = %_compound_head.exit.i810
  br i1 %tobool.not.i33.i809, label %if.end.i43.i820, label %if.then.i42.i819, !prof !557

if.then.i42.i819:                                 ; preds = %do.end24.i817
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i41.i818 = add i32 %535, -1
  br label %SetPageReclaim.exit822

if.end.i43.i820:                                  ; preds = %do.end24.i817
  call void @__sanitizer_cov_trace_pc() #15
  %538 = ptrtoint ptr %add.ptr to i32
  br label %SetPageReclaim.exit822

SetPageReclaim.exit822:                           ; preds = %if.end.i43.i820, %if.then.i42.i819
  %retval.0.i44.i821 = phi i32 [ %sub.i41.i818, %if.then.i42.i819 ], [ %538, %if.end.i43.i820 ]
  %539 = inttoptr i32 %retval.0.i44.i821 to ptr
  call void @_set_bit(i32 noundef 18, ptr noundef %539) #13
  br label %activate_locked

if.end231:                                        ; preds = %lor.lhs.false226.if.end231_crit_edge, %page_is_file_lru.exit.if.end231_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %references.01434)
  %cmp232 = icmp eq i32 %references.01434, 1
  %may_enter_fs.0.shrunk.not = xor i1 %may_enter_fs.0.shrunk, true
  %brmerge553 = select i1 %cmp232, i1 true, i1 %may_enter_fs.0.shrunk.not
  br i1 %brmerge553, label %if.end231.keep_locked_crit_edge, label %if.end237

if.end231.keep_locked_crit_edge:                  ; preds = %if.end231
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end237:                                        ; preds = %if.end231
  %540 = ptrtoint ptr %may_unmap to i32
  call void @__asan_load2_noabort(i32 %540)
  %bf.load238 = load i16, ptr %may_unmap, align 4
  %541 = and i16 %bf.load238, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %541)
  %tobool242.not = icmp eq i16 %541, 0
  br i1 %tobool242.not, label %if.end237.keep_locked_crit_edge, label %if.end244

if.end237.keep_locked_crit_edge:                  ; preds = %if.end237
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end244:                                        ; preds = %if.end237
  %542 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %542)
  %543 = load volatile i32, ptr %24, align 4
  %and.i.i.i.i1227 = and i32 %543, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i1227)
  %tobool.not.i.i123.i = icmp eq i32 %and.i.i.i.i1227, 0
  br i1 %tobool.not.i.i123.i, label %thp_nr_pages.exit.i.i, label %if.then.i.i124.i, !prof !557

if.then.i.i124.i:                                 ; preds = %if.end244
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/huge_mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 347, 0\0A.popsection", ""() #13, !srcloc !609
  unreachable

thp_nr_pages.exit.i.i:                            ; preds = %if.end244
  %544 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %544)
  %545 = load volatile i32, ptr %24, align 4
  %and.i.i5.i.i = and i32 %545, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i5.i.i)
  %tobool.not.i.i.i.i1228 = icmp eq i32 %and.i.i5.i.i, 0
  br i1 %tobool.not.i.i.i.i1228, label %if.end.i.i.i.i1231, label %if.then.i.i.i.i1230, !prof !557

if.then.i.i.i.i1230:                              ; preds = %thp_nr_pages.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i.i1229 = add i32 %545, -1
  br label %is_page_cache_freeable.exit.i

if.end.i.i.i.i1231:                               ; preds = %thp_nr_pages.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %546 = ptrtoint ptr %add.ptr to i32
  br label %is_page_cache_freeable.exit.i

is_page_cache_freeable.exit.i:                    ; preds = %if.end.i.i.i.i1231, %if.then.i.i.i.i1230
  %retval.0.i.i.i.i1232 = phi i32 [ %sub.i.i.i.i1229, %if.then.i.i.i.i1230 ], [ %546, %if.end.i.i.i.i1231 ]
  %547 = inttoptr i32 %retval.0.i.i.i.i1232 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %547, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #13
  %548 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %548)
  %549 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  %550 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %550)
  %551 = load i32, ptr %add.ptr, align 4
  %and.i.i125.i = and i32 %551, 24576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i125.i)
  %tobool.i.i.i = icmp ne i32 %and.i.i125.i, 0
  %lnot.ext.i.neg.i.i = sext i1 %tobool.i.i.i to i32
  %sub.i.i1233 = add i32 %549, %lnot.ext.i.neg.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %sub.i.i1233)
  %cmp.i.not.i1234 = icmp eq i32 %sub.i.i1233, 2
  br i1 %cmp.i.not.i1234, label %if.end.i1236, label %is_page_cache_freeable.exit.i.keep_locked_crit_edge

is_page_cache_freeable.exit.i.keep_locked_crit_edge: ; preds = %is_page_cache_freeable.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end.i1236:                                     ; preds = %is_page_cache_freeable.exit.i
  %tobool1.not.i1235 = icmp eq ptr %mapping.0, null
  br i1 %tobool1.not.i1235, label %if.then2.i1237, label %if.end12.i1262

if.then2.i1237:                                   ; preds = %if.end.i1236
  br i1 %tobool.i.i.i, label %if.then5.i, label %if.then2.i1237.keep_locked_crit_edge

if.then2.i1237.keep_locked_crit_edge:             ; preds = %if.then2.i1237
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.then5.i:                                       ; preds = %if.then2.i1237
  %call6.i = call i32 @try_to_free_buffers(ptr noundef %add.ptr) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %if.then5.i.keep_locked_crit_edge, label %if.then8.i

if.then5.i.keep_locked_crit_edge:                 ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.then8.i:                                       ; preds = %if.then5.i
  %552 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %552)
  %553 = load volatile i32, ptr %24, align 4
  %and.i.i.i1238 = and i32 %553, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1238)
  %tobool.not.i.i.i1239 = icmp eq i32 %and.i.i.i1238, 0
  br i1 %tobool.not.i.i.i1239, label %if.end.i.i.i1242, label %if.then.i.i.i1241, !prof !557

if.then.i.i.i1241:                                ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i1240 = add i32 %553, -1
  br label %_compound_head.exit.i.i1247

if.end.i.i.i1242:                                 ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #15
  %554 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i.i1247

_compound_head.exit.i.i1247:                      ; preds = %if.end.i.i.i1242, %if.then.i.i.i1241
  %retval.0.i.i.i1243 = phi i32 [ %sub.i.i.i1240, %if.then.i.i.i1241 ], [ %554, %if.end.i.i.i1242 ]
  %555 = inttoptr i32 %retval.0.i.i.i1243 to ptr
  %556 = ptrtoint ptr %555 to i32
  call void @__asan_load4_noabort(i32 %556)
  %557 = load volatile i32, ptr %555, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %557)
  %cmp.i.not.i.i1244 = icmp eq i32 %557, -1
  %558 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %558)
  %559 = load volatile i32, ptr %24, align 4
  %and.i12.i.i1245 = and i32 %559, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i.i1245)
  %tobool.not.i13.i.i1246 = icmp eq i32 %and.i12.i.i1245, 0
  br i1 %cmp.i.not.i.i1244, label %if.then.i.i1248, label %do.end8.i.i1254, !prof !558

if.then.i.i1248:                                  ; preds = %_compound_head.exit.i.i1247
  br i1 %tobool.not.i13.i.i1246, label %if.end.i16.i.i1251, label %if.then.i15.i.i1250, !prof !557

if.then.i15.i.i1250:                              ; preds = %if.then.i.i1248
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i.i1249 = add i32 %559, -1
  br label %_compound_head.exit18.i.i1253

if.end.i16.i.i1251:                               ; preds = %if.then.i.i1248
  call void @__sanitizer_cov_trace_pc() #15
  %560 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit18.i.i1253

_compound_head.exit18.i.i1253:                    ; preds = %if.end.i16.i.i1251, %if.then.i15.i.i1250
  %retval.0.i17.i.i1252 = phi i32 [ %sub.i14.i.i1249, %if.then.i15.i.i1250 ], [ %560, %if.end.i16.i.i1251 ]
  %561 = inttoptr i32 %retval.0.i17.i.i1252 to ptr
  call void @dump_page(ptr noundef %561, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #13, !srcloc !610
  unreachable

do.end8.i.i1254:                                  ; preds = %_compound_head.exit.i.i1247
  br i1 %tobool.not.i13.i.i1246, label %if.end.i23.i.i1257, label %if.then.i22.i.i1256, !prof !557

if.then.i22.i.i1256:                              ; preds = %do.end8.i.i1254
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i.i1255 = add i32 %559, -1
  br label %ClearPageDirty.exit.i

if.end.i23.i.i1257:                               ; preds = %do.end8.i.i1254
  call void @__sanitizer_cov_trace_pc() #15
  %562 = ptrtoint ptr %add.ptr to i32
  br label %ClearPageDirty.exit.i

ClearPageDirty.exit.i:                            ; preds = %if.end.i23.i.i1257, %if.then.i22.i.i1256
  %retval.0.i24.i.i1258 = phi i32 [ %sub.i21.i.i1255, %if.then.i22.i.i1256 ], [ %562, %if.end.i23.i.i1257 ]
  %563 = inttoptr i32 %retval.0.i24.i.i1258 to ptr
  call void @_clear_bit(i32 noundef 3, ptr noundef %563) #13
  %call9.i1259 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.164, ptr noundef nonnull @.str.165) #19
  br label %if.end273

if.end12.i1262:                                   ; preds = %if.end.i1236
  %a_ops.i1260 = getelementptr inbounds %struct.address_space, ptr %mapping.0, i32 0, i32 9
  %564 = ptrtoint ptr %a_ops.i1260 to i32
  call void @__asan_load4_noabort(i32 %564)
  %565 = load ptr, ptr %a_ops.i1260, align 4
  %566 = ptrtoint ptr %565 to i32
  call void @__asan_load4_noabort(i32 %566)
  %567 = load ptr, ptr %565, align 4
  %cmp.i1261 = icmp eq ptr %567, null
  br i1 %cmp.i1261, label %if.end12.i1262.activate_locked_crit_edge, label %if.end14.i

if.end12.i1262.activate_locked_crit_edge:         ; preds = %if.end12.i1262
  call void @__sanitizer_cov_trace_pc() #15
  br label %activate_locked

if.end14.i:                                       ; preds = %if.end12.i1262
  %568 = ptrtoint ptr %mapping.0 to i32
  call void @__asan_load4_noabort(i32 %568)
  %569 = load ptr, ptr %mapping.0, align 4
  %570 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i126.i = and i32 %570, -16384
  %571 = inttoptr i32 %and.i.i126.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %571, i32 0, i32 2
  %572 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %572)
  %573 = load ptr, ptr %task.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %573, i32 0, i32 3
  %574 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %574)
  %575 = load i32, ptr %flags.i.i, align 4
  %and.i127.i = and i32 %575, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i127.i)
  %tobool.not.i128.i = icmp eq i32 %and.i127.i, 0
  br i1 %tobool.not.i128.i, label %if.end.i.i1263, label %if.end14.i.if.end18.i_crit_edge

if.end14.i.if.end18.i_crit_edge:                  ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18.i

if.end.i.i1263:                                   ; preds = %if.end14.i
  %call.i.i.i = call i32 @inode_congested(ptr noundef %569, i32 noundef 1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool2.not.i.i, label %if.end.i.i1263.if.end18.i_crit_edge, label %may_write_to_inode.exit.i

if.end.i.i1263.if.end18.i_crit_edge:              ; preds = %if.end.i.i1263
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18.i

may_write_to_inode.exit.i:                        ; preds = %if.end.i.i1263
  %call5.i.i = call ptr @inode_to_bdi(ptr noundef %569) #13
  %576 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %576)
  %577 = load ptr, ptr %task.i.i, align 8
  %backing_dev_info.i.i = getelementptr inbounds %struct.task_struct, ptr %577, i32 0, i32 150
  %578 = ptrtoint ptr %backing_dev_info.i.i to i32
  call void @__asan_load4_noabort(i32 %578)
  %579 = load ptr, ptr %backing_dev_info.i.i, align 4
  %cmp.i129.not.i = icmp eq ptr %call5.i.i, %579
  br i1 %cmp.i129.not.i, label %may_write_to_inode.exit.i.if.end18.i_crit_edge, label %may_write_to_inode.exit.i.keep_locked_crit_edge

may_write_to_inode.exit.i.keep_locked_crit_edge:  ; preds = %may_write_to_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

may_write_to_inode.exit.i.if.end18.i_crit_edge:   ; preds = %may_write_to_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18.i

if.end18.i:                                       ; preds = %may_write_to_inode.exit.i.if.end18.i_crit_edge, %if.end.i.i1263.if.end18.i_crit_edge, %if.end14.i.if.end18.i_crit_edge
  %call19.i = call zeroext i1 @clear_page_dirty_for_io(ptr noundef %add.ptr) #13
  br i1 %call19.i, label %if.then20.i, label %if.end18.i.if.end273_crit_edge

if.end18.i.if.end273_crit_edge:                   ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end273

if.then20.i:                                      ; preds = %if.end18.i
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc.i) #13
  %580 = call ptr @memset(ptr %wbc.i, i32 0, i32 64)
  %581 = ptrtoint ptr %wbc.i to i32
  call void @__asan_store4_noabort(i32 %581)
  store i32 32, ptr %wbc.i, align 8
  %582 = ptrtoint ptr %17 to i32
  call void @__asan_store8_noabort(i32 %582)
  store i64 9223372036854775807, ptr %17, align 8
  %583 = ptrtoint ptr %18 to i32
  call void @__asan_store1_noabort(i32 %583)
  store i8 16, ptr %18, align 4
  %584 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %584)
  %585 = load volatile i32, ptr %24, align 4
  %and.i.i54.i = and i32 %585, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i54.i)
  %tobool.not.i.i1264 = icmp eq i32 %and.i.i54.i, 0
  br i1 %tobool.not.i.i1264, label %do.body7.i.i, label %if.then.i55.i, !prof !557

if.then.i55.i:                                    ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.161) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !603
  unreachable

do.body7.i.i:                                     ; preds = %if.then20.i
  %586 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %586)
  %587 = load volatile i32, ptr %24, align 4
  %and.i31.i.i = and i32 %587, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i.i)
  %tobool.not.i.i56.i = icmp eq i32 %and.i31.i.i, 0
  br i1 %tobool.not.i.i56.i, label %if.end.i.i59.i, label %if.then.i.i58.i, !prof !557

if.then.i.i58.i:                                  ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i57.i = add i32 %587, -1
  br label %_compound_head.exit.i62.i

if.end.i.i59.i:                                   ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %588 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i62.i

_compound_head.exit.i62.i:                        ; preds = %if.end.i.i59.i, %if.then.i.i58.i
  %retval.0.i.i60.i = phi i32 [ %sub.i.i57.i, %if.then.i.i58.i ], [ %588, %if.end.i.i59.i ]
  %589 = inttoptr i32 %retval.0.i.i60.i to ptr
  %590 = ptrtoint ptr %589 to i32
  call void @__asan_load4_noabort(i32 %590)
  %591 = load volatile i32, ptr %589, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %591)
  %cmp.i.not.i61.i = icmp eq i32 %591, -1
  %592 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %592)
  %593 = load volatile i32, ptr %24, align 4
  %and.i32.i.i = and i32 %593, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i.i)
  %tobool.not.i33.i.i = icmp eq i32 %and.i32.i.i, 0
  br i1 %cmp.i.not.i61.i, label %if.then17.i.i, label %do.end24.i.i, !prof !558

if.then17.i.i:                                    ; preds = %_compound_head.exit.i62.i
  br i1 %tobool.not.i33.i.i, label %if.end.i36.i.i, label %if.then.i35.i.i, !prof !557

if.then.i35.i.i:                                  ; preds = %if.then17.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i34.i.i = add i32 %593, -1
  br label %_compound_head.exit38.i.i

if.end.i36.i.i:                                   ; preds = %if.then17.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %594 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit38.i.i

_compound_head.exit38.i.i:                        ; preds = %if.end.i36.i.i, %if.then.i35.i.i
  %retval.0.i37.i.i = phi i32 [ %sub.i34.i.i, %if.then.i35.i.i ], [ %594, %if.end.i36.i.i ]
  %595 = inttoptr i32 %retval.0.i37.i.i to ptr
  call void @dump_page(ptr noundef %595, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !604
  unreachable

do.end24.i.i:                                     ; preds = %_compound_head.exit.i62.i
  br i1 %tobool.not.i33.i.i, label %if.end.i43.i.i, label %if.then.i42.i.i, !prof !557

if.then.i42.i.i:                                  ; preds = %do.end24.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i41.i.i = add i32 %593, -1
  br label %SetPageReclaim.exit.i

if.end.i43.i.i:                                   ; preds = %do.end24.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %596 = ptrtoint ptr %add.ptr to i32
  br label %SetPageReclaim.exit.i

SetPageReclaim.exit.i:                            ; preds = %if.end.i43.i.i, %if.then.i42.i.i
  %retval.0.i44.i.i = phi i32 [ %sub.i41.i.i, %if.then.i42.i.i ], [ %596, %if.end.i43.i.i ]
  %597 = inttoptr i32 %retval.0.i44.i.i to ptr
  call void @_set_bit(i32 noundef 18, ptr noundef %597) #13
  %598 = ptrtoint ptr %a_ops.i1260 to i32
  call void @__asan_load4_noabort(i32 %598)
  %599 = load ptr, ptr %a_ops.i1260, align 4
  %600 = ptrtoint ptr %599 to i32
  call void @__asan_load4_noabort(i32 %600)
  %601 = load ptr, ptr %599, align 4
  %call23.i = call i32 %601(ptr noundef %add.ptr, ptr noundef nonnull %wbc.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i)
  %cmp24.i = icmp slt i32 %call23.i, 0
  br i1 %cmp24.i, label %if.then25.i, label %if.end26.i

if.then25.i:                                      ; preds = %SetPageReclaim.exit.i
  call void @__might_sleep(ptr noundef nonnull @.str.166, i32 noundef 788) #13
  %602 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %602)
  %603 = load volatile i32, ptr %24, align 4
  %and.i.i.i130.i = and i32 %603, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i130.i)
  %tobool.not.i.i.i131.i = icmp eq i32 %and.i.i.i130.i, 0
  br i1 %tobool.not.i.i.i131.i, label %if.end.i.i.i134.i, label %if.then.i.i.i133.i, !prof !557

if.then.i.i.i133.i:                               ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i132.i = add i32 %603, -1
  br label %_compound_head.exit.i.i.i1267

if.end.i.i.i134.i:                                ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #15
  %604 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i.i.i1267

_compound_head.exit.i.i.i1267:                    ; preds = %if.end.i.i.i134.i, %if.then.i.i.i133.i
  %retval.0.i.i.i135.i = phi i32 [ %sub.i.i.i132.i, %if.then.i.i.i133.i ], [ %604, %if.end.i.i.i134.i ]
  %605 = inttoptr i32 %retval.0.i.i.i135.i to ptr
  %606 = getelementptr inbounds %struct.page, ptr %605, i32 0, i32 1
  %607 = ptrtoint ptr %606 to i32
  call void @__asan_load4_noabort(i32 %607)
  %608 = load volatile i32, ptr %606, align 4
  %and.i.i.i.i.i.i1265 = and i32 %608, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i1265)
  %tobool.not.i.i.i.i.i1266 = icmp eq i32 %and.i.i.i.i.i.i1265, 0
  br i1 %tobool.not.i.i.i.i.i1266, label %folio_flags.exit.i.i.i.i, label %if.then.i.i.i.i.i1268, !prof !557

if.then.i.i.i.i.i1268:                            ; preds = %_compound_head.exit.i.i.i1267
  call void @__sanitizer_cov_trace_pc() #15
  %609 = inttoptr i32 %retval.0.i.i.i135.i to ptr
  call void @dump_page(ptr noundef %609, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_flags.exit.i.i.i.i:                         ; preds = %_compound_head.exit.i.i.i1267
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %605, i32 noundef 4) #13
  %610 = ptrtoint ptr %605 to i32
  call void @__asan_load4_noabort(i32 %610)
  %611 = load volatile i32, ptr %605, align 4
  %and.i.i4.i.i.i.i = and i32 %611, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i.i.i)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %and.i.i4.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %folio_trylock.exit.i.i.i, label %folio_flags.exit.i.i.i.i.if.then.i.i136.i_crit_edge

folio_flags.exit.i.i.i.i.if.then.i.i136.i_crit_edge: ; preds = %folio_flags.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i136.i

folio_trylock.exit.i.i.i:                         ; preds = %folio_flags.exit.i.i.i.i
  call void @llvm.prefetch.p0(ptr %605, i32 1, i32 3, i32 1) #13
  %612 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %605, ptr %605, i32 1, ptr elementtype(i32) %605) #13, !srcloc !596
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %612, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !597
  %and1.i.i.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %phi.cmp.i.i.i.i.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i.i.i, label %folio_trylock.exit.i.i.i.lock_page.exit.i.i_crit_edge, label %folio_trylock.exit.i.i.i.if.then.i.i136.i_crit_edge

folio_trylock.exit.i.i.i.if.then.i.i136.i_crit_edge: ; preds = %folio_trylock.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i.i136.i

folio_trylock.exit.i.i.i.lock_page.exit.i.i_crit_edge: ; preds = %folio_trylock.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lock_page.exit.i.i

if.then.i.i136.i:                                 ; preds = %folio_trylock.exit.i.i.i.if.then.i.i136.i_crit_edge, %folio_flags.exit.i.i.i.i.if.then.i.i136.i_crit_edge
  call void @__folio_lock(ptr noundef %605) #13
  br label %lock_page.exit.i.i

lock_page.exit.i.i:                               ; preds = %if.then.i.i136.i, %folio_trylock.exit.i.i.i.lock_page.exit.i.i_crit_edge
  %call.i.i1269 = call ptr @page_mapping(ptr noundef %add.ptr) #13
  %cmp.i137.i = icmp eq ptr %call.i.i1269, %mapping.0
  br i1 %cmp.i137.i, label %if.then.i138.i, label %lock_page.exit.i.i.if.end26.thread.i_crit_edge

lock_page.exit.i.i.if.end26.thread.i_crit_edge:   ; preds = %lock_page.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26.thread.i

if.then.i138.i:                                   ; preds = %lock_page.exit.i.i
  call void @__filemap_set_wb_err(ptr noundef nonnull %mapping.0, i32 noundef %call23.i) #13
  %613 = ptrtoint ptr %mapping.0 to i32
  call void @__asan_load4_noabort(i32 %613)
  %614 = load ptr, ptr %mapping.0, align 4
  %tobool4.not.i.i.i = icmp eq ptr %614, null
  br i1 %tobool4.not.i.i.i, label %if.then.i138.i.mapping_set_error.exit.i.i_crit_edge, label %if.then5.i.i.i

if.then.i138.i.mapping_set_error.exit.i.i_crit_edge: ; preds = %if.then.i138.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mapping_set_error.exit.i.i

if.then5.i.i.i:                                   ; preds = %if.then.i138.i
  call void @__sanitizer_cov_trace_pc() #15
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %614, i32 0, i32 8
  %615 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %615)
  %616 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_wb_err.i.i.i = getelementptr inbounds %struct.super_block, ptr %616, i32 0, i32 50
  %call.i.i139.i = call i32 @errseq_set(ptr noundef %s_wb_err.i.i.i, i32 noundef %call23.i) #13
  br label %mapping_set_error.exit.i.i

mapping_set_error.exit.i.i:                       ; preds = %if.then5.i.i.i, %if.then.i138.i.mapping_set_error.exit.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -28, i32 %call23.i)
  %cmp.i.i.i = icmp eq i32 %call23.i, -28
  %flags.i.i.i = getelementptr inbounds %struct.address_space, ptr %mapping.0, i32 0, i32 10
  %..i.i.i = zext i1 %cmp.i.i.i to i32
  call void @_set_bit(i32 noundef %..i.i.i, ptr noundef %flags.i.i.i) #13
  br label %if.end26.thread.i

if.end26.thread.i:                                ; preds = %mapping_set_error.exit.i.i, %lock_page.exit.i.i.if.end26.thread.i_crit_edge
  call void @unlock_page(ptr noundef %add.ptr) #13
  br label %if.end29.i

if.end26.i:                                       ; preds = %SetPageReclaim.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 524288, i32 %call23.i)
  %cmp27.i = icmp eq i32 %call23.i, 524288
  br i1 %cmp27.i, label %if.then28.i, label %if.end26.i.if.end29.i_crit_edge

if.end26.i.if.end29.i_crit_edge:                  ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29.i

if.then28.i:                                      ; preds = %if.end26.i
  %617 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %617)
  %618 = load volatile i32, ptr %24, align 4
  %and.i.i63.i = and i32 %618, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i63.i)
  %tobool.not.i64.i = icmp eq i32 %and.i.i63.i, 0
  br i1 %tobool.not.i64.i, label %do.body7.i68.i, label %if.then.i65.i, !prof !557

if.then.i65.i:                                    ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.161) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !611
  unreachable

do.body7.i68.i:                                   ; preds = %if.then28.i
  %619 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %619)
  %620 = load volatile i32, ptr %24, align 4
  %and.i31.i66.i = and i32 %620, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i66.i)
  %tobool.not.i.i67.i = icmp eq i32 %and.i31.i66.i, 0
  br i1 %tobool.not.i.i67.i, label %if.end.i.i71.i, label %if.then.i.i70.i, !prof !557

if.then.i.i70.i:                                  ; preds = %do.body7.i68.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i69.i = add i32 %620, -1
  br label %_compound_head.exit.i76.i

if.end.i.i71.i:                                   ; preds = %do.body7.i68.i
  call void @__sanitizer_cov_trace_pc() #15
  %621 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i76.i

_compound_head.exit.i76.i:                        ; preds = %if.end.i.i71.i, %if.then.i.i70.i
  %retval.0.i.i72.i = phi i32 [ %sub.i.i69.i, %if.then.i.i70.i ], [ %621, %if.end.i.i71.i ]
  %622 = inttoptr i32 %retval.0.i.i72.i to ptr
  %623 = ptrtoint ptr %622 to i32
  call void @__asan_load4_noabort(i32 %623)
  %624 = load volatile i32, ptr %622, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %624)
  %cmp.i.not.i73.i = icmp eq i32 %624, -1
  %625 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %625)
  %626 = load volatile i32, ptr %24, align 4
  %and.i32.i74.i = and i32 %626, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i74.i)
  %tobool.not.i33.i75.i = icmp eq i32 %and.i32.i74.i, 0
  br i1 %cmp.i.not.i73.i, label %if.then17.i77.i, label %do.end24.i83.i, !prof !558

if.then17.i77.i:                                  ; preds = %_compound_head.exit.i76.i
  br i1 %tobool.not.i33.i75.i, label %if.end.i36.i80.i, label %if.then.i35.i79.i, !prof !557

if.then.i35.i79.i:                                ; preds = %if.then17.i77.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i34.i78.i = add i32 %626, -1
  br label %_compound_head.exit38.i82.i

if.end.i36.i80.i:                                 ; preds = %if.then17.i77.i
  call void @__sanitizer_cov_trace_pc() #15
  %627 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit38.i82.i

_compound_head.exit38.i82.i:                      ; preds = %if.end.i36.i80.i, %if.then.i35.i79.i
  %retval.0.i37.i81.i = phi i32 [ %sub.i34.i78.i, %if.then.i35.i79.i ], [ %627, %if.end.i36.i80.i ]
  %628 = inttoptr i32 %retval.0.i37.i81.i to ptr
  call void @dump_page(ptr noundef %628, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !612
  unreachable

do.end24.i83.i:                                   ; preds = %_compound_head.exit.i76.i
  br i1 %tobool.not.i33.i75.i, label %if.end.i43.i86.i, label %if.then.i42.i85.i, !prof !557

if.then.i42.i85.i:                                ; preds = %do.end24.i83.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i41.i84.i = add i32 %626, -1
  br label %pageout.exit.thread1447

if.end.i43.i86.i:                                 ; preds = %do.end24.i83.i
  call void @__sanitizer_cov_trace_pc() #15
  %629 = ptrtoint ptr %add.ptr to i32
  br label %pageout.exit.thread1447

pageout.exit.thread1447:                          ; preds = %if.end.i43.i86.i, %if.then.i42.i85.i
  %retval.0.i44.i87.i = phi i32 [ %sub.i41.i84.i, %if.then.i42.i85.i ], [ %629, %if.end.i43.i86.i ]
  %630 = inttoptr i32 %retval.0.i44.i87.i to ptr
  call void @_clear_bit(i32 noundef 18, ptr noundef %630) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc.i) #13
  br label %activate_locked

if.end29.i:                                       ; preds = %if.end26.i.if.end29.i_crit_edge, %if.end26.thread.i
  %631 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %631)
  %632 = load volatile i32, ptr %24, align 4
  %and.i.i88.i = and i32 %632, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i88.i)
  %tobool.not.i.i89.i = icmp eq i32 %and.i.i88.i, 0
  br i1 %tobool.not.i.i89.i, label %if.end.i.i92.i, label %if.then.i.i91.i, !prof !557

if.then.i.i91.i:                                  ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i90.i = add i32 %632, -1
  br label %_compound_head.exit.i95.i

if.end.i.i92.i:                                   ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #15
  %633 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i95.i

_compound_head.exit.i95.i:                        ; preds = %if.end.i.i92.i, %if.then.i.i91.i
  %retval.0.i.i93.i = phi i32 [ %sub.i.i90.i, %if.then.i.i91.i ], [ %633, %if.end.i.i92.i ]
  %634 = inttoptr i32 %retval.0.i.i93.i to ptr
  %635 = ptrtoint ptr %634 to i32
  call void @__asan_load4_noabort(i32 %635)
  %636 = load volatile i32, ptr %634, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %636)
  %cmp.i.not.i94.i = icmp eq i32 %636, -1
  %637 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %637)
  %638 = load volatile i32, ptr %24, align 4
  %and.i16.i.i1270 = and i32 %638, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i1270)
  %tobool.not.i17.i.i1271 = icmp eq i32 %and.i16.i.i1270, 0
  br i1 %cmp.i.not.i94.i, label %if.then.i96.i, label %do.end10.i.i1277, !prof !558

if.then.i96.i:                                    ; preds = %_compound_head.exit.i95.i
  br i1 %tobool.not.i17.i.i1271, label %if.end.i20.i.i1274, label %if.then.i19.i.i1273, !prof !557

if.then.i19.i.i1273:                              ; preds = %if.then.i96.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i.i1272 = add i32 %638, -1
  br label %_compound_head.exit22.i.i1276

if.end.i20.i.i1274:                               ; preds = %if.then.i96.i
  call void @__sanitizer_cov_trace_pc() #15
  %639 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i.i1276

_compound_head.exit22.i.i1276:                    ; preds = %if.end.i20.i.i1274, %if.then.i19.i.i1273
  %retval.0.i21.i.i1275 = phi i32 [ %sub.i18.i.i1272, %if.then.i19.i.i1273 ], [ %639, %if.end.i20.i.i1274 ]
  %640 = inttoptr i32 %retval.0.i21.i.i1275 to ptr
  call void @dump_page(ptr noundef %640, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #13, !srcloc !601
  unreachable

do.end10.i.i1277:                                 ; preds = %_compound_head.exit.i95.i
  br i1 %tobool.not.i17.i.i1271, label %if.end.i27.i.i1280, label %if.then.i26.i.i1279, !prof !557

if.then.i26.i.i1279:                              ; preds = %do.end10.i.i1277
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i.i1278 = add i32 %638, -1
  br label %PageWriteback.exit.i1282

if.end.i27.i.i1280:                               ; preds = %do.end10.i.i1277
  call void @__sanitizer_cov_trace_pc() #15
  %641 = ptrtoint ptr %add.ptr to i32
  br label %PageWriteback.exit.i1282

PageWriteback.exit.i1282:                         ; preds = %if.end.i27.i.i1280, %if.then.i26.i.i1279
  %retval.0.i28.i.i1281 = phi i32 [ %sub.i25.i.i1278, %if.then.i26.i.i1279 ], [ %641, %if.end.i27.i.i1280 ]
  %642 = inttoptr i32 %retval.0.i28.i.i1281 to ptr
  %643 = ptrtoint ptr %642 to i32
  call void @__asan_load4_noabort(i32 %643)
  %644 = load volatile i32, ptr %642, align 4
  %645 = and i32 %644, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %645)
  %tobool31.not.i = icmp eq i32 %645, 0
  br i1 %tobool31.not.i, label %if.then32.i, label %PageWriteback.exit.i1282.sw.bb248_crit_edge

PageWriteback.exit.i1282.sw.bb248_crit_edge:      ; preds = %PageWriteback.exit.i1282
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb248

if.then32.i:                                      ; preds = %PageWriteback.exit.i1282
  %646 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %646)
  %647 = load volatile i32, ptr %24, align 4
  %and.i.i97.i = and i32 %647, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i97.i)
  %tobool.not.i98.i = icmp eq i32 %and.i.i97.i, 0
  br i1 %tobool.not.i98.i, label %do.body7.i102.i, label %if.then.i99.i, !prof !557

if.then.i99.i:                                    ; preds = %if.then32.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.161) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !611
  unreachable

do.body7.i102.i:                                  ; preds = %if.then32.i
  %648 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %648)
  %649 = load volatile i32, ptr %24, align 4
  %and.i31.i100.i = and i32 %649, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i100.i)
  %tobool.not.i.i101.i = icmp eq i32 %and.i31.i100.i, 0
  br i1 %tobool.not.i.i101.i, label %if.end.i.i105.i, label %if.then.i.i104.i, !prof !557

if.then.i.i104.i:                                 ; preds = %do.body7.i102.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i103.i = add i32 %649, -1
  br label %_compound_head.exit.i110.i

if.end.i.i105.i:                                  ; preds = %do.body7.i102.i
  call void @__sanitizer_cov_trace_pc() #15
  %650 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i110.i

_compound_head.exit.i110.i:                       ; preds = %if.end.i.i105.i, %if.then.i.i104.i
  %retval.0.i.i106.i = phi i32 [ %sub.i.i103.i, %if.then.i.i104.i ], [ %650, %if.end.i.i105.i ]
  %651 = inttoptr i32 %retval.0.i.i106.i to ptr
  %652 = ptrtoint ptr %651 to i32
  call void @__asan_load4_noabort(i32 %652)
  %653 = load volatile i32, ptr %651, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %653)
  %cmp.i.not.i107.i = icmp eq i32 %653, -1
  %654 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %654)
  %655 = load volatile i32, ptr %24, align 4
  %and.i32.i108.i = and i32 %655, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i108.i)
  %tobool.not.i33.i109.i = icmp eq i32 %and.i32.i108.i, 0
  br i1 %cmp.i.not.i107.i, label %if.then17.i111.i, label %do.end24.i117.i, !prof !558

if.then17.i111.i:                                 ; preds = %_compound_head.exit.i110.i
  br i1 %tobool.not.i33.i109.i, label %if.end.i36.i114.i, label %if.then.i35.i113.i, !prof !557

if.then.i35.i113.i:                               ; preds = %if.then17.i111.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i34.i112.i = add i32 %655, -1
  br label %_compound_head.exit38.i116.i

if.end.i36.i114.i:                                ; preds = %if.then17.i111.i
  call void @__sanitizer_cov_trace_pc() #15
  %656 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit38.i116.i

_compound_head.exit38.i116.i:                     ; preds = %if.end.i36.i114.i, %if.then.i35.i113.i
  %retval.0.i37.i115.i = phi i32 [ %sub.i34.i112.i, %if.then.i35.i113.i ], [ %656, %if.end.i36.i114.i ]
  %657 = inttoptr i32 %retval.0.i37.i115.i to ptr
  call void @dump_page(ptr noundef %657, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 466, 0\0A.popsection", ""() #13, !srcloc !612
  unreachable

do.end24.i117.i:                                  ; preds = %_compound_head.exit.i110.i
  br i1 %tobool.not.i33.i109.i, label %if.end.i43.i120.i, label %if.then.i42.i119.i, !prof !557

if.then.i42.i119.i:                               ; preds = %do.end24.i117.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i41.i118.i = add i32 %655, -1
  br label %ClearPageReclaim.exit122.i

if.end.i43.i120.i:                                ; preds = %do.end24.i117.i
  call void @__sanitizer_cov_trace_pc() #15
  %658 = ptrtoint ptr %add.ptr to i32
  br label %ClearPageReclaim.exit122.i

ClearPageReclaim.exit122.i:                       ; preds = %if.end.i43.i120.i, %if.then.i42.i119.i
  %retval.0.i44.i121.i = phi i32 [ %sub.i41.i118.i, %if.then.i42.i119.i ], [ %658, %if.end.i43.i120.i ]
  %659 = inttoptr i32 %retval.0.i44.i121.i to ptr
  call void @_clear_bit(i32 noundef 18, ptr noundef %659) #13
  br label %sw.bb248

sw.bb248:                                         ; preds = %ClearPageReclaim.exit122.i, %PageWriteback.exit.i1282.sw.bb248_crit_edge
  call fastcc void @trace_mm_vmscan_writepage(ptr noundef %add.ptr) #13
  call void @inc_node_page_state(ptr noundef %add.ptr, i32 noundef 29) #13
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc.i) #13
  %660 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %660)
  %661 = load volatile i32, ptr %24, align 4
  %and.i.i1284 = and i32 %661, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1284)
  %tobool.not.i1285 = icmp eq i32 %and.i.i1284, 0
  br i1 %tobool.not.i1285, label %thp_nr_pages.exit, label %if.then.i1286, !prof !557

if.then.i1286:                                    ; preds = %sw.bb248
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/huge_mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 347, 0\0A.popsection", ""() #13, !srcloc !609
  unreachable

thp_nr_pages.exit:                                ; preds = %sw.bb248
  %662 = ptrtoint ptr %nr_pageout to i32
  call void @__asan_load4_noabort(i32 %662)
  %663 = load i32, ptr %nr_pageout, align 4
  %add250 = add i32 %663, 1
  store i32 %add250, ptr %nr_pageout, align 4
  %664 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %664)
  %665 = load volatile i32, ptr %24, align 4
  %and.i.i823 = and i32 %665, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i823)
  %tobool.not.i.i824 = icmp eq i32 %and.i.i823, 0
  br i1 %tobool.not.i.i824, label %if.end.i.i827, label %if.then.i.i826, !prof !557

if.then.i.i826:                                   ; preds = %thp_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i825 = add i32 %665, -1
  br label %_compound_head.exit.i832

if.end.i.i827:                                    ; preds = %thp_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  %666 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i832

_compound_head.exit.i832:                         ; preds = %if.end.i.i827, %if.then.i.i826
  %retval.0.i.i828 = phi i32 [ %sub.i.i825, %if.then.i.i826 ], [ %666, %if.end.i.i827 ]
  %667 = inttoptr i32 %retval.0.i.i828 to ptr
  %668 = ptrtoint ptr %667 to i32
  call void @__asan_load4_noabort(i32 %668)
  %669 = load volatile i32, ptr %667, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %669)
  %cmp.i.not.i829 = icmp eq i32 %669, -1
  %670 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %670)
  %671 = load volatile i32, ptr %24, align 4
  %and.i16.i830 = and i32 %671, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i830)
  %tobool.not.i17.i831 = icmp eq i32 %and.i16.i830, 0
  br i1 %cmp.i.not.i829, label %if.then.i833, label %do.end10.i839, !prof !558

if.then.i833:                                     ; preds = %_compound_head.exit.i832
  br i1 %tobool.not.i17.i831, label %if.end.i20.i836, label %if.then.i19.i835, !prof !557

if.then.i19.i835:                                 ; preds = %if.then.i833
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i834 = add i32 %671, -1
  br label %_compound_head.exit22.i838

if.end.i20.i836:                                  ; preds = %if.then.i833
  call void @__sanitizer_cov_trace_pc() #15
  %672 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i838

_compound_head.exit22.i838:                       ; preds = %if.end.i20.i836, %if.then.i19.i835
  %retval.0.i21.i837 = phi i32 [ %sub.i18.i834, %if.then.i19.i835 ], [ %672, %if.end.i20.i836 ]
  %673 = inttoptr i32 %retval.0.i21.i837 to ptr
  call void @dump_page(ptr noundef %673, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #13, !srcloc !601
  unreachable

do.end10.i839:                                    ; preds = %_compound_head.exit.i832
  br i1 %tobool.not.i17.i831, label %if.end.i27.i842, label %if.then.i26.i841, !prof !557

if.then.i26.i841:                                 ; preds = %do.end10.i839
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i840 = add i32 %671, -1
  br label %PageWriteback.exit846

if.end.i27.i842:                                  ; preds = %do.end10.i839
  call void @__sanitizer_cov_trace_pc() #15
  %674 = ptrtoint ptr %add.ptr to i32
  br label %PageWriteback.exit846

PageWriteback.exit846:                            ; preds = %if.end.i27.i842, %if.then.i26.i841
  %retval.0.i28.i843 = phi i32 [ %sub.i25.i840, %if.then.i26.i841 ], [ %674, %if.end.i27.i842 ]
  %675 = inttoptr i32 %retval.0.i28.i843 to ptr
  %676 = ptrtoint ptr %675 to i32
  call void @__asan_load4_noabort(i32 %676)
  %677 = load volatile i32, ptr %675, align 4
  %678 = and i32 %677, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %678)
  %tobool252.not = icmp eq i32 %678, 0
  br i1 %tobool252.not, label %if.end254, label %PageWriteback.exit846.keep_crit_edge

PageWriteback.exit846.keep_crit_edge:             ; preds = %PageWriteback.exit846
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep

if.end254:                                        ; preds = %PageWriteback.exit846
  %679 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %679)
  %680 = load volatile i32, ptr %24, align 4
  %and.i.i847 = and i32 %680, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i847)
  %tobool.not.i.i848 = icmp eq i32 %and.i.i847, 0
  br i1 %tobool.not.i.i848, label %if.end.i.i851, label %if.then.i.i850, !prof !557

if.then.i.i850:                                   ; preds = %if.end254
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i849 = add i32 %680, -1
  br label %_compound_head.exit.i856

if.end.i.i851:                                    ; preds = %if.end254
  call void @__sanitizer_cov_trace_pc() #15
  %681 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i856

_compound_head.exit.i856:                         ; preds = %if.end.i.i851, %if.then.i.i850
  %retval.0.i.i852 = phi i32 [ %sub.i.i849, %if.then.i.i850 ], [ %681, %if.end.i.i851 ]
  %682 = inttoptr i32 %retval.0.i.i852 to ptr
  %683 = ptrtoint ptr %682 to i32
  call void @__asan_load4_noabort(i32 %683)
  %684 = load volatile i32, ptr %682, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %684)
  %cmp.i.not.i853 = icmp eq i32 %684, -1
  %685 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %685)
  %686 = load volatile i32, ptr %24, align 4
  %and.i13.i854 = and i32 %686, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i854)
  %tobool.not.i14.i855 = icmp eq i32 %and.i13.i854, 0
  br i1 %cmp.i.not.i853, label %if.then.i857, label %do.end8.i863, !prof !558

if.then.i857:                                     ; preds = %_compound_head.exit.i856
  br i1 %tobool.not.i14.i855, label %if.end.i17.i860, label %if.then.i16.i859, !prof !557

if.then.i16.i859:                                 ; preds = %if.then.i857
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i858 = add i32 %686, -1
  br label %_compound_head.exit19.i862

if.end.i17.i860:                                  ; preds = %if.then.i857
  call void @__sanitizer_cov_trace_pc() #15
  %687 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i862

_compound_head.exit19.i862:                       ; preds = %if.end.i17.i860, %if.then.i16.i859
  %retval.0.i18.i861 = phi i32 [ %sub.i15.i858, %if.then.i16.i859 ], [ %687, %if.end.i17.i860 ]
  %688 = inttoptr i32 %retval.0.i18.i861 to ptr
  call void @dump_page(ptr noundef %688, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #13, !srcloc !588
  unreachable

do.end8.i863:                                     ; preds = %_compound_head.exit.i856
  br i1 %tobool.not.i14.i855, label %if.end.i24.i866, label %if.then.i23.i865, !prof !557

if.then.i23.i865:                                 ; preds = %do.end8.i863
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i864 = add i32 %686, -1
  br label %PageDirty.exit870

if.end.i24.i866:                                  ; preds = %do.end8.i863
  call void @__sanitizer_cov_trace_pc() #15
  %689 = ptrtoint ptr %add.ptr to i32
  br label %PageDirty.exit870

PageDirty.exit870:                                ; preds = %if.end.i24.i866, %if.then.i23.i865
  %retval.0.i25.i867 = phi i32 [ %sub.i22.i864, %if.then.i23.i865 ], [ %689, %if.end.i24.i866 ]
  %690 = inttoptr i32 %retval.0.i25.i867 to ptr
  %691 = ptrtoint ptr %690 to i32
  call void @__asan_load4_noabort(i32 %691)
  %692 = load volatile i32, ptr %690, align 4
  %693 = and i32 %692, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %693)
  %tobool256.not = icmp eq i32 %693, 0
  br i1 %tobool256.not, label %if.end258, label %PageDirty.exit870.keep_crit_edge

PageDirty.exit870.keep_crit_edge:                 ; preds = %PageDirty.exit870
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep

if.end258:                                        ; preds = %PageDirty.exit870
  %694 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %694)
  %695 = load volatile i32, ptr %24, align 4
  %and.i.i1287 = and i32 %695, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1287)
  %tobool.not.i.i1288 = icmp eq i32 %and.i.i1287, 0
  br i1 %tobool.not.i.i1288, label %if.end.i.i1291, label %if.then.i.i1290, !prof !557

if.then.i.i1290:                                  ; preds = %if.end258
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1289 = add i32 %695, -1
  br label %_compound_head.exit.i1295

if.end.i.i1291:                                   ; preds = %if.end258
  call void @__sanitizer_cov_trace_pc() #15
  %696 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i1295

_compound_head.exit.i1295:                        ; preds = %if.end.i.i1291, %if.then.i.i1290
  %retval.0.i.i1292 = phi i32 [ %sub.i.i1289, %if.then.i.i1290 ], [ %696, %if.end.i.i1291 ]
  %697 = inttoptr i32 %retval.0.i.i1292 to ptr
  %698 = getelementptr inbounds %struct.page, ptr %697, i32 0, i32 1
  %699 = ptrtoint ptr %698 to i32
  call void @__asan_load4_noabort(i32 %699)
  %700 = load volatile i32, ptr %698, align 4
  %and.i.i.i.i1293 = and i32 %700, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i1293)
  %tobool.not.i.i.i1294 = icmp eq i32 %and.i.i.i.i1293, 0
  br i1 %tobool.not.i.i.i1294, label %folio_flags.exit.i.i1300, label %if.then.i.i.i1296, !prof !557

if.then.i.i.i1296:                                ; preds = %_compound_head.exit.i1295
  call void @__sanitizer_cov_trace_pc() #15
  %701 = inttoptr i32 %retval.0.i.i1292 to ptr
  call void @dump_page(ptr noundef %701, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_flags.exit.i.i1300:                         ; preds = %_compound_head.exit.i1295
  %call.i.i.i.i1297 = call zeroext i1 @__kasan_check_write(ptr noundef %697, i32 noundef 4) #13
  %702 = ptrtoint ptr %697 to i32
  call void @__asan_load4_noabort(i32 %702)
  %703 = load volatile i32, ptr %697, align 4
  %and.i.i4.i.i1298 = and i32 %703, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i1298)
  %tobool.not.i.i.i.i1299 = icmp eq i32 %and.i.i4.i.i1298, 0
  br i1 %tobool.not.i.i.i.i1299, label %trylock_page.exit1305, label %folio_flags.exit.i.i1300.keep_crit_edge

folio_flags.exit.i.i1300.keep_crit_edge:          ; preds = %folio_flags.exit.i.i1300
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep

trylock_page.exit1305:                            ; preds = %folio_flags.exit.i.i1300
  call void @llvm.prefetch.p0(ptr %697, i32 1, i32 3, i32 1) #13
  %704 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %697, ptr %697, i32 1, ptr elementtype(i32) %697) #13, !srcloc !596
  %asmresult.i.i.i.i.i.i.i1301 = extractvalue { i32, i32, i32 } %704, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !597
  %and1.i.i.i.i1302 = and i32 %asmresult.i.i.i.i.i.i.i1301, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i1302)
  %tobool260.not.not = icmp eq i32 %and1.i.i.i.i1302, 0
  br i1 %tobool260.not.not, label %if.end262, label %trylock_page.exit1305.keep_crit_edge

trylock_page.exit1305.keep_crit_edge:             ; preds = %trylock_page.exit1305
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep

if.end262:                                        ; preds = %trylock_page.exit1305
  %705 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %705)
  %706 = load volatile i32, ptr %24, align 4
  %and.i.i871 = and i32 %706, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i871)
  %tobool.not.i.i872 = icmp eq i32 %and.i.i871, 0
  br i1 %tobool.not.i.i872, label %if.end.i.i875, label %if.then.i.i874, !prof !557

if.then.i.i874:                                   ; preds = %if.end262
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i873 = add i32 %706, -1
  br label %_compound_head.exit.i880

if.end.i.i875:                                    ; preds = %if.end262
  call void @__sanitizer_cov_trace_pc() #15
  %707 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i880

_compound_head.exit.i880:                         ; preds = %if.end.i.i875, %if.then.i.i874
  %retval.0.i.i876 = phi i32 [ %sub.i.i873, %if.then.i.i874 ], [ %707, %if.end.i.i875 ]
  %708 = inttoptr i32 %retval.0.i.i876 to ptr
  %709 = ptrtoint ptr %708 to i32
  call void @__asan_load4_noabort(i32 %709)
  %710 = load volatile i32, ptr %708, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %710)
  %cmp.i.not.i877 = icmp eq i32 %710, -1
  %711 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %711)
  %712 = load volatile i32, ptr %24, align 4
  %and.i13.i878 = and i32 %712, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i878)
  %tobool.not.i14.i879 = icmp eq i32 %and.i13.i878, 0
  br i1 %cmp.i.not.i877, label %if.then.i881, label %do.end8.i887, !prof !558

if.then.i881:                                     ; preds = %_compound_head.exit.i880
  br i1 %tobool.not.i14.i879, label %if.end.i17.i884, label %if.then.i16.i883, !prof !557

if.then.i16.i883:                                 ; preds = %if.then.i881
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i882 = add i32 %712, -1
  br label %_compound_head.exit19.i886

if.end.i17.i884:                                  ; preds = %if.then.i881
  call void @__sanitizer_cov_trace_pc() #15
  %713 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i886

_compound_head.exit19.i886:                       ; preds = %if.end.i17.i884, %if.then.i16.i883
  %retval.0.i18.i885 = phi i32 [ %sub.i15.i882, %if.then.i16.i883 ], [ %713, %if.end.i17.i884 ]
  %714 = inttoptr i32 %retval.0.i18.i885 to ptr
  call void @dump_page(ptr noundef %714, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #13, !srcloc !588
  unreachable

do.end8.i887:                                     ; preds = %_compound_head.exit.i880
  br i1 %tobool.not.i14.i879, label %if.end.i24.i890, label %if.then.i23.i889, !prof !557

if.then.i23.i889:                                 ; preds = %do.end8.i887
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i888 = add i32 %712, -1
  br label %PageDirty.exit894

if.end.i24.i890:                                  ; preds = %do.end8.i887
  call void @__sanitizer_cov_trace_pc() #15
  %715 = ptrtoint ptr %add.ptr to i32
  br label %PageDirty.exit894

PageDirty.exit894:                                ; preds = %if.end.i24.i890, %if.then.i23.i889
  %retval.0.i25.i891 = phi i32 [ %sub.i22.i888, %if.then.i23.i889 ], [ %715, %if.end.i24.i890 ]
  %716 = inttoptr i32 %retval.0.i25.i891 to ptr
  %717 = ptrtoint ptr %716 to i32
  call void @__asan_load4_noabort(i32 %717)
  %718 = load volatile i32, ptr %716, align 4
  %719 = and i32 %718, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %719)
  %tobool264.not = icmp eq i32 %719, 0
  br i1 %tobool264.not, label %lor.lhs.false265, label %PageDirty.exit894.keep_locked_crit_edge

PageDirty.exit894.keep_locked_crit_edge:          ; preds = %PageDirty.exit894
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

lor.lhs.false265:                                 ; preds = %PageDirty.exit894
  %720 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %720)
  %721 = load volatile i32, ptr %24, align 4
  %and.i.i895 = and i32 %721, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i895)
  %tobool.not.i.i896 = icmp eq i32 %and.i.i895, 0
  br i1 %tobool.not.i.i896, label %if.end.i.i899, label %if.then.i.i898, !prof !557

if.then.i.i898:                                   ; preds = %lor.lhs.false265
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i897 = add i32 %721, -1
  br label %_compound_head.exit.i904

if.end.i.i899:                                    ; preds = %lor.lhs.false265
  call void @__sanitizer_cov_trace_pc() #15
  %722 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i904

_compound_head.exit.i904:                         ; preds = %if.end.i.i899, %if.then.i.i898
  %retval.0.i.i900 = phi i32 [ %sub.i.i897, %if.then.i.i898 ], [ %722, %if.end.i.i899 ]
  %723 = inttoptr i32 %retval.0.i.i900 to ptr
  %724 = ptrtoint ptr %723 to i32
  call void @__asan_load4_noabort(i32 %724)
  %725 = load volatile i32, ptr %723, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %725)
  %cmp.i.not.i901 = icmp eq i32 %725, -1
  %726 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %726)
  %727 = load volatile i32, ptr %24, align 4
  %and.i16.i902 = and i32 %727, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i902)
  %tobool.not.i17.i903 = icmp eq i32 %and.i16.i902, 0
  br i1 %cmp.i.not.i901, label %if.then.i905, label %do.end10.i911, !prof !558

if.then.i905:                                     ; preds = %_compound_head.exit.i904
  br i1 %tobool.not.i17.i903, label %if.end.i20.i908, label %if.then.i19.i907, !prof !557

if.then.i19.i907:                                 ; preds = %if.then.i905
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i906 = add i32 %727, -1
  br label %_compound_head.exit22.i910

if.end.i20.i908:                                  ; preds = %if.then.i905
  call void @__sanitizer_cov_trace_pc() #15
  %728 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i910

_compound_head.exit22.i910:                       ; preds = %if.end.i20.i908, %if.then.i19.i907
  %retval.0.i21.i909 = phi i32 [ %sub.i18.i906, %if.then.i19.i907 ], [ %728, %if.end.i20.i908 ]
  %729 = inttoptr i32 %retval.0.i21.i909 to ptr
  call void @dump_page(ptr noundef %729, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #13, !srcloc !601
  unreachable

do.end10.i911:                                    ; preds = %_compound_head.exit.i904
  br i1 %tobool.not.i17.i903, label %if.end.i27.i914, label %if.then.i26.i913, !prof !557

if.then.i26.i913:                                 ; preds = %do.end10.i911
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i912 = add i32 %727, -1
  br label %PageWriteback.exit918

if.end.i27.i914:                                  ; preds = %do.end10.i911
  call void @__sanitizer_cov_trace_pc() #15
  %730 = ptrtoint ptr %add.ptr to i32
  br label %PageWriteback.exit918

PageWriteback.exit918:                            ; preds = %if.end.i27.i914, %if.then.i26.i913
  %retval.0.i28.i915 = phi i32 [ %sub.i25.i912, %if.then.i26.i913 ], [ %730, %if.end.i27.i914 ]
  %731 = inttoptr i32 %retval.0.i28.i915 to ptr
  %732 = ptrtoint ptr %731 to i32
  call void @__asan_load4_noabort(i32 %732)
  %733 = load volatile i32, ptr %731, align 4
  %734 = and i32 %733, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %734)
  %tobool267.not = icmp eq i32 %734, 0
  br i1 %tobool267.not, label %if.end269, label %PageWriteback.exit918.keep_locked_crit_edge

PageWriteback.exit918.keep_locked_crit_edge:      ; preds = %PageWriteback.exit918
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end269:                                        ; preds = %PageWriteback.exit918
  call void @__sanitizer_cov_trace_pc() #15
  %call270 = call ptr @page_mapping(ptr noundef %add.ptr) #13
  br label %if.end273

if.end273:                                        ; preds = %if.end269, %if.end18.i.if.end273_crit_edge, %ClearPageDirty.exit.i, %PageDirty.exit.if.end273_crit_edge
  %mapping.1 = phi ptr [ %call270, %if.end269 ], [ %mapping.0, %PageDirty.exit.if.end273_crit_edge ], [ null, %ClearPageDirty.exit.i ], [ %mapping.0, %if.end18.i.if.end273_crit_edge ]
  %735 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %735)
  %736 = load i32, ptr %add.ptr, align 4
  %and.i1306 = and i32 %736, 24576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1306)
  %tobool.i.not = icmp eq i32 %and.i1306, 0
  br i1 %tobool.i.not, label %if.end273.if.end293_crit_edge, label %if.then276

if.end273.if.end293_crit_edge:                    ; preds = %if.end273
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end293

if.then276:                                       ; preds = %if.end273
  %737 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %737)
  %738 = load i32, ptr %gfp_mask, align 4
  %call278 = call i32 @try_to_release_page(ptr noundef %add.ptr, i32 noundef %738) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call278)
  %tobool279.not = icmp eq i32 %call278, 0
  br i1 %tobool279.not, label %if.then276.activate_locked_crit_edge, label %if.end281

if.then276.activate_locked_crit_edge:             ; preds = %if.then276
  call void @__sanitizer_cov_trace_pc() #15
  br label %activate_locked

if.end281:                                        ; preds = %if.then276
  %tobool282.not = icmp eq ptr %mapping.1, null
  br i1 %tobool282.not, label %land.lhs.true283, label %if.end281.if.end293_crit_edge

if.end281.if.end293_crit_edge:                    ; preds = %if.end281
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end293

land.lhs.true283:                                 ; preds = %if.end281
  %739 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %739)
  %740 = load volatile i32, ptr %24, align 4
  %and.i.i1307 = and i32 %740, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1307)
  %tobool.not.i.i1308 = icmp eq i32 %and.i.i1307, 0
  br i1 %tobool.not.i.i1308, label %if.end.i.i1311, label %if.then.i.i1310, !prof !557

if.then.i.i1310:                                  ; preds = %land.lhs.true283
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1309 = add i32 %740, -1
  br label %page_count.exit

if.end.i.i1311:                                   ; preds = %land.lhs.true283
  call void @__sanitizer_cov_trace_pc() #15
  %741 = ptrtoint ptr %add.ptr to i32
  br label %page_count.exit

page_count.exit:                                  ; preds = %if.end.i.i1311, %if.then.i.i1310
  %retval.0.i.i1312 = phi i32 [ %sub.i.i1309, %if.then.i.i1310 ], [ %741, %if.end.i.i1311 ]
  %742 = inttoptr i32 %retval.0.i.i1312 to ptr
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %742, i32 0, i32 3
  %call.i.i.i.i.i1313 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #13
  %743 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %743)
  %744 = load volatile i32, ptr %_refcount.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %744)
  %cmp285 = icmp eq i32 %744, 1
  br i1 %cmp285, label %if.then286, label %page_count.exit.if.end293_crit_edge

page_count.exit.if.end293_crit_edge:              ; preds = %page_count.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end293

if.then286:                                       ; preds = %page_count.exit
  call void @unlock_page(ptr noundef %add.ptr) #13
  %_refcount.i.i1315 = getelementptr i8, ptr %24, i32 24
  %call.i.i.i.i1316 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i1315, i32 noundef 4) #13
  %745 = ptrtoint ptr %_refcount.i.i1315 to i32
  call void @__asan_load4_noabort(i32 %745)
  %746 = load volatile i32, ptr %_refcount.i.i1315, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %746)
  %cmp.i1317 = icmp eq i32 %746, 0
  br i1 %cmp.i1317, label %if.then.i1318, label %do.end5.i, !prof !558

if.then.i1318:                                    ; preds = %if.then286
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.158) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #13, !srcloc !590
  unreachable

do.end5.i:                                        ; preds = %if.then286
  %call.i.i.i10.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i1315, i32 noundef 4) #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !591
  call void @llvm.prefetch.p0(ptr %_refcount.i.i1315, i32 1, i32 3, i32 1) #13
  %747 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i1315, ptr %_refcount.i.i1315, i32 1, ptr elementtype(i32) %_refcount.i.i1315) #13, !srcloc !592
  %asmresult.i.i.i.i.i.i.i1319 = extractvalue { i32, i32 } %747, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !593
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i1319)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i1319, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@shrink_page_list, %if.then.i.i1320)) #13
          to label %put_page_testzero.exit [label %if.then.i.i1320], !srcloc !567

if.then.i.i1320:                                  ; preds = %do.end5.i
  call void @__sanitizer_cov_trace_pc() #15
  %conv.i.i = zext i1 %cmp.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %add.ptr, i32 noundef -1, i32 noundef %conv.i.i) #13
  br label %put_page_testzero.exit

put_page_testzero.exit:                           ; preds = %if.then.i.i1320, %do.end5.i
  br i1 %cmp.i.i.i.i, label %put_page_testzero.exit.free_it_crit_edge, label %if.else290

put_page_testzero.exit.free_it_crit_edge:         ; preds = %put_page_testzero.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %free_it

if.else290:                                       ; preds = %put_page_testzero.exit
  call void @__sanitizer_cov_trace_pc() #15
  %inc291 = add i32 %nr_reclaimed.12096, 1
  br label %cleanup388

if.end293:                                        ; preds = %page_count.exit.if.end293_crit_edge, %if.end281.if.end293_crit_edge, %if.end273.if.end293_crit_edge
  %748 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %748)
  %749 = load volatile i32, ptr %24, align 4
  %and.i2.i919 = and i32 %749, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i919)
  %tobool.not.i.i920 = icmp eq i32 %and.i2.i919, 0
  br i1 %tobool.not.i.i920, label %if.end.i.i923, label %if.then.i.i922, !prof !557

if.then.i.i922:                                   ; preds = %if.end293
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i921 = add i32 %749, -1
  br label %PageAnon.exit929

if.end.i.i923:                                    ; preds = %if.end293
  call void @__sanitizer_cov_trace_pc() #15
  %750 = ptrtoint ptr %add.ptr to i32
  br label %PageAnon.exit929

PageAnon.exit929:                                 ; preds = %if.end.i.i923, %if.then.i.i922
  %retval.0.i.i924 = phi i32 [ %sub.i.i921, %if.then.i.i922 ], [ %750, %if.end.i.i923 ]
  %751 = inttoptr i32 %retval.0.i.i924 to ptr
  %mapping.i.i925 = getelementptr inbounds %struct.anon.67, ptr %751, i32 0, i32 2
  %752 = ptrtoint ptr %mapping.i.i925 to i32
  call void @__asan_load4_noabort(i32 %752)
  %753 = load ptr, ptr %mapping.i.i925, align 4
  %754 = ptrtoint ptr %753 to i32
  %and.i.i926 = and i32 %754, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i926)
  %cmp.i.i927.not = icmp eq i32 %and.i.i926, 0
  br i1 %cmp.i.i927.not, label %PageAnon.exit929.if.else303_crit_edge, label %land.lhs.true295

PageAnon.exit929.if.else303_crit_edge:            ; preds = %PageAnon.exit929
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else303

land.lhs.true295:                                 ; preds = %PageAnon.exit929
  %755 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %755)
  %756 = load volatile i32, ptr %24, align 4
  %and.i.i930 = and i32 %756, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i930)
  %tobool.not.i.i931 = icmp eq i32 %and.i.i930, 0
  br i1 %tobool.not.i.i931, label %if.end.i.i934, label %if.then.i.i933, !prof !557

if.then.i.i933:                                   ; preds = %land.lhs.true295
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i932 = add i32 %756, -1
  br label %_compound_head.exit.i939

if.end.i.i934:                                    ; preds = %land.lhs.true295
  call void @__sanitizer_cov_trace_pc() #15
  %757 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i939

_compound_head.exit.i939:                         ; preds = %if.end.i.i934, %if.then.i.i933
  %retval.0.i.i935 = phi i32 [ %sub.i.i932, %if.then.i.i933 ], [ %757, %if.end.i.i934 ]
  %758 = inttoptr i32 %retval.0.i.i935 to ptr
  %759 = ptrtoint ptr %758 to i32
  call void @__asan_load4_noabort(i32 %759)
  %760 = load volatile i32, ptr %758, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %760)
  %cmp.i.not.i936 = icmp eq i32 %760, -1
  %761 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %761)
  %762 = load volatile i32, ptr %24, align 4
  %and.i16.i937 = and i32 %762, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i937)
  %tobool.not.i17.i938 = icmp eq i32 %and.i16.i937, 0
  br i1 %cmp.i.not.i936, label %if.then.i940, label %do.end10.i946, !prof !558

if.then.i940:                                     ; preds = %_compound_head.exit.i939
  br i1 %tobool.not.i17.i938, label %if.end.i20.i943, label %if.then.i19.i942, !prof !557

if.then.i19.i942:                                 ; preds = %if.then.i940
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i941 = add i32 %762, -1
  br label %_compound_head.exit22.i945

if.end.i20.i943:                                  ; preds = %if.then.i940
  call void @__sanitizer_cov_trace_pc() #15
  %763 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i945

_compound_head.exit22.i945:                       ; preds = %if.end.i20.i943, %if.then.i19.i942
  %retval.0.i21.i944 = phi i32 [ %sub.i18.i941, %if.then.i19.i942 ], [ %763, %if.end.i20.i943 ]
  %764 = inttoptr i32 %retval.0.i21.i944 to ptr
  call void @dump_page(ptr noundef %764, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 443, 0\0A.popsection", ""() #13, !srcloc !600
  unreachable

do.end10.i946:                                    ; preds = %_compound_head.exit.i939
  br i1 %tobool.not.i17.i938, label %if.end.i27.i949, label %if.then.i26.i948, !prof !557

if.then.i26.i948:                                 ; preds = %do.end10.i946
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i947 = add i32 %762, -1
  br label %PageSwapBacked.exit953

if.end.i27.i949:                                  ; preds = %do.end10.i946
  call void @__sanitizer_cov_trace_pc() #15
  %765 = ptrtoint ptr %add.ptr to i32
  br label %PageSwapBacked.exit953

PageSwapBacked.exit953:                           ; preds = %if.end.i27.i949, %if.then.i26.i948
  %retval.0.i28.i950 = phi i32 [ %sub.i25.i947, %if.then.i26.i948 ], [ %765, %if.end.i27.i949 ]
  %766 = inttoptr i32 %retval.0.i28.i950 to ptr
  %767 = ptrtoint ptr %766 to i32
  call void @__asan_load4_noabort(i32 %767)
  %768 = load volatile i32, ptr %766, align 4
  %769 = and i32 %768, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %769)
  %tobool297.not = icmp eq i32 %769, 0
  br i1 %tobool297.not, label %if.then298, label %PageSwapBacked.exit953.if.else303_crit_edge

PageSwapBacked.exit953.if.else303_crit_edge:      ; preds = %PageSwapBacked.exit953
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else303

if.then298:                                       ; preds = %PageSwapBacked.exit953
  %_refcount.i = getelementptr i8, ptr %24, i32 24
  %call.i.i.i1321 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i, i32 noundef 4) #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !585
  call void @llvm.prefetch.p0(ptr %_refcount.i, i32 1, i32 3, i32 1) #13
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge, %if.then298
  %770 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i, ptr %_refcount.i, i32 1, i32 0, ptr elementtype(i32) %_refcount.i) #13, !srcloc !586
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %770, 0
  %tobool.not.i.i.i.i1322 = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i1322, label %atomic_cmpxchg.exit.i, label %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge

do.body.i.i.i.i.do.body.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i.i.i.i

atomic_cmpxchg.exit.i:                            ; preds = %do.body.i.i.i.i
  %asmresult3.i.i.i.i = extractvalue { i32, i32 } %770, 1
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !587
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult3.i.i.i.i)
  %cmp.i1323 = icmp eq i32 %asmresult3.i.i.i.i, 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_freeze, i32 0, i32 1), ptr blockaddress(@shrink_page_list, %if.then.i1325)) #13
          to label %page_ref_freeze.exit [label %if.then.i1325], !srcloc !567

if.then.i1325:                                    ; preds = %atomic_cmpxchg.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %lnot.ext.i1324 = zext i1 %cmp.i1323 to i32
  call void @__page_ref_freeze(ptr noundef %add.ptr, i32 noundef 1, i32 noundef %lnot.ext.i1324) #13
  br label %page_ref_freeze.exit

page_ref_freeze.exit:                             ; preds = %if.then.i1325, %atomic_cmpxchg.exit.i
  br i1 %cmp.i1323, label %if.end302, label %page_ref_freeze.exit.keep_locked_crit_edge

page_ref_freeze.exit.keep_locked_crit_edge:       ; preds = %page_ref_freeze.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end302:                                        ; preds = %page_ref_freeze.exit
  %771 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %772 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i1327 = and i32 %772, -16384
  %773 = inttoptr i32 %and.i.i1327 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %773, i32 0, i32 3
  %774 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %774)
  %775 = load i32, ptr %cpu.i, align 4
  %arrayidx13.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %775
  %776 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %776)
  %777 = load i32, ptr %arrayidx13.i, align 4
  %add.i = add i32 %777, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 22) to i32)
  %778 = inttoptr i32 %add.i to ptr
  %779 = ptrtoint ptr %778 to i32
  call void @__asan_load4_noabort(i32 %779)
  %780 = load i32, ptr %778, align 4
  %add14.i = add i32 %780, 1
  store i32 %add14.i, ptr %778, align 4
  %781 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i1328 = and i32 %781, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1328)
  %tobool.not.i1329 = icmp eq i32 %and.i.i.i1328, 0
  br i1 %tobool.not.i1329, label %if.then.i1330, label %if.end302.count_vm_event.exit_crit_edge, !prof !558

if.end302.count_vm_event.exit_crit_edge:          ; preds = %if.end302
  call void @__sanitizer_cov_trace_pc() #15
  br label %count_vm_event.exit

if.then.i1330:                                    ; preds = %if.end302
  call void @__sanitizer_cov_trace_pc() #15
  call void @warn_bogus_irq_restore() #13
  br label %count_vm_event.exit

count_vm_event.exit:                              ; preds = %if.then.i1330, %if.end302.count_vm_event.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %771) #13, !srcloc !615
  %782 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %782)
  %783 = load volatile i32, ptr %24, align 4
  %and.i.i.i1331 = and i32 %783, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1331)
  %tobool.not.i.i.i1332 = icmp eq i32 %and.i.i.i1331, 0
  br i1 %tobool.not.i.i.i1332, label %if.end.i.i.i1335, label %if.then.i.i.i1334, !prof !557

if.then.i.i.i1334:                                ; preds = %count_vm_event.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i1333 = add i32 %783, -1
  br label %page_memcg.exit.i

if.end.i.i.i1335:                                 ; preds = %count_vm_event.exit
  call void @__sanitizer_cov_trace_pc() #15
  %784 = ptrtoint ptr %add.ptr to i32
  br label %page_memcg.exit.i

page_memcg.exit.i:                                ; preds = %if.end.i.i.i1335, %if.then.i.i.i1334
  %retval.0.i.i.i1336 = phi i32 [ %sub.i.i.i1333, %if.then.i.i.i1334 ], [ %784, %if.end.i.i.i1335 ]
  %785 = inttoptr i32 %retval.0.i.i.i1336 to ptr
  %call1.i.i = call fastcc ptr @folio_memcg(ptr noundef %785) #13
  %tobool.not.i1337 = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i1337, label %page_memcg.exit.i.if.end310_crit_edge, label %if.then.i1339

page_memcg.exit.i.if.end310_crit_edge:            ; preds = %page_memcg.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end310

if.then.i1339:                                    ; preds = %page_memcg.exit.i
  %786 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %and.i.i2.i = and i32 %786, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i2.i)
  %tobool.not.i.i1338 = icmp eq i32 %and.i.i2.i, 0
  br i1 %tobool.not.i.i1338, label %if.then21.i.i, label %do.end11.i.i

do.end11.i.i:                                     ; preds = %if.then.i1339
  call void @__sanitizer_cov_trace_pc() #15
  call void @__count_memcg_events(ptr noundef nonnull %call1.i.i, i32 noundef 22, i32 noundef 1) #13
  br label %do.body23.i.i

if.then21.i.i:                                    ; preds = %if.then.i1339
  call void @__sanitizer_cov_trace_pc() #15
  call void @trace_hardirqs_off() #13
  call void @__count_memcg_events(ptr noundef nonnull %call1.i.i, i32 noundef 22, i32 noundef 1) #13
  call void @trace_hardirqs_on() #13
  br label %do.body23.i.i

do.body23.i.i:                                    ; preds = %if.then21.i.i, %do.end11.i.i
  %787 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i.i1340 = and i32 %787, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i1340)
  %tobool32.not.i.i = icmp eq i32 %and.i.i.i.i1340, 0
  br i1 %tobool32.not.i.i, label %if.then36.i.i, label %do.body23.i.i.count_memcg_events.exit.i_crit_edge, !prof !558

do.body23.i.i.count_memcg_events.exit.i_crit_edge: ; preds = %do.body23.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %count_memcg_events.exit.i

if.then36.i.i:                                    ; preds = %do.body23.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @warn_bogus_irq_restore() #13
  br label %count_memcg_events.exit.i

count_memcg_events.exit.i:                        ; preds = %if.then36.i.i, %do.body23.i.i.count_memcg_events.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %786) #13, !srcloc !615
  br label %if.end310

if.else303:                                       ; preds = %PageSwapBacked.exit953.if.else303_crit_edge, %PageAnon.exit929.if.else303_crit_edge
  %tobool304.not = icmp eq ptr %mapping.1, null
  br i1 %tobool304.not, label %if.else303.keep_locked_crit_edge, label %lor.lhs.false305

if.else303.keep_locked_crit_edge:                 ; preds = %if.else303
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

lor.lhs.false305:                                 ; preds = %if.else303
  %788 = ptrtoint ptr %target_mem_cgroup.i.i1132 to i32
  call void @__asan_load4_noabort(i32 %788)
  %789 = load ptr, ptr %target_mem_cgroup.i.i1132, align 4
  %call306 = call fastcc i32 @__remove_mapping(ptr noundef nonnull %mapping.1, ptr noundef %add.ptr, i1 noundef zeroext true, ptr noundef %789)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call306)
  %tobool307.not = icmp eq i32 %call306, 0
  br i1 %tobool307.not, label %lor.lhs.false305.keep_locked_crit_edge, label %lor.lhs.false305.if.end310_crit_edge

lor.lhs.false305.if.end310_crit_edge:             ; preds = %lor.lhs.false305
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end310

lor.lhs.false305.keep_locked_crit_edge:           ; preds = %lor.lhs.false305
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.end310:                                        ; preds = %lor.lhs.false305.if.end310_crit_edge, %count_memcg_events.exit.i, %page_memcg.exit.i.if.end310_crit_edge
  call void @unlock_page(ptr noundef %add.ptr) #13
  br label %free_it

free_it:                                          ; preds = %if.end310, %put_page_testzero.exit.free_it_crit_edge
  %add311 = add i32 %nr_pages.0, %nr_reclaimed.12096
  %790 = ptrtoint ptr %free_pages to i32
  call void @__asan_load4_noabort(i32 %790)
  %791 = load ptr, ptr %free_pages, align 4
  %call.i.i1342 = call zeroext i1 @__list_add_valid(ptr noundef %24, ptr noundef nonnull %free_pages, ptr noundef %791) #13
  br i1 %call.i.i1342, label %if.end.i.i1345, label %free_it.cleanup388_crit_edge

free_it.cleanup388_crit_edge:                     ; preds = %free_it
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup388

if.end.i.i1345:                                   ; preds = %free_it
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i1343 = getelementptr inbounds %struct.list_head, ptr %791, i32 0, i32 1
  %792 = ptrtoint ptr %prev1.i.i1343 to i32
  call void @__asan_store4_noabort(i32 %792)
  store ptr %24, ptr %prev1.i.i1343, align 4
  %793 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %793)
  store ptr %791, ptr %24, align 4
  %794 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %794)
  store ptr %free_pages, ptr %prev.i, align 4
  %795 = ptrtoint ptr %free_pages to i32
  call void @__asan_store4_noabort(i32 %795)
  store volatile ptr %24, ptr %free_pages, align 4
  br label %cleanup388

if.then325:                                       ; preds = %if.then147
  call void @__sanitizer_cov_trace_pc() #15
  %796 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %796)
  %797 = load i32, ptr %nr_scanned, align 4
  %sub326.neg = sub i32 1, %retval.0.i1119
  %sub328 = add i32 %sub326.neg, %797
  store i32 %sub328, ptr %nr_scanned, align 4
  br label %activate_locked

activate_locked:                                  ; preds = %if.then325, %if.then276.activate_locked_crit_edge, %pageout.exit.thread1447, %if.end12.i1262.activate_locked_crit_edge, %SetPageReclaim.exit822, %if.then209, %PageSwapBacked.exit748.activate_locked_crit_edge, %if.then203.activate_locked_crit_edge, %if.then147.activate_locked_crit_edge, %if.end103.thread1438, %SetPageReclaim.exit, %if.then87, %compound_nr.exit.activate_locked_crit_edge
  %nr_pages.1 = phi i32 [ %retval.0.i1119, %compound_nr.exit.activate_locked_crit_edge ], [ %retval.0.i1119, %if.then87 ], [ %retval.0.i1119, %SetPageReclaim.exit ], [ %nr_pages.0, %if.then276.activate_locked_crit_edge ], [ %nr_pages.0, %SetPageReclaim.exit822 ], [ 1, %if.then325 ], [ %retval.0.i1119, %if.then147.activate_locked_crit_edge ], [ %retval.0.i1119, %if.end103.thread1438 ], [ %nr_pages.0, %pageout.exit.thread1447 ], [ %nr_pages.0, %if.then209 ], [ %nr_pages.0, %PageSwapBacked.exit748.activate_locked_crit_edge ], [ %nr_pages.0, %if.then203.activate_locked_crit_edge ], [ %nr_pages.0, %if.end12.i1262.activate_locked_crit_edge ]
  %798 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %798)
  %799 = load volatile i32, ptr %24, align 4
  %and.i.i954 = and i32 %799, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i954)
  %tobool.not.i.i955 = icmp eq i32 %and.i.i954, 0
  br i1 %tobool.not.i.i955, label %if.end.i.i958, label %if.then.i.i957, !prof !557

if.then.i.i957:                                   ; preds = %activate_locked
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i956 = add i32 %799, -1
  br label %_compound_head.exit.i962

if.end.i.i958:                                    ; preds = %activate_locked
  call void @__sanitizer_cov_trace_pc() #15
  %800 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i962

_compound_head.exit.i962:                         ; preds = %if.end.i.i958, %if.then.i.i957
  %retval.0.i.i959 = phi i32 [ %sub.i.i956, %if.then.i.i957 ], [ %800, %if.end.i.i958 ]
  %801 = inttoptr i32 %retval.0.i.i959 to ptr
  %802 = getelementptr inbounds %struct.page, ptr %801, i32 0, i32 1
  %803 = ptrtoint ptr %802 to i32
  call void @__asan_load4_noabort(i32 %803)
  %804 = load volatile i32, ptr %802, align 4
  %and.i.i.i.i.i960 = and i32 %804, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i960)
  %tobool.not.i.i.i.i961 = icmp eq i32 %and.i.i.i.i.i960, 0
  br i1 %tobool.not.i.i.i.i961, label %folio_test_swapbacked.exit.i.i965, label %if.then.i.i.i.i963, !prof !557

if.then.i.i.i.i963:                               ; preds = %_compound_head.exit.i962
  call void @__sanitizer_cov_trace_pc() #15
  %805 = inttoptr i32 %retval.0.i.i959 to ptr
  call void @dump_page(ptr noundef %805, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_swapbacked.exit.i.i965:                ; preds = %_compound_head.exit.i962
  %806 = ptrtoint ptr %801 to i32
  call void @__asan_load4_noabort(i32 %806)
  %807 = load volatile i32, ptr %801, align 4
  %808 = and i32 %807, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %808)
  %tobool.i.not.i.i964 = icmp eq i32 %808, 0
  br i1 %tobool.i.not.i.i964, label %folio_test_swapbacked.exit.i.i965.do.body339_crit_edge, label %land.rhs.i.i968

folio_test_swapbacked.exit.i.i965.do.body339_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i965
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body339

land.rhs.i.i968:                                  ; preds = %folio_test_swapbacked.exit.i.i965
  %809 = ptrtoint ptr %802 to i32
  call void @__asan_load4_noabort(i32 %809)
  %810 = load volatile i32, ptr %802, align 4
  %and.i.i.i.i966 = and i32 %810, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i966)
  %tobool.not.i.i.i967 = icmp eq i32 %and.i.i.i.i966, 0
  br i1 %tobool.not.i.i.i967, label %PageSwapCache.exit972, label %if.then.i.i.i969, !prof !557

if.then.i.i.i969:                                 ; preds = %land.rhs.i.i968
  call void @__sanitizer_cov_trace_pc() #15
  %811 = inttoptr i32 %retval.0.i.i959 to ptr
  call void @dump_page(ptr noundef %811, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

PageSwapCache.exit972:                            ; preds = %land.rhs.i.i968
  %812 = ptrtoint ptr %801 to i32
  call void @__asan_load4_noabort(i32 %812)
  %813 = load volatile i32, ptr %801, align 4
  %814 = and i32 %813, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %814)
  %tobool.i.i970.not = icmp eq i32 %814, 0
  br i1 %tobool.i.i970.not, label %PageSwapCache.exit972.do.body339_crit_edge, label %land.lhs.true331

PageSwapCache.exit972.do.body339_crit_edge:       ; preds = %PageSwapCache.exit972
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body339

land.lhs.true331:                                 ; preds = %PageSwapCache.exit972
  %call332 = call zeroext i1 @mem_cgroup_swap_full(ptr noundef %add.ptr) #13
  br i1 %call332, label %land.lhs.true331.if.then336_crit_edge, label %lor.lhs.false333

land.lhs.true331.if.then336_crit_edge:            ; preds = %land.lhs.true331
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then336

lor.lhs.false333:                                 ; preds = %land.lhs.true331
  %815 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %815)
  %816 = load volatile i32, ptr %24, align 4
  %and.i.i973 = and i32 %816, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i973)
  %tobool.not.i.i974 = icmp eq i32 %and.i.i973, 0
  br i1 %tobool.not.i.i974, label %if.end.i.i977, label %if.then.i.i976, !prof !557

if.then.i.i976:                                   ; preds = %lor.lhs.false333
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i975 = add i32 %816, -1
  br label %_compound_head.exit.i982

if.end.i.i977:                                    ; preds = %lor.lhs.false333
  call void @__sanitizer_cov_trace_pc() #15
  %817 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i982

_compound_head.exit.i982:                         ; preds = %if.end.i.i977, %if.then.i.i976
  %retval.0.i.i978 = phi i32 [ %sub.i.i975, %if.then.i.i976 ], [ %817, %if.end.i.i977 ]
  %818 = inttoptr i32 %retval.0.i.i978 to ptr
  %819 = ptrtoint ptr %818 to i32
  call void @__asan_load4_noabort(i32 %819)
  %820 = load volatile i32, ptr %818, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %820)
  %cmp.i.not.i979 = icmp eq i32 %820, -1
  %821 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %821)
  %822 = load volatile i32, ptr %24, align 4
  %and.i16.i980 = and i32 %822, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i980)
  %tobool.not.i17.i981 = icmp eq i32 %and.i16.i980, 0
  br i1 %cmp.i.not.i979, label %if.then.i983, label %do.end10.i989, !prof !558

if.then.i983:                                     ; preds = %_compound_head.exit.i982
  br i1 %tobool.not.i17.i981, label %if.end.i20.i986, label %if.then.i19.i985, !prof !557

if.then.i19.i985:                                 ; preds = %if.then.i983
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i984 = add i32 %822, -1
  br label %_compound_head.exit22.i988

if.end.i20.i986:                                  ; preds = %if.then.i983
  call void @__sanitizer_cov_trace_pc() #15
  %823 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i988

_compound_head.exit22.i988:                       ; preds = %if.end.i20.i986, %if.then.i19.i985
  %retval.0.i21.i987 = phi i32 [ %sub.i18.i984, %if.then.i19.i985 ], [ %823, %if.end.i20.i986 ]
  %824 = inttoptr i32 %retval.0.i21.i987 to ptr
  call void @dump_page(ptr noundef %824, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 504, 0\0A.popsection", ""() #13, !srcloc !616
  unreachable

do.end10.i989:                                    ; preds = %_compound_head.exit.i982
  br i1 %tobool.not.i17.i981, label %if.end.i27.i992, label %if.then.i26.i991, !prof !557

if.then.i26.i991:                                 ; preds = %do.end10.i989
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i990 = add i32 %822, -1
  br label %PageMlocked.exit

if.end.i27.i992:                                  ; preds = %do.end10.i989
  call void @__sanitizer_cov_trace_pc() #15
  %825 = ptrtoint ptr %add.ptr to i32
  br label %PageMlocked.exit

PageMlocked.exit:                                 ; preds = %if.end.i27.i992, %if.then.i26.i991
  %retval.0.i28.i993 = phi i32 [ %sub.i25.i990, %if.then.i26.i991 ], [ %825, %if.end.i27.i992 ]
  %826 = inttoptr i32 %retval.0.i28.i993 to ptr
  %827 = ptrtoint ptr %826 to i32
  call void @__asan_load4_noabort(i32 %827)
  %828 = load volatile i32, ptr %826, align 4
  %829 = and i32 %828, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %829)
  %tobool335.not = icmp eq i32 %829, 0
  br i1 %tobool335.not, label %PageMlocked.exit.do.body339_crit_edge, label %PageMlocked.exit.if.then336_crit_edge

PageMlocked.exit.if.then336_crit_edge:            ; preds = %PageMlocked.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then336

PageMlocked.exit.do.body339_crit_edge:            ; preds = %PageMlocked.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body339

if.then336:                                       ; preds = %PageMlocked.exit.if.then336_crit_edge, %land.lhs.true331.if.then336_crit_edge
  %call337 = call i32 @try_to_free_swap(ptr noundef %add.ptr) #13
  br label %do.body339

do.body339:                                       ; preds = %if.then336, %PageMlocked.exit.do.body339_crit_edge, %PageSwapCache.exit972.do.body339_crit_edge, %folio_test_swapbacked.exit.i.i965.do.body339_crit_edge
  %830 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %830)
  %831 = load volatile i32, ptr %24, align 4
  %and.i.i996 = and i32 %831, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i996)
  %tobool.not.i.i997 = icmp eq i32 %and.i.i996, 0
  br i1 %tobool.not.i.i997, label %if.end.i.i1000, label %if.then.i.i999, !prof !557

if.then.i.i999:                                   ; preds = %do.body339
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i998 = add i32 %831, -1
  br label %_compound_head.exit.i1005

if.end.i.i1000:                                   ; preds = %do.body339
  call void @__sanitizer_cov_trace_pc() #15
  %832 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i1005

_compound_head.exit.i1005:                        ; preds = %if.end.i.i1000, %if.then.i.i999
  %retval.0.i.i1001 = phi i32 [ %sub.i.i998, %if.then.i.i999 ], [ %832, %if.end.i.i1000 ]
  %833 = inttoptr i32 %retval.0.i.i1001 to ptr
  %834 = ptrtoint ptr %833 to i32
  call void @__asan_load4_noabort(i32 %834)
  %835 = load volatile i32, ptr %833, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %835)
  %cmp.i.not.i1002 = icmp eq i32 %835, -1
  %836 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %836)
  %837 = load volatile i32, ptr %24, align 4
  %and.i13.i1003 = and i32 %837, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i1003)
  %tobool.not.i14.i1004 = icmp eq i32 %and.i13.i1003, 0
  br i1 %cmp.i.not.i1002, label %if.then.i1006, label %do.end8.i1012, !prof !558

if.then.i1006:                                    ; preds = %_compound_head.exit.i1005
  br i1 %tobool.not.i14.i1004, label %if.end.i17.i1009, label %if.then.i16.i1008, !prof !557

if.then.i16.i1008:                                ; preds = %if.then.i1006
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i1007 = add i32 %837, -1
  br label %_compound_head.exit19.i1011

if.end.i17.i1009:                                 ; preds = %if.then.i1006
  call void @__sanitizer_cov_trace_pc() #15
  %838 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i1011

_compound_head.exit19.i1011:                      ; preds = %if.end.i17.i1009, %if.then.i16.i1008
  %retval.0.i18.i1010 = phi i32 [ %sub.i15.i1007, %if.then.i16.i1008 ], [ %838, %if.end.i17.i1009 ]
  %839 = inttoptr i32 %retval.0.i18.i1010 to ptr
  call void @dump_page(ptr noundef %839, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 424, 0\0A.popsection", ""() #13, !srcloc !598
  unreachable

do.end8.i1012:                                    ; preds = %_compound_head.exit.i1005
  br i1 %tobool.not.i14.i1004, label %if.end.i24.i1015, label %if.then.i23.i1014, !prof !557

if.then.i23.i1014:                                ; preds = %do.end8.i1012
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i1013 = add i32 %837, -1
  br label %PageActive.exit1019

if.end.i24.i1015:                                 ; preds = %do.end8.i1012
  call void @__sanitizer_cov_trace_pc() #15
  %840 = ptrtoint ptr %add.ptr to i32
  br label %PageActive.exit1019

PageActive.exit1019:                              ; preds = %if.end.i24.i1015, %if.then.i23.i1014
  %retval.0.i25.i1016 = phi i32 [ %sub.i22.i1013, %if.then.i23.i1014 ], [ %840, %if.end.i24.i1015 ]
  %841 = inttoptr i32 %retval.0.i25.i1016 to ptr
  %842 = ptrtoint ptr %841 to i32
  call void @__asan_load4_noabort(i32 %842)
  %843 = load volatile i32, ptr %841, align 4
  %844 = and i32 %843, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %844)
  %tobool341.not = icmp eq i32 %844, 0
  br i1 %tobool341.not, label %do.end357, label %if.then348, !prof !557

if.then348:                                       ; preds = %PageActive.exit1019
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.159) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1930, 0\0A.popsection", ""() #13, !srcloc !617
  unreachable

do.end357:                                        ; preds = %PageActive.exit1019
  %845 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %845)
  %846 = load volatile i32, ptr %24, align 4
  %and.i.i1020 = and i32 %846, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1020)
  %tobool.not.i.i1021 = icmp eq i32 %and.i.i1020, 0
  br i1 %tobool.not.i.i1021, label %if.end.i.i1024, label %if.then.i.i1023, !prof !557

if.then.i.i1023:                                  ; preds = %do.end357
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1022 = add i32 %846, -1
  br label %_compound_head.exit.i1029

if.end.i.i1024:                                   ; preds = %do.end357
  call void @__sanitizer_cov_trace_pc() #15
  %847 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i1029

_compound_head.exit.i1029:                        ; preds = %if.end.i.i1024, %if.then.i.i1023
  %retval.0.i.i1025 = phi i32 [ %sub.i.i1022, %if.then.i.i1023 ], [ %847, %if.end.i.i1024 ]
  %848 = inttoptr i32 %retval.0.i.i1025 to ptr
  %849 = ptrtoint ptr %848 to i32
  call void @__asan_load4_noabort(i32 %849)
  %850 = load volatile i32, ptr %848, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %850)
  %cmp.i.not.i1026 = icmp eq i32 %850, -1
  %851 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %851)
  %852 = load volatile i32, ptr %24, align 4
  %and.i16.i1027 = and i32 %852, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i1027)
  %tobool.not.i17.i1028 = icmp eq i32 %and.i16.i1027, 0
  br i1 %cmp.i.not.i1026, label %if.then.i1030, label %do.end10.i1036, !prof !558

if.then.i1030:                                    ; preds = %_compound_head.exit.i1029
  br i1 %tobool.not.i17.i1028, label %if.end.i20.i1033, label %if.then.i19.i1032, !prof !557

if.then.i19.i1032:                                ; preds = %if.then.i1030
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i1031 = add i32 %852, -1
  br label %_compound_head.exit22.i1035

if.end.i20.i1033:                                 ; preds = %if.then.i1030
  call void @__sanitizer_cov_trace_pc() #15
  %853 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit22.i1035

_compound_head.exit22.i1035:                      ; preds = %if.end.i20.i1033, %if.then.i19.i1032
  %retval.0.i21.i1034 = phi i32 [ %sub.i18.i1031, %if.then.i19.i1032 ], [ %853, %if.end.i20.i1033 ]
  %854 = inttoptr i32 %retval.0.i21.i1034 to ptr
  call void @dump_page(ptr noundef %854, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 504, 0\0A.popsection", ""() #13, !srcloc !616
  unreachable

do.end10.i1036:                                   ; preds = %_compound_head.exit.i1029
  br i1 %tobool.not.i17.i1028, label %if.end.i27.i1039, label %if.then.i26.i1038, !prof !557

if.then.i26.i1038:                                ; preds = %do.end10.i1036
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i1037 = add i32 %852, -1
  br label %PageMlocked.exit1043

if.end.i27.i1039:                                 ; preds = %do.end10.i1036
  call void @__sanitizer_cov_trace_pc() #15
  %855 = ptrtoint ptr %add.ptr to i32
  br label %PageMlocked.exit1043

PageMlocked.exit1043:                             ; preds = %if.end.i27.i1039, %if.then.i26.i1038
  %retval.0.i28.i1040 = phi i32 [ %sub.i25.i1037, %if.then.i26.i1038 ], [ %855, %if.end.i27.i1039 ]
  %856 = inttoptr i32 %retval.0.i28.i1040 to ptr
  %857 = ptrtoint ptr %856 to i32
  call void @__asan_load4_noabort(i32 %857)
  %858 = load volatile i32, ptr %856, align 4
  %859 = and i32 %858, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %859)
  %tobool359.not = icmp eq i32 %859, 0
  br i1 %tobool359.not, label %if.then360, label %PageMlocked.exit1043.keep_locked_crit_edge

PageMlocked.exit1043.keep_locked_crit_edge:       ; preds = %PageMlocked.exit1043
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.then360:                                       ; preds = %PageMlocked.exit1043
  %860 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %860)
  %861 = load volatile i32, ptr %24, align 4
  %and.i.i1347 = and i32 %861, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1347)
  %tobool.not.i.i1348 = icmp eq i32 %and.i.i1347, 0
  br i1 %tobool.not.i.i1348, label %if.end.i.i1351, label %if.then.i.i1350, !prof !557

if.then.i.i1350:                                  ; preds = %if.then360
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1349 = add i32 %861, -1
  br label %_compound_head.exit.i1355

if.end.i.i1351:                                   ; preds = %if.then360
  call void @__sanitizer_cov_trace_pc() #15
  %862 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i1355

_compound_head.exit.i1355:                        ; preds = %if.end.i.i1351, %if.then.i.i1350
  %retval.0.i.i1352 = phi i32 [ %sub.i.i1349, %if.then.i.i1350 ], [ %862, %if.end.i.i1351 ]
  %863 = inttoptr i32 %retval.0.i.i1352 to ptr
  %864 = getelementptr inbounds %struct.page, ptr %863, i32 0, i32 1
  %865 = ptrtoint ptr %864 to i32
  call void @__asan_load4_noabort(i32 %865)
  %866 = load volatile i32, ptr %864, align 4
  %and.i.i.i.i.i1353 = and i32 %866, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i1353)
  %tobool.not.i.i.i.i1354 = icmp eq i32 %and.i.i.i.i.i1353, 0
  br i1 %tobool.not.i.i.i.i1354, label %page_is_file_lru.exit1358, label %if.then.i.i.i.i1356, !prof !557

if.then.i.i.i.i1356:                              ; preds = %_compound_head.exit.i1355
  call void @__sanitizer_cov_trace_pc() #15
  %867 = inttoptr i32 %retval.0.i.i1352 to ptr
  call void @dump_page(ptr noundef %867, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

page_is_file_lru.exit1358:                        ; preds = %_compound_head.exit.i1355
  %868 = ptrtoint ptr %863 to i32
  call void @__asan_load4_noabort(i32 %868)
  %869 = load volatile i32, ptr %863, align 4
  %870 = lshr i32 %869, 19
  %.lobit.i.i1357 = and i32 %870, 1
  %871 = xor i32 %.lobit.i.i1357, 1
  %872 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %872)
  %873 = load volatile i32, ptr %24, align 4
  %and.i.i1044 = and i32 %873, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1044)
  %tobool.not.i.i1045 = icmp eq i32 %and.i.i1044, 0
  br i1 %tobool.not.i.i1045, label %if.end.i.i1048, label %if.then.i.i1047, !prof !557

if.then.i.i1047:                                  ; preds = %page_is_file_lru.exit1358
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1046 = add i32 %873, -1
  br label %_compound_head.exit.i1051

if.end.i.i1048:                                   ; preds = %page_is_file_lru.exit1358
  call void @__sanitizer_cov_trace_pc() #15
  %874 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i1051

_compound_head.exit.i1051:                        ; preds = %if.end.i.i1048, %if.then.i.i1047
  %retval.0.i.i1049 = phi i32 [ %sub.i.i1046, %if.then.i.i1047 ], [ %874, %if.end.i.i1048 ]
  %875 = inttoptr i32 %retval.0.i.i1049 to ptr
  %876 = ptrtoint ptr %875 to i32
  call void @__asan_load4_noabort(i32 %876)
  %877 = load volatile i32, ptr %875, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %877)
  %cmp.i.not.i1050 = icmp eq i32 %877, -1
  %878 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %878)
  %879 = load volatile i32, ptr %24, align 4
  %and.i12.i = and i32 %879, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i)
  %tobool.not.i13.i = icmp eq i32 %and.i12.i, 0
  br i1 %cmp.i.not.i1050, label %if.then.i1052, label %do.end8.i1053, !prof !558

if.then.i1052:                                    ; preds = %_compound_head.exit.i1051
  br i1 %tobool.not.i13.i, label %if.end.i16.i, label %if.then.i15.i, !prof !557

if.then.i15.i:                                    ; preds = %if.then.i1052
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i = add i32 %879, -1
  br label %_compound_head.exit18.i

if.end.i16.i:                                     ; preds = %if.then.i1052
  call void @__sanitizer_cov_trace_pc() #15
  %880 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit18.i

_compound_head.exit18.i:                          ; preds = %if.end.i16.i, %if.then.i15.i
  %retval.0.i17.i = phi i32 [ %sub.i14.i, %if.then.i15.i ], [ %880, %if.end.i16.i ]
  %881 = inttoptr i32 %retval.0.i17.i to ptr
  call void @dump_page(ptr noundef %881, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 424, 0\0A.popsection", ""() #13, !srcloc !618
  unreachable

do.end8.i1053:                                    ; preds = %_compound_head.exit.i1051
  br i1 %tobool.not.i13.i, label %if.end.i23.i, label %if.then.i22.i, !prof !557

if.then.i22.i:                                    ; preds = %do.end8.i1053
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i = add i32 %879, -1
  br label %SetPageActive.exit

if.end.i23.i:                                     ; preds = %do.end8.i1053
  call void @__sanitizer_cov_trace_pc() #15
  %882 = ptrtoint ptr %add.ptr to i32
  br label %SetPageActive.exit

SetPageActive.exit:                               ; preds = %if.end.i23.i, %if.then.i22.i
  %retval.0.i24.i = phi i32 [ %sub.i21.i, %if.then.i22.i ], [ %882, %if.end.i23.i ]
  %883 = inttoptr i32 %retval.0.i24.i to ptr
  call void @_set_bit(i32 noundef 5, ptr noundef %883) #13
  %arrayidx = getelementptr %struct.reclaim_stat, ptr %stat, i32 0, i32 6, i32 %871
  %884 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %884)
  %885 = load i32, ptr %arrayidx, align 4
  %add362 = add i32 %885, %nr_pages.1
  store i32 %add362, ptr %arrayidx, align 4
  %886 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %886)
  %887 = load volatile i32, ptr %24, align 4
  %and.i.i.i1359 = and i32 %887, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1359)
  %tobool.not.i.i.i1360 = icmp eq i32 %and.i.i.i1359, 0
  br i1 %tobool.not.i.i.i1360, label %if.end.i.i.i1363, label %if.then.i.i.i1362, !prof !557

if.then.i.i.i1362:                                ; preds = %SetPageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i.i1361 = add i32 %887, -1
  br label %page_memcg.exit.i1367

if.end.i.i.i1363:                                 ; preds = %SetPageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  %888 = ptrtoint ptr %add.ptr to i32
  br label %page_memcg.exit.i1367

page_memcg.exit.i1367:                            ; preds = %if.end.i.i.i1363, %if.then.i.i.i1362
  %retval.0.i.i.i1364 = phi i32 [ %sub.i.i.i1361, %if.then.i.i.i1362 ], [ %888, %if.end.i.i.i1363 ]
  %889 = inttoptr i32 %retval.0.i.i.i1364 to ptr
  %call1.i.i1365 = call fastcc ptr @folio_memcg(ptr noundef %889) #13
  %tobool.not.i1366 = icmp eq ptr %call1.i.i1365, null
  br i1 %tobool.not.i1366, label %page_memcg.exit.i1367.keep_locked_crit_edge, label %if.then.i1370

page_memcg.exit.i1367.keep_locked_crit_edge:      ; preds = %page_memcg.exit.i1367
  call void @__sanitizer_cov_trace_pc() #15
  br label %keep_locked

if.then.i1370:                                    ; preds = %page_memcg.exit.i1367
  %890 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %and.i.i2.i1368 = and i32 %890, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i2.i1368)
  %tobool.not.i.i1369 = icmp eq i32 %and.i.i2.i1368, 0
  br i1 %tobool.not.i.i1369, label %if.then21.i.i1372, label %do.end11.i.i1371

do.end11.i.i1371:                                 ; preds = %if.then.i1370
  call void @__sanitizer_cov_trace_pc() #15
  call void @__count_memcg_events(ptr noundef nonnull %call1.i.i1365, i32 noundef 17, i32 noundef 1) #13
  br label %do.body23.i.i1375

if.then21.i.i1372:                                ; preds = %if.then.i1370
  call void @__sanitizer_cov_trace_pc() #15
  call void @trace_hardirqs_off() #13
  call void @__count_memcg_events(ptr noundef nonnull %call1.i.i1365, i32 noundef 17, i32 noundef 1) #13
  call void @trace_hardirqs_on() #13
  br label %do.body23.i.i1375

do.body23.i.i1375:                                ; preds = %if.then21.i.i1372, %do.end11.i.i1371
  %891 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i.i1373 = and i32 %891, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i1373)
  %tobool32.not.i.i1374 = icmp eq i32 %and.i.i.i.i1373, 0
  br i1 %tobool32.not.i.i1374, label %if.then36.i.i1376, label %do.body23.i.i1375.count_memcg_events.exit.i1377_crit_edge, !prof !558

do.body23.i.i1375.count_memcg_events.exit.i1377_crit_edge: ; preds = %do.body23.i.i1375
  call void @__sanitizer_cov_trace_pc() #15
  br label %count_memcg_events.exit.i1377

if.then36.i.i1376:                                ; preds = %do.body23.i.i1375
  call void @__sanitizer_cov_trace_pc() #15
  call void @warn_bogus_irq_restore() #13
  br label %count_memcg_events.exit.i1377

count_memcg_events.exit.i1377:                    ; preds = %if.then36.i.i1376, %do.body23.i.i1375.count_memcg_events.exit.i1377_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %890) #13, !srcloc !615
  br label %keep_locked

keep_locked:                                      ; preds = %count_memcg_events.exit.i1377, %page_memcg.exit.i1367.keep_locked_crit_edge, %PageMlocked.exit1043.keep_locked_crit_edge, %lor.lhs.false305.keep_locked_crit_edge, %if.else303.keep_locked_crit_edge, %page_ref_freeze.exit.keep_locked_crit_edge, %PageWriteback.exit918.keep_locked_crit_edge, %PageDirty.exit894.keep_locked_crit_edge, %may_write_to_inode.exit.i.keep_locked_crit_edge, %if.then5.i.keep_locked_crit_edge, %if.then2.i1237.keep_locked_crit_edge, %is_page_cache_freeable.exit.i.keep_locked_crit_edge, %if.end237.keep_locked_crit_edge, %if.end231.keep_locked_crit_edge, %page_maybe_dma_pinned.exit.keep_locked_crit_edge, %compound_pincount.exit.i.keep_locked_crit_edge, %if.then122.keep_locked_crit_edge, %sw.bb104, %land.lhs.true.keep_locked_crit_edge
  call void @unlock_page(ptr noundef %add.ptr) #13
  br label %keep

keep:                                             ; preds = %keep_locked, %trylock_page.exit1305.keep_crit_edge, %folio_flags.exit.i.i1300.keep_crit_edge, %PageDirty.exit870.keep_crit_edge, %PageWriteback.exit846.keep_crit_edge, %trylock_page.exit.keep_crit_edge, %folio_flags.exit.i.i1115.keep_crit_edge
  %892 = ptrtoint ptr %ret_pages to i32
  call void @__asan_load4_noabort(i32 %892)
  %893 = load ptr, ptr %ret_pages, align 4
  %call.i.i1380 = call zeroext i1 @__list_add_valid(ptr noundef %24, ptr noundef nonnull %ret_pages, ptr noundef %893) #13
  br i1 %call.i.i1380, label %if.end.i.i1383, label %keep.list_add.exit1384_crit_edge

keep.list_add.exit1384_crit_edge:                 ; preds = %keep
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_add.exit1384

if.end.i.i1383:                                   ; preds = %keep
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i1381 = getelementptr inbounds %struct.list_head, ptr %893, i32 0, i32 1
  %894 = ptrtoint ptr %prev1.i.i1381 to i32
  call void @__asan_store4_noabort(i32 %894)
  store ptr %24, ptr %prev1.i.i1381, align 4
  %895 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %895)
  store ptr %893, ptr %24, align 4
  %896 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %896)
  store ptr %ret_pages, ptr %prev.i, align 4
  %897 = ptrtoint ptr %ret_pages to i32
  call void @__asan_store4_noabort(i32 %897)
  store volatile ptr %24, ptr %ret_pages, align 4
  br label %list_add.exit1384

list_add.exit1384:                                ; preds = %if.end.i.i1383, %keep.list_add.exit1384_crit_edge
  %898 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %898)
  %899 = load volatile i32, ptr %24, align 4
  %and.i.i1054 = and i32 %899, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1054)
  %tobool.not.i.i1055 = icmp eq i32 %and.i.i1054, 0
  br i1 %tobool.not.i.i1055, label %if.end.i.i1058, label %if.then.i.i1057, !prof !557

if.then.i.i1057:                                  ; preds = %list_add.exit1384
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1056 = add i32 %899, -1
  br label %_compound_head.exit.i1063

if.end.i.i1058:                                   ; preds = %list_add.exit1384
  call void @__sanitizer_cov_trace_pc() #15
  %900 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i1063

_compound_head.exit.i1063:                        ; preds = %if.end.i.i1058, %if.then.i.i1057
  %retval.0.i.i1059 = phi i32 [ %sub.i.i1056, %if.then.i.i1057 ], [ %900, %if.end.i.i1058 ]
  %901 = inttoptr i32 %retval.0.i.i1059 to ptr
  %902 = ptrtoint ptr %901 to i32
  call void @__asan_load4_noabort(i32 %902)
  %903 = load volatile i32, ptr %901, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %903)
  %cmp.i.not.i1060 = icmp eq i32 %903, -1
  %904 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %904)
  %905 = load volatile i32, ptr %24, align 4
  %and.i13.i1061 = and i32 %905, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i1061)
  %tobool.not.i14.i1062 = icmp eq i32 %and.i13.i1061, 0
  br i1 %cmp.i.not.i1060, label %if.then.i1064, label %do.end8.i1070, !prof !558

if.then.i1064:                                    ; preds = %_compound_head.exit.i1063
  br i1 %tobool.not.i14.i1062, label %if.end.i17.i1067, label %if.then.i16.i1066, !prof !557

if.then.i16.i1066:                                ; preds = %if.then.i1064
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i1065 = add i32 %905, -1
  br label %_compound_head.exit19.i1069

if.end.i17.i1067:                                 ; preds = %if.then.i1064
  call void @__sanitizer_cov_trace_pc() #15
  %906 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i1069

_compound_head.exit19.i1069:                      ; preds = %if.end.i17.i1067, %if.then.i16.i1066
  %retval.0.i18.i1068 = phi i32 [ %sub.i15.i1065, %if.then.i16.i1066 ], [ %906, %if.end.i17.i1067 ]
  %907 = inttoptr i32 %retval.0.i18.i1068 to ptr
  call void @dump_page(ptr noundef %907, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #13, !srcloc !619
  unreachable

do.end8.i1070:                                    ; preds = %_compound_head.exit.i1063
  br i1 %tobool.not.i14.i1062, label %if.end.i24.i1073, label %if.then.i23.i1072, !prof !557

if.then.i23.i1072:                                ; preds = %do.end8.i1070
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i1071 = add i32 %905, -1
  br label %PageLRU.exit

if.end.i24.i1073:                                 ; preds = %do.end8.i1070
  call void @__sanitizer_cov_trace_pc() #15
  %908 = ptrtoint ptr %add.ptr to i32
  br label %PageLRU.exit

PageLRU.exit:                                     ; preds = %if.end.i24.i1073, %if.then.i23.i1072
  %retval.0.i25.i1074 = phi i32 [ %sub.i22.i1071, %if.then.i23.i1072 ], [ %908, %if.end.i24.i1073 ]
  %909 = inttoptr i32 %retval.0.i25.i1074 to ptr
  %910 = ptrtoint ptr %909 to i32
  call void @__asan_load4_noabort(i32 %910)
  %911 = load volatile i32, ptr %909, align 4
  %912 = and i32 %911, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %912)
  %tobool367.not = icmp eq i32 %912, 0
  br i1 %tobool367.not, label %lor.rhs368, label %PageLRU.exit.if.then378_crit_edge, !prof !557

PageLRU.exit.if.then378_crit_edge:                ; preds = %PageLRU.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then378

lor.rhs368:                                       ; preds = %PageLRU.exit
  %913 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %913)
  %914 = load volatile i32, ptr %24, align 4
  %and.i.i1077 = and i32 %914, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1077)
  %tobool.not.i.i1078 = icmp eq i32 %and.i.i1077, 0
  br i1 %tobool.not.i.i1078, label %if.end.i.i1081, label %if.then.i.i1080, !prof !557

if.then.i.i1080:                                  ; preds = %lor.rhs368
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i1079 = add i32 %914, -1
  br label %_compound_head.exit.i1086

if.end.i.i1081:                                   ; preds = %lor.rhs368
  call void @__sanitizer_cov_trace_pc() #15
  %915 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i1086

_compound_head.exit.i1086:                        ; preds = %if.end.i.i1081, %if.then.i.i1080
  %retval.0.i.i1082 = phi i32 [ %sub.i.i1079, %if.then.i.i1080 ], [ %915, %if.end.i.i1081 ]
  %916 = inttoptr i32 %retval.0.i.i1082 to ptr
  %917 = ptrtoint ptr %916 to i32
  call void @__asan_load4_noabort(i32 %917)
  %918 = load volatile i32, ptr %916, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %918)
  %cmp.i.not.i1083 = icmp eq i32 %918, -1
  %919 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %919)
  %920 = load volatile i32, ptr %24, align 4
  %and.i13.i1084 = and i32 %920, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i1084)
  %tobool.not.i14.i1085 = icmp eq i32 %and.i13.i1084, 0
  br i1 %cmp.i.not.i1083, label %if.then.i1087, label %do.end8.i1093, !prof !558

if.then.i1087:                                    ; preds = %_compound_head.exit.i1086
  br i1 %tobool.not.i14.i1085, label %if.end.i17.i1090, label %if.then.i16.i1089, !prof !557

if.then.i16.i1089:                                ; preds = %if.then.i1087
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i1088 = add i32 %920, -1
  br label %_compound_head.exit19.i1092

if.end.i17.i1090:                                 ; preds = %if.then.i1087
  call void @__sanitizer_cov_trace_pc() #15
  %921 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i1092

_compound_head.exit19.i1092:                      ; preds = %if.end.i17.i1090, %if.then.i16.i1089
  %retval.0.i18.i1091 = phi i32 [ %sub.i15.i1088, %if.then.i16.i1089 ], [ %921, %if.end.i17.i1090 ]
  %922 = inttoptr i32 %retval.0.i18.i1091 to ptr
  call void @dump_page(ptr noundef %922, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 499, 0\0A.popsection", ""() #13, !srcloc !594
  unreachable

do.end8.i1093:                                    ; preds = %_compound_head.exit.i1086
  br i1 %tobool.not.i14.i1085, label %if.end.i24.i1096, label %if.then.i23.i1095, !prof !557

if.then.i23.i1095:                                ; preds = %do.end8.i1093
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i1094 = add i32 %920, -1
  br label %PageUnevictable.exit

if.end.i24.i1096:                                 ; preds = %do.end8.i1093
  call void @__sanitizer_cov_trace_pc() #15
  %923 = ptrtoint ptr %add.ptr to i32
  br label %PageUnevictable.exit

PageUnevictable.exit:                             ; preds = %if.end.i24.i1096, %if.then.i23.i1095
  %retval.0.i25.i1097 = phi i32 [ %sub.i22.i1094, %if.then.i23.i1095 ], [ %923, %if.end.i24.i1096 ]
  %924 = inttoptr i32 %retval.0.i25.i1097 to ptr
  %925 = ptrtoint ptr %924 to i32
  call void @__asan_load4_noabort(i32 %925)
  %926 = load volatile i32, ptr %924, align 4
  %927 = and i32 %926, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %927)
  %tobool370.not = icmp eq i32 %927, 0
  br i1 %tobool370.not, label %PageUnevictable.exit.cleanup388_crit_edge, label %PageUnevictable.exit.if.then378_crit_edge, !prof !557

PageUnevictable.exit.if.then378_crit_edge:        ; preds = %PageUnevictable.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then378

PageUnevictable.exit.cleanup388_crit_edge:        ; preds = %PageUnevictable.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup388

if.then378:                                       ; preds = %PageUnevictable.exit.if.then378_crit_edge, %PageLRU.exit.if.then378_crit_edge
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.160) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1941, 0\0A.popsection", ""() #13, !srcloc !620
  unreachable

cleanup388:                                       ; preds = %PageUnevictable.exit.cleanup388_crit_edge, %if.end.i.i1345, %free_it.cleanup388_crit_edge, %if.else290, %list_add.exit, %if.end.i.i1138, %if.else97.cleanup388_crit_edge
  %nr_reclaimed.2 = phi i32 [ %nr_reclaimed.12096, %list_add.exit ], [ %inc291, %if.else290 ], [ %nr_reclaimed.12096, %PageUnevictable.exit.cleanup388_crit_edge ], [ %nr_reclaimed.12096, %if.else97.cleanup388_crit_edge ], [ %nr_reclaimed.12096, %if.end.i.i1138 ], [ %add311, %free_it.cleanup388_crit_edge ], [ %add311, %if.end.i.i1345 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %writeback) #13
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %dirty) #13
  %928 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %928)
  %929 = load volatile ptr, ptr %page_list, align 4
  %cmp.i1101.not = icmp eq ptr %929, %page_list
  br i1 %cmp.i1101.not, label %cleanup388.while.end_crit_edge, label %cleanup388.while.body_crit_edge

cleanup388.while.body_crit_edge:                  ; preds = %cleanup388
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

cleanup388.while.end_crit_edge:                   ; preds = %cleanup388
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %cleanup388.while.end_crit_edge, %retry.while.end_crit_edge
  %nr_reclaimed.1.lcssa = phi i32 [ %nr_reclaimed.0, %retry.while.end_crit_edge ], [ %nr_reclaimed.2, %cleanup388.while.end_crit_edge ]
  %930 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %930)
  %931 = load i32, ptr %node_id, align 64
  %call.i1385 = call i32 @next_demotion_node(i32 noundef %931) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr_succeeded.i) #13
  %932 = ptrtoint ptr %nr_succeeded.i to i32
  call void @__asan_store4_noabort(i32 %932)
  store i32 -1, ptr %nr_succeeded.i, align 4, !annotation !559
  %933 = ptrtoint ptr %demote_pages to i32
  call void @__asan_load4_noabort(i32 %933)
  %934 = load volatile ptr, ptr %demote_pages, align 4
  %cmp.i.i1386 = icmp eq ptr %934, %demote_pages
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i1385)
  %cmp.i1387 = icmp eq i32 %call.i1385, -1
  %or.cond.i1388 = select i1 %cmp.i.i1386, i1 true, i1 %cmp.i1387
  br i1 %or.cond.i1388, label %while.end.demote_page_list.exit_crit_edge, label %if.end3.i

while.end.demote_page_list.exit_crit_edge:        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %demote_page_list.exit

if.end3.i:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  %call4.i = call i32 @migrate_pages(ptr noundef nonnull %demote_pages, ptr noundef nonnull @alloc_demote_page, ptr noundef null, i32 noundef %call.i1385, i32 noundef 0, i32 noundef 8, ptr noundef nonnull %nr_succeeded.i) #13
  %935 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i1389 = and i32 %935, -16384
  %936 = inttoptr i32 %and.i.i.i1389 to ptr
  %task.i.i1390 = getelementptr inbounds %struct.thread_info, ptr %936, i32 0, i32 2
  %937 = ptrtoint ptr %task.i.i1390 to i32
  call void @__asan_load4_noabort(i32 %937)
  %938 = load ptr, ptr %task.i.i1390, align 8
  %flags.i.i1391 = getelementptr inbounds %struct.task_struct, ptr %938, i32 0, i32 3
  %939 = ptrtoint ptr %flags.i.i1391 to i32
  call void @__asan_load4_noabort(i32 %939)
  %940 = load i32, ptr %flags.i.i1391, align 4
  %and.i.i1392 = and i32 %940, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1392)
  %tobool6.not.i = icmp eq i32 %and.i.i1392, 0
  %941 = ptrtoint ptr %nr_succeeded.i to i32
  call void @__asan_load4_noabort(i32 %941)
  %942 = load i32, ptr %nr_succeeded.i, align 4
  %cpu.i14.i = getelementptr inbounds %struct.thread_info, ptr %936, i32 0, i32 3
  %943 = ptrtoint ptr %cpu.i14.i to i32
  call void @__asan_load4_noabort(i32 %943)
  %944 = load i32, ptr %cpu.i14.i, align 4
  %arrayidx7.i15.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %944
  %945 = ptrtoint ptr %arrayidx7.i15.i to i32
  call void @__asan_load4_noabort(i32 %945)
  %946 = load i32, ptr %arrayidx7.i15.i, align 4
  %..i = select i1 %tobool6.not.i, i32 ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 28) to i32), i32 ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 27) to i32)
  %add.i16.i = add i32 %946, %..i
  %947 = inttoptr i32 %add.i16.i to ptr
  %948 = ptrtoint ptr %947 to i32
  call void @__asan_load4_noabort(i32 %948)
  %949 = load i32, ptr %947, align 4
  %add8.i17.i = add i32 %949, %942
  store i32 %add8.i17.i, ptr %947, align 4
  %950 = load i32, ptr %nr_succeeded.i, align 4
  br label %demote_page_list.exit

demote_page_list.exit:                            ; preds = %if.end3.i, %while.end.demote_page_list.exit_crit_edge
  %retval.0.i1393 = phi i32 [ %950, %if.end3.i ], [ 0, %while.end.demote_page_list.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr_succeeded.i) #13
  %add398 = add i32 %retval.0.i1393, %nr_reclaimed.1.lcssa
  %951 = ptrtoint ptr %demote_pages to i32
  call void @__asan_load4_noabort(i32 %951)
  %952 = load volatile ptr, ptr %demote_pages, align 4
  %cmp.i1395.not = icmp eq ptr %952, %demote_pages
  br i1 %cmp.i1395.not, label %if.end402, label %if.then401

if.then401:                                       ; preds = %demote_page_list.exit
  %953 = ptrtoint ptr %demote_pages to i32
  call void @__asan_load4_noabort(i32 %953)
  %954 = load volatile ptr, ptr %demote_pages, align 4
  %cmp.i.not.i1397 = icmp eq ptr %954, %demote_pages
  br i1 %cmp.i.not.i1397, label %if.then401.retry.backedge_crit_edge, label %if.then.i1399

if.then401.retry.backedge_crit_edge:              ; preds = %if.then401
  call void @__sanitizer_cov_trace_pc() #15
  br label %retry.backedge

retry.backedge:                                   ; preds = %if.then.i1399, %if.then401.retry.backedge_crit_edge
  br label %retry

if.then.i1399:                                    ; preds = %if.then401
  call void @__sanitizer_cov_trace_pc() #15
  %955 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %955)
  %956 = load ptr, ptr %page_list, align 4
  %957 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %957)
  %958 = load ptr, ptr %6, align 4
  %prev3.i.i1398 = getelementptr inbounds %struct.list_head, ptr %954, i32 0, i32 1
  %959 = ptrtoint ptr %prev3.i.i1398 to i32
  call void @__asan_store4_noabort(i32 %959)
  store ptr %page_list, ptr %prev3.i.i1398, align 4
  store ptr %954, ptr %page_list, align 4
  %960 = ptrtoint ptr %958 to i32
  call void @__asan_store4_noabort(i32 %960)
  store ptr %956, ptr %958, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %956, i32 0, i32 1
  %961 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %961)
  store ptr %958, ptr %prev6.i.i, align 4
  %962 = ptrtoint ptr %demote_pages to i32
  call void @__asan_store4_noabort(i32 %962)
  store volatile ptr %demote_pages, ptr %demote_pages, align 4
  store ptr %demote_pages, ptr %6, align 4
  br label %retry.backedge

if.end402:                                        ; preds = %demote_page_list.exit
  %nr_activate403 = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 6
  %963 = ptrtoint ptr %nr_activate403 to i32
  call void @__asan_load4_noabort(i32 %963)
  %964 = load i32, ptr %nr_activate403, align 4
  %arrayidx406 = getelementptr %struct.reclaim_stat, ptr %stat, i32 0, i32 6, i32 1
  %965 = ptrtoint ptr %arrayidx406 to i32
  call void @__asan_load4_noabort(i32 %965)
  %966 = load i32, ptr %arrayidx406, align 4
  %add407 = add i32 %966, %964
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_page_list, %mem_cgroup_uncharge_list.exit)) #13
          to label %if.end.i1401 [label %mem_cgroup_uncharge_list.exit], !srcloc !567

if.end.i1401:                                     ; preds = %if.end402
  call void @__sanitizer_cov_trace_pc() #15
  call void @__mem_cgroup_uncharge_list(ptr noundef nonnull %free_pages) #13
  br label %mem_cgroup_uncharge_list.exit

mem_cgroup_uncharge_list.exit:                    ; preds = %if.end.i1401, %if.end402
  call void @free_unref_page_list(ptr noundef nonnull %free_pages) #13
  %967 = ptrtoint ptr %ret_pages to i32
  call void @__asan_load4_noabort(i32 %967)
  %968 = load volatile ptr, ptr %ret_pages, align 4
  %cmp.i.not.i1402 = icmp eq ptr %968, %ret_pages
  br i1 %cmp.i.not.i1402, label %mem_cgroup_uncharge_list.exit.list_splice.exit_crit_edge, label %if.then.i1406

mem_cgroup_uncharge_list.exit.list_splice.exit_crit_edge: ; preds = %mem_cgroup_uncharge_list.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_splice.exit

if.then.i1406:                                    ; preds = %mem_cgroup_uncharge_list.exit
  call void @__sanitizer_cov_trace_pc() #15
  %969 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %969)
  %970 = load ptr, ptr %page_list, align 4
  %971 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %971)
  %972 = load ptr, ptr %0, align 4
  %prev3.i.i1404 = getelementptr inbounds %struct.list_head, ptr %968, i32 0, i32 1
  %973 = ptrtoint ptr %prev3.i.i1404 to i32
  call void @__asan_store4_noabort(i32 %973)
  store ptr %page_list, ptr %prev3.i.i1404, align 4
  store ptr %968, ptr %page_list, align 4
  %974 = ptrtoint ptr %972 to i32
  call void @__asan_store4_noabort(i32 %974)
  store ptr %970, ptr %972, align 4
  %prev6.i.i1405 = getelementptr inbounds %struct.list_head, ptr %970, i32 0, i32 1
  %975 = ptrtoint ptr %prev6.i.i1405 to i32
  call void @__asan_store4_noabort(i32 %975)
  store ptr %972, ptr %prev6.i.i1405, align 4
  br label %list_splice.exit

list_splice.exit:                                 ; preds = %if.then.i1406, %mem_cgroup_uncharge_list.exit.list_splice.exit_crit_edge
  %976 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %977 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i1408 = and i32 %977, -16384
  %978 = inttoptr i32 %and.i.i1408 to ptr
  %cpu.i1409 = getelementptr inbounds %struct.thread_info, ptr %978, i32 0, i32 3
  %979 = ptrtoint ptr %cpu.i1409 to i32
  call void @__asan_load4_noabort(i32 %979)
  %980 = load i32, ptr %cpu.i1409, align 4
  %arrayidx13.i1410 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %980
  %981 = ptrtoint ptr %arrayidx13.i1410 to i32
  call void @__asan_load4_noabort(i32 %981)
  %982 = load i32, ptr %arrayidx13.i1410, align 4
  %add.i1411 = add i32 %982, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 17) to i32)
  %983 = inttoptr i32 %add.i1411 to ptr
  %984 = ptrtoint ptr %983 to i32
  call void @__asan_load4_noabort(i32 %984)
  %985 = load i32, ptr %983, align 4
  %add14.i1412 = add i32 %add407, %985
  store i32 %add14.i1412, ptr %983, align 4
  %986 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i1413 = and i32 %986, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1413)
  %tobool.not.i1414 = icmp eq i32 %and.i.i.i1413, 0
  br i1 %tobool.not.i1414, label %if.then.i1415, label %list_splice.exit.count_vm_events.exit_crit_edge, !prof !558

list_splice.exit.count_vm_events.exit_crit_edge:  ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %count_vm_events.exit

if.then.i1415:                                    ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @warn_bogus_irq_restore() #13
  br label %count_vm_events.exit

count_vm_events.exit:                             ; preds = %if.then.i1415, %list_splice.exit.count_vm_events.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %976) #13, !srcloc !615
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %demote_pages) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %free_pages) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ret_pages) #13
  ret i32 %add398
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mod_node_page_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @__isolate_lru_page_prepare(ptr noundef %page, i32 noundef %mode) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %2, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i to ptr
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %cmp.i.not.i = icmp eq i32 %6, -1
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %0, align 4
  %and.i13.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !557

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i = add i32 %8, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %9 = ptrtoint ptr %page to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %9, %if.end.i17.i ]
  %10 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %10, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #13, !srcloc !619
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !557

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i = add i32 %8, -1
  br label %PageLRU.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %11 = ptrtoint ptr %page to i32
  br label %PageLRU.exit

PageLRU.exit:                                     ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %11, %if.end.i24.i ]
  %12 = inttoptr i32 %retval.0.i25.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %15 = and i32 %14, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not = icmp eq i32 %15, 0
  br i1 %tobool.not, label %PageLRU.exit.return_crit_edge, label %if.end

PageLRU.exit.return_crit_edge:                    ; preds = %PageLRU.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end:                                           ; preds = %PageLRU.exit
  %16 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %0, align 4
  %and.i.i45 = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i45)
  %tobool.not.i.i46 = icmp eq i32 %and.i.i45, 0
  br i1 %tobool.not.i.i46, label %if.end.i.i49, label %if.then.i.i48, !prof !557

if.then.i.i48:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i47 = add i32 %17, -1
  br label %_compound_head.exit.i54

if.end.i.i49:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %18 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i54

_compound_head.exit.i54:                          ; preds = %if.end.i.i49, %if.then.i.i48
  %retval.0.i.i50 = phi i32 [ %sub.i.i47, %if.then.i.i48 ], [ %18, %if.end.i.i49 ]
  %19 = inttoptr i32 %retval.0.i.i50 to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %cmp.i.not.i51 = icmp eq i32 %21, -1
  %22 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %0, align 4
  %and.i13.i52 = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i52)
  %tobool.not.i14.i53 = icmp eq i32 %and.i13.i52, 0
  br i1 %cmp.i.not.i51, label %if.then.i55, label %do.end8.i61, !prof !558

if.then.i55:                                      ; preds = %_compound_head.exit.i54
  br i1 %tobool.not.i14.i53, label %if.end.i17.i58, label %if.then.i16.i57, !prof !557

if.then.i16.i57:                                  ; preds = %if.then.i55
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i56 = add i32 %23, -1
  br label %_compound_head.exit19.i60

if.end.i17.i58:                                   ; preds = %if.then.i55
  call void @__sanitizer_cov_trace_pc() #15
  %24 = ptrtoint ptr %page to i32
  br label %_compound_head.exit19.i60

_compound_head.exit19.i60:                        ; preds = %if.end.i17.i58, %if.then.i16.i57
  %retval.0.i18.i59 = phi i32 [ %sub.i15.i56, %if.then.i16.i57 ], [ %24, %if.end.i17.i58 ]
  %25 = inttoptr i32 %retval.0.i18.i59 to ptr
  tail call void @dump_page(ptr noundef %25, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 499, 0\0A.popsection", ""() #13, !srcloc !594
  unreachable

do.end8.i61:                                      ; preds = %_compound_head.exit.i54
  br i1 %tobool.not.i14.i53, label %if.end.i24.i64, label %if.then.i23.i63, !prof !557

if.then.i23.i63:                                  ; preds = %do.end8.i61
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i62 = add i32 %23, -1
  br label %PageUnevictable.exit

if.end.i24.i64:                                   ; preds = %do.end8.i61
  call void @__sanitizer_cov_trace_pc() #15
  %26 = ptrtoint ptr %page to i32
  br label %PageUnevictable.exit

PageUnevictable.exit:                             ; preds = %if.end.i24.i64, %if.then.i23.i63
  %retval.0.i25.i65 = phi i32 [ %sub.i22.i62, %if.then.i23.i63 ], [ %26, %if.end.i24.i64 ]
  %27 = inttoptr i32 %retval.0.i25.i65 to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  %30 = and i32 %29, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool2.not = icmp ne i32 %30, 0
  %and = and i32 %mode, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  %or.cond = and i1 %tobool3.not, %tobool2.not
  br i1 %or.cond, label %PageUnevictable.exit.return_crit_edge, label %if.end5

PageUnevictable.exit.return_crit_edge:            ; preds = %PageUnevictable.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end5:                                          ; preds = %PageUnevictable.exit
  %and6 = and i32 %mode, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %if.end5.if.end28_crit_edge, label %if.then8

if.end5.if.end28_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.then8:                                         ; preds = %if.end5
  %31 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %0, align 4
  %and.i.i68 = and i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i68)
  %tobool.not.i.i69 = icmp eq i32 %and.i.i68, 0
  br i1 %tobool.not.i.i69, label %if.end.i.i72, label %if.then.i.i71, !prof !557

if.then.i.i71:                                    ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i70 = add i32 %32, -1
  br label %_compound_head.exit.i75

if.end.i.i72:                                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #15
  %33 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i75

_compound_head.exit.i75:                          ; preds = %if.end.i.i72, %if.then.i.i71
  %retval.0.i.i73 = phi i32 [ %sub.i.i70, %if.then.i.i71 ], [ %33, %if.end.i.i72 ]
  %34 = inttoptr i32 %retval.0.i.i73 to ptr
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %36)
  %cmp.i.not.i74 = icmp eq i32 %36, -1
  %37 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %0, align 4
  %and.i16.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i74, label %if.then.i76, label %do.end10.i, !prof !558

if.then.i76:                                      ; preds = %_compound_head.exit.i75
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !557

if.then.i19.i:                                    ; preds = %if.then.i76
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i = add i32 %38, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i76
  call void @__sanitizer_cov_trace_pc() #15
  %39 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %39, %if.end.i20.i ]
  %40 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %40, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #13, !srcloc !601
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i75
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !557

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i = add i32 %38, -1
  br label %PageWriteback.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #15
  %41 = ptrtoint ptr %page to i32
  br label %PageWriteback.exit

PageWriteback.exit:                               ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %41, %if.end.i27.i ]
  %42 = inttoptr i32 %retval.0.i28.i to ptr
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %42, align 4
  %45 = and i32 %44, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool10.not = icmp eq i32 %45, 0
  br i1 %tobool10.not, label %if.end12, label %PageWriteback.exit.return_crit_edge

PageWriteback.exit.return_crit_edge:              ; preds = %PageWriteback.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end12:                                         ; preds = %PageWriteback.exit
  %46 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %0, align 4
  %and.i.i79 = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i79)
  %tobool.not.i.i80 = icmp eq i32 %and.i.i79, 0
  br i1 %tobool.not.i.i80, label %if.end.i.i83, label %if.then.i.i82, !prof !557

if.then.i.i82:                                    ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i81 = add i32 %47, -1
  br label %_compound_head.exit.i88

if.end.i.i83:                                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  %48 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i88

_compound_head.exit.i88:                          ; preds = %if.end.i.i83, %if.then.i.i82
  %retval.0.i.i84 = phi i32 [ %sub.i.i81, %if.then.i.i82 ], [ %48, %if.end.i.i83 ]
  %49 = inttoptr i32 %retval.0.i.i84 to ptr
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %49, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %51)
  %cmp.i.not.i85 = icmp eq i32 %51, -1
  %52 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %0, align 4
  %and.i13.i86 = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i86)
  %tobool.not.i14.i87 = icmp eq i32 %and.i13.i86, 0
  br i1 %cmp.i.not.i85, label %if.then.i89, label %do.end8.i95, !prof !558

if.then.i89:                                      ; preds = %_compound_head.exit.i88
  br i1 %tobool.not.i14.i87, label %if.end.i17.i92, label %if.then.i16.i91, !prof !557

if.then.i16.i91:                                  ; preds = %if.then.i89
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i90 = add i32 %53, -1
  br label %_compound_head.exit19.i94

if.end.i17.i92:                                   ; preds = %if.then.i89
  call void @__sanitizer_cov_trace_pc() #15
  %54 = ptrtoint ptr %page to i32
  br label %_compound_head.exit19.i94

_compound_head.exit19.i94:                        ; preds = %if.end.i17.i92, %if.then.i16.i91
  %retval.0.i18.i93 = phi i32 [ %sub.i15.i90, %if.then.i16.i91 ], [ %54, %if.end.i17.i92 ]
  %55 = inttoptr i32 %retval.0.i18.i93 to ptr
  tail call void @dump_page(ptr noundef %55, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #13, !srcloc !588
  unreachable

do.end8.i95:                                      ; preds = %_compound_head.exit.i88
  br i1 %tobool.not.i14.i87, label %if.end.i24.i98, label %if.then.i23.i97, !prof !557

if.then.i23.i97:                                  ; preds = %do.end8.i95
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i96 = add i32 %53, -1
  br label %PageDirty.exit

if.end.i24.i98:                                   ; preds = %do.end8.i95
  call void @__sanitizer_cov_trace_pc() #15
  %56 = ptrtoint ptr %page to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i98, %if.then.i23.i97
  %retval.0.i25.i99 = phi i32 [ %sub.i22.i96, %if.then.i23.i97 ], [ %56, %if.end.i24.i98 ]
  %57 = inttoptr i32 %retval.0.i25.i99 to ptr
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %57, align 4
  %60 = and i32 %59, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool14.not = icmp eq i32 %60, 0
  br i1 %tobool14.not, label %PageDirty.exit.if.end28_crit_edge, label %if.then15

PageDirty.exit.if.end28_crit_edge:                ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.then15:                                        ; preds = %PageDirty.exit
  %61 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %0, align 4
  %and.i.i102 = and i32 %62, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i102)
  %tobool.not.i.i103 = icmp eq i32 %and.i.i102, 0
  br i1 %tobool.not.i.i103, label %if.end.i.i106, label %if.then.i.i105, !prof !557

if.then.i.i105:                                   ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i104 = add i32 %62, -1
  br label %_compound_head.exit.i108

if.end.i.i106:                                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #15
  %63 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i108

_compound_head.exit.i108:                         ; preds = %if.end.i.i106, %if.then.i.i105
  %retval.0.i.i107 = phi i32 [ %sub.i.i104, %if.then.i.i105 ], [ %63, %if.end.i.i106 ]
  %64 = inttoptr i32 %retval.0.i.i107 to ptr
  %65 = getelementptr inbounds %struct.page, ptr %64, i32 0, i32 1
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %65, align 4
  %and.i.i.i.i = and i32 %67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !557

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i108
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %64, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i108
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %64, i32 noundef 4) #13
  %68 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %64, align 4
  %and.i.i4.i.i = and i32 %69, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %trylock_page.exit, label %folio_flags.exit.i.i.return_crit_edge

folio_flags.exit.i.i.return_crit_edge:            ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

trylock_page.exit:                                ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %64, i32 1, i32 3, i32 1) #13
  %70 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %64, ptr %64, i32 1, ptr elementtype(i32) %64) #13, !srcloc !596
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %70, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !597
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool17.not.not = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool17.not.not, label %if.end19, label %trylock_page.exit.return_crit_edge

trylock_page.exit.return_crit_edge:               ; preds = %trylock_page.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end19:                                         ; preds = %trylock_page.exit
  %call20 = tail call ptr @page_mapping(ptr noundef %page) #13
  %tobool21.not = icmp eq ptr %call20, null
  br i1 %tobool21.not, label %lor.end.thread, label %lor.end

lor.end.thread:                                   ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @unlock_page(ptr noundef %page) #13
  br label %if.end28

lor.end:                                          ; preds = %if.end19
  %a_ops = getelementptr inbounds %struct.address_space, ptr %call20, i32 0, i32 9
  %71 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %a_ops, align 4
  %migratepage = getelementptr inbounds %struct.address_space_operations, ptr %72, i32 0, i32 13
  %73 = ptrtoint ptr %migratepage to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %migratepage, align 4
  %tobool22.not = icmp eq ptr %74, null
  tail call void @unlock_page(ptr noundef %page) #13
  br i1 %tobool22.not, label %lor.end.return_crit_edge, label %lor.end.if.end28_crit_edge

lor.end.if.end28_crit_edge:                       ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

lor.end.return_crit_edge:                         ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end28:                                         ; preds = %lor.end.if.end28_crit_edge, %lor.end.thread, %PageDirty.exit.if.end28_crit_edge, %if.end5.if.end28_crit_edge
  %and29 = and i32 %mode, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool30.not = icmp eq i32 %and29, 0
  br i1 %tobool30.not, label %if.end28.if.end34_crit_edge, label %land.lhs.true31

if.end28.if.end34_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end34

land.lhs.true31:                                  ; preds = %if.end28
  %call32 = tail call zeroext i1 @page_mapped(ptr noundef %page) #13
  br i1 %call32, label %land.lhs.true31.return_crit_edge, label %land.lhs.true31.if.end34_crit_edge

land.lhs.true31.if.end34_crit_edge:               ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end34

land.lhs.true31.return_crit_edge:                 ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end34:                                         ; preds = %land.lhs.true31.if.end34_crit_edge, %if.end28.if.end34_crit_edge
  br label %return

return:                                           ; preds = %if.end34, %land.lhs.true31.return_crit_edge, %lor.end.return_crit_edge, %trylock_page.exit.return_crit_edge, %folio_flags.exit.i.i.return_crit_edge, %PageWriteback.exit.return_crit_edge, %PageUnevictable.exit.return_crit_edge, %PageLRU.exit.return_crit_edge
  %retval.1 = phi i1 [ true, %if.end34 ], [ false, %PageLRU.exit.return_crit_edge ], [ false, %PageUnevictable.exit.return_crit_edge ], [ false, %PageWriteback.exit.return_crit_edge ], [ false, %land.lhs.true31.return_crit_edge ], [ false, %trylock_page.exit.return_crit_edge ], [ false, %lor.end.return_crit_edge ], [ false, %folio_flags.exit.i.i.return_crit_edge ]
  ret i1 %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @trylock_page(ptr noundef %page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !557

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %3, %if.end.i ]
  %4 = inttoptr i32 %retval.0.i to ptr
  %5 = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %and.i.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_flags.exit.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %4, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_flags.exit.i:                               ; preds = %_compound_head.exit
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %4, i32 noundef 4) #13
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %4, align 4
  %and.i.i4.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %folio_flags.exit.i.folio_trylock.exit_crit_edge

folio_flags.exit.i.folio_trylock.exit_crit_edge:  ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %folio_trylock.exit

if.end.i.i.i:                                     ; preds = %folio_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @llvm.prefetch.p0(ptr %4, i32 1, i32 3, i32 1) #13
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %4, ptr %4, i32 1, ptr elementtype(i32) %4) #13, !srcloc !596
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !597
  %and1.i.i.i = and i32 %asmresult.i.i.i.i.i.i, 1
  %11 = xor i32 %and1.i.i.i, 1
  br label %folio_trylock.exit

folio_trylock.exit:                               ; preds = %if.end.i.i.i, %folio_flags.exit.i.folio_trylock.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %11, %if.end.i.i.i ], [ 0, %folio_flags.exit.i.folio_trylock.exit_crit_edge ]
  ret i32 %retval.0.i.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_mapping(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlock_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @page_mapped(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @isolate_lru_page(ptr noundef %page) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i80 = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i80)
  %tobool.not.i = icmp eq i32 %and.i80, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i81, !prof !557

if.then.i81:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i81
  %retval.0.i = phi i32 [ %sub.i, %if.then.i81 ], [ %3, %if.end.i ]
  %4 = inttoptr i32 %retval.0.i to ptr
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %0, align 4
  %and.i.i82 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i82)
  %tobool.not.i.i83 = icmp eq i32 %and.i.i82, 0
  br i1 %tobool.not.i.i83, label %if.end.i.i86, label %if.then.i.i85, !prof !557

if.then.i.i85:                                    ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i84 = add i32 %6, -1
  br label %page_count.exit

if.end.i.i86:                                     ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #15
  %7 = ptrtoint ptr %page to i32
  br label %page_count.exit

page_count.exit:                                  ; preds = %if.end.i.i86, %if.then.i.i85
  %retval.0.i.i87 = phi i32 [ %sub.i.i84, %if.then.i.i85 ], [ %7, %if.end.i.i86 ]
  %8 = inttoptr i32 %retval.0.i.i87 to ptr
  %_refcount.i.i.i = getelementptr inbounds %struct.page, ptr %8, i32 0, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i, i32 noundef 4) #13
  %9 = ptrtoint ptr %_refcount.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %_refcount.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  br i1 %tobool.not, label %if.then, label %do.end10, !prof !558

if.then:                                          ; preds = %page_count.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.23) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2244, 0\0A.popsection", ""() #13, !srcloc !621
  unreachable

do.end10:                                         ; preds = %page_count.exit
  %11 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool12.not = icmp eq i32 %and.i, 0
  br i1 %tobool12.not, label %do.end10.if.end56_crit_edge, label %land.rhs

do.end10.if.end56_crit_edge:                      ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end56

land.rhs:                                         ; preds = %do.end10
  %call18 = tail call i32 @___ratelimit(ptr noundef nonnull @isolate_lru_page._rs, ptr noundef nonnull @__func__.isolate_lru_page) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %land.rhs.if.end56_crit_edge, label %do.end43.critedge, !prof !557

land.rhs.if.end56_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end56

do.end43.critedge:                                ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 2245, i32 noundef 9, ptr noundef nonnull @.str.25) #13
  br label %if.end56

if.end56:                                         ; preds = %do.end43.critedge, %land.rhs.if.end56_crit_edge, %do.end10.if.end56_crit_edge
  %13 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %14, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #15
  %15 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %15, %if.end.i.i ]
  %16 = inttoptr i32 %retval.0.i.i to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %cmp.i.not.i = icmp eq i32 %18, -1
  %19 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %0, align 4
  %and.i13.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !557

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i = add i32 %20, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %21 = ptrtoint ptr %page to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %21, %if.end.i17.i ]
  %22 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %22, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 423, 0\0A.popsection", ""() #13, !srcloc !622
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !557

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i = add i32 %20, -1
  br label %TestClearPageLRU.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %23 = ptrtoint ptr %page to i32
  br label %TestClearPageLRU.exit

TestClearPageLRU.exit:                            ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %23, %if.end.i24.i ]
  %24 = inttoptr i32 %retval.0.i25.i to ptr
  %call10.i = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %24) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool59.not = icmp eq i32 %call10.i, 0
  br i1 %tobool59.not, label %TestClearPageLRU.exit.if.end62_crit_edge, label %if.then60

TestClearPageLRU.exit.if.end62_crit_edge:         ; preds = %TestClearPageLRU.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end62

if.then60:                                        ; preds = %TestClearPageLRU.exit
  %25 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %0, align 4
  %and.i.i89 = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i89)
  %tobool.not.i.i90 = icmp eq i32 %and.i.i89, 0
  br i1 %tobool.not.i.i90, label %if.end.i.i93, label %if.then.i.i92, !prof !557

if.then.i.i92:                                    ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i91 = add i32 %26, -1
  br label %_compound_head.exit.i95

if.end.i.i93:                                     ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #15
  %27 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i95

_compound_head.exit.i95:                          ; preds = %if.end.i.i93, %if.then.i.i92
  %retval.0.i.i94 = phi i32 [ %sub.i.i91, %if.then.i.i92 ], [ %27, %if.end.i.i93 ]
  %28 = inttoptr i32 %retval.0.i.i94 to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %28, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #13
  %29 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %30, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !558

if.then.i1.i:                                     ; preds = %_compound_head.exit.i95
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %28, ptr noundef nonnull @.str.174) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #13, !srcloc !623
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i95
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #13
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #13
  %31 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #13, !srcloc !565
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@isolate_lru_page, %if.then.i.i.i.i)) #13
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !567

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__page_ref_mod(ptr noundef %28, i32 noundef 1) #13
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %call61 = tail call ptr @folio_lruvec_lock_irq(ptr noundef %4) #13
  %32 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %0, align 4
  %and.i.i73 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i73)
  %tobool.not.i.i74 = icmp eq i32 %and.i.i73, 0
  br i1 %tobool.not.i.i74, label %if.end.i.i76, label %if.then.i.i75, !prof !557

if.then.i.i75:                                    ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i1.i = add i32 %33, -1
  br label %_compound_head.exit.i78

if.end.i.i76:                                     ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #15
  %34 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i78

_compound_head.exit.i78:                          ; preds = %if.end.i.i76, %if.then.i.i75
  %retval.0.i.i77 = phi i32 [ %sub.i1.i, %if.then.i.i75 ], [ %34, %if.end.i.i76 ]
  %35 = inttoptr i32 %retval.0.i.i77 to ptr
  %lru.i.i = getelementptr inbounds %struct.anon.67, ptr %35, i32 0, i32 1
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %lru.i.i) #13
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %_compound_head.exit.i78.list_del.exit.i.i_crit_edge

_compound_head.exit.i78.list_del.exit.i.i_crit_edge: ; preds = %_compound_head.exit.i78
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_del.exit.i.i

if.end.i.i.i.i:                                   ; preds = %_compound_head.exit.i78
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i.i.i = getelementptr inbounds %struct.anon.67, ptr %35, i32 0, i32 1, i32 1
  %36 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prev.i.i.i.i, align 4
  %38 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %lru.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %37, ptr %prev1.i.i.i.i.i, align 4
  %41 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %39, ptr %37, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i.i.i, %_compound_head.exit.i78.list_del.exit.i.i_crit_edge
  %42 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr inttoptr (i32 256 to ptr), ptr %lru.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.anon.67, ptr %35, i32 0, i32 1, i32 1
  %43 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  %44 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i.i.i.i = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_test_active.exit.i.i.i, label %if.then.i.i.i.i.i, !prof !557

if.then.i.i.i.i.i:                                ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %35, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_active.exit.i.i.i:                     ; preds = %list_del.exit.i.i
  %45 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %35, align 4
  %47 = and i32 %46, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.i.not.i.i.i = icmp eq i32 %47, 0
  br i1 %tobool.i.not.i.i.i, label %folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge, label %land.rhs.i.i.i

folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge: ; preds = %folio_test_active.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end8.i.i.i

land.rhs.i.i.i:                                   ; preds = %folio_test_active.exit.i.i.i
  %48 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i23.i.i.i = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i23.i.i.i)
  %tobool.not.i.i24.i.i.i = icmp eq i32 %and.i.i.i23.i.i.i, 0
  br i1 %tobool.not.i.i24.i.i.i, label %folio_test_unevictable.exit.i.i.i, label %if.then.i.i25.i.i.i, !prof !557

if.then.i.i25.i.i.i:                              ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %35, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_unevictable.exit.i.i.i:                ; preds = %land.rhs.i.i.i
  %50 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %35, align 4
  %52 = and i32 %51, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.i26.not.i.i.i = icmp eq i32 %52, 0
  br i1 %tobool.i26.not.i.i.i, label %folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge, label %if.then.i.i.i, !prof !557

folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge: ; preds = %folio_test_unevictable.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end8.i.i.i

if.then.i.i.i:                                    ; preds = %folio_test_unevictable.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %35, ptr noundef nonnull @.str.175) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm_inline.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 83, 0\0A.popsection", ""() #13, !srcloc !624
  unreachable

do.end8.i.i.i:                                    ; preds = %folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge, %folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge
  %53 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i27.i.i.i = and i32 %54, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i27.i.i.i)
  %tobool.not.i.i28.i.i.i = icmp eq i32 %and.i.i.i27.i.i.i, 0
  br i1 %tobool.not.i.i28.i.i.i, label %folio_test_unevictable.exit31.i.i.i, label %if.then.i.i29.i.i.i, !prof !557

if.then.i.i29.i.i.i:                              ; preds = %do.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %35, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_unevictable.exit31.i.i.i:              ; preds = %do.end8.i.i.i
  %55 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %35, align 4
  %57 = and i32 %56, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool.i30.not.i.i.i = icmp eq i32 %57, 0
  br i1 %tobool.i30.not.i.i.i, label %if.end11.i.i.i, label %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge

folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge: ; preds = %folio_test_unevictable.exit31.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %folio_lru_list.exit.i.i

if.end11.i.i.i:                                   ; preds = %folio_test_unevictable.exit31.i.i.i
  %58 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i.i.i.i.i = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %folio_is_file_lru.exit.i.i.i, label %if.then.i.i.i.i.i.i, !prof !557

if.then.i.i.i.i.i.i:                              ; preds = %if.end11.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %35, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_is_file_lru.exit.i.i.i:                     ; preds = %if.end11.i.i.i
  %60 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %35, align 4
  %62 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i32.i.i.i = and i32 %63, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i32.i.i.i)
  %tobool.not.i.i33.i.i.i = icmp eq i32 %and.i.i.i32.i.i.i, 0
  br i1 %tobool.not.i.i33.i.i.i, label %folio_test_active.exit36.i.i.i, label %if.then.i.i34.i.i.i, !prof !557

if.then.i.i34.i.i.i:                              ; preds = %folio_is_file_lru.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %35, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_active.exit36.i.i.i:                   ; preds = %folio_is_file_lru.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %64 = lshr i32 %61, 18
  %65 = and i32 %64, 2
  %66 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %35, align 4
  %68 = lshr i32 %67, 5
  %69 = and i32 %68, 1
  %70 = or i32 %69, %65
  %71 = xor i32 %70, 2
  br label %folio_lru_list.exit.i.i

folio_lru_list.exit.i.i:                          ; preds = %folio_test_active.exit36.i.i.i, %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %71, %folio_test_active.exit36.i.i.i ], [ 4, %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge ]
  %72 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %73)
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %73, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i6.i.i, label %PageHead.exit.i.i.i.i, !prof !558

if.then.i.i.i6.i.i:                               ; preds = %folio_lru_list.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %35, ptr noundef nonnull @.str.153) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %folio_lru_list.exit.i.i
  %74 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %35, align 4
  %76 = and i32 %75, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %tobool.not.i.i.i.i = icmp eq i32 %76, 0
  br i1 %tobool.not.i.i.i.i, label %PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge, label %if.end.i.i7.i.i

PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge: ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %del_page_from_lru_list.exit

if.end.i.i7.i.i:                                  ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %compound_nr.i.i.i.i = getelementptr %struct.page, ptr %35, i32 1, i32 1, i32 0, i32 2
  %77 = ptrtoint ptr %compound_nr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %compound_nr.i.i.i.i, align 4
  br label %del_page_from_lru_list.exit

del_page_from_lru_list.exit:                      ; preds = %if.end.i.i7.i.i, %PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge
  %retval.0.i.i.i.i = phi i32 [ %78, %if.end.i.i7.i.i ], [ 1, %PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge ]
  %shr.i.i.i.i = lshr i32 %56, 30
  %sub.i.i79 = sub i32 0, %retval.0.i.i.i.i
  %pgdat.i.i.i.i = getelementptr inbounds %struct.lruvec, ptr %call61, i32 0, i32 7
  %79 = ptrtoint ptr %pgdat.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %pgdat.i.i.i.i, align 4
  tail call void @__mod_lruvec_state(ptr noundef %call61, i32 noundef %retval.0.i.i.i, i32 noundef %sub.i.i79) #13
  %arrayidx.i.i.i = getelementptr [4 x %struct.zone], ptr %80, i32 0, i32 %shr.i.i.i.i
  %add1.i.i.i = add nsw i32 %retval.0.i.i.i, 1
  tail call void @__mod_zone_page_state(ptr noundef %arrayidx.i.i.i, i32 noundef %add1.i.i.i, i32 noundef %sub.i.i79) #13
  tail call void @mem_cgroup_update_lru_size(ptr noundef %call61, i32 noundef %retval.0.i.i.i, i32 noundef %shr.i.i.i.i, i32 noundef %sub.i.i79) #13
  %lru_lock.i = getelementptr inbounds %struct.lruvec, ptr %call61, i32 0, i32 1
  tail call void @_raw_spin_unlock_irq(ptr noundef %lru_lock.i) #13
  br label %if.end62

if.end62:                                         ; preds = %del_page_from_lru_list.exit, %TestClearPageLRU.exit.if.end62_crit_edge
  %ret.0 = phi i32 [ 0, %del_page_from_lru_list.exit ], [ -16, %TestClearPageLRU.exit.if.end62_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @folio_lruvec_lock_irq(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @reclaim_pages(ptr noundef %page_list) local_unnamed_addr #0 align 64 {
entry:
  %node_page_list = alloca %struct.list_head, align 4
  %dummy_stat = alloca %struct.reclaim_stat, align 4
  %sc = alloca %struct.scan_control, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %node_page_list) #13
  %0 = getelementptr inbounds %struct.list_head, ptr %node_page_list, i32 0, i32 1
  %1 = ptrtoint ptr %node_page_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %node_page_list, ptr %node_page_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %node_page_list, ptr %0, align 4
  call void @llvm.lifetime.start.p0(i64 44, ptr nonnull %dummy_stat) #13
  %3 = call ptr @memset(ptr %dummy_stat, i32 255, i32 44)
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %sc) #13
  %4 = call ptr @memset(ptr %sc, i32 0, i32 72)
  %5 = getelementptr inbounds { i32, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, %struct.anon.126, %struct.reclaim_state }, ptr %sc, i32 0, i32 5
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 14, ptr %5, align 4
  %7 = getelementptr inbounds { i32, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, %struct.anon.126, %struct.reclaim_state }, ptr %sc, i32 0, i32 6
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 4, ptr %7, align 1
  %9 = getelementptr inbounds { i32, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, %struct.anon.126, %struct.reclaim_state }, ptr %sc, i32 0, i32 11
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 3264, ptr %9, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i52 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i52 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags1.i, align 4
  %or.i = or i32 %16, 2048
  store i32 %or.i, ptr %flags1.i, align 4
  %17 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %page_list, align 4
  %cmp.i.not78 = icmp eq ptr %18, %page_list
  br i1 %cmp.i.not78, label %entry.while.end20_crit_edge, label %while.body.lr.ph

entry.while.end20_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end20

while.body.lr.ph:                                 ; preds = %entry
  %prev2 = getelementptr inbounds %struct.list_head, ptr %page_list, i32 0, i32 1
  br label %while.body

while.body:                                       ; preds = %list_move.exit.while.body_crit_edge, %while.body.lr.ph
  %cmp79 = phi i1 [ true, %while.body.lr.ph ], [ false, %list_move.exit.while.body_crit_edge ]
  %19 = ptrtoint ptr %prev2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev2, align 4
  %add.ptr = getelementptr i8, ptr %20, i32 -4
  br i1 %cmp79, label %if.then, label %while.body.if.end_crit_edge

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %while.body
  %21 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %22)
  %cmp.i.not.i53 = icmp eq i32 %22, -1
  br i1 %cmp.i.not.i53, label %if.then.i54, label %page_to_nid.exit, !prof !558

if.then.i54:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.176) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #13, !srcloc !578
  unreachable

page_to_nid.exit:                                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %23 = ptrtoint ptr %node_page_list to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %node_page_list, ptr %node_page_list, align 4
  %24 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %node_page_list, ptr %0, align 4
  br label %if.end

if.end:                                           ; preds = %page_to_nid.exit, %while.body.if.end_crit_edge
  %25 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %26)
  %cmp.i.not.i56 = icmp eq i32 %26, -1
  br i1 %cmp.i.not.i56, label %if.then.i57, label %page_to_nid.exit59, !prof !558

if.then.i57:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.176) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #13, !srcloc !578
  unreachable

page_to_nid.exit59:                               ; preds = %if.end
  %27 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %20, align 4
  %and.i.i = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %page_to_nid.exit59
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %28, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %page_to_nid.exit59
  call void @__sanitizer_cov_trace_pc() #15
  %29 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %29, %if.end.i.i ]
  %30 = inttoptr i32 %retval.0.i.i to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %32)
  %cmp.i.not.i = icmp eq i32 %32, -1
  %33 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %20, align 4
  %and.i12.i = and i32 %34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i)
  %tobool.not.i13.i = icmp eq i32 %and.i12.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i13.i, label %if.end.i16.i, label %if.then.i15.i, !prof !557

if.then.i15.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i = add i32 %34, -1
  br label %_compound_head.exit18.i

if.end.i16.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %35 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit18.i

_compound_head.exit18.i:                          ; preds = %if.end.i16.i, %if.then.i15.i
  %retval.0.i17.i = phi i32 [ %sub.i14.i, %if.then.i15.i ], [ %35, %if.end.i16.i ]
  %36 = inttoptr i32 %retval.0.i17.i to ptr
  call void @dump_page(ptr noundef %36, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 424, 0\0A.popsection", ""() #13, !srcloc !595
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i13.i, label %if.end.i23.i, label %if.then.i22.i, !prof !557

if.then.i22.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i = add i32 %34, -1
  br label %ClearPageActive.exit

if.end.i23.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %37 = ptrtoint ptr %add.ptr to i32
  br label %ClearPageActive.exit

ClearPageActive.exit:                             ; preds = %if.end.i23.i, %if.then.i22.i
  %retval.0.i24.i = phi i32 [ %sub.i21.i, %if.then.i22.i ], [ %37, %if.end.i23.i ]
  %38 = inttoptr i32 %retval.0.i24.i to ptr
  call void @_clear_bit(i32 noundef 5, ptr noundef %38) #13
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %20) #13
  br i1 %call.i.i, label %if.end.i.i60, label %ClearPageActive.exit.__list_del_entry.exit.i_crit_edge

ClearPageActive.exit.__list_del_entry.exit.i_crit_edge: ; preds = %ClearPageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %__list_del_entry.exit.i

if.end.i.i60:                                     ; preds = %ClearPageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  %39 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %prev.i.i, align 4
  %41 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %20, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %40, ptr %prev1.i.i.i, align 4
  %44 = ptrtoint ptr %40 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr %42, ptr %40, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i60, %ClearPageActive.exit.__list_del_entry.exit.i_crit_edge
  %45 = ptrtoint ptr %node_page_list to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %node_page_list, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %20, ptr noundef nonnull %node_page_list, ptr noundef %46) #13
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move.exit_crit_edge

__list_del_entry.exit.i.list_move.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_move.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %20, ptr %prev1.i.i2.i, align 4
  %48 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %46, ptr %20, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  %49 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %node_page_list, ptr %prev3.i.i.i, align 4
  %50 = ptrtoint ptr %node_page_list to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %20, ptr %node_page_list, align 4
  br label %list_move.exit

list_move.exit:                                   ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move.exit_crit_edge
  %51 = ptrtoint ptr %page_list to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %page_list, align 4
  %cmp.i.not = icmp eq ptr %52, %page_list
  br i1 %cmp.i.not, label %list_move.exit.while.end20_crit_edge, label %list_move.exit.while.body_crit_edge

list_move.exit.while.body_crit_edge:              ; preds = %list_move.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

list_move.exit.while.end20_crit_edge:             ; preds = %list_move.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end20

while.end20:                                      ; preds = %list_move.exit.while.end20_crit_edge, %entry.while.end20_crit_edge
  %53 = ptrtoint ptr %node_page_list to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile ptr, ptr %node_page_list, align 4
  %cmp.i61.not = icmp eq ptr %54, %node_page_list
  br i1 %cmp.i61.not, label %while.end20.if.end38_crit_edge, label %if.then23

while.end20.if.end38_crit_edge:                   ; preds = %while.end20
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end38

if.then23:                                        ; preds = %while.end20
  %call25 = call fastcc i32 @shrink_page_list(ptr noundef nonnull %node_page_list, ptr noundef nonnull @contig_page_data, ptr noundef nonnull %sc, ptr noundef nonnull %dummy_stat, i1 noundef zeroext false)
  %55 = ptrtoint ptr %node_page_list to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile ptr, ptr %node_page_list, align 4
  %cmp.i63.not80 = icmp eq ptr %56, %node_page_list
  br i1 %cmp.i63.not80, label %if.then23.if.end38_crit_edge, label %if.then23.while.body31_crit_edge

if.then23.while.body31_crit_edge:                 ; preds = %if.then23
  br label %while.body31

if.then23.if.end38_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end38

while.body31:                                     ; preds = %list_del.exit.while.body31_crit_edge, %if.then23.while.body31_crit_edge
  %57 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %0, align 4
  %add.ptr35 = getelementptr i8, ptr %58, i32 -4
  %call.i.i65 = call zeroext i1 @__list_del_entry_valid(ptr noundef %58) #13
  br i1 %call.i.i65, label %if.end.i.i68, label %while.body31.list_del.exit_crit_edge

while.body31.list_del.exit_crit_edge:             ; preds = %while.body31
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_del.exit

if.end.i.i68:                                     ; preds = %while.body31
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i66 = getelementptr inbounds %struct.list_head, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %prev.i.i66 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %prev.i.i66, align 4
  %61 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %58, align 4
  %prev1.i.i.i67 = getelementptr inbounds %struct.list_head, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %prev1.i.i.i67 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %60, ptr %prev1.i.i.i67, align 4
  %64 = ptrtoint ptr %60 to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %62, ptr %60, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i68, %while.body31.list_del.exit_crit_edge
  %65 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr inttoptr (i32 256 to ptr), ptr %58, align 4
  %prev.i69 = getelementptr inbounds %struct.list_head, ptr %58, i32 0, i32 1
  %66 = ptrtoint ptr %prev.i69 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i69, align 4
  call void @putback_lru_page(ptr noundef %add.ptr35)
  %67 = ptrtoint ptr %node_page_list to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile ptr, ptr %node_page_list, align 4
  %cmp.i63.not = icmp eq ptr %68, %node_page_list
  br i1 %cmp.i63.not, label %list_del.exit.if.end38_crit_edge, label %list_del.exit.while.body31_crit_edge

list_del.exit.while.body31_crit_edge:             ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body31

list_del.exit.if.end38_crit_edge:                 ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end38

if.end38:                                         ; preds = %list_del.exit.if.end38_crit_edge, %if.then23.if.end38_crit_edge, %while.end20.if.end38_crit_edge
  %nr_reclaimed.1 = phi i32 [ 0, %while.end20.if.end38_crit_edge ], [ %call25, %if.then23.if.end38_crit_edge ], [ %call25, %list_del.exit.if.end38_crit_edge ]
  %and.i = and i32 %16, 2048
  %69 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i71 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i71 to ptr
  %task.i72 = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 2
  %71 = ptrtoint ptr %task.i72 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %task.i72, align 8
  %flags1.i73 = getelementptr inbounds %struct.task_struct, ptr %72, i32 0, i32 3
  %73 = ptrtoint ptr %flags1.i73 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %flags1.i73, align 4
  %and.i74 = and i32 %74, -2049
  %or.i75 = or i32 %and.i74, %and.i
  store i32 %or.i75, ptr %flags1.i73, align 4
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %sc) #13
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %dummy_stat) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %node_page_list) #13
  ret i32 %nr_reclaimed.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @try_to_free_pages(ptr noundef %zonelist, i32 noundef %order, i32 noundef %gfp_mask, ptr noundef %nodemask) local_unnamed_addr #0 align 64 {
entry:
  %__wq_entry.i = alloca %struct.wait_queue_entry, align 4
  %__wq_entry77.i = alloca %struct.wait_queue_entry, align 4
  %sc = alloca %struct.scan_control, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %sc) #13
  %0 = getelementptr inbounds i8, ptr %sc, i32 24
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4, !annotation !559
  %2 = ptrtoint ptr %sc to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 32, ptr %sc, align 4
  %nodemask1 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 1
  %3 = ptrtoint ptr %nodemask1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %nodemask, ptr %nodemask1, align 4
  %target_mem_cgroup = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %4 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %target_mem_cgroup, align 4
  %anon_cost = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 3
  %5 = ptrtoint ptr %anon_cost to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %anon_cost, align 4
  %file_cost = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 4
  %6 = ptrtoint ptr %file_cost to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %file_cost, align 4
  %may_deactivate = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @laptop_mode to i32))
  %7 = load i32, ptr @laptop_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  %bf.set16 = select i1 %tobool.not, i16 3587, i16 1539
  %8 = ptrtoint ptr %may_deactivate to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %bf.set16, ptr %may_deactivate, align 4
  %order38 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 6
  %conv = trunc i32 %order to i8
  %9 = ptrtoint ptr %order38 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %conv, ptr %order38, align 2
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %10 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 12, ptr %priority, align 1
  %and.i = and i32 %gfp_mask, 15
  %shr2.i = lshr i32 59624, %and.i
  %and3.i = and i32 %shr2.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool.not.i = icmp eq i32 %and3.i, 0
  br i1 %tobool.not.i, label %gfp_zone.exit, label %do.body6.i, !prof !557

do.body6.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/gfp.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 485, 0\0A.popsection", ""() #13, !srcloc !625
  unreachable

gfp_zone.exit:                                    ; preds = %entry
  %reclaim_idx = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %mul.i = shl nuw nsw i32 %and.i, 1
  %shr.i = lshr i32 19988769, %mul.i
  %11 = trunc i32 %shr.i to i8
  %conv39 = and i8 %11, 3
  %12 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %conv39, ptr %reclaim_idx, align 4
  %gfp_mask40 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %13 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %flags1.i, align 4
  %and.i63 = and i32 %18, 269221888
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i63)
  %tobool.not.i64 = icmp eq i32 %and.i63, 0
  br i1 %tobool.not.i64, label %gfp_zone.exit.current_gfp_context.exit_crit_edge, label %if.then.i, !prof !557

gfp_zone.exit.current_gfp_context.exit_crit_edge: ; preds = %gfp_zone.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %current_gfp_context.exit

if.then.i:                                        ; preds = %gfp_zone.exit
  %and4.i = and i32 %18, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %if.else.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %and7.i = and i32 %gfp_mask, -193
  br label %if.end12.i

if.else.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %and8.i = and i32 %18, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  %and11.i = and i32 %gfp_mask, -129
  %spec.select.i = select i1 %tobool9.not.i, i32 %gfp_mask, i32 %and11.i
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else.i, %if.then6.i
  %flags.addr.0.i = phi i32 [ %and7.i, %if.then6.i ], [ %spec.select.i, %if.else.i ]
  %and13.i = and i32 %18, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13.i)
  %tobool14.not.i = icmp eq i32 %and13.i, 0
  %and16.i = and i32 %flags.addr.0.i, -9
  %spec.select25.i = select i1 %tobool14.not.i, i32 %flags.addr.0.i, i32 %and16.i
  br label %current_gfp_context.exit

current_gfp_context.exit:                         ; preds = %if.end12.i, %gfp_zone.exit.current_gfp_context.exit_crit_edge
  %flags.addr.1.i = phi i32 [ %gfp_mask, %gfp_zone.exit.current_gfp_context.exit_crit_edge ], [ %spec.select25.i, %if.end12.i ]
  %19 = ptrtoint ptr %gfp_mask40 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %flags.addr.1.i, ptr %gfp_mask40, align 4
  %nr_scanned = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %reclaim_state = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 13
  %20 = call ptr @memset(ptr %nr_scanned, i32 0, i32 40)
  %21 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i65 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i65 to ptr
  %task.i66 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task.i66 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task.i66, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %flags.i, align 4
  %and.i67 = and i32 %26, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i67)
  %tobool.not.i68 = icmp eq i32 %and.i67, 0
  br i1 %tobool.not.i68, label %if.end.i, label %current_gfp_context.exit.if.end_crit_edge

current_gfp_context.exit.if.end_crit_edge:        ; preds = %current_gfp_context.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %current_gfp_context.exit
  %stack.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 1
  %27 = ptrtoint ptr %stack.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %stack.i.i.i.i, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %28, align 4
  %and1.i.i.i.i.i.i = and i32 %30, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool.not.i138.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool.not.i138.i, label %if.end.i.if.end6.i_crit_edge, label %fatal_signal_pending.exit.i

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6.i

fatal_signal_pending.exit.i:                      ; preds = %if.end.i
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 116, i32 1
  %31 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %signal.i.i.i, align 4
  %33 = and i32 %32, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool4.not.i = icmp eq i32 %33, 0
  br i1 %tobool4.not.i, label %fatal_signal_pending.exit.i.if.end6.i_crit_edge, label %fatal_signal_pending.exit.i.if.end_crit_edge

fatal_signal_pending.exit.i.if.end_crit_edge:     ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

fatal_signal_pending.exit.i.if.end6.i_crit_edge:  ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end6.i

if.end6.i:                                        ; preds = %fatal_signal_pending.exit.i.if.end6.i_crit_edge, %if.end.i.if.end6.i_crit_edge
  %and.i140.i = and i32 %flags.addr.1.i, 15
  %shr2.i.i = lshr i32 59624, %and.i140.i
  %and3.i.i = and i32 %shr2.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i.i)
  %tobool.not.i141.i = icmp eq i32 %and3.i.i, 0
  br i1 %tobool.not.i141.i, label %gfp_zone.exit.i, label %do.body6.i.i, !prof !557

do.body6.i.i:                                     ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/gfp.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 485, 0\0A.popsection", ""() #13, !srcloc !625
  unreachable

gfp_zone.exit.i:                                  ; preds = %if.end6.i
  %mul.i.i = shl nuw nsw i32 %and.i140.i, 1
  %shr.i.i = lshr i32 19988769, %mul.i.i
  %and1.i.i = and i32 %shr.i.i, 3
  %tobool.not.i.i.i = icmp eq ptr %nodemask, null
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %gfp_zone.exit.i.if.end.i.i.i_crit_edge, !prof !557

gfp_zone.exit.i.if.end.i.i.i_crit_edge:           ; preds = %gfp_zone.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i.i

land.rhs.i.i.i:                                   ; preds = %gfp_zone.exit.i
  %zone_idx.i.i.i.i = getelementptr inbounds %struct.zoneref, ptr %zonelist, i32 0, i32 1
  %34 = ptrtoint ptr %zone_idx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %zone_idx.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %and1.i.i)
  %cmp.not.i.i.i = icmp ugt i32 %35, %and1.i.i
  br i1 %cmp.not.i.i.i, label %land.rhs.i.i.i.if.end.i.i.i_crit_edge, label %land.rhs.i.i.i.first_zones_zonelist.exit.i_crit_edge, !prof !558

land.rhs.i.i.i.first_zones_zonelist.exit.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %first_zones_zonelist.exit.i

land.rhs.i.i.i.if.end.i.i.i_crit_edge:            ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.rhs.i.i.i.if.end.i.i.i_crit_edge, %gfp_zone.exit.i.if.end.i.i.i_crit_edge
  %call3.i.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %zonelist, i32 noundef %and1.i.i, ptr noundef %nodemask) #13
  br label %first_zones_zonelist.exit.i

first_zones_zonelist.exit.i:                      ; preds = %if.end.i.i.i, %land.rhs.i.i.i.first_zones_zonelist.exit.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %call3.i.i.i, %if.end.i.i.i ], [ %zonelist, %land.rhs.i.i.i.first_zones_zonelist.exit.i_crit_edge ]
  %36 = ptrtoint ptr %retval.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %zone.0176.i = load ptr, ptr %retval.0.i.i.i, align 4
  %tobool10.not177.i = icmp eq ptr %zone.0176.i, null
  br i1 %tobool10.not177.i, label %first_zones_zonelist.exit.i.if.end_crit_edge, label %first_zones_zonelist.exit.i.for.body.i_crit_edge

first_zones_zonelist.exit.i.for.body.i_crit_edge: ; preds = %first_zones_zonelist.exit.i
  br label %for.body.i

first_zones_zonelist.exit.i.if.end_crit_edge:     ; preds = %first_zones_zonelist.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

for.body.i:                                       ; preds = %next_zones_zonelist.exit.i.for.body.i_crit_edge, %first_zones_zonelist.exit.i.for.body.i_crit_edge
  %zone.0179.i = phi ptr [ %zone.0.i, %next_zones_zonelist.exit.i.for.body.i_crit_edge ], [ %zone.0176.i, %first_zones_zonelist.exit.i.for.body.i_crit_edge ]
  %z.0178.i = phi ptr [ %retval.0.i.i, %next_zones_zonelist.exit.i.for.body.i_crit_edge ], [ %retval.0.i.i.i, %first_zones_zonelist.exit.i.for.body.i_crit_edge ]
  %zone_pgdat.i = getelementptr inbounds %struct.zone, ptr %zone.0179.i, i32 0, i32 4
  %37 = ptrtoint ptr %zone_pgdat.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %zone_pgdat.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %zone.0179.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %38 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1152, i32 %sub.ptr.sub.i)
  %cmp.i = icmp sgt i32 %sub.ptr.sub.i, 1152
  br i1 %cmp.i, label %gfp_zone.exit150.i, label %if.end12.i69

if.end12.i69:                                     ; preds = %for.body.i
  %zone_pgdat.i.le = getelementptr inbounds %struct.zone, ptr %zone.0179.i, i32 0, i32 4
  %call14.i = tail call fastcc zeroext i1 @allow_direct_reclaim(ptr noundef %38) #13
  %tobool20.not.i = icmp eq ptr %38, null
  %or.cond.i = select i1 %call14.i, i1 true, i1 %tobool20.not.i
  br i1 %or.cond.i, label %if.end12.i69.if.end_crit_edge, label %if.end22.i

if.end12.i69.if.end_crit_edge:                    ; preds = %if.end12.i69
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

gfp_zone.exit150.i:                               ; preds = %for.body.i
  %incdec.ptr.i = getelementptr %struct.zoneref, ptr %z.0178.i, i32 1
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i, label %gfp_zone.exit150.i.if.end.i.i_crit_edge, !prof !557

gfp_zone.exit150.i.if.end.i.i_crit_edge:          ; preds = %gfp_zone.exit150.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %gfp_zone.exit150.i
  %zone_idx.i.i.i = getelementptr %struct.zoneref, ptr %z.0178.i, i32 1, i32 1
  %39 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %zone_idx.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %and1.i.i)
  %cmp.not.i.i = icmp ugt i32 %40, %and1.i.i
  br i1 %cmp.not.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, label %land.rhs.i.i.next_zones_zonelist.exit.i_crit_edge, !prof !558

land.rhs.i.i.next_zones_zonelist.exit.i_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %next_zones_zonelist.exit.i

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.rhs.i.i.if.end.i.i_crit_edge, %gfp_zone.exit150.i.if.end.i.i_crit_edge
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr.i, i32 noundef %and1.i.i, ptr noundef %nodemask) #13
  br label %next_zones_zonelist.exit.i

next_zones_zonelist.exit.i:                       ; preds = %if.end.i.i, %land.rhs.i.i.next_zones_zonelist.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ %incdec.ptr.i, %land.rhs.i.i.next_zones_zonelist.exit.i_crit_edge ]
  %41 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %zone.0.i = load ptr, ptr %retval.0.i.i, align 4
  %tobool10.not.i = icmp eq ptr %zone.0.i, null
  br i1 %tobool10.not.i, label %next_zones_zonelist.exit.i.if.end_crit_edge, label %next_zones_zonelist.exit.i.for.body.i_crit_edge

next_zones_zonelist.exit.i.for.body.i_crit_edge:  ; preds = %next_zones_zonelist.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

next_zones_zonelist.exit.i.if.end_crit_edge:      ; preds = %next_zones_zonelist.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end22.i:                                       ; preds = %if.end12.i69
  %42 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %43 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 3
  %45 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cpu.i.i, align 4
  %arrayidx13.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %46
  %47 = ptrtoint ptr %arrayidx13.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx13.i.i, align 4
  %add.i.i = add i32 %48, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 31) to i32)
  %49 = inttoptr i32 %add.i.i to ptr
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  %add14.i.i = add i32 %51, 1
  store i32 %add14.i.i, ptr %49, align 4
  %52 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i.i = and i32 %52, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i151.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i151.i, label %if.then.i.i, label %if.end22.i.count_vm_event.exit.i_crit_edge, !prof !558

if.end22.i.count_vm_event.exit.i_crit_edge:       ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %count_vm_event.exit.i

if.then.i.i:                                      ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @warn_bogus_irq_restore() #13
  br label %count_vm_event.exit.i

count_vm_event.exit.i:                            ; preds = %if.then.i.i, %if.end22.i.count_vm_event.exit.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %42) #13, !srcloc !615
  %and23.i = and i32 %flags.addr.1.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i)
  %tobool24.not.i = icmp eq i32 %and23.i, 0
  br i1 %tobool24.not.i, label %if.then25.i, label %if.else.i70

if.then25.i:                                      ; preds = %count_vm_event.exit.i
  tail call void @__might_sleep(ptr noundef nonnull @.str.21, i32 noundef 3777) #13
  %call29.i = tail call fastcc zeroext i1 @allow_direct_reclaim(ptr noundef nonnull %38) #13
  br i1 %call29.i, label %if.then25.i.if.end100.i_crit_edge, label %if.then37.i

if.then25.i.if.end100.i_crit_edge:                ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end100.i

if.then37.i:                                      ; preds = %if.then25.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry.i) #13
  %53 = call ptr @memset(ptr %__wq_entry.i, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry.i, i32 noundef 0) #13
  %pfmemalloc_wait.i = getelementptr inbounds %struct.pglist_data, ptr %38, i32 0, i32 10
  %call40184.i = call i32 @prepare_to_wait_event(ptr noundef %pfmemalloc_wait.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 1) #13
  %call42185.i = call fastcc zeroext i1 @allow_direct_reclaim(ptr noundef nonnull %38) #13
  br i1 %call42185.i, label %if.then37.i.for.end63.i_crit_edge, label %if.then37.i.if.end58.i_crit_edge

if.then37.i.if.end58.i_crit_edge:                 ; preds = %if.then37.i
  br label %if.end58.i

if.then37.i.for.end63.i_crit_edge:                ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end63.i

if.end58.i:                                       ; preds = %cleanup.i.if.end58.i_crit_edge, %if.then37.i.if.end58.i_crit_edge
  %__ret38.1187.i = phi i32 [ %__ret38.1.i, %cleanup.i.if.end58.i_crit_edge ], [ 100, %if.then37.i.if.end58.i_crit_edge ]
  %call40186.i = phi i32 [ %call40.i, %cleanup.i.if.end58.i_crit_edge ], [ %call40184.i, %if.then37.i.if.end58.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40186.i)
  %tobool59.not.i = icmp eq i32 %call40186.i, 0
  br i1 %tobool59.not.i, label %cleanup.i, label %if.end58.i.__out.i_crit_edge

if.end58.i.__out.i_crit_edge:                     ; preds = %if.end58.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %__out.i

cleanup.i:                                        ; preds = %if.end58.i
  %call62.i = call i32 @schedule_timeout(i32 noundef %__ret38.1187.i) #13
  %call40.i = call i32 @prepare_to_wait_event(ptr noundef %pfmemalloc_wait.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 1) #13
  %call42.i = call fastcc zeroext i1 @allow_direct_reclaim(ptr noundef nonnull %38) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62.i)
  %tobool46.not.i = icmp eq i32 %call62.i, 0
  %54 = select i1 %call42.i, i1 %tobool46.not.i, i1 false
  %__ret38.1.i = select i1 %54, i32 1, i32 %call62.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %__ret38.1.i)
  %tobool52.not.i = icmp eq i32 %__ret38.1.i, 0
  %55 = select i1 %call42.i, i1 true, i1 %tobool52.not.i
  br i1 %55, label %cleanup.i.for.end63.i_crit_edge, label %cleanup.i.if.end58.i_crit_edge

cleanup.i.if.end58.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end58.i

cleanup.i.for.end63.i_crit_edge:                  ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end63.i

for.end63.i:                                      ; preds = %cleanup.i.for.end63.i_crit_edge, %if.then37.i.for.end63.i_crit_edge
  call void @finish_wait(ptr noundef %pfmemalloc_wait.i, ptr noundef nonnull %__wq_entry.i) #13
  br label %__out.i

__out.i:                                          ; preds = %for.end63.i, %if.end58.i.__out.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry.i) #13
  br label %if.end100.i

if.else.i70:                                      ; preds = %count_vm_event.exit.i
  tail call void @__might_sleep(ptr noundef nonnull @.str.21, i32 noundef 3781) #13
  %call75.i = tail call fastcc zeroext i1 @allow_direct_reclaim(ptr noundef nonnull %38) #13
  br i1 %call75.i, label %if.else.i70.if.end100.i_crit_edge, label %if.then76.i

if.else.i70.if.end100.i_crit_edge:                ; preds = %if.else.i70
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end100.i

if.then76.i:                                      ; preds = %if.else.i70
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry77.i) #13
  %56 = call ptr @memset(ptr %__wq_entry77.i, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry77.i, i32 noundef 0) #13
  %57 = ptrtoint ptr %zone_pgdat.i.le to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %zone_pgdat.i.le, align 4
  %pfmemalloc_wait82180.i = getelementptr inbounds %struct.pglist_data, ptr %58, i32 0, i32 10
  %call83181.i = call i32 @prepare_to_wait_event(ptr noundef %pfmemalloc_wait82180.i, ptr noundef nonnull %__wq_entry77.i, i32 noundef 258) #13
  %call84182.i = call fastcc zeroext i1 @allow_direct_reclaim(ptr noundef nonnull %38) #13
  br i1 %call84182.i, label %if.then76.i.for.end93.i_crit_edge, label %if.then76.i.if.end86.i_crit_edge

if.then76.i.if.end86.i_crit_edge:                 ; preds = %if.then76.i
  br label %if.end86.i

if.then76.i.for.end93.i_crit_edge:                ; preds = %if.then76.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end93.i

if.end86.i:                                       ; preds = %cleanup90.i.if.end86.i_crit_edge, %if.then76.i.if.end86.i_crit_edge
  %call83183.i = phi i32 [ %call83.i, %cleanup90.i.if.end86.i_crit_edge ], [ %call83181.i, %if.then76.i.if.end86.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83183.i)
  %tobool87.not.i = icmp eq i32 %call83183.i, 0
  br i1 %tobool87.not.i, label %cleanup90.i, label %if.end86.i.__out96.i_crit_edge

if.end86.i.__out96.i_crit_edge:                   ; preds = %if.end86.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %__out96.i

cleanup90.i:                                      ; preds = %if.end86.i
  call void @schedule() #13
  %59 = ptrtoint ptr %zone_pgdat.i.le to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %zone_pgdat.i.le, align 4
  %pfmemalloc_wait82.i = getelementptr inbounds %struct.pglist_data, ptr %60, i32 0, i32 10
  %call83.i = call i32 @prepare_to_wait_event(ptr noundef %pfmemalloc_wait82.i, ptr noundef nonnull %__wq_entry77.i, i32 noundef 258) #13
  %call84.i = call fastcc zeroext i1 @allow_direct_reclaim(ptr noundef nonnull %38) #13
  br i1 %call84.i, label %cleanup90.i.for.end93.i_crit_edge, label %cleanup90.i.if.end86.i_crit_edge

cleanup90.i.if.end86.i_crit_edge:                 ; preds = %cleanup90.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end86.i

cleanup90.i.for.end93.i_crit_edge:                ; preds = %cleanup90.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end93.i

for.end93.i:                                      ; preds = %cleanup90.i.for.end93.i_crit_edge, %if.then76.i.for.end93.i_crit_edge
  %61 = ptrtoint ptr %zone_pgdat.i.le to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %zone_pgdat.i.le, align 4
  %pfmemalloc_wait95.i = getelementptr inbounds %struct.pglist_data, ptr %62, i32 0, i32 10
  call void @finish_wait(ptr noundef %pfmemalloc_wait95.i, ptr noundef nonnull %__wq_entry77.i) #13
  br label %__out96.i

__out96.i:                                        ; preds = %for.end93.i, %if.end86.i.__out96.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry77.i) #13
  br label %if.end100.i

if.end100.i:                                      ; preds = %__out96.i, %if.else.i70.if.end100.i_crit_edge, %__out.i, %if.then25.i.if.end100.i_crit_edge
  %63 = ptrtoint ptr %task.i66 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %task.i66, align 8
  %stack.i.i.i152.i = getelementptr inbounds %struct.task_struct, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %stack.i.i.i152.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %stack.i.i.i152.i, align 4
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %66, align 4
  %and1.i.i.i.i.i153.i = and i32 %68, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i153.i)
  %tobool.not.i154.i = icmp eq i32 %and1.i.i.i.i.i153.i, 0
  br i1 %tobool.not.i154.i, label %if.end100.i.if.end_crit_edge, label %fatal_signal_pending.exit158.i

if.end100.i.if.end_crit_edge:                     ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

fatal_signal_pending.exit158.i:                   ; preds = %if.end100.i
  %signal.i.i155.i = getelementptr inbounds %struct.task_struct, ptr %64, i32 0, i32 116, i32 1
  %69 = ptrtoint ptr %signal.i.i155.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %signal.i.i155.i, align 4
  %71 = and i32 %70, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool104.not.i = icmp eq i32 %71, 0
  br i1 %tobool104.not.i, label %fatal_signal_pending.exit158.i.if.end_crit_edge, label %fatal_signal_pending.exit158.i.cleanup_crit_edge

fatal_signal_pending.exit158.i.cleanup_crit_edge: ; preds = %fatal_signal_pending.exit158.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

fatal_signal_pending.exit158.i.if.end_crit_edge:  ; preds = %fatal_signal_pending.exit158.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end:                                           ; preds = %fatal_signal_pending.exit158.i.if.end_crit_edge, %if.end100.i.if.end_crit_edge, %next_zones_zonelist.exit.i.if.end_crit_edge, %if.end12.i69.if.end_crit_edge, %first_zones_zonelist.exit.i.if.end_crit_edge, %fatal_signal_pending.exit.i.if.end_crit_edge, %current_gfp_context.exit.if.end_crit_edge
  %72 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i71 = and i32 %72, -16384
  %73 = inttoptr i32 %and.i71 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %task, align 8
  %tobool.not.i72 = icmp eq ptr %reclaim_state, null
  %reclaim_state42.i = getelementptr inbounds %struct.task_struct, ptr %75, i32 0, i32 149
  %76 = ptrtoint ptr %reclaim_state42.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %reclaim_state42.i, align 16
  %tobool43.not.i = icmp eq ptr %77, null
  br i1 %tobool.not.i72, label %land.rhs41.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end
  br i1 %tobool43.not.i, label %land.rhs.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs4.i

land.rhs.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs4.i:                                      ; preds = %land.rhs.i
  %.b110.i = load i1, ptr @set_task_reclaim_state.__already_done, align 1
  br i1 %.b110.i, label %land.rhs4.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs4.i.if.end91.sink.split.i_crit_edge, !prof !557

land.rhs4.i.if.end91.sink.split.i_crit_edge:      ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end91.sink.split.i

land.rhs4.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs41.critedge.i:                            ; preds = %if.end
  br i1 %tobool43.not.i, label %land.rhs53.i, label %land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge

land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs41.critedge.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs53.i:                                     ; preds = %land.rhs41.critedge.i
  %.b108109.i = load i1, ptr @set_task_reclaim_state.__already_done.177, align 1
  br i1 %.b108109.i, label %land.rhs53.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs53.i.if.end91.sink.split.i_crit_edge, !prof !557

land.rhs53.i.if.end91.sink.split.i_crit_edge:     ; preds = %land.rhs53.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end91.sink.split.i

land.rhs53.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs53.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

if.end91.sink.split.i:                            ; preds = %land.rhs53.i.if.end91.sink.split.i_crit_edge, %land.rhs4.i.if.end91.sink.split.i_crit_edge
  %set_task_reclaim_state.__already_done.sink.i = phi ptr [ @set_task_reclaim_state.__already_done, %land.rhs4.i.if.end91.sink.split.i_crit_edge ], [ @set_task_reclaim_state.__already_done.177, %land.rhs53.i.if.end91.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 183, %land.rhs4.i.if.end91.sink.split.i_crit_edge ], [ 186, %land.rhs53.i.if.end91.sink.split.i_crit_edge ]
  %78 = ptrtoint ptr %set_task_reclaim_state.__already_done.sink.i to i32
  call void @__asan_store1_noabort(i32 %78)
  store i1 true, ptr %set_task_reclaim_state.__already_done.sink.i, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef %.sink.i, i32 noundef 9, ptr noundef null) #13
  br label %set_task_reclaim_state.exit

set_task_reclaim_state.exit:                      ; preds = %if.end91.sink.split.i, %land.rhs53.i.set_task_reclaim_state.exit_crit_edge, %land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge, %land.rhs4.i.set_task_reclaim_state.exit_crit_edge, %land.rhs.i.set_task_reclaim_state.exit_crit_edge
  %79 = ptrtoint ptr %reclaim_state42.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %reclaim_state, ptr %reclaim_state42.i, align 16
  %80 = ptrtoint ptr %gfp_mask40 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %gfp_mask40, align 4
  call fastcc void @trace_mm_vmscan_direct_reclaim_begin(i32 noundef %order, i32 noundef %81)
  %call54 = call fastcc i32 @do_try_to_free_pages(ptr noundef %zonelist, ptr noundef nonnull %sc)
  call fastcc void @trace_mm_vmscan_direct_reclaim_end(i32 noundef %call54)
  %82 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %task, align 8
  %reclaim_state42.i73 = getelementptr inbounds %struct.task_struct, ptr %83, i32 0, i32 149
  %84 = ptrtoint ptr %reclaim_state42.i73 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %reclaim_state42.i73, align 16
  %tobool43.not.i74 = icmp eq ptr %85, null
  br i1 %tobool43.not.i74, label %land.rhs53.i77, label %set_task_reclaim_state.exit.set_task_reclaim_state.exit82_crit_edge

set_task_reclaim_state.exit.set_task_reclaim_state.exit82_crit_edge: ; preds = %set_task_reclaim_state.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit82

land.rhs53.i77:                                   ; preds = %set_task_reclaim_state.exit
  %.b108109.i76 = load i1, ptr @set_task_reclaim_state.__already_done.177, align 1
  br i1 %.b108109.i76, label %land.rhs53.i77.set_task_reclaim_state.exit82_crit_edge, label %if.end91.sink.split.i80, !prof !557

land.rhs53.i77.set_task_reclaim_state.exit82_crit_edge: ; preds = %land.rhs53.i77
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit82

if.end91.sink.split.i80:                          ; preds = %land.rhs53.i77
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @set_task_reclaim_state.__already_done.177, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 186, i32 noundef 9, ptr noundef null) #13
  br label %set_task_reclaim_state.exit82

set_task_reclaim_state.exit82:                    ; preds = %if.end91.sink.split.i80, %land.rhs53.i77.set_task_reclaim_state.exit82_crit_edge, %set_task_reclaim_state.exit.set_task_reclaim_state.exit82_crit_edge
  %86 = ptrtoint ptr %reclaim_state42.i73 to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr null, ptr %reclaim_state42.i73, align 16
  br label %cleanup

cleanup:                                          ; preds = %set_task_reclaim_state.exit82, %fatal_signal_pending.exit158.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %call54, %set_task_reclaim_state.exit82 ], [ 1, %fatal_signal_pending.exit158.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %sc) #13
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_direct_reclaim_begin(i32 noundef %order, i32 noundef %gfp_flags) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_direct_reclaim_begin, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_direct_reclaim_begin, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !626
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_direct_reclaim_begin, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %order, i32 noundef %gfp_flags) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !627
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !627
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_direct_reclaim_begin, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_direct_reclaim_begin.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_direct_reclaim_begin.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 141, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_try_to_free_pages(ptr noundef %zonelist, ptr noundef %sc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %0 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %priority, align 1
  %compaction_ready49 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %target_mem_cgroup.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %reclaim_idx = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %gfp_mask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %nr_scanned = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %nr_reclaimed = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 11
  %nodemask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 1
  %zone_idx.i.i.i = getelementptr inbounds %struct.zoneref, ptr %zonelist, i32 0, i32 1
  br label %retry

retry:                                            ; preds = %retry.backedge, %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @delayacct_key, ptr blockaddress(@do_try_to_free_pages, %if.end.i137)) #13
          to label %delayacct_freepages_start.exit [label %if.end.i137], !srcloc !567

if.end.i137:                                      ; preds = %retry
  %2 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %delays.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 181
  %6 = ptrtoint ptr %delays.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %delays.i, align 8
  %tobool4.not.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i, label %if.end.i137.delayacct_freepages_start.exit_crit_edge, label %if.then5.i

if.end.i137.delayacct_freepages_start.exit_crit_edge: ; preds = %if.end.i137
  call void @__sanitizer_cov_trace_pc() #15
  br label %delayacct_freepages_start.exit

if.then5.i:                                       ; preds = %if.end.i137
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__delayacct_freepages_start() #13
  br label %delayacct_freepages_start.exit

delayacct_freepages_start.exit:                   ; preds = %if.then5.i, %if.end.i137.delayacct_freepages_start.exit_crit_edge, %retry
  %8 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %target_mem_cgroup.i, align 4
  %tobool.i.not = icmp eq ptr %9, null
  br i1 %tobool.i.not, label %if.then, label %delayacct_freepages_start.exit.do.body.preheader_crit_edge

delayacct_freepages_start.exit.do.body.preheader_crit_edge: ; preds = %delayacct_freepages_start.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.preheader

if.then:                                          ; preds = %delayacct_freepages_start.exit
  call void @__sanitizer_cov_trace_pc() #15
  %10 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %reclaim_idx, align 4
  %conv1 = sext i8 %11 to i32
  %add = add nsw i32 %conv1, 8
  %arrayidx.i = getelementptr [76 x i32], ptr @vm_event_states, i32 0, i32 %add
  %12 = ptrtoint ptr %arrayidx.i to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i138 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i138 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu.i, align 4
  %arrayidx7.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx7.i, align 4
  %add.i = add i32 %18, %12
  %19 = inttoptr i32 %add.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  %add8.i = add i32 %21, 1
  store i32 %add8.i, ptr %19, align 4
  br label %do.body.preheader

do.body.preheader:                                ; preds = %if.then, %delayacct_freepages_start.exit.do.body.preheader_crit_edge
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %do.body.preheader
  %22 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %gfp_mask, align 4
  %24 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %target_mem_cgroup.i, align 4
  %26 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %priority, align 1
  %conv3 = sext i8 %27 to i32
  tail call void @vmpressure_prio(i32 noundef %23, ptr noundef %25, i32 noundef %conv3) #13
  %28 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %nr_scanned, align 4
  tail call fastcc void @shrink_zones(ptr noundef %zonelist, ptr noundef %sc)
  %29 = ptrtoint ptr %nr_reclaimed to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %nr_reclaimed, align 4
  %31 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sc, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %32)
  %cmp.not = icmp ult i32 %30, %32
  br i1 %cmp.not, label %if.end6, label %do.body.do.end_crit_edge

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.end6:                                          ; preds = %do.body
  %33 = ptrtoint ptr %compaction_ready49 to i32
  call void @__asan_load2_noabort(i32 %33)
  %bf.load = load i16, ptr %compaction_ready49, align 4
  %34 = and i16 %bf.load, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %34)
  %tobool.not = icmp eq i16 %34, 0
  br i1 %tobool.not, label %if.end8, label %if.end6.do.end_crit_edge

if.end6.do.end_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.end8:                                          ; preds = %if.end6
  %35 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %priority, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %36)
  %cmp11 = icmp slt i8 %36, 10
  br i1 %cmp11, label %if.then13, label %if.end8.do.cond_crit_edge

if.end8.do.cond_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.cond

if.then13:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  %bf.set = or i16 %bf.load, 2048
  %37 = ptrtoint ptr %compaction_ready49 to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %bf.set, ptr %compaction_ready49, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.then13, %if.end8.do.cond_crit_edge
  %dec = add i8 %36, -1
  %38 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %dec, ptr %priority, align 1
  %cmp19 = icmp sgt i8 %dec, -1
  br i1 %cmp19, label %do.cond.do.body_crit_edge, label %do.cond.do.end_crit_edge

do.cond.do.end_crit_edge:                         ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

do.end:                                           ; preds = %do.cond.do.end_crit_edge, %if.end6.do.end_crit_edge, %do.body.do.end_crit_edge
  %39 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %reclaim_idx, align 4
  %conv22 = sext i8 %40 to i32
  %41 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i = icmp eq ptr %42, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %do.end.if.end.i.i_crit_edge, !prof !557

do.end.if.end.i.i_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %do.end
  %43 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %zone_idx.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %44, i32 %conv22)
  %cmp.not.i.i = icmp ugt i32 %44, %conv22
  br i1 %cmp.not.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, label %land.rhs.i.i.first_zones_zonelist.exit_crit_edge, !prof !558

land.rhs.i.i.first_zones_zonelist.exit_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %first_zones_zonelist.exit

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.rhs.i.i.if.end.i.i_crit_edge, %do.end.if.end.i.i_crit_edge
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %zonelist, i32 noundef %conv22, ptr noundef %42) #13
  br label %first_zones_zonelist.exit

first_zones_zonelist.exit:                        ; preds = %if.end.i.i, %land.rhs.i.i.first_zones_zonelist.exit_crit_edge
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ %zonelist, %land.rhs.i.i.first_zones_zonelist.exit_crit_edge ]
  %45 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %zone.0155 = load ptr, ptr %retval.0.i.i, align 4
  %tobool25.not156 = icmp eq ptr %zone.0155, null
  br i1 %tobool25.not156, label %first_zones_zonelist.exit.for.end_crit_edge, label %first_zones_zonelist.exit.for.body_crit_edge

first_zones_zonelist.exit.for.body_crit_edge:     ; preds = %first_zones_zonelist.exit
  br label %for.body

first_zones_zonelist.exit.for.end_crit_edge:      ; preds = %first_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body:                                         ; preds = %next_zones_zonelist.exit.for.body_crit_edge, %first_zones_zonelist.exit.for.body_crit_edge
  %zone.0159 = phi ptr [ %zone.0, %next_zones_zonelist.exit.for.body_crit_edge ], [ %zone.0155, %first_zones_zonelist.exit.for.body_crit_edge ]
  %z.0158 = phi ptr [ %retval.0.i, %next_zones_zonelist.exit.for.body_crit_edge ], [ %retval.0.i.i, %first_zones_zonelist.exit.for.body_crit_edge ]
  %last_pgdat.0157 = phi ptr [ %last_pgdat.1, %next_zones_zonelist.exit.for.body_crit_edge ], [ null, %first_zones_zonelist.exit.for.body_crit_edge ]
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone.0159, i32 0, i32 4
  %46 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %zone_pgdat, align 4
  %cmp26 = icmp eq ptr %47, %last_pgdat.0157
  br i1 %cmp26, label %for.body.for.inc_crit_edge, label %if.end29

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end29:                                         ; preds = %for.body
  %48 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %target_mem_cgroup.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@do_try_to_free_pages, %if.then.i.i)) #13
          to label %if.end.i.i140 [label %if.then.i.i], !srcloc !567

if.then.i.i:                                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %__lruvec.i.i = getelementptr inbounds %struct.pglist_data, ptr %47, i32 0, i32 26
  br label %out.i.i

if.end.i.i140:                                    ; preds = %if.end29
  %tobool.not.i.i139 = icmp eq ptr %49, null
  br i1 %tobool.not.i.i139, label %if.then1.i.i, label %if.end.i.i140.if.end2.i.i_crit_edge

if.end.i.i140.if.end2.i.i_crit_edge:              ; preds = %if.end.i.i140
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end2.i.i

if.then1.i.i:                                     ; preds = %if.end.i.i140
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %50 = load ptr, ptr @root_mem_cgroup, align 4
  br label %if.end2.i.i

if.end2.i.i:                                      ; preds = %if.then1.i.i, %if.end.i.i140.if.end2.i.i_crit_edge
  %memcg.addr.0.i.i = phi ptr [ %49, %if.end.i.i140.if.end2.i.i_crit_edge ], [ %50, %if.then1.i.i ]
  %node_id.i.i = getelementptr inbounds %struct.pglist_data, ptr %47, i32 0, i32 8
  %51 = ptrtoint ptr %node_id.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %node_id.i.i, align 64
  %arrayidx.i.i = getelementptr %struct.mem_cgroup, ptr %memcg.addr.0.i.i, i32 0, i32 45, i32 %52
  %53 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx.i.i, align 4
  br label %out.i.i

out.i.i:                                          ; preds = %if.end2.i.i, %if.then.i.i
  %lruvec.0.i.i = phi ptr [ %__lruvec.i.i, %if.then.i.i ], [ %54, %if.end2.i.i ]
  %pgdat4.i.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i.i, i32 0, i32 7
  %55 = ptrtoint ptr %pgdat4.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %pgdat4.i.i, align 4
  %cmp.not.i.i141 = icmp eq ptr %56, %47
  br i1 %cmp.not.i.i141, label %out.i.i.mem_cgroup_lruvec.exit.i_crit_edge, label %if.then7.i.i, !prof !557

out.i.i.mem_cgroup_lruvec.exit.i_crit_edge:       ; preds = %out.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mem_cgroup_lruvec.exit.i

if.then7.i.i:                                     ; preds = %out.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %57 = ptrtoint ptr %pgdat4.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %47, ptr %pgdat4.i.i, align 4
  br label %mem_cgroup_lruvec.exit.i

mem_cgroup_lruvec.exit.i:                         ; preds = %if.then7.i.i, %out.i.i.mem_cgroup_lruvec.exit.i_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@do_try_to_free_pages, %if.then.i10.i)) #13
          to label %if.end.i12.i [label %if.then.i10.i], !srcloc !567

if.then.i10.i:                                    ; preds = %mem_cgroup_lruvec.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 12), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 12) to i32))
  %58 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 12), align 4
  %59 = tail call i32 @llvm.smax.i32(i32 %58, i32 0) #13
  br label %lruvec_page_state.exit.i

if.end.i12.i:                                     ; preds = %mem_cgroup_lruvec.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i11.i = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i.i, i32 0, i32 2, i32 0, i32 12
  %60 = ptrtoint ptr %arrayidx.i11.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %arrayidx.i11.i, align 4
  br label %lruvec_page_state.exit.i

lruvec_page_state.exit.i:                         ; preds = %if.end.i12.i, %if.then.i10.i
  %retval.0.i.i142 = phi i32 [ %59, %if.then.i10.i ], [ %61, %if.end.i12.i ]
  %refaults2.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i.i, i32 0, i32 5
  %62 = ptrtoint ptr %refaults2.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %retval.0.i.i142, ptr %refaults2.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@do_try_to_free_pages, %if.then.i13.i)) #13
          to label %if.end.i17.i [label %if.then.i13.i], !srcloc !567

if.then.i13.i:                                    ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i14.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 13), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 13) to i32))
  %63 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 13), align 4
  %64 = tail call i32 @llvm.smax.i32(i32 %63, i32 0) #13
  br label %snapshot_refaults.exit

if.end.i17.i:                                     ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i16.i = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i.i, i32 0, i32 2, i32 0, i32 13
  %65 = ptrtoint ptr %arrayidx.i16.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %arrayidx.i16.i, align 4
  br label %snapshot_refaults.exit

snapshot_refaults.exit:                           ; preds = %if.end.i17.i, %if.then.i13.i
  %retval.0.i18.i = phi i32 [ %64, %if.then.i13.i ], [ %66, %if.end.i17.i ]
  %arrayidx5.i = getelementptr %struct.lruvec, ptr %lruvec.0.i.i, i32 0, i32 5, i32 1
  %67 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %retval.0.i18.i, ptr %arrayidx5.i, align 4
  %68 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %target_mem_cgroup.i, align 4
  %tobool.i144.not = icmp eq ptr %69, null
  br i1 %tobool.i144.not, label %snapshot_refaults.exit.for.inc_crit_edge, label %if.then34

snapshot_refaults.exit.for.inc_crit_edge:         ; preds = %snapshot_refaults.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then34:                                        ; preds = %snapshot_refaults.exit
  %70 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %zone_pgdat, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@do_try_to_free_pages, %if.then.i)) #13
          to label %if.end2.i [label %if.then.i], !srcloc !567

if.then.i:                                        ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #15
  %__lruvec.i = getelementptr inbounds %struct.pglist_data, ptr %71, i32 0, i32 26
  br label %out.i

if.end2.i:                                        ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #15
  %node_id.i = getelementptr inbounds %struct.pglist_data, ptr %71, i32 0, i32 8
  %72 = ptrtoint ptr %node_id.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %node_id.i, align 64
  %arrayidx.i147 = getelementptr %struct.mem_cgroup, ptr %69, i32 0, i32 45, i32 %73
  %74 = ptrtoint ptr %arrayidx.i147 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %arrayidx.i147, align 4
  br label %out.i

out.i:                                            ; preds = %if.end2.i, %if.then.i
  %lruvec.0.i = phi ptr [ %__lruvec.i, %if.then.i ], [ %75, %if.end2.i ]
  %pgdat4.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 7
  %76 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %pgdat4.i, align 4
  %cmp.not.i148 = icmp eq ptr %77, %71
  br i1 %cmp.not.i148, label %out.i.mem_cgroup_lruvec.exit_crit_edge, label %if.then7.i, !prof !557

out.i.mem_cgroup_lruvec.exit_crit_edge:           ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mem_cgroup_lruvec.exit

if.then7.i:                                       ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  %78 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %71, ptr %pgdat4.i, align 4
  br label %mem_cgroup_lruvec.exit

mem_cgroup_lruvec.exit:                           ; preds = %if.then7.i, %out.i.mem_cgroup_lruvec.exit_crit_edge
  %flags = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 6
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %flags) #13
  br label %for.inc

for.inc:                                          ; preds = %mem_cgroup_lruvec.exit, %snapshot_refaults.exit.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %last_pgdat.1 = phi ptr [ %last_pgdat.0157, %for.body.for.inc_crit_edge ], [ %47, %mem_cgroup_lruvec.exit ], [ %47, %snapshot_refaults.exit.for.inc_crit_edge ]
  %incdec.ptr = getelementptr %struct.zoneref, ptr %z.0158, i32 1
  %79 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %reclaim_idx, align 4
  %conv40 = sext i8 %80 to i32
  %81 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %nodemask, align 4
  %tobool.not.i = icmp eq ptr %82, null
  br i1 %tobool.not.i, label %land.rhs.i, label %for.inc.if.end.i_crit_edge, !prof !557

for.inc.if.end.i_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.rhs.i:                                       ; preds = %for.inc
  %zone_idx.i.i = getelementptr %struct.zoneref, ptr %z.0158, i32 1, i32 1
  %83 = ptrtoint ptr %zone_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %zone_idx.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %84, i32 %conv40)
  %cmp.not.i = icmp ugt i32 %84, %conv40
  br i1 %cmp.not.i, label %land.rhs.i.if.end.i_crit_edge, label %land.rhs.i.next_zones_zonelist.exit_crit_edge, !prof !558

land.rhs.i.next_zones_zonelist.exit_crit_edge:    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %next_zones_zonelist.exit

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.end.i:                                         ; preds = %land.rhs.i.if.end.i_crit_edge, %for.inc.if.end.i_crit_edge
  %call3.i = tail call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr, i32 noundef %conv40, ptr noundef %82) #13
  br label %next_zones_zonelist.exit

next_zones_zonelist.exit:                         ; preds = %if.end.i, %land.rhs.i.next_zones_zonelist.exit_crit_edge
  %retval.0.i = phi ptr [ %call3.i, %if.end.i ], [ %incdec.ptr, %land.rhs.i.next_zones_zonelist.exit_crit_edge ]
  %85 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %zone.0 = load ptr, ptr %retval.0.i, align 4
  %tobool25.not = icmp eq ptr %zone.0, null
  br i1 %tobool25.not, label %next_zones_zonelist.exit.for.end_crit_edge, label %next_zones_zonelist.exit.for.body_crit_edge

next_zones_zonelist.exit.for.body_crit_edge:      ; preds = %next_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

next_zones_zonelist.exit.for.end_crit_edge:       ; preds = %next_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.end:                                          ; preds = %next_zones_zonelist.exit.for.end_crit_edge, %first_zones_zonelist.exit.for.end_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @delayacct_key, ptr blockaddress(@do_try_to_free_pages, %if.end.i153)) #13
          to label %delayacct_freepages_end.exit [label %if.end.i153], !srcloc !567

if.end.i153:                                      ; preds = %for.end
  %86 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i149 = and i32 %86, -16384
  %87 = inttoptr i32 %and.i.i149 to ptr
  %task.i150 = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 2
  %88 = ptrtoint ptr %task.i150 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %task.i150, align 8
  %delays.i151 = getelementptr inbounds %struct.task_struct, ptr %89, i32 0, i32 181
  %90 = ptrtoint ptr %delays.i151 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %delays.i151, align 8
  %tobool4.not.i152 = icmp eq ptr %91, null
  br i1 %tobool4.not.i152, label %if.end.i153.delayacct_freepages_end.exit_crit_edge, label %if.then5.i154

if.end.i153.delayacct_freepages_end.exit_crit_edge: ; preds = %if.end.i153
  call void @__sanitizer_cov_trace_pc() #15
  br label %delayacct_freepages_end.exit

if.then5.i154:                                    ; preds = %if.end.i153
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @__delayacct_freepages_end() #13
  br label %delayacct_freepages_end.exit

delayacct_freepages_end.exit:                     ; preds = %if.then5.i154, %if.end.i153.delayacct_freepages_end.exit_crit_edge, %for.end
  %92 = ptrtoint ptr %nr_reclaimed to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %nr_reclaimed, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %93)
  %tobool45.not = icmp eq i32 %93, 0
  br i1 %tobool45.not, label %if.end48, label %delayacct_freepages_end.exit.cleanup_crit_edge

delayacct_freepages_end.exit.cleanup_crit_edge:   ; preds = %delayacct_freepages_end.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end48:                                         ; preds = %delayacct_freepages_end.exit
  %94 = ptrtoint ptr %compaction_ready49 to i32
  call void @__asan_load2_noabort(i32 %94)
  %bf.load50 = load i16, ptr %compaction_ready49, align 4
  %95 = and i16 %bf.load50, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %95)
  %tobool54.not = icmp eq i16 %95, 0
  br i1 %tobool54.not, label %if.end56, label %if.end48.cleanup_crit_edge

if.end48.cleanup_crit_edge:                       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end56:                                         ; preds = %if.end48
  %96 = and i16 %bf.load50, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %96)
  %tobool61.not = icmp eq i16 %96, 0
  br i1 %tobool61.not, label %if.end72, label %if.end56.retry.backedge_crit_edge

if.end56.retry.backedge_crit_edge:                ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #15
  br label %retry.backedge

retry.backedge:                                   ; preds = %if.end72.retry.backedge_crit_edge, %if.end56.retry.backedge_crit_edge
  %.sink160 = phi i16 [ -8577, %if.end72.retry.backedge_crit_edge ], [ -12289, %if.end56.retry.backedge_crit_edge ]
  %.sink = phi i16 [ 256, %if.end72.retry.backedge_crit_edge ], [ 8192, %if.end56.retry.backedge_crit_edge ]
  %97 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %97)
  store i8 %1, ptr %priority, align 1
  %bf.set67 = and i16 %bf.load50, %.sink160
  %bf.clear70 = or i16 %bf.set67, %.sink
  %98 = ptrtoint ptr %compaction_ready49 to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 %bf.clear70, ptr %compaction_ready49, align 4
  br label %retry

if.end72:                                         ; preds = %if.end56
  %99 = and i16 %bf.load50, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %99)
  %tobool77.not = icmp eq i16 %99, 0
  br i1 %tobool77.not, label %if.end72.cleanup_crit_edge, label %if.end72.retry.backedge_crit_edge

if.end72.retry.backedge_crit_edge:                ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #15
  br label %retry.backedge

if.end72.cleanup_crit_edge:                       ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

cleanup:                                          ; preds = %if.end72.cleanup_crit_edge, %if.end48.cleanup_crit_edge, %delayacct_freepages_end.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %93, %delayacct_freepages_end.exit.cleanup_crit_edge ], [ 1, %if.end48.cleanup_crit_edge ], [ 0, %if.end72.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_direct_reclaim_end(i32 noundef %nr_reclaimed) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_direct_reclaim_end, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_direct_reclaim_end, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !628
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_direct_reclaim_end, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nr_reclaimed) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !629
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !629
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_direct_reclaim_end, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_direct_reclaim_end.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_direct_reclaim_end.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 181, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mem_cgroup_shrink_node(ptr noundef %memcg, i32 noundef %gfp_mask, i1 noundef zeroext %noswap, ptr noundef %pgdat, ptr nocapture noundef writeonly %nr_scanned) local_unnamed_addr #0 align 64 {
entry:
  %sc = alloca %struct.scan_control, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@mem_cgroup_shrink_node, %if.then.i)) #13
          to label %if.end.i [label %if.then.i], !srcloc !567

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %__lruvec.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 26
  br label %out.i

if.end.i:                                         ; preds = %entry
  %tobool.not.i = icmp eq ptr %memcg, null
  br i1 %tobool.not.i, label %if.then1.i, label %if.end.i.if.end2.i_crit_edge

if.end.i.if.end2.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end2.i

if.then1.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %0 = load ptr, ptr @root_mem_cgroup, align 4
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.then1.i, %if.end.i.if.end2.i_crit_edge
  %memcg.addr.0.i = phi ptr [ %memcg, %if.end.i.if.end2.i_crit_edge ], [ %0, %if.then1.i ]
  %node_id.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %1 = ptrtoint ptr %node_id.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %node_id.i, align 64
  %arrayidx.i = getelementptr %struct.mem_cgroup, ptr %memcg.addr.0.i, i32 0, i32 45, i32 %2
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx.i, align 4
  br label %out.i

out.i:                                            ; preds = %if.end2.i, %if.then.i
  %lruvec.0.i = phi ptr [ %__lruvec.i, %if.then.i ], [ %4, %if.end2.i ]
  %pgdat4.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 7
  %5 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pgdat4.i, align 4
  %cmp.not.i = icmp eq ptr %6, %pgdat
  br i1 %cmp.not.i, label %out.i.mem_cgroup_lruvec.exit_crit_edge, label %if.then7.i, !prof !557

out.i.mem_cgroup_lruvec.exit_crit_edge:           ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mem_cgroup_lruvec.exit

if.then7.i:                                       ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  %7 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %pgdat, ptr %pgdat4.i, align 4
  br label %mem_cgroup_lruvec.exit

mem_cgroup_lruvec.exit:                           ; preds = %if.then7.i, %out.i.mem_cgroup_lruvec.exit_crit_edge
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %sc) #13
  %8 = getelementptr inbounds i8, ptr %sc, i32 24
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %8, align 4, !annotation !559
  %10 = ptrtoint ptr %sc to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 32, ptr %sc, align 4
  %nodemask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 1
  %11 = ptrtoint ptr %nodemask to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %nodemask, align 4
  %target_mem_cgroup = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %12 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %memcg, ptr %target_mem_cgroup, align 4
  %anon_cost = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 3
  %13 = ptrtoint ptr %anon_cost to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %anon_cost, align 4
  %file_cost = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 4
  %14 = ptrtoint ptr %file_cost to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %file_cost, align 4
  %may_deactivate = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @laptop_mode to i32))
  %15 = load i32, ptr @laptop_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not = icmp eq i32 %15, 0
  %bf.shl = select i1 %tobool.not, i16 2048, i16 0
  %bf.set12 = select i1 %noswap, i16 1027, i16 1539
  %bf.set20 = or i16 %bf.set12, %bf.shl
  %16 = ptrtoint ptr %may_deactivate to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %bf.set20, ptr %may_deactivate, align 4
  %order = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 6
  %17 = ptrtoint ptr %order to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 0, ptr %order, align 2
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %18 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %priority, align 1
  %reclaim_idx = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %19 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 3, ptr %reclaim_idx, align 4
  %20 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %21 = call ptr @memset(ptr %20, i32 0, i32 40)
  %22 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task, align 8
  %reclaim_state45 = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 149
  %26 = ptrtoint ptr %reclaim_state45 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %reclaim_state45, align 16
  %tobool46.not = icmp eq ptr %27, null
  br i1 %tobool46.not, label %land.rhs, label %mem_cgroup_lruvec.exit.if.end83_crit_edge

mem_cgroup_lruvec.exit.if.end83_crit_edge:        ; preds = %mem_cgroup_lruvec.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end83

land.rhs:                                         ; preds = %mem_cgroup_lruvec.exit
  %.b100 = load i1, ptr @mem_cgroup_shrink_node.__already_done, align 1
  br i1 %.b100, label %land.rhs.if.end83_crit_edge, label %if.then, !prof !557

land.rhs.if.end83_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end83

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @mem_cgroup_shrink_node.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 3851, i32 noundef 9, ptr noundef null) #13
  br label %if.end83

if.end83:                                         ; preds = %if.then, %land.rhs.if.end83_crit_edge, %mem_cgroup_lruvec.exit.if.end83_crit_edge
  %gfp_mask42 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %nr_reclaimed = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 11
  %nr_scanned43 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %and = and i32 %gfp_mask, 34336480
  %or = or i32 %and, 17825802
  %28 = ptrtoint ptr %gfp_mask42 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %or, ptr %gfp_mask42, align 4
  %29 = ptrtoint ptr %order to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %order, align 2
  %conv = sext i8 %30 to i32
  tail call fastcc void @trace_mm_vmscan_memcg_softlimit_reclaim_begin(i32 noundef %conv, i32 noundef %or)
  call fastcc void @shrink_lruvec(ptr noundef %lruvec.0.i, ptr noundef nonnull %sc)
  %31 = ptrtoint ptr %nr_reclaimed to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %nr_reclaimed, align 4
  call fastcc void @trace_mm_vmscan_memcg_softlimit_reclaim_end(i32 noundef %32)
  %33 = ptrtoint ptr %nr_scanned43 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %nr_scanned43, align 4
  %35 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %nr_scanned, align 4
  %36 = ptrtoint ptr %nr_reclaimed to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %nr_reclaimed, align 4
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %sc) #13
  ret i32 %37
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_memcg_softlimit_reclaim_begin(i32 noundef %order, i32 noundef %gfp_flags) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_memcg_softlimit_reclaim_begin, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !630
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %order, i32 noundef %gfp_flags) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !631
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !631
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_memcg_softlimit_reclaim_begin.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_memcg_softlimit_reclaim_begin.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 156, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @shrink_lruvec(ptr noundef %lruvec, ptr noundef %sc) unnamed_addr #0 align 64 {
entry:
  %nr = alloca [5 x i32], align 4
  %targets = alloca [5 x i32], align 4
  %plug = alloca %struct.blk_plug, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %nr) #13
  %0 = getelementptr inbounds [5 x i32], ptr %nr, i32 0, i32 1
  %1 = getelementptr inbounds [5 x i32], ptr %nr, i32 0, i32 2
  %2 = getelementptr inbounds [5 x i32], ptr %nr, i32 0, i32 3
  %3 = call ptr @memset(ptr %nr, i32 255, i32 20)
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %targets) #13
  %4 = getelementptr inbounds [5 x i32], ptr %targets, i32 0, i32 1
  %5 = getelementptr inbounds [5 x i32], ptr %targets, i32 0, i32 2
  %6 = getelementptr inbounds [5 x i32], ptr %targets, i32 0, i32 3
  %7 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sc, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %plug) #13
  %9 = call ptr @memset(ptr %plug, i32 255, i32 24)
  call fastcc void @get_scan_count(ptr noundef %lruvec, ptr noundef %sc, ptr noundef nonnull %nr)
  %10 = call ptr @memcpy(ptr %targets, ptr %nr, i32 20)
  %target_mem_cgroup.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %11 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %target_mem_cgroup.i, align 4
  %tobool.i.not = icmp eq ptr %12, null
  br i1 %tobool.i.not, label %land.lhs.true, label %entry.land.end_crit_edge

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end

land.lhs.true:                                    ; preds = %entry
  %13 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %18, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %land.rhs, label %land.lhs.true.land.end_crit_edge

land.lhs.true.land.end_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %19 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %priority, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %20)
  %cmp = icmp eq i8 %20, 12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.land.end_crit_edge, %entry.land.end_crit_edge
  %21 = phi i1 [ false, %land.lhs.true.land.end_crit_edge ], [ false, %entry.land.end_crit_edge ], [ %cmp, %land.rhs ]
  call void @blk_start_plug(ptr noundef nonnull %plug) #13
  %may_deactivate.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.end54, %land.end
  %scan_adjusted.0.off0.ph = phi i1 [ true, %if.end54 ], [ %21, %land.end ]
  %nr_reclaimed.0.ph = phi i32 [ %nr_reclaimed.2, %if.end54 ], [ 0, %land.end ]
  br label %while.cond

while.cond:                                       ; preds = %for.end.while.cond_crit_edge, %while.cond.outer
  %nr_reclaimed.0 = phi i32 [ %nr_reclaimed.2, %for.end.while.cond_crit_edge ], [ %nr_reclaimed.0.ph, %while.cond.outer ]
  %22 = ptrtoint ptr %nr to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %nr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool6.not = icmp eq i32 %23, 0
  br i1 %tobool6.not, label %lor.lhs.false, label %while.cond.for.body.preheader_crit_edge

while.cond.for.body.preheader_crit_edge:          ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.preheader

lor.lhs.false:                                    ; preds = %while.cond
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool8.not = icmp eq i32 %25, 0
  br i1 %tobool8.not, label %lor.rhs, label %lor.lhs.false.for.body.preheader_crit_edge

lor.lhs.false.for.body.preheader_crit_edge:       ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.preheader

lor.rhs:                                          ; preds = %lor.lhs.false
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool10.not = icmp eq i32 %27, 0
  br i1 %tobool10.not, label %lor.rhs.while.end_crit_edge, label %lor.rhs.for.body.preheader_crit_edge

lor.rhs.for.body.preheader_crit_edge:             ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.preheader

lor.rhs.while.end_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

for.body.preheader:                               ; preds = %lor.rhs.for.body.preheader_crit_edge, %lor.lhs.false.for.body.preheader_crit_edge, %while.cond.for.body.preheader_crit_edge
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.preheader
  %lru.0178 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %nr_reclaimed.1177 = phi i32 [ %nr_reclaimed.2, %for.inc.for.body_crit_edge ], [ %nr_reclaimed.0, %for.body.preheader ]
  %arrayidx13 = getelementptr [5 x i32], ptr %nr, i32 0, i32 %lru.0178
  %28 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx13, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool14.not = icmp eq i32 %29, 0
  br i1 %tobool14.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then:                                          ; preds = %for.body
  %30 = call i32 @llvm.umin.i32(i32 %29, i32 32)
  %sub = sub i32 %29, %30
  %31 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %sub, ptr %arrayidx13, align 4
  %32 = and i32 %lru.0178, 2147483645
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %32)
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %if.then.i, label %if.end4.i

if.then.i:                                        ; preds = %if.then
  %34 = ptrtoint ptr %may_deactivate.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %bf.load.i = load i16, ptr %may_deactivate.i, align 4
  %bf.lshr.i = lshr i16 %bf.load.i, 14
  %bf.cast.i = zext i16 %bf.lshr.i to i32
  %35 = and i32 %lru.0178, 2147483646
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %35)
  %36 = icmp eq i32 %35, 2
  %conv.i = zext i1 %36 to i32
  %shl.i = shl nuw nsw i32 1, %conv.i
  %and.i162 = and i32 %shl.i, %bf.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i162)
  %tobool.not.i = icmp eq i32 %and.i162, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  call fastcc void @shrink_active_list(i32 noundef %30, ptr noundef %lruvec, ptr noundef %sc, i32 noundef %lru.0178) #13
  br label %shrink_list.exit

if.else.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %bf.set.i = or i16 %bf.load.i, 4096
  %37 = ptrtoint ptr %may_deactivate.i to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %bf.set.i, ptr %may_deactivate.i, align 4
  br label %shrink_list.exit

if.end4.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %call5.i = call fastcc i32 @shrink_inactive_list(i32 noundef %30, ptr noundef %lruvec, ptr noundef %sc, i32 noundef %lru.0178) #13
  br label %shrink_list.exit

shrink_list.exit:                                 ; preds = %if.end4.i, %if.else.i, %if.then2.i
  %retval.0.i = phi i32 [ %call5.i, %if.end4.i ], [ 0, %if.else.i ], [ 0, %if.then2.i ]
  %add = add i32 %retval.0.i, %nr_reclaimed.1177
  br label %for.inc

for.inc:                                          ; preds = %shrink_list.exit, %for.body.for.inc_crit_edge
  %nr_reclaimed.2 = phi i32 [ %add, %shrink_list.exit ], [ %nr_reclaimed.1177, %for.body.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %lru.0178, 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__might_resched(ptr noundef nonnull @.str.21, i32 noundef 2988, i32 noundef 0) #13
  %call.i = call i32 @__cond_resched() #13
  call void @__sanitizer_cov_trace_cmp4(i32 %nr_reclaimed.2, i32 %8)
  %cmp22 = icmp ult i32 %nr_reclaimed.2, %8
  %brmerge = select i1 %cmp22, i1 true, i1 %scan_adjusted.0.off0.ph
  br i1 %brmerge, label %for.end.while.cond_crit_edge, label %if.end28

for.end.while.cond_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond

if.end28:                                         ; preds = %for.end
  %38 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %1, align 4
  %40 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %2, align 4
  %add31 = add i32 %41, %39
  %42 = ptrtoint ptr %nr to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %nr, align 4
  %44 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %0, align 4
  %add34 = add i32 %45, %43
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add31)
  %tobool35.not = icmp eq i32 %add31, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add34)
  %tobool37.not = icmp eq i32 %add34, 0
  %or.cond = select i1 %tobool35.not, i1 true, i1 %tobool37.not
  br i1 %or.cond, label %if.end28.while.end_crit_edge, label %if.end39

if.end28.while.end_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end39:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_cmp4(i32 %add31, i32 %add34)
  %cmp40 = icmp ugt i32 %add31, %add34
  br i1 %cmp40, label %if.then42, label %if.else

if.then42:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #15
  %46 = ptrtoint ptr %targets to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %targets, align 4
  br label %if.end54

if.else:                                          ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #15
  %48 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %5, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then42
  %.sink182 = phi ptr [ %6, %if.else ], [ %4, %if.then42 ]
  %.sink181 = phi i32 [ %49, %if.else ], [ %47, %if.then42 ]
  %add31.sink = phi i32 [ %add31, %if.else ], [ %add34, %if.then42 ]
  %cond60 = phi i32 [ 0, %if.else ], [ 2, %if.then42 ]
  %lru.1 = phi i32 [ 2, %if.else ], [ 0, %if.then42 ]
  %50 = ptrtoint ptr %.sink182 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %.sink182, align 4
  %add50 = add i32 %.sink181, 1
  %add51 = add i32 %add50, %51
  %mul52 = mul i32 %add31.sink, 100
  %div53 = udiv i32 %mul52, %add51
  %arrayidx55 = getelementptr [5 x i32], ptr %nr, i32 0, i32 %lru.1
  %52 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 0, ptr %arrayidx55, align 4
  %add56 = or i32 %lru.1, 1
  %arrayidx57 = getelementptr [5 x i32], ptr %nr, i32 0, i32 %add56
  %53 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %arrayidx57, align 4
  %arrayidx61 = getelementptr [5 x i32], ptr %targets, i32 0, i32 %cond60
  %54 = ptrtoint ptr %arrayidx61 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx61, align 4
  %arrayidx62 = getelementptr [5 x i32], ptr %nr, i32 0, i32 %cond60
  %56 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx62, align 4
  %sub63 = sub i32 %55, %57
  %sub65 = sub i32 100, %div53
  %mul66 = mul i32 %55, %sub65
  %div67 = udiv i32 %mul66, 100
  %58 = call i32 @llvm.usub.sat.i32(i32 %div67, i32 %sub63)
  %59 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %arrayidx62, align 4
  %add79 = or i32 %cond60, 1
  %arrayidx80 = getelementptr [5 x i32], ptr %targets, i32 0, i32 %add79
  %60 = ptrtoint ptr %arrayidx80 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx80, align 4
  %arrayidx81 = getelementptr [5 x i32], ptr %nr, i32 0, i32 %add79
  %62 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %arrayidx81, align 4
  %sub82 = sub i32 %61, %63
  %mul85 = mul i32 %61, %sub65
  %div86 = udiv i32 %mul85, 100
  %64 = call i32 @llvm.usub.sat.i32(i32 %div86, i32 %sub82)
  %65 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %64, ptr %arrayidx81, align 4
  br label %while.cond.outer

while.end:                                        ; preds = %if.end28.while.end_crit_edge, %lor.rhs.while.end_crit_edge
  %nr_reclaimed.3 = phi i32 [ %nr_reclaimed.0, %lor.rhs.while.end_crit_edge ], [ %nr_reclaimed.2, %if.end28.while.end_crit_edge ]
  call void @blk_finish_plug(ptr noundef nonnull %plug) #13
  %nr_reclaimed101 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 11
  %66 = ptrtoint ptr %nr_reclaimed101 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %nr_reclaimed101, align 4
  %add102 = add i32 %67, %nr_reclaimed.3
  store i32 %add102, ptr %nr_reclaimed101, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @total_swap_pages to i32))
  %68 = load i32, ptr @total_swap_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %cmp.i = icmp sgt i32 %68, 0
  br i1 %cmp.i, label %while.end.land.lhs.true106_crit_edge, label %if.end.i

while.end.land.lhs.true106_crit_edge:             ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true106

if.end.i:                                         ; preds = %while.end
  %pgdat.i = getelementptr inbounds %struct.lruvec, ptr %lruvec, i32 0, i32 7
  %69 = ptrtoint ptr %pgdat.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %pgdat.i, align 4
  %node_id.i = getelementptr inbounds %struct.pglist_data, ptr %70, i32 0, i32 8
  %71 = ptrtoint ptr %node_id.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %node_id.i, align 64
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @numa_demotion_enabled to i32))
  %73 = load i8, ptr @numa_demotion_enabled, align 1, !range !566
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %73)
  %tobool.not.i.i = icmp eq i8 %73, 0
  br i1 %tobool.not.i.i, label %if.end.i.if.end110_crit_edge, label %if.end.i.i

if.end.i.if.end110_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end110

if.end.i.i:                                       ; preds = %if.end.i
  %tobool1.not.i.i = icmp eq ptr %sc, null
  br i1 %tobool1.not.i.i, label %if.end.i.i.can_age_anon_pages.exit_crit_edge, label %if.then2.i.i

if.end.i.i.can_age_anon_pages.exit_crit_edge:     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_age_anon_pages.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  %74 = ptrtoint ptr %may_deactivate.i to i32
  call void @__asan_load2_noabort(i32 %74)
  %bf.load.i.i = load i16, ptr %may_deactivate.i, align 4
  %75 = and i16 %bf.load.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %75)
  %tobool3.not.i.i = icmp eq i16 %75, 0
  br i1 %tobool3.not.i.i, label %if.end5.i.i, label %if.then2.i.i.if.end110_crit_edge

if.then2.i.i.if.end110_crit_edge:                 ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end110

if.end5.i.i:                                      ; preds = %if.then2.i.i
  %76 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %target_mem_cgroup.i, align 4
  %tobool.i.not.i.i = icmp eq ptr %77, null
  br i1 %tobool.i.not.i.i, label %if.end5.i.i.can_age_anon_pages.exit_crit_edge, label %if.end5.i.i.if.end110_crit_edge

if.end5.i.i.if.end110_crit_edge:                  ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end110

if.end5.i.i.can_age_anon_pages.exit_crit_edge:    ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_age_anon_pages.exit

can_age_anon_pages.exit:                          ; preds = %if.end5.i.i.can_age_anon_pages.exit_crit_edge, %if.end.i.i.can_age_anon_pages.exit_crit_edge
  %call9.i.i = call i32 @next_demotion_node(i32 noundef %72) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call9.i.i)
  %cmp.i.i.not = icmp eq i32 %call9.i.i, -1
  br i1 %cmp.i.i.not, label %can_age_anon_pages.exit.if.end110_crit_edge, label %can_age_anon_pages.exit.land.lhs.true106_crit_edge

can_age_anon_pages.exit.land.lhs.true106_crit_edge: ; preds = %can_age_anon_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true106

can_age_anon_pages.exit.if.end110_crit_edge:      ; preds = %can_age_anon_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end110

land.lhs.true106:                                 ; preds = %can_age_anon_pages.exit.land.lhs.true106_crit_edge, %while.end.land.lhs.true106_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_lruvec, %if.then.i.i)) #13
          to label %if.end.i.i164 [label %if.then.i.i], !srcloc !567

if.then.i.i:                                      ; preds = %land.lhs.true106
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_node_stat to i32))
  %78 = load volatile i32, ptr @vm_node_stat, align 4
  %79 = call i32 @llvm.smax.i32(i32 %78, i32 0) #13
  br label %lruvec_page_state.exit.i

if.end.i.i164:                                    ; preds = %land.lhs.true106
  call void @__sanitizer_cov_trace_pc() #15
  %lruvec_stats.i.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec, i32 0, i32 2
  %80 = ptrtoint ptr %lruvec_stats.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %lruvec_stats.i.i, align 4
  br label %lruvec_page_state.exit.i

lruvec_page_state.exit.i:                         ; preds = %if.end.i.i164, %if.then.i.i
  %retval.0.i.i = phi i32 [ %79, %if.then.i.i ], [ %81, %if.end.i.i164 ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_lruvec, %if.then.i12.i)) #13
          to label %if.end.i21.i [label %if.then.i12.i], !srcloc !567

if.then.i12.i:                                    ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i17.i = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1) to i32))
  %82 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), align 4
  %83 = call i32 @llvm.smax.i32(i32 %82, i32 0) #13
  br label %lruvec_page_state.exit23.i

if.end.i21.i:                                     ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i20.i = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec, i32 0, i32 2, i32 0, i32 1
  %84 = ptrtoint ptr %arrayidx.i20.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %arrayidx.i20.i, align 4
  br label %lruvec_page_state.exit23.i

lruvec_page_state.exit23.i:                       ; preds = %if.end.i21.i, %if.then.i12.i
  %retval.0.i22.i = phi i32 [ %83, %if.then.i12.i ], [ %85, %if.end.i21.i ]
  %add4.i = add i32 %retval.0.i22.i, %retval.0.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 262144, i32 %add4.i)
  %tobool.not.i165 = icmp ult i32 %add4.i, 262144
  br i1 %tobool.not.i165, label %lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge, label %if.then.i167

lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge: ; preds = %lruvec_page_state.exit23.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %inactive_is_low.exit

if.then.i167:                                     ; preds = %lruvec_page_state.exit23.i
  call void @__sanitizer_cov_trace_pc() #15
  %shr.i = lshr i32 %add4.i, 18
  %mul.i = mul nuw nsw i32 %shr.i, 10
  %call5.i166 = call i32 @int_sqrt(i32 noundef %mul.i) #13
  br label %inactive_is_low.exit

inactive_is_low.exit:                             ; preds = %if.then.i167, %lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge
  %inactive_ratio.0.i = phi i32 [ %call5.i166, %if.then.i167 ], [ 1, %lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge ]
  %mul6.i = mul i32 %inactive_ratio.0.i, %retval.0.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %mul6.i, i32 %retval.0.i22.i)
  %cmp.i168 = icmp ult i32 %mul6.i, %retval.0.i22.i
  br i1 %cmp.i168, label %if.then109, label %inactive_is_low.exit.if.end110_crit_edge

inactive_is_low.exit.if.end110_crit_edge:         ; preds = %inactive_is_low.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end110

if.then109:                                       ; preds = %inactive_is_low.exit
  call void @__sanitizer_cov_trace_pc() #15
  call fastcc void @shrink_active_list(i32 noundef 32, ptr noundef %lruvec, ptr noundef %sc, i32 noundef 1)
  br label %if.end110

if.end110:                                        ; preds = %if.then109, %inactive_is_low.exit.if.end110_crit_edge, %can_age_anon_pages.exit.if.end110_crit_edge, %if.end5.i.i.if.end110_crit_edge, %if.then2.i.i.if.end110_crit_edge, %if.end.i.if.end110_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %plug) #13
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %targets) #13
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %nr) #13
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_memcg_softlimit_reclaim_end(i32 noundef %nr_reclaimed) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_memcg_softlimit_reclaim_end, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !632
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nr_reclaimed) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !633
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !633
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_memcg_softlimit_reclaim_end.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_memcg_softlimit_reclaim_end.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 196, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @try_to_free_mem_cgroup_pages(ptr noundef %memcg, i32 noundef %nr_pages, i32 noundef %gfp_mask, i1 noundef zeroext %may_swap) local_unnamed_addr #0 align 64 {
entry:
  %sc = alloca %struct.scan_control, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %sc) #13
  %0 = getelementptr inbounds i8, ptr %sc, i32 24
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4, !annotation !559
  %2 = tail call i32 @llvm.umax.i32(i32 %nr_pages, i32 32)
  %3 = ptrtoint ptr %sc to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %sc, align 4
  %nodemask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 1
  %4 = ptrtoint ptr %nodemask to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %nodemask, align 4
  %target_mem_cgroup = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %5 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %memcg, ptr %target_mem_cgroup, align 4
  %anon_cost = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 3
  %6 = ptrtoint ptr %anon_cost to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %anon_cost, align 4
  %file_cost = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 4
  %7 = ptrtoint ptr %file_cost to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %file_cost, align 4
  %may_deactivate = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @laptop_mode to i32))
  %8 = load i32, ptr @laptop_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  %bf.shl = select i1 %tobool.not, i16 2048, i16 0
  %bf.set12 = select i1 %may_swap, i16 1539, i16 1027
  %bf.set19 = or i16 %bf.set12, %bf.shl
  %9 = ptrtoint ptr %may_deactivate to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %bf.set19, ptr %may_deactivate, align 4
  %order = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 6
  %10 = ptrtoint ptr %order to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 0, ptr %order, align 2
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %11 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 12, ptr %priority, align 1
  %reclaim_idx = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %12 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 3, ptr %reclaim_idx, align 4
  %gfp_mask41 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %13 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %flags1.i, align 4
  %and.i = and i32 %18, 269221888
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.current_gfp_context.exit_crit_edge, label %if.then.i, !prof !557

entry.current_gfp_context.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %current_gfp_context.exit

if.then.i:                                        ; preds = %entry
  %and4.i = and i32 %18, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %if.else.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %and7.i = and i32 %gfp_mask, -193
  br label %if.end12.i

if.else.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %and8.i = and i32 %18, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  %and11.i = and i32 %gfp_mask, -129
  %spec.select.i = select i1 %tobool9.not.i, i32 %gfp_mask, i32 %and11.i
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else.i, %if.then6.i
  %flags.addr.0.i = phi i32 [ %and7.i, %if.then6.i ], [ %spec.select.i, %if.else.i ]
  %and13.i = and i32 %18, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13.i)
  %tobool14.not.i = icmp eq i32 %and13.i, 0
  %and16.i = and i32 %flags.addr.0.i, -9
  %spec.select25.i = select i1 %tobool14.not.i, i32 %flags.addr.0.i, i32 %and16.i
  br label %current_gfp_context.exit

current_gfp_context.exit:                         ; preds = %if.end12.i, %entry.current_gfp_context.exit_crit_edge
  %flags.addr.1.i = phi i32 [ %gfp_mask, %entry.current_gfp_context.exit_crit_edge ], [ %spec.select25.i, %if.end12.i ]
  %and = and i32 %flags.addr.1.i, 34336480
  %or = or i32 %and, 17825802
  %19 = ptrtoint ptr %gfp_mask41 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %or, ptr %gfp_mask41, align 4
  %nr_scanned = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %reclaim_state = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 13
  %20 = call ptr @memset(ptr %nr_scanned, i32 0, i32 40)
  %21 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i56 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i56 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task, align 8
  %tobool.not.i57 = icmp eq ptr %reclaim_state, null
  %reclaim_state42.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 149
  %25 = ptrtoint ptr %reclaim_state42.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %reclaim_state42.i, align 16
  %tobool43.not.i = icmp eq ptr %26, null
  br i1 %tobool.not.i57, label %land.rhs41.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %current_gfp_context.exit
  br i1 %tobool43.not.i, label %land.rhs.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs4.i

land.rhs.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs4.i:                                      ; preds = %land.rhs.i
  %.b110.i = load i1, ptr @set_task_reclaim_state.__already_done, align 1
  br i1 %.b110.i, label %land.rhs4.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs4.i.if.end91.sink.split.i_crit_edge, !prof !557

land.rhs4.i.if.end91.sink.split.i_crit_edge:      ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end91.sink.split.i

land.rhs4.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs41.critedge.i:                            ; preds = %current_gfp_context.exit
  br i1 %tobool43.not.i, label %land.rhs53.i, label %land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge

land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs41.critedge.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs53.i:                                     ; preds = %land.rhs41.critedge.i
  %.b108109.i = load i1, ptr @set_task_reclaim_state.__already_done.177, align 1
  br i1 %.b108109.i, label %land.rhs53.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs53.i.if.end91.sink.split.i_crit_edge, !prof !557

land.rhs53.i.if.end91.sink.split.i_crit_edge:     ; preds = %land.rhs53.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end91.sink.split.i

land.rhs53.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs53.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

if.end91.sink.split.i:                            ; preds = %land.rhs53.i.if.end91.sink.split.i_crit_edge, %land.rhs4.i.if.end91.sink.split.i_crit_edge
  %set_task_reclaim_state.__already_done.sink.i = phi ptr [ @set_task_reclaim_state.__already_done, %land.rhs4.i.if.end91.sink.split.i_crit_edge ], [ @set_task_reclaim_state.__already_done.177, %land.rhs53.i.if.end91.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 183, %land.rhs4.i.if.end91.sink.split.i_crit_edge ], [ 186, %land.rhs53.i.if.end91.sink.split.i_crit_edge ]
  %27 = ptrtoint ptr %set_task_reclaim_state.__already_done.sink.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i1 true, ptr %set_task_reclaim_state.__already_done.sink.i, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef %.sink.i, i32 noundef 9, ptr noundef null) #13
  br label %set_task_reclaim_state.exit

set_task_reclaim_state.exit:                      ; preds = %if.end91.sink.split.i, %land.rhs53.i.set_task_reclaim_state.exit_crit_edge, %land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge, %land.rhs4.i.set_task_reclaim_state.exit_crit_edge, %land.rhs.i.set_task_reclaim_state.exit_crit_edge
  %28 = ptrtoint ptr %reclaim_state42.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %reclaim_state, ptr %reclaim_state42.i, align 16
  %29 = ptrtoint ptr %gfp_mask41 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %gfp_mask41, align 4
  call fastcc void @trace_mm_vmscan_memcg_reclaim_begin(i32 noundef %30)
  %31 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i58 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i58 to ptr
  %task.i59 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %task.i59 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i59, align 8
  %flags1.i60 = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 3
  %35 = ptrtoint ptr %flags1.i60 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %flags1.i60, align 4
  %and.i61 = and i32 %36, 2048
  %or.i = or i32 %36, 2048
  store i32 %or.i, ptr %flags1.i60, align 4
  %call50 = call fastcc i32 @do_try_to_free_pages(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), ptr noundef nonnull %sc)
  %37 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i62 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i62 to ptr
  %task.i63 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 2
  %39 = ptrtoint ptr %task.i63 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %task.i63, align 8
  %flags1.i64 = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 3
  %41 = ptrtoint ptr %flags1.i64 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %flags1.i64, align 4
  %and.i65 = and i32 %42, -2049
  %or.i66 = or i32 %and.i65, %and.i61
  store i32 %or.i66, ptr %flags1.i64, align 4
  call fastcc void @trace_mm_vmscan_memcg_reclaim_end(i32 noundef %call50)
  %43 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %task, align 8
  %reclaim_state42.i67 = getelementptr inbounds %struct.task_struct, ptr %44, i32 0, i32 149
  %45 = ptrtoint ptr %reclaim_state42.i67 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %reclaim_state42.i67, align 16
  %tobool43.not.i68 = icmp eq ptr %46, null
  br i1 %tobool43.not.i68, label %land.rhs53.i71, label %set_task_reclaim_state.exit.set_task_reclaim_state.exit76_crit_edge

set_task_reclaim_state.exit.set_task_reclaim_state.exit76_crit_edge: ; preds = %set_task_reclaim_state.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit76

land.rhs53.i71:                                   ; preds = %set_task_reclaim_state.exit
  %.b108109.i70 = load i1, ptr @set_task_reclaim_state.__already_done.177, align 1
  br i1 %.b108109.i70, label %land.rhs53.i71.set_task_reclaim_state.exit76_crit_edge, label %if.end91.sink.split.i74, !prof !557

land.rhs53.i71.set_task_reclaim_state.exit76_crit_edge: ; preds = %land.rhs53.i71
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit76

if.end91.sink.split.i74:                          ; preds = %land.rhs53.i71
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @set_task_reclaim_state.__already_done.177, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 186, i32 noundef 9, ptr noundef null) #13
  br label %set_task_reclaim_state.exit76

set_task_reclaim_state.exit76:                    ; preds = %if.end91.sink.split.i74, %land.rhs53.i71.set_task_reclaim_state.exit76_crit_edge, %set_task_reclaim_state.exit.set_task_reclaim_state.exit76_crit_edge
  %47 = ptrtoint ptr %reclaim_state42.i67 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %reclaim_state42.i67, align 16
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %sc) #13
  ret i32 %call50
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_memcg_reclaim_begin(i32 noundef %gfp_flags) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_reclaim_begin, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_memcg_reclaim_begin, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !634
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_reclaim_begin, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef 0, i32 noundef %gfp_flags) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !635
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !635
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !557

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_reclaim_begin, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_mm_vmscan_memcg_reclaim_begin.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_memcg_reclaim_begin.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 149, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_memcg_reclaim_end(i32 noundef %nr_reclaimed) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_reclaim_end, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_memcg_reclaim_end, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !636
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_reclaim_end, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nr_reclaimed) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !637
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !637
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_memcg_reclaim_end, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_memcg_reclaim_end.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_memcg_reclaim_end.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 189, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wakeup_kswapd(ptr noundef %zone, i32 noundef %gfp_flags, i32 noundef %order, i32 noundef %highest_zoneidx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %managed_pages.i.i = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #13
  %0 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %managed_pages.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_enabled_key, ptr blockaddress(@wakeup_kswapd, %if.then.i)) #13
          to label %if.end3 [label %if.then.i], !srcloc !567

if.then.i:                                        ; preds = %if.end
  %call1.i.i = tail call zeroext i1 @__cpuset_node_allowed(i32 noundef 0, i32 noundef %gfp_flags) #13
  br i1 %call1.i.i, label %if.then.i.if.end3_crit_edge, label %if.then.i.cleanup_crit_edge

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then.i.if.end3_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

if.end3:                                          ; preds = %if.then.i.if.end3_crit_edge, %if.end
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone, i32 0, i32 4
  %2 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %zone_pgdat, align 4
  %kswapd_highest_zoneidx = getelementptr inbounds %struct.pglist_data, ptr %3, i32 0, i32 16
  %4 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %kswapd_highest_zoneidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %5)
  %cmp = icmp eq i32 %5, 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %highest_zoneidx)
  %cmp4 = icmp ult i32 %5, %highest_zoneidx
  %or.cond = or i1 %cmp, %cmp4
  br i1 %or.cond, label %do.body10, label %if.end3.do.end19_crit_edge

if.end3.do.end19_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end19

do.body10:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  %6 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 %highest_zoneidx, ptr %kswapd_highest_zoneidx, align 4
  br label %do.end19

do.end19:                                         ; preds = %do.body10, %if.end3.do.end19_crit_edge
  %kswapd_order = getelementptr inbounds %struct.pglist_data, ptr %3, i32 0, i32 15
  %7 = ptrtoint ptr %kswapd_order to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %kswapd_order, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %order)
  %cmp21 = icmp slt i32 %8, %order
  br i1 %cmp21, label %do.body27, label %do.end19.if.end33_crit_edge

do.end19.if.end33_crit_edge:                      ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end33

do.body27:                                        ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #15
  %9 = ptrtoint ptr %kswapd_order to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 %order, ptr %kswapd_order, align 8
  br label %if.end33

if.end33:                                         ; preds = %do.body27, %do.end19.if.end33_crit_edge
  %kswapd_wait = getelementptr inbounds %struct.pglist_data, ptr %3, i32 0, i32 9
  %head.i = getelementptr inbounds %struct.pglist_data, ptr %3, i32 0, i32 9, i32 1
  %10 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %head.i, align 4
  %cmp.i.i.not = icmp eq ptr %11, %head.i
  br i1 %cmp.i.i.not, label %if.end33.cleanup_crit_edge, label %if.end36

if.end33.cleanup_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end36:                                         ; preds = %if.end33
  %kswapd_failures = getelementptr inbounds %struct.pglist_data, ptr %3, i32 0, i32 17
  %12 = ptrtoint ptr %kswapd_failures to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %kswapd_failures, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %13)
  %cmp37 = icmp sgt i32 %13, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %highest_zoneidx)
  %cmp.not17.i = icmp slt i32 %highest_zoneidx, 0
  %or.cond86 = or i1 %cmp.not17.i, %cmp37
  br i1 %or.cond86, label %if.end36.if.then41_crit_edge, label %if.end36.for.body.i_crit_edge

if.end36.for.body.i_crit_edge:                    ; preds = %if.end36
  br label %for.body.i

if.end36.if.then41_crit_edge:                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then41

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end36.for.body.i_crit_edge
  %mark.020.i = phi i32 [ %mark.1.i, %for.inc.i.for.body.i_crit_edge ], [ -1, %if.end36.for.body.i_crit_edge ]
  %i.018.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end36.for.body.i_crit_edge ]
  %managed_pages.i.i.i = getelementptr %struct.zone, ptr %3, i32 %i.018.i, i32 11
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i, i32 noundef 4) #13
  %14 = ptrtoint ptr %managed_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %managed_pages.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i.not.i = icmp eq i32 %15, 0
  br i1 %tobool.i.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %add.ptr.i = getelementptr %struct.zone, ptr %3, i32 %i.018.i
  %arrayidx.i = getelementptr [3 x i32], ptr %add.ptr.i, i32 0, i32 2
  %16 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i, align 8
  %watermark_boost.i = getelementptr %struct.zone, ptr %3, i32 %i.018.i, i32 1
  %18 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %watermark_boost.i, align 4
  %add.i = add i32 %19, %17
  %call1.i = tail call zeroext i1 @zone_watermark_ok_safe(ptr noundef %add.ptr.i, i32 noundef %order, i32 noundef %add.i, i32 noundef %highest_zoneidx) #13
  br i1 %call1.i, label %if.end.i.land.lhs.true_crit_edge, label %if.end.i.for.inc.i_crit_edge

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end.i.land.lhs.true_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

for.inc.i:                                        ; preds = %if.end.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %mark.1.i = phi i32 [ %add.i, %if.end.i.for.inc.i_crit_edge ], [ %mark.020.i, %for.body.i.for.inc.i_crit_edge ]
  %inc.i = add i32 %i.018.i, 1
  %cmp.not.i = icmp sgt i32 %inc.i, %highest_zoneidx
  br i1 %cmp.not.i, label %pgdat_balanced.exit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

pgdat_balanced.exit:                              ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %mark.1.i)
  %cmp4.i = icmp eq i32 %mark.1.i, -1
  br i1 %cmp4.i, label %pgdat_balanced.exit.land.lhs.true_crit_edge, label %pgdat_balanced.exit.if.end45_crit_edge

pgdat_balanced.exit.if.end45_crit_edge:           ; preds = %pgdat_balanced.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end45

pgdat_balanced.exit.land.lhs.true_crit_edge:      ; preds = %pgdat_balanced.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %pgdat_balanced.exit.land.lhs.true_crit_edge, %if.end.i.land.lhs.true_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %highest_zoneidx)
  %cmp7.i = icmp sgt i32 %highest_zoneidx, -1
  br i1 %cmp7.i, label %land.lhs.true.for.body.i76_crit_edge, label %land.lhs.true.if.then41_crit_edge

land.lhs.true.if.then41_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then41

land.lhs.true.for.body.i76_crit_edge:             ; preds = %land.lhs.true
  br label %for.body.i76

for.body.i76:                                     ; preds = %for.inc.i79.for.body.i76_crit_edge, %land.lhs.true.for.body.i76_crit_edge
  %i.08.i = phi i32 [ %dec.i, %for.inc.i79.for.body.i76_crit_edge ], [ %highest_zoneidx, %land.lhs.true.for.body.i76_crit_edge ]
  %managed_pages.i.i.i73 = getelementptr %struct.zone, ptr %3, i32 %i.08.i, i32 11
  %call.i.i.i.i.i74 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i73, i32 noundef 4) #13
  %20 = ptrtoint ptr %managed_pages.i.i.i73 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %managed_pages.i.i.i73, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.i.not.i75 = icmp eq i32 %21, 0
  br i1 %tobool.i.not.i75, label %for.body.i76.for.inc.i79_crit_edge, label %if.end.i78

for.body.i76.for.inc.i79_crit_edge:               ; preds = %for.body.i76
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i79

if.end.i78:                                       ; preds = %for.body.i76
  %watermark_boost.i77 = getelementptr %struct.zone, ptr %3, i32 %i.08.i, i32 1
  %22 = ptrtoint ptr %watermark_boost.i77 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %watermark_boost.i77, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not.i = icmp eq i32 %23, 0
  br i1 %tobool.not.i, label %if.end.i78.for.inc.i79_crit_edge, label %if.end.i78.if.end45_crit_edge

if.end.i78.if.end45_crit_edge:                    ; preds = %if.end.i78
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end45

if.end.i78.for.inc.i79_crit_edge:                 ; preds = %if.end.i78
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i79

for.inc.i79:                                      ; preds = %if.end.i78.for.inc.i79_crit_edge, %for.body.i76.for.inc.i79_crit_edge
  %dec.i = add nsw i32 %i.08.i, -1
  %cmp.i = icmp sgt i32 %i.08.i, 0
  br i1 %cmp.i, label %for.inc.i79.for.body.i76_crit_edge, label %for.inc.i79.if.then41_crit_edge

for.inc.i79.if.then41_crit_edge:                  ; preds = %for.inc.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then41

for.inc.i79.for.body.i76_crit_edge:               ; preds = %for.inc.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i76

if.then41:                                        ; preds = %for.inc.i79.if.then41_crit_edge, %land.lhs.true.if.then41_crit_edge, %if.end36.if.then41_crit_edge
  %and = and i32 %gfp_flags, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool42.not = icmp eq i32 %and, 0
  br i1 %tobool42.not, label %if.then43, label %if.then41.cleanup_crit_edge

if.then41.cleanup_crit_edge:                      ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then43:                                        ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @wakeup_kcompactd(ptr noundef %3, i32 noundef %order, i32 noundef %highest_zoneidx) #13
  br label %cleanup

if.end45:                                         ; preds = %if.end.i78.if.end45_crit_edge, %pgdat_balanced.exit.if.end45_crit_edge
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %3, i32 0, i32 8
  %24 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %node_id, align 64
  tail call fastcc void @trace_mm_vmscan_wakeup_kswapd(i32 noundef %25, i32 noundef %highest_zoneidx, i32 noundef %order, i32 noundef %gfp_flags)
  tail call void @__wake_up(ptr noundef %kswapd_wait, i32 noundef 1, i32 noundef 1, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end45, %if.then43, %if.then41.cleanup_crit_edge, %if.end33.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wakeup_kcompactd(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_wakeup_kswapd(i32 noundef %nid, i32 noundef %zid, i32 noundef %order, i32 noundef %gfp_flags) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_wakeup_kswapd, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_wakeup_kswapd, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !638
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_wakeup_kswapd, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nid, i32 noundef %zid, i32 noundef %order, i32 noundef %gfp_flags) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !639
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !639
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_wakeup_kswapd, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_wakeup_kswapd.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_wakeup_kswapd.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 113, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @shrink_all_memory(i32 noundef %nr_to_reclaim) local_unnamed_addr #0 align 64 {
entry:
  %sc = alloca %struct.scan_control, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %sc) #13
  %0 = getelementptr inbounds i8, ptr %sc, i32 24
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4, !annotation !559
  %2 = ptrtoint ptr %sc to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %nr_to_reclaim, ptr %sc, align 4
  %nodemask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 1
  %may_deactivate = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %3 = call ptr @memset(ptr %nodemask, i32 0, i32 16)
  %4 = ptrtoint ptr %may_deactivate to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 3651, ptr %may_deactivate, align 4
  %order = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 6
  %5 = ptrtoint ptr %order to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %order, align 2
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %6 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 12, ptr %priority, align 1
  %reclaim_idx = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %7 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 3, ptr %reclaim_idx, align 4
  %gfp_mask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %8 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 17829066, ptr %gfp_mask, align 4
  %nr_scanned = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %reclaim_state = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 13
  %9 = call ptr @memset(ptr %nr_scanned, i32 0, i32 40)
  tail call void @fs_reclaim_acquire(i32 noundef 17829066) #13
  %10 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags1.i, align 4
  %or.i = or i32 %15, 2048
  store i32 %or.i, ptr %flags1.i, align 4
  %16 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i49 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i49 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task, align 8
  %tobool.not.i = icmp eq ptr %reclaim_state, null
  %reclaim_state42.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 149
  %20 = ptrtoint ptr %reclaim_state42.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %reclaim_state42.i, align 16
  %tobool43.not.i = icmp eq ptr %21, null
  br i1 %tobool.not.i, label %land.rhs41.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %entry
  br i1 %tobool43.not.i, label %land.rhs.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs4.i

land.rhs.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs4.i:                                      ; preds = %land.rhs.i
  %.b110.i = load i1, ptr @set_task_reclaim_state.__already_done, align 1
  br i1 %.b110.i, label %land.rhs4.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs4.i.if.end91.sink.split.i_crit_edge, !prof !557

land.rhs4.i.if.end91.sink.split.i_crit_edge:      ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end91.sink.split.i

land.rhs4.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs41.critedge.i:                            ; preds = %entry
  br i1 %tobool43.not.i, label %land.rhs53.i, label %land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge

land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs41.critedge.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs53.i:                                     ; preds = %land.rhs41.critedge.i
  %.b108109.i = load i1, ptr @set_task_reclaim_state.__already_done.177, align 1
  br i1 %.b108109.i, label %land.rhs53.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs53.i.if.end91.sink.split.i_crit_edge, !prof !557

land.rhs53.i.if.end91.sink.split.i_crit_edge:     ; preds = %land.rhs53.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end91.sink.split.i

land.rhs53.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs53.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

if.end91.sink.split.i:                            ; preds = %land.rhs53.i.if.end91.sink.split.i_crit_edge, %land.rhs4.i.if.end91.sink.split.i_crit_edge
  %set_task_reclaim_state.__already_done.sink.i = phi ptr [ @set_task_reclaim_state.__already_done, %land.rhs4.i.if.end91.sink.split.i_crit_edge ], [ @set_task_reclaim_state.__already_done.177, %land.rhs53.i.if.end91.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 183, %land.rhs4.i.if.end91.sink.split.i_crit_edge ], [ 186, %land.rhs53.i.if.end91.sink.split.i_crit_edge ]
  %22 = ptrtoint ptr %set_task_reclaim_state.__already_done.sink.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store i1 true, ptr %set_task_reclaim_state.__already_done.sink.i, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef %.sink.i, i32 noundef 9, ptr noundef null) #13
  br label %set_task_reclaim_state.exit

set_task_reclaim_state.exit:                      ; preds = %if.end91.sink.split.i, %land.rhs53.i.set_task_reclaim_state.exit_crit_edge, %land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge, %land.rhs4.i.set_task_reclaim_state.exit_crit_edge, %land.rhs.i.set_task_reclaim_state.exit_crit_edge
  %23 = ptrtoint ptr %reclaim_state42.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %reclaim_state, ptr %reclaim_state42.i, align 16
  %call45 = call fastcc i32 @do_try_to_free_pages(ptr noundef getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 1), ptr noundef nonnull %sc)
  %24 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task, align 8
  %reclaim_state42.i50 = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 149
  %26 = ptrtoint ptr %reclaim_state42.i50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %reclaim_state42.i50, align 16
  %tobool43.not.i51 = icmp eq ptr %27, null
  br i1 %tobool43.not.i51, label %land.rhs53.i54, label %set_task_reclaim_state.exit.set_task_reclaim_state.exit59_crit_edge

set_task_reclaim_state.exit.set_task_reclaim_state.exit59_crit_edge: ; preds = %set_task_reclaim_state.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit59

land.rhs53.i54:                                   ; preds = %set_task_reclaim_state.exit
  %.b108109.i53 = load i1, ptr @set_task_reclaim_state.__already_done.177, align 1
  br i1 %.b108109.i53, label %land.rhs53.i54.set_task_reclaim_state.exit59_crit_edge, label %if.end91.sink.split.i57, !prof !557

land.rhs53.i54.set_task_reclaim_state.exit59_crit_edge: ; preds = %land.rhs53.i54
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit59

if.end91.sink.split.i57:                          ; preds = %land.rhs53.i54
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @set_task_reclaim_state.__already_done.177, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 186, i32 noundef 9, ptr noundef null) #13
  br label %set_task_reclaim_state.exit59

set_task_reclaim_state.exit59:                    ; preds = %if.end91.sink.split.i57, %land.rhs53.i54.set_task_reclaim_state.exit59_crit_edge, %set_task_reclaim_state.exit.set_task_reclaim_state.exit59_crit_edge
  %and.i = and i32 %15, 2048
  %28 = ptrtoint ptr %reclaim_state42.i50 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %reclaim_state42.i50, align 16
  %29 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i60 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i60 to ptr
  %task.i61 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %task.i61 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %task.i61, align 8
  %flags1.i62 = getelementptr inbounds %struct.task_struct, ptr %32, i32 0, i32 3
  %33 = ptrtoint ptr %flags1.i62 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags1.i62, align 4
  %and.i63 = and i32 %34, -2049
  %or.i64 = or i32 %and.i63, %and.i
  store i32 %or.i64, ptr %flags1.i62, align 4
  %35 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %gfp_mask, align 4
  call void @fs_reclaim_release(i32 noundef %36) #13
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %sc) #13
  ret i32 %call45
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @fs_reclaim_acquire(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fs_reclaim_release(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kswapd_run(i32 noundef %nid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14) to i32))
  %0 = load ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @kswapd, ptr noundef nonnull @contig_page_data, i32 noundef -1, ptr noundef nonnull @.str.26, i32 noundef %nid) #13
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %do.body, label %if.end5

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call4 = tail call i32 @wake_up_process(ptr noundef %call1) #13
  br label %cleanup.sink.split

do.body:                                          ; preds = %if.end
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14) to i32))
  store ptr %call1, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %1 = load i32, ptr @system_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %cmp = icmp ult i32 %1, 3
  br i1 %cmp, label %do.body13, label %do.end22, !prof !558

do.body13:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4638, 0\0A.popsection", ""() #13, !srcloc !640
  unreachable

do.end22:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.27, i32 noundef %nid) #19
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %do.end22, %if.end5
  %call1.sink = phi ptr [ %call1, %if.end5 ], [ null, %do.end22 ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14) to i32))
  store ptr %call1.sink, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14), align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @kswapd(ptr noundef %p) #0 align 64 {
entry:
  %wait.i = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %call.i.i90 = tail call i32 @_find_first_bit_be(ptr noundef nonnull @__cpu_online_mask, i32 noundef %4) #13
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i90, i32 %4)
  %cmp4.i.i = icmp eq i32 %call.i.i90, %4
  br i1 %cmp4.i.i, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call i32 @set_cpus_allowed_ptr(ptr noundef %3, ptr noundef nonnull @__cpu_online_mask) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %flags = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 4
  %or = or i32 %6, 8521728
  store i32 %or, ptr %flags, align 4
  %call3 = tail call zeroext i1 @set_freezable() #13
  %kswapd_order = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 15
  %7 = ptrtoint ptr %kswapd_order to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 0, ptr %kswapd_order, align 8
  %kswapd_highest_zoneidx = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 16
  %8 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 4, ptr %kswapd_highest_zoneidx, align 4
  %nr_writeback_throttled = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 12
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_writeback_throttled, i32 noundef 4) #13
  %9 = ptrtoint ptr %nr_writeback_throttled to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 0, ptr %nr_writeback_throttled, align 4
  %10 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 1
  %11 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 2
  %12 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3
  %13 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3, i32 1
  %kswapd_wait.i = getelementptr inbounds %struct.pglist_data, ptr %p, i32 0, i32 9
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %if.end
  %highest_zoneidx.0 = phi i32 [ 3, %if.end ], [ %prev_highest_zoneidx..i97, %for.cond.backedge ]
  %14 = ptrtoint ptr %kswapd_order to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %kswapd_order, align 8
  %16 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %kswapd_highest_zoneidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %17)
  %cmp.i = icmp eq i32 %17, 4
  %prev_highest_zoneidx..i = select i1 %cmp.i, i32 %highest_zoneidx.0, i32 %17
  br label %kswapd_try_sleep

kswapd_try_sleep:                                 ; preds = %if.end55.kswapd_try_sleep_crit_edge, %for.cond
  %highest_zoneidx.1 = phi i32 [ %prev_highest_zoneidx..i, %for.cond ], [ %prev_highest_zoneidx..i97, %if.end55.kswapd_try_sleep_crit_edge ]
  %reclaim_order.0 = phi i32 [ %15, %for.cond ], [ %call57, %if.end55.kswapd_try_sleep_crit_edge ]
  %alloc_order.0 = phi i32 [ %15, %for.cond ], [ %60, %if.end55.kswapd_try_sleep_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait.i) #13
  %18 = ptrtoint ptr %wait.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %wait.i, align 4
  %19 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i91 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i91 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task.i, align 8
  %23 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %22, ptr %10, align 4
  %24 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @autoremove_wake_function, ptr %11, align 4
  %25 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %12, ptr %12, align 4
  %26 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %12, ptr %13, align 4
  %27 = load ptr, ptr %task.i, align 8
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %28 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i.i92 = icmp eq i32 %28, 0
  br i1 %tobool.not.i.i92, label %kswapd_try_sleep.lor.lhs.false.i_crit_edge, label %freezing.exit.i, !prof !557

kswapd_try_sleep.lor.lhs.false.i_crit_edge:       ; preds = %kswapd_try_sleep
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false.i

freezing.exit.i:                                  ; preds = %kswapd_try_sleep
  %call4.i.i = call zeroext i1 @freezing_slow_path(ptr noundef %27) #13
  br i1 %call4.i.i, label %freezing.exit.i.kswapd_try_to_sleep.exit_crit_edge, label %freezing.exit.i.lor.lhs.false.i_crit_edge

freezing.exit.i.lor.lhs.false.i_crit_edge:        ; preds = %freezing.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false.i

freezing.exit.i.kswapd_try_to_sleep.exit_crit_edge: ; preds = %freezing.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %kswapd_try_to_sleep.exit

lor.lhs.false.i:                                  ; preds = %freezing.exit.i.lor.lhs.false.i_crit_edge, %kswapd_try_sleep.lor.lhs.false.i_crit_edge
  %call7.i = call zeroext i1 @kthread_should_stop() #13
  br i1 %call7.i, label %lor.lhs.false.i.kswapd_try_to_sleep.exit_crit_edge, label %if.end.i

lor.lhs.false.i.kswapd_try_to_sleep.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %kswapd_try_to_sleep.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  call void @prepare_to_wait(ptr noundef %kswapd_wait.i, ptr noundef nonnull %wait.i, i32 noundef 1) #13
  %call8.i = call fastcc zeroext i1 @prepare_kswapd_sleep(ptr noundef %p, i32 noundef %reclaim_order.0, i32 noundef %highest_zoneidx.1) #13
  br i1 %call8.i, label %if.then9.i, label %if.end.i.land.lhs.true.i_crit_edge

if.end.i.land.lhs.true.i_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true.i

if.then9.i:                                       ; preds = %if.end.i
  call void @reset_isolation_suitable(ptr noundef %p) #13
  call void @wakeup_kcompactd(ptr noundef %p, i32 noundef %alloc_order.0, i32 noundef %highest_zoneidx.1) #13
  %call10.i = call i32 @schedule_timeout(i32 noundef 10) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.critedge.i, label %do.body13.i

do.body13.i:                                      ; preds = %if.then9.i
  %29 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %kswapd_highest_zoneidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %30)
  %cmp.i.i = icmp eq i32 %30, 4
  %prev_highest_zoneidx..i.i = select i1 %cmp.i.i, i32 %highest_zoneidx.1, i32 %30
  %31 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile i32 %prev_highest_zoneidx..i.i, ptr %kswapd_highest_zoneidx, align 4
  %32 = ptrtoint ptr %kswapd_order to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %kswapd_order, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %reclaim_order.0)
  %cmp.i93 = icmp slt i32 %33, %reclaim_order.0
  br i1 %cmp.i93, label %do.body27.i, label %do.body13.i.if.then45.critedge.i_crit_edge

do.body13.i.if.then45.critedge.i_crit_edge:       ; preds = %do.body13.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then45.critedge.i

do.body27.i:                                      ; preds = %do.body13.i
  call void @__sanitizer_cov_trace_pc() #15
  %34 = ptrtoint ptr %kswapd_order to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile i32 %reclaim_order.0, ptr %kswapd_order, align 8
  br label %if.then45.critedge.i

land.lhs.true.critedge.i:                         ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @finish_wait(ptr noundef %kswapd_wait.i, ptr noundef nonnull %wait.i) #13
  call void @prepare_to_wait(ptr noundef %kswapd_wait.i, ptr noundef nonnull %wait.i, i32 noundef 1) #13
  br label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %land.lhs.true.critedge.i, %if.end.i.land.lhs.true.i_crit_edge
  %call39.i = call fastcc zeroext i1 @prepare_kswapd_sleep(ptr noundef %p, i32 noundef %reclaim_order.0, i32 noundef %highest_zoneidx.1) #13
  br i1 %call39.i, label %if.then40.i, label %if.else46.i

if.then40.i:                                      ; preds = %land.lhs.true.i
  %35 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %node_id, align 64
  call fastcc void @trace_mm_vmscan_kswapd_sleep(i32 noundef %36) #13
  call void @set_pgdat_percpu_threshold(ptr noundef %p, ptr noundef nonnull @calculate_normal_threshold) #13
  %call41.i = call zeroext i1 @kthread_should_stop() #13
  br i1 %call41.i, label %if.then40.i.if.end43.i_crit_edge, label %if.then42.i

if.then40.i.if.end43.i_crit_edge:                 ; preds = %if.then40.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end43.i

if.then42.i:                                      ; preds = %if.then40.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @schedule() #13
  br label %if.end43.i

if.end43.i:                                       ; preds = %if.then42.i, %if.then40.i.if.end43.i_crit_edge
  call void @set_pgdat_percpu_threshold(ptr noundef %p, ptr noundef nonnull @calculate_pressure_threshold) #13
  br label %if.end48.i

if.then45.critedge.i:                             ; preds = %do.body27.i, %do.body13.i.if.then45.critedge.i_crit_edge
  call void @finish_wait(ptr noundef %kswapd_wait.i, ptr noundef nonnull %wait.i) #13
  call void @prepare_to_wait(ptr noundef %kswapd_wait.i, ptr noundef nonnull %wait.i, i32 noundef 1) #13
  %37 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %38 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 3
  %40 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %cpu.i.i, align 4
  %arrayidx13.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %41
  %42 = ptrtoint ptr %arrayidx13.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx13.i.i, align 4
  %add.i.i = add i32 %43, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 39) to i32)
  %44 = inttoptr i32 %add.i.i to ptr
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  %add14.i.i = add i32 %46, 1
  store i32 %add14.i.i, ptr %44, align 4
  %47 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i.i = and i32 %47, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i73.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i73.i, label %if.then.i.i94, label %if.then45.critedge.i.count_vm_event.exit.i_crit_edge, !prof !558

if.then45.critedge.i.count_vm_event.exit.i_crit_edge: ; preds = %if.then45.critedge.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %count_vm_event.exit.i

if.then.i.i94:                                    ; preds = %if.then45.critedge.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @warn_bogus_irq_restore() #13
  br label %count_vm_event.exit.i

count_vm_event.exit.i:                            ; preds = %if.then.i.i94, %if.then45.critedge.i.count_vm_event.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %37) #13, !srcloc !615
  br label %if.end48.i

if.else46.i:                                      ; preds = %land.lhs.true.i
  %48 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %49 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i74.i = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i74.i to ptr
  %cpu.i75.i = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 3
  %51 = ptrtoint ptr %cpu.i75.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cpu.i75.i, align 4
  %arrayidx13.i76.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %52
  %53 = ptrtoint ptr %arrayidx13.i76.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx13.i76.i, align 4
  %add.i77.i = add i32 %54, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 40) to i32)
  %55 = inttoptr i32 %add.i77.i to ptr
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  %add14.i78.i = add i32 %57, 1
  store i32 %add14.i78.i, ptr %55, align 4
  %58 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i79.i = and i32 %58, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i79.i)
  %tobool.not.i80.i = icmp eq i32 %and.i.i.i79.i, 0
  br i1 %tobool.not.i80.i, label %if.then.i81.i, label %if.else46.i.count_vm_event.exit82.i_crit_edge, !prof !558

if.else46.i.count_vm_event.exit82.i_crit_edge:    ; preds = %if.else46.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %count_vm_event.exit82.i

if.then.i81.i:                                    ; preds = %if.else46.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @warn_bogus_irq_restore() #13
  br label %count_vm_event.exit82.i

count_vm_event.exit82.i:                          ; preds = %if.then.i81.i, %if.else46.i.count_vm_event.exit82.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %48) #13, !srcloc !615
  br label %if.end48.i

if.end48.i:                                       ; preds = %count_vm_event.exit82.i, %count_vm_event.exit.i, %if.end43.i
  call void @finish_wait(ptr noundef %kswapd_wait.i, ptr noundef nonnull %wait.i) #13
  br label %kswapd_try_to_sleep.exit

kswapd_try_to_sleep.exit:                         ; preds = %if.end48.i, %lor.lhs.false.i.kswapd_try_to_sleep.exit_crit_edge, %freezing.exit.i.kswapd_try_to_sleep.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait.i) #13
  %59 = ptrtoint ptr %kswapd_order to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %kswapd_order, align 8
  %61 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %kswapd_highest_zoneidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %62)
  %cmp.i96 = icmp eq i32 %62, 4
  %prev_highest_zoneidx..i97 = select i1 %cmp.i96, i32 %highest_zoneidx.1, i32 %62
  %63 = ptrtoint ptr %kswapd_order to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile i32 0, ptr %kswapd_order, align 8
  %64 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile i32 4, ptr %kswapd_highest_zoneidx, align 4
  %65 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i98 = and i32 %65, -16384
  %66 = inttoptr i32 %and.i.i98 to ptr
  %task.i99 = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 2
  %67 = ptrtoint ptr %task.i99 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %task.i99, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %68, i32 0, i32 3
  %69 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %flags.i, align 4
  %and.i100 = and i32 %70, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i100)
  %tobool.not.i101 = icmp eq i32 %and.i100, 0
  br i1 %tobool.not.i101, label %if.then.i, label %kswapd_try_to_sleep.exit.if.end.i103_crit_edge

kswapd_try_to_sleep.exit.if.end.i103_crit_edge:   ; preds = %kswapd_try_to_sleep.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i103

if.then.i:                                        ; preds = %kswapd_try_to_sleep.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @debug_check_no_locks_held() #13
  br label %if.end.i103

if.end.i103:                                      ; preds = %if.then.i, %kswapd_try_to_sleep.exit.if.end.i103_crit_edge
  call void @__might_sleep(ptr noundef nonnull @.str.181, i32 noundef 57) #13
  %71 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i102 = and i32 %71, -16384
  %72 = inttoptr i32 %and.i.i.i102 to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %72, i32 0, i32 2
  %73 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %task.i.i, align 8
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %75 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool.not.i.i.i = icmp eq i32 %75, 0
  br i1 %tobool.not.i.i.i, label %if.end.i103.try_to_freeze.exit_crit_edge, label %freezing.exit.i.i, !prof !557

if.end.i103.try_to_freeze.exit_crit_edge:         ; preds = %if.end.i103
  call void @__sanitizer_cov_trace_pc() #15
  br label %try_to_freeze.exit

freezing.exit.i.i:                                ; preds = %if.end.i103
  %call4.i.i.i = call zeroext i1 @freezing_slow_path(ptr noundef %74) #13
  br i1 %call4.i.i.i, label %if.end.i.i104, label %freezing.exit.i.i.try_to_freeze.exit_crit_edge, !prof !558

freezing.exit.i.i.try_to_freeze.exit_crit_edge:   ; preds = %freezing.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %try_to_freeze.exit

if.end.i.i104:                                    ; preds = %freezing.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %call6.i.i = call zeroext i1 @__refrigerator(i1 noundef zeroext false) #13
  br label %try_to_freeze.exit

try_to_freeze.exit:                               ; preds = %if.end.i.i104, %freezing.exit.i.i.try_to_freeze.exit_crit_edge, %if.end.i103.try_to_freeze.exit_crit_edge
  %retval.0.i.i105 = phi i1 [ %call6.i.i, %if.end.i.i104 ], [ false, %freezing.exit.i.i.try_to_freeze.exit_crit_edge ], [ false, %if.end.i103.try_to_freeze.exit_crit_edge ]
  %call51 = call zeroext i1 @kthread_should_stop() #13
  %brmerge = select i1 %call51, i1 true, i1 %retval.0.i.i105
  br i1 %brmerge, label %cleanup.split.loop.exit, label %if.end55

if.end55:                                         ; preds = %try_to_freeze.exit
  %76 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %node_id, align 64
  call fastcc void @trace_mm_vmscan_kswapd_wake(i32 noundef %77, i32 noundef %prev_highest_zoneidx..i97, i32 noundef %60)
  %call57 = call fastcc i32 @balance_pgdat(ptr noundef %p, i32 noundef %60, i32 noundef %prev_highest_zoneidx..i97)
  %cmp = icmp ult i32 %call57, %60
  br i1 %cmp, label %if.end55.kswapd_try_sleep_crit_edge, label %if.end55.for.cond.backedge_crit_edge

if.end55.for.cond.backedge_crit_edge:             ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond.backedge

if.end55.kswapd_try_sleep_crit_edge:              ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #15
  br label %kswapd_try_sleep

cleanup.split.loop.exit:                          ; preds = %try_to_freeze.exit
  br i1 %call51, label %for.end, label %cleanup.split.loop.exit.for.cond.backedge_crit_edge

cleanup.split.loop.exit.for.cond.backedge_crit_edge: ; preds = %cleanup.split.loop.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %cleanup.split.loop.exit.for.cond.backedge_crit_edge, %if.end55.for.cond.backedge_crit_edge
  br label %for.cond

for.end:                                          ; preds = %cleanup.split.loop.exit
  call void @__sanitizer_cov_trace_pc() #15
  %78 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %flags, align 4
  %and = and i32 %79, -8521729
  store i32 %and, ptr %flags, align 4
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kswapd_stop(i32 noundef %nid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14) to i32))
  %0 = load ptr, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call i32 @kthread_stop(ptr noundef nonnull %0) #13
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14) to i32))
  store ptr null, ptr getelementptr inbounds (%struct.pglist_data, ptr @contig_page_data, i32 0, i32 14), align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kthread_stop(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @kswapd_init() #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @swap_setup() #13
  tail call void @kswapd_run(i32 noundef 0)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @check_move_unevictable_pages(ptr nocapture noundef readonly %pvec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pvec to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pvec, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp391.not = icmp eq i8 %1, 0
  br i1 %cmp391.not, label %entry.if.end23_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end23_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end23

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry.for.body_crit_edge
  %i.0396 = phi i32 [ %inc, %cleanup.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %pgrescued.0395 = phi i32 [ %pgrescued.2, %cleanup.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %lruvec.0392 = phi ptr [ %lruvec.1, %cleanup.for.body_crit_edge ], [ null, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.pagevec, ptr %pvec, i32 0, i32 2, i32 %i.0396
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %4 = getelementptr inbounds %struct.page, ptr %3, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  %and.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i151, !prof !557

if.then.i151:                                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i = add i32 %6, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %7 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i151
  %retval.0.i = phi i32 [ %sub.i, %if.then.i151 ], [ %7, %if.end.i ]
  %8 = inttoptr i32 %retval.0.i to ptr
  %9 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %4, align 4
  %and.i.i152 = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i152)
  %tobool.not.i153 = icmp eq i32 %and.i.i152, 0
  br i1 %tobool.not.i153, label %thp_nr_pages.exit, label %if.then.i154, !prof !557

if.then.i154:                                     ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %3, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/huge_mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 347, 0\0A.popsection", ""() #13, !srcloc !609
  unreachable

thp_nr_pages.exit:                                ; preds = %_compound_head.exit
  %inc = add nuw nsw i32 %i.0396, 1
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %4, align 4
  %and.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %thp_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %12, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %thp_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  %13 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %13, %if.end.i.i ]
  %14 = inttoptr i32 %retval.0.i.i to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %16)
  %cmp.i.not.i = icmp eq i32 %16, -1
  %17 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %4, align 4
  %and.i13.i = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !557

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i = add i32 %18, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %19 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %19, %if.end.i17.i ]
  %20 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %20, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 423, 0\0A.popsection", ""() #13, !srcloc !622
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !557

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i = add i32 %18, -1
  br label %TestClearPageLRU.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %21 = ptrtoint ptr %3 to i32
  br label %TestClearPageLRU.exit

TestClearPageLRU.exit:                            ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %21, %if.end.i24.i ]
  %22 = inttoptr i32 %retval.0.i25.i to ptr
  %call10.i = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %22) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool5.not = icmp eq i32 %call10.i, 0
  br i1 %tobool5.not, label %TestClearPageLRU.exit.cleanup_crit_edge, label %if.end7

TestClearPageLRU.exit.cleanup_crit_edge:          ; preds = %TestClearPageLRU.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end7:                                          ; preds = %TestClearPageLRU.exit
  %tobool.not.i155 = icmp eq ptr %lruvec.0392, null
  br i1 %tobool.not.i155, label %if.end7.if.end2.i_crit_edge, label %if.then.i157

if.end7.if.end2.i_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end2.i

if.then.i157:                                     ; preds = %if.end7
  %pgdat.i.i.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0392, i32 0, i32 7
  %23 = ptrtoint ptr %pgdat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pgdat.i.i.i, align 4
  %25 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %26)
  %cmp.i.not.i.i.i.i.i156 = icmp eq i32 %26, -1
  br i1 %cmp.i.not.i.i.i.i.i156, label %if.then.i.i.i.i.i158, label %folio_pgdat.exit.i.i, !prof !558

if.then.i.i.i.i.i158:                             ; preds = %if.then.i157
  call void @__sanitizer_cov_trace_pc() #15
  %27 = inttoptr i32 %retval.0.i to ptr
  tail call void @dump_page(ptr noundef %27, ptr noundef nonnull @.str.176) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #13, !srcloc !578
  unreachable

folio_pgdat.exit.i.i:                             ; preds = %if.then.i157
  %cmp.i.i = icmp eq ptr %24, @contig_page_data
  br i1 %cmp.i.i, label %land.rhs.i.i, label %folio_pgdat.exit.i.i.if.end.i160_crit_edge

folio_pgdat.exit.i.i.if.end.i160_crit_edge:       ; preds = %folio_pgdat.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i160

land.rhs.i.i:                                     ; preds = %folio_pgdat.exit.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@check_move_unevictable_pages, %folio_matches_lruvec.exit.i)) #13
          to label %if.end.i.i.i [label %folio_matches_lruvec.exit.i], !srcloc !567

if.end.i.i.i:                                     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %memcg.i.i.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec.0392, i32 0, i32 9
  %28 = ptrtoint ptr %memcg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %memcg.i.i.i, align 4
  br label %folio_matches_lruvec.exit.i

folio_matches_lruvec.exit.i:                      ; preds = %if.end.i.i.i, %land.rhs.i.i
  %retval.0.i.i.i159 = phi ptr [ %29, %if.end.i.i.i ], [ null, %land.rhs.i.i ]
  %call3.i.i = tail call fastcc ptr @folio_memcg(ptr noundef %8) #13
  %cmp4.i.i = icmp eq ptr %retval.0.i.i.i159, %call3.i.i
  br i1 %cmp4.i.i, label %folio_matches_lruvec.exit.i.folio_lruvec_relock_irq.exit_crit_edge, label %folio_matches_lruvec.exit.i.if.end.i160_crit_edge

folio_matches_lruvec.exit.i.if.end.i160_crit_edge: ; preds = %folio_matches_lruvec.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i160

folio_matches_lruvec.exit.i.folio_lruvec_relock_irq.exit_crit_edge: ; preds = %folio_matches_lruvec.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %folio_lruvec_relock_irq.exit

if.end.i160:                                      ; preds = %folio_matches_lruvec.exit.i.if.end.i160_crit_edge, %folio_pgdat.exit.i.i.if.end.i160_crit_edge
  %lru_lock.i.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0392, i32 0, i32 1
  tail call void @_raw_spin_unlock_irq(ptr noundef %lru_lock.i.i) #13
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.end.i160, %if.end7.if.end2.i_crit_edge
  %call3.i = tail call ptr @folio_lruvec_lock_irq(ptr noundef %8) #13
  br label %folio_lruvec_relock_irq.exit

folio_lruvec_relock_irq.exit:                     ; preds = %if.end2.i, %folio_matches_lruvec.exit.i.folio_lruvec_relock_irq.exit_crit_edge
  %retval.0.i161 = phi ptr [ %call3.i, %if.end2.i ], [ %lruvec.0392, %folio_matches_lruvec.exit.i.folio_lruvec_relock_irq.exit_crit_edge ]
  %call9 = tail call fastcc zeroext i1 @page_evictable(ptr noundef %3)
  br i1 %call9, label %land.lhs.true, label %folio_lruvec_relock_irq.exit.if.end15_crit_edge

folio_lruvec_relock_irq.exit.if.end15_crit_edge:  ; preds = %folio_lruvec_relock_irq.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

land.lhs.true:                                    ; preds = %folio_lruvec_relock_irq.exit
  %30 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %4, align 4
  %and.i.i45 = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i45)
  %tobool.not.i.i46 = icmp eq i32 %and.i.i45, 0
  br i1 %tobool.not.i.i46, label %if.end.i.i49, label %if.then.i.i48, !prof !557

if.then.i.i48:                                    ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i47 = add i32 %31, -1
  br label %_compound_head.exit.i54

if.end.i.i49:                                     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  %32 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit.i54

_compound_head.exit.i54:                          ; preds = %if.end.i.i49, %if.then.i.i48
  %retval.0.i.i50 = phi i32 [ %sub.i.i47, %if.then.i.i48 ], [ %32, %if.end.i.i49 ]
  %33 = inttoptr i32 %retval.0.i.i50 to ptr
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %35)
  %cmp.i.not.i51 = icmp eq i32 %35, -1
  %36 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %4, align 4
  %and.i13.i52 = and i32 %37, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i52)
  %tobool.not.i14.i53 = icmp eq i32 %and.i13.i52, 0
  br i1 %cmp.i.not.i51, label %if.then.i55, label %do.end8.i61, !prof !558

if.then.i55:                                      ; preds = %_compound_head.exit.i54
  br i1 %tobool.not.i14.i53, label %if.end.i17.i58, label %if.then.i16.i57, !prof !557

if.then.i16.i57:                                  ; preds = %if.then.i55
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i56 = add i32 %37, -1
  br label %_compound_head.exit19.i60

if.end.i17.i58:                                   ; preds = %if.then.i55
  call void @__sanitizer_cov_trace_pc() #15
  %38 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit19.i60

_compound_head.exit19.i60:                        ; preds = %if.end.i17.i58, %if.then.i16.i57
  %retval.0.i18.i59 = phi i32 [ %sub.i15.i56, %if.then.i16.i57 ], [ %38, %if.end.i17.i58 ]
  %39 = inttoptr i32 %retval.0.i18.i59 to ptr
  tail call void @dump_page(ptr noundef %39, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 499, 0\0A.popsection", ""() #13, !srcloc !594
  unreachable

do.end8.i61:                                      ; preds = %_compound_head.exit.i54
  br i1 %tobool.not.i14.i53, label %if.end.i24.i64, label %if.then.i23.i63, !prof !557

if.then.i23.i63:                                  ; preds = %do.end8.i61
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i62 = add i32 %37, -1
  br label %PageUnevictable.exit

if.end.i24.i64:                                   ; preds = %do.end8.i61
  call void @__sanitizer_cov_trace_pc() #15
  %40 = ptrtoint ptr %3 to i32
  br label %PageUnevictable.exit

PageUnevictable.exit:                             ; preds = %if.end.i24.i64, %if.then.i23.i63
  %retval.0.i25.i65 = phi i32 [ %sub.i22.i62, %if.then.i23.i63 ], [ %40, %if.end.i24.i64 ]
  %41 = inttoptr i32 %retval.0.i25.i65 to ptr
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %41, align 4
  %44 = and i32 %43, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool12.not = icmp eq i32 %44, 0
  br i1 %tobool12.not, label %PageUnevictable.exit.if.end15_crit_edge, label %if.then13

PageUnevictable.exit.if.end15_crit_edge:          ; preds = %PageUnevictable.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end15

if.then13:                                        ; preds = %PageUnevictable.exit
  %45 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %4, align 4
  %and.i.i66 = and i32 %46, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i66)
  %tobool.not.i.i67 = icmp eq i32 %and.i.i66, 0
  br i1 %tobool.not.i.i67, label %if.end.i.i69, label %if.then.i.i68, !prof !557

if.then.i.i68:                                    ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i1.i = add i32 %46, -1
  br label %_compound_head.exit.i71

if.end.i.i69:                                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #15
  %47 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit.i71

_compound_head.exit.i71:                          ; preds = %if.end.i.i69, %if.then.i.i68
  %retval.0.i.i70 = phi i32 [ %sub.i1.i, %if.then.i.i68 ], [ %47, %if.end.i.i69 ]
  %48 = inttoptr i32 %retval.0.i.i70 to ptr
  %lru.i.i = getelementptr inbounds %struct.anon.67, ptr %48, i32 0, i32 1
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %lru.i.i) #13
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %_compound_head.exit.i71.list_del.exit.i.i_crit_edge

_compound_head.exit.i71.list_del.exit.i.i_crit_edge: ; preds = %_compound_head.exit.i71
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_del.exit.i.i

if.end.i.i.i.i:                                   ; preds = %_compound_head.exit.i71
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i.i.i = getelementptr inbounds %struct.anon.67, ptr %48, i32 0, i32 1, i32 1
  %49 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %prev.i.i.i.i, align 4
  %51 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %lru.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %50, ptr %prev1.i.i.i.i.i, align 4
  %54 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %52, ptr %50, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i.i.i, %_compound_head.exit.i71.list_del.exit.i.i_crit_edge
  %55 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr inttoptr (i32 256 to ptr), ptr %lru.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.anon.67, ptr %48, i32 0, i32 1, i32 1
  %56 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  %57 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i.i.i.i = and i32 %57, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_test_active.exit.i.i.i, label %if.then.i.i.i.i.i, !prof !557

if.then.i.i.i.i.i:                                ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %58 = inttoptr i32 %retval.0.i.i70 to ptr
  tail call void @dump_page(ptr noundef %58, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_active.exit.i.i.i:                     ; preds = %list_del.exit.i.i
  %59 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %48, align 4
  %61 = and i32 %60, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool.i.not.i.i.i = icmp eq i32 %61, 0
  br i1 %tobool.i.not.i.i.i, label %folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge, label %land.rhs.i.i.i

folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge: ; preds = %folio_test_active.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end8.i.i.i

land.rhs.i.i.i:                                   ; preds = %folio_test_active.exit.i.i.i
  %62 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i23.i.i.i = and i32 %63, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i23.i.i.i)
  %tobool.not.i.i24.i.i.i = icmp eq i32 %and.i.i.i23.i.i.i, 0
  br i1 %tobool.not.i.i24.i.i.i, label %folio_test_unevictable.exit.i.i.i, label %if.then.i.i25.i.i.i, !prof !557

if.then.i.i25.i.i.i:                              ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %64 = inttoptr i32 %retval.0.i.i70 to ptr
  tail call void @dump_page(ptr noundef %64, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_unevictable.exit.i.i.i:                ; preds = %land.rhs.i.i.i
  %65 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %48, align 4
  %67 = and i32 %66, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool.i26.not.i.i.i = icmp eq i32 %67, 0
  br i1 %tobool.i26.not.i.i.i, label %folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge, label %if.then.i.i.i, !prof !557

folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge: ; preds = %folio_test_unevictable.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end8.i.i.i

if.then.i.i.i:                                    ; preds = %folio_test_unevictable.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %68 = inttoptr i32 %retval.0.i.i70 to ptr
  tail call void @dump_page(ptr noundef %68, ptr noundef nonnull @.str.175) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm_inline.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 83, 0\0A.popsection", ""() #13, !srcloc !624
  unreachable

do.end8.i.i.i:                                    ; preds = %folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge, %folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge
  %69 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i27.i.i.i = and i32 %70, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i27.i.i.i)
  %tobool.not.i.i28.i.i.i = icmp eq i32 %and.i.i.i27.i.i.i, 0
  br i1 %tobool.not.i.i28.i.i.i, label %folio_test_unevictable.exit31.i.i.i, label %if.then.i.i29.i.i.i, !prof !557

if.then.i.i29.i.i.i:                              ; preds = %do.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %71 = inttoptr i32 %retval.0.i.i70 to ptr
  tail call void @dump_page(ptr noundef %71, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_unevictable.exit31.i.i.i:              ; preds = %do.end8.i.i.i
  %72 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %48, align 4
  %74 = and i32 %73, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool.i30.not.i.i.i = icmp eq i32 %74, 0
  br i1 %tobool.i30.not.i.i.i, label %if.end11.i.i.i, label %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge

folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge: ; preds = %folio_test_unevictable.exit31.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %folio_lru_list.exit.i.i

if.end11.i.i.i:                                   ; preds = %folio_test_unevictable.exit31.i.i.i
  %75 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i.i.i.i.i = and i32 %76, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %folio_is_file_lru.exit.i.i.i, label %if.then.i.i.i.i.i.i, !prof !557

if.then.i.i.i.i.i.i:                              ; preds = %if.end11.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %77 = inttoptr i32 %retval.0.i.i70 to ptr
  tail call void @dump_page(ptr noundef %77, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_is_file_lru.exit.i.i.i:                     ; preds = %if.end11.i.i.i
  %78 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %48, align 4
  %80 = ptrtoint ptr %lru.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %lru.i.i, align 4
  %and.i.i.i32.i.i.i = and i32 %81, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i32.i.i.i)
  %tobool.not.i.i33.i.i.i = icmp eq i32 %and.i.i.i32.i.i.i, 0
  br i1 %tobool.not.i.i33.i.i.i, label %folio_test_active.exit36.i.i.i, label %if.then.i.i34.i.i.i, !prof !557

if.then.i.i34.i.i.i:                              ; preds = %folio_is_file_lru.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %82 = inttoptr i32 %retval.0.i.i70 to ptr
  tail call void @dump_page(ptr noundef %82, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_active.exit36.i.i.i:                   ; preds = %folio_is_file_lru.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %83 = lshr i32 %79, 18
  %84 = and i32 %83, 2
  %85 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %48, align 4
  %87 = lshr i32 %86, 5
  %88 = and i32 %87, 1
  %89 = or i32 %88, %84
  %90 = xor i32 %89, 2
  br label %folio_lru_list.exit.i.i

folio_lru_list.exit.i.i:                          ; preds = %folio_test_active.exit36.i.i.i, %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %90, %folio_test_active.exit36.i.i.i ], [ 4, %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge ]
  %91 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %48, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %92)
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %92, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i6.i.i, label %PageHead.exit.i.i.i.i, !prof !558

if.then.i.i.i6.i.i:                               ; preds = %folio_lru_list.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %93 = inttoptr i32 %retval.0.i.i70 to ptr
  tail call void @dump_page(ptr noundef %93, ptr noundef nonnull @.str.153) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %folio_lru_list.exit.i.i
  %94 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %48, align 4
  %96 = and i32 %95, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %tobool.not.i.i.i.i = icmp eq i32 %96, 0
  br i1 %tobool.not.i.i.i.i, label %PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge, label %if.end.i.i7.i.i

PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge: ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %del_page_from_lru_list.exit

if.end.i.i7.i.i:                                  ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %compound_nr.i.i.i.i = getelementptr %struct.page, ptr %48, i32 1, i32 1, i32 0, i32 2
  %97 = ptrtoint ptr %compound_nr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %compound_nr.i.i.i.i, align 4
  br label %del_page_from_lru_list.exit

del_page_from_lru_list.exit:                      ; preds = %if.end.i.i7.i.i, %PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge
  %retval.0.i.i.i.i = phi i32 [ %98, %if.end.i.i7.i.i ], [ 1, %PageHead.exit.i.i.i.i.del_page_from_lru_list.exit_crit_edge ]
  %shr.i.i.i.i = lshr i32 %73, 30
  %sub.i.i72 = sub i32 0, %retval.0.i.i.i.i
  %pgdat.i.i.i.i = getelementptr inbounds %struct.lruvec, ptr %retval.0.i161, i32 0, i32 7
  %99 = ptrtoint ptr %pgdat.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %pgdat.i.i.i.i, align 4
  tail call void @__mod_lruvec_state(ptr noundef %retval.0.i161, i32 noundef %retval.0.i.i.i, i32 noundef %sub.i.i72) #13
  %arrayidx.i.i.i = getelementptr [4 x %struct.zone], ptr %100, i32 0, i32 %shr.i.i.i.i
  %add1.i.i.i = add nsw i32 %retval.0.i.i.i, 1
  tail call void @__mod_zone_page_state(ptr noundef %arrayidx.i.i.i, i32 noundef %add1.i.i.i, i32 noundef %sub.i.i72) #13
  tail call void @mem_cgroup_update_lru_size(ptr noundef %retval.0.i161, i32 noundef %retval.0.i.i.i, i32 noundef %shr.i.i.i.i, i32 noundef %sub.i.i72) #13
  %101 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load volatile i32, ptr %4, align 4
  %and.i.i73 = and i32 %102, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i73)
  %tobool.not.i.i74 = icmp eq i32 %and.i.i73, 0
  br i1 %tobool.not.i.i74, label %if.end.i.i77, label %if.then.i.i76, !prof !557

if.then.i.i76:                                    ; preds = %del_page_from_lru_list.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i75 = add i32 %102, -1
  br label %_compound_head.exit.i80

if.end.i.i77:                                     ; preds = %del_page_from_lru_list.exit
  call void @__sanitizer_cov_trace_pc() #15
  %103 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit.i80

_compound_head.exit.i80:                          ; preds = %if.end.i.i77, %if.then.i.i76
  %retval.0.i.i78 = phi i32 [ %sub.i.i75, %if.then.i.i76 ], [ %103, %if.end.i.i77 ]
  %104 = inttoptr i32 %retval.0.i.i78 to ptr
  %105 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %104, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %106)
  %cmp.i.not.i79 = icmp eq i32 %106, -1
  %107 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %4, align 4
  %and.i12.i = and i32 %108, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i)
  %tobool.not.i13.i = icmp eq i32 %and.i12.i, 0
  br i1 %cmp.i.not.i79, label %if.then.i81, label %do.end8.i82, !prof !558

if.then.i81:                                      ; preds = %_compound_head.exit.i80
  br i1 %tobool.not.i13.i, label %if.end.i16.i, label %if.then.i15.i, !prof !557

if.then.i15.i:                                    ; preds = %if.then.i81
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i = add i32 %108, -1
  br label %_compound_head.exit18.i

if.end.i16.i:                                     ; preds = %if.then.i81
  call void @__sanitizer_cov_trace_pc() #15
  %109 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit18.i

_compound_head.exit18.i:                          ; preds = %if.end.i16.i, %if.then.i15.i
  %retval.0.i17.i = phi i32 [ %sub.i14.i, %if.then.i15.i ], [ %109, %if.end.i16.i ]
  %110 = inttoptr i32 %retval.0.i17.i to ptr
  tail call void @dump_page(ptr noundef %110, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 499, 0\0A.popsection", ""() #13, !srcloc !641
  unreachable

do.end8.i82:                                      ; preds = %_compound_head.exit.i80
  br i1 %tobool.not.i13.i, label %if.end.i23.i, label %if.then.i22.i, !prof !557

if.then.i22.i:                                    ; preds = %do.end8.i82
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i = add i32 %108, -1
  br label %ClearPageUnevictable.exit

if.end.i23.i:                                     ; preds = %do.end8.i82
  call void @__sanitizer_cov_trace_pc() #15
  %111 = ptrtoint ptr %3 to i32
  br label %ClearPageUnevictable.exit

ClearPageUnevictable.exit:                        ; preds = %if.end.i23.i, %if.then.i22.i
  %retval.0.i24.i = phi i32 [ %sub.i21.i, %if.then.i22.i ], [ %111, %if.end.i23.i ]
  %112 = inttoptr i32 %retval.0.i24.i to ptr
  tail call void @_clear_bit(i32 noundef 20, ptr noundef %112) #13
  %113 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %4, align 4
  %and.i.i83 = and i32 %114, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i83)
  %tobool.not.i.i84 = icmp eq i32 %and.i.i83, 0
  br i1 %tobool.not.i.i84, label %if.end.i.i87, label %if.then.i.i86, !prof !557

if.then.i.i86:                                    ; preds = %ClearPageUnevictable.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i85 = add i32 %114, -1
  br label %_compound_head.exit.i91

if.end.i.i87:                                     ; preds = %ClearPageUnevictable.exit
  call void @__sanitizer_cov_trace_pc() #15
  %115 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit.i91

_compound_head.exit.i91:                          ; preds = %if.end.i.i87, %if.then.i.i86
  %retval.0.i.i88 = phi i32 [ %sub.i.i85, %if.then.i.i86 ], [ %115, %if.end.i.i87 ]
  %116 = inttoptr i32 %retval.0.i.i88 to ptr
  %117 = getelementptr inbounds %struct.page, ptr %116, i32 0, i32 1
  %118 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load volatile i32, ptr %117, align 4
  %and.i.i.i.i.i.i89 = and i32 %119, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i89)
  %tobool.not.i.i.i.i.i90 = icmp eq i32 %and.i.i.i.i.i.i89, 0
  br i1 %tobool.not.i.i.i.i.i90, label %folio_test_active.exit.i.i.i94, label %if.then.i.i.i.i.i92, !prof !557

if.then.i.i.i.i.i92:                              ; preds = %_compound_head.exit.i91
  call void @__sanitizer_cov_trace_pc() #15
  %120 = inttoptr i32 %retval.0.i.i88 to ptr
  tail call void @dump_page(ptr noundef %120, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_active.exit.i.i.i94:                   ; preds = %_compound_head.exit.i91
  %121 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile i32, ptr %116, align 4
  %123 = and i32 %122, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %123)
  %tobool.i.not.i.i.i93 = icmp eq i32 %123, 0
  br i1 %tobool.i.not.i.i.i93, label %folio_test_active.exit.i.i.i94.do.end8.i.i.i104_crit_edge, label %land.rhs.i.i.i97

folio_test_active.exit.i.i.i94.do.end8.i.i.i104_crit_edge: ; preds = %folio_test_active.exit.i.i.i94
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end8.i.i.i104

land.rhs.i.i.i97:                                 ; preds = %folio_test_active.exit.i.i.i94
  %124 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile i32, ptr %117, align 4
  %and.i.i.i23.i.i.i95 = and i32 %125, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i23.i.i.i95)
  %tobool.not.i.i24.i.i.i96 = icmp eq i32 %and.i.i.i23.i.i.i95, 0
  br i1 %tobool.not.i.i24.i.i.i96, label %folio_test_unevictable.exit.i.i.i100, label %if.then.i.i25.i.i.i98, !prof !557

if.then.i.i25.i.i.i98:                            ; preds = %land.rhs.i.i.i97
  call void @__sanitizer_cov_trace_pc() #15
  %126 = inttoptr i32 %retval.0.i.i88 to ptr
  tail call void @dump_page(ptr noundef %126, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_unevictable.exit.i.i.i100:             ; preds = %land.rhs.i.i.i97
  %127 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile i32, ptr %116, align 4
  %129 = and i32 %128, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %129)
  %tobool.i26.not.i.i.i99 = icmp eq i32 %129, 0
  br i1 %tobool.i26.not.i.i.i99, label %folio_test_unevictable.exit.i.i.i100.do.end8.i.i.i104_crit_edge, label %if.then.i.i.i101, !prof !557

folio_test_unevictable.exit.i.i.i100.do.end8.i.i.i104_crit_edge: ; preds = %folio_test_unevictable.exit.i.i.i100
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end8.i.i.i104

if.then.i.i.i101:                                 ; preds = %folio_test_unevictable.exit.i.i.i100
  call void @__sanitizer_cov_trace_pc() #15
  %130 = inttoptr i32 %retval.0.i.i88 to ptr
  tail call void @dump_page(ptr noundef %130, ptr noundef nonnull @.str.175) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm_inline.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 83, 0\0A.popsection", ""() #13, !srcloc !624
  unreachable

do.end8.i.i.i104:                                 ; preds = %folio_test_unevictable.exit.i.i.i100.do.end8.i.i.i104_crit_edge, %folio_test_active.exit.i.i.i94.do.end8.i.i.i104_crit_edge
  %131 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load volatile i32, ptr %117, align 4
  %and.i.i.i27.i.i.i102 = and i32 %132, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i27.i.i.i102)
  %tobool.not.i.i28.i.i.i103 = icmp eq i32 %and.i.i.i27.i.i.i102, 0
  br i1 %tobool.not.i.i28.i.i.i103, label %folio_test_unevictable.exit31.i.i.i107, label %if.then.i.i29.i.i.i105, !prof !557

if.then.i.i29.i.i.i105:                           ; preds = %do.end8.i.i.i104
  call void @__sanitizer_cov_trace_pc() #15
  %133 = inttoptr i32 %retval.0.i.i88 to ptr
  tail call void @dump_page(ptr noundef %133, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_unevictable.exit31.i.i.i107:           ; preds = %do.end8.i.i.i104
  %134 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load volatile i32, ptr %116, align 4
  %136 = and i32 %135, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %136)
  %tobool.i30.not.i.i.i106 = icmp eq i32 %136, 0
  br i1 %tobool.i30.not.i.i.i106, label %if.end11.i.i.i110, label %folio_test_unevictable.exit31.i.i.i107.folio_lru_list.exit.i.i120_crit_edge

folio_test_unevictable.exit31.i.i.i107.folio_lru_list.exit.i.i120_crit_edge: ; preds = %folio_test_unevictable.exit31.i.i.i107
  call void @__sanitizer_cov_trace_pc() #15
  br label %folio_lru_list.exit.i.i120

if.end11.i.i.i110:                                ; preds = %folio_test_unevictable.exit31.i.i.i107
  %137 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %117, align 4
  %and.i.i.i.i.i.i.i108 = and i32 %138, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i108)
  %tobool.not.i.i.i.i.i.i109 = icmp eq i32 %and.i.i.i.i.i.i.i108, 0
  br i1 %tobool.not.i.i.i.i.i.i109, label %folio_is_file_lru.exit.i.i.i114, label %if.then.i.i.i.i.i.i111, !prof !557

if.then.i.i.i.i.i.i111:                           ; preds = %if.end11.i.i.i110
  call void @__sanitizer_cov_trace_pc() #15
  %139 = inttoptr i32 %retval.0.i.i88 to ptr
  tail call void @dump_page(ptr noundef %139, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_is_file_lru.exit.i.i.i114:                  ; preds = %if.end11.i.i.i110
  %140 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %116, align 4
  %142 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load volatile i32, ptr %117, align 4
  %and.i.i.i32.i.i.i112 = and i32 %143, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i32.i.i.i112)
  %tobool.not.i.i33.i.i.i113 = icmp eq i32 %and.i.i.i32.i.i.i112, 0
  br i1 %tobool.not.i.i33.i.i.i113, label %folio_test_active.exit36.i.i.i116, label %if.then.i.i34.i.i.i115, !prof !557

if.then.i.i34.i.i.i115:                           ; preds = %folio_is_file_lru.exit.i.i.i114
  call void @__sanitizer_cov_trace_pc() #15
  %144 = inttoptr i32 %retval.0.i.i88 to ptr
  tail call void @dump_page(ptr noundef %144, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_active.exit36.i.i.i116:                ; preds = %folio_is_file_lru.exit.i.i.i114
  call void @__sanitizer_cov_trace_pc() #15
  %145 = lshr i32 %141, 18
  %146 = and i32 %145, 2
  %147 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load volatile i32, ptr %116, align 4
  %149 = lshr i32 %148, 5
  %150 = and i32 %149, 1
  %151 = or i32 %150, %146
  %152 = xor i32 %151, 2
  br label %folio_lru_list.exit.i.i120

folio_lru_list.exit.i.i120:                       ; preds = %folio_test_active.exit36.i.i.i116, %folio_test_unevictable.exit31.i.i.i107.folio_lru_list.exit.i.i120_crit_edge
  %retval.0.i.i.i117 = phi i32 [ %152, %folio_test_active.exit36.i.i.i116 ], [ 4, %folio_test_unevictable.exit31.i.i.i107.folio_lru_list.exit.i.i120_crit_edge ]
  %shr.i.i.i.i118 = lshr i32 %135, 30
  %153 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load volatile i32, ptr %116, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %154)
  %cmp.i.not.i.i.i.i.i119 = icmp eq i32 %154, -1
  br i1 %cmp.i.not.i.i.i.i.i119, label %if.then.i.i.i9.i.i, label %PageHead.exit.i.i.i.i122, !prof !558

if.then.i.i.i9.i.i:                               ; preds = %folio_lru_list.exit.i.i120
  call void @__sanitizer_cov_trace_pc() #15
  %155 = inttoptr i32 %retval.0.i.i88 to ptr
  tail call void @dump_page(ptr noundef %155, ptr noundef nonnull @.str.153) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i.i.i.i122:                         ; preds = %folio_lru_list.exit.i.i120
  %156 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load volatile i32, ptr %116, align 4
  %158 = and i32 %157, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %158)
  %tobool.not.i.i.i.i121 = icmp eq i32 %158, 0
  br i1 %tobool.not.i.i.i.i121, label %PageHead.exit.i.i.i.i122.folio_nr_pages.exit.i.i_crit_edge, label %if.end.i.i.i.i124

PageHead.exit.i.i.i.i122.folio_nr_pages.exit.i.i_crit_edge: ; preds = %PageHead.exit.i.i.i.i122
  call void @__sanitizer_cov_trace_pc() #15
  br label %folio_nr_pages.exit.i.i

if.end.i.i.i.i124:                                ; preds = %PageHead.exit.i.i.i.i122
  call void @__sanitizer_cov_trace_pc() #15
  %compound_nr.i.i.i.i123 = getelementptr %struct.page, ptr %116, i32 1, i32 1, i32 0, i32 2
  %159 = ptrtoint ptr %compound_nr.i.i.i.i123 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %compound_nr.i.i.i.i123, align 4
  br label %folio_nr_pages.exit.i.i

folio_nr_pages.exit.i.i:                          ; preds = %if.end.i.i.i.i124, %PageHead.exit.i.i.i.i122.folio_nr_pages.exit.i.i_crit_edge
  %retval.0.i.i.i.i125 = phi i32 [ %160, %if.end.i.i.i.i124 ], [ 1, %PageHead.exit.i.i.i.i122.folio_nr_pages.exit.i.i_crit_edge ]
  %161 = ptrtoint ptr %pgdat.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %pgdat.i.i.i.i, align 4
  tail call void @__mod_lruvec_state(ptr noundef %retval.0.i161, i32 noundef %retval.0.i.i.i117, i32 noundef %retval.0.i.i.i.i125) #13
  %arrayidx.i.i.i127 = getelementptr [4 x %struct.zone], ptr %162, i32 0, i32 %shr.i.i.i.i118
  %add1.i.i.i128 = add nsw i32 %retval.0.i.i.i117, 1
  tail call void @__mod_zone_page_state(ptr noundef %arrayidx.i.i.i127, i32 noundef %add1.i.i.i128, i32 noundef %retval.0.i.i.i.i125) #13
  tail call void @mem_cgroup_update_lru_size(ptr noundef %retval.0.i161, i32 noundef %retval.0.i.i.i117, i32 noundef %shr.i.i.i.i118, i32 noundef %retval.0.i.i.i.i125) #13
  %arrayidx.i.i = getelementptr [5 x %struct.list_head], ptr %retval.0.i161, i32 0, i32 %retval.0.i.i.i117
  %163 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %arrayidx.i.i, align 4
  %call.i.i.i.i129 = tail call zeroext i1 @__list_add_valid(ptr noundef %117, ptr noundef %arrayidx.i.i, ptr noundef %164) #13
  br i1 %call.i.i.i.i129, label %if.end.i.i10.i.i, label %folio_nr_pages.exit.i.i.add_page_to_lru_list.exit_crit_edge

folio_nr_pages.exit.i.i.add_page_to_lru_list.exit_crit_edge: ; preds = %folio_nr_pages.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %add_page_to_lru_list.exit

if.end.i.i10.i.i:                                 ; preds = %folio_nr_pages.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %164, i32 0, i32 1
  %165 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store ptr %117, ptr %prev1.i.i.i.i, align 4
  %166 = ptrtoint ptr %117 to i32
  call void @__asan_store4_noabort(i32 %166)
  store ptr %164, ptr %117, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.anon.67, ptr %116, i32 0, i32 1, i32 1
  %167 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store ptr %arrayidx.i.i, ptr %prev3.i.i.i.i, align 4
  %168 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store volatile ptr %117, ptr %arrayidx.i.i, align 4
  br label %add_page_to_lru_list.exit

add_page_to_lru_list.exit:                        ; preds = %if.end.i.i10.i.i, %folio_nr_pages.exit.i.i.add_page_to_lru_list.exit_crit_edge
  %add14 = add i32 %pgrescued.0395, 1
  br label %if.end15

if.end15:                                         ; preds = %add_page_to_lru_list.exit, %PageUnevictable.exit.if.end15_crit_edge, %folio_lruvec_relock_irq.exit.if.end15_crit_edge
  %pgrescued.1 = phi i32 [ %add14, %add_page_to_lru_list.exit ], [ %pgrescued.0395, %PageUnevictable.exit.if.end15_crit_edge ], [ %pgrescued.0395, %folio_lruvec_relock_irq.exit.if.end15_crit_edge ]
  %169 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load volatile i32, ptr %4, align 4
  %and.i.i130 = and i32 %170, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i130)
  %tobool.not.i.i131 = icmp eq i32 %and.i.i130, 0
  br i1 %tobool.not.i.i131, label %if.end.i.i134, label %if.then.i.i133, !prof !557

if.then.i.i133:                                   ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i132 = add i32 %170, -1
  br label %_compound_head.exit.i139

if.end.i.i134:                                    ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  %171 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit.i139

_compound_head.exit.i139:                         ; preds = %if.end.i.i134, %if.then.i.i133
  %retval.0.i.i135 = phi i32 [ %sub.i.i132, %if.then.i.i133 ], [ %171, %if.end.i.i134 ]
  %172 = inttoptr i32 %retval.0.i.i135 to ptr
  %173 = ptrtoint ptr %172 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load volatile i32, ptr %172, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %174)
  %cmp.i.not.i136 = icmp eq i32 %174, -1
  %175 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load volatile i32, ptr %4, align 4
  %and.i12.i137 = and i32 %176, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i137)
  %tobool.not.i13.i138 = icmp eq i32 %and.i12.i137, 0
  br i1 %cmp.i.not.i136, label %if.then.i140, label %do.end8.i146, !prof !558

if.then.i140:                                     ; preds = %_compound_head.exit.i139
  br i1 %tobool.not.i13.i138, label %if.end.i16.i143, label %if.then.i15.i142, !prof !557

if.then.i15.i142:                                 ; preds = %if.then.i140
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i141 = add i32 %176, -1
  br label %_compound_head.exit18.i145

if.end.i16.i143:                                  ; preds = %if.then.i140
  call void @__sanitizer_cov_trace_pc() #15
  %177 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit18.i145

_compound_head.exit18.i145:                       ; preds = %if.end.i16.i143, %if.then.i15.i142
  %retval.0.i17.i144 = phi i32 [ %sub.i14.i141, %if.then.i15.i142 ], [ %177, %if.end.i16.i143 ]
  %178 = inttoptr i32 %retval.0.i17.i144 to ptr
  tail call void @dump_page(ptr noundef %178, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #13, !srcloc !642
  unreachable

do.end8.i146:                                     ; preds = %_compound_head.exit.i139
  br i1 %tobool.not.i13.i138, label %if.end.i23.i149, label %if.then.i22.i148, !prof !557

if.then.i22.i148:                                 ; preds = %do.end8.i146
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i147 = add i32 %176, -1
  br label %SetPageLRU.exit

if.end.i23.i149:                                  ; preds = %do.end8.i146
  call void @__sanitizer_cov_trace_pc() #15
  %179 = ptrtoint ptr %3 to i32
  br label %SetPageLRU.exit

SetPageLRU.exit:                                  ; preds = %if.end.i23.i149, %if.then.i22.i148
  %retval.0.i24.i150 = phi i32 [ %sub.i21.i147, %if.then.i22.i148 ], [ %179, %if.end.i23.i149 ]
  %180 = inttoptr i32 %retval.0.i24.i150 to ptr
  tail call void @_set_bit(i32 noundef 4, ptr noundef %180) #13
  br label %cleanup

cleanup:                                          ; preds = %SetPageLRU.exit, %TestClearPageLRU.exit.cleanup_crit_edge
  %lruvec.1 = phi ptr [ %retval.0.i161, %SetPageLRU.exit ], [ %lruvec.0392, %TestClearPageLRU.exit.cleanup_crit_edge ]
  %pgrescued.2 = phi i32 [ %pgrescued.1, %SetPageLRU.exit ], [ %pgrescued.0395, %TestClearPageLRU.exit.cleanup_crit_edge ]
  %181 = ptrtoint ptr %pvec to i32
  call void @__asan_load1_noabort(i32 %181)
  %182 = load i8, ptr %pvec, align 4
  %conv = zext i8 %182 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %cleanup.for.body_crit_edge, label %for.end

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %cleanup
  %tobool18.not = icmp eq ptr %lruvec.1, null
  br i1 %tobool18.not, label %if.then21, label %if.then19

if.then19:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  %183 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i162 = and i32 %183, -16384
  %184 = inttoptr i32 %and.i.i162 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %184, i32 0, i32 3
  %185 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %cpu.i, align 4
  %arrayidx7.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %186
  %187 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %arrayidx7.i, align 4
  %add.i = add i32 %188, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 64) to i32)
  %189 = inttoptr i32 %add.i to ptr
  %190 = ptrtoint ptr %189 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %189, align 4
  %add8.i = add i32 %191, %pgrescued.2
  store i32 %add8.i, ptr %189, align 4
  %192 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i163 = and i32 %192, -16384
  %193 = inttoptr i32 %and.i.i163 to ptr
  %cpu.i164 = getelementptr inbounds %struct.thread_info, ptr %193, i32 0, i32 3
  %194 = ptrtoint ptr %cpu.i164 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %cpu.i164, align 4
  %arrayidx7.i165 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %195
  %196 = ptrtoint ptr %arrayidx7.i165 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %arrayidx7.i165, align 4
  %add.i166 = add i32 %197, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 63) to i32)
  %198 = inttoptr i32 %add.i166 to ptr
  %199 = ptrtoint ptr %198 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %198, align 4
  %add8.i167 = add i32 %200, %inc
  store i32 %add8.i167, ptr %198, align 4
  %lru_lock.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.1, i32 0, i32 1
  tail call void @_raw_spin_unlock_irq(ptr noundef %lru_lock.i) #13
  br label %if.end23

if.then21:                                        ; preds = %for.end
  %201 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %202 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i168 = and i32 %202, -16384
  %203 = inttoptr i32 %and.i.i168 to ptr
  %cpu.i169 = getelementptr inbounds %struct.thread_info, ptr %203, i32 0, i32 3
  %204 = ptrtoint ptr %cpu.i169 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %cpu.i169, align 4
  %arrayidx13.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %205
  %206 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %arrayidx13.i, align 4
  %add.i170 = add i32 %207, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 63) to i32)
  %208 = inttoptr i32 %add.i170 to ptr
  %209 = ptrtoint ptr %208 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %208, align 4
  %add14.i = add i32 %210, %inc
  store i32 %add14.i, ptr %208, align 4
  %211 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i = and i32 %211, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i171 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i171, label %if.then.i172, label %if.then21.count_vm_events.exit_crit_edge, !prof !558

if.then21.count_vm_events.exit_crit_edge:         ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #15
  br label %count_vm_events.exit

if.then.i172:                                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @warn_bogus_irq_restore() #13
  br label %count_vm_events.exit

count_vm_events.exit:                             ; preds = %if.then.i172, %if.then21.count_vm_events.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %201) #13, !srcloc !615
  br label %if.end23

if.end23:                                         ; preds = %count_vm_events.exit, %if.then19, %entry.if.end23_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @page_evictable(ptr noundef %page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !562
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #13
  %call.i = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.145, i32 noundef 696, ptr noundef nonnull @.str.146) #13
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call ptr @page_mapping(ptr noundef %page) #13
  %tobool.not.i6 = icmp eq ptr %call, null
  br i1 %tobool.not.i6, label %rcu_read_lock.exit.land.rhs_crit_edge, label %mapping_unevictable.exit

rcu_read_lock.exit.land.rhs_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.rhs

mapping_unevictable.exit:                         ; preds = %rcu_read_lock.exit
  %flags.i = getelementptr inbounds %struct.address_space, ptr %call, i32 0, i32 10
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %flags.i, align 4
  %6 = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool1.i.not = icmp eq i32 %6, 0
  br i1 %tobool1.i.not, label %mapping_unevictable.exit.land.rhs_crit_edge, label %mapping_unevictable.exit.land.end_crit_edge

mapping_unevictable.exit.land.end_crit_edge:      ; preds = %mapping_unevictable.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end

mapping_unevictable.exit.land.rhs_crit_edge:      ; preds = %mapping_unevictable.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.rhs

land.rhs:                                         ; preds = %mapping_unevictable.exit.land.rhs_crit_edge, %rcu_read_lock.exit.land.rhs_crit_edge
  %7 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 4
  %and.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %9, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  %10 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %10, %if.end.i.i ]
  %11 = inttoptr i32 %retval.0.i.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %cmp.i.not.i = icmp eq i32 %13, -1
  %14 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %7, align 4
  %and.i16.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i5, label %do.end10.i, !prof !558

if.then.i5:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !557

if.then.i19.i:                                    ; preds = %if.then.i5
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i18.i = add i32 %15, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i5
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %16, %if.end.i20.i ]
  %17 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %17, ptr noundef nonnull @.str.154) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 504, 0\0A.popsection", ""() #13, !srcloc !616
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !557

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i25.i = add i32 %15, -1
  br label %PageMlocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #15
  %18 = ptrtoint ptr %page to i32
  br label %PageMlocked.exit

PageMlocked.exit:                                 ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %18, %if.end.i27.i ]
  %19 = inttoptr i32 %retval.0.i28.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  %22 = and i32 %21, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not = icmp eq i32 %22, 0
  br label %land.end

land.end:                                         ; preds = %PageMlocked.exit, %mapping_unevictable.exit.land.end_crit_edge
  %23 = phi i1 [ false, %mapping_unevictable.exit.land.end_crit_edge ], [ %tobool.not, %PageMlocked.exit ]
  %call.i7 = tail call zeroext i1 @rcu_is_watching() #13
  br i1 %call.i7, label %land.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i10

land.end.rcu_read_unlock.exit_crit_edge:          ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true.i10:                                ; preds = %land.end
  %call1.i8 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i8)
  %tobool.not.i9 = icmp eq i32 %call1.i8, 0
  br i1 %tobool.not.i9, label %land.lhs.true.i10.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i12

land.lhs.true.i10.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i10
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

land.lhs.true2.i12:                               ; preds = %land.lhs.true.i10
  %.b4.i11 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i11, label %land.lhs.true2.i12.rcu_read_unlock.exit_crit_edge, label %if.then.i13

land.lhs.true2.i12.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i12
  call void @__sanitizer_cov_trace_pc() #15
  br label %rcu_read_unlock.exit

if.then.i13:                                      ; preds = %land.lhs.true2.i12
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.145, i32 noundef 724, ptr noundef nonnull @.str.147) #13
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i13, %land.lhs.true2.i12.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i10.rcu_read_unlock.exit_crit_edge, %land.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !564
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i.i14 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i14 to ptr
  %preempt_count.i.i.i.i15 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i15 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i15, align 4
  %sub.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i15, align 4
  tail call void @rcu_read_unlock_strict() #13
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #13
  ret i1 %23
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_kswapd_sleep(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_sleep, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.31, i32 noundef %3) #13
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_kswapd_wake(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_wake, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  %order = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_kswapd_wake, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %order, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.34, i32 noundef %3, i32 noundef %5) #13
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_wakeup_kswapd(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  %order = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %order, align 4
  %gfp_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_wakeup_kswapd, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %gfp_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gfp_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.75, i32 noundef %7, ptr noundef nonnull @trace_raw_output_mm_vmscan_wakeup_kswapd.__flags) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call2, %cond.true ], [ @.str.76, %if.end.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.37, i32 noundef %3, i32 noundef %5, ptr noundef %cond) #13
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_direct_reclaim_begin_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %order = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_direct_reclaim_begin_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %order, align 4
  %gfp_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_direct_reclaim_begin_template, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gfp_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gfp_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.75, i32 noundef %5, ptr noundef nonnull @trace_raw_output_mm_vmscan_direct_reclaim_begin_template.__flags) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call2, %cond.true ], [ @.str.76, %if.end.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.77, i32 noundef %3, ptr noundef %cond) #13
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_direct_reclaim_end_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nr_reclaimed = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_direct_reclaim_end_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nr_reclaimed to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_reclaimed, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.80, i32 noundef %3) #13
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_shrink_slab_start(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %shrink = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %shrink to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %shrink, align 4
  %shr = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %shr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %shr, align 8
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nid, align 8
  %nr_objects_to_shrink = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %nr_objects_to_shrink to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_objects_to_shrink, align 4
  %gfp_flags = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %gfp_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %gfp_flags, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not = icmp eq i32 %11, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.75, i32 noundef %11, ptr noundef nonnull @trace_raw_output_mm_shrink_slab_start.__flags) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call2, %cond.true ], [ @.str.76, %if.end.cond.end_crit_edge ]
  %cache_items = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %cache_items to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cache_items, align 4
  %delta = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %delta to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %delta, align 8
  %total_scan = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %total_scan to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %total_scan, align 8
  %priority = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_start, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %priority to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %priority, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.92, ptr noundef %3, ptr noundef %5, i32 noundef %7, i32 noundef %9, ptr noundef %cond, i32 noundef %13, i64 noundef %15, i32 noundef %17, i32 noundef %19) #13
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_shrink_slab_end(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %shrink = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %shrink to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %shrink, align 4
  %shr = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %shr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %shr, align 4
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nid, align 4
  %unused_scan = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %unused_scan to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %unused_scan, align 4
  %new_scan = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %new_scan to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %new_scan, align 4
  %total_scan = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %total_scan to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %total_scan, align 4
  %retval1 = getelementptr inbounds %struct.trace_event_raw_mm_shrink_slab_end, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %retval1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %retval1, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.96, ptr noundef %3, ptr noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15) #13
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_lru_isolate(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %isolate_mode = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %isolate_mode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %isolate_mode, align 4
  %highest_zoneidx = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %highest_zoneidx, align 4
  %order = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %order, align 4
  %nr_requested = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %nr_requested to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_requested, align 4
  %nr_scanned = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_scanned, align 4
  %nr_skipped = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %nr_skipped to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_skipped, align 4
  %nr_taken = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %nr_taken to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nr_taken, align 4
  %lru = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_isolate, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %lru to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %lru, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %17, ptr noundef nonnull @trace_raw_output_mm_vmscan_lru_isolate.symbols) #13
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.105, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, ptr noundef %call1) #13
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_writepage(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %2 = load ptr, ptr @mem_map, align 4
  %pfn = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_writepage, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %pfn, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %5 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %sub = sub i32 %4, %5
  %add.ptr = getelementptr %struct.page, ptr %2, i32 %sub
  %reclaim_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_writepage, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %reclaim_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %reclaim_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.75, i32 noundef %7, ptr noundef nonnull @trace_raw_output_mm_vmscan_writepage.__flags) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call3, %cond.true ], [ @.str.119, %if.end.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.113, ptr noundef %add.ptr, i32 noundef %4, ptr noundef %cond) #13
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_lru_shrink_inactive(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  %nr_scanned = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_scanned, align 4
  %nr_reclaimed = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %nr_reclaimed to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_reclaimed, align 4
  %nr_dirty = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %nr_dirty to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_dirty, align 4
  %nr_writeback = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %nr_writeback to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_writeback, align 4
  %nr_congested = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %nr_congested to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_congested, align 4
  %nr_immediate = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %nr_immediate to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nr_immediate, align 4
  %nr_activate0 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %nr_activate0 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %nr_activate0, align 4
  %nr_activate1 = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %nr_activate1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %nr_activate1, align 4
  %nr_ref_keep = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %nr_ref_keep to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %nr_ref_keep, align 4
  %nr_unmap_fail = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 11
  %22 = ptrtoint ptr %nr_unmap_fail to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %nr_unmap_fail, align 4
  %priority = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 12
  %24 = ptrtoint ptr %priority to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %priority, align 4
  %reclaim_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_inactive, ptr %1, i32 0, i32 13
  %26 = ptrtoint ptr %reclaim_flags to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %reclaim_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not = icmp eq i32 %27, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.75, i32 noundef %27, ptr noundef nonnull @trace_raw_output_mm_vmscan_lru_shrink_inactive.__flags) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call2, %cond.true ], [ @.str.119, %if.end.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.129, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23, i32 noundef %25, ptr noundef %cond) #13
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_lru_shrink_active(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  %nr_taken = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nr_taken to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_taken, align 4
  %nr_active = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_active, align 4
  %nr_deactivated = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %nr_deactivated to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nr_deactivated, align 4
  %nr_referenced = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %nr_referenced to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_referenced, align 4
  %priority = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %priority to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %priority, align 4
  %reclaim_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_lru_shrink_active, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %reclaim_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %reclaim_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not = icmp eq i32 %15, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.75, i32 noundef %15, ptr noundef nonnull @trace_raw_output_mm_vmscan_lru_shrink_active.__flags) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call2, %cond.true ], [ @.str.119, %if.end.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.133, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, ptr noundef %cond) #13
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_node_reclaim_begin(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_node_reclaim_begin, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  %order = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_node_reclaim_begin, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %order, align 4
  %gfp_flags = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_node_reclaim_begin, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %gfp_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gfp_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.75, i32 noundef %7, ptr noundef nonnull @trace_raw_output_mm_vmscan_node_reclaim_begin.__flags) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call2, %cond.true ], [ @.str.76, %if.end.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.37, i32 noundef %3, i32 noundef %5, ptr noundef %cond) #13
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mm_vmscan_throttled(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %nid = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nid, align 4
  %usec_timeout = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %usec_timeout, align 4
  %usec_delayed = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %usec_delayed to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %usec_delayed, align 4
  %reason = getelementptr inbounds %struct.trace_event_raw_mm_vmscan_throttled, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %reason to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %reason, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.75, i32 noundef %9, ptr noundef nonnull @trace_raw_output_mm_vmscan_throttled.__flags) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %call2, %cond.true ], [ @.str.142, %if.end.cond.end_crit_edge ]
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.137, i32 noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %cond) #13
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %cond.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #6

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #6

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run7(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run6(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run8(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #9

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mem_cgroup_get_nr_swap_pages(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @next_demotion_node(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @idr_alloc(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_remove(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mem_cgroup_iter(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_iter_break(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @shrink_slab(i32 noundef %gfp_mask, i32 noundef %nid, ptr noundef %memcg, i32 noundef %priority) unnamed_addr #0 align 64 {
entry:
  %sc = alloca %struct.shrink_control, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_slab, %if.end)) #13
          to label %land.lhs.true [label %if.end], !srcloc !567

land.lhs.true:                                    ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %0 = load ptr, ptr @root_mem_cgroup, align 4
  %cmp.i = icmp eq ptr %0, %memcg
  br i1 %cmp.i, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  %call2 = tail call fastcc i32 @shrink_slab_memcg(i32 noundef %gfp_mask, i32 noundef %nid, ptr noundef %memcg, i32 noundef %priority)
  br label %cleanup24

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry
  %call3 = tail call i32 @down_read_trylock(ptr noundef nonnull @shrinker_rwsem) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end.out_crit_edge, label %for.cond.preheader

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

for.cond.preheader:                               ; preds = %if.end
  %1 = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 1
  %2 = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 2
  %3 = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 3
  %4 = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 4
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %for.cond.preheader
  %.pn.in = phi ptr [ %.pn, %for.body.for.cond_crit_edge ], [ @shrinker_list, %for.cond.preheader ]
  %freed.0 = phi i32 [ %add, %for.body.for.cond_crit_edge ], [ 0, %for.cond.preheader ]
  %5 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, @shrinker_list
  br i1 %cmp.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body:                                         ; preds = %for.cond
  %shrinker.0 = getelementptr i8, ptr %.pn, i32 -20
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %sc) #13
  %6 = ptrtoint ptr %sc to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %gfp_mask, ptr %sc, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %nid, ptr %1, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %2, align 4
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %3, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %memcg, ptr %4, align 4
  %call9 = call fastcc i32 @do_shrink_slab(ptr noundef nonnull %sc, ptr noundef %shrinker.0, i32 noundef %priority)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %call9)
  %cmp10 = icmp eq i32 %call9, -2
  %spec.store.select = select i1 %cmp10, i32 0, i32 %call9
  %add = add i32 %spec.store.select, %freed.0
  %11 = load volatile ptr, ptr getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 4), align 4
  %cmp.i.i.not = icmp eq ptr %11, getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 4)
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %sc) #13
  br i1 %cmp.i.i.not, label %for.body.for.cond_crit_edge, label %for.end.split.loop.exit

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond

for.end.split.loop.exit:                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %tobool16.not.le = icmp eq i32 %add, 0
  %..le = select i1 %tobool16.not.le, i32 1, i32 %add
  br label %for.end

for.end:                                          ; preds = %for.end.split.loop.exit, %for.cond.for.end_crit_edge
  %freed.2 = phi i32 [ %..le, %for.end.split.loop.exit ], [ %freed.0, %for.cond.for.end_crit_edge ]
  call void @up_read(ptr noundef nonnull @shrinker_rwsem) #13
  br label %out

out:                                              ; preds = %for.end, %if.end.out_crit_edge
  %freed.3 = phi i32 [ %freed.2, %for.end ], [ 0, %if.end.out_crit_edge ]
  call void @__might_resched(ptr noundef nonnull @.str.21, i32 noundef 950, i32 noundef 0) #13
  %call.i = call i32 @__cond_resched() #13
  br label %cleanup24

cleanup24:                                        ; preds = %out, %if.then
  %retval.0 = phi i32 [ %freed.3, %out ], [ %call2, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @shrink_slab_memcg(i32 noundef %gfp_mask, i32 noundef %nid, ptr noundef %memcg, i32 noundef %priority) unnamed_addr #0 align 64 {
entry:
  %sc = alloca %struct.shrink_control, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_slab_memcg, %if.end)) #13
          to label %if.end.i [label %if.end], !srcloc !567

if.end.i:                                         ; preds = %entry
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %memcg, i32 0, i32 7
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end.i.cleanup59_crit_edge, label %if.end.i.if.end_crit_edge

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i.cleanup59_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup59

if.end:                                           ; preds = %if.end.i.if.end_crit_edge, %entry
  %call1 = tail call i32 @down_read_trylock(ptr noundef nonnull @shrinker_rwsem) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end.cleanup59_crit_edge, label %if.end3

if.end.cleanup59_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup59

if.end3:                                          ; preds = %if.end
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 6), i32 noundef -1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end3.shrinker_info_protected.exit_crit_edge

if.end3.shrinker_info_protected.exit_crit_edge:   ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit

land.lhs.true.i:                                  ; preds = %if.end3
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.shrinker_info_protected.exit_crit_edge, label %land.lhs.true3.i

land.lhs.true.i.shrinker_info_protected.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %.b5.i = load i1, ptr @shrinker_info_protected.__warned, align 1
  br i1 %.b5.i, label %land.lhs.true3.i.shrinker_info_protected.exit_crit_edge, label %if.then.i

land.lhs.true3.i.shrinker_info_protected.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %shrinker_info_protected.exit

if.then.i:                                        ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @shrinker_info_protected.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.21, i32 noundef 212, ptr noundef nonnull @.str.148) #13
  br label %shrinker_info_protected.exit

shrinker_info_protected.exit:                     ; preds = %if.then.i, %land.lhs.true3.i.shrinker_info_protected.exit_crit_edge, %land.lhs.true.i.shrinker_info_protected.exit_crit_edge, %if.end3.shrinker_info_protected.exit_crit_edge
  %arrayidx.i = getelementptr %struct.mem_cgroup, ptr %memcg, i32 0, i32 45, i32 %nid
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %shrinker_info.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %shrinker_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %shrinker_info.i, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %shrinker_info_protected.exit.unlock_crit_edge, label %if.end10, !prof !558

shrinker_info_protected.exit.unlock_crit_edge:    ; preds = %shrinker_info_protected.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %unlock

if.end10:                                         ; preds = %shrinker_info_protected.exit
  %map = getelementptr inbounds %struct.shrinker_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %map, align 4
  %8 = load i32, ptr @shrinker_nr_max, align 4
  %call11 = tail call i32 @_find_next_bit_be(ptr noundef %7, i32 noundef %8, i32 noundef 0) #13
  %9 = load i32, ptr @shrinker_nr_max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call11, i32 %9)
  %cmp94 = icmp slt i32 %call11, %9
  br i1 %cmp94, label %for.body.lr.ph, label %if.end10.unlock_crit_edge

if.end10.unlock_crit_edge:                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %unlock

for.body.lr.ph:                                   ; preds = %if.end10
  %10 = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 1
  %11 = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 2
  %12 = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 3
  %13 = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.097 = phi i32 [ %call11, %for.body.lr.ph ], [ %call58, %for.inc.for.body_crit_edge ]
  %freed.095 = phi i32 [ 0, %for.body.lr.ph ], [ %freed.1.ph, %for.inc.for.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %sc) #13
  %14 = ptrtoint ptr %sc to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %gfp_mask, ptr %sc, align 4
  %15 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %nid, ptr %10, align 4
  %16 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %11, align 4
  %17 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %12, align 4
  %18 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %memcg, ptr %13, align 4
  %call15 = call ptr @idr_find(ptr noundef nonnull @shrinker_idr, i32 noundef %i.097) #13
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %if.then28.critedge, label %lor.rhs, !prof !558

lor.rhs:                                          ; preds = %for.body
  %flags = getelementptr inbounds %struct.shrinker, ptr %call15, i32 0, i32 4
  %19 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags, align 4
  %and = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool17.not = icmp eq i32 %and, 0
  br i1 %tobool17.not, label %lor.rhs.for.inc_crit_edge, label %if.end31, !prof !558

lor.rhs.for.inc_crit_edge:                        ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then28.critedge:                               ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %21 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %map, align 4
  call void @_clear_bit(i32 noundef %i.097, ptr noundef %22) #13
  br label %for.inc

if.end31:                                         ; preds = %lor.rhs
  callbr void asm sideeffect "1:\0A\09b ${1:l}\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memcg_kmem_enabled_key, i32 1), ptr blockaddress(@shrink_slab_memcg, %land.lhs.true)) #13
          to label %if.end37 [label %land.lhs.true], !srcloc !643

land.lhs.true:                                    ; preds = %if.end31
  %23 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags, align 4
  %and34 = and i32 %24, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.if.end37_crit_edge

land.lhs.true.if.end37_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end37

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end37:                                         ; preds = %land.lhs.true.if.end37_crit_edge, %if.end31
  %call38 = call fastcc i32 @do_shrink_slab(ptr noundef nonnull %sc, ptr noundef nonnull %call15, i32 noundef %priority)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %call38)
  %cmp39 = icmp eq i32 %call38, -2
  br i1 %cmp39, label %if.then40, label %if.end37.if.end49_crit_edge

if.end37.if.end49_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end49

if.then40:                                        ; preds = %if.end37
  %25 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %map, align 4
  call void @_clear_bit(i32 noundef %i.097, ptr noundef %26) #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !644
  %call45 = call fastcc i32 @do_shrink_slab(ptr noundef nonnull %sc, ptr noundef nonnull %call15, i32 noundef %priority)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %call45)
  %cmp46 = icmp eq i32 %call45, -2
  br i1 %cmp46, label %if.then40.if.end49_crit_edge, label %if.else

if.then40.if.end49_crit_edge:                     ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end49

if.else:                                          ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #15
  call void @set_shrinker_bit(ptr noundef %memcg, i32 noundef %nid, i32 noundef %i.097)
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then40.if.end49_crit_edge, %if.end37.if.end49_crit_edge
  %ret.0 = phi i32 [ %call45, %if.else ], [ %call38, %if.end37.if.end49_crit_edge ], [ 0, %if.then40.if.end49_crit_edge ]
  %add = add i32 %ret.0, %freed.095
  %27 = load volatile ptr, ptr getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 4), align 4
  %cmp.i.i.not = icmp eq ptr %27, getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 4)
  br i1 %cmp.i.i.not, label %if.end49.for.inc_crit_edge, label %cleanup

if.end49.for.inc_crit_edge:                       ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

cleanup:                                          ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %tobool53.not = icmp eq i32 %add, 0
  %. = select i1 %tobool53.not, i32 1, i32 %add
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %sc) #13
  br label %unlock

for.inc:                                          ; preds = %if.end49.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %if.then28.critedge, %lor.rhs.for.inc_crit_edge
  %freed.1.ph = phi i32 [ %add, %if.end49.for.inc_crit_edge ], [ %freed.095, %land.lhs.true.for.inc_crit_edge ], [ %freed.095, %if.then28.critedge ], [ %freed.095, %lor.rhs.for.inc_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %sc) #13
  %28 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %map, align 4
  %30 = load i32, ptr @shrinker_nr_max, align 4
  %add57 = add nsw i32 %i.097, 1
  %call58 = call i32 @_find_next_bit_be(ptr noundef %29, i32 noundef %30, i32 noundef %add57) #13
  %31 = load i32, ptr @shrinker_nr_max, align 4
  %cmp = icmp slt i32 %call58, %31
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.unlock_crit_edge

for.inc.unlock_crit_edge:                         ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %unlock

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

unlock:                                           ; preds = %for.inc.unlock_crit_edge, %cleanup, %if.end10.unlock_crit_edge, %shrinker_info_protected.exit.unlock_crit_edge
  %freed.2 = phi i32 [ 0, %shrinker_info_protected.exit.unlock_crit_edge ], [ %., %cleanup ], [ 0, %if.end10.unlock_crit_edge ], [ %freed.1.ph, %for.inc.unlock_crit_edge ]
  call void @up_read(ptr noundef nonnull @shrinker_rwsem) #13
  br label %cleanup59

cleanup59:                                        ; preds = %unlock, %if.end.cleanup59_crit_edge, %if.end.i.cleanup59_crit_edge
  %retval.0 = phi i32 [ %freed.2, %unlock ], [ 0, %if.end.cleanup59_crit_edge ], [ 0, %if.end.i.cleanup59_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @down_read_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_shrink_slab(ptr noundef %shrinkctl, ptr noundef %shrinker, i32 noundef %priority) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %batch = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 2
  %0 = ptrtoint ptr %batch to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %batch, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  %spec.select = select i1 %tobool.not, i32 128, i32 %1
  %2 = ptrtoint ptr %shrinker to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %shrinker, align 4
  %call = tail call i32 %3(ptr noundef %shrinker, ptr noundef %shrinkctl) #13
  %4 = zext i32 %call to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.183)
  switch i32 %call, label %if.end [
    i32 0, label %entry.cleanup262_crit_edge
    i32 -2, label %entry.cleanup262_crit_edge485
  ]

entry.cleanup262_crit_edge485:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup262

entry.cleanup262_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup262

if.end:                                           ; preds = %entry
  %nid1.i = getelementptr inbounds %struct.shrink_control, ptr %shrinkctl, i32 0, i32 1
  %5 = ptrtoint ptr %nid1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %nid1.i, align 4
  %flags.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 4
  %7 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %spec.store.select.i = select i1 %tobool.not.i, i32 0, i32 %6
  %memcg.i = getelementptr inbounds %struct.shrink_control, ptr %shrinkctl, i32 0, i32 4
  %9 = ptrtoint ptr %memcg.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %memcg.i, align 4
  %tobool2.not.i = icmp eq ptr %10, null
  %and4.i = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  %or.cond.i = select i1 %tobool2.not.i, i1 true, i1 %tobool5.not.i
  br i1 %or.cond.i, label %if.end8.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.end
  %call.i.i2.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 6), i32 noundef -1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i2.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i2.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %if.then6.i.xchg_nr_deferred_memcg.exit.i_crit_edge

if.then6.i.xchg_nr_deferred_memcg.exit.i_crit_edge: ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %xchg_nr_deferred_memcg.exit.i

land.lhs.true.i.i.i:                              ; preds = %if.then6.i
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %land.lhs.true.i.i.i.xchg_nr_deferred_memcg.exit.i_crit_edge, label %land.lhs.true3.i.i.i

land.lhs.true.i.i.i.xchg_nr_deferred_memcg.exit.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %xchg_nr_deferred_memcg.exit.i

land.lhs.true3.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b5.i.i.i = load i1, ptr @shrinker_info_protected.__warned, align 1
  br i1 %.b5.i.i.i, label %land.lhs.true3.i.i.i.xchg_nr_deferred_memcg.exit.i_crit_edge, label %if.then.i.i.i

land.lhs.true3.i.i.i.xchg_nr_deferred_memcg.exit.i_crit_edge: ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %xchg_nr_deferred_memcg.exit.i

if.then.i.i.i:                                    ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @shrinker_info_protected.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.21, i32 noundef 212, ptr noundef nonnull @.str.148) #13
  br label %xchg_nr_deferred_memcg.exit.i

xchg_nr_deferred_memcg.exit.i:                    ; preds = %if.then.i.i.i, %land.lhs.true3.i.i.i.xchg_nr_deferred_memcg.exit.i_crit_edge, %land.lhs.true.i.i.i.xchg_nr_deferred_memcg.exit.i_crit_edge, %if.then6.i.xchg_nr_deferred_memcg.exit.i_crit_edge
  %arrayidx.i.i.i = getelementptr %struct.mem_cgroup, ptr %10, i32 0, i32 45, i32 %spec.store.select.i
  %11 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i.i.i, align 4
  %shrinker_info.i.i.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %12, i32 0, i32 5
  %13 = ptrtoint ptr %shrinker_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %shrinker_info.i.i.i, align 4
  %nr_deferred.i.i = getelementptr inbounds %struct.shrinker_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %nr_deferred.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %nr_deferred.i.i, align 4
  %id.i.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 6
  %17 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.atomic_t, ptr %16, i32 %18
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.i, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !645
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.i, i32 1, i32 3, i32 1) #13
  %19 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %arrayidx.i.i) #13, !srcloc !646
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !647
  br label %xchg_nr_deferred.exit

if.end8.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %nr_deferred.i = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 7
  %20 = ptrtoint ptr %nr_deferred.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %nr_deferred.i, align 4
  %arrayidx.i = getelementptr %struct.atomic_t, ptr %21, i32 %spec.store.select.i
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !645
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i, i32 1, i32 3, i32 1) #13
  %22 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %arrayidx.i) #13, !srcloc !646
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !647
  br label %xchg_nr_deferred.exit

xchg_nr_deferred.exit:                            ; preds = %if.end8.i, %xchg_nr_deferred_memcg.exit.i
  %.pn.i = phi { i32, i32 } [ %19, %xchg_nr_deferred_memcg.exit.i ], [ %22, %if.end8.i ]
  %retval.0.i = extractvalue { i32, i32 } %.pn.i, 0
  %seeks = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 3
  %23 = ptrtoint ptr %seeks to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %seeks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool4.not = icmp eq i32 %24, 0
  br i1 %tobool4.not, label %if.else199, label %if.then5

if.then5:                                         ; preds = %xchg_nr_deferred.exit
  %shr = ashr i32 %call, %priority
  %conv = sext i32 %shr to i64
  %mul = shl nsw i64 %conv, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %mul)
  %cmp183 = icmp ult i64 %mul, 4294967296
  br i1 %cmp183, label %if.then187, label %if.else193, !prof !557

if.then187:                                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  %conv188 = trunc i64 %mul to i32
  %div191 = udiv i32 %conv188, %24
  %conv192 = zext i32 %div191 to i64
  br label %if.end202

if.else193:                                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  %25 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %24, i64 %mul) #20, !srcloc !648
  %asmresult1.i = extractvalue { i64, i64 } %25, 1
  br label %if.end202

if.else199:                                       ; preds = %xchg_nr_deferred.exit
  call void @__sanitizer_cov_trace_pc() #15
  %div200 = sdiv i32 %call, 2
  %conv201 = sext i32 %div200 to i64
  br label %if.end202

if.end202:                                        ; preds = %if.else199, %if.else193, %if.then187
  %delta.0 = phi i64 [ %conv201, %if.else199 ], [ %conv192, %if.then187 ], [ %asmresult1.i, %if.else193 ]
  %shr203 = ashr i32 %retval.0.i, %priority
  %26 = trunc i64 %delta.0 to i32
  %conv206 = add i32 %shr203, %26
  %mul207 = shl i32 %call, 1
  %27 = tail call i32 @llvm.smin.i32(i32 %conv206, i32 %mul207)
  tail call fastcc void @trace_mm_shrink_slab_start(ptr noundef %shrinker, ptr noundef %shrinkctl, i32 noundef %retval.0.i, i32 noundef %call, i64 noundef %delta.0, i32 noundef %27, i32 noundef %priority)
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %spec.select)
  %cmp215.not474 = icmp slt i32 %27, %spec.select
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %call)
  %cmp217.not475 = icmp slt i32 %27, %call
  %or.cond476 = select i1 %cmp215.not474, i1 %cmp217.not475, i1 false
  br i1 %or.cond476, label %if.end202.while.end_crit_edge, label %while.body.lr.ph

if.end202.while.end_crit_edge:                    ; preds = %if.end202
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end202
  %nr_to_scan226 = getelementptr inbounds %struct.shrink_control, ptr %shrinkctl, i32 0, i32 2
  %nr_scanned = getelementptr inbounds %struct.shrink_control, ptr %shrinkctl, i32 0, i32 3
  %scan_objects = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 1
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %freed.0479 = phi i32 [ 0, %while.body.lr.ph ], [ %add232, %cleanup.while.body_crit_edge ]
  %total_scan.0478 = phi i32 [ %27, %while.body.lr.ph ], [ %sub235, %cleanup.while.body_crit_edge ]
  %scanned.0477 = phi i32 [ 0, %while.body.lr.ph ], [ %add237, %cleanup.while.body_crit_edge ]
  %28 = tail call i32 @llvm.smin.i32(i32 %spec.select, i32 %total_scan.0478)
  %29 = ptrtoint ptr %nr_to_scan226 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %nr_to_scan226, align 4
  %30 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %28, ptr %nr_scanned, align 4
  %31 = ptrtoint ptr %scan_objects to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %scan_objects, align 4
  %call227 = tail call i32 %32(ptr noundef %shrinker, ptr noundef %shrinkctl) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call227)
  %cmp228 = icmp eq i32 %call227, -1
  br i1 %cmp228, label %while.body.while.end_crit_edge, label %if.end231

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end231:                                        ; preds = %while.body
  %add232 = add i32 %call227, %freed.0479
  %33 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %nr_scanned, align 4
  %35 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %36 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 3
  %38 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cpu.i, align 4
  %arrayidx13.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %39
  %40 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx13.i, align 4
  %add.i = add i32 %41, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 37) to i32)
  %42 = inttoptr i32 %add.i to ptr
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  %add14.i = add i32 %44, %34
  store i32 %add14.i, ptr %42, align 4
  %45 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i = and i32 %45, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i413 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i413, label %if.then.i, label %if.end231.cleanup_crit_edge, !prof !558

if.end231.cleanup_crit_edge:                      ; preds = %if.end231
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then.i:                                        ; preds = %if.end231
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @warn_bogus_irq_restore() #13
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end231.cleanup_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %35) #13, !srcloc !615
  %46 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %nr_scanned, align 4
  %sub235 = sub i32 %total_scan.0478, %47
  %add237 = add i32 %47, %scanned.0477
  tail call void @__might_resched(ptr noundef nonnull @.str.21, i32 noundef 782, i32 noundef 0) #13
  %call.i = tail call i32 @__cond_resched() #13
  call void @__sanitizer_cov_trace_cmp4(i32 %sub235, i32 %spec.select)
  %cmp215.not = icmp slt i32 %sub235, %spec.select
  call void @__sanitizer_cov_trace_cmp4(i32 %sub235, i32 %call)
  %cmp217.not = icmp slt i32 %sub235, %call
  %or.cond = select i1 %cmp215.not, i1 %cmp217.not, i1 false
  br i1 %or.cond, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %while.body.while.end_crit_edge, %if.end202.while.end_crit_edge
  %scanned.0.lcssa = phi i32 [ 0, %if.end202.while.end_crit_edge ], [ %scanned.0477, %while.body.while.end_crit_edge ], [ %add237, %cleanup.while.end_crit_edge ]
  %total_scan.0.lcssa = phi i32 [ %27, %if.end202.while.end_crit_edge ], [ %total_scan.0478, %while.body.while.end_crit_edge ], [ %sub235, %cleanup.while.end_crit_edge ]
  %freed.0.lcssa = phi i32 [ 0, %if.end202.while.end_crit_edge ], [ %freed.0479, %while.body.while.end_crit_edge ], [ %add232, %cleanup.while.end_crit_edge ]
  %48 = add i32 %retval.0.i, %26
  %conv245 = sub i32 %48, %scanned.0.lcssa
  %49 = tail call i32 @llvm.smax.i32(i32 %conv245, i32 0)
  %50 = tail call i32 @llvm.smin.i32(i32 %49, i32 %mul207)
  %51 = ptrtoint ptr %nid1.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %nid1.i, align 4
  %53 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %flags.i, align 4
  %and.i416 = and i32 %54, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i416)
  %tobool.not.i417 = icmp eq i32 %and.i416, 0
  %spec.store.select.i418 = select i1 %tobool.not.i417, i32 0, i32 %52
  %55 = ptrtoint ptr %memcg.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %memcg.i, align 4
  %tobool2.not.i420 = icmp eq ptr %56, null
  %and4.i421 = and i32 %54, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i421)
  %tobool5.not.i422 = icmp eq i32 %and4.i421, 0
  %or.cond.i423 = select i1 %tobool2.not.i420, i1 true, i1 %tobool5.not.i422
  br i1 %or.cond.i423, label %if.end8.i442, label %if.then6.i426

if.then6.i426:                                    ; preds = %while.end
  %call.i.i2.i.i424 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rw_semaphore, ptr @shrinker_rwsem, i32 0, i32 6), i32 noundef -1) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i2.i.i424)
  %tobool.not.i.i.i425 = icmp eq i32 %call.i.i2.i.i424, 0
  br i1 %tobool.not.i.i.i425, label %land.lhs.true.i.i.i429, label %if.then6.i426.add_nr_deferred_memcg.exit.i_crit_edge

if.then6.i426.add_nr_deferred_memcg.exit.i_crit_edge: ; preds = %if.then6.i426
  call void @__sanitizer_cov_trace_pc() #15
  br label %add_nr_deferred_memcg.exit.i

land.lhs.true.i.i.i429:                           ; preds = %if.then6.i426
  %call1.i.i.i427 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i427)
  %tobool2.not.i.i.i428 = icmp eq i32 %call1.i.i.i427, 0
  br i1 %tobool2.not.i.i.i428, label %land.lhs.true.i.i.i429.add_nr_deferred_memcg.exit.i_crit_edge, label %land.lhs.true3.i.i.i431

land.lhs.true.i.i.i429.add_nr_deferred_memcg.exit.i_crit_edge: ; preds = %land.lhs.true.i.i.i429
  call void @__sanitizer_cov_trace_pc() #15
  br label %add_nr_deferred_memcg.exit.i

land.lhs.true3.i.i.i431:                          ; preds = %land.lhs.true.i.i.i429
  %.b5.i.i.i430 = load i1, ptr @shrinker_info_protected.__warned, align 1
  br i1 %.b5.i.i.i430, label %land.lhs.true3.i.i.i431.add_nr_deferred_memcg.exit.i_crit_edge, label %if.then.i.i.i432

land.lhs.true3.i.i.i431.add_nr_deferred_memcg.exit.i_crit_edge: ; preds = %land.lhs.true3.i.i.i431
  call void @__sanitizer_cov_trace_pc() #15
  br label %add_nr_deferred_memcg.exit.i

if.then.i.i.i432:                                 ; preds = %land.lhs.true3.i.i.i431
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @shrinker_info_protected.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.21, i32 noundef 212, ptr noundef nonnull @.str.148) #13
  br label %add_nr_deferred_memcg.exit.i

add_nr_deferred_memcg.exit.i:                     ; preds = %if.then.i.i.i432, %land.lhs.true3.i.i.i431.add_nr_deferred_memcg.exit.i_crit_edge, %land.lhs.true.i.i.i429.add_nr_deferred_memcg.exit.i_crit_edge, %if.then6.i426.add_nr_deferred_memcg.exit.i_crit_edge
  %arrayidx.i.i.i433 = getelementptr %struct.mem_cgroup, ptr %56, i32 0, i32 45, i32 %spec.store.select.i418
  %57 = ptrtoint ptr %arrayidx.i.i.i433 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx.i.i.i433, align 4
  %shrinker_info.i.i.i434 = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %58, i32 0, i32 5
  %59 = ptrtoint ptr %shrinker_info.i.i.i434 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %shrinker_info.i.i.i434, align 4
  %nr_deferred.i.i435 = getelementptr inbounds %struct.shrinker_info, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %nr_deferred.i.i435 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %nr_deferred.i.i435, align 4
  %id.i.i436 = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 6
  %63 = ptrtoint ptr %id.i.i436 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %id.i.i436, align 4
  %arrayidx.i.i437 = getelementptr %struct.atomic_t, ptr %62, i32 %64
  %call.i.i.i.i438 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i.i437, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !570
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i.i437, i32 1, i32 3, i32 1) #13
  %65 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i.i437, ptr %arrayidx.i.i437, i32 %50, ptr elementtype(i32) %arrayidx.i.i437) #13, !srcloc !571
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !572
  br label %add_nr_deferred.exit

if.end8.i442:                                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  %nr_deferred.i439 = getelementptr inbounds %struct.shrinker, ptr %shrinker, i32 0, i32 7
  %66 = ptrtoint ptr %nr_deferred.i439 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %nr_deferred.i439, align 4
  %arrayidx.i440 = getelementptr %struct.atomic_t, ptr %67, i32 %spec.store.select.i418
  %call.i.i.i441 = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx.i440, i32 noundef 4) #13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !570
  tail call void @llvm.prefetch.p0(ptr %arrayidx.i440, i32 1, i32 3, i32 1) #13
  %68 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %arrayidx.i440, ptr %arrayidx.i440, i32 %50, ptr elementtype(i32) %arrayidx.i440) #13, !srcloc !571
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !572
  br label %add_nr_deferred.exit

add_nr_deferred.exit:                             ; preds = %if.end8.i442, %add_nr_deferred_memcg.exit.i
  %.pn.i443 = phi { i32, i32 } [ %65, %add_nr_deferred_memcg.exit.i ], [ %68, %if.end8.i442 ]
  %retval.0.i444 = extractvalue { i32, i32 } %.pn.i443, 0
  %69 = ptrtoint ptr %nid1.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %nid1.i, align 4
  tail call fastcc void @trace_mm_shrink_slab_end(ptr noundef %shrinker, i32 noundef %70, i32 noundef %freed.0.lcssa, i32 noundef %retval.0.i, i32 noundef %retval.0.i444, i32 noundef %total_scan.0.lcssa)
  br label %cleanup262

cleanup262:                                       ; preds = %add_nr_deferred.exit, %entry.cleanup262_crit_edge, %entry.cleanup262_crit_edge485
  %retval.0 = phi i32 [ %freed.0.lcssa, %add_nr_deferred.exit ], [ %call, %entry.cleanup262_crit_edge ], [ %call, %entry.cleanup262_crit_edge485 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_shrink_slab_start(ptr noundef %shr, ptr noundef %sc, i32 noundef %nr_objects_to_shrink, i32 noundef %cache_items, i64 noundef %delta, i32 noundef %total_scan, i32 noundef %priority) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_shrink_slab_start, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_shrink_slab_start, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !649
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_shrink_slab_start, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %shr, ptr noundef %sc, i32 noundef %nr_objects_to_shrink, i32 noundef %cache_items, i64 noundef %delta, i32 noundef %total_scan, i32 noundef %priority) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !650
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !650
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_shrink_slab_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_shrink_slab_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_shrink_slab_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 242, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_shrink_slab_end(ptr noundef %shr, i32 noundef %nid, i32 noundef %shrinker_retval, i32 noundef %unused_scan_cnt, i32 noundef %new_scan_cnt, i32 noundef %total_scan) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_shrink_slab_end, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_shrink_slab_end, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !651
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_shrink_slab_end, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %shr, i32 noundef %nid, i32 noundef %shrinker_retval, i32 noundef %unused_scan_cnt, i32 noundef %new_scan_cnt, i32 noundef %total_scan) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !652
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !652
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_shrink_slab_end, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_shrink_slab_end.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_shrink_slab_end.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 279, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_swapout(ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @workingset_eviction(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__delete_from_swap_cache(ptr noundef, [1 x i32], ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_swap_page(ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @inode_add_lru(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_freeze(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__filemap_remove_folio(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_unfreeze(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_on_page_writeback(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @add_to_swap(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @try_to_unmap(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @inc_node_page_state(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @try_to_release_page(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @destroy_compound_page(ptr noundef %page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %compound_dtor = getelementptr %struct.page, ptr %page, i32 1, i32 1, i32 0, i32 0, i32 1
  %0 = ptrtoint ptr %compound_dtor to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %compound_dtor, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %1)
  %cmp = icmp ugt i8 %1, 1
  br i1 %cmp, label %if.then, label %do.end6, !prof !558

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.173) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 888, 0\0A.popsection", ""() #13, !srcloc !653
  unreachable

do.end6:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %conv = zext i8 %1 to i32
  %arrayidx9 = getelementptr [2 x ptr], ptr @compound_page_dtors, i32 0, i32 %conv
  %2 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx9, align 4
  tail call void %3(ptr noundef %page) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mem_cgroup_swap_full(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @try_to_free_swap(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_unref_page_list(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inode_congested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @page_referenced(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @try_to_free_buffers(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @clear_page_dirty_for_io(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_writepage(ptr noundef %page) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_writepage, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_writepage, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !654
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_writepage, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %page) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !655
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !655
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_writepage, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_writepage.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_writepage.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 351, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @inode_to_bdi(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__folio_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__filemap_set_wb_err(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @errseq_set(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @folio_memcg(ptr noundef %folio) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !557

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.167) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 537, 0\0A.popsection", ""() #13, !srcloc !656
  unreachable

do.body7.i:                                       ; preds = %entry
  %memcg_data.i = getelementptr inbounds %struct.anon.67, ptr %folio, i32 0, i32 7
  %3 = ptrtoint ptr %memcg_data.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %memcg_data.i, align 4
  %and.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool8.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool8.not.i, label %folio_memcg_kmem.exit, label %if.then15.i, !prof !557

if.then15.i:                                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.168) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 538, 0\0A.popsection", ""() #13, !srcloc !657
  unreachable

folio_memcg_kmem.exit:                            ; preds = %do.body7.i
  %and23.i = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i)
  %tobool24.i.not = icmp eq i32 %and23.i, 0
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %0, align 4
  %and.i.i.i.i9 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i9)
  %tobool.not.i.i.i10 = icmp eq i32 %and.i.i.i.i9, 0
  br i1 %tobool24.i.not, label %if.end, label %if.then

if.then:                                          ; preds = %folio_memcg_kmem.exit
  br i1 %tobool.not.i.i.i10, label %folio_test_slab.exit.i, label %if.then.i.i.i, !prof !557

if.then.i.i.i:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_slab.exit.i:                           ; preds = %if.then
  %7 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %folio, align 4
  %9 = and i32 %8, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i.not.i = icmp eq i32 %9, 0
  br i1 %tobool.i.not.i, label %__folio_objcg.exit, label %if.then.i6, !prof !557

if.then.i6:                                       ; preds = %folio_test_slab.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.169) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 417, 0\0A.popsection", ""() #13, !srcloc !658
  unreachable

__folio_objcg.exit:                               ; preds = %folio_test_slab.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %and48.i = and i32 %4, -4
  %10 = inttoptr i32 %and48.i to ptr
  %memcg.i = getelementptr inbounds %struct.obj_cgroup, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %memcg.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %memcg.i, align 4
  br label %return

if.end:                                           ; preds = %folio_memcg_kmem.exit
  br i1 %tobool.not.i.i.i10, label %folio_test_slab.exit.i13, label %if.then.i.i.i11, !prof !557

if.then.i.i.i11:                                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.155) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_slab.exit.i13:                         ; preds = %if.end
  %13 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %folio, align 4
  %15 = and i32 %14, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i.not.i12 = icmp eq i32 %15, 0
  br i1 %tobool.i.not.i12, label %__folio_memcg.exit, label %if.then.i14, !prof !557

if.then.i14:                                      ; preds = %folio_test_slab.exit.i13
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.169) #13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/memcontrol.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 396, 0\0A.popsection", ""() #13, !srcloc !659
  unreachable

__folio_memcg.exit:                               ; preds = %folio_test_slab.exit.i13
  call void @__sanitizer_cov_trace_pc() #15
  %and46.i = and i32 %4, -4
  %16 = inttoptr i32 %and46.i to ptr
  br label %return

return:                                           ; preds = %__folio_memcg.exit, %__folio_objcg.exit
  %retval.0 = phi ptr [ %12, %__folio_objcg.exit ], [ %16, %__folio_memcg.exit ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__count_memcg_events(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @migrate_pages(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @alloc_demote_page(ptr noundef %page, i32 noundef %node) #0 align 64 {
entry:
  %mtc = alloca %struct.migration_target_control, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %mtc) #13
  %0 = getelementptr inbounds %struct.migration_target_control, ptr %mtc, i32 0, i32 1
  %1 = getelementptr inbounds %struct.migration_target_control, ptr %mtc, i32 0, i32 2
  %2 = ptrtoint ptr %mtc to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %node, ptr %mtc, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %0, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 20457674, ptr %1, align 4
  %5 = ptrtoint ptr %mtc to i32
  %call = call ptr @alloc_migration_target(ptr noundef %page, i32 noundef %5) #13
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %mtc) #13
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_migration_target(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mem_cgroup_uncharge_list(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mod_lruvec_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mod_zone_page_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_update_lru_size(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @allow_direct_reclaim(ptr noundef %pgdat) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %kswapd_failures = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 17
  %0 = ptrtoint ptr %kswapd_failures to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %kswapd_failures, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %1)
  %cmp = icmp sgt i32 %1, 15
  br i1 %cmp, label %entry.cleanup_crit_edge, label %for.body.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.body.preheader:                               ; preds = %entry
  %managed_pages.i.i = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 0, i32 11
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #13
  %2 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %managed_pages.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not = icmp eq i32 %3, 0
  br i1 %tobool.i.not, label %for.body.preheader.for.inc_crit_edge, label %if.end3

for.body.preheader.for.inc_crit_edge:             ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end3:                                          ; preds = %for.body.preheader
  %call4 = tail call i32 @zone_reclaimable_pages(ptr noundef %pgdat)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end3.for.inc_crit_edge, label %if.end6

if.end3.for.inc_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end6:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  %4 = ptrtoint ptr %pgdat to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pgdat, align 128
  %watermark_boost = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 0, i32 1
  %6 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %watermark_boost, align 4
  %add8 = add i32 %5, %7
  %arrayidx.i = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 0, i32 37, i32 0
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i, i32 noundef 4) #13
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %arrayidx.i, align 4
  %10 = tail call i32 @llvm.smax.i32(i32 %9, i32 0) #13
  br label %for.inc

for.inc:                                          ; preds = %if.end6, %if.end3.for.inc_crit_edge, %for.body.preheader.for.inc_crit_edge
  %pfmemalloc_reserve.1 = phi i32 [ %add8, %if.end6 ], [ 0, %if.end3.for.inc_crit_edge ], [ 0, %for.body.preheader.for.inc_crit_edge ]
  %free_pages.1 = phi i32 [ %10, %if.end6 ], [ 0, %if.end3.for.inc_crit_edge ], [ 0, %for.body.preheader.for.inc_crit_edge ]
  %arrayidx.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1
  %managed_pages.i.i.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1, i32 11
  %call.i.i.i.i.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.1, i32 noundef 4) #13
  %11 = ptrtoint ptr %managed_pages.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %managed_pages.i.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.i.not.1 = icmp eq i32 %12, 0
  br i1 %tobool.i.not.1, label %for.inc.for.inc.1_crit_edge, label %if.end3.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.1

if.end3.1:                                        ; preds = %for.inc
  %call4.1 = tail call i32 @zone_reclaimable_pages(ptr noundef %arrayidx.1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.1)
  %tobool.not.1 = icmp eq i32 %call4.1, 0
  br i1 %tobool.not.1, label %if.end3.1.for.inc.1_crit_edge, label %if.end6.1

if.end3.1.for.inc.1_crit_edge:                    ; preds = %if.end3.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.1

if.end6.1:                                        ; preds = %if.end3.1
  call void @__sanitizer_cov_trace_pc() #15
  %13 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.1, align 128
  %watermark_boost.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1, i32 1
  %15 = ptrtoint ptr %watermark_boost.1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %watermark_boost.1, align 4
  %add.1 = add i32 %14, %pfmemalloc_reserve.1
  %add8.1 = add i32 %add.1, %16
  %arrayidx.i.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1, i32 37, i32 0
  %call.i.i.i.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.1, i32 noundef 4) #13
  %17 = ptrtoint ptr %arrayidx.i.1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %arrayidx.i.1, align 4
  %19 = tail call i32 @llvm.smax.i32(i32 %18, i32 0) #13
  %add10.1 = add nuw i32 %19, %free_pages.1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.end6.1, %if.end3.1.for.inc.1_crit_edge, %for.inc.for.inc.1_crit_edge
  %pfmemalloc_reserve.1.1 = phi i32 [ %add8.1, %if.end6.1 ], [ %pfmemalloc_reserve.1, %if.end3.1.for.inc.1_crit_edge ], [ %pfmemalloc_reserve.1, %for.inc.for.inc.1_crit_edge ]
  %free_pages.1.1 = phi i32 [ %add10.1, %if.end6.1 ], [ %free_pages.1, %if.end3.1.for.inc.1_crit_edge ], [ %free_pages.1, %for.inc.for.inc.1_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %pfmemalloc_reserve.1.1)
  %tobool11.not = icmp eq i32 %pfmemalloc_reserve.1.1, 0
  %div54 = lshr i32 %pfmemalloc_reserve.1.1, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %free_pages.1.1, i32 %div54)
  %cmp14 = icmp ugt i32 %free_pages.1.1, %div54
  %or.cond = select i1 %tobool11.not, i1 true, i1 %cmp14
  br i1 %or.cond, label %for.inc.1.cleanup_crit_edge, label %land.lhs.true

for.inc.1.cleanup_crit_edge:                      ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

land.lhs.true:                                    ; preds = %for.inc.1
  %kswapd_wait = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 9
  %head.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 9, i32 1
  %20 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %head.i, align 4
  %cmp.i.i.not = icmp eq ptr %21, %head.i
  br i1 %cmp.i.i.not, label %land.lhs.true.cleanup_crit_edge, label %do.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.end:                                           ; preds = %land.lhs.true
  %kswapd_highest_zoneidx = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 16
  %22 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %kswapd_highest_zoneidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %23)
  %cmp19 = icmp ugt i32 %23, 1
  br i1 %cmp19, label %do.body25, label %do.end.if.end31_crit_edge

do.end.if.end31_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

do.body25:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  %24 = ptrtoint ptr %kswapd_highest_zoneidx to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 1, ptr %kswapd_highest_zoneidx, align 4
  br label %if.end31

if.end31:                                         ; preds = %do.body25, %do.end.if.end31_crit_edge
  tail call void @__wake_up(ptr noundef %kswapd_wait, i32 noundef 1, i32 noundef 1, ptr noundef null) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end31, %land.lhs.true.cleanup_crit_edge, %for.inc.1.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %entry.cleanup_crit_edge ], [ true, %for.inc.1.cleanup_crit_edge ], [ false, %if.end31 ], [ false, %land.lhs.true.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__next_zones_zonelist(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @vmpressure_prio(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @shrink_zones(ptr noundef %zonelist, ptr noundef %sc) unnamed_addr #0 align 64 {
entry:
  %nr_soft_scanned = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr_soft_scanned) #13
  %0 = ptrtoint ptr %nr_soft_scanned to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %nr_soft_scanned, align 4, !annotation !559
  %gfp_mask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %1 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %gfp_mask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @buffer_heads_over_limit to i32))
  %3 = load i32, ptr @buffer_heads_over_limit, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  %or = or i32 %2, 2
  %4 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or, ptr %gfp_mask, align 4
  %and.i = and i32 %or, 15
  %shr2.i = lshr i32 59624, %and.i
  %and3.i = and i32 %shr2.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool.not.i81 = icmp eq i32 %and3.i, 0
  br i1 %tobool.not.i81, label %gfp_zone.exit, label %do.body6.i, !prof !557

do.body6.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/gfp.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 485, 0\0A.popsection", ""() #13, !srcloc !625
  unreachable

gfp_zone.exit:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %mul.i = shl nuw nsw i32 %and.i, 1
  %shr.i = lshr i32 19988769, %mul.i
  %5 = trunc i32 %shr.i to i8
  %conv = and i8 %5, 3
  %reclaim_idx = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %6 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %conv, ptr %reclaim_idx, align 4
  br label %if.end

if.end:                                           ; preds = %gfp_zone.exit, %entry.if.end_crit_edge
  %reclaim_idx3 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %7 = ptrtoint ptr %reclaim_idx3 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %reclaim_idx3, align 4
  %conv4 = sext i8 %8 to i32
  %nodemask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 1
  %9 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %nodemask, align 4
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end.if.end.i.i_crit_edge, !prof !557

if.end.if.end.i.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %if.end
  %zone_idx.i.i.i = getelementptr inbounds %struct.zoneref, ptr %zonelist, i32 0, i32 1
  %11 = ptrtoint ptr %zone_idx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %zone_idx.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %conv4)
  %cmp.not.i.i = icmp ugt i32 %12, %conv4
  br i1 %cmp.not.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, label %land.rhs.i.i.first_zones_zonelist.exit_crit_edge, !prof !558

land.rhs.i.i.first_zones_zonelist.exit_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %first_zones_zonelist.exit

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.rhs.i.i.if.end.i.i_crit_edge, %if.end.if.end.i.i_crit_edge
  %call3.i.i = tail call ptr @__next_zones_zonelist(ptr noundef %zonelist, i32 noundef %conv4, ptr noundef %10) #13
  br label %first_zones_zonelist.exit

first_zones_zonelist.exit:                        ; preds = %if.end.i.i, %land.rhs.i.i.first_zones_zonelist.exit_crit_edge
  %retval.0.i.i = phi ptr [ %call3.i.i, %if.end.i.i ], [ %zonelist, %land.rhs.i.i.first_zones_zonelist.exit_crit_edge ]
  %13 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %zone.091 = load ptr, ptr %retval.0.i.i, align 4
  %tobool7.not92 = icmp eq ptr %zone.091, null
  br i1 %tobool7.not92, label %first_zones_zonelist.exit.if.end48_crit_edge, label %for.body.lr.ph

first_zones_zonelist.exit.if.end48_crit_edge:     ; preds = %first_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end48

for.body.lr.ph:                                   ; preds = %first_zones_zonelist.exit
  %target_mem_cgroup.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %order = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 6
  %nr_reclaimed = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 11
  %nr_scanned = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %compaction_ready = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  br label %for.body

for.body:                                         ; preds = %next_zones_zonelist.exit.for.body_crit_edge, %for.body.lr.ph
  %zone.0102 = phi ptr [ %zone.091, %for.body.lr.ph ], [ %zone.0, %next_zones_zonelist.exit.for.body_crit_edge ]
  %first_pgdat.098 = phi ptr [ null, %for.body.lr.ph ], [ %first_pgdat.2, %next_zones_zonelist.exit.for.body_crit_edge ]
  %last_pgdat.094 = phi ptr [ null, %for.body.lr.ph ], [ %last_pgdat.1, %next_zones_zonelist.exit.for.body_crit_edge ]
  %z.093 = phi ptr [ %retval.0.i.i, %for.body.lr.ph ], [ %retval.0.i, %next_zones_zonelist.exit.for.body_crit_edge ]
  %14 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %target_mem_cgroup.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %if.then9, label %for.body.if.end29_crit_edge

for.body.if.end29_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.then9:                                         ; preds = %for.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @cpusets_enabled_key, ptr blockaddress(@shrink_zones, %if.then.i)) #13
          to label %if.end12 [label %if.then.i], !srcloc !567

if.then.i:                                        ; preds = %if.then9
  %call1.i.i = call zeroext i1 @__cpuset_node_allowed(i32 noundef 0, i32 noundef 1051840) #13
  br i1 %call1.i.i, label %if.then.i.if.end12_crit_edge, label %if.then.i.for.inc_crit_edge

if.then.i.for.inc_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then.i.if.end12_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12

if.end12:                                         ; preds = %if.then.i.if.end12_crit_edge, %if.then9
  %16 = ptrtoint ptr %order to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %order, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %17)
  %cmp = icmp sgt i8 %17, 3
  br i1 %cmp, label %land.lhs.true, label %if.end12.if.end18_crit_edge

if.end12.if.end18_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

land.lhs.true:                                    ; preds = %if.end12
  %conv.i90 = zext i8 %17 to i32
  %18 = ptrtoint ptr %reclaim_idx3 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %reclaim_idx3, align 4
  %conv1.i = sext i8 %19 to i32
  %call.i = call i32 @compaction_suitable(ptr noundef nonnull %zone.0102, i32 noundef %conv.i90, i32 noundef 0, i32 noundef %conv1.i) #13
  %20 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.184)
  switch i32 %call.i, label %compaction_ready.exit [
    i32 8, label %land.lhs.true.if.then17_crit_edge
    i32 1, label %land.lhs.true.if.end18_crit_edge
  ]

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

land.lhs.true.if.then17_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then17

compaction_ready.exit:                            ; preds = %land.lhs.true
  %arrayidx.i = getelementptr [3 x i32], ptr %zone.0102, i32 0, i32 2
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx.i, align 8
  %watermark_boost.i = getelementptr inbounds %struct.zone, ptr %zone.0102, i32 0, i32 1
  %23 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %watermark_boost.i, align 4
  %add.i = add i32 %24, %22
  %25 = ptrtoint ptr %order to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %order, align 2
  %conv822.i = zext i8 %26 to i32
  %shl.i.i = shl i32 2, %conv822.i
  %add10.i = add i32 %add.i, %shl.i.i
  %27 = ptrtoint ptr %reclaim_idx3 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %reclaim_idx3, align 4
  %conv12.i = sext i8 %28 to i32
  %call13.i = call zeroext i1 @zone_watermark_ok_safe(ptr noundef nonnull %zone.0102, i32 noundef 0, i32 noundef %add10.i, i32 noundef %conv12.i) #13
  br i1 %call13.i, label %compaction_ready.exit.if.then17_crit_edge, label %compaction_ready.exit.if.end18_crit_edge

compaction_ready.exit.if.end18_crit_edge:         ; preds = %compaction_ready.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

compaction_ready.exit.if.then17_crit_edge:        ; preds = %compaction_ready.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then17

if.then17:                                        ; preds = %compaction_ready.exit.if.then17_crit_edge, %land.lhs.true.if.then17_crit_edge
  %29 = ptrtoint ptr %compaction_ready to i32
  call void @__asan_load2_noabort(i32 %29)
  %bf.load = load i16, ptr %compaction_ready, align 4
  %bf.set = or i16 %bf.load, 32
  store i16 %bf.set, ptr %compaction_ready, align 4
  br label %for.inc

if.end18:                                         ; preds = %compaction_ready.exit.if.end18_crit_edge, %land.lhs.true.if.end18_crit_edge, %if.end12.if.end18_crit_edge
  %zone_pgdat = getelementptr inbounds %struct.zone, ptr %zone.0102, i32 0, i32 4
  %30 = ptrtoint ptr %zone_pgdat to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %zone_pgdat, align 4
  %cmp19 = icmp eq ptr %31, %last_pgdat.094
  br i1 %cmp19, label %if.end18.for.inc_crit_edge, label %if.end22

if.end18.for.inc_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end22:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #15
  %32 = ptrtoint ptr %nr_soft_scanned to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %nr_soft_scanned, align 4
  %33 = ptrtoint ptr %order to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %order, align 2
  %conv25 = sext i8 %34 to i32
  %35 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %gfp_mask, align 4
  %call27 = call i32 @mem_cgroup_soft_limit_reclaim(ptr noundef %31, i32 noundef %conv25, i32 noundef %36, ptr noundef nonnull %nr_soft_scanned) #13
  %37 = ptrtoint ptr %nr_reclaimed to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %nr_reclaimed, align 4
  %add = add i32 %38, %call27
  store i32 %add, ptr %nr_reclaimed, align 4
  %39 = ptrtoint ptr %nr_soft_scanned to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %nr_soft_scanned, align 4
  %41 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %nr_scanned, align 4
  %add28 = add i32 %42, %40
  store i32 %add28, ptr %nr_scanned, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.end22, %for.body.if.end29_crit_edge
  %tobool30.not = icmp eq ptr %first_pgdat.098, null
  br i1 %tobool30.not, label %if.then31, label %if.end29.if.end33_crit_edge

if.end29.if.end33_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end33

if.then31:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %zone_pgdat32 = getelementptr inbounds %struct.zone, ptr %zone.0102, i32 0, i32 4
  %43 = ptrtoint ptr %zone_pgdat32 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %zone_pgdat32, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.end29.if.end33_crit_edge
  %first_pgdat.1 = phi ptr [ %first_pgdat.098, %if.end29.if.end33_crit_edge ], [ %44, %if.then31 ]
  %zone_pgdat34 = getelementptr inbounds %struct.zone, ptr %zone.0102, i32 0, i32 4
  %45 = ptrtoint ptr %zone_pgdat34 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %zone_pgdat34, align 4
  %cmp35 = icmp eq ptr %46, %last_pgdat.094
  br i1 %cmp35, label %if.end33.for.inc_crit_edge, label %if.end38

if.end33.for.inc_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end38:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #15
  call fastcc void @shrink_node(ptr noundef %46, ptr noundef %sc)
  br label %for.inc

for.inc:                                          ; preds = %if.end38, %if.end33.for.inc_crit_edge, %if.end18.for.inc_crit_edge, %if.then17, %if.then.i.for.inc_crit_edge
  %last_pgdat.1 = phi ptr [ %last_pgdat.094, %if.end33.for.inc_crit_edge ], [ %46, %if.end38 ], [ %last_pgdat.094, %if.then17 ], [ %last_pgdat.094, %if.end18.for.inc_crit_edge ], [ %last_pgdat.094, %if.then.i.for.inc_crit_edge ]
  %first_pgdat.2 = phi ptr [ %first_pgdat.1, %if.end33.for.inc_crit_edge ], [ %first_pgdat.1, %if.end38 ], [ %first_pgdat.098, %if.then17 ], [ %first_pgdat.098, %if.end18.for.inc_crit_edge ], [ %first_pgdat.098, %if.then.i.for.inc_crit_edge ]
  %incdec.ptr = getelementptr %struct.zoneref, ptr %z.093, i32 1
  %47 = ptrtoint ptr %reclaim_idx3 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %reclaim_idx3, align 4
  %conv42 = sext i8 %48 to i32
  %49 = ptrtoint ptr %nodemask to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %nodemask, align 4
  %tobool.not.i = icmp eq ptr %50, null
  br i1 %tobool.not.i, label %land.rhs.i, label %for.inc.if.end.i_crit_edge, !prof !557

for.inc.if.end.i_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

land.rhs.i:                                       ; preds = %for.inc
  %zone_idx.i.i = getelementptr %struct.zoneref, ptr %z.093, i32 1, i32 1
  %51 = ptrtoint ptr %zone_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %zone_idx.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %52, i32 %conv42)
  %cmp.not.i = icmp ugt i32 %52, %conv42
  br i1 %cmp.not.i, label %land.rhs.i.if.end.i_crit_edge, label %land.rhs.i.next_zones_zonelist.exit_crit_edge, !prof !558

land.rhs.i.next_zones_zonelist.exit_crit_edge:    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %next_zones_zonelist.exit

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i

if.end.i:                                         ; preds = %land.rhs.i.if.end.i_crit_edge, %for.inc.if.end.i_crit_edge
  %call3.i = call ptr @__next_zones_zonelist(ptr noundef %incdec.ptr, i32 noundef %conv42, ptr noundef %50) #13
  br label %next_zones_zonelist.exit

next_zones_zonelist.exit:                         ; preds = %if.end.i, %land.rhs.i.next_zones_zonelist.exit_crit_edge
  %retval.0.i = phi ptr [ %call3.i, %if.end.i ], [ %incdec.ptr, %land.rhs.i.next_zones_zonelist.exit_crit_edge ]
  %53 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %zone.0 = load ptr, ptr %retval.0.i, align 4
  %tobool7.not = icmp eq ptr %zone.0, null
  br i1 %tobool7.not, label %for.end, label %next_zones_zonelist.exit.for.body_crit_edge

next_zones_zonelist.exit.for.body_crit_edge:      ; preds = %next_zones_zonelist.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %next_zones_zonelist.exit
  %tobool46.not = icmp eq ptr %first_pgdat.2, null
  br i1 %tobool46.not, label %for.end.if.end48_crit_edge, label %if.then47

for.end.if.end48_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end48

if.then47:                                        ; preds = %for.end
  %nr_reclaimed.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 11
  %54 = ptrtoint ptr %nr_reclaimed.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %nr_reclaimed.i, align 4
  %nr_scanned.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %56 = ptrtoint ptr %nr_scanned.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %nr_scanned.i, align 4
  %shr.i84 = lshr i32 %57, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %55, i32 %shr.i84)
  %cmp.i = icmp ugt i32 %55, %shr.i84
  br i1 %cmp.i, label %if.then.i85, label %if.end2.i

if.then.i85:                                      ; preds = %if.then47
  %head.i.i = getelementptr %struct.pglist_data, ptr %first_pgdat.2, i32 0, i32 11, i32 2, i32 1
  %58 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile ptr, ptr %head.i.i, align 4
  %cmp.i.i.not.i = icmp eq ptr %59, %head.i.i
  br i1 %cmp.i.i.not.i, label %if.then.i85.if.end48_crit_edge, label %if.then1.i

if.then.i85.if.end48_crit_edge:                   ; preds = %if.then.i85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end48

if.then1.i:                                       ; preds = %if.then.i85
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i86 = getelementptr %struct.pglist_data, ptr %first_pgdat.2, i32 0, i32 11, i32 2
  call void @__wake_up(ptr noundef %arrayidx.i86, i32 noundef 3, i32 noundef 1, ptr noundef null) #13
  br label %if.end48

if.end2.i:                                        ; preds = %if.then47
  %60 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 2
  %62 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %task.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %63, i32 0, i32 3
  %64 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %65, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool4.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool4.not.i, label %lor.lhs.false.i, label %if.end2.i.if.end48_crit_edge

if.end2.i.if.end48_crit_edge:                     ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end48

lor.lhs.false.i:                                  ; preds = %if.end2.i
  %target_mem_cgroup.i.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %66 = ptrtoint ptr %target_mem_cgroup.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %target_mem_cgroup.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %67, null
  br i1 %tobool.i.not.i, label %if.end7.i, label %lor.lhs.false.i.if.end48_crit_edge

lor.lhs.false.i.if.end48_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end48

if.end7.i:                                        ; preds = %lor.lhs.false.i
  %priority.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %68 = ptrtoint ptr %priority.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %priority.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %69)
  %cmp8.i = icmp eq i8 %69, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool11.not.i = icmp eq i32 %55, 0
  %or.cond.i = select i1 %cmp8.i, i1 %tobool11.not.i, i1 false
  br i1 %or.cond.i, label %if.then12.i, label %if.end7.i.if.end48_crit_edge

if.end7.i.if.end48_crit_edge:                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end48

if.then12.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @reclaim_throttle(ptr noundef nonnull %first_pgdat.2, i32 noundef 2) #13
  br label %if.end48

if.end48:                                         ; preds = %if.then12.i, %if.end7.i.if.end48_crit_edge, %lor.lhs.false.i.if.end48_crit_edge, %if.end2.i.if.end48_crit_edge, %if.then1.i, %if.then.i85.if.end48_crit_edge, %for.end.if.end48_crit_edge, %first_zones_zonelist.exit.if.end48_crit_edge
  %70 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %2, ptr %gfp_mask, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr_soft_scanned) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__delayacct_freepages_start() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mem_cgroup_soft_limit_reclaim(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @shrink_node(ptr noundef %pgdat, ptr noundef %sc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %reclaim_state1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 149
  %4 = ptrtoint ptr %reclaim_state1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %reclaim_state1, align 16
  %target_mem_cgroup = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %6 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %target_mem_cgroup, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node, %if.then.i)) #13
          to label %if.end.i [label %if.then.i], !srcloc !567

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %__lruvec.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 26
  br label %out.i

if.end.i:                                         ; preds = %entry
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.then1.i, label %if.end.i.if.end2.i_crit_edge

if.end.i.if.end2.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end2.i

if.then1.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %8 = load ptr, ptr @root_mem_cgroup, align 4
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.then1.i, %if.end.i.if.end2.i_crit_edge
  %memcg.addr.0.i = phi ptr [ %7, %if.end.i.if.end2.i_crit_edge ], [ %8, %if.then1.i ]
  %node_id.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %9 = ptrtoint ptr %node_id.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %node_id.i, align 64
  %arrayidx.i = getelementptr %struct.mem_cgroup, ptr %memcg.addr.0.i, i32 0, i32 45, i32 %10
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i, align 4
  br label %out.i

out.i:                                            ; preds = %if.end2.i, %if.then.i
  %lruvec.0.i = phi ptr [ %__lruvec.i, %if.then.i ], [ %12, %if.end2.i ]
  %pgdat4.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 7
  %13 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pgdat4.i, align 4
  %cmp.not.i = icmp eq ptr %14, %pgdat
  br i1 %cmp.not.i, label %out.i.mem_cgroup_lruvec.exit_crit_edge, label %if.then7.i, !prof !557

out.i.mem_cgroup_lruvec.exit_crit_edge:           ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mem_cgroup_lruvec.exit

if.then7.i:                                       ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  %15 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %pgdat, ptr %pgdat4.i, align 4
  br label %mem_cgroup_lruvec.exit

mem_cgroup_lruvec.exit:                           ; preds = %if.then7.i, %out.i.mem_cgroup_lruvec.exit_crit_edge
  %nr = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12
  %nr_reclaimed3 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 11
  %nr_scanned4 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %lru_lock = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 1
  %anon_cost = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 2
  %anon_cost5 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 3
  %file_cost = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 3
  %file_cost6 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 4
  %force_deactivate = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %arrayidx.i283 = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i, i32 0, i32 2, i32 0, i32 12
  %refaults9 = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 5
  %lruvec_stats.i.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec.0.i, i32 0, i32 2
  %arrayidx.i20.i = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i, i32 0, i32 2, i32 0, i32 1
  %arrayidx.i291 = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i, i32 0, i32 2, i32 0, i32 13
  %arrayidx29 = getelementptr %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 5, i32 1
  %arrayidx.i.i = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i, i32 0, i32 2, i32 0, i32 2
  %arrayidx.i20.i304 = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i, i32 0, i32 2, i32 0, i32 3
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %tobool118.not = icmp eq ptr %5, null
  %gfp_mask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %writeback = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 3
  %taken = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 6
  %flags = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 27
  %unqueued_dirty = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 1
  %file_taken = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 5
  %immediate = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 4
  %congested = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 2
  %flags176 = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 6
  %order.i.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 6
  %reclaim_idx.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %node_id.i353 = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %tobool1.not.i.i.i = icmp eq ptr %sc, null
  %managed_pages.i.i = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 0, i32 11
  %arrayidx93 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 0, i32 0, i32 2
  %watermark_boost = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 0, i32 1
  %managed_pages.i.i.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1, i32 11
  %arrayidx93.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1, i32 0, i32 2
  %watermark_boost.1 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 1, i32 1
  %managed_pages.i.i.2 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 2, i32 11
  %arrayidx93.2 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 2, i32 0, i32 2
  %watermark_boost.2 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 2, i32 1
  %managed_pages.i.i.3 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 3, i32 11
  %arrayidx93.3 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 3, i32 0, i32 2
  %watermark_boost.3 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 3, i32 1
  br label %again

again:                                            ; preds = %should_continue_reclaim.exit.again_crit_edge, %mem_cgroup_lruvec.exit
  %reclaimable.0.off0 = phi i1 [ false, %mem_cgroup_lruvec.exit ], [ %spec.select, %should_continue_reclaim.exit.again_crit_edge ]
  tail call void @mem_cgroup_flush_stats() #13
  %16 = call ptr @memset(ptr %nr, i32 0, i32 28)
  %17 = ptrtoint ptr %nr_reclaimed3 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nr_reclaimed3, align 4
  %19 = ptrtoint ptr %nr_scanned4 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %nr_scanned4, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %lru_lock) #13
  %21 = ptrtoint ptr %anon_cost to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %anon_cost, align 4
  %23 = ptrtoint ptr %anon_cost5 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %anon_cost5, align 4
  %24 = ptrtoint ptr %file_cost to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %file_cost, align 4
  %26 = ptrtoint ptr %file_cost6 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %file_cost6, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %lru_lock) #13
  %27 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %27)
  %bf.load = load i16, ptr %force_deactivate, align 4
  %28 = and i16 %bf.load, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %28)
  %tobool.not = icmp eq i16 %28, 0
  br i1 %tobool.not, label %if.then, label %if.else58

if.then:                                          ; preds = %again
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node, %if.then.i282)) #13
          to label %if.end.i284 [label %if.then.i282], !srcloc !567

if.then.i282:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 12), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 12) to i32))
  %29 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 12), align 4
  %30 = tail call i32 @llvm.smax.i32(i32 %29, i32 0) #13
  br label %lruvec_page_state.exit

if.end.i284:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %31 = ptrtoint ptr %arrayidx.i283 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %arrayidx.i283, align 4
  br label %lruvec_page_state.exit

lruvec_page_state.exit:                           ; preds = %if.end.i284, %if.then.i282
  %retval.0.i = phi i32 [ %30, %if.then.i282 ], [ %32, %if.end.i284 ]
  %33 = ptrtoint ptr %refaults9 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %refaults9, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %34)
  %cmp.not = icmp eq i32 %retval.0.i, %34
  br i1 %cmp.not, label %lor.lhs.false, label %lruvec_page_state.exit.if.then11_crit_edge

lruvec_page_state.exit.if.then11_crit_edge:       ; preds = %lruvec_page_state.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then11

lor.lhs.false:                                    ; preds = %lruvec_page_state.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node, %if.then.i.i)) #13
          to label %if.end.i.i [label %if.then.i.i], !srcloc !567

if.then.i.i:                                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_node_stat to i32))
  %35 = load volatile i32, ptr @vm_node_stat, align 4
  %36 = tail call i32 @llvm.smax.i32(i32 %35, i32 0) #13
  br label %lruvec_page_state.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  %37 = ptrtoint ptr %lruvec_stats.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %lruvec_stats.i.i, align 4
  br label %lruvec_page_state.exit.i

lruvec_page_state.exit.i:                         ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %36, %if.then.i.i ], [ %38, %if.end.i.i ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node, %if.then.i12.i)) #13
          to label %if.end.i21.i [label %if.then.i12.i], !srcloc !567

if.then.i12.i:                                    ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i17.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1) to i32))
  %39 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), align 4
  %40 = tail call i32 @llvm.smax.i32(i32 %39, i32 0) #13
  br label %lruvec_page_state.exit23.i

if.end.i21.i:                                     ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %41 = ptrtoint ptr %arrayidx.i20.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %arrayidx.i20.i, align 4
  br label %lruvec_page_state.exit23.i

lruvec_page_state.exit23.i:                       ; preds = %if.end.i21.i, %if.then.i12.i
  %retval.0.i22.i = phi i32 [ %40, %if.then.i12.i ], [ %42, %if.end.i21.i ]
  %add4.i = add i32 %retval.0.i22.i, %retval.0.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 262144, i32 %add4.i)
  %tobool.not.i285 = icmp ult i32 %add4.i, 262144
  br i1 %tobool.not.i285, label %lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge, label %if.then.i286

lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge: ; preds = %lruvec_page_state.exit23.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %inactive_is_low.exit

if.then.i286:                                     ; preds = %lruvec_page_state.exit23.i
  call void @__sanitizer_cov_trace_pc() #15
  %shr.i = lshr i32 %add4.i, 18
  %mul.i = mul nuw nsw i32 %shr.i, 10
  %call5.i = tail call i32 @int_sqrt(i32 noundef %mul.i) #13
  br label %inactive_is_low.exit

inactive_is_low.exit:                             ; preds = %if.then.i286, %lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge
  %inactive_ratio.0.i = phi i32 [ %call5.i, %if.then.i286 ], [ 1, %lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge ]
  %mul6.i = mul i32 %inactive_ratio.0.i, %retval.0.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %mul6.i, i32 %retval.0.i22.i)
  %cmp.i = icmp ult i32 %mul6.i, %retval.0.i22.i
  br i1 %cmp.i, label %inactive_is_low.exit.if.then11_crit_edge, label %if.else

inactive_is_low.exit.if.then11_crit_edge:         ; preds = %inactive_is_low.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then11

if.then11:                                        ; preds = %inactive_is_low.exit.if.then11_crit_edge, %lruvec_page_state.exit.if.then11_crit_edge
  %43 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %43)
  %bf.load12 = load i16, ptr %force_deactivate, align 4
  %bf.set = or i16 %bf.load12, 16384
  br label %if.end

if.else:                                          ; preds = %inactive_is_low.exit
  call void @__sanitizer_cov_trace_pc() #15
  %44 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %44)
  %bf.load18 = load i16, ptr %force_deactivate, align 4
  %bf.set25 = and i16 %bf.load18, -16385
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  %storemerge = phi i16 [ %bf.set25, %if.else ], [ %bf.set, %if.then11 ]
  %45 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %storemerge, ptr %force_deactivate, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node, %if.then.i288)) #13
          to label %if.end.i292 [label %if.then.i288], !srcloc !567

if.then.i288:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i289 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 13), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 13) to i32))
  %46 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 13), align 4
  %47 = tail call i32 @llvm.smax.i32(i32 %46, i32 0) #13
  br label %lruvec_page_state.exit294

if.end.i292:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %48 = ptrtoint ptr %arrayidx.i291 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %arrayidx.i291, align 4
  br label %lruvec_page_state.exit294

lruvec_page_state.exit294:                        ; preds = %if.end.i292, %if.then.i288
  %retval.0.i293 = phi i32 [ %47, %if.then.i288 ], [ %49, %if.end.i292 ]
  %50 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx29, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i293, i32 %51)
  %cmp30.not = icmp eq i32 %retval.0.i293, %51
  br i1 %cmp30.not, label %lor.lhs.false31, label %lruvec_page_state.exit294.if.then33_crit_edge

lruvec_page_state.exit294.if.then33_crit_edge:    ; preds = %lruvec_page_state.exit294
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then33

lor.lhs.false31:                                  ; preds = %lruvec_page_state.exit294
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node, %if.then.i.i295)) #13
          to label %if.end.i.i298 [label %if.then.i.i295], !srcloc !567

if.then.i.i295:                                   ; preds = %lor.lhs.false31
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i.i296 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2) to i32))
  %52 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), align 4
  %53 = tail call i32 @llvm.smax.i32(i32 %52, i32 0) #13
  br label %lruvec_page_state.exit.i300

if.end.i.i298:                                    ; preds = %lor.lhs.false31
  call void @__sanitizer_cov_trace_pc() #15
  %54 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %arrayidx.i.i, align 4
  br label %lruvec_page_state.exit.i300

lruvec_page_state.exit.i300:                      ; preds = %if.end.i.i298, %if.then.i.i295
  %retval.0.i.i299 = phi i32 [ %53, %if.then.i.i295 ], [ %55, %if.end.i.i298 ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node, %if.then.i12.i301)) #13
          to label %if.end.i21.i305 [label %if.then.i12.i301], !srcloc !567

if.then.i12.i301:                                 ; preds = %lruvec_page_state.exit.i300
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i17.i302 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3) to i32))
  %56 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), align 4
  %57 = tail call i32 @llvm.smax.i32(i32 %56, i32 0) #13
  br label %lruvec_page_state.exit23.i309

if.end.i21.i305:                                  ; preds = %lruvec_page_state.exit.i300
  call void @__sanitizer_cov_trace_pc() #15
  %58 = ptrtoint ptr %arrayidx.i20.i304 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %arrayidx.i20.i304, align 4
  br label %lruvec_page_state.exit23.i309

lruvec_page_state.exit23.i309:                    ; preds = %if.end.i21.i305, %if.then.i12.i301
  %retval.0.i22.i306 = phi i32 [ %57, %if.then.i12.i301 ], [ %59, %if.end.i21.i305 ]
  %add4.i307 = add i32 %retval.0.i22.i306, %retval.0.i.i299
  call void @__sanitizer_cov_trace_const_cmp4(i32 262144, i32 %add4.i307)
  %tobool.not.i308 = icmp ult i32 %add4.i307, 262144
  br i1 %tobool.not.i308, label %lruvec_page_state.exit23.i309.inactive_is_low.exit318_crit_edge, label %if.then.i313

lruvec_page_state.exit23.i309.inactive_is_low.exit318_crit_edge: ; preds = %lruvec_page_state.exit23.i309
  call void @__sanitizer_cov_trace_pc() #15
  br label %inactive_is_low.exit318

if.then.i313:                                     ; preds = %lruvec_page_state.exit23.i309
  call void @__sanitizer_cov_trace_pc() #15
  %shr.i310 = lshr i32 %add4.i307, 18
  %mul.i311 = mul nuw nsw i32 %shr.i310, 10
  %call5.i312 = tail call i32 @int_sqrt(i32 noundef %mul.i311) #13
  br label %inactive_is_low.exit318

inactive_is_low.exit318:                          ; preds = %if.then.i313, %lruvec_page_state.exit23.i309.inactive_is_low.exit318_crit_edge
  %inactive_ratio.0.i314 = phi i32 [ %call5.i312, %if.then.i313 ], [ 1, %lruvec_page_state.exit23.i309.inactive_is_low.exit318_crit_edge ]
  %mul6.i315 = mul i32 %inactive_ratio.0.i314, %retval.0.i.i299
  call void @__sanitizer_cov_trace_cmp4(i32 %mul6.i315, i32 %retval.0.i22.i306)
  %cmp.i316 = icmp ult i32 %mul6.i315, %retval.0.i22.i306
  br i1 %cmp.i316, label %inactive_is_low.exit318.if.then33_crit_edge, label %if.else45

inactive_is_low.exit318.if.then33_crit_edge:      ; preds = %inactive_is_low.exit318
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then33

if.then33:                                        ; preds = %inactive_is_low.exit318.if.then33_crit_edge, %lruvec_page_state.exit294.if.then33_crit_edge
  %60 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %60)
  %bf.load35 = load i16, ptr %force_deactivate, align 4
  %bf.set43 = or i16 %bf.load35, -32768
  br label %if.end63

if.else45:                                        ; preds = %inactive_is_low.exit318
  call void @__sanitizer_cov_trace_pc() #15
  %61 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %61)
  %bf.load47 = load i16, ptr %force_deactivate, align 4
  %bf.set55 = and i16 %bf.load47, 32767
  br label %if.end63

if.else58:                                        ; preds = %again
  call void @__sanitizer_cov_trace_pc() #15
  %bf.set62 = or i16 %bf.load, -16384
  br label %if.end63

if.end63:                                         ; preds = %if.else58, %if.else45, %if.then33
  %storemerge278 = phi i16 [ %bf.set62, %if.else58 ], [ %bf.set55, %if.else45 ], [ %bf.set43, %if.then33 ]
  %62 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %storemerge278, ptr %force_deactivate, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node, %if.then.i319)) #13
          to label %if.end.i323 [label %if.then.i319], !srcloc !567

if.then.i319:                                     ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i320 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2) to i32))
  %63 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), align 4
  %64 = tail call i32 @llvm.smax.i32(i32 %63, i32 0) #13
  br label %lruvec_page_state.exit325

if.end.i323:                                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #15
  %65 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %arrayidx.i.i, align 4
  br label %lruvec_page_state.exit325

lruvec_page_state.exit325:                        ; preds = %if.end.i323, %if.then.i319
  %retval.0.i324 = phi i32 [ %64, %if.then.i319 ], [ %66, %if.end.i323 ]
  %67 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %priority, align 1
  %conv279 = zext i8 %68 to i32
  %shr = lshr i32 %retval.0.i324, %conv279
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr)
  %tobool65.not = icmp eq i32 %shr, 0
  br i1 %tobool65.not, label %lruvec_page_state.exit325.if.else76_crit_edge, label %land.lhs.true

lruvec_page_state.exit325.if.else76_crit_edge:    ; preds = %lruvec_page_state.exit325
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else76

land.lhs.true:                                    ; preds = %lruvec_page_state.exit325
  %69 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %69)
  %bf.load67 = load i16, ptr %force_deactivate, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load67)
  %tobool71.not = icmp sgt i16 %bf.load67, -1
  br i1 %tobool71.not, label %if.then72, label %land.lhs.true.if.else76_crit_edge

land.lhs.true.if.else76_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else76

if.then72:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  %bf.set75 = or i16 %bf.load67, 16
  br label %if.end81

if.else76:                                        ; preds = %land.lhs.true.if.else76_crit_edge, %lruvec_page_state.exit325.if.else76_crit_edge
  %70 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %70)
  %bf.load78 = load i16, ptr %force_deactivate, align 4
  %bf.clear79 = and i16 %bf.load78, -17
  br label %if.end81

if.end81:                                         ; preds = %if.else76, %if.then72
  %storemerge280 = phi i16 [ %bf.clear79, %if.else76 ], [ %bf.set75, %if.then72 ]
  %71 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 %storemerge280, ptr %force_deactivate, align 4
  %72 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %target_mem_cgroup, align 4
  %tobool.i.not = icmp eq ptr %73, null
  br i1 %tobool.i.not, label %if.then83, label %if.end81.if.end117_crit_edge

if.end81.if.end117_crit_edge:                     ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end117

if.then83:                                        ; preds = %if.end81
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_zone_stat, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_zone_stat to i32))
  %74 = load volatile i32, ptr @vm_zone_stat, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3) to i32))
  %75 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 3), align 4
  %call.i.i.i.i326 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2) to i32))
  %76 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), align 4
  %call.i.i.i.i327 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #13
  %77 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %managed_pages.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %tobool.i328.not = icmp eq i32 %78, 0
  br i1 %tobool.i328.not, label %if.then83.cleanup_crit_edge, label %if.end92

if.then83.cleanup_crit_edge:                      ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end92:                                         ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #15
  %79 = ptrtoint ptr %arrayidx93 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %arrayidx93, align 8
  %81 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %watermark_boost, align 4
  %add95 = add i32 %80, %82
  br label %cleanup

cleanup:                                          ; preds = %if.end92, %if.then83.cleanup_crit_edge
  %total_high_wmark.1 = phi i32 [ %add95, %if.end92 ], [ 0, %if.then83.cleanup_crit_edge ]
  %call.i.i.i.i327.1 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.1, i32 noundef 4) #13
  %83 = ptrtoint ptr %managed_pages.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %managed_pages.i.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %tobool.i328.not.1 = icmp eq i32 %84, 0
  br i1 %tobool.i328.not.1, label %cleanup.cleanup.1_crit_edge, label %if.end92.1

cleanup.cleanup.1_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.1

if.end92.1:                                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  %85 = ptrtoint ptr %arrayidx93.1 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx93.1, align 8
  %87 = ptrtoint ptr %watermark_boost.1 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %watermark_boost.1, align 4
  %add94.1 = add i32 %86, %total_high_wmark.1
  %add95.1 = add i32 %add94.1, %88
  br label %cleanup.1

cleanup.1:                                        ; preds = %if.end92.1, %cleanup.cleanup.1_crit_edge
  %total_high_wmark.1.1 = phi i32 [ %add95.1, %if.end92.1 ], [ %total_high_wmark.1, %cleanup.cleanup.1_crit_edge ]
  %call.i.i.i.i327.2 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.2, i32 noundef 4) #13
  %89 = ptrtoint ptr %managed_pages.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load volatile i32, ptr %managed_pages.i.i.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool.i328.not.2 = icmp eq i32 %90, 0
  br i1 %tobool.i328.not.2, label %cleanup.1.cleanup.2_crit_edge, label %if.end92.2

cleanup.1.cleanup.2_crit_edge:                    ; preds = %cleanup.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.2

if.end92.2:                                       ; preds = %cleanup.1
  call void @__sanitizer_cov_trace_pc() #15
  %91 = ptrtoint ptr %arrayidx93.2 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %arrayidx93.2, align 8
  %93 = ptrtoint ptr %watermark_boost.2 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %watermark_boost.2, align 4
  %add94.2 = add i32 %92, %total_high_wmark.1.1
  %add95.2 = add i32 %add94.2, %94
  br label %cleanup.2

cleanup.2:                                        ; preds = %if.end92.2, %cleanup.1.cleanup.2_crit_edge
  %total_high_wmark.1.2 = phi i32 [ %add95.2, %if.end92.2 ], [ %total_high_wmark.1.1, %cleanup.1.cleanup.2_crit_edge ]
  %call.i.i.i.i327.3 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.3, i32 noundef 4) #13
  %95 = ptrtoint ptr %managed_pages.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %managed_pages.i.i.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %tobool.i328.not.3 = icmp eq i32 %96, 0
  br i1 %tobool.i328.not.3, label %cleanup.2.cleanup.3_crit_edge, label %if.end92.3

cleanup.2.cleanup.3_crit_edge:                    ; preds = %cleanup.2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.3

if.end92.3:                                       ; preds = %cleanup.2
  call void @__sanitizer_cov_trace_pc() #15
  %97 = ptrtoint ptr %arrayidx93.3 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx93.3, align 8
  %99 = ptrtoint ptr %watermark_boost.3 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %watermark_boost.3, align 4
  %add94.3 = add i32 %98, %total_high_wmark.1.2
  %add95.3 = add i32 %add94.3, %100
  br label %cleanup.3

cleanup.3:                                        ; preds = %if.end92.3, %cleanup.2.cleanup.3_crit_edge
  %total_high_wmark.1.3 = phi i32 [ %add95.3, %if.end92.3 ], [ %total_high_wmark.1.2, %cleanup.2.cleanup.3_crit_edge ]
  %101 = tail call i32 @llvm.smax.i32(i32 %74, i32 0) #13
  %102 = tail call i32 @llvm.smax.i32(i32 %75, i32 0) #13
  %103 = tail call i32 @llvm.smax.i32(i32 %76, i32 0) #13
  %call.i.i.i.i329 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_node_stat to i32))
  %104 = load volatile i32, ptr @vm_node_stat, align 4
  %105 = tail call i32 @llvm.smax.i32(i32 %104, i32 0) #13
  %add = add nuw i32 %102, %101
  %add97 = add i32 %add, %103
  call void @__sanitizer_cov_trace_cmp4(i32 %add97, i32 %total_high_wmark.1.3)
  %cmp98.not = icmp ugt i32 %add97, %total_high_wmark.1.3
  br i1 %cmp98.not, label %cleanup.3.land.end.thread_crit_edge, label %land.lhs.true100

cleanup.3.land.end.thread_crit_edge:              ; preds = %cleanup.3
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end.thread

land.lhs.true100:                                 ; preds = %cleanup.3
  %106 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %106)
  %bf.load102 = load i16, ptr %force_deactivate, align 4
  %107 = and i16 %bf.load102, 16384
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %107)
  %tobool106.not = icmp eq i16 %107, 0
  br i1 %tobool106.not, label %land.end, label %land.lhs.true100.land.end.thread_crit_edge

land.lhs.true100.land.end.thread_crit_edge:       ; preds = %land.lhs.true100
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end.thread

land.end:                                         ; preds = %land.lhs.true100
  call void @__sanitizer_cov_trace_pc() #15
  %108 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %priority, align 1
  %conv108281 = zext i8 %109 to i32
  %shr109 = lshr i32 %105, %conv108281
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr109)
  %tobool110.not = icmp eq i32 %shr109, 0
  %spec.select359 = select i1 %tobool110.not, i16 0, i16 8
  br label %land.end.thread

land.end.thread:                                  ; preds = %land.end, %land.lhs.true100.land.end.thread_crit_edge, %cleanup.3.land.end.thread_crit_edge
  %110 = phi i16 [ %spec.select359, %land.end ], [ 0, %land.lhs.true100.land.end.thread_crit_edge ], [ 0, %cleanup.3.land.end.thread_crit_edge ]
  %111 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %111)
  %bf.load111355 = load i16, ptr %force_deactivate, align 4
  %bf.clear114 = and i16 %bf.load111355, -9
  %bf.set115 = or i16 %bf.clear114, %110
  store i16 %bf.set115, ptr %force_deactivate, align 4
  br label %if.end117

if.end117:                                        ; preds = %land.end.thread, %if.end81.if.end117_crit_edge
  tail call fastcc void @shrink_node_memcgs(ptr noundef %pgdat, ptr noundef %sc)
  br i1 %tobool118.not, label %if.end117.if.end123_crit_edge, label %if.then119

if.end117.if.end123_crit_edge:                    ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end123

if.then119:                                       ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #15
  %112 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %5, align 4
  %114 = ptrtoint ptr %nr_reclaimed3 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %nr_reclaimed3, align 4
  %add121 = add i32 %115, %113
  store i32 %add121, ptr %nr_reclaimed3, align 4
  store i32 0, ptr %5, align 4
  br label %if.end123

if.end123:                                        ; preds = %if.then119, %if.end117.if.end123_crit_edge
  %116 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %gfp_mask, align 4
  %118 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %target_mem_cgroup, align 4
  %120 = ptrtoint ptr %nr_scanned4 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %nr_scanned4, align 4
  %sub = sub i32 %121, %20
  %122 = ptrtoint ptr %nr_reclaimed3 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %nr_reclaimed3, align 4
  %sub127 = sub i32 %123, %18
  tail call void @vmpressure(i32 noundef %117, ptr noundef %119, i1 noundef zeroext true, i32 noundef %sub, i32 noundef %sub127) #13
  %124 = ptrtoint ptr %nr_reclaimed3 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %nr_reclaimed3, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %125, i32 %18)
  %tobool130.not = icmp ne i32 %125, %18
  %spec.select = select i1 %tobool130.not, i1 true, i1 %reclaimable.0.off0
  %126 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %126, -16384
  %127 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %127, i32 0, i32 2
  %128 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %129, i32 0, i32 3
  %130 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %flags.i, align 4
  %and.i330 = and i32 %131, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i330)
  %tobool134.not = icmp eq i32 %and.i330, 0
  br i1 %tobool134.not, label %if.end123.if.end157_crit_edge, label %if.then135

if.end123.if.end157_crit_edge:                    ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end157

if.then135:                                       ; preds = %if.end123
  %132 = ptrtoint ptr %writeback to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %writeback, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %133)
  %tobool137.not = icmp eq i32 %133, 0
  br i1 %tobool137.not, label %if.then135.if.end145_crit_edge, label %land.lhs.true138

if.then135.if.end145_crit_edge:                   ; preds = %if.then135
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end145

land.lhs.true138:                                 ; preds = %if.then135
  %134 = ptrtoint ptr %taken to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %taken, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %133, i32 %135)
  %cmp142 = icmp eq i32 %133, %135
  br i1 %cmp142, label %if.then144, label %land.lhs.true138.if.end145_crit_edge

land.lhs.true138.if.end145_crit_edge:             ; preds = %land.lhs.true138
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end145

if.then144:                                       ; preds = %land.lhs.true138
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @_set_bit(i32 noundef 1, ptr noundef %flags) #13
  br label %if.end145

if.end145:                                        ; preds = %if.then144, %land.lhs.true138.if.end145_crit_edge, %if.then135.if.end145_crit_edge
  %136 = ptrtoint ptr %unqueued_dirty to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %unqueued_dirty, align 4
  %138 = ptrtoint ptr %file_taken to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %file_taken, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %137, i32 %139)
  %cmp148 = icmp eq i32 %137, %139
  br i1 %cmp148, label %if.then150, label %if.end145.if.end152_crit_edge

if.end145.if.end152_crit_edge:                    ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end152

if.then150:                                       ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @_set_bit(i32 noundef 0, ptr noundef %flags) #13
  br label %if.end152

if.end152:                                        ; preds = %if.then150, %if.end145.if.end152_crit_edge
  %140 = ptrtoint ptr %immediate to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %immediate, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %141)
  %tobool154.not = icmp eq i32 %141, 0
  br i1 %tobool154.not, label %if.end152.if.end157_crit_edge, label %if.then155

if.end152.if.end157_crit_edge:                    ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end157

if.then155:                                       ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @reclaim_throttle(ptr noundef %pgdat, i32 noundef 0)
  br label %if.end157

if.end157:                                        ; preds = %if.then155, %if.end152.if.end157_crit_edge, %if.end123.if.end157_crit_edge
  %142 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i331 = and i32 %142, -16384
  %143 = inttoptr i32 %and.i.i331 to ptr
  %task.i332 = getelementptr inbounds %struct.thread_info, ptr %143, i32 0, i32 2
  %144 = ptrtoint ptr %task.i332 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %task.i332, align 8
  %flags.i333 = getelementptr inbounds %struct.task_struct, ptr %145, i32 0, i32 3
  %146 = ptrtoint ptr %flags.i333 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %flags.i333, align 4
  %and.i334 = and i32 %147, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i334)
  %tobool159.not = icmp eq i32 %and.i334, 0
  br i1 %tobool159.not, label %lor.lhs.false160, label %if.end157.land.lhs.true166_crit_edge

if.end157.land.lhs.true166_crit_edge:             ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true166

lor.lhs.false160:                                 ; preds = %if.end157
  %148 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %target_mem_cgroup, align 4
  %tobool.i336.not = icmp eq ptr %149, null
  br i1 %tobool.i336.not, label %lor.lhs.false160.if.end177_crit_edge, label %if.end.i337

lor.lhs.false160.if.end177_crit_edge:             ; preds = %lor.lhs.false160
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end177

if.end.i337:                                      ; preds = %lor.lhs.false160
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@shrink_node, %if.end177)) #13
          to label %land.lhs.true166 [label %if.end177], !srcloc !567

land.lhs.true166:                                 ; preds = %if.end.i337, %if.end157.land.lhs.true166_crit_edge
  %150 = ptrtoint ptr %nr to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %nr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %151)
  %tobool168.not = icmp eq i32 %151, 0
  br i1 %tobool168.not, label %land.lhs.true166.if.end177_crit_edge, label %land.lhs.true169

land.lhs.true166.if.end177_crit_edge:             ; preds = %land.lhs.true166
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end177

land.lhs.true169:                                 ; preds = %land.lhs.true166
  %152 = ptrtoint ptr %congested to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %congested, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %151, i32 %153)
  %cmp173 = icmp eq i32 %151, %153
  br i1 %cmp173, label %if.then175, label %land.lhs.true169.if.end177_crit_edge

land.lhs.true169.if.end177_crit_edge:             ; preds = %land.lhs.true169
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end177

if.then175:                                       ; preds = %land.lhs.true169
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @_set_bit(i32 noundef 0, ptr noundef %flags176) #13
  br label %if.end177

if.end177:                                        ; preds = %if.then175, %land.lhs.true169.if.end177_crit_edge, %land.lhs.true166.if.end177_crit_edge, %if.end.i337, %lor.lhs.false160.if.end177_crit_edge
  %154 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i339 = and i32 %154, -16384
  %155 = inttoptr i32 %and.i.i339 to ptr
  %task.i340 = getelementptr inbounds %struct.thread_info, ptr %155, i32 0, i32 2
  %156 = ptrtoint ptr %task.i340 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %task.i340, align 8
  %flags.i341 = getelementptr inbounds %struct.task_struct, ptr %157, i32 0, i32 3
  %158 = ptrtoint ptr %flags.i341 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %flags.i341, align 4
  %and.i342 = and i32 %159, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i342)
  %tobool179.not = icmp eq i32 %and.i342, 0
  br i1 %tobool179.not, label %land.lhs.true180, label %if.end177.if.end194_crit_edge

if.end177.if.end194_crit_edge:                    ; preds = %if.end177
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end194

land.lhs.true180:                                 ; preds = %if.end177
  %and.i346 = and i32 %159, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i346)
  %tobool.not.i347 = icmp eq i32 %and.i346, 0
  br i1 %tobool.not.i347, label %land.lhs.true180.land.lhs.true183_crit_edge, label %lor.lhs.false.i

land.lhs.true180.land.lhs.true183_crit_edge:      ; preds = %land.lhs.true180
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true183

lor.lhs.false.i:                                  ; preds = %land.lhs.true180
  %backing_dev_info.i = getelementptr inbounds %struct.task_struct, ptr %157, i32 0, i32 150
  %160 = ptrtoint ptr %backing_dev_info.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %backing_dev_info.i, align 4
  %cmp.i348 = icmp eq ptr %161, null
  br i1 %cmp.i348, label %lor.lhs.false.i.land.lhs.true183_crit_edge, label %current_may_throttle.exit

lor.lhs.false.i.land.lhs.true183_crit_edge:       ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true183

current_may_throttle.exit:                        ; preds = %lor.lhs.false.i
  %congested.i.i.i.i = getelementptr inbounds %struct.backing_dev_info, ptr %161, i32 0, i32 11, i32 10
  %162 = ptrtoint ptr %congested.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %congested.i.i.i.i, align 8
  %and.i.i.i.i = and i32 %163, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool182.not = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool182.not, label %current_may_throttle.exit.if.end194_crit_edge, label %current_may_throttle.exit.land.lhs.true183_crit_edge

current_may_throttle.exit.land.lhs.true183_crit_edge: ; preds = %current_may_throttle.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true183

current_may_throttle.exit.if.end194_crit_edge:    ; preds = %current_may_throttle.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end194

land.lhs.true183:                                 ; preds = %current_may_throttle.exit.land.lhs.true183_crit_edge, %lor.lhs.false.i.land.lhs.true183_crit_edge, %land.lhs.true180.land.lhs.true183_crit_edge
  %164 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %164)
  %bf.load184 = load i16, ptr %force_deactivate, align 4
  %165 = and i16 %bf.load184, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %165)
  %tobool188.not = icmp eq i16 %165, 0
  br i1 %tobool188.not, label %land.lhs.true189, label %land.lhs.true183.if.end194_crit_edge

land.lhs.true183.if.end194_crit_edge:             ; preds = %land.lhs.true183
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end194

land.lhs.true189:                                 ; preds = %land.lhs.true183
  %166 = ptrtoint ptr %flags176 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load volatile i32, ptr %flags176, align 4
  %and1.i = and i32 %167, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool192.not = icmp eq i32 %and1.i, 0
  br i1 %tobool192.not, label %land.lhs.true189.if.end194_crit_edge, label %if.then193

land.lhs.true189.if.end194_crit_edge:             ; preds = %land.lhs.true189
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end194

if.then193:                                       ; preds = %land.lhs.true189
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @reclaim_throttle(ptr noundef %pgdat, i32 noundef 3)
  br label %if.end194

if.end194:                                        ; preds = %if.then193, %land.lhs.true189.if.end194_crit_edge, %land.lhs.true183.if.end194_crit_edge, %current_may_throttle.exit.if.end194_crit_edge, %if.end177.if.end194_crit_edge
  %168 = ptrtoint ptr %nr_reclaimed3 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %nr_reclaimed3, align 4
  %170 = ptrtoint ptr %order.i.i to i32
  call void @__asan_load1_noabort(i32 %170)
  %171 = load i8, ptr %order.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %171)
  %tobool.not.i.i = icmp eq i8 %171, 0
  br i1 %tobool.not.i.i, label %if.end194.if.end199_crit_edge, label %land.lhs.true.i.i

if.end194.if.end199_crit_edge:                    ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end199

land.lhs.true.i.i:                                ; preds = %if.end194
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %171)
  %cmp.i.i = icmp sgt i8 %171, 3
  br i1 %cmp.i.i, label %in_reclaim_compaction.exit.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %172 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %172)
  %173 = load i8, ptr %priority, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 9, i8 %173)
  %cmp5.i.i = icmp sgt i8 %173, 9
  call void @__sanitizer_cov_trace_cmp4(i32 %169, i32 %18)
  %tobool.not.i349 = icmp eq i32 %169, %18
  %or.cond.i = or i1 %tobool.not.i349, %cmp5.i.i
  br i1 %or.cond.i, label %lor.lhs.false.i.i.if.end199_crit_edge, label %lor.lhs.false.i.i.for.cond.preheader.i_crit_edge

lor.lhs.false.i.i.for.cond.preheader.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond.preheader.i

lor.lhs.false.i.i.if.end199_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end199

in_reclaim_compaction.exit.i:                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %169, i32 %18)
  %tobool.not.old.i = icmp eq i32 %169, %18
  br i1 %tobool.not.old.i, label %in_reclaim_compaction.exit.i.if.end199_crit_edge, label %in_reclaim_compaction.exit.i.for.cond.preheader.i_crit_edge

in_reclaim_compaction.exit.i.for.cond.preheader.i_crit_edge: ; preds = %in_reclaim_compaction.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond.preheader.i

in_reclaim_compaction.exit.i.if.end199_crit_edge: ; preds = %in_reclaim_compaction.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end199

for.cond.preheader.i:                             ; preds = %in_reclaim_compaction.exit.i.for.cond.preheader.i_crit_edge, %lor.lhs.false.i.i.for.cond.preheader.i_crit_edge
  %174 = ptrtoint ptr %reclaim_idx.i to i32
  call void @__asan_load1_noabort(i32 %174)
  %175 = load i8, ptr %reclaim_idx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %175)
  %cmp.not48.i = icmp slt i8 %175, 0
  br i1 %cmp.not48.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %z.049.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %managed_pages.i.i.i = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 %z.049.i, i32 11
  %call.i.i.i.i.i350 = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i, i32 noundef 4) #13
  %176 = ptrtoint ptr %managed_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load volatile i32, ptr %managed_pages.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %177)
  %tobool.i.not.i351 = icmp eq i32 %177, 0
  br i1 %tobool.i.not.i351, label %for.body.i.for.inc.i_crit_edge, label %if.end6.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end6.i:                                        ; preds = %for.body.i
  %arrayidx.i352 = getelementptr [4 x %struct.zone], ptr %pgdat, i32 0, i32 %z.049.i
  %178 = ptrtoint ptr %order.i.i to i32
  call void @__asan_load1_noabort(i32 %178)
  %179 = load i8, ptr %order.i.i, align 2
  %conv7.i = sext i8 %179 to i32
  %180 = ptrtoint ptr %reclaim_idx.i to i32
  call void @__asan_load1_noabort(i32 %180)
  %181 = load i8, ptr %reclaim_idx.i, align 4
  %conv9.i = sext i8 %181 to i32
  %call10.i = tail call i32 @compaction_suitable(ptr noundef %arrayidx.i352, i32 noundef %conv7.i, i32 noundef 0, i32 noundef %conv9.i) #13
  %182 = add i32 %call10.i, -4
  %switch.and.i = and i32 %182, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %switch.and.i)
  %switch.selectcmp.i = icmp eq i32 %switch.and.i, 0
  br i1 %switch.selectcmp.i, label %if.end6.i.if.end199_crit_edge, label %if.end6.i.for.inc.i_crit_edge

if.end6.i.for.inc.i_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end6.i.if.end199_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end199

for.inc.i:                                        ; preds = %if.end6.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %z.049.i, 1
  %183 = ptrtoint ptr %reclaim_idx.i to i32
  call void @__asan_load1_noabort(i32 %183)
  %184 = load i8, ptr %reclaim_idx.i, align 4
  %conv.i = sext i8 %184 to i32
  %cmp.not.not.i = icmp slt i32 %z.049.i, %conv.i
  br i1 %cmp.not.not.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %185 = ptrtoint ptr %order.i.i to i32
  call void @__asan_load1_noabort(i32 %185)
  %186 = load i8, ptr %order.i.i, align 2
  %conv1246.i = zext i8 %186 to i32
  %shl.i.i = shl i32 2, %conv1246.i
  %call.i.i.i.i34.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2) to i32))
  %187 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), align 4
  %188 = tail call i32 @llvm.smax.i32(i32 %187, i32 0) #13
  %189 = ptrtoint ptr %node_id.i353 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %node_id.i353, align 64
  %call.i.i.i.i35.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @nr_swap_pages, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_swap_pages to i32))
  %191 = load volatile i32, ptr @nr_swap_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %191)
  %cmp1.i.i = icmp sgt i32 %191, 0
  br i1 %cmp1.i.i, label %for.end.i.if.then16.i_crit_edge, label %if.end7.i.i

for.end.i.if.then16.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then16.i

if.end7.i.i:                                      ; preds = %for.end.i
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @numa_demotion_enabled to i32))
  %192 = load i8, ptr @numa_demotion_enabled, align 1, !range !566
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %192)
  %tobool.not.i.i.i = icmp eq i8 %192, 0
  br i1 %tobool.not.i.i.i, label %if.end7.i.i.should_continue_reclaim.exit_crit_edge, label %if.end.i.i.i

if.end7.i.i.should_continue_reclaim.exit_crit_edge: ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %should_continue_reclaim.exit

if.end.i.i.i:                                     ; preds = %if.end7.i.i
  br i1 %tobool1.not.i.i.i, label %if.end.i.i.i.can_reclaim_anon_pages.exit.i_crit_edge, label %if.then2.i.i.i

if.end.i.i.i.can_reclaim_anon_pages.exit.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_reclaim_anon_pages.exit.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  %193 = ptrtoint ptr %force_deactivate to i32
  call void @__asan_load2_noabort(i32 %193)
  %bf.load.i.i.i = load i16, ptr %force_deactivate, align 4
  %194 = and i16 %bf.load.i.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %194)
  %tobool3.not.i.i.i = icmp eq i16 %194, 0
  br i1 %tobool3.not.i.i.i, label %if.end5.i.i.i, label %if.then2.i.i.i.should_continue_reclaim.exit_crit_edge

if.then2.i.i.i.should_continue_reclaim.exit_crit_edge: ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %should_continue_reclaim.exit

if.end5.i.i.i:                                    ; preds = %if.then2.i.i.i
  %195 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %target_mem_cgroup, align 4
  %tobool.i.not.i.i.i = icmp eq ptr %196, null
  br i1 %tobool.i.not.i.i.i, label %if.end5.i.i.i.can_reclaim_anon_pages.exit.i_crit_edge, label %if.end5.i.i.i.should_continue_reclaim.exit_crit_edge

if.end5.i.i.i.should_continue_reclaim.exit_crit_edge: ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %should_continue_reclaim.exit

if.end5.i.i.i.can_reclaim_anon_pages.exit.i_crit_edge: ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_reclaim_anon_pages.exit.i

can_reclaim_anon_pages.exit.i:                    ; preds = %if.end5.i.i.i.can_reclaim_anon_pages.exit.i_crit_edge, %if.end.i.i.i.can_reclaim_anon_pages.exit.i_crit_edge
  %call9.i.i.i = tail call i32 @next_demotion_node(i32 noundef %190) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call9.i.i.i)
  %cmp.i.i.not.i = icmp eq i32 %call9.i.i.i, -1
  br i1 %cmp.i.i.not.i, label %can_reclaim_anon_pages.exit.i.should_continue_reclaim.exit_crit_edge, label %can_reclaim_anon_pages.exit.i.if.then16.i_crit_edge

can_reclaim_anon_pages.exit.i.if.then16.i_crit_edge: ; preds = %can_reclaim_anon_pages.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then16.i

can_reclaim_anon_pages.exit.i.should_continue_reclaim.exit_crit_edge: ; preds = %can_reclaim_anon_pages.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %should_continue_reclaim.exit

if.then16.i:                                      ; preds = %can_reclaim_anon_pages.exit.i.if.then16.i_crit_edge, %for.end.i.if.then16.i_crit_edge
  %call.i.i.i.i37.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_node_stat to i32))
  %197 = load volatile i32, ptr @vm_node_stat, align 4
  %198 = tail call i32 @llvm.smax.i32(i32 %197, i32 0) #13
  %add.i = add nuw i32 %198, %188
  br label %should_continue_reclaim.exit

should_continue_reclaim.exit:                     ; preds = %if.then16.i, %can_reclaim_anon_pages.exit.i.should_continue_reclaim.exit_crit_edge, %if.end5.i.i.i.should_continue_reclaim.exit_crit_edge, %if.then2.i.i.i.should_continue_reclaim.exit_crit_edge, %if.end7.i.i.should_continue_reclaim.exit_crit_edge
  %inactive_lru_pages.0.i = phi i32 [ %add.i, %if.then16.i ], [ %188, %can_reclaim_anon_pages.exit.i.should_continue_reclaim.exit_crit_edge ], [ %188, %if.end7.i.i.should_continue_reclaim.exit_crit_edge ], [ %188, %if.then2.i.i.i.should_continue_reclaim.exit_crit_edge ], [ %188, %if.end5.i.i.i.should_continue_reclaim.exit_crit_edge ]
  %cmp19.i = icmp ugt i32 %inactive_lru_pages.0.i, %shl.i.i
  br i1 %cmp19.i, label %should_continue_reclaim.exit.again_crit_edge, label %should_continue_reclaim.exit.if.end199_crit_edge

should_continue_reclaim.exit.if.end199_crit_edge: ; preds = %should_continue_reclaim.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end199

should_continue_reclaim.exit.again_crit_edge:     ; preds = %should_continue_reclaim.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %again

if.end199:                                        ; preds = %should_continue_reclaim.exit.if.end199_crit_edge, %if.end6.i.if.end199_crit_edge, %in_reclaim_compaction.exit.i.if.end199_crit_edge, %lor.lhs.false.i.i.if.end199_crit_edge, %if.end194.if.end199_crit_edge
  br i1 %spec.select, label %if.then201, label %if.end199.if.end202_crit_edge

if.end199.if.end202_crit_edge:                    ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end202

if.then201:                                       ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #15
  %kswapd_failures = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 17
  %199 = ptrtoint ptr %kswapd_failures to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 0, ptr %kswapd_failures, align 16
  br label %if.end202

if.end202:                                        ; preds = %if.then201, %if.end199.if.end202_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @compaction_suitable(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @zone_watermark_ok_safe(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_flush_stats() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @shrink_node_memcgs(ptr noundef %pgdat, ptr noundef %sc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %target_mem_cgroup = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %0 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %target_mem_cgroup, align 4
  %call = tail call ptr @mem_cgroup_iter(ptr noundef %1, ptr noundef null, ptr noundef null) #13
  %__lruvec.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 26
  %node_id.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %memcg_low_reclaim = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %nr_reclaimed = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 11
  %nr_scanned = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %gfp_mask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  br label %do.body

do.body:                                          ; preds = %cleanup.do.body_crit_edge, %entry
  %memcg.0 = phi ptr [ %call, %entry ], [ %call18, %cleanup.do.body_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node_memcgs, %out.i)) #13
          to label %if.end.i [label %out.i], !srcloc !567

if.end.i:                                         ; preds = %do.body
  %tobool.not.i = icmp eq ptr %memcg.0, null
  br i1 %tobool.not.i, label %if.then1.i, label %if.end.i.if.end2.i_crit_edge

if.end.i.if.end2.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end2.i

if.then1.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %2 = load ptr, ptr @root_mem_cgroup, align 4
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.then1.i, %if.end.i.if.end2.i_crit_edge
  %memcg.addr.0.i = phi ptr [ %memcg.0, %if.end.i.if.end2.i_crit_edge ], [ %2, %if.then1.i ]
  %3 = ptrtoint ptr %node_id.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %node_id.i, align 64
  %arrayidx.i = getelementptr %struct.mem_cgroup, ptr %memcg.addr.0.i, i32 0, i32 45, i32 %4
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  br label %out.i

out.i:                                            ; preds = %if.end2.i, %do.body
  %lruvec.0.i = phi ptr [ %6, %if.end2.i ], [ %__lruvec.i, %do.body ]
  %pgdat4.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 7
  %7 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pgdat4.i, align 4
  %cmp.not.i = icmp eq ptr %8, %pgdat
  br i1 %cmp.not.i, label %out.i.mem_cgroup_lruvec.exit_crit_edge, label %if.then7.i, !prof !557

out.i.mem_cgroup_lruvec.exit_crit_edge:           ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mem_cgroup_lruvec.exit

if.then7.i:                                       ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  %9 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %pgdat, ptr %pgdat4.i, align 4
  br label %mem_cgroup_lruvec.exit

mem_cgroup_lruvec.exit:                           ; preds = %if.then7.i, %out.i.mem_cgroup_lruvec.exit_crit_edge
  tail call void @__might_resched(ptr noundef nonnull @.str.21, i32 noundef 3145, i32 noundef 0) #13
  %call.i = tail call i32 @__cond_resched() #13
  tail call void @mem_cgroup_calculate_protection(ptr noundef %1, ptr noundef %memcg.0) #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node_memcgs, %if.else)) #13
          to label %land.rhs.i.i [label %if.else], !srcloc !567

land.rhs.i.i:                                     ; preds = %mem_cgroup_lruvec.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %10 = load ptr, ptr @root_mem_cgroup, align 4
  %cmp.i.i.not.i = icmp eq ptr %10, %memcg.0
  br i1 %cmp.i.i.not.i, label %land.rhs.i.i.if.else_crit_edge, label %do.end.i

land.rhs.i.i.if.else_crit_edge:                   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

do.end.i:                                         ; preds = %land.rhs.i.i
  %memory.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.0, i32 0, i32 2
  %emin.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.0, i32 0, i32 2, i32 5
  %11 = ptrtoint ptr %emin.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %emin.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %memory.i, i32 noundef 4) #13
  %13 = ptrtoint ptr %memory.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %memory.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %14)
  %cmp.i.not = icmp ult i32 %12, %14
  br i1 %cmp.i.not, label %do.end.i.if.else_crit_edge, label %do.end.i.cleanup_crit_edge

do.end.i.cleanup_crit_edge:                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.end.i.if.else_crit_edge:                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

if.else:                                          ; preds = %do.end.i.if.else_crit_edge, %land.rhs.i.i.if.else_crit_edge, %mem_cgroup_lruvec.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_node_memcgs, %if.end10)) #13
          to label %land.rhs.i.i41 [label %if.end10], !srcloc !567

land.rhs.i.i41:                                   ; preds = %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %15 = load ptr, ptr @root_mem_cgroup, align 4
  %cmp.i.i.not.i40 = icmp eq ptr %15, %memcg.0
  br i1 %cmp.i.i.not.i40, label %land.rhs.i.i41.if.end10_crit_edge, label %do.end.i45

land.rhs.i.i41.if.end10_crit_edge:                ; preds = %land.rhs.i.i41
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

do.end.i45:                                       ; preds = %land.rhs.i.i41
  %memory.i42 = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.0, i32 0, i32 2
  %elow.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.0, i32 0, i32 2, i32 8
  %16 = ptrtoint ptr %elow.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %elow.i, align 16
  %call.i.i.i.i43 = tail call zeroext i1 @__kasan_check_read(ptr noundef %memory.i42, i32 noundef 4) #13
  %18 = ptrtoint ptr %memory.i42 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %memory.i42, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp.i44.not = icmp ult i32 %17, %19
  br i1 %cmp.i44.not, label %do.end.i45.if.end10_crit_edge, label %if.then5

do.end.i45.if.end10_crit_edge:                    ; preds = %do.end.i45
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

if.then5:                                         ; preds = %do.end.i45
  %20 = ptrtoint ptr %memcg_low_reclaim to i32
  call void @__asan_load2_noabort(i32 %20)
  %bf.load = load i16, ptr %memcg_low_reclaim, align 4
  %21 = and i16 %bf.load, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool.not = icmp eq i16 %21, 0
  br i1 %tobool.not, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  %bf.set = or i16 %bf.load, 128
  %22 = ptrtoint ptr %memcg_low_reclaim to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %bf.set, ptr %memcg_low_reclaim, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then5
  %memory_events_local.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.0, i32 0, i32 28
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %memory_events_local.i, i32 noundef 4) #13
  tail call void @llvm.prefetch.p0(ptr %memory_events_local.i, i32 1, i32 3, i32 1) #13
  %23 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %memory_events_local.i, ptr %memory_events_local.i, i32 1, ptr elementtype(i32) %memory_events_local.i) #13, !srcloc !565
  %events_local_file.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.0, i32 0, i32 15
  tail call void @cgroup_file_notify(ptr noundef %events_local_file.i) #13
  br label %do.body.i

do.body.i:                                        ; preds = %land.rhs.i.do.body.i_crit_edge, %if.end
  %memcg.addr.0.i47 = phi ptr [ %memcg.0, %if.end ], [ %add.ptr.i.i, %land.rhs.i.do.body.i_crit_edge ]
  %memory_events.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i47, i32 0, i32 27
  %call.i.i1.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %memory_events.i, i32 noundef 4) #13
  tail call void @llvm.prefetch.p0(ptr %memory_events.i, i32 1, i32 3, i32 1) #13
  %24 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %memory_events.i, ptr %memory_events.i, i32 1, ptr elementtype(i32) %memory_events.i) #13, !srcloc !565
  %events_file.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i47, i32 0, i32 14
  tail call void @cgroup_file_notify(ptr noundef %events_file.i) #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@shrink_node_memcgs, %if.end10)) #13
          to label %if.end13.i [label %if.end10], !srcloc !567

if.end13.i:                                       ; preds = %do.body.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7) to i32))
  %25 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7), align 4
  %and.i = and i32 %25, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool14.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool14.not.i, label %do.cond.i, label %if.end13.i.if.end10_crit_edge

if.end13.i.if.end10_crit_edge:                    ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

do.cond.i:                                        ; preds = %if.end13.i
  %parent.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i47, i32 0, i32 2, i32 13
  %26 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %parent.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %27, null
  %add.ptr.i.i = getelementptr i8, ptr %27, i32 -176
  %tobool18.not4.i = icmp eq ptr %add.ptr.i.i, null
  %tobool18.not.i = or i1 %tobool.not.i.i, %tobool18.not4.i
  br i1 %tobool18.not.i, label %do.cond.i.if.end10_crit_edge, label %land.rhs.i

do.cond.i.if.end10_crit_edge:                     ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

land.rhs.i:                                       ; preds = %do.cond.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %28 = load ptr, ptr @root_mem_cgroup, align 4
  %cmp.i.i = icmp eq ptr %28, %add.ptr.i.i
  br i1 %cmp.i.i, label %land.rhs.i.if.end10_crit_edge, label %land.rhs.i.do.body.i_crit_edge

land.rhs.i.do.body.i_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body.i

land.rhs.i.if.end10_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10

if.end10:                                         ; preds = %land.rhs.i.if.end10_crit_edge, %do.cond.i.if.end10_crit_edge, %if.end13.i.if.end10_crit_edge, %do.body.i, %do.end.i45.if.end10_crit_edge, %land.rhs.i.i41.if.end10_crit_edge, %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %29 = ptrtoint ptr %nr_reclaimed to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %nr_reclaimed, align 4
  %31 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %nr_scanned, align 4
  tail call fastcc void @shrink_lruvec(ptr noundef %lruvec.0.i, ptr noundef %sc)
  %33 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %gfp_mask, align 4
  %35 = ptrtoint ptr %node_id.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %node_id.i, align 64
  %37 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %priority, align 1
  %conv = sext i8 %38 to i32
  %call11 = tail call fastcc i32 @shrink_slab(i32 noundef %34, i32 noundef %36, ptr noundef %memcg.0, i32 noundef %conv)
  %39 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %gfp_mask, align 4
  %41 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %nr_scanned, align 4
  %sub = sub i32 %42, %32
  %43 = ptrtoint ptr %nr_reclaimed to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %nr_reclaimed, align 4
  %sub15 = sub i32 %44, %30
  tail call void @vmpressure(i32 noundef %40, ptr noundef %memcg.0, i1 noundef zeroext false, i32 noundef %sub, i32 noundef %sub15) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then6, %do.end.i.cleanup_crit_edge
  %call18 = tail call ptr @mem_cgroup_iter(ptr noundef %1, ptr noundef %memcg.0, ptr noundef null) #13
  %tobool19.not = icmp eq ptr %call18, null
  br i1 %tobool19.not, label %do.end, label %cleanup.do.body_crit_edge

cleanup.do.body_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

do.end:                                           ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vmpressure(i32 noundef, ptr noundef, i1 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @int_sqrt(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_calculate_protection(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_file_notify(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__delayacct_freepages_end() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @get_scan_count(ptr noundef %lruvec, ptr noundef %sc, ptr nocapture noundef writeonly %nr) unnamed_addr #0 align 64 {
entry:
  %fraction = alloca [2 x i64], align 8
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %pgdat.i = getelementptr inbounds %struct.lruvec, ptr %lruvec, i32 0, i32 7
  %0 = ptrtoint ptr %pgdat.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pgdat.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@get_scan_count, %lruvec_memcg.exit)) #13
          to label %if.end.i [label %lruvec_memcg.exit], !srcloc !567

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %memcg.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec, i32 0, i32 9
  %2 = ptrtoint ptr %memcg.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %memcg.i, align 4
  br label %lruvec_memcg.exit

lruvec_memcg.exit:                                ; preds = %if.end.i, %entry
  %retval.0.i = phi ptr [ %3, %if.end.i ], [ null, %entry ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@get_scan_count, %if.end.i185)) #13
          to label %mem_cgroup_swappiness.exit [label %if.end.i185], !srcloc !567

if.end.i185:                                      ; preds = %lruvec_memcg.exit
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@get_scan_count, %mem_cgroup_swappiness.exit)) #13
          to label %lor.lhs.false.i [label %mem_cgroup_swappiness.exit], !srcloc !567

lor.lhs.false.i:                                  ; preds = %if.end.i185
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %4 = load ptr, ptr @root_mem_cgroup, align 4
  %cmp.i.i = icmp eq ptr %4, %retval.0.i
  %swappiness.i = getelementptr inbounds %struct.mem_cgroup, ptr %retval.0.i, i32 0, i32 12
  %spec.select.i = select i1 %cmp.i.i, ptr @vm_swappiness, ptr %swappiness.i
  br label %mem_cgroup_swappiness.exit

mem_cgroup_swappiness.exit:                       ; preds = %lor.lhs.false.i, %if.end.i185, %lruvec_memcg.exit
  %retval.0.in.i = phi ptr [ %spec.select.i, %lor.lhs.false.i ], [ @vm_swappiness, %lruvec_memcg.exit ], [ @vm_swappiness, %if.end.i185 ]
  %5 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %retval.0.i186 = load i32, ptr %retval.0.in.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %fraction) #13
  %6 = getelementptr inbounds [2 x i64], ptr %fraction, i32 0, i32 1
  %may_swap = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %7 = call ptr @memset(ptr %fraction, i32 255, i32 16)
  %8 = ptrtoint ptr %may_swap to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load = load i16, ptr %may_swap, align 4
  %9 = and i16 %bf.load, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool.not = icmp eq i16 %9, 0
  br i1 %tobool.not, label %mem_cgroup_swappiness.exit.out_crit_edge, label %lor.lhs.false

mem_cgroup_swappiness.exit.out_crit_edge:         ; preds = %mem_cgroup_swappiness.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

lor.lhs.false:                                    ; preds = %mem_cgroup_swappiness.exit
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %1, i32 0, i32 8
  %10 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %node_id, align 64
  %cmp.i = icmp eq ptr %retval.0.i, null
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %lor.lhs.false
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @nr_swap_pages, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_swap_pages to i32))
  %12 = load volatile i32, ptr @nr_swap_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp1.i = icmp sgt i32 %12, 0
  br i1 %cmp1.i, label %if.then.i.if.end_crit_edge, label %if.then.i.if.end7.i_crit_edge

if.then.i.if.end7.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i

if.then.i.if.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.else.i:                                        ; preds = %lor.lhs.false
  %call3.i = tail call i32 @mem_cgroup_get_nr_swap_pages(ptr noundef nonnull %retval.0.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %cmp4.i = icmp sgt i32 %call3.i, 0
  br i1 %cmp4.i, label %if.else.i.if.end_crit_edge, label %if.else.i.if.end7.i_crit_edge

if.else.i.if.end7.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7.i

if.else.i.if.end_crit_edge:                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end7.i:                                        ; preds = %if.else.i.if.end7.i_crit_edge, %if.then.i.if.end7.i_crit_edge
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @numa_demotion_enabled to i32))
  %13 = load i8, ptr @numa_demotion_enabled, align 1, !range !566
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i.i = icmp eq i8 %13, 0
  br i1 %tobool.not.i.i, label %if.end7.i.out_crit_edge, label %if.end.i.i

if.end7.i.out_crit_edge:                          ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end.i.i:                                       ; preds = %if.end7.i
  %tobool1.not.i.i = icmp eq ptr %sc, null
  br i1 %tobool1.not.i.i, label %if.end.i.i.can_reclaim_anon_pages.exit_crit_edge, label %if.then2.i.i

if.end.i.i.can_reclaim_anon_pages.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_reclaim_anon_pages.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  %14 = ptrtoint ptr %may_swap to i32
  call void @__asan_load2_noabort(i32 %14)
  %bf.load.i.i = load i16, ptr %may_swap, align 4
  %15 = and i16 %bf.load.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool3.not.i.i = icmp eq i16 %15, 0
  br i1 %tobool3.not.i.i, label %if.end5.i.i, label %if.then2.i.i.out_crit_edge

if.then2.i.i.out_crit_edge:                       ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end5.i.i:                                      ; preds = %if.then2.i.i
  %target_mem_cgroup.i.i.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %16 = ptrtoint ptr %target_mem_cgroup.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %target_mem_cgroup.i.i.i, align 4
  %tobool.i.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.i.not.i.i, label %if.end5.i.i.can_reclaim_anon_pages.exit_crit_edge, label %if.end5.i.i.out_crit_edge

if.end5.i.i.out_crit_edge:                        ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end5.i.i.can_reclaim_anon_pages.exit_crit_edge: ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_reclaim_anon_pages.exit

can_reclaim_anon_pages.exit:                      ; preds = %if.end5.i.i.can_reclaim_anon_pages.exit_crit_edge, %if.end.i.i.can_reclaim_anon_pages.exit_crit_edge
  %call9.i.i = tail call i32 @next_demotion_node(i32 noundef %11) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call9.i.i)
  %cmp.i.i187.not = icmp eq i32 %call9.i.i, -1
  br i1 %cmp.i.i187.not, label %can_reclaim_anon_pages.exit.out_crit_edge, label %can_reclaim_anon_pages.exit.if.end_crit_edge

can_reclaim_anon_pages.exit.if.end_crit_edge:     ; preds = %can_reclaim_anon_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

can_reclaim_anon_pages.exit.out_crit_edge:        ; preds = %can_reclaim_anon_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end:                                           ; preds = %can_reclaim_anon_pages.exit.if.end_crit_edge, %if.else.i.if.end_crit_edge, %if.then.i.if.end_crit_edge
  %target_mem_cgroup.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %18 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %target_mem_cgroup.i, align 4
  %tobool.i = icmp ne ptr %19, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i186)
  %tobool5.not = icmp eq i32 %retval.0.i186, 0
  %or.cond = select i1 %tobool.i, i1 %tobool5.not, i1 false
  br i1 %or.cond, label %if.end.out_crit_edge, label %if.end7

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end7:                                          ; preds = %if.end
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %20 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %priority, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool8.not = icmp ne i8 %21, 0
  %or.cond184 = select i1 %tobool8.not, i1 true, i1 %tobool5.not
  br i1 %or.cond184, label %if.end12, label %if.end7.out_crit_edge

if.end7.out_crit_edge:                            ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end12:                                         ; preds = %if.end7
  %22 = ptrtoint ptr %may_swap to i32
  call void @__asan_load2_noabort(i32 %22)
  %bf.load13 = load i16, ptr %may_swap, align 4
  %23 = and i16 %bf.load13, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %tobool17.not = icmp eq i16 %23, 0
  br i1 %tobool17.not, label %if.end19, label %if.end12.out_crit_edge

if.end12.out_crit_edge:                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end19:                                         ; preds = %if.end12
  %24 = and i16 %bf.load13, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %tobool24.not = icmp eq i16 %24, 0
  br i1 %tobool24.not, label %if.end26, label %if.end19.out_crit_edge

if.end19.out_crit_edge:                           ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end26:                                         ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  %anon_cost27 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 3
  %25 = ptrtoint ptr %anon_cost27 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %anon_cost27, align 4
  %file_cost28 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 4
  %27 = ptrtoint ptr %file_cost28 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %file_cost28, align 4
  %add = add i32 %28, %26
  %add30 = add i32 %add, %26
  %add32 = add i32 %add, %28
  %add33 = add i32 %add32, 1
  %add34 = add i32 %add33, %add30
  %mul = mul i32 %add34, %retval.0.i186
  %add35 = add i32 %add30, 1
  %div = udiv i32 %mul, %add35
  %sub = sub i32 200, %retval.0.i186
  %mul37 = mul i32 %add34, %sub
  %div39 = udiv i32 %mul37, %add33
  %conv = zext i32 %div to i64
  %29 = ptrtoint ptr %fraction to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %conv, ptr %fraction, align 8
  %conv40 = zext i32 %div39 to i64
  %30 = ptrtoint ptr %6 to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %conv40, ptr %6, align 8
  %add42 = add i32 %div39, %div
  %conv43 = zext i32 %add42 to i64
  br label %out

out:                                              ; preds = %if.end26, %if.end19.out_crit_edge, %if.end12.out_crit_edge, %if.end7.out_crit_edge, %if.end.out_crit_edge, %can_reclaim_anon_pages.exit.out_crit_edge, %if.end5.i.i.out_crit_edge, %if.then2.i.i.out_crit_edge, %if.end7.i.out_crit_edge, %mem_cgroup_swappiness.exit.out_crit_edge
  %denominator.0 = phi i64 [ %conv43, %if.end26 ], [ 0, %can_reclaim_anon_pages.exit.out_crit_edge ], [ 0, %mem_cgroup_swappiness.exit.out_crit_edge ], [ 0, %if.end.out_crit_edge ], [ 0, %if.end7.out_crit_edge ], [ 0, %if.end12.out_crit_edge ], [ 0, %if.end19.out_crit_edge ], [ 0, %if.end7.i.out_crit_edge ], [ 0, %if.then2.i.i.out_crit_edge ], [ 0, %if.end5.i.i.out_crit_edge ]
  %cmp114 = phi i32 [ 0, %if.end26 ], [ 1, %can_reclaim_anon_pages.exit.out_crit_edge ], [ 1, %mem_cgroup_swappiness.exit.out_crit_edge ], [ 1, %if.end.out_crit_edge ], [ 0, %if.end7.out_crit_edge ], [ 0, %if.end12.out_crit_edge ], [ 1, %if.end19.out_crit_edge ], [ 1, %if.end7.i.out_crit_edge ], [ 1, %if.then2.i.i.out_crit_edge ], [ 1, %if.end5.i.i.out_crit_edge ]
  %scan_balance.0 = phi i32 [ 1, %if.end26 ], [ 3, %can_reclaim_anon_pages.exit.out_crit_edge ], [ 3, %mem_cgroup_swappiness.exit.out_crit_edge ], [ 3, %if.end.out_crit_edge ], [ 0, %if.end7.out_crit_edge ], [ 2, %if.end12.out_crit_edge ], [ 3, %if.end19.out_crit_edge ], [ 3, %if.end7.i.out_crit_edge ], [ 3, %if.then2.i.i.out_crit_edge ], [ 3, %if.end5.i.i.out_crit_edge ]
  %reclaim_idx = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %target_mem_cgroup = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %emin.i = getelementptr inbounds %struct.mem_cgroup, ptr %retval.0.i, i32 0, i32 2, i32 5
  %elow.i = getelementptr inbounds %struct.mem_cgroup, ptr %retval.0.i, i32 0, i32 2, i32 8
  %priority81 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i, i32 0, i32 7
  %add107 = add nsw i64 %denominator.0, -1
  br label %for.body

for.body:                                         ; preds = %sw.epilog.for.body_crit_edge, %out
  %lru.0223 = phi i32 [ 0, %out ], [ %inc, %sw.epilog.for.body_crit_edge ]
  %31 = and i32 %lru.0223, 2147483646
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %31)
  %32 = icmp eq i32 %31, 2
  %conv46 = zext i1 %32 to i32
  %33 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %reclaim_idx, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %34)
  %cmp.not22.i = icmp sgt i8 %34, -1
  br i1 %cmp.not22.i, label %for.body.lr.ph.i, label %for.body.lruvec_lru_size.exit_crit_edge

for.body.lruvec_lru_size.exit_crit_edge:          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %lruvec_lru_size.exit

for.body.lr.ph.i:                                 ; preds = %for.body
  %add6.i = add nuw nsw i32 %lru.0223, 1
  %35 = tail call i8 @llvm.umin.i8(i8 %34, i8 3)
  %umin.i = zext i8 %35 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %zid.024.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %cleanup.i.for.body.i_crit_edge ]
  %size.023.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %size.2.i, %cleanup.i.for.body.i_crit_edge ]
  %36 = ptrtoint ptr %pgdat.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pgdat.i, align 4
  %managed_pages.i.i.i = getelementptr [4 x %struct.zone], ptr %37, i32 0, i32 %zid.024.i, i32 11
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i, i32 noundef 4) #13
  %38 = ptrtoint ptr %managed_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %managed_pages.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.i.not.i = icmp eq i32 %39, 0
  br i1 %tobool.i.not.i, label %for.body.i.cleanup.i_crit_edge, label %if.end.i189

for.body.i.cleanup.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.i

if.end.i189:                                      ; preds = %for.body.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@get_scan_count, %if.else.i191)) #13
          to label %if.then4.i [label %if.else.i191], !srcloc !567

if.then4.i:                                       ; preds = %if.end.i189
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx2.i.i = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec, i32 0, i32 3, i32 %zid.024.i, i32 %lru.0223
  %40 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %arrayidx2.i.i, align 4
  br label %if.end9.i

if.else.i191:                                     ; preds = %if.end.i189
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i.i = getelementptr [4 x %struct.zone], ptr %37, i32 0, i32 %zid.024.i, i32 37, i32 %add6.i
  %call.i.i.i.i190 = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx.i.i, i32 noundef 4) #13
  %42 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %arrayidx.i.i, align 4
  %44 = tail call i32 @llvm.smax.i32(i32 %43, i32 0) #13
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.else.i191, %if.then4.i
  %call7.pn.i = phi i32 [ %44, %if.else.i191 ], [ %41, %if.then4.i ]
  %size.1.i = add i32 %call7.pn.i, %size.023.i
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end9.i, %for.body.i.cleanup.i_crit_edge
  %size.2.i = phi i32 [ %size.1.i, %if.end9.i ], [ %size.023.i, %for.body.i.cleanup.i_crit_edge ]
  %inc.i = add nuw nsw i32 %zid.024.i, 1
  %exitcond.not.i = icmp eq i32 %zid.024.i, %umin.i
  br i1 %exitcond.not.i, label %cleanup.i.lruvec_lru_size.exit_crit_edge, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

cleanup.i.lruvec_lru_size.exit_crit_edge:         ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %lruvec_lru_size.exit

lruvec_lru_size.exit:                             ; preds = %cleanup.i.lruvec_lru_size.exit_crit_edge, %for.body.lruvec_lru_size.exit_crit_edge
  %size.0.lcssa.i = phi i32 [ 0, %for.body.lruvec_lru_size.exit_crit_edge ], [ %size.2.i, %cleanup.i.lruvec_lru_size.exit_crit_edge ]
  %45 = ptrtoint ptr %target_mem_cgroup to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %target_mem_cgroup, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@get_scan_count, %mem_cgroup_protection.exit)) #13
          to label %mem_cgroup_disabled.exit.i [label %mem_cgroup_protection.exit], !srcloc !567

mem_cgroup_disabled.exit.i:                       ; preds = %lruvec_lru_size.exit
  %cmp.i192 = icmp eq ptr %46, %retval.0.i
  br i1 %cmp.i192, label %mem_cgroup_disabled.exit.i.if.end80_crit_edge, label %do.end.i

mem_cgroup_disabled.exit.i.if.end80_crit_edge:    ; preds = %mem_cgroup_disabled.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end80

do.end.i:                                         ; preds = %mem_cgroup_disabled.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %47 = ptrtoint ptr %emin.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %emin.i, align 4
  %49 = ptrtoint ptr %elow.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %elow.i, align 16
  br label %mem_cgroup_protection.exit

mem_cgroup_protection.exit:                       ; preds = %do.end.i, %lruvec_lru_size.exit
  %low.0 = phi i32 [ %50, %do.end.i ], [ 0, %lruvec_lru_size.exit ]
  %min.0 = phi i32 [ %48, %do.end.i ], [ 0, %lruvec_lru_size.exit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %min.0)
  %tobool49.not = icmp eq i32 %min.0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %low.0)
  %tobool51.not = icmp eq i32 %low.0, 0
  %or.cond220 = select i1 %tobool49.not, i1 %tobool51.not, i1 false
  br i1 %or.cond220, label %mem_cgroup_protection.exit.if.end80_crit_edge, label %if.then52

mem_cgroup_protection.exit.if.end80_crit_edge:    ; preds = %mem_cgroup_protection.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end80

if.then52:                                        ; preds = %mem_cgroup_protection.exit
  %call53 = tail call i32 @mem_cgroup_size(ptr noundef %retval.0.i) #13
  %51 = ptrtoint ptr %may_swap to i32
  call void @__asan_load2_noabort(i32 %51)
  %bf.load54 = load i16, ptr %may_swap, align 4
  %52 = and i16 %bf.load54, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %52)
  %tobool58.not = icmp eq i16 %52, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %low.0, i32 %min.0)
  %cmp60 = icmp ugt i32 %low.0, %min.0
  %or.cond221 = select i1 %tobool58.not, i1 %cmp60, i1 false
  br i1 %or.cond221, label %if.then62, label %if.then52.if.end65_crit_edge

if.then52.if.end65_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end65

if.then62:                                        ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  %bf.set = or i16 %bf.load54, 128
  %53 = ptrtoint ptr %may_swap to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 %bf.set, ptr %may_swap, align 4
  br label %if.end65

if.end65:                                         ; preds = %if.then62, %if.then52.if.end65_crit_edge
  %protection.0 = phi i32 [ %low.0, %if.then62 ], [ %min.0, %if.then52.if.end65_crit_edge ]
  %54 = tail call i32 @llvm.umax.i32(i32 %call53, i32 %protection.0)
  %mul68 = mul i32 %protection.0, %size.0.lcssa.i
  %add69 = add i32 %54, 1
  %div70 = udiv i32 %mul68, %add69
  %sub71 = sub i32 %size.0.lcssa.i, %div70
  %55 = tail call i32 @llvm.umax.i32(i32 %sub71, i32 32)
  br label %if.end80

if.end80:                                         ; preds = %if.end65, %mem_cgroup_protection.exit.if.end80_crit_edge, %mem_cgroup_disabled.exit.i.if.end80_crit_edge
  %scan.0 = phi i32 [ %55, %if.end65 ], [ %size.0.lcssa.i, %mem_cgroup_disabled.exit.i.if.end80_crit_edge ], [ %size.0.lcssa.i, %mem_cgroup_protection.exit.if.end80_crit_edge ]
  %56 = ptrtoint ptr %priority81 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %priority81, align 1
  %conv82182 = zext i8 %57 to i32
  %shr = lshr i32 %scan.0, %conv82182
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr)
  %tobool83.not = icmp eq i32 %shr, 0
  br i1 %tobool83.not, label %land.lhs.true84, label %if.end80.if.end94_crit_edge

if.end80.if.end94_crit_edge:                      ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end94

land.lhs.true84:                                  ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@get_scan_count, %if.end94)) #13
          to label %if.end.i194 [label %if.end94], !srcloc !567

if.end.i194:                                      ; preds = %land.lhs.true84
  call void @__sanitizer_cov_trace_pc() #15
  %58 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %59, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i193.not = icmp eq i32 %and.i, 0
  %60 = tail call i32 @llvm.umin.i32(i32 %size.0.lcssa.i, i32 32)
  %spec.select222 = select i1 %tobool.i193.not, i32 %60, i32 0
  br label %if.end94

if.end94:                                         ; preds = %if.end.i194, %land.lhs.true84, %if.end80.if.end94_crit_edge
  %scan.1 = phi i32 [ %shr, %if.end80.if.end94_crit_edge ], [ 0, %land.lhs.true84 ], [ %spec.select222, %if.end.i194 ]
  %61 = zext i32 %scan_balance.0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %61, ptr @__sancov_gen_cov_switch_values.185)
  switch i32 %scan_balance.0, label %if.end94.unreachabledefault [
    i32 0, label %if.end94.sw.epilog_crit_edge
    i32 1, label %sw.bb
    i32 3, label %if.end94.sw.bb113_crit_edge
    i32 2, label %if.end94.sw.bb113_crit_edge225
  ]

if.end94.sw.bb113_crit_edge225:                   ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb113

if.end94.sw.bb113_crit_edge:                      ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb113

if.end94.sw.epilog_crit_edge:                     ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end94
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@get_scan_count, %cond.true97)) #13
          to label %if.end.i199 [label %cond.true97], !srcloc !567

if.end.i199:                                      ; preds = %sw.bb
  %62 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %flags.i, align 4
  %and.i197 = and i32 %63, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i197)
  %tobool.i198.not = icmp eq i32 %and.i197, 0
  br i1 %tobool.i198.not, label %cond.false102, label %if.end.i199.cond.true97_crit_edge

if.end.i199.cond.true97_crit_edge:                ; preds = %if.end.i199
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.true97

cond.true97:                                      ; preds = %if.end.i199.cond.true97_crit_edge, %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  %conv98 = zext i32 %scan.1 to i64
  %arrayidx99 = getelementptr [2 x i64], ptr %fraction, i32 0, i32 %conv46
  %64 = ptrtoint ptr %arrayidx99 to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %arrayidx99, align 8
  %mul100 = mul i64 %65, %conv98
  %call101 = tail call i64 @div64_u64(i64 noundef %mul100, i64 noundef %denominator.0) #13
  %extract.t = trunc i64 %call101 to i32
  br label %sw.epilog

cond.false102:                                    ; preds = %if.end.i199
  call void @__sanitizer_cov_trace_pc() #15
  %conv104 = zext i32 %scan.1 to i64
  %arrayidx105 = getelementptr [2 x i64], ptr %fraction, i32 0, i32 %conv46
  %66 = ptrtoint ptr %arrayidx105 to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %arrayidx105, align 8
  %mul106 = mul i64 %67, %conv104
  %sub108 = add i64 %add107, %mul106
  %call109 = tail call i64 @div64_u64(i64 noundef %sub108, i64 noundef %denominator.0) #13
  %extract.t183 = trunc i64 %call109 to i32
  br label %sw.epilog

sw.bb113:                                         ; preds = %if.end94.sw.bb113_crit_edge, %if.end94.sw.bb113_crit_edge225
  call void @__sanitizer_cov_trace_cmp4(i32 %cmp114, i32 %conv46)
  %cmp116.not = icmp eq i32 %cmp114, %conv46
  %spec.select = select i1 %cmp116.not, i32 %scan.1, i32 0
  br label %sw.epilog

if.end94.unreachabledefault:                      ; preds = %if.end94
  unreachable

sw.epilog:                                        ; preds = %sw.bb113, %cond.false102, %cond.true97, %if.end94.sw.epilog_crit_edge
  %scan.2 = phi i32 [ %scan.1, %if.end94.sw.epilog_crit_edge ], [ %extract.t, %cond.true97 ], [ %extract.t183, %cond.false102 ], [ %spec.select, %sw.bb113 ]
  %arrayidx123 = getelementptr i32, ptr %nr, i32 %lru.0223
  %68 = ptrtoint ptr %arrayidx123 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %scan.2, ptr %arrayidx123, align 4
  %inc = add nuw nsw i32 %lru.0223, 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %sw.epilog.for.body_crit_edge

sw.epilog.for.body_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %fraction) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_start_plug(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_finish_plug(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @shrink_active_list(i32 noundef %nr_to_scan, ptr noundef %lruvec, ptr nocapture noundef readonly %sc, i32 noundef %lru) unnamed_addr #0 align 64 {
entry:
  %nr_scanned = alloca i32, align 4
  %vm_flags = alloca i32, align 4
  %l_hold = alloca %struct.list_head, align 4
  %l_active = alloca %struct.list_head, align 4
  %l_inactive = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr_scanned) #13
  %0 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %nr_scanned, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vm_flags) #13
  %1 = ptrtoint ptr %vm_flags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %vm_flags, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %l_hold) #13
  %2 = getelementptr inbounds %struct.list_head, ptr %l_hold, i32 0, i32 1
  %3 = ptrtoint ptr %l_hold to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %l_hold, ptr %l_hold, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %l_hold, ptr %2, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %l_active) #13
  %5 = getelementptr inbounds %struct.list_head, ptr %l_active, i32 0, i32 1
  %6 = ptrtoint ptr %l_active to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %l_active, ptr %l_active, align 4
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %l_active, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %l_inactive) #13
  %8 = getelementptr inbounds %struct.list_head, ptr %l_inactive, i32 0, i32 1
  %9 = ptrtoint ptr %l_inactive to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %l_inactive, ptr %l_inactive, align 4
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %l_inactive, ptr %8, align 4
  %11 = and i32 %lru, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %12 = icmp eq i32 %11, 2
  %pgdat.i = getelementptr inbounds %struct.lruvec, ptr %lruvec, i32 0, i32 7
  %13 = ptrtoint ptr %pgdat.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pgdat.i, align 4
  call void @lru_add_drain() #13
  %lru_lock = getelementptr inbounds %struct.lruvec, ptr %lruvec, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %lru_lock) #13
  %call6 = call fastcc i32 @isolate_lru_pages(i32 noundef %nr_to_scan, ptr noundef %lruvec, ptr noundef nonnull %l_hold, ptr noundef nonnull %nr_scanned, ptr noundef %sc, i32 noundef %lru)
  %add = select i1 %12, i32 8, i32 7
  call void @__mod_node_page_state(ptr noundef %14, i32 noundef %add, i32 noundef %call6) #13
  %target_mem_cgroup.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %15 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %target_mem_cgroup.i, align 4
  %tobool.i.not = icmp eq ptr %16, null
  br i1 %tobool.i.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %17 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nr_scanned, align 4
  %19 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i120 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i120 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cpu.i, align 4
  %arrayidx7.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %22
  %23 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx7.i, align 4
  %add.i = add i32 %24, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 23) to i32)
  %25 = inttoptr i32 %add.i to ptr
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add8.i = add i32 %27, %18
  store i32 %add8.i, ptr %25, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_active_list, %lruvec_memcg.exit)) #13
          to label %if.end.i [label %lruvec_memcg.exit], !srcloc !567

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %memcg.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec, i32 0, i32 9
  %28 = ptrtoint ptr %memcg.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %memcg.i, align 4
  br label %lruvec_memcg.exit

lruvec_memcg.exit:                                ; preds = %if.end.i, %if.end
  %retval.0.i = phi ptr [ %29, %if.end.i ], [ null, %if.end ]
  %30 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %nr_scanned, align 4
  call void @__count_memcg_events(ptr noundef %retval.0.i, i32 noundef 23, i32 noundef %31) #13
  call void @_raw_spin_unlock_irq(ptr noundef %lru_lock) #13
  %32 = ptrtoint ptr %l_hold to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %l_hold, align 4
  %cmp.i.not175177 = icmp eq ptr %33, %l_hold
  br i1 %cmp.i.not175177, label %lruvec_memcg.exit.while.end_crit_edge, label %lruvec_memcg.exit.while.body.lr.ph_crit_edge

lruvec_memcg.exit.while.body.lr.ph_crit_edge:     ; preds = %lruvec_memcg.exit
  br label %while.body.lr.ph

lruvec_memcg.exit.while.end_crit_edge:            ; preds = %lruvec_memcg.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body.lr.ph:                                 ; preds = %list_add.exit.while.body.lr.ph_crit_edge, %lruvec_memcg.exit.while.body.lr.ph_crit_edge
  %nr_rotated.0.ph178 = phi i32 [ %add51, %list_add.exit.while.body.lr.ph_crit_edge ], [ 0, %lruvec_memcg.exit.while.body.lr.ph_crit_edge ]
  br label %while.body

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %while.body.lr.ph
  call void @__might_resched(ptr noundef nonnull @.str.21, i32 noundef 2532, i32 noundef 0) #13
  %call.i = call i32 @__cond_resched() #13
  %34 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %2, align 4
  %add.ptr = getelementptr i8, ptr %35, i32 -4
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %35) #13
  br i1 %call.i.i, label %if.end.i.i121, label %while.body.list_del.exit_crit_edge

while.body.list_del.exit_crit_edge:               ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_del.exit

if.end.i.i121:                                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prev.i.i, align 4
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %35, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %37, ptr %prev1.i.i.i, align 4
  %41 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %39, ptr %37, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i121, %while.body.list_del.exit_crit_edge
  %42 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr inttoptr (i32 256 to ptr), ptr %35, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  %43 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %call15 = call fastcc zeroext i1 @page_evictable(ptr noundef %add.ptr)
  br i1 %call15, label %if.end21, label %if.then20, !prof !557

if.then20:                                        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @putback_lru_page(ptr noundef %add.ptr)
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end.i.i140, %SetPageWorkingset.exit.while.cond.backedge_crit_edge, %if.then20
  %44 = ptrtoint ptr %l_hold to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile ptr, ptr %l_hold, align 4
  %cmp.i.not = icmp eq ptr %45, %l_hold
  br i1 %cmp.i.not, label %while.cond.backedge.while.end_crit_edge, label %while.cond.backedge.while.body_crit_edge

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

while.cond.backedge.while.end_crit_edge:          ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end21:                                         ; preds = %list_del.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @buffer_heads_over_limit to i32))
  %46 = load i32, ptr @buffer_heads_over_limit, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool22.not = icmp eq i32 %46, 0
  br i1 %tobool22.not, label %if.end21.if.end41_crit_edge, label %if.then29, !prof !557

if.end21.if.end41_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end41

if.then29:                                        ; preds = %if.end21
  %47 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %add.ptr, align 4
  %and.i = and i32 %48, 24576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i122.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i122.not, label %if.then29.if.end41_crit_edge, label %land.lhs.true

if.then29.if.end41_crit_edge:                     ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end41

land.lhs.true:                                    ; preds = %if.then29
  %call32 = call fastcc i32 @trylock_page(ptr noundef %add.ptr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %land.lhs.true.if.end41_crit_edge, label %if.then34

land.lhs.true.if.end41_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end41

if.then34:                                        ; preds = %land.lhs.true
  %49 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %add.ptr, align 4
  %and.i123 = and i32 %50, 24576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i123)
  %tobool.i124.not = icmp eq i32 %and.i123, 0
  br i1 %tobool.i124.not, label %if.then34.if.end39_crit_edge, label %if.then37

if.then34.if.end39_crit_edge:                     ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end39

if.then37:                                        ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #15
  %call38 = call i32 @try_to_release_page(ptr noundef %add.ptr, i32 noundef 0) #13
  br label %if.end39

if.end39:                                         ; preds = %if.then37, %if.then34.if.end39_crit_edge
  call void @unlock_page(ptr noundef %add.ptr) #13
  br label %if.end41

if.end41:                                         ; preds = %if.end39, %land.lhs.true.if.end41_crit_edge, %if.then29.if.end41_crit_edge, %if.end21.if.end41_crit_edge
  %51 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %target_mem_cgroup.i, align 4
  %call42 = call i32 @page_referenced(ptr noundef %add.ptr, i32 noundef 0, ptr noundef %52, ptr noundef nonnull %vm_flags) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %if.end41.if.end54_crit_edge, label %if.then44

if.end41.if.end54_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.then44:                                        ; preds = %if.end41
  %53 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %vm_flags, align 4
  %and = and i32 %54, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool45.not = icmp eq i32 %and, 0
  br i1 %tobool45.not, label %if.then44.if.end54_crit_edge, label %land.lhs.true46

if.then44.if.end54_crit_edge:                     ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

land.lhs.true46:                                  ; preds = %if.then44
  %55 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %35, align 4
  %and.i.i126 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i126)
  %tobool.not.i.i127 = icmp eq i32 %and.i.i126, 0
  br i1 %tobool.not.i.i127, label %if.end.i.i130, label %if.then.i.i129, !prof !557

if.then.i.i129:                                   ; preds = %land.lhs.true46
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i128 = add i32 %56, -1
  br label %_compound_head.exit.i132

if.end.i.i130:                                    ; preds = %land.lhs.true46
  call void @__sanitizer_cov_trace_pc() #15
  %57 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i132

_compound_head.exit.i132:                         ; preds = %if.end.i.i130, %if.then.i.i129
  %retval.0.i.i131 = phi i32 [ %sub.i.i128, %if.then.i.i129 ], [ %57, %if.end.i.i130 ]
  %58 = inttoptr i32 %retval.0.i.i131 to ptr
  %59 = getelementptr inbounds %struct.page, ptr %58, i32 0, i32 1
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %59, align 4
  %and.i.i.i.i.i = and i32 %61, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %page_is_file_lru.exit, label %if.then.i.i.i.i, !prof !557

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i132
  call void @__sanitizer_cov_trace_pc() #15
  %62 = inttoptr i32 %retval.0.i.i131 to ptr
  call void @dump_page(ptr noundef %62, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

page_is_file_lru.exit:                            ; preds = %_compound_head.exit.i132
  %63 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %58, align 4
  %65 = and i32 %64, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool48.not.not = icmp eq i32 %65, 0
  br i1 %tobool48.not.not, label %if.then49, label %page_is_file_lru.exit.if.end54_crit_edge

page_is_file_lru.exit.if.end54_crit_edge:         ; preds = %page_is_file_lru.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end54

if.then49:                                        ; preds = %page_is_file_lru.exit
  %66 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %35, align 4
  %and.i.i133 = and i32 %67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i133)
  %tobool.not.i = icmp eq i32 %and.i.i133, 0
  br i1 %tobool.not.i, label %thp_nr_pages.exit, label %if.then.i134, !prof !557

if.then.i134:                                     ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/huge_mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 347, 0\0A.popsection", ""() #13, !srcloc !609
  unreachable

thp_nr_pages.exit:                                ; preds = %if.then49
  %add51 = add i32 %nr_rotated.0.ph178, 1
  %68 = ptrtoint ptr %l_active to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %l_active, align 4
  %call.i.i135 = call zeroext i1 @__list_add_valid(ptr noundef %35, ptr noundef nonnull %l_active, ptr noundef %69) #13
  br i1 %call.i.i135, label %if.end.i.i136, label %thp_nr_pages.exit.list_add.exit_crit_edge

thp_nr_pages.exit.list_add.exit_crit_edge:        ; preds = %thp_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_add.exit

if.end.i.i136:                                    ; preds = %thp_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %35, ptr %prev1.i.i, align 4
  %71 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %69, ptr %35, align 4
  %72 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %l_active, ptr %prev.i, align 4
  %73 = ptrtoint ptr %l_active to i32
  call void @__asan_store4_noabort(i32 %73)
  store volatile ptr %35, ptr %l_active, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i136, %thp_nr_pages.exit.list_add.exit_crit_edge
  %74 = ptrtoint ptr %l_hold to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile ptr, ptr %l_hold, align 4
  %cmp.i.not175 = icmp eq ptr %75, %l_hold
  br i1 %cmp.i.not175, label %list_add.exit.while.end_crit_edge, label %list_add.exit.while.body.lr.ph_crit_edge

list_add.exit.while.body.lr.ph_crit_edge:         ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.lr.ph

list_add.exit.while.end_crit_edge:                ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end54:                                         ; preds = %page_is_file_lru.exit.if.end54_crit_edge, %if.then44.if.end54_crit_edge, %if.end41.if.end54_crit_edge
  %76 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %35, align 4
  %and.i.i = and i32 %77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %77, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #15
  %78 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %78, %if.end.i.i ]
  %79 = inttoptr i32 %retval.0.i.i to ptr
  %80 = ptrtoint ptr %79 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %79, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %81)
  %cmp.i.not.i = icmp eq i32 %81, -1
  %82 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %35, align 4
  %and.i12.i = and i32 %83, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i)
  %tobool.not.i13.i = icmp eq i32 %and.i12.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i13.i, label %if.end.i16.i, label %if.then.i15.i, !prof !557

if.then.i15.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i = add i32 %83, -1
  br label %_compound_head.exit18.i

if.end.i16.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %84 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit18.i

_compound_head.exit18.i:                          ; preds = %if.end.i16.i, %if.then.i15.i
  %retval.0.i17.i = phi i32 [ %sub.i14.i, %if.then.i15.i ], [ %84, %if.end.i16.i ]
  %85 = inttoptr i32 %retval.0.i17.i to ptr
  call void @dump_page(ptr noundef %85, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 424, 0\0A.popsection", ""() #13, !srcloc !595
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i13.i, label %if.end.i23.i, label %if.then.i22.i, !prof !557

if.then.i22.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i = add i32 %83, -1
  br label %ClearPageActive.exit

if.end.i23.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %86 = ptrtoint ptr %add.ptr to i32
  br label %ClearPageActive.exit

ClearPageActive.exit:                             ; preds = %if.end.i23.i, %if.then.i22.i
  %retval.0.i24.i = phi i32 [ %sub.i21.i, %if.then.i22.i ], [ %86, %if.end.i23.i ]
  %87 = inttoptr i32 %retval.0.i24.i to ptr
  call void @_clear_bit(i32 noundef 5, ptr noundef %87) #13
  %88 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %35, align 4
  %and.i.i99 = and i32 %89, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i99)
  %tobool.not.i.i100 = icmp eq i32 %and.i.i99, 0
  br i1 %tobool.not.i.i100, label %if.end.i.i103, label %if.then.i.i102, !prof !557

if.then.i.i102:                                   ; preds = %ClearPageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i101 = add i32 %89, -1
  br label %_compound_head.exit.i108

if.end.i.i103:                                    ; preds = %ClearPageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  %90 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i108

_compound_head.exit.i108:                         ; preds = %if.end.i.i103, %if.then.i.i102
  %retval.0.i.i104 = phi i32 [ %sub.i.i101, %if.then.i.i102 ], [ %90, %if.end.i.i103 ]
  %91 = inttoptr i32 %retval.0.i.i104 to ptr
  %92 = ptrtoint ptr %91 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %91, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %93)
  %cmp.i.not.i105 = icmp eq i32 %93, -1
  %94 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %35, align 4
  %and.i12.i106 = and i32 %95, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i106)
  %tobool.not.i13.i107 = icmp eq i32 %and.i12.i106, 0
  br i1 %cmp.i.not.i105, label %if.then.i109, label %do.end8.i115, !prof !558

if.then.i109:                                     ; preds = %_compound_head.exit.i108
  br i1 %tobool.not.i13.i107, label %if.end.i16.i112, label %if.then.i15.i111, !prof !557

if.then.i15.i111:                                 ; preds = %if.then.i109
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i110 = add i32 %95, -1
  br label %_compound_head.exit18.i114

if.end.i16.i112:                                  ; preds = %if.then.i109
  call void @__sanitizer_cov_trace_pc() #15
  %96 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit18.i114

_compound_head.exit18.i114:                       ; preds = %if.end.i16.i112, %if.then.i15.i111
  %retval.0.i17.i113 = phi i32 [ %sub.i14.i110, %if.then.i15.i111 ], [ %96, %if.end.i16.i112 ]
  %97 = inttoptr i32 %retval.0.i17.i113 to ptr
  call void @dump_page(ptr noundef %97, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 426, 0\0A.popsection", ""() #13, !srcloc !660
  unreachable

do.end8.i115:                                     ; preds = %_compound_head.exit.i108
  br i1 %tobool.not.i13.i107, label %if.end.i23.i118, label %if.then.i22.i117, !prof !557

if.then.i22.i117:                                 ; preds = %do.end8.i115
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i116 = add i32 %95, -1
  br label %SetPageWorkingset.exit

if.end.i23.i118:                                  ; preds = %do.end8.i115
  call void @__sanitizer_cov_trace_pc() #15
  %98 = ptrtoint ptr %add.ptr to i32
  br label %SetPageWorkingset.exit

SetPageWorkingset.exit:                           ; preds = %if.end.i23.i118, %if.then.i22.i117
  %retval.0.i24.i119 = phi i32 [ %sub.i21.i116, %if.then.i22.i117 ], [ %98, %if.end.i23.i118 ]
  %99 = inttoptr i32 %retval.0.i24.i119 to ptr
  call void @_set_bit(i32 noundef 6, ptr noundef %99) #13
  %100 = ptrtoint ptr %l_inactive to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %l_inactive, align 4
  %call.i.i137 = call zeroext i1 @__list_add_valid(ptr noundef %35, ptr noundef nonnull %l_inactive, ptr noundef %101) #13
  br i1 %call.i.i137, label %if.end.i.i140, label %SetPageWorkingset.exit.while.cond.backedge_crit_edge

SetPageWorkingset.exit.while.cond.backedge_crit_edge: ; preds = %SetPageWorkingset.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge

if.end.i.i140:                                    ; preds = %SetPageWorkingset.exit
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i138 = getelementptr inbounds %struct.list_head, ptr %101, i32 0, i32 1
  %102 = ptrtoint ptr %prev1.i.i138 to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr %35, ptr %prev1.i.i138, align 4
  %103 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %103)
  store ptr %101, ptr %35, align 4
  %104 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store ptr %l_inactive, ptr %prev.i, align 4
  %105 = ptrtoint ptr %l_inactive to i32
  call void @__asan_store4_noabort(i32 %105)
  store volatile ptr %35, ptr %l_inactive, align 4
  br label %while.cond.backedge

while.end:                                        ; preds = %list_add.exit.while.end_crit_edge, %while.cond.backedge.while.end_crit_edge, %lruvec_memcg.exit.while.end_crit_edge
  %nr_rotated.0.ph.lcssa174 = phi i32 [ 0, %lruvec_memcg.exit.while.end_crit_edge ], [ %nr_rotated.0.ph178, %while.cond.backedge.while.end_crit_edge ], [ %add51, %list_add.exit.while.end_crit_edge ]
  call void @_raw_spin_lock_irq(ptr noundef %lru_lock) #13
  %call57 = call fastcc i32 @move_pages_to_lru(ptr noundef %lruvec, ptr noundef nonnull %l_active)
  %call58 = call fastcc i32 @move_pages_to_lru(ptr noundef %lruvec, ptr noundef nonnull %l_inactive)
  %106 = ptrtoint ptr %l_inactive to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile ptr, ptr %l_inactive, align 4
  %cmp.i.not.i142 = icmp eq ptr %107, %l_inactive
  br i1 %cmp.i.not.i142, label %while.end.list_splice.exit_crit_edge, label %if.then.i144

while.end.list_splice.exit_crit_edge:             ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_splice.exit

if.then.i144:                                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  %108 = ptrtoint ptr %l_active to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %l_active, align 4
  %110 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %8, align 4
  %prev3.i.i143 = getelementptr inbounds %struct.list_head, ptr %107, i32 0, i32 1
  %112 = ptrtoint ptr %prev3.i.i143 to i32
  call void @__asan_store4_noabort(i32 %112)
  store ptr %l_active, ptr %prev3.i.i143, align 4
  store ptr %107, ptr %l_active, align 4
  %113 = ptrtoint ptr %111 to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %109, ptr %111, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %109, i32 0, i32 1
  %114 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %111, ptr %prev6.i.i, align 4
  br label %list_splice.exit

list_splice.exit:                                 ; preds = %if.then.i144, %while.end.list_splice.exit_crit_edge
  %115 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i146 = and i32 %115, -16384
  %116 = inttoptr i32 %and.i.i146 to ptr
  %cpu.i147 = getelementptr inbounds %struct.thread_info, ptr %116, i32 0, i32 3
  %117 = ptrtoint ptr %cpu.i147 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %cpu.i147, align 4
  %arrayidx7.i148 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %118
  %119 = ptrtoint ptr %arrayidx7.i148 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %arrayidx7.i148, align 4
  %add.i149 = add i32 %120, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 18) to i32)
  %121 = inttoptr i32 %add.i149 to ptr
  %122 = ptrtoint ptr %121 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %121, align 4
  %add8.i150 = add i32 %123, %call58
  store i32 %add8.i150, ptr %121, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_active_list, %lruvec_memcg.exit154)) #13
          to label %if.end.i152 [label %lruvec_memcg.exit154], !srcloc !567

if.end.i152:                                      ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #15
  %memcg.i151 = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec, i32 0, i32 9
  %124 = ptrtoint ptr %memcg.i151 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %memcg.i151, align 4
  br label %lruvec_memcg.exit154

lruvec_memcg.exit154:                             ; preds = %if.end.i152, %list_splice.exit
  %retval.0.i153 = phi ptr [ %125, %if.end.i152 ], [ null, %list_splice.exit ]
  call void @__count_memcg_events(ptr noundef %retval.0.i153, i32 noundef 18, i32 noundef %call58) #13
  %sub = sub i32 0, %call6
  call void @__mod_node_page_state(ptr noundef %14, i32 noundef %add, i32 noundef %sub) #13
  call void @_raw_spin_unlock_irq(ptr noundef %lru_lock) #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_active_list, %mem_cgroup_uncharge_list.exit)) #13
          to label %if.end.i155 [label %mem_cgroup_uncharge_list.exit], !srcloc !567

if.end.i155:                                      ; preds = %lruvec_memcg.exit154
  call void @__sanitizer_cov_trace_pc() #15
  call void @__mem_cgroup_uncharge_list(ptr noundef nonnull %l_active) #13
  br label %mem_cgroup_uncharge_list.exit

mem_cgroup_uncharge_list.exit:                    ; preds = %if.end.i155, %lruvec_memcg.exit154
  %conv = zext i1 %12 to i32
  call void @free_unref_page_list(ptr noundef nonnull %l_active) #13
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %14, i32 0, i32 8
  %126 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %node_id, align 64
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %128 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %128)
  %129 = load i8, ptr %priority, align 1
  %conv62 = sext i8 %129 to i32
  call fastcc void @trace_mm_vmscan_lru_shrink_active(i32 noundef %127, i32 noundef %call6, i32 noundef %call57, i32 noundef %call58, i32 noundef %nr_rotated.0.ph.lcssa174, i32 noundef %conv62, i32 noundef %conv)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %l_inactive) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %l_active) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %l_hold) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vm_flags) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr_scanned) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mem_cgroup_size(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @div64_u64(i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @shrink_inactive_list(i32 noundef %nr_to_scan, ptr noundef %lruvec, ptr noundef %sc, i32 noundef %lru) unnamed_addr #0 align 64 {
entry:
  %page_list = alloca %struct.list_head, align 4
  %nr_scanned = alloca i32, align 4
  %stat = alloca %struct.reclaim_stat, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %page_list) #13
  %0 = getelementptr inbounds %struct.list_head, ptr %page_list, i32 0, i32 1
  %1 = ptrtoint ptr %page_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %page_list, ptr %page_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %page_list, ptr %0, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr_scanned) #13
  %3 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %nr_scanned, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 44, ptr nonnull %stat) #13
  %4 = call ptr @memset(ptr %stat, i32 255, i32 44)
  %5 = and i32 %lru, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %6 = icmp eq i32 %5, 2
  %pgdat.i = getelementptr inbounds %struct.lruvec, ptr %lruvec, i32 0, i32 7
  %7 = ptrtoint ptr %pgdat.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pgdat.i, align 4
  %conv = zext i1 %6 to i32
  %call2 = call fastcc i32 @too_many_isolated(ptr noundef %8, i32 noundef %conv, ptr noundef %sc)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %entry.while.end_crit_edge, label %while.body, !prof !557

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body:                                       ; preds = %entry
  call void @reclaim_throttle(ptr noundef %8, i32 noundef 1)
  %9 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %stack.i.i.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and1.i.i.i.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %while.body.while.cond.1_crit_edge, label %fatal_signal_pending.exit

while.body.while.cond.1_crit_edge:                ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.1

fatal_signal_pending.exit:                        ; preds = %while.body
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 116, i32 1
  %17 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %signal.i.i, align 4
  %19 = and i32 %18, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %phi.cmp = icmp eq i32 %19, 0
  br i1 %phi.cmp, label %fatal_signal_pending.exit.while.cond.1_crit_edge, label %fatal_signal_pending.exit.cleanup_crit_edge

fatal_signal_pending.exit.cleanup_crit_edge:      ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

fatal_signal_pending.exit.while.cond.1_crit_edge: ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.1

while.cond.1:                                     ; preds = %fatal_signal_pending.exit.while.cond.1_crit_edge, %while.body.while.cond.1_crit_edge
  %call2.1 = call fastcc i32 @too_many_isolated(ptr noundef %8, i32 noundef %conv, ptr noundef %sc)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.1)
  %tobool3.not.1 = icmp eq i32 %call2.1, 0
  br i1 %tobool3.not.1, label %while.cond.1.while.end_crit_edge, label %while.cond.1.cleanup_crit_edge, !prof !557

while.cond.1.cleanup_crit_edge:                   ; preds = %while.cond.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

while.cond.1.while.end_crit_edge:                 ; preds = %while.cond.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %while.cond.1.while.end_crit_edge, %entry.while.end_crit_edge
  call void @lru_add_drain() #13
  %lru_lock = getelementptr inbounds %struct.lruvec, ptr %lruvec, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %lru_lock) #13
  %call12 = call fastcc i32 @isolate_lru_pages(i32 noundef %nr_to_scan, ptr noundef %lruvec, ptr noundef nonnull %page_list, ptr noundef nonnull %nr_scanned, ptr noundef %sc, i32 noundef %lru)
  %add = select i1 %6, i32 8, i32 7
  call void @__mod_node_page_state(ptr noundef %8, i32 noundef %add, i32 noundef %call12) #13
  %20 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flags.i, align 4
  %and.i124 = and i32 %25, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i124)
  %tobool16.not = icmp eq i32 %and.i124, 0
  %cond = select i1 %tobool16.not, i32 30, i32 29
  %target_mem_cgroup.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %26 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %target_mem_cgroup.i, align 4
  %tobool.i.not = icmp eq ptr %27, null
  br i1 %tobool.i.not, label %if.then18, label %while.end.if.end19_crit_edge

while.end.if.end19_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19

if.then18:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  %28 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nr_scanned, align 4
  %arrayidx.i = getelementptr [76 x i32], ptr @vm_event_states, i32 0, i32 %cond
  %30 = ptrtoint ptr %arrayidx.i to i32
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 3
  %31 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cpu.i, align 4
  %arrayidx7.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %32
  %33 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx7.i, align 4
  %add.i = add i32 %34, %30
  %35 = inttoptr i32 %add.i to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  %add8.i = add i32 %37, %29
  store i32 %add8.i, ptr %35, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %while.end.if.end19_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_inactive_list, %lruvec_memcg.exit)) #13
          to label %if.end.i [label %lruvec_memcg.exit], !srcloc !567

if.end.i:                                         ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #15
  %memcg.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec, i32 0, i32 9
  %38 = ptrtoint ptr %memcg.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %memcg.i, align 4
  br label %lruvec_memcg.exit

lruvec_memcg.exit:                                ; preds = %if.end.i, %if.end19
  %retval.0.i = phi ptr [ %39, %if.end.i ], [ null, %if.end19 ]
  %40 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %nr_scanned, align 4
  call void @__count_memcg_events(ptr noundef %retval.0.i, i32 noundef %cond, i32 noundef %41) #13
  %add23 = select i1 %6, i32 33, i32 32
  %arrayidx.i126 = getelementptr [76 x i32], ptr @vm_event_states, i32 0, i32 %add23
  %42 = ptrtoint ptr %arrayidx.i126 to i32
  %43 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i127 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i127 to ptr
  %cpu.i128 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 3
  %45 = ptrtoint ptr %cpu.i128 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cpu.i128, align 4
  %arrayidx7.i129 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %46
  %47 = ptrtoint ptr %arrayidx7.i129 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx7.i129, align 4
  %add.i130 = add i32 %48, %42
  %49 = inttoptr i32 %add.i130 to ptr
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  %add8.i131 = add i32 %51, %41
  store i32 %add8.i131, ptr %49, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %lru_lock) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp = icmp eq i32 %call12, 0
  br i1 %cmp, label %lruvec_memcg.exit.cleanup_crit_edge, label %if.end27

lruvec_memcg.exit.cleanup_crit_edge:              ; preds = %lruvec_memcg.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end27:                                         ; preds = %lruvec_memcg.exit
  %call28 = call fastcc i32 @shrink_page_list(ptr noundef nonnull %page_list, ptr noundef %8, ptr noundef %sc, ptr noundef nonnull %stat, i1 noundef zeroext false)
  call void @_raw_spin_lock_irq(ptr noundef %lru_lock) #13
  %call30 = call fastcc i32 @move_pages_to_lru(ptr noundef %lruvec, ptr noundef nonnull %page_list)
  %sub = sub i32 0, %call12
  call void @__mod_node_page_state(ptr noundef %8, i32 noundef %add, i32 noundef %sub) #13
  %52 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i132 = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i132 to ptr
  %task.i133 = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %task.i133 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %task.i133, align 8
  %flags.i134 = getelementptr inbounds %struct.task_struct, ptr %55, i32 0, i32 3
  %56 = ptrtoint ptr %flags.i134 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %flags.i134, align 4
  %and.i135 = and i32 %57, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i135)
  %tobool35.not = icmp eq i32 %and.i135, 0
  %cond36 = select i1 %tobool35.not, i32 26, i32 25
  %58 = ptrtoint ptr %target_mem_cgroup.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %target_mem_cgroup.i, align 4
  %tobool.i137.not = icmp eq ptr %59, null
  br i1 %tobool.i137.not, label %if.then38, label %if.end27.if.end39_crit_edge

if.end27.if.end39_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end39

if.then38:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i138 = getelementptr [76 x i32], ptr @vm_event_states, i32 0, i32 %cond36
  %60 = ptrtoint ptr %arrayidx.i138 to i32
  %cpu.i140 = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 3
  %61 = ptrtoint ptr %cpu.i140 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %cpu.i140, align 4
  %arrayidx7.i141 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %62
  %63 = ptrtoint ptr %arrayidx7.i141 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx7.i141, align 4
  %add.i142 = add i32 %64, %60
  %65 = inttoptr i32 %add.i142 to ptr
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %65, align 4
  %add8.i143 = add i32 %67, %call28
  store i32 %add8.i143, ptr %65, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end27.if.end39_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_inactive_list, %lruvec_memcg.exit147)) #13
          to label %if.end.i145 [label %lruvec_memcg.exit147], !srcloc !567

if.end.i145:                                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #15
  %memcg.i144 = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec, i32 0, i32 9
  %68 = ptrtoint ptr %memcg.i144 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %memcg.i144, align 4
  br label %lruvec_memcg.exit147

lruvec_memcg.exit147:                             ; preds = %if.end.i145, %if.end39
  %retval.0.i146 = phi ptr [ %69, %if.end.i145 ], [ null, %if.end39 ]
  call void @__count_memcg_events(ptr noundef %retval.0.i146, i32 noundef %cond36, i32 noundef %call28) #13
  %add43 = select i1 %6, i32 35, i32 34
  %arrayidx.i148 = getelementptr [76 x i32], ptr @vm_event_states, i32 0, i32 %add43
  %70 = ptrtoint ptr %arrayidx.i148 to i32
  %71 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i149 = and i32 %71, -16384
  %72 = inttoptr i32 %and.i.i149 to ptr
  %cpu.i150 = getelementptr inbounds %struct.thread_info, ptr %72, i32 0, i32 3
  %73 = ptrtoint ptr %cpu.i150 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %cpu.i150, align 4
  %arrayidx7.i151 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %74
  %75 = ptrtoint ptr %arrayidx7.i151 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx7.i151, align 4
  %add.i152 = add i32 %76, %70
  %77 = inttoptr i32 %add.i152 to ptr
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %77, align 4
  %add8.i153 = add i32 %79, %call28
  store i32 %add8.i153, ptr %77, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %lru_lock) #13
  %nr_pageout = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 5
  %80 = ptrtoint ptr %nr_pageout to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %nr_pageout, align 4
  call void @lru_note_cost(ptr noundef %lruvec, i1 noundef zeroext %6, i32 noundef %81) #13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@shrink_inactive_list, %mem_cgroup_uncharge_list.exit)) #13
          to label %if.end.i154 [label %mem_cgroup_uncharge_list.exit], !srcloc !567

if.end.i154:                                      ; preds = %lruvec_memcg.exit147
  call void @__sanitizer_cov_trace_pc() #15
  call void @__mem_cgroup_uncharge_list(ptr noundef nonnull %page_list) #13
  br label %mem_cgroup_uncharge_list.exit

mem_cgroup_uncharge_list.exit:                    ; preds = %if.end.i154, %lruvec_memcg.exit147
  call void @free_unref_page_list(ptr noundef nonnull %page_list) #13
  %nr_unqueued_dirty = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 1
  %82 = ptrtoint ptr %nr_unqueued_dirty to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %nr_unqueued_dirty, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %83, i32 %call12)
  %cmp46 = icmp eq i32 %83, %call12
  br i1 %cmp46, label %if.then48, label %mem_cgroup_uncharge_list.exit.if.end49_crit_edge

mem_cgroup_uncharge_list.exit.if.end49_crit_edge: ; preds = %mem_cgroup_uncharge_list.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end49

if.then48:                                        ; preds = %mem_cgroup_uncharge_list.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @wakeup_flusher_threads(i32 noundef 1) #13
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %mem_cgroup_uncharge_list.exit.if.end49_crit_edge
  %84 = ptrtoint ptr %stat to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %stat, align 4
  %nr = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12
  %86 = ptrtoint ptr %nr to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %nr, align 4
  %add50 = add i32 %87, %85
  store i32 %add50, ptr %nr, align 4
  %nr_congested = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 2
  %88 = ptrtoint ptr %nr_congested to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %nr_congested, align 4
  %congested = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 2
  %90 = ptrtoint ptr %congested to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %congested, align 4
  %add52 = add i32 %91, %89
  store i32 %add52, ptr %congested, align 4
  %92 = ptrtoint ptr %nr_unqueued_dirty to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %nr_unqueued_dirty, align 4
  %unqueued_dirty = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 1
  %94 = ptrtoint ptr %unqueued_dirty to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %unqueued_dirty, align 4
  %add55 = add i32 %95, %93
  store i32 %add55, ptr %unqueued_dirty, align 4
  %nr_writeback = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 3
  %96 = ptrtoint ptr %nr_writeback to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %nr_writeback, align 4
  %writeback = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 3
  %98 = ptrtoint ptr %writeback to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %writeback, align 4
  %add57 = add i32 %99, %97
  store i32 %add57, ptr %writeback, align 4
  %nr_immediate = getelementptr inbounds %struct.reclaim_stat, ptr %stat, i32 0, i32 4
  %100 = ptrtoint ptr %nr_immediate to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %nr_immediate, align 4
  %immediate = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 4
  %102 = ptrtoint ptr %immediate to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %immediate, align 4
  %add59 = add i32 %103, %101
  store i32 %add59, ptr %immediate, align 4
  %taken = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 6
  %104 = ptrtoint ptr %taken to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %taken, align 4
  %add61 = add i32 %105, %call12
  store i32 %add61, ptr %taken, align 4
  br i1 %6, label %if.then63, label %if.end49.if.end66_crit_edge

if.end49.if.end66_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end66

if.then63:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #15
  %file_taken = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 12, i32 5
  %106 = ptrtoint ptr %file_taken to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %file_taken, align 4
  %add65 = add i32 %107, %call12
  store i32 %add65, ptr %file_taken, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.then63, %if.end49.if.end66_crit_edge
  %node_id = getelementptr inbounds %struct.pglist_data, ptr %8, i32 0, i32 8
  %108 = ptrtoint ptr %node_id to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %node_id, align 64
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %110 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %priority, align 1
  %conv67 = sext i8 %111 to i32
  call fastcc void @trace_mm_vmscan_lru_shrink_inactive(i32 noundef %109, i32 noundef %41, i32 noundef %call28, ptr noundef nonnull %stat, i32 noundef %conv67, i32 noundef %conv)
  br label %cleanup

cleanup:                                          ; preds = %if.end66, %lruvec_memcg.exit.cleanup_crit_edge, %while.cond.1.cleanup_crit_edge, %fatal_signal_pending.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call28, %if.end66 ], [ 0, %lruvec_memcg.exit.cleanup_crit_edge ], [ 32, %fatal_signal_pending.exit.cleanup_crit_edge ], [ 0, %while.cond.1.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %stat) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr_scanned) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %page_list) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @too_many_isolated(ptr noundef %pgdat, i32 noundef %file, ptr nocapture noundef readonly %sc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %5, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %target_mem_cgroup.i.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %6 = ptrtoint ptr %target_mem_cgroup.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %target_mem_cgroup.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %7, null
  br i1 %tobool.i.not.i, label %if.end.if.end3_crit_edge, label %if.end.i

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end3

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@too_many_isolated, %cleanup)) #13
          to label %if.end3 [label %cleanup], !srcloc !567

if.end3:                                          ; preds = %if.end.i, %if.end.if.end3_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %file)
  %tobool4.not = icmp eq i32 %file, 0
  br i1 %tobool4.not, label %if.else, label %if.then5

if.then5:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), i32 noundef 4) #13
  br label %if.end10

if.else:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i24 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #13
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then5
  %vm_node_stat.sink = phi ptr [ @vm_node_stat, %if.else ], [ getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 2), %if.then5 ]
  %.sink = phi ptr [ getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 7), %if.else ], [ getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 8), %if.then5 ]
  %8 = ptrtoint ptr %vm_node_stat.sink to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %vm_node_stat.sink, align 4
  %10 = tail call i32 @llvm.smax.i32(i32 %9, i32 0) #13
  %call.i.i.i.i25 = tail call zeroext i1 @__kasan_check_read(ptr noundef %.sink, i32 noundef 4) #13
  %11 = ptrtoint ptr %.sink to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %.sink, align 4
  %13 = tail call i32 @llvm.smax.i32(i32 %12, i32 0) #13
  %gfp_mask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %14 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %gfp_mask, align 4
  %and = and i32 %15, 192
  call void @__sanitizer_cov_trace_const_cmp4(i32 192, i32 %and)
  %cmp = icmp eq i32 %and, 192
  %shr = lshr i32 %10, 3
  %spec.select = select i1 %cmp, i32 %shr, i32 %10
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %spec.select)
  %cmp13 = icmp ugt i32 %13, %spec.select
  br i1 %cmp13, label %if.end10.if.end16_crit_edge, label %if.then15

if.end10.if.end16_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.then15:                                        ; preds = %if.end10
  %head.i.i = getelementptr %struct.pglist_data, ptr %pgdat, i32 0, i32 11, i32 1, i32 1
  %16 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %head.i.i, align 4
  %cmp.i.i.not.i = icmp eq ptr %17, %head.i.i
  br i1 %cmp.i.i.not.i, label %if.then15.if.end16_crit_edge, label %if.then.i

if.then15.if.end16_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end16

if.then.i:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i = getelementptr %struct.pglist_data, ptr %pgdat, i32 0, i32 11, i32 1
  tail call void @__wake_up(ptr noundef %arrayidx.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #13
  br label %if.end16

if.end16:                                         ; preds = %if.then.i, %if.then15.if.end16_crit_edge, %if.end10.if.end16_crit_edge
  %conv = zext i1 %cmp13 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %conv, %if.end16 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_add_drain() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @isolate_lru_pages(i32 noundef %nr_to_scan, ptr noundef %lruvec, ptr noundef %dst, ptr nocapture noundef writeonly %nr_scanned, ptr nocapture noundef readonly %sc, i32 noundef %lru) unnamed_addr #0 align 64 {
entry:
  %nr_zone_taken = alloca [4 x i32], align 4
  %nr_skipped = alloca [4 x i32], align 4
  %pages_skipped = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [5 x %struct.list_head], ptr %lruvec, i32 0, i32 %lru
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %nr_zone_taken) #13
  %0 = call ptr @memset(ptr %nr_zone_taken, i32 0, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %nr_skipped) #13
  %1 = call ptr @memset(ptr %nr_skipped, i32 0, i32 16)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %pages_skipped) #13
  %2 = getelementptr inbounds %struct.list_head, ptr %pages_skipped, i32 0, i32 1
  %3 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %pages_skipped, ptr %pages_skipped, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %pages_skipped, ptr %2, align 4
  %may_unmap = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %5 = ptrtoint ptr %may_unmap to i32
  call void @__asan_load2_noabort(i32 %5)
  %bf.load = load i16, ptr %may_unmap, align 4
  %6 = lshr i16 %bf.load, 9
  %7 = and i16 %6, 2
  %8 = xor i16 %7, 2
  %9 = zext i16 %8 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_to_scan)
  %cmp163.not = icmp eq i32 %nr_to_scan, 0
  br i1 %cmp163.not, label %entry.while.end_crit_edge, label %land.rhs.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

land.rhs.lr.ph:                                   ; preds = %entry
  %prev2 = getelementptr [5 x %struct.list_head], ptr %lruvec, i32 0, i32 %lru, i32 1
  %reclaim_idx = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  br label %land.rhs

land.rhs:                                         ; preds = %cleanup.land.rhs_crit_edge, %land.rhs.lr.ph
  %nr_taken.0166 = phi i32 [ 0, %land.rhs.lr.ph ], [ %nr_taken.1, %cleanup.land.rhs_crit_edge ]
  %total_scan.0165 = phi i32 [ 0, %land.rhs.lr.ph ], [ %add, %cleanup.land.rhs_crit_edge ]
  %scan.0164 = phi i32 [ 0, %land.rhs.lr.ph ], [ %scan.1, %cleanup.land.rhs_crit_edge ]
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %arrayidx, align 4
  %cmp.i.not = icmp eq ptr %11, %arrayidx
  br i1 %cmp.i.not, label %land.rhs.while.end_crit_edge, label %while.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body:                                       ; preds = %land.rhs
  %12 = ptrtoint ptr %prev2 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev2, align 4
  %add.ptr = getelementptr i8, ptr %13, i32 -4
  %14 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %cmp.i.not.i.i = icmp eq i32 %15, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i101, label %PageHead.exit.i, !prof !558

if.then.i.i101:                                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.153) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i:                                  ; preds = %while.body
  %16 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %add.ptr, align 4
  %18 = and i32 %17, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i102 = icmp eq i32 %18, 0
  br i1 %tobool.not.i102, label %PageHead.exit.i.compound_nr.exit_crit_edge, label %if.end.i103

PageHead.exit.i.compound_nr.exit_crit_edge:       ; preds = %PageHead.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %compound_nr.exit

if.end.i103:                                      ; preds = %PageHead.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %compound_nr.i = getelementptr i8, ptr %13, i32 48
  %19 = ptrtoint ptr %compound_nr.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %compound_nr.i, align 4
  br label %compound_nr.exit

compound_nr.exit:                                 ; preds = %if.end.i103, %PageHead.exit.i.compound_nr.exit_crit_edge
  %retval.0.i = phi i32 [ %20, %if.end.i103 ], [ 1, %PageHead.exit.i.compound_nr.exit_crit_edge ]
  %add = add i32 %retval.0.i, %total_scan.0165
  %shr.i = lshr i32 %17, 30
  %21 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %reclaim_idx, align 4
  %conv = sext i8 %22 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i, i32 %conv)
  %cmp5 = icmp ugt i32 %shr.i, %conv
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %compound_nr.exit
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %13) #13
  br i1 %call.i.i, label %if.end.i.i104, label %if.then.__list_del_entry.exit.i_crit_edge

if.then.__list_del_entry.exit.i_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %__list_del_entry.exit.i

if.end.i.i104:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev.i.i, align 4
  %25 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %13, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %prev1.i.i.i, align 4
  %28 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %26, ptr %24, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i104, %if.then.__list_del_entry.exit.i_crit_edge
  %29 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pages_skipped, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %13, ptr noundef nonnull %pages_skipped, ptr noundef %30) #13
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move.exit_crit_edge

__list_del_entry.exit.i.list_move.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_move.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i2.i = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %prev1.i.i2.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %13, ptr %prev1.i.i2.i, align 4
  %32 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %30, ptr %13, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %33 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %pages_skipped, ptr %prev3.i.i.i, align 4
  %34 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %13, ptr %pages_skipped, align 4
  br label %list_move.exit

list_move.exit:                                   ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move.exit_crit_edge
  %35 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %add.ptr, align 4
  %shr.i105 = lshr i32 %36, 30
  %arrayidx9 = getelementptr [4 x i32], ptr %nr_skipped, i32 0, i32 %shr.i105
  %37 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx9, align 4
  %add10 = add i32 %38, %retval.0.i
  store i32 %add10, ptr %arrayidx9, align 4
  br label %cleanup

if.end:                                           ; preds = %compound_nr.exit
  %add11 = add i32 %retval.0.i, %scan.0164
  %call12 = call zeroext i1 @__isolate_lru_page_prepare(ptr noundef %add.ptr, i32 noundef %9)
  br i1 %call12, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end
  %call.i.i106 = call zeroext i1 @__list_del_entry_valid(ptr noundef %13) #13
  br i1 %call.i.i106, label %if.end.i.i109, label %if.then13.__list_del_entry.exit.i111_crit_edge

if.then13.__list_del_entry.exit.i111_crit_edge:   ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #15
  br label %__list_del_entry.exit.i111

if.end.i.i109:                                    ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i107 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %39 = ptrtoint ptr %prev.i.i107 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %prev.i.i107, align 4
  %41 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %13, align 4
  %prev1.i.i.i108 = getelementptr inbounds %struct.list_head, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %prev1.i.i.i108 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %40, ptr %prev1.i.i.i108, align 4
  %44 = ptrtoint ptr %40 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr %42, ptr %40, align 4
  br label %__list_del_entry.exit.i111

__list_del_entry.exit.i111:                       ; preds = %if.end.i.i109, %if.then13.__list_del_entry.exit.i111_crit_edge
  %45 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx, align 4
  %call.i.i.i110 = call zeroext i1 @__list_add_valid(ptr noundef %13, ptr noundef %arrayidx, ptr noundef %46) #13
  br i1 %call.i.i.i110, label %if.end.i.i.i114, label %__list_del_entry.exit.i111.cleanup_crit_edge

__list_del_entry.exit.i111.cleanup_crit_edge:     ; preds = %__list_del_entry.exit.i111
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i.i114:                                  ; preds = %__list_del_entry.exit.i111
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i2.i112 = getelementptr inbounds %struct.list_head, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %prev1.i.i2.i112 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %13, ptr %prev1.i.i2.i112, align 4
  %48 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %46, ptr %13, align 4
  %prev3.i.i.i113 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %49 = ptrtoint ptr %prev3.i.i.i113 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %arrayidx, ptr %prev3.i.i.i113, align 4
  %50 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %13, ptr %arrayidx, align 4
  br label %cleanup

if.end15:                                         ; preds = %if.end
  %_refcount.i.i = getelementptr i8, ptr %13, i32 24
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !661
  call void @llvm.prefetch.p0(ptr %_refcount.i.i, i32 1, i32 3, i32 1) #13
  %51 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i, ptr %_refcount.i.i, i32 0, i32 1, ptr elementtype(i32) %_refcount.i.i) #13, !srcloc !662
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %51, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.end15.atomic_add_unless.exit.i.i_crit_edge, label %do.end11.i.i.i.i.i

if.end15.atomic_add_unless.exit.i.i_crit_edge:    ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %atomic_add_unless.exit.i.i

do.end11.i.i.i.i.i:                               ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !663
  br label %atomic_add_unless.exit.i.i

atomic_add_unless.exit.i.i:                       ; preds = %do.end11.i.i.i.i.i, %if.end15.atomic_add_unless.exit.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_unless, i32 0, i32 1), ptr blockaddress(@isolate_lru_pages, %if.then.i.i116)) #13
          to label %get_page_unless_zero.exit [label %if.then.i.i116], !srcloc !567

if.then.i.i116:                                   ; preds = %atomic_add_unless.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %conv.i.i = zext i1 %cmp.i.i.i.i to i32
  call void @__page_ref_mod_unless(ptr noundef %add.ptr, i32 noundef 1, i32 noundef %conv.i.i) #13
  br label %get_page_unless_zero.exit

get_page_unless_zero.exit:                        ; preds = %if.then.i.i116, %atomic_add_unless.exit.i.i
  br i1 %cmp.i.i.i.i, label %if.end23, label %if.then21, !prof !557

if.then21:                                        ; preds = %get_page_unless_zero.exit
  call void @__sanitizer_cov_trace_pc() #15
  call fastcc void @list_move(ptr noundef %13, ptr noundef %arrayidx)
  br label %cleanup

if.end23:                                         ; preds = %get_page_unless_zero.exit
  %52 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %13, align 4
  %and.i.i = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %53, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #15
  %54 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %54, %if.end.i.i ]
  %55 = inttoptr i32 %retval.0.i.i to ptr
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %55, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %57)
  %cmp.i.not.i = icmp eq i32 %57, -1
  %58 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %13, align 4
  %and.i13.i = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !557

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i = add i32 %59, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %60 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %60, %if.end.i17.i ]
  %61 = inttoptr i32 %retval.0.i18.i to ptr
  call void @dump_page(ptr noundef %61, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 423, 0\0A.popsection", ""() #13, !srcloc !622
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !557

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i = add i32 %59, -1
  br label %TestClearPageLRU.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %62 = ptrtoint ptr %add.ptr to i32
  br label %TestClearPageLRU.exit

TestClearPageLRU.exit:                            ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %62, %if.end.i24.i ]
  %63 = inttoptr i32 %retval.0.i25.i to ptr
  %call10.i = call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %63) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool25.not = icmp eq i32 %call10.i, 0
  br i1 %tobool25.not, label %if.then26, label %if.end28

if.then26:                                        ; preds = %TestClearPageLRU.exit
  %64 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %13, align 4
  %and.i.i117 = and i32 %65, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i117)
  %tobool.not.i.i118 = icmp eq i32 %and.i.i117, 0
  br i1 %tobool.not.i.i118, label %if.end.i.i121, label %if.then.i.i120, !prof !557

if.then.i.i120:                                   ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i119 = add i32 %65, -1
  br label %_compound_head.exit.i124

if.end.i.i121:                                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #15
  %66 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i124

_compound_head.exit.i124:                         ; preds = %if.end.i.i121, %if.then.i.i120
  %retval.0.i.i122 = phi i32 [ %sub.i.i119, %if.then.i.i120 ], [ %66, %if.end.i.i121 ]
  %67 = inttoptr i32 %retval.0.i.i122 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %67, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #13
  %68 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %cmp.i.i.i.i123 = icmp eq i32 %69, 0
  br i1 %cmp.i.i.i.i123, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !558

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i124
  call void @__sanitizer_cov_trace_pc() #15
  %70 = inttoptr i32 %retval.0.i.i122 to ptr
  call void @dump_page(ptr noundef %70, ptr noundef nonnull @.str.158) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #13, !srcloc !590
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i124
  %call.i.i.i10.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !591
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #13
  %71 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #13, !srcloc !592
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %71, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !593
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@isolate_lru_pages, %if.then.i.i.i.i.i)) #13
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !567

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %67, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #13
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @__put_page(ptr noundef %67) #13
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %call.i.i125 = call zeroext i1 @__list_del_entry_valid(ptr noundef %13) #13
  br i1 %call.i.i125, label %if.end.i.i128, label %put_page.exit.__list_del_entry.exit.i130_crit_edge

put_page.exit.__list_del_entry.exit.i130_crit_edge: ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %__list_del_entry.exit.i130

if.end.i.i128:                                    ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i126 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %72 = ptrtoint ptr %prev.i.i126 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %prev.i.i126, align 4
  %74 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %13, align 4
  %prev1.i.i.i127 = getelementptr inbounds %struct.list_head, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %prev1.i.i.i127 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %73, ptr %prev1.i.i.i127, align 4
  %77 = ptrtoint ptr %73 to i32
  call void @__asan_store4_noabort(i32 %77)
  store volatile ptr %75, ptr %73, align 4
  br label %__list_del_entry.exit.i130

__list_del_entry.exit.i130:                       ; preds = %if.end.i.i128, %put_page.exit.__list_del_entry.exit.i130_crit_edge
  %78 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %arrayidx, align 4
  %call.i.i.i129 = call zeroext i1 @__list_add_valid(ptr noundef %13, ptr noundef %arrayidx, ptr noundef %79) #13
  br i1 %call.i.i.i129, label %if.end.i.i.i133, label %__list_del_entry.exit.i130.cleanup_crit_edge

__list_del_entry.exit.i130.cleanup_crit_edge:     ; preds = %__list_del_entry.exit.i130
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i.i133:                                  ; preds = %__list_del_entry.exit.i130
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i2.i131 = getelementptr inbounds %struct.list_head, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %prev1.i.i2.i131 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %13, ptr %prev1.i.i2.i131, align 4
  %81 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %79, ptr %13, align 4
  %prev3.i.i.i132 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %82 = ptrtoint ptr %prev3.i.i.i132 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %arrayidx, ptr %prev3.i.i.i132, align 4
  %83 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %83)
  store volatile ptr %13, ptr %arrayidx, align 4
  br label %cleanup

if.end28:                                         ; preds = %TestClearPageLRU.exit
  %add29 = add i32 %retval.0.i, %nr_taken.0166
  %84 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %add.ptr, align 4
  %shr.i135 = lshr i32 %85, 30
  %arrayidx31 = getelementptr [4 x i32], ptr %nr_zone_taken, i32 0, i32 %shr.i135
  %86 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %arrayidx31, align 4
  %add32 = add i32 %87, %retval.0.i
  store i32 %add32, ptr %arrayidx31, align 4
  %call.i.i136 = call zeroext i1 @__list_del_entry_valid(ptr noundef %13) #13
  br i1 %call.i.i136, label %if.end.i.i139, label %if.end28.__list_del_entry.exit.i141_crit_edge

if.end28.__list_del_entry.exit.i141_crit_edge:    ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %__list_del_entry.exit.i141

if.end.i.i139:                                    ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i137 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %88 = ptrtoint ptr %prev.i.i137 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %prev.i.i137, align 4
  %90 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %13, align 4
  %prev1.i.i.i138 = getelementptr inbounds %struct.list_head, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %prev1.i.i.i138 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %89, ptr %prev1.i.i.i138, align 4
  %93 = ptrtoint ptr %89 to i32
  call void @__asan_store4_noabort(i32 %93)
  store volatile ptr %91, ptr %89, align 4
  br label %__list_del_entry.exit.i141

__list_del_entry.exit.i141:                       ; preds = %if.end.i.i139, %if.end28.__list_del_entry.exit.i141_crit_edge
  %94 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %dst, align 4
  %call.i.i.i140 = call zeroext i1 @__list_add_valid(ptr noundef %13, ptr noundef %dst, ptr noundef %95) #13
  br i1 %call.i.i.i140, label %if.end.i.i.i144, label %__list_del_entry.exit.i141.cleanup_crit_edge

__list_del_entry.exit.i141.cleanup_crit_edge:     ; preds = %__list_del_entry.exit.i141
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i.i144:                                  ; preds = %__list_del_entry.exit.i141
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i2.i142 = getelementptr inbounds %struct.list_head, ptr %95, i32 0, i32 1
  %96 = ptrtoint ptr %prev1.i.i2.i142 to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr %13, ptr %prev1.i.i2.i142, align 4
  %97 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr %95, ptr %13, align 4
  %prev3.i.i.i143 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %98 = ptrtoint ptr %prev3.i.i.i143 to i32
  call void @__asan_store4_noabort(i32 %98)
  store ptr %dst, ptr %prev3.i.i.i143, align 4
  %99 = ptrtoint ptr %dst to i32
  call void @__asan_store4_noabort(i32 %99)
  store volatile ptr %13, ptr %dst, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i.i144, %__list_del_entry.exit.i141.cleanup_crit_edge, %if.end.i.i.i133, %__list_del_entry.exit.i130.cleanup_crit_edge, %if.then21, %if.end.i.i.i114, %__list_del_entry.exit.i111.cleanup_crit_edge, %list_move.exit
  %scan.1 = phi i32 [ %scan.0164, %list_move.exit ], [ %add11, %if.then21 ], [ %add11, %__list_del_entry.exit.i111.cleanup_crit_edge ], [ %add11, %if.end.i.i.i114 ], [ %add11, %__list_del_entry.exit.i130.cleanup_crit_edge ], [ %add11, %if.end.i.i.i133 ], [ %add11, %__list_del_entry.exit.i141.cleanup_crit_edge ], [ %add11, %if.end.i.i.i144 ]
  %nr_taken.1 = phi i32 [ %nr_taken.0166, %list_move.exit ], [ %nr_taken.0166, %if.then21 ], [ %nr_taken.0166, %__list_del_entry.exit.i111.cleanup_crit_edge ], [ %nr_taken.0166, %if.end.i.i.i114 ], [ %nr_taken.0166, %__list_del_entry.exit.i130.cleanup_crit_edge ], [ %nr_taken.0166, %if.end.i.i.i133 ], [ %add29, %__list_del_entry.exit.i141.cleanup_crit_edge ], [ %add29, %if.end.i.i.i144 ]
  %cmp = icmp ult i32 %scan.1, %nr_to_scan
  br i1 %cmp, label %cleanup.land.rhs_crit_edge, label %cleanup.while.end_crit_edge

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

cleanup.land.rhs_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.rhs

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %land.rhs.while.end_crit_edge, %entry.while.end_crit_edge
  %total_scan.0.lcssa = phi i32 [ 0, %entry.while.end_crit_edge ], [ %add, %cleanup.while.end_crit_edge ], [ %total_scan.0165, %land.rhs.while.end_crit_edge ]
  %nr_taken.0.lcssa = phi i32 [ 0, %entry.while.end_crit_edge ], [ %nr_taken.1, %cleanup.while.end_crit_edge ], [ %nr_taken.0166, %land.rhs.while.end_crit_edge ]
  %100 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile ptr, ptr %pages_skipped, align 4
  %cmp.i146.not = icmp eq ptr %101, %pages_skipped
  br i1 %cmp.i146.not, label %while.end.if.end47_crit_edge, label %if.then36

while.end.if.end47_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end47

if.then36:                                        ; preds = %while.end
  %102 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load volatile ptr, ptr %pages_skipped, align 4
  %cmp.i.not.i148 = icmp eq ptr %103, %pages_skipped
  br i1 %cmp.i.not.i148, label %if.then36.list_splice.exit_crit_edge, label %if.then.i149

if.then36.list_splice.exit_crit_edge:             ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_splice.exit

if.then.i149:                                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #15
  %104 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %arrayidx, align 4
  %106 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %2, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %103, i32 0, i32 1
  %108 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr %arrayidx, ptr %prev3.i.i, align 4
  store ptr %103, ptr %arrayidx, align 4
  %109 = ptrtoint ptr %107 to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr %105, ptr %107, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %105, i32 0, i32 1
  %110 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr %107, ptr %prev6.i.i, align 4
  br label %list_splice.exit

list_splice.exit:                                 ; preds = %if.then.i149, %if.then36.list_splice.exit_crit_edge
  %111 = ptrtoint ptr %nr_skipped to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %nr_skipped, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %112)
  %tobool40.not = icmp eq i32 %112, 0
  br i1 %tobool40.not, label %list_splice.exit.for.inc_crit_edge, label %if.end42

list_splice.exit.for.inc_crit_edge:               ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end42:                                         ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #15
  %113 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i151 = and i32 %113, -16384
  %114 = inttoptr i32 %and.i.i151 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %114, i32 0, i32 3
  %115 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %cpu.i, align 4
  %arrayidx7.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %116
  %117 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx7.i, align 4
  %add.i = add i32 %118, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 12) to i32)
  %119 = inttoptr i32 %add.i to ptr
  %120 = ptrtoint ptr %119 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %119, align 4
  %add8.i = add i32 %121, %112
  store i32 %add8.i, ptr %119, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end42, %list_splice.exit.for.inc_crit_edge
  %arrayidx39.1 = getelementptr inbounds [4 x i32], ptr %nr_skipped, i32 0, i32 1
  %122 = ptrtoint ptr %arrayidx39.1 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %arrayidx39.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %123)
  %tobool40.not.1 = icmp eq i32 %123, 0
  br i1 %tobool40.not.1, label %for.inc.for.inc.1_crit_edge, label %if.end42.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.1

if.end42.1:                                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  %124 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i151.1 = and i32 %124, -16384
  %125 = inttoptr i32 %and.i.i151.1 to ptr
  %cpu.i.1 = getelementptr inbounds %struct.thread_info, ptr %125, i32 0, i32 3
  %126 = ptrtoint ptr %cpu.i.1 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %cpu.i.1, align 4
  %arrayidx7.i.1 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %127
  %128 = ptrtoint ptr %arrayidx7.i.1 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %arrayidx7.i.1, align 4
  %add.i.1 = add i32 %129, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 13) to i32)
  %130 = inttoptr i32 %add.i.1 to ptr
  %131 = ptrtoint ptr %130 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %130, align 4
  %add8.i.1 = add i32 %132, %123
  store i32 %add8.i.1, ptr %130, align 4
  %add46.1 = add i32 %123, %112
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.end42.1, %for.inc.for.inc.1_crit_edge
  %skipped.1.1 = phi i32 [ %add46.1, %if.end42.1 ], [ %112, %for.inc.for.inc.1_crit_edge ]
  %arrayidx39.2 = getelementptr inbounds [4 x i32], ptr %nr_skipped, i32 0, i32 2
  %133 = ptrtoint ptr %arrayidx39.2 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %arrayidx39.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %134)
  %tobool40.not.2 = icmp eq i32 %134, 0
  br i1 %tobool40.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.end42.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.2

if.end42.2:                                       ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #15
  %135 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i151.2 = and i32 %135, -16384
  %136 = inttoptr i32 %and.i.i151.2 to ptr
  %cpu.i.2 = getelementptr inbounds %struct.thread_info, ptr %136, i32 0, i32 3
  %137 = ptrtoint ptr %cpu.i.2 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %cpu.i.2, align 4
  %arrayidx7.i.2 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %138
  %139 = ptrtoint ptr %arrayidx7.i.2 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %arrayidx7.i.2, align 4
  %add.i.2 = add i32 %140, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 14) to i32)
  %141 = inttoptr i32 %add.i.2 to ptr
  %142 = ptrtoint ptr %141 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %141, align 4
  %add8.i.2 = add i32 %143, %134
  store i32 %add8.i.2, ptr %141, align 4
  %add46.2 = add i32 %134, %skipped.1.1
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.end42.2, %for.inc.1.for.inc.2_crit_edge
  %skipped.1.2 = phi i32 [ %add46.2, %if.end42.2 ], [ %skipped.1.1, %for.inc.1.for.inc.2_crit_edge ]
  %arrayidx39.3 = getelementptr inbounds [4 x i32], ptr %nr_skipped, i32 0, i32 3
  %144 = ptrtoint ptr %arrayidx39.3 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %arrayidx39.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %145)
  %tobool40.not.3 = icmp eq i32 %145, 0
  br i1 %tobool40.not.3, label %for.inc.2.if.end47_crit_edge, label %if.end42.3

for.inc.2.if.end47_crit_edge:                     ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end47

if.end42.3:                                       ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #15
  %146 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i151.3 = and i32 %146, -16384
  %147 = inttoptr i32 %and.i.i151.3 to ptr
  %cpu.i.3 = getelementptr inbounds %struct.thread_info, ptr %147, i32 0, i32 3
  %148 = ptrtoint ptr %cpu.i.3 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %cpu.i.3, align 4
  %arrayidx7.i.3 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %149
  %150 = ptrtoint ptr %arrayidx7.i.3 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %arrayidx7.i.3, align 4
  %add.i.3 = add i32 %151, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 15) to i32)
  %152 = inttoptr i32 %add.i.3 to ptr
  %153 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %152, align 4
  %add8.i.3 = add i32 %154, %145
  store i32 %add8.i.3, ptr %152, align 4
  %add46.3 = add i32 %145, %skipped.1.2
  br label %if.end47

if.end47:                                         ; preds = %if.end42.3, %for.inc.2.if.end47_crit_edge, %while.end.if.end47_crit_edge
  %skipped.2 = phi i32 [ 0, %while.end.if.end47_crit_edge ], [ %add46.3, %if.end42.3 ], [ %skipped.1.2, %for.inc.2.if.end47_crit_edge ]
  %155 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_store4_noabort(i32 %155)
  store i32 %total_scan.0.lcssa, ptr %nr_scanned, align 4
  %reclaim_idx48 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %156 = ptrtoint ptr %reclaim_idx48 to i32
  call void @__asan_load1_noabort(i32 %156)
  %157 = load i8, ptr %reclaim_idx48, align 4
  %conv49 = sext i8 %157 to i32
  %order = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 6
  %158 = ptrtoint ptr %order to i32
  call void @__asan_load1_noabort(i32 %158)
  %159 = load i8, ptr %order, align 2
  %conv50 = sext i8 %159 to i32
  call fastcc void @trace_mm_vmscan_lru_isolate(i32 noundef %conv49, i32 noundef %conv50, i32 noundef %nr_to_scan, i32 noundef %total_scan.0.lcssa, i32 noundef %skipped.2, i32 noundef %nr_taken.0.lcssa, i32 noundef %9, i32 noundef %lru)
  %pgdat.i.i.i = getelementptr inbounds %struct.lruvec, ptr %lruvec, i32 0, i32 7
  %add1.i.i = add i32 %lru, 1
  %160 = ptrtoint ptr %nr_zone_taken to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %nr_zone_taken, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %161)
  %tobool.not.i = icmp eq i32 %161, 0
  br i1 %tobool.not.i, label %if.end47.for.inc.i_crit_edge, label %if.end.i

if.end47.for.inc.i_crit_edge:                     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end.i:                                         ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i = sub i32 0, %161
  %162 = ptrtoint ptr %pgdat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %pgdat.i.i.i, align 4
  call void @__mod_lruvec_state(ptr noundef %lruvec, i32 noundef %lru, i32 noundef %sub.i) #13
  call void @__mod_zone_page_state(ptr noundef %163, i32 noundef %add1.i.i, i32 noundef %sub.i) #13
  call void @mem_cgroup_update_lru_size(ptr noundef %lruvec, i32 noundef %lru, i32 noundef 0, i32 noundef %sub.i) #13
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i, %if.end47.for.inc.i_crit_edge
  %arrayidx.1.i = getelementptr inbounds i32, ptr %nr_zone_taken, i32 1
  %164 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %arrayidx.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %165)
  %tobool.not.1.i = icmp eq i32 %165, 0
  br i1 %tobool.not.1.i, label %for.inc.i.for.inc.1.i_crit_edge, label %if.end.1.i

for.inc.i.for.inc.1.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.1.i

if.end.1.i:                                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.1.i = sub i32 0, %165
  %166 = ptrtoint ptr %pgdat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %pgdat.i.i.i, align 4
  call void @__mod_lruvec_state(ptr noundef %lruvec, i32 noundef %lru, i32 noundef %sub.1.i) #13
  %arrayidx.i.1.i = getelementptr [4 x %struct.zone], ptr %167, i32 0, i32 1
  call void @__mod_zone_page_state(ptr noundef %arrayidx.i.1.i, i32 noundef %add1.i.i, i32 noundef %sub.1.i) #13
  call void @mem_cgroup_update_lru_size(ptr noundef %lruvec, i32 noundef %lru, i32 noundef 1, i32 noundef %sub.1.i) #13
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %if.end.1.i, %for.inc.i.for.inc.1.i_crit_edge
  %arrayidx.2.i = getelementptr inbounds i32, ptr %nr_zone_taken, i32 2
  %168 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %arrayidx.2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %169)
  %tobool.not.2.i = icmp eq i32 %169, 0
  br i1 %tobool.not.2.i, label %for.inc.1.i.for.inc.2.i_crit_edge, label %if.end.2.i

for.inc.1.i.for.inc.2.i_crit_edge:                ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.2.i

if.end.2.i:                                       ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.2.i = sub i32 0, %169
  %170 = ptrtoint ptr %pgdat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %pgdat.i.i.i, align 4
  call void @__mod_lruvec_state(ptr noundef %lruvec, i32 noundef %lru, i32 noundef %sub.2.i) #13
  %arrayidx.i.2.i = getelementptr [4 x %struct.zone], ptr %171, i32 0, i32 2
  call void @__mod_zone_page_state(ptr noundef %arrayidx.i.2.i, i32 noundef %add1.i.i, i32 noundef %sub.2.i) #13
  call void @mem_cgroup_update_lru_size(ptr noundef %lruvec, i32 noundef %lru, i32 noundef 2, i32 noundef %sub.2.i) #13
  br label %for.inc.2.i

for.inc.2.i:                                      ; preds = %if.end.2.i, %for.inc.1.i.for.inc.2.i_crit_edge
  %arrayidx.3.i = getelementptr inbounds i32, ptr %nr_zone_taken, i32 3
  %172 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %arrayidx.3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %173)
  %tobool.not.3.i = icmp eq i32 %173, 0
  br i1 %tobool.not.3.i, label %for.inc.2.i.update_lru_sizes.exit_crit_edge, label %if.end.3.i

for.inc.2.i.update_lru_sizes.exit_crit_edge:      ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %update_lru_sizes.exit

if.end.3.i:                                       ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.3.i = sub i32 0, %173
  %174 = ptrtoint ptr %pgdat.i.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %pgdat.i.i.i, align 4
  call void @__mod_lruvec_state(ptr noundef %lruvec, i32 noundef %lru, i32 noundef %sub.3.i) #13
  %arrayidx.i.3.i = getelementptr [4 x %struct.zone], ptr %175, i32 0, i32 3
  call void @__mod_zone_page_state(ptr noundef %arrayidx.i.3.i, i32 noundef %add1.i.i, i32 noundef %sub.3.i) #13
  call void @mem_cgroup_update_lru_size(ptr noundef %lruvec, i32 noundef %lru, i32 noundef 3, i32 noundef %sub.3.i) #13
  br label %update_lru_sizes.exit

update_lru_sizes.exit:                            ; preds = %if.end.3.i, %for.inc.2.i.update_lru_sizes.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %pages_skipped) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %nr_skipped) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %nr_zone_taken) #13
  ret i32 %nr_taken.0.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mod_node_page_state(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @move_pages_to_lru(ptr noundef %lruvec, ptr noundef %list) unnamed_addr #0 align 64 {
entry:
  %pages_to_free = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %pages_to_free) #13
  %0 = getelementptr inbounds %struct.list_head, ptr %pages_to_free, i32 0, i32 1
  %1 = ptrtoint ptr %pages_to_free to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %pages_to_free, ptr %pages_to_free, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %pages_to_free, ptr %0, align 4
  %3 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %list, align 4
  %cmp.i.not314324 = icmp eq ptr %4, %list
  br i1 %cmp.i.not314324, label %entry.while.end_crit_edge, label %while.body.lr.ph.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body.lr.ph.lr.ph:                           ; preds = %entry
  %prev1 = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %lru_lock = getelementptr inbounds %struct.lruvec, ptr %lruvec, i32 0, i32 1
  %pgdat.i.i = getelementptr inbounds %struct.lruvec, ptr %lruvec, i32 0, i32 7
  %memcg.i.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec, i32 0, i32 9
  br label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.end73.while.body.lr.ph_crit_edge, %while.body.lr.ph.lr.ph
  %nr_moved.0.ph325 = phi i32 [ 0, %while.body.lr.ph.lr.ph ], [ %add, %if.end73.while.body.lr.ph_crit_edge ]
  br label %while.body

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %while.body.lr.ph
  %5 = ptrtoint ptr %prev1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev1, align 4
  %add.ptr = getelementptr i8, ptr %6, i32 -4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %6, align 4
  %and.i.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !557

if.then.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i = add i32 %8, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  %9 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %9, %if.end.i.i ]
  %10 = inttoptr i32 %retval.0.i.i to ptr
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %cmp.i.not.i = icmp eq i32 %12, -1
  %13 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %6, align 4
  %and.i13.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !558

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !557

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i = add i32 %14, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %15 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %15, %if.end.i17.i ]
  %16 = inttoptr i32 %retval.0.i18.i to ptr
  call void @dump_page(ptr noundef %16, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #13, !srcloc !619
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !557

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i = add i32 %14, -1
  br label %PageLRU.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #15
  %17 = ptrtoint ptr %add.ptr to i32
  br label %PageLRU.exit

PageLRU.exit:                                     ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %17, %if.end.i24.i ]
  %18 = inttoptr i32 %retval.0.i25.i to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %18, align 4
  %21 = and i32 %20, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool3.not = icmp eq i32 %21, 0
  br i1 %tobool3.not, label %do.end12, label %if.then, !prof !557

if.then:                                          ; preds = %PageLRU.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.178) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2319, 0\0A.popsection", ""() #13, !srcloc !664
  unreachable

do.end12:                                         ; preds = %PageLRU.exit
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %6) #13
  br i1 %call.i.i, label %if.end.i.i148, label %do.end12.list_del.exit_crit_edge

do.end12.list_del.exit_crit_edge:                 ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_del.exit

if.end.i.i148:                                    ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #15
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %prev.i.i, align 4
  %24 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %6, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %23, ptr %prev1.i.i.i, align 4
  %27 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %25, ptr %23, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i148, %do.end12.list_del.exit_crit_edge
  %28 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr inttoptr (i32 256 to ptr), ptr %6, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %29 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %call13 = call fastcc zeroext i1 @page_evictable(ptr noundef %add.ptr)
  br i1 %call13, label %if.end24, label %if.then22, !prof !557

if.then22:                                        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @_raw_spin_unlock_irq(ptr noundef %lru_lock) #13
  call void @putback_lru_page(ptr noundef %add.ptr)
  call void @_raw_spin_lock_irq(ptr noundef %lru_lock) #13
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end.i.i154, %if.else.while.cond.backedge_crit_edge, %if.then42, %if.then22
  %30 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %list, align 4
  %cmp.i.not = icmp eq ptr %31, %list
  br i1 %cmp.i.not, label %while.cond.backedge.while.end_crit_edge, label %while.cond.backedge.while.body_crit_edge

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

while.cond.backedge.while.end_crit_edge:          ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

if.end24:                                         ; preds = %list_del.exit
  %32 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %6, align 4
  %and.i.i99 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i99)
  %tobool.not.i.i100 = icmp eq i32 %and.i.i99, 0
  br i1 %tobool.not.i.i100, label %if.end.i.i103, label %if.then.i.i102, !prof !557

if.then.i.i102:                                   ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i101 = add i32 %33, -1
  br label %_compound_head.exit.i106

if.end.i.i103:                                    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  %34 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i106

_compound_head.exit.i106:                         ; preds = %if.end.i.i103, %if.then.i.i102
  %retval.0.i.i104 = phi i32 [ %sub.i.i101, %if.then.i.i102 ], [ %34, %if.end.i.i103 ]
  %35 = inttoptr i32 %retval.0.i.i104 to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %37)
  %cmp.i.not.i105 = icmp eq i32 %37, -1
  %38 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %6, align 4
  %and.i12.i = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i12.i)
  %tobool.not.i13.i = icmp eq i32 %and.i12.i, 0
  br i1 %cmp.i.not.i105, label %if.then.i107, label %do.end8.i108, !prof !558

if.then.i107:                                     ; preds = %_compound_head.exit.i106
  br i1 %tobool.not.i13.i, label %if.end.i16.i, label %if.then.i15.i, !prof !557

if.then.i15.i:                                    ; preds = %if.then.i107
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i14.i = add i32 %39, -1
  br label %_compound_head.exit18.i

if.end.i16.i:                                     ; preds = %if.then.i107
  call void @__sanitizer_cov_trace_pc() #15
  %40 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit18.i

_compound_head.exit18.i:                          ; preds = %if.end.i16.i, %if.then.i15.i
  %retval.0.i17.i = phi i32 [ %sub.i14.i, %if.then.i15.i ], [ %40, %if.end.i16.i ]
  %41 = inttoptr i32 %retval.0.i17.i to ptr
  call void @dump_page(ptr noundef %41, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 422, 0\0A.popsection", ""() #13, !srcloc !642
  unreachable

do.end8.i108:                                     ; preds = %_compound_head.exit.i106
  br i1 %tobool.not.i13.i, label %if.end.i23.i, label %if.then.i22.i, !prof !557

if.then.i22.i:                                    ; preds = %do.end8.i108
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i21.i = add i32 %39, -1
  br label %SetPageLRU.exit

if.end.i23.i:                                     ; preds = %do.end8.i108
  call void @__sanitizer_cov_trace_pc() #15
  %42 = ptrtoint ptr %add.ptr to i32
  br label %SetPageLRU.exit

SetPageLRU.exit:                                  ; preds = %if.end.i23.i, %if.then.i22.i
  %retval.0.i24.i = phi i32 [ %sub.i21.i, %if.then.i22.i ], [ %42, %if.end.i23.i ]
  %43 = inttoptr i32 %retval.0.i24.i to ptr
  call void @_set_bit(i32 noundef 4, ptr noundef %43) #13
  %_refcount.i.i = getelementptr i8, ptr %6, i32 24
  %call.i.i.i.i149 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i, i32 noundef 4) #13
  %44 = ptrtoint ptr %_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %_refcount.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp.i150 = icmp eq i32 %45, 0
  br i1 %cmp.i150, label %if.then.i151, label %do.end5.i, !prof !558

if.then.i151:                                     ; preds = %SetPageLRU.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.158) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #13, !srcloc !590
  unreachable

do.end5.i:                                        ; preds = %SetPageLRU.exit
  %call.i.i.i10.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i, i32 noundef 4) #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !591
  call void @llvm.prefetch.p0(ptr %_refcount.i.i, i32 1, i32 3, i32 1) #13
  %46 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i, ptr %_refcount.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i) #13, !srcloc !592
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %46, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !593
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@move_pages_to_lru, %if.then.i.i152)) #13
          to label %put_page_testzero.exit [label %if.then.i.i152], !srcloc !567

if.then.i.i152:                                   ; preds = %do.end5.i
  call void @__sanitizer_cov_trace_pc() #15
  %conv.i.i = zext i1 %cmp.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %add.ptr, i32 noundef -1, i32 noundef %conv.i.i) #13
  br label %put_page_testzero.exit

put_page_testzero.exit:                           ; preds = %if.then.i.i152, %do.end5.i
  %47 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %6, align 4
  %and.i.i109 = and i32 %48, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i109)
  %tobool.not.i.i110 = icmp eq i32 %and.i.i109, 0
  br i1 %cmp.i.i.i.i, label %if.then33, label %do.body48, !prof !558

if.then33:                                        ; preds = %put_page_testzero.exit
  br i1 %tobool.not.i.i110, label %if.end.i.i112, label %if.then.i1.i, !prof !557

if.then.i1.i:                                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i111 = add i32 %48, -1
  br label %_compound_head.exit.i114

if.end.i.i112:                                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #15
  %49 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i114

_compound_head.exit.i114:                         ; preds = %if.end.i.i112, %if.then.i1.i
  %retval.0.i.i113 = phi i32 [ %sub.i.i111, %if.then.i1.i ], [ %49, %if.end.i.i112 ]
  %50 = inttoptr i32 %retval.0.i.i113 to ptr
  %51 = getelementptr inbounds %struct.page, ptr %50, i32 0, i32 1
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  %and.i.i.i.i.i = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_test_lru.exit.i.i, label %if.then.i.i.i.i, !prof !557

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i114
  call void @__sanitizer_cov_trace_pc() #15
  %54 = inttoptr i32 %retval.0.i.i113 to ptr
  call void @dump_page(ptr noundef %54, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_lru.exit.i.i:                          ; preds = %_compound_head.exit.i114
  %55 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %50, align 4
  %57 = and i32 %56, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool.i.not.i.i = icmp eq i32 %57, 0
  br i1 %tobool.i.not.i.i, label %if.then.i.i115, label %do.end6.i.i, !prof !558

if.then.i.i115:                                   ; preds = %folio_test_lru.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %58 = inttoptr i32 %retval.0.i.i113 to ptr
  call void @dump_page(ptr noundef %58, ptr noundef nonnull @.str.180) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm_inline.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 55, 0\0A.popsection", ""() #13, !srcloc !665
  unreachable

do.end6.i.i:                                      ; preds = %folio_test_lru.exit.i.i
  %59 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %51, align 4
  %and.i.i.i17.i.i = and i32 %60, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i17.i.i)
  %tobool.not.i.i18.i.i = icmp eq i32 %and.i.i.i17.i.i, 0
  br i1 %tobool.not.i.i18.i.i, label %__folio_clear_lru.exit.i.i, label %if.then.i.i19.i.i, !prof !557

if.then.i.i19.i.i:                                ; preds = %do.end6.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %61 = inttoptr i32 %retval.0.i.i113 to ptr
  call void @dump_page(ptr noundef %61, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

__folio_clear_lru.exit.i.i:                       ; preds = %do.end6.i.i
  %and.i.i.i.i = and i32 %56, -17
  %62 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %and.i.i.i.i, ptr %50, align 4
  %63 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %51, align 4
  %and.i.i.i20.i.i = and i32 %64, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i20.i.i)
  %tobool.not.i.i21.i.i = icmp eq i32 %and.i.i.i20.i.i, 0
  br i1 %tobool.not.i.i21.i.i, label %folio_test_active.exit.i.i, label %if.then.i.i22.i.i, !prof !557

if.then.i.i22.i.i:                                ; preds = %__folio_clear_lru.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %65 = inttoptr i32 %retval.0.i.i113 to ptr
  call void @dump_page(ptr noundef %65, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_active.exit.i.i:                       ; preds = %__folio_clear_lru.exit.i.i
  %66 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %50, align 4
  %68 = and i32 %67, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool.i23.not.i.i = icmp eq i32 %68, 0
  br i1 %tobool.i23.not.i.i, label %folio_test_active.exit.i.i.if.end10.i.i_crit_edge, label %land.lhs.true.i.i

folio_test_active.exit.i.i.if.end10.i.i_crit_edge: ; preds = %folio_test_active.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10.i.i

land.lhs.true.i.i:                                ; preds = %folio_test_active.exit.i.i
  %69 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %51, align 4
  %and.i.i.i24.i.i = and i32 %70, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i24.i.i)
  %tobool.not.i.i25.i.i = icmp eq i32 %and.i.i.i24.i.i, 0
  br i1 %tobool.not.i.i25.i.i, label %folio_test_unevictable.exit.i.i, label %if.then.i.i26.i.i, !prof !557

if.then.i.i26.i.i:                                ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %71 = inttoptr i32 %retval.0.i.i113 to ptr
  call void @dump_page(ptr noundef %71, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_unevictable.exit.i.i:                  ; preds = %land.lhs.true.i.i
  %72 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %50, align 4
  %74 = and i32 %73, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool.i27.not.i.i = icmp eq i32 %74, 0
  br i1 %tobool.i27.not.i.i, label %folio_test_unevictable.exit.i.i.if.end10.i.i_crit_edge, label %folio_test_unevictable.exit.i.i.__clear_page_lru_flags.exit_crit_edge

folio_test_unevictable.exit.i.i.__clear_page_lru_flags.exit_crit_edge: ; preds = %folio_test_unevictable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %__clear_page_lru_flags.exit

folio_test_unevictable.exit.i.i.if.end10.i.i_crit_edge: ; preds = %folio_test_unevictable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %folio_test_unevictable.exit.i.i.if.end10.i.i_crit_edge, %folio_test_active.exit.i.i.if.end10.i.i_crit_edge
  %75 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %51, align 4
  %and.i.i.i28.i.i = and i32 %76, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i28.i.i)
  %tobool.not.i.i29.i.i = icmp eq i32 %and.i.i.i28.i.i, 0
  br i1 %tobool.not.i.i29.i.i, label %__folio_clear_active.exit.i.i, label %if.then.i.i30.i.i, !prof !557

if.then.i.i30.i.i:                                ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %77 = inttoptr i32 %retval.0.i.i113 to ptr
  call void @dump_page(ptr noundef %77, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

__folio_clear_active.exit.i.i:                    ; preds = %if.end10.i.i
  %and.i.i31.i.i = and i32 %67, -33
  %78 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %and.i.i31.i.i, ptr %50, align 4
  %79 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %51, align 4
  %and.i.i.i32.i.i = and i32 %80, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i32.i.i)
  %tobool.not.i.i33.i.i = icmp eq i32 %and.i.i.i32.i.i, 0
  br i1 %tobool.not.i.i33.i.i, label %__folio_clear_unevictable.exit.i.i, label %if.then.i.i34.i.i, !prof !557

if.then.i.i34.i.i:                                ; preds = %__folio_clear_active.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %81 = inttoptr i32 %retval.0.i.i113 to ptr
  call void @dump_page(ptr noundef %81, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

__folio_clear_unevictable.exit.i.i:               ; preds = %__folio_clear_active.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %and.i.i35.i.i = and i32 %67, -1048609
  %82 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %and.i.i35.i.i, ptr %50, align 4
  br label %__clear_page_lru_flags.exit

__clear_page_lru_flags.exit:                      ; preds = %__folio_clear_unevictable.exit.i.i, %folio_test_unevictable.exit.i.i.__clear_page_lru_flags.exit_crit_edge
  %83 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %add.ptr, align 4
  %85 = and i32 %84, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool.not.i = icmp eq i32 %85, 0
  br i1 %tobool.not.i, label %PageCompound.exit, label %__clear_page_lru_flags.exit.if.then42_crit_edge

__clear_page_lru_flags.exit.if.then42_crit_edge:  ; preds = %__clear_page_lru_flags.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then42

PageCompound.exit:                                ; preds = %__clear_page_lru_flags.exit
  %86 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %6, align 4
  %and.i.i116 = and i32 %87, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i116)
  %tobool35.not = icmp eq i32 %and.i.i116, 0
  br i1 %tobool35.not, label %if.else, label %PageCompound.exit.if.then42_crit_edge, !prof !557

PageCompound.exit.if.then42_crit_edge:            ; preds = %PageCompound.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then42

if.then42:                                        ; preds = %PageCompound.exit.if.then42_crit_edge, %__clear_page_lru_flags.exit.if.then42_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lru_lock) #13
  call fastcc void @destroy_compound_page(ptr noundef %add.ptr)
  call void @_raw_spin_lock_irq(ptr noundef %lru_lock) #13
  br label %while.cond.backedge

if.else:                                          ; preds = %PageCompound.exit
  %88 = ptrtoint ptr %pages_to_free to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %pages_to_free, align 4
  %call.i.i153 = call zeroext i1 @__list_add_valid(ptr noundef %6, ptr noundef nonnull %pages_to_free, ptr noundef %89) #13
  br i1 %call.i.i153, label %if.end.i.i154, label %if.else.while.cond.backedge_crit_edge

if.else.while.cond.backedge_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.cond.backedge

if.end.i.i154:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %89, i32 0, i32 1
  %90 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %6, ptr %prev1.i.i, align 4
  %91 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %89, ptr %6, align 4
  %92 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %pages_to_free, ptr %prev.i, align 4
  %93 = ptrtoint ptr %pages_to_free to i32
  call void @__asan_store4_noabort(i32 %93)
  store volatile ptr %6, ptr %pages_to_free, align 4
  br label %while.cond.backedge

do.body48:                                        ; preds = %put_page_testzero.exit
  br i1 %tobool.not.i.i110, label %if.end.i, label %if.then.i156, !prof !557

if.then.i156:                                     ; preds = %do.body48
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i = add i32 %48, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %do.body48
  call void @__sanitizer_cov_trace_pc() #15
  %94 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i156
  %retval.0.i = phi i32 [ %sub.i, %if.then.i156 ], [ %94, %if.end.i ]
  %95 = inttoptr i32 %retval.0.i to ptr
  %96 = ptrtoint ptr %pgdat.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %pgdat.i.i, align 4
  %98 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load volatile i32, ptr %95, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %99)
  %cmp.i.not.i.i.i.i = icmp eq i32 %99, -1
  br i1 %cmp.i.not.i.i.i.i, label %if.then.i.i.i.i157, label %folio_pgdat.exit.i, !prof !558

if.then.i.i.i.i157:                               ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #15
  %100 = inttoptr i32 %retval.0.i to ptr
  call void @dump_page(ptr noundef %100, ptr noundef nonnull @.str.176) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1368, 0\0A.popsection", ""() #13, !srcloc !578
  unreachable

folio_pgdat.exit.i:                               ; preds = %_compound_head.exit
  %cmp.i158 = icmp eq ptr %97, @contig_page_data
  br i1 %cmp.i158, label %land.rhs.i, label %folio_pgdat.exit.i.if.then59_crit_edge, !prof !666

folio_pgdat.exit.i.if.then59_crit_edge:           ; preds = %folio_pgdat.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then59

land.rhs.i:                                       ; preds = %folio_pgdat.exit.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@move_pages_to_lru, %folio_matches_lruvec.exit)) #13
          to label %if.end.i.i159 [label %folio_matches_lruvec.exit], !srcloc !567

if.end.i.i159:                                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  %101 = ptrtoint ptr %memcg.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %memcg.i.i, align 4
  br label %folio_matches_lruvec.exit

folio_matches_lruvec.exit:                        ; preds = %if.end.i.i159, %land.rhs.i
  %retval.0.i.i160 = phi ptr [ %102, %if.end.i.i159 ], [ null, %land.rhs.i ]
  %call3.i = call fastcc ptr @folio_memcg(ptr noundef %95) #13
  %cmp4.i = icmp eq ptr %retval.0.i.i160, %call3.i
  br i1 %cmp4.i, label %do.end68, label %folio_matches_lruvec.exit.if.then59_crit_edge, !prof !557

folio_matches_lruvec.exit.if.then59_crit_edge:    ; preds = %folio_matches_lruvec.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then59

if.then59:                                        ; preds = %folio_matches_lruvec.exit.if.then59_crit_edge, %folio_pgdat.exit.i.if.then59_crit_edge
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.179) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22mm/vmscan.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2358, 0\0A.popsection", ""() #13, !srcloc !667
  unreachable

do.end68:                                         ; preds = %folio_matches_lruvec.exit
  %103 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile i32, ptr %6, align 4
  %and.i.i117 = and i32 %104, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i117)
  %tobool.not.i.i118 = icmp eq i32 %and.i.i117, 0
  br i1 %tobool.not.i.i118, label %if.end.i.i121, label %if.then.i.i120, !prof !557

if.then.i.i120:                                   ; preds = %do.end68
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i119 = add i32 %104, -1
  br label %_compound_head.exit.i123

if.end.i.i121:                                    ; preds = %do.end68
  call void @__sanitizer_cov_trace_pc() #15
  %105 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i123

_compound_head.exit.i123:                         ; preds = %if.end.i.i121, %if.then.i.i120
  %retval.0.i.i122 = phi i32 [ %sub.i.i119, %if.then.i.i120 ], [ %105, %if.end.i.i121 ]
  %106 = inttoptr i32 %retval.0.i.i122 to ptr
  %107 = getelementptr inbounds %struct.page, ptr %106, i32 0, i32 1
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %107, align 4
  %and.i.i.i.i.i.i = and i32 %109, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_test_active.exit.i.i.i, label %if.then.i.i.i.i.i, !prof !557

if.then.i.i.i.i.i:                                ; preds = %_compound_head.exit.i123
  call void @__sanitizer_cov_trace_pc() #15
  %110 = inttoptr i32 %retval.0.i.i122 to ptr
  call void @dump_page(ptr noundef %110, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_active.exit.i.i.i:                     ; preds = %_compound_head.exit.i123
  %111 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %106, align 4
  %113 = and i32 %112, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %113)
  %tobool.i.not.i.i.i = icmp eq i32 %113, 0
  br i1 %tobool.i.not.i.i.i, label %folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge, label %land.rhs.i.i.i

folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge: ; preds = %folio_test_active.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end8.i.i.i

land.rhs.i.i.i:                                   ; preds = %folio_test_active.exit.i.i.i
  %114 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %107, align 4
  %and.i.i.i23.i.i.i = and i32 %115, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i23.i.i.i)
  %tobool.not.i.i24.i.i.i = icmp eq i32 %and.i.i.i23.i.i.i, 0
  br i1 %tobool.not.i.i24.i.i.i, label %folio_test_unevictable.exit.i.i.i, label %if.then.i.i25.i.i.i, !prof !557

if.then.i.i25.i.i.i:                              ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %116 = inttoptr i32 %retval.0.i.i122 to ptr
  call void @dump_page(ptr noundef %116, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_unevictable.exit.i.i.i:                ; preds = %land.rhs.i.i.i
  %117 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load volatile i32, ptr %106, align 4
  %119 = and i32 %118, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %119)
  %tobool.i26.not.i.i.i = icmp eq i32 %119, 0
  br i1 %tobool.i26.not.i.i.i, label %folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge, label %if.then.i.i.i, !prof !557

folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge: ; preds = %folio_test_unevictable.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end8.i.i.i

if.then.i.i.i:                                    ; preds = %folio_test_unevictable.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %120 = inttoptr i32 %retval.0.i.i122 to ptr
  call void @dump_page(ptr noundef %120, ptr noundef nonnull @.str.175) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm_inline.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 83, 0\0A.popsection", ""() #13, !srcloc !624
  unreachable

do.end8.i.i.i:                                    ; preds = %folio_test_unevictable.exit.i.i.i.do.end8.i.i.i_crit_edge, %folio_test_active.exit.i.i.i.do.end8.i.i.i_crit_edge
  %121 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile i32, ptr %107, align 4
  %and.i.i.i27.i.i.i = and i32 %122, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i27.i.i.i)
  %tobool.not.i.i28.i.i.i = icmp eq i32 %and.i.i.i27.i.i.i, 0
  br i1 %tobool.not.i.i28.i.i.i, label %folio_test_unevictable.exit31.i.i.i, label %if.then.i.i29.i.i.i, !prof !557

if.then.i.i29.i.i.i:                              ; preds = %do.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %123 = inttoptr i32 %retval.0.i.i122 to ptr
  call void @dump_page(ptr noundef %123, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_unevictable.exit31.i.i.i:              ; preds = %do.end8.i.i.i
  %124 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile i32, ptr %106, align 4
  %126 = and i32 %125, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %126)
  %tobool.i30.not.i.i.i = icmp eq i32 %126, 0
  br i1 %tobool.i30.not.i.i.i, label %if.end11.i.i.i, label %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge

folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge: ; preds = %folio_test_unevictable.exit31.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %folio_lru_list.exit.i.i

if.end11.i.i.i:                                   ; preds = %folio_test_unevictable.exit31.i.i.i
  %127 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile i32, ptr %107, align 4
  %and.i.i.i.i.i.i.i = and i32 %128, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %folio_is_file_lru.exit.i.i.i, label %if.then.i.i.i.i.i.i, !prof !557

if.then.i.i.i.i.i.i:                              ; preds = %if.end11.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %129 = inttoptr i32 %retval.0.i.i122 to ptr
  call void @dump_page(ptr noundef %129, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_is_file_lru.exit.i.i.i:                     ; preds = %if.end11.i.i.i
  %130 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %106, align 4
  %132 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load volatile i32, ptr %107, align 4
  %and.i.i.i32.i.i.i = and i32 %133, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i32.i.i.i)
  %tobool.not.i.i33.i.i.i = icmp eq i32 %and.i.i.i32.i.i.i, 0
  br i1 %tobool.not.i.i33.i.i.i, label %folio_test_active.exit36.i.i.i, label %if.then.i.i34.i.i.i, !prof !557

if.then.i.i34.i.i.i:                              ; preds = %folio_is_file_lru.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %134 = inttoptr i32 %retval.0.i.i122 to ptr
  call void @dump_page(ptr noundef %134, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #13, !srcloc !560
  unreachable

folio_test_active.exit36.i.i.i:                   ; preds = %folio_is_file_lru.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %135 = lshr i32 %131, 18
  %136 = and i32 %135, 2
  %137 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %106, align 4
  %139 = lshr i32 %138, 5
  %140 = and i32 %139, 1
  %141 = or i32 %140, %136
  %142 = xor i32 %141, 2
  br label %folio_lru_list.exit.i.i

folio_lru_list.exit.i.i:                          ; preds = %folio_test_active.exit36.i.i.i, %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %142, %folio_test_active.exit36.i.i.i ], [ 4, %folio_test_unevictable.exit31.i.i.i.folio_lru_list.exit.i.i_crit_edge ]
  %shr.i.i.i.i = lshr i32 %125, 30
  %143 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load volatile i32, ptr %106, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %144)
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %144, -1
  br i1 %cmp.i.not.i.i.i.i.i, label %if.then.i.i.i9.i.i, label %PageHead.exit.i.i.i.i, !prof !558

if.then.i.i.i9.i.i:                               ; preds = %folio_lru_list.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %145 = inttoptr i32 %retval.0.i.i122 to ptr
  call void @dump_page(ptr noundef %145, ptr noundef nonnull @.str.153) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 698, 0\0A.popsection", ""() #13, !srcloc !579
  unreachable

PageHead.exit.i.i.i.i:                            ; preds = %folio_lru_list.exit.i.i
  %146 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load volatile i32, ptr %106, align 4
  %148 = and i32 %147, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %148)
  %tobool.not.i.i.i.i124 = icmp eq i32 %148, 0
  br i1 %tobool.not.i.i.i.i124, label %PageHead.exit.i.i.i.i.folio_nr_pages.exit.i.i_crit_edge, label %if.end.i.i.i.i

PageHead.exit.i.i.i.i.folio_nr_pages.exit.i.i_crit_edge: ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %folio_nr_pages.exit.i.i

if.end.i.i.i.i:                                   ; preds = %PageHead.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %compound_nr.i.i.i.i = getelementptr %struct.page, ptr %106, i32 1, i32 1, i32 0, i32 2
  %149 = ptrtoint ptr %compound_nr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %compound_nr.i.i.i.i, align 4
  br label %folio_nr_pages.exit.i.i

folio_nr_pages.exit.i.i:                          ; preds = %if.end.i.i.i.i, %PageHead.exit.i.i.i.i.folio_nr_pages.exit.i.i_crit_edge
  %retval.0.i.i.i.i = phi i32 [ %150, %if.end.i.i.i.i ], [ 1, %PageHead.exit.i.i.i.i.folio_nr_pages.exit.i.i_crit_edge ]
  %151 = ptrtoint ptr %pgdat.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %pgdat.i.i, align 4
  call void @__mod_lruvec_state(ptr noundef %lruvec, i32 noundef %retval.0.i.i.i, i32 noundef %retval.0.i.i.i.i) #13
  %arrayidx.i.i.i = getelementptr [4 x %struct.zone], ptr %152, i32 0, i32 %shr.i.i.i.i
  %add1.i.i.i = add nsw i32 %retval.0.i.i.i, 1
  call void @__mod_zone_page_state(ptr noundef %arrayidx.i.i.i, i32 noundef %add1.i.i.i, i32 noundef %retval.0.i.i.i.i) #13
  call void @mem_cgroup_update_lru_size(ptr noundef %lruvec, i32 noundef %retval.0.i.i.i, i32 noundef %shr.i.i.i.i, i32 noundef %retval.0.i.i.i.i) #13
  %arrayidx.i.i = getelementptr [5 x %struct.list_head], ptr %lruvec, i32 0, i32 %retval.0.i.i.i
  %153 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %arrayidx.i.i, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %107, ptr noundef %arrayidx.i.i, ptr noundef %154) #13
  br i1 %call.i.i.i.i, label %if.end.i.i10.i.i, label %folio_nr_pages.exit.i.i.add_page_to_lru_list.exit_crit_edge

folio_nr_pages.exit.i.i.add_page_to_lru_list.exit_crit_edge: ; preds = %folio_nr_pages.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %add_page_to_lru_list.exit

if.end.i.i10.i.i:                                 ; preds = %folio_nr_pages.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %154, i32 0, i32 1
  %155 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr %107, ptr %prev1.i.i.i.i, align 4
  %156 = ptrtoint ptr %107 to i32
  call void @__asan_store4_noabort(i32 %156)
  store ptr %154, ptr %107, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.anon.67, ptr %106, i32 0, i32 1, i32 1
  %157 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store ptr %arrayidx.i.i, ptr %prev3.i.i.i.i, align 4
  %158 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %158)
  store volatile ptr %107, ptr %arrayidx.i.i, align 4
  br label %add_page_to_lru_list.exit

add_page_to_lru_list.exit:                        ; preds = %if.end.i.i10.i.i, %folio_nr_pages.exit.i.i.add_page_to_lru_list.exit_crit_edge
  %159 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load volatile i32, ptr %6, align 4
  %and.i.i161 = and i32 %160, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i161)
  %tobool.not.i162 = icmp eq i32 %and.i.i161, 0
  br i1 %tobool.not.i162, label %thp_nr_pages.exit, label %if.then.i163, !prof !557

if.then.i163:                                     ; preds = %add_page_to_lru_list.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @dump_page(ptr noundef %add.ptr, ptr noundef nonnull @.str.155) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/huge_mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 347, 0\0A.popsection", ""() #13, !srcloc !609
  unreachable

thp_nr_pages.exit:                                ; preds = %add_page_to_lru_list.exit
  %add = add i32 %nr_moved.0.ph325, 1
  %161 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load volatile i32, ptr %6, align 4
  %and.i.i125 = and i32 %162, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i125)
  %tobool.not.i.i126 = icmp eq i32 %and.i.i125, 0
  br i1 %tobool.not.i.i126, label %if.end.i.i129, label %if.then.i.i128, !prof !557

if.then.i.i128:                                   ; preds = %thp_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i.i127 = add i32 %162, -1
  br label %_compound_head.exit.i134

if.end.i.i129:                                    ; preds = %thp_nr_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  %163 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit.i134

_compound_head.exit.i134:                         ; preds = %if.end.i.i129, %if.then.i.i128
  %retval.0.i.i130 = phi i32 [ %sub.i.i127, %if.then.i.i128 ], [ %163, %if.end.i.i129 ]
  %164 = inttoptr i32 %retval.0.i.i130 to ptr
  %165 = ptrtoint ptr %164 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load volatile i32, ptr %164, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %166)
  %cmp.i.not.i131 = icmp eq i32 %166, -1
  %167 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load volatile i32, ptr %6, align 4
  %and.i13.i132 = and i32 %168, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i132)
  %tobool.not.i14.i133 = icmp eq i32 %and.i13.i132, 0
  br i1 %cmp.i.not.i131, label %if.then.i135, label %do.end8.i141, !prof !558

if.then.i135:                                     ; preds = %_compound_head.exit.i134
  br i1 %tobool.not.i14.i133, label %if.end.i17.i138, label %if.then.i16.i137, !prof !557

if.then.i16.i137:                                 ; preds = %if.then.i135
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i15.i136 = add i32 %168, -1
  br label %_compound_head.exit19.i140

if.end.i17.i138:                                  ; preds = %if.then.i135
  call void @__sanitizer_cov_trace_pc() #15
  %169 = ptrtoint ptr %add.ptr to i32
  br label %_compound_head.exit19.i140

_compound_head.exit19.i140:                       ; preds = %if.end.i17.i138, %if.then.i16.i137
  %retval.0.i18.i139 = phi i32 [ %sub.i15.i136, %if.then.i16.i137 ], [ %169, %if.end.i17.i138 ]
  %170 = inttoptr i32 %retval.0.i18.i139 to ptr
  call void @dump_page(ptr noundef %170, ptr noundef nonnull @.str.154) #13
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 424, 0\0A.popsection", ""() #13, !srcloc !598
  unreachable

do.end8.i141:                                     ; preds = %_compound_head.exit.i134
  br i1 %tobool.not.i14.i133, label %if.end.i24.i144, label %if.then.i23.i143, !prof !557

if.then.i23.i143:                                 ; preds = %do.end8.i141
  call void @__sanitizer_cov_trace_pc() #15
  %sub.i22.i142 = add i32 %168, -1
  br label %PageActive.exit

if.end.i24.i144:                                  ; preds = %do.end8.i141
  call void @__sanitizer_cov_trace_pc() #15
  %171 = ptrtoint ptr %add.ptr to i32
  br label %PageActive.exit

PageActive.exit:                                  ; preds = %if.end.i24.i144, %if.then.i23.i143
  %retval.0.i25.i145 = phi i32 [ %sub.i22.i142, %if.then.i23.i143 ], [ %171, %if.end.i24.i144 ]
  %172 = inttoptr i32 %retval.0.i25.i145 to ptr
  %173 = ptrtoint ptr %172 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load volatile i32, ptr %172, align 4
  %175 = and i32 %174, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %175)
  %tobool71.not = icmp eq i32 %175, 0
  br i1 %tobool71.not, label %PageActive.exit.if.end73_crit_edge, label %if.then72

PageActive.exit.if.end73_crit_edge:               ; preds = %PageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end73

if.then72:                                        ; preds = %PageActive.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void @workingset_age_nonresident(ptr noundef %lruvec, i32 noundef 1) #13
  br label %if.end73

if.end73:                                         ; preds = %if.then72, %PageActive.exit.if.end73_crit_edge
  %176 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load volatile ptr, ptr %list, align 4
  %cmp.i.not314 = icmp eq ptr %177, %list
  br i1 %cmp.i.not314, label %if.end73.while.end_crit_edge, label %if.end73.while.body.lr.ph_crit_edge

if.end73.while.body.lr.ph_crit_edge:              ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.lr.ph

if.end73.while.end_crit_edge:                     ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %if.end73.while.end_crit_edge, %while.cond.backedge.while.end_crit_edge, %entry.while.end_crit_edge
  %nr_moved.0.ph.lcssa307 = phi i32 [ 0, %entry.while.end_crit_edge ], [ %nr_moved.0.ph325, %while.cond.backedge.while.end_crit_edge ], [ %add, %if.end73.while.end_crit_edge ]
  %178 = ptrtoint ptr %pages_to_free to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load volatile ptr, ptr %pages_to_free, align 4
  %cmp.i.not.i164 = icmp eq ptr %179, %pages_to_free
  br i1 %cmp.i.not.i164, label %while.end.list_splice.exit_crit_edge, label %if.then.i166

while.end.list_splice.exit_crit_edge:             ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %list_splice.exit

if.then.i166:                                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #15
  %180 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %0, align 4
  %prev3.i.i165 = getelementptr inbounds %struct.list_head, ptr %179, i32 0, i32 1
  %182 = ptrtoint ptr %prev3.i.i165 to i32
  call void @__asan_store4_noabort(i32 %182)
  store ptr %list, ptr %prev3.i.i165, align 4
  %183 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %183)
  store ptr %179, ptr %list, align 4
  %184 = ptrtoint ptr %181 to i32
  call void @__asan_store4_noabort(i32 %184)
  store ptr %list, ptr %181, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %185 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %185)
  store ptr %181, ptr %prev6.i.i, align 4
  br label %list_splice.exit

list_splice.exit:                                 ; preds = %if.then.i166, %while.end.list_splice.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %pages_to_free) #13
  ret i32 %nr_moved.0.ph.lcssa307
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lru_note_cost(ptr noundef, i1 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wakeup_flusher_threads(i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_lru_shrink_inactive(i32 noundef %nid, i32 noundef %nr_scanned, i32 noundef %nr_reclaimed, ptr noundef %stat, i32 noundef %priority, i32 noundef %file) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_shrink_inactive, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_lru_shrink_inactive, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !668
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_shrink_inactive, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nid, i32 noundef %nr_scanned, i32 noundef %nr_reclaimed, ptr noundef %stat, i32 noundef %priority, i32 noundef %file) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !669
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !669
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_shrink_inactive, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_lru_shrink_inactive.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_lru_shrink_inactive.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 402, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_lru_isolate(i32 noundef %highest_zoneidx, i32 noundef %order, i32 noundef %nr_requested, i32 noundef %nr_scanned, i32 noundef %nr_skipped, i32 noundef %nr_taken, i32 noundef %isolate_mode, i32 noundef %lru) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_isolate, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_lru_isolate, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !670
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_isolate, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %highest_zoneidx, i32 noundef %order, i32 noundef %nr_requested, i32 noundef %nr_scanned, i32 noundef %nr_skipped, i32 noundef %nr_taken, i32 noundef %isolate_mode, i32 noundef %lru) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !671
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !671
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_isolate, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_lru_isolate.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_lru_isolate.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 328, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_unless(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @workingset_age_nonresident(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_lru_shrink_active(i32 noundef %nid, i32 noundef %nr_taken, i32 noundef %nr_active, i32 noundef %nr_deactivated, i32 noundef %nr_referenced, i32 noundef %priority, i32 noundef %file) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_shrink_active, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_lru_shrink_active, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !672
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_shrink_active, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nid, i32 noundef %nr_taken, i32 noundef %nr_active, i32 noundef %nr_deactivated, i32 noundef %nr_referenced, i32 noundef %priority, i32 noundef %file) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !673
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !673
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_lru_shrink_active, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_lru_shrink_active.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_lru_shrink_active.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 438, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__cpuset_node_allowed(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_cpus_allowed_ptr(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @set_freezable() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kthread_should_stop() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_kswapd_wake(i32 noundef %nid, i32 noundef %zid, i32 noundef %order) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_kswapd_wake, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_kswapd_wake, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !674
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_kswapd_wake, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nid, i32 noundef %zid, i32 noundef %order) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !675
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !675
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_kswapd_wake, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_kswapd_wake.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_kswapd_wake.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 87, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @balance_pgdat(ptr noundef %pgdat, i32 noundef %order, i32 noundef %highest_zoneidx) #0 align 64 {
entry:
  %nr_soft_scanned = alloca i32, align 4
  %pflags = alloca i32, align 4
  %zone_boosts = alloca [4 x i32], align 4
  %sc = alloca %struct.scan_control, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr_soft_scanned) #13
  %0 = ptrtoint ptr %nr_soft_scanned to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %nr_soft_scanned, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pflags) #13
  %1 = ptrtoint ptr %pflags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %pflags, align 4, !annotation !559
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zone_boosts) #13
  %2 = call ptr @memset(ptr %zone_boosts, i32 0, i32 16)
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %sc) #13
  %3 = call ptr @memset(ptr %sc, i32 0, i32 72)
  %may_unmap = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %4 = ptrtoint ptr %may_unmap to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 1024, ptr %may_unmap, align 4
  %order1 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 6
  %conv = trunc i32 %order to i8
  %5 = ptrtoint ptr %order1 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %conv, ptr %order1, align 2
  %gfp_mask = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 9
  %6 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 3264, ptr %gfp_mask, align 4
  %7 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task, align 8
  %reclaim_state = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 13
  %tobool.not.i = icmp eq ptr %reclaim_state, null
  %reclaim_state42.i = getelementptr inbounds %struct.task_struct, ptr %10, i32 0, i32 149
  %11 = ptrtoint ptr %reclaim_state42.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %reclaim_state42.i, align 16
  %tobool43.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %land.rhs41.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %entry
  br i1 %tobool43.not.i, label %land.rhs.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs4.i

land.rhs.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs4.i:                                      ; preds = %land.rhs.i
  %.b110.i = load i1, ptr @set_task_reclaim_state.__already_done, align 1
  br i1 %.b110.i, label %land.rhs4.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs4.i.if.end91.sink.split.i_crit_edge, !prof !557

land.rhs4.i.if.end91.sink.split.i_crit_edge:      ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end91.sink.split.i

land.rhs4.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs41.critedge.i:                            ; preds = %entry
  br i1 %tobool43.not.i, label %land.rhs53.i, label %land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge

land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs41.critedge.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

land.rhs53.i:                                     ; preds = %land.rhs41.critedge.i
  %.b108109.i = load i1, ptr @set_task_reclaim_state.__already_done.177, align 1
  br i1 %.b108109.i, label %land.rhs53.i.set_task_reclaim_state.exit_crit_edge, label %land.rhs53.i.if.end91.sink.split.i_crit_edge, !prof !557

land.rhs53.i.if.end91.sink.split.i_crit_edge:     ; preds = %land.rhs53.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end91.sink.split.i

land.rhs53.i.set_task_reclaim_state.exit_crit_edge: ; preds = %land.rhs53.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_task_reclaim_state.exit

if.end91.sink.split.i:                            ; preds = %land.rhs53.i.if.end91.sink.split.i_crit_edge, %land.rhs4.i.if.end91.sink.split.i_crit_edge
  %set_task_reclaim_state.__already_done.sink.i = phi ptr [ @set_task_reclaim_state.__already_done, %land.rhs4.i.if.end91.sink.split.i_crit_edge ], [ @set_task_reclaim_state.__already_done.177, %land.rhs53.i.if.end91.sink.split.i_crit_edge ]
  %.sink.i = phi i32 [ 183, %land.rhs4.i.if.end91.sink.split.i_crit_edge ], [ 186, %land.rhs53.i.if.end91.sink.split.i_crit_edge ]
  %13 = ptrtoint ptr %set_task_reclaim_state.__already_done.sink.i to i32
  call void @__asan_store1_noabort(i32 %13)
  store i1 true, ptr %set_task_reclaim_state.__already_done.sink.i, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef %.sink.i, i32 noundef 9, ptr noundef null) #13
  br label %set_task_reclaim_state.exit

set_task_reclaim_state.exit:                      ; preds = %if.end91.sink.split.i, %land.rhs53.i.set_task_reclaim_state.exit_crit_edge, %land.rhs41.critedge.i.set_task_reclaim_state.exit_crit_edge, %land.rhs4.i.set_task_reclaim_state.exit_crit_edge, %land.rhs.i.set_task_reclaim_state.exit_crit_edge
  %14 = ptrtoint ptr %reclaim_state42.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %reclaim_state, ptr %reclaim_state42.i, align 16
  call void @psi_memstall_enter(ptr noundef nonnull %pflags) #13
  br label %__here

__here:                                           ; preds = %set_task_reclaim_state.exit
  call void @__fs_reclaim_acquire(i32 noundef ptrtoint (ptr blockaddress(@balance_pgdat, %__here) to i32)) #13
  %15 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #13, !srcloc !613
  %16 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cpu.i, align 4
  %arrayidx13.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx13.i, align 4
  %add.i = add i32 %21, ptrtoint (ptr getelementptr inbounds (%struct.vm_event_state, ptr @vm_event_states, i32 0, i32 0, i32 41) to i32)
  %22 = inttoptr i32 %add.i to ptr
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 4
  %add14.i = add i32 %24, 1
  store i32 %add14.i, ptr %22, align 4
  %25 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #13, !srcloc !614
  %and.i.i.i = and i32 %25, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i246 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i246, label %if.then.i, label %__here.count_vm_event.exit_crit_edge, !prof !558

__here.count_vm_event.exit_crit_edge:             ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #15
  br label %count_vm_event.exit

if.then.i:                                        ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #15
  call void @warn_bogus_irq_restore() #13
  br label %count_vm_event.exit

count_vm_event.exit:                              ; preds = %if.then.i, %__here.count_vm_event.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %15) #13, !srcloc !615
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %highest_zoneidx)
  %cmp.not322 = icmp slt i32 %highest_zoneidx, 0
  br i1 %cmp.not322, label %count_vm_event.exit.for.end_crit_edge, label %count_vm_event.exit.for.body_crit_edge

count_vm_event.exit.for.body_crit_edge:           ; preds = %count_vm_event.exit
  br label %for.body

count_vm_event.exit.for.end_crit_edge:            ; preds = %count_vm_event.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %count_vm_event.exit.for.body_crit_edge
  %i.0324 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %count_vm_event.exit.for.body_crit_edge ]
  %nr_boost_reclaim.0323 = phi i32 [ %nr_boost_reclaim.1, %for.inc.for.body_crit_edge ], [ 0, %count_vm_event.exit.for.body_crit_edge ]
  %managed_pages.i.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.0324, i32 11
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i, i32 noundef 4) #13
  %26 = ptrtoint ptr %managed_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %managed_pages.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.i.not = icmp eq i32 %27, 0
  br i1 %tobool.i.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  %watermark_boost = getelementptr %struct.zone, ptr %pgdat, i32 %i.0324, i32 1
  %28 = ptrtoint ptr %watermark_boost to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %watermark_boost, align 4
  %add = add i32 %29, %nr_boost_reclaim.0323
  %arrayidx = getelementptr [4 x i32], ptr %zone_boosts, i32 0, i32 %i.0324
  %30 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body.for.inc_crit_edge
  %nr_boost_reclaim.1 = phi i32 [ %add, %if.end ], [ %nr_boost_reclaim.0323, %for.body.for.inc_crit_edge ]
  %inc = add i32 %i.0324, 1
  %cmp.not = icmp sgt i32 %inc, %highest_zoneidx
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %count_vm_event.exit.for.end_crit_edge
  %nr_boost_reclaim.0.lcssa = phi i32 [ 0, %count_vm_event.exit.for.end_crit_edge ], [ %nr_boost_reclaim.1, %for.inc.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_boost_reclaim.0.lcssa)
  %tobool.not = icmp eq i32 %nr_boost_reclaim.0.lcssa, 0
  %priority = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 7
  %nr_reclaimed5 = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 11
  %conv6 = trunc i32 %highest_zoneidx to i8
  %reclaim_idx = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 8
  %nr_scanned = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 10
  %pfmemalloc_wait = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 10
  %head.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 10, i32 1
  %managed_pages.i.i247 = getelementptr %struct.zone, ptr %pgdat, i32 3, i32 11
  %managed_pages.i.i247.1 = getelementptr %struct.zone, ptr %pgdat, i32 2, i32 11
  %managed_pages.i.i247.2 = getelementptr %struct.zone, ptr %pgdat, i32 1, i32 11
  %managed_pages.i.i247.3 = getelementptr %struct.zone, ptr %pgdat, i32 0, i32 11
  br label %restart

restart:                                          ; preds = %pgdat_balanced.exit.restart_crit_edge, %for.end
  %nr_boost_reclaim.2 = phi i32 [ %nr_boost_reclaim.0.lcssa, %for.end ], [ 0, %pgdat_balanced.exit.restart_crit_edge ]
  br i1 %cmp.not322, label %restart.set_reclaim_active.exit_crit_edge, label %restart.for.body.i.i_crit_edge

restart.for.body.i.i_crit_edge:                   ; preds = %restart
  br label %for.body.i.i

restart.set_reclaim_active.exit_crit_edge:        ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_reclaim_active.exit

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %restart.for.body.i.i_crit_edge
  %i.09.i.i = phi i32 [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ 0, %restart.for.body.i.i_crit_edge ]
  %managed_pages.i.i.i.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.09.i.i, i32 11
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i.i, i32 noundef 4) #13
  %31 = ptrtoint ptr %managed_pages.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %managed_pages.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i.not.i.i = icmp eq i32 %32, 0
  br i1 %tobool.i.not.i.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %if.end.i.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %flags.i.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.09.i.i, i32 21
  call void @_set_bit(i32 noundef 1, ptr noundef %flags.i.i) #13
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end.i.i, %for.body.i.i.for.inc.i.i_crit_edge
  %inc.i.i = add i32 %i.09.i.i, 1
  %cmp.not.i.i = icmp sgt i32 %inc.i.i, %highest_zoneidx
  br i1 %cmp.not.i.i, label %for.inc.i.i.set_reclaim_active.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i

for.inc.i.i.set_reclaim_active.exit_crit_edge:    ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %set_reclaim_active.exit

set_reclaim_active.exit:                          ; preds = %for.inc.i.i.set_reclaim_active.exit_crit_edge, %restart.set_reclaim_active.exit_crit_edge
  %33 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 12, ptr %priority, align 1
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %set_reclaim_active.exit
  %nr_boost_reclaim.3 = phi i32 [ %nr_boost_reclaim.2, %set_reclaim_active.exit ], [ %109, %do.cond.do.body_crit_edge ]
  %34 = ptrtoint ptr %nr_reclaimed5 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %nr_reclaimed5, align 4
  %36 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %conv6, ptr %reclaim_idx, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @buffer_heads_over_limit to i32))
  %37 = load i32, ptr @buffer_heads_over_limit, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool7.not = icmp eq i32 %37, 0
  br i1 %tobool7.not, label %do.body.if.end23_crit_edge, label %for.body12.preheader

do.body.if.end23_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end23

for.body12.preheader:                             ; preds = %do.body
  %call.i.i.i.i248 = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i247, i32 noundef 4) #13
  %38 = ptrtoint ptr %managed_pages.i.i247 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %managed_pages.i.i247, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.i249.not = icmp eq i32 %39, 0
  br i1 %tobool.i249.not, label %for.inc21, label %for.body12.preheader.if.end18_crit_edge

for.body12.preheader.if.end18_crit_edge:          ; preds = %for.body12.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

if.end18:                                         ; preds = %for.inc21.2.if.end18_crit_edge, %for.inc21.1.if.end18_crit_edge, %for.inc21.if.end18_crit_edge, %for.body12.preheader.if.end18_crit_edge
  %i.1326.lcssa = phi i8 [ 3, %for.body12.preheader.if.end18_crit_edge ], [ 2, %for.inc21.if.end18_crit_edge ], [ 1, %for.inc21.1.if.end18_crit_edge ], [ 0, %for.inc21.2.if.end18_crit_edge ]
  %40 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %i.1326.lcssa, ptr %reclaim_idx, align 4
  br label %if.end23

for.inc21:                                        ; preds = %for.body12.preheader
  %call.i.i.i.i248.1 = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i247.1, i32 noundef 4) #13
  %41 = ptrtoint ptr %managed_pages.i.i247.1 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %managed_pages.i.i247.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.i249.not.1 = icmp eq i32 %42, 0
  br i1 %tobool.i249.not.1, label %for.inc21.1, label %for.inc21.if.end18_crit_edge

for.inc21.if.end18_crit_edge:                     ; preds = %for.inc21
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

for.inc21.1:                                      ; preds = %for.inc21
  %call.i.i.i.i248.2 = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i247.2, i32 noundef 4) #13
  %43 = ptrtoint ptr %managed_pages.i.i247.2 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %managed_pages.i.i247.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.i249.not.2 = icmp eq i32 %44, 0
  br i1 %tobool.i249.not.2, label %for.inc21.2, label %for.inc21.1.if.end18_crit_edge

for.inc21.1.if.end18_crit_edge:                   ; preds = %for.inc21.1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

for.inc21.2:                                      ; preds = %for.inc21.1
  %call.i.i.i.i248.3 = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i247.3, i32 noundef 4) #13
  %45 = ptrtoint ptr %managed_pages.i.i247.3 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %managed_pages.i.i247.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.i249.not.3 = icmp eq i32 %46, 0
  br i1 %tobool.i249.not.3, label %for.inc21.2.if.end23_crit_edge, label %for.inc21.2.if.end18_crit_edge

for.inc21.2.if.end18_crit_edge:                   ; preds = %for.inc21.2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end18

for.inc21.2.if.end23_crit_edge:                   ; preds = %for.inc21.2
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end23

if.end23:                                         ; preds = %for.inc21.2.if.end23_crit_edge, %if.end18, %do.body.if.end23_crit_edge
  %47 = ptrtoint ptr %order1 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %order1, align 2
  %conv25 = sext i8 %48 to i32
  br i1 %cmp.not322, label %pgdat_balanced.exit.thread301, label %if.end23.for.body.i_crit_edge

if.end23.for.body.i_crit_edge:                    ; preds = %if.end23
  br label %for.body.i

pgdat_balanced.exit.thread301:                    ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_boost_reclaim.3)
  %tobool29.not304 = icmp eq i32 %nr_boost_reclaim.3, 0
  br label %if.end31

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end23.for.body.i_crit_edge
  %mark.020.i = phi i32 [ %mark.1.i, %for.inc.i.for.body.i_crit_edge ], [ -1, %if.end23.for.body.i_crit_edge ]
  %i.018.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end23.for.body.i_crit_edge ]
  %managed_pages.i.i.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.018.i, i32 11
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i, i32 noundef 4) #13
  %49 = ptrtoint ptr %managed_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %managed_pages.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool.i.not.i = icmp eq i32 %50, 0
  br i1 %tobool.i.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %add.ptr.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.018.i
  %arrayidx.i = getelementptr [3 x i32], ptr %add.ptr.i, i32 0, i32 2
  %51 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx.i, align 8
  %watermark_boost.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.018.i, i32 1
  %53 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %watermark_boost.i, align 4
  %add.i250 = add i32 %54, %52
  %call1.i = call zeroext i1 @zone_watermark_ok_safe(ptr noundef %add.ptr.i, i32 noundef %conv25, i32 noundef %add.i250, i32 noundef %highest_zoneidx) #13
  br i1 %call1.i, label %pgdat_balanced.exit.thread, label %if.end.i.for.inc.i_crit_edge

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

pgdat_balanced.exit.thread:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_boost_reclaim.3)
  %tobool29.not297 = icmp eq i32 %nr_boost_reclaim.3, 0
  br label %if.end31

for.inc.i:                                        ; preds = %if.end.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %mark.1.i = phi i32 [ %add.i250, %if.end.i.for.inc.i_crit_edge ], [ %mark.020.i, %for.body.i.for.inc.i_crit_edge ]
  %inc.i = add i32 %i.018.i, 1
  %cmp.not.i = icmp sgt i32 %inc.i, %highest_zoneidx
  br i1 %cmp.not.i, label %pgdat_balanced.exit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

pgdat_balanced.exit:                              ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %mark.1.i)
  %cmp4.i = icmp eq i32 %mark.1.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_boost_reclaim.3)
  %tobool29.not = icmp eq i32 %nr_boost_reclaim.3, 0
  %or.cond = select i1 %cmp4.i, i1 true, i1 %tobool29.not
  br i1 %or.cond, label %pgdat_balanced.exit.if.end31_crit_edge, label %pgdat_balanced.exit.restart_crit_edge

pgdat_balanced.exit.restart_crit_edge:            ; preds = %pgdat_balanced.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %restart

pgdat_balanced.exit.if.end31_crit_edge:           ; preds = %pgdat_balanced.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31

if.end31:                                         ; preds = %pgdat_balanced.exit.if.end31_crit_edge, %pgdat_balanced.exit.thread, %pgdat_balanced.exit.thread301
  %tobool29.not300 = phi i1 [ %tobool29.not297, %pgdat_balanced.exit.thread ], [ %tobool29.not, %pgdat_balanced.exit.if.end31_crit_edge ], [ %tobool29.not304, %pgdat_balanced.exit.thread301 ]
  %retval.0.i299 = phi i1 [ true, %pgdat_balanced.exit.thread ], [ %cmp4.i, %pgdat_balanced.exit.if.end31_crit_edge ], [ true, %pgdat_balanced.exit.thread301 ]
  %55 = select i1 %tobool29.not300, i1 %retval.0.i299, i1 false
  br i1 %55, label %if.end31.out_crit_edge, label %if.end37

if.end31.out_crit_edge:                           ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.end37:                                         ; preds = %if.end31
  br i1 %tobool29.not300, label %if.end37.if.end45_crit_edge, label %land.lhs.true39

if.end37.if.end45_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end45

land.lhs.true39:                                  ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #15
  %56 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %priority, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %57)
  %cmp42 = icmp ne i8 %57, 10
  br label %if.end45

if.end45:                                         ; preds = %land.lhs.true39, %if.end37.if.end45_crit_edge
  %bf.shl57 = phi i16 [ 0, %land.lhs.true39 ], [ 512, %if.end37.if.end45_crit_edge ]
  %raise_priority.0.off0 = phi i1 [ %cmp42, %land.lhs.true39 ], [ true, %if.end37.if.end45_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @laptop_mode to i32))
  %58 = load i32, ptr @laptop_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool46.not = icmp eq i32 %58, 0
  %spec.select242 = select i1 %tobool46.not, i1 %tobool29.not300, i1 false
  %59 = ptrtoint ptr %may_unmap to i32
  call void @__asan_load2_noabort(i32 %59)
  %bf.load49 = load i16, ptr %may_unmap, align 4
  %bf.shl = select i1 %spec.select242, i16 2048, i16 0
  %bf.clear50 = and i16 %bf.load49, -2561
  %bf.set51 = or i16 %bf.clear50, %bf.shl57
  %bf.set59 = or i16 %bf.set51, %bf.shl
  store i16 %bf.set59, ptr %may_unmap, align 4
  call fastcc void @age_active_anon(ptr noundef %pgdat, ptr noundef nonnull %sc)
  %60 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %priority, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %61)
  %cmp63 = icmp slt i8 %61, 10
  br i1 %cmp63, label %if.then65, label %if.end45.if.end70_crit_edge

if.end45.if.end70_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end70

if.then65:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #15
  %62 = ptrtoint ptr %may_unmap to i32
  call void @__asan_load2_noabort(i32 %62)
  %bf.load67 = load i16, ptr %may_unmap, align 4
  %bf.set69 = or i16 %bf.load67, 2048
  store i16 %bf.set69, ptr %may_unmap, align 4
  br label %if.end70

if.end70:                                         ; preds = %if.then65, %if.end45.if.end70_crit_edge
  %63 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 0, ptr %nr_scanned, align 4
  %64 = ptrtoint ptr %nr_soft_scanned to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 0, ptr %nr_soft_scanned, align 4
  %65 = ptrtoint ptr %order1 to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %order1, align 2
  %conv72 = sext i8 %66 to i32
  %67 = ptrtoint ptr %gfp_mask to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %gfp_mask, align 4
  %call74 = call i32 @mem_cgroup_soft_limit_reclaim(ptr noundef %pgdat, i32 noundef %conv72, i32 noundef %68, ptr noundef nonnull %nr_soft_scanned) #13
  %69 = ptrtoint ptr %nr_reclaimed5 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %nr_reclaimed5, align 4
  %add76 = add i32 %70, %call74
  store i32 %add76, ptr %nr_reclaimed5, align 4
  %71 = ptrtoint ptr %sc to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 0, ptr %sc, align 4
  %72 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %reclaim_idx, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %73)
  %cmp.not36.i = icmp slt i8 %73, 0
  br i1 %cmp.not36.i, label %if.end70.for.end.i262_crit_edge, label %if.end70.for.body.i254_crit_edge

if.end70.for.body.i254_crit_edge:                 ; preds = %if.end70
  br label %for.body.i254

if.end70.for.end.i262_crit_edge:                  ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i262

for.body.i254:                                    ; preds = %for.inc.i260.for.body.i254_crit_edge, %if.end70.for.body.i254_crit_edge
  %z.037.i = phi i32 [ %inc.i259, %for.inc.i260.for.body.i254_crit_edge ], [ 0, %if.end70.for.body.i254_crit_edge ]
  %managed_pages.i.i.i251 = getelementptr %struct.zone, ptr %pgdat, i32 %z.037.i, i32 11
  %call.i.i.i.i.i252 = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i251, i32 noundef 4) #13
  %74 = ptrtoint ptr %managed_pages.i.i.i251 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %managed_pages.i.i.i251, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool.i.not.i253 = icmp eq i32 %75, 0
  br i1 %tobool.i.not.i253, label %for.body.i254.for.inc.i260_crit_edge, label %if.end.i258

for.body.i254.for.inc.i260_crit_edge:             ; preds = %for.body.i254
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i260

if.end.i258:                                      ; preds = %for.body.i254
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i255 = getelementptr %struct.zone, ptr %pgdat, i32 %z.037.i, i32 0, i32 2
  %76 = ptrtoint ptr %arrayidx.i255 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %arrayidx.i255, align 8
  %watermark_boost.i256 = getelementptr %struct.zone, ptr %pgdat, i32 %z.037.i, i32 1
  %78 = ptrtoint ptr %watermark_boost.i256 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %watermark_boost.i256, align 4
  %add.i257 = add i32 %79, %77
  %80 = call i32 @llvm.umax.i32(i32 %add.i257, i32 32) #13
  %81 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %sc, align 4
  %add5.i = add i32 %80, %82
  store i32 %add5.i, ptr %sc, align 4
  br label %for.inc.i260

for.inc.i260:                                     ; preds = %if.end.i258, %for.body.i254.for.inc.i260_crit_edge
  %inc.i259 = add nuw nsw i32 %z.037.i, 1
  %83 = ptrtoint ptr %reclaim_idx to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %reclaim_idx, align 4
  %conv.i = sext i8 %84 to i32
  %cmp.not.not.i = icmp slt i32 %z.037.i, %conv.i
  br i1 %cmp.not.not.i, label %for.inc.i260.for.body.i254_crit_edge, label %for.inc.i260.for.end.i262_crit_edge

for.inc.i260.for.end.i262_crit_edge:              ; preds = %for.inc.i260
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i262

for.inc.i260.for.body.i254_crit_edge:             ; preds = %for.inc.i260
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i254

for.end.i262:                                     ; preds = %for.inc.i260.for.end.i262_crit_edge, %if.end70.for.end.i262_crit_edge
  call fastcc void @shrink_node(ptr noundef %pgdat, ptr noundef nonnull %sc) #13
  %85 = ptrtoint ptr %order1 to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %order1, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %86)
  %tobool.not.i261 = icmp eq i8 %86, 0
  br i1 %tobool.not.i261, label %for.end.i262.kswapd_shrink_node.exit_crit_edge, label %land.lhs.true.i

for.end.i262.kswapd_shrink_node.exit_crit_edge:   ; preds = %for.end.i262
  call void @__sanitizer_cov_trace_pc() #15
  br label %kswapd_shrink_node.exit

land.lhs.true.i:                                  ; preds = %for.end.i262
  %87 = ptrtoint ptr %nr_reclaimed5 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %nr_reclaimed5, align 4
  %conv634.i = zext i8 %86 to i32
  %shl.i.i = shl i32 2, %conv634.i
  call void @__sanitizer_cov_trace_cmp4(i32 %88, i32 %shl.i.i)
  %cmp10.not.i = icmp ult i32 %88, %shl.i.i
  br i1 %cmp10.not.i, label %land.lhs.true.i.kswapd_shrink_node.exit_crit_edge, label %if.then12.i

land.lhs.true.i.kswapd_shrink_node.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %kswapd_shrink_node.exit

if.then12.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  %89 = ptrtoint ptr %order1 to i32
  call void @__asan_store1_noabort(i32 %89)
  store i8 0, ptr %order1, align 2
  br label %kswapd_shrink_node.exit

kswapd_shrink_node.exit:                          ; preds = %if.then12.i, %land.lhs.true.i.kswapd_shrink_node.exit_crit_edge, %for.end.i262.kswapd_shrink_node.exit_crit_edge
  %90 = ptrtoint ptr %nr_scanned to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %nr_scanned, align 4
  %92 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %sc, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %91, i32 %93)
  %cmp16.i.not = icmp ult i32 %91, %93
  %spec.select243 = select i1 %cmp16.i.not, i1 %raise_priority.0.off0, i1 false
  %94 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile ptr, ptr %head.i, align 4
  %cmp.i.i.not = icmp eq ptr %95, %head.i
  br i1 %cmp.i.i.not, label %kswapd_shrink_node.exit.__here88_crit_edge, label %land.lhs.true82

kswapd_shrink_node.exit.__here88_crit_edge:       ; preds = %kswapd_shrink_node.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %__here88

land.lhs.true82:                                  ; preds = %kswapd_shrink_node.exit
  %call83 = call fastcc zeroext i1 @allow_direct_reclaim(ptr noundef %pgdat)
  br i1 %call83, label %if.then85, label %land.lhs.true82.__here88_crit_edge

land.lhs.true82.__here88_crit_edge:               ; preds = %land.lhs.true82
  call void @__sanitizer_cov_trace_pc() #15
  br label %__here88

if.then85:                                        ; preds = %land.lhs.true82
  call void @__sanitizer_cov_trace_pc() #15
  call void @__wake_up(ptr noundef %pfmemalloc_wait, i32 noundef 3, i32 noundef 0, ptr noundef null) #13
  br label %__here88

__here88:                                         ; preds = %if.then85, %land.lhs.true82.__here88_crit_edge, %kswapd_shrink_node.exit.__here88_crit_edge
  call void @__fs_reclaim_release(i32 noundef ptrtoint (ptr blockaddress(@balance_pgdat, %__here88) to i32)) #13
  %96 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i263 = and i32 %96, -16384
  %97 = inttoptr i32 %and.i.i263 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %97, i32 0, i32 2
  %98 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %99, i32 0, i32 3
  %100 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %flags.i, align 4
  %and.i264 = and i32 %101, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i264)
  %tobool.not.i265 = icmp eq i32 %and.i264, 0
  br i1 %tobool.not.i265, label %if.then.i266, label %__here88.if.end.i269_crit_edge

__here88.if.end.i269_crit_edge:                   ; preds = %__here88
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i269

if.then.i266:                                     ; preds = %__here88
  call void @__sanitizer_cov_trace_pc() #15
  call void @debug_check_no_locks_held() #13
  br label %if.end.i269

if.end.i269:                                      ; preds = %if.then.i266, %__here88.if.end.i269_crit_edge
  call void @__might_sleep(ptr noundef nonnull @.str.181, i32 noundef 57) #13
  %102 = call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i267 = and i32 %102, -16384
  %103 = inttoptr i32 %and.i.i.i267 to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %103, i32 0, i32 2
  %104 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %task.i.i, align 8
  %call.i.i.i.i.i268 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %106 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %106)
  %tobool.not.i.i.i = icmp eq i32 %106, 0
  br i1 %tobool.not.i.i.i, label %if.end.i269.__here92.thread_crit_edge, label %freezing.exit.i.i, !prof !557

if.end.i269.__here92.thread_crit_edge:            ; preds = %if.end.i269
  call void @__sanitizer_cov_trace_pc() #15
  br label %__here92.thread

freezing.exit.i.i:                                ; preds = %if.end.i269
  %call4.i.i.i = call zeroext i1 @freezing_slow_path(ptr noundef %105) #13
  br i1 %call4.i.i.i, label %if.end.i.i270, label %freezing.exit.i.i.__here92.thread_crit_edge, !prof !558

freezing.exit.i.i.__here92.thread_crit_edge:      ; preds = %freezing.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %__here92.thread

if.end.i.i270:                                    ; preds = %freezing.exit.i.i
  %call6.i.i = call zeroext i1 @__refrigerator(i1 noundef zeroext false) #13
  call void @__fs_reclaim_acquire(i32 noundef 1) #13
  br i1 %call6.i.i, label %if.end.i.i270.do.end_crit_edge, label %if.end.i.i270.lor.lhs.false_crit_edge

if.end.i.i270.lor.lhs.false_crit_edge:            ; preds = %if.end.i.i270
  call void @__sanitizer_cov_trace_pc() #15
  br label %lor.lhs.false

if.end.i.i270.do.end_crit_edge:                   ; preds = %if.end.i.i270
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

__here92.thread:                                  ; preds = %freezing.exit.i.i.__here92.thread_crit_edge, %if.end.i269.__here92.thread_crit_edge
  call void @__fs_reclaim_acquire(i32 noundef 1) #13
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %__here92.thread, %if.end.i.i270.lor.lhs.false_crit_edge
  %call96 = call zeroext i1 @kthread_should_stop() #13
  br i1 %call96, label %lor.lhs.false.do.end_crit_edge, label %if.end99

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.end99:                                         ; preds = %lor.lhs.false
  %107 = ptrtoint ptr %nr_reclaimed5 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %nr_reclaimed5, align 4
  %sub = sub i32 %108, %35
  %109 = call i32 @llvm.usub.sat.i32(i32 %nr_boost_reclaim.3, i32 %sub)
  call void @__sanitizer_cov_trace_cmp4(i32 %nr_boost_reclaim.3, i32 %sub)
  %tobool105.not = icmp ugt i32 %nr_boost_reclaim.3, %sub
  call void @__sanitizer_cov_trace_cmp4(i32 %108, i32 %35)
  %tobool107.not = icmp eq i32 %108, %35
  %or.cond244 = and i1 %tobool107.not, %tobool105.not
  br i1 %or.cond244, label %if.end99.do.end_crit_edge, label %if.end109

if.end99.do.end_crit_edge:                        ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

if.end109:                                        ; preds = %if.end99
  %or.cond245 = select i1 %spec.select243, i1 true, i1 %tobool107.not
  %110 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %priority, align 1
  br i1 %or.cond245, label %if.then114, label %if.end109.do.cond_crit_edge

if.end109.do.cond_crit_edge:                      ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.cond

if.then114:                                       ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #15
  %dec116 = add i8 %111, -1
  %112 = ptrtoint ptr %priority to i32
  call void @__asan_store1_noabort(i32 %112)
  store i8 %dec116, ptr %priority, align 1
  br label %do.cond

do.cond:                                          ; preds = %if.then114, %if.end109.do.cond_crit_edge
  %113 = phi i8 [ %dec116, %if.then114 ], [ %111, %if.end109.do.cond_crit_edge ]
  %cmp123 = icmp sgt i8 %113, 0
  br i1 %cmp123, label %do.cond.do.body_crit_edge, label %do.cond.do.end_crit_edge

do.cond.do.end_crit_edge:                         ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

do.end:                                           ; preds = %do.cond.do.end_crit_edge, %if.end99.do.end_crit_edge, %lor.lhs.false.do.end_crit_edge, %if.end.i.i270.do.end_crit_edge
  %114 = ptrtoint ptr %nr_reclaimed5 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %nr_reclaimed5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %115)
  %tobool126.not = icmp eq i32 %115, 0
  br i1 %tobool126.not, label %if.then127, label %do.end.out_crit_edge

do.end.out_crit_edge:                             ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %out

if.then127:                                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #15
  %kswapd_failures = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 17
  %116 = ptrtoint ptr %kswapd_failures to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %kswapd_failures, align 16
  %inc128 = add i32 %117, 1
  store i32 %inc128, ptr %kswapd_failures, align 16
  br label %out

out:                                              ; preds = %if.then127, %do.end.out_crit_edge, %if.end31.out_crit_edge
  br i1 %cmp.not322, label %clear_reclaim_active.exit.thread, label %out.for.body.i.i276_crit_edge

out.for.body.i.i276_crit_edge:                    ; preds = %out
  br label %for.body.i.i276

for.body.i.i276:                                  ; preds = %for.inc.i.i281.for.body.i.i276_crit_edge, %out.for.body.i.i276_crit_edge
  %i.09.i.i272 = phi i32 [ %inc.i.i279, %for.inc.i.i281.for.body.i.i276_crit_edge ], [ 0, %out.for.body.i.i276_crit_edge ]
  %managed_pages.i.i.i.i273 = getelementptr %struct.zone, ptr %pgdat, i32 %i.09.i.i272, i32 11
  %call.i.i.i.i.i.i274 = call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i.i273, i32 noundef 4) #13
  %118 = ptrtoint ptr %managed_pages.i.i.i.i273 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load volatile i32, ptr %managed_pages.i.i.i.i273, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %119)
  %tobool.i.not.i.i275 = icmp eq i32 %119, 0
  br i1 %tobool.i.not.i.i275, label %for.body.i.i276.for.inc.i.i281_crit_edge, label %if.end.i.i278

for.body.i.i276.for.inc.i.i281_crit_edge:         ; preds = %for.body.i.i276
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i.i281

if.end.i.i278:                                    ; preds = %for.body.i.i276
  call void @__sanitizer_cov_trace_pc() #15
  %flags.i.i277 = getelementptr %struct.zone, ptr %pgdat, i32 %i.09.i.i272, i32 21
  call void @_clear_bit(i32 noundef 1, ptr noundef %flags.i.i277) #13
  br label %for.inc.i.i281

for.inc.i.i281:                                   ; preds = %if.end.i.i278, %for.body.i.i276.for.inc.i.i281_crit_edge
  %inc.i.i279 = add i32 %i.09.i.i272, 1
  %cmp.not.i.i280 = icmp sgt i32 %inc.i.i279, %highest_zoneidx
  br i1 %cmp.not.i.i280, label %clear_reclaim_active.exit, label %for.inc.i.i281.for.body.i.i276_crit_edge

for.inc.i.i281.for.body.i.i276_crit_edge:         ; preds = %for.inc.i.i281
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i276

clear_reclaim_active.exit:                        ; preds = %for.inc.i.i281
  br i1 %tobool.not, label %clear_reclaim_active.exit.if.end169_crit_edge, label %for.cond132.preheader

clear_reclaim_active.exit.if.end169_crit_edge:    ; preds = %clear_reclaim_active.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end169

clear_reclaim_active.exit.thread:                 ; preds = %out
  br i1 %tobool.not, label %clear_reclaim_active.exit.thread.if.end169_crit_edge, label %clear_reclaim_active.exit.thread.for.end168_crit_edge

clear_reclaim_active.exit.thread.for.end168_crit_edge: ; preds = %clear_reclaim_active.exit.thread
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end168

clear_reclaim_active.exit.thread.if.end169_crit_edge: ; preds = %clear_reclaim_active.exit.thread
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end169

for.cond132.preheader:                            ; preds = %clear_reclaim_active.exit
  br i1 %cmp.not322, label %for.cond132.preheader.for.end168_crit_edge, label %for.cond132.preheader.for.body135_crit_edge

for.cond132.preheader.for.body135_crit_edge:      ; preds = %for.cond132.preheader
  br label %for.body135

for.cond132.preheader.for.end168_crit_edge:       ; preds = %for.cond132.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end168

for.body135:                                      ; preds = %for.inc166.for.body135_crit_edge, %for.cond132.preheader.for.body135_crit_edge
  %i.2328 = phi i32 [ %inc167, %for.inc166.for.body135_crit_edge ], [ 0, %for.cond132.preheader.for.body135_crit_edge ]
  %arrayidx136 = getelementptr [4 x i32], ptr %zone_boosts, i32 0, i32 %i.2328
  %120 = ptrtoint ptr %arrayidx136 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %arrayidx136, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %121)
  %tobool137.not = icmp eq i32 %121, 0
  br i1 %tobool137.not, label %for.body135.for.inc166_crit_edge, label %if.end139

for.body135.for.inc166_crit_edge:                 ; preds = %for.body135
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc166

if.end139:                                        ; preds = %for.body135
  call void @__sanitizer_cov_trace_pc() #15
  %lock = getelementptr %struct.zone, ptr %pgdat, i32 %i.2328, i32 22
  %call149 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #13
  %watermark_boost154 = getelementptr %struct.zone, ptr %pgdat, i32 %i.2328, i32 1
  %122 = ptrtoint ptr %watermark_boost154 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %watermark_boost154, align 4
  %124 = call i32 @llvm.usub.sat.i32(i32 %123, i32 %121)
  %125 = ptrtoint ptr %watermark_boost154 to i32
  call void @__asan_store4_noabort(i32 %125)
  store i32 %124, ptr %watermark_boost154, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call149) #13
  br label %for.inc166

for.inc166:                                       ; preds = %if.end139, %for.body135.for.inc166_crit_edge
  %inc167 = add i32 %i.2328, 1
  %cmp133.not = icmp sgt i32 %inc167, %highest_zoneidx
  br i1 %cmp133.not, label %for.inc166.for.end168_crit_edge, label %for.inc166.for.body135_crit_edge

for.inc166.for.body135_crit_edge:                 ; preds = %for.inc166
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body135

for.inc166.for.end168_crit_edge:                  ; preds = %for.inc166
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end168

for.end168:                                       ; preds = %for.inc166.for.end168_crit_edge, %for.cond132.preheader.for.end168_crit_edge, %clear_reclaim_active.exit.thread.for.end168_crit_edge
  call void @wakeup_kcompactd(ptr noundef %pgdat, i32 noundef 11, i32 noundef %highest_zoneidx) #13
  br label %if.end169

if.end169:                                        ; preds = %for.end168, %clear_reclaim_active.exit.thread.if.end169_crit_edge, %clear_reclaim_active.exit.if.end169_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@balance_pgdat, %if.then.i.i)) #13
          to label %if.end.i.i282 [label %if.then.i.i], !srcloc !567

if.then.i.i:                                      ; preds = %if.end169
  call void @__sanitizer_cov_trace_pc() #15
  %__lruvec.i.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 26
  br label %out.i.i

if.end.i.i282:                                    ; preds = %if.end169
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %126 = load ptr, ptr @root_mem_cgroup, align 4
  %node_id.i.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %127 = ptrtoint ptr %node_id.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %node_id.i.i, align 64
  %arrayidx.i.i = getelementptr %struct.mem_cgroup, ptr %126, i32 0, i32 45, i32 %128
  %129 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %arrayidx.i.i, align 4
  br label %out.i.i

out.i.i:                                          ; preds = %if.end.i.i282, %if.then.i.i
  %lruvec.0.i.i = phi ptr [ %__lruvec.i.i, %if.then.i.i ], [ %130, %if.end.i.i282 ]
  %pgdat4.i.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i.i, i32 0, i32 7
  %131 = ptrtoint ptr %pgdat4.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %pgdat4.i.i, align 4
  %cmp.not.i.i283 = icmp eq ptr %132, %pgdat
  br i1 %cmp.not.i.i283, label %out.i.i.mem_cgroup_lruvec.exit.i_crit_edge, label %if.then7.i.i, !prof !557

out.i.i.mem_cgroup_lruvec.exit.i_crit_edge:       ; preds = %out.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mem_cgroup_lruvec.exit.i

if.then7.i.i:                                     ; preds = %out.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %133 = ptrtoint ptr %pgdat4.i.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store ptr %pgdat, ptr %pgdat4.i.i, align 4
  br label %mem_cgroup_lruvec.exit.i

mem_cgroup_lruvec.exit.i:                         ; preds = %if.then7.i.i, %out.i.i.mem_cgroup_lruvec.exit.i_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@balance_pgdat, %if.then.i10.i)) #13
          to label %if.end.i12.i [label %if.then.i10.i], !srcloc !567

if.then.i10.i:                                    ; preds = %mem_cgroup_lruvec.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i.i284 = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 12), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 12) to i32))
  %134 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 12), align 4
  %135 = call i32 @llvm.smax.i32(i32 %134, i32 0) #13
  br label %lruvec_page_state.exit.i

if.end.i12.i:                                     ; preds = %mem_cgroup_lruvec.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i11.i = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i.i, i32 0, i32 2, i32 0, i32 12
  %136 = ptrtoint ptr %arrayidx.i11.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load volatile i32, ptr %arrayidx.i11.i, align 4
  br label %lruvec_page_state.exit.i

lruvec_page_state.exit.i:                         ; preds = %if.end.i12.i, %if.then.i10.i
  %retval.0.i.i285 = phi i32 [ %135, %if.then.i10.i ], [ %137, %if.end.i12.i ]
  %refaults2.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i.i, i32 0, i32 5
  %138 = ptrtoint ptr %refaults2.i to i32
  call void @__asan_store4_noabort(i32 %138)
  store i32 %retval.0.i.i285, ptr %refaults2.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@balance_pgdat, %if.then.i13.i)) #13
          to label %if.end.i17.i [label %if.then.i13.i], !srcloc !567

if.then.i13.i:                                    ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i14.i = call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 13), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 13) to i32))
  %139 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 13), align 4
  %140 = call i32 @llvm.smax.i32(i32 %139, i32 0) #13
  br label %snapshot_refaults.exit

if.end.i17.i:                                     ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i16.i = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i.i, i32 0, i32 2, i32 0, i32 13
  %141 = ptrtoint ptr %arrayidx.i16.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load volatile i32, ptr %arrayidx.i16.i, align 4
  br label %snapshot_refaults.exit

snapshot_refaults.exit:                           ; preds = %if.end.i17.i, %if.then.i13.i
  %retval.0.i18.i = phi i32 [ %140, %if.then.i13.i ], [ %142, %if.end.i17.i ]
  %arrayidx5.i = getelementptr %struct.lruvec, ptr %lruvec.0.i.i, i32 0, i32 5, i32 1
  %143 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 %retval.0.i18.i, ptr %arrayidx5.i, align 4
  br label %__here170

__here170:                                        ; preds = %snapshot_refaults.exit
  call void @__fs_reclaim_release(i32 noundef ptrtoint (ptr blockaddress(@balance_pgdat, %__here170) to i32)) #13
  call void @psi_memstall_leave(ptr noundef nonnull %pflags) #13
  %144 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %task, align 8
  %reclaim_state42.i286 = getelementptr inbounds %struct.task_struct, ptr %145, i32 0, i32 149
  %146 = ptrtoint ptr %reclaim_state42.i286 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %reclaim_state42.i286, align 16
  %tobool43.not.i287 = icmp eq ptr %147, null
  br i1 %tobool43.not.i287, label %land.rhs53.i290, label %__here170.cleanup176_crit_edge

__here170.cleanup176_crit_edge:                   ; preds = %__here170
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup176

land.rhs53.i290:                                  ; preds = %__here170
  %.b108109.i289 = load i1, ptr @set_task_reclaim_state.__already_done.177, align 1
  br i1 %.b108109.i289, label %land.rhs53.i290.cleanup176_crit_edge, label %if.end91.sink.split.i293, !prof !557

land.rhs53.i290.cleanup176_crit_edge:             ; preds = %land.rhs53.i290
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup176

if.end91.sink.split.i293:                         ; preds = %land.rhs53.i290
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @set_task_reclaim_state.__already_done.177, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 186, i32 noundef 9, ptr noundef null) #13
  br label %cleanup176

cleanup176:                                       ; preds = %if.end91.sink.split.i293, %land.rhs53.i290.cleanup176_crit_edge, %__here170.cleanup176_crit_edge
  %148 = ptrtoint ptr %reclaim_state42.i286 to i32
  call void @__asan_store4_noabort(i32 %148)
  store ptr null, ptr %reclaim_state42.i286, align 16
  %149 = ptrtoint ptr %order1 to i32
  call void @__asan_load1_noabort(i32 %149)
  %150 = load i8, ptr %order1, align 2
  %conv175 = sext i8 %150 to i32
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %sc) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zone_boosts) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pflags) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr_soft_scanned) #13
  ret i32 %conv175
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @prepare_kswapd_sleep(ptr noundef %pgdat, i32 noundef %order, i32 noundef %highest_zoneidx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %head.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 10, i32 1
  %0 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %head.i, align 4
  %cmp.i.i.not = icmp eq ptr %1, %head.i
  br i1 %cmp.i.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %pfmemalloc_wait = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 10
  tail call void @__wake_up(ptr noundef %pfmemalloc_wait, i32 noundef 3, i32 noundef 0, ptr noundef null) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %kswapd_failures = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 17
  %2 = ptrtoint ptr %kswapd_failures to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %kswapd_failures, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %3)
  %cmp = icmp sgt i32 %3, 15
  br i1 %cmp, label %if.end.return_crit_edge, label %if.end3

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %highest_zoneidx)
  %cmp.not17.i = icmp slt i32 %highest_zoneidx, 0
  br i1 %cmp.not17.i, label %if.end3.if.then5_crit_edge, label %if.end3.for.body.i_crit_edge

if.end3.for.body.i_crit_edge:                     ; preds = %if.end3
  br label %for.body.i

if.end3.if.then5_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then5

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end3.for.body.i_crit_edge
  %mark.020.i = phi i32 [ %mark.1.i, %for.inc.i.for.body.i_crit_edge ], [ -1, %if.end3.for.body.i_crit_edge ]
  %i.018.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end3.for.body.i_crit_edge ]
  %managed_pages.i.i.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.018.i, i32 11
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %managed_pages.i.i.i, i32 noundef 4) #13
  %4 = ptrtoint ptr %managed_pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %managed_pages.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not.i = icmp eq i32 %5, 0
  br i1 %tobool.i.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %add.ptr.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.018.i
  %arrayidx.i = getelementptr [3 x i32], ptr %add.ptr.i, i32 0, i32 2
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i, align 8
  %watermark_boost.i = getelementptr %struct.zone, ptr %pgdat, i32 %i.018.i, i32 1
  %8 = ptrtoint ptr %watermark_boost.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %watermark_boost.i, align 4
  %add.i = add i32 %9, %7
  %call1.i = tail call zeroext i1 @zone_watermark_ok_safe(ptr noundef %add.ptr.i, i32 noundef %order, i32 noundef %add.i, i32 noundef %highest_zoneidx) #13
  br i1 %call1.i, label %if.end.i.if.then5_crit_edge, label %if.end.i.for.inc.i_crit_edge

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.end.i.if.then5_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then5

for.inc.i:                                        ; preds = %if.end.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %mark.1.i = phi i32 [ %add.i, %if.end.i.for.inc.i_crit_edge ], [ %mark.020.i, %for.body.i.for.inc.i_crit_edge ]
  %inc.i = add i32 %i.018.i, 1
  %cmp.not.i = icmp sgt i32 %inc.i, %highest_zoneidx
  br i1 %cmp.not.i, label %pgdat_balanced.exit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

pgdat_balanced.exit:                              ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %mark.1.i)
  %cmp4.i = icmp eq i32 %mark.1.i, -1
  br i1 %cmp4.i, label %pgdat_balanced.exit.if.then5_crit_edge, label %pgdat_balanced.exit.return_crit_edge

pgdat_balanced.exit.return_crit_edge:             ; preds = %pgdat_balanced.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %return

pgdat_balanced.exit.if.then5_crit_edge:           ; preds = %pgdat_balanced.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then5

if.then5:                                         ; preds = %pgdat_balanced.exit.if.then5_crit_edge, %if.end.i.if.then5_crit_edge, %if.end3.if.then5_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@prepare_kswapd_sleep, %if.then.i.i)) #13
          to label %if.end.i.i [label %if.then.i.i], !srcloc !567

if.then.i.i:                                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  %__lruvec.i.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 26
  br label %out.i.i

if.end.i.i:                                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %10 = load ptr, ptr @root_mem_cgroup, align 4
  %node_id.i.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %11 = ptrtoint ptr %node_id.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %node_id.i.i, align 64
  %arrayidx.i.i = getelementptr %struct.mem_cgroup, ptr %10, i32 0, i32 45, i32 %12
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx.i.i, align 4
  br label %out.i.i

out.i.i:                                          ; preds = %if.end.i.i, %if.then.i.i
  %lruvec.0.i.i = phi ptr [ %__lruvec.i.i, %if.then.i.i ], [ %14, %if.end.i.i ]
  %pgdat4.i.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i.i, i32 0, i32 7
  %15 = ptrtoint ptr %pgdat4.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pgdat4.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %16, %pgdat
  br i1 %cmp.not.i.i, label %out.i.i.clear_pgdat_congested.exit_crit_edge, label %if.then7.i.i, !prof !557

out.i.i.clear_pgdat_congested.exit_crit_edge:     ; preds = %out.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %clear_pgdat_congested.exit

if.then7.i.i:                                     ; preds = %out.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %17 = ptrtoint ptr %pgdat4.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %pgdat, ptr %pgdat4.i.i, align 4
  br label %clear_pgdat_congested.exit

clear_pgdat_congested.exit:                       ; preds = %if.then7.i.i, %out.i.i.clear_pgdat_congested.exit_crit_edge
  %flags.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i.i, i32 0, i32 6
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %flags.i) #13
  %flags1.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 27
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %flags1.i) #13
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %flags1.i) #13
  br label %return

return:                                           ; preds = %clear_pgdat_congested.exit, %pgdat_balanced.exit.return_crit_edge, %if.end.return_crit_edge
  %retval.0 = phi i1 [ true, %clear_pgdat_congested.exit ], [ true, %if.end.return_crit_edge ], [ false, %pgdat_balanced.exit.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @reset_isolation_suitable(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mm_vmscan_kswapd_sleep(i32 noundef %nid) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_kswapd_sleep, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mm_vmscan_kswapd_sleep, %do.body)) #13
          to label %if.end48 [label %do.body], !srcloc !567

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !557

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !676
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_kswapd_sleep, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %nid) #13
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !677
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !677
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !557

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #13
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !576
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mm_vmscan_kswapd_sleep, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mm_vmscan_kswapd_sleep.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @trace_mm_vmscan_kswapd_sleep.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.150, i32 noundef 64, ptr noundef nonnull @.str.22) #13
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !577
  %38 = tail call i32 @llvm.read_register.i32(metadata !547) #13
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_pgdat_percpu_threshold(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @calculate_normal_threshold(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @calculate_pressure_threshold(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @freezing_slow_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_check_no_locks_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__refrigerator(i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_memstall_enter(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__fs_reclaim_acquire(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @age_active_anon(ptr noundef %pgdat, ptr noundef readonly %sc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @total_swap_pages to i32))
  %0 = load i32, ptr @total_swap_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp.i = icmp sgt i32 %0, 0
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %if.end.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.end.i:                                         ; preds = %entry
  %node_id.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %1 = ptrtoint ptr %node_id.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %node_id.i, align 64
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @numa_demotion_enabled to i32))
  %3 = load i8, ptr @numa_demotion_enabled, align 1, !range !566
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i.i, label %if.end.i.cleanup_crit_edge, label %if.end.i.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end.i
  %tobool1.not.i.i = icmp eq ptr %sc, null
  br i1 %tobool1.not.i.i, label %if.end.i.i.can_age_anon_pages.exit_crit_edge, label %if.then2.i.i

if.end.i.i.can_age_anon_pages.exit_crit_edge:     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_age_anon_pages.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  %no_demotion.i.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 5
  %4 = ptrtoint ptr %no_demotion.i.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %bf.load.i.i = load i16, ptr %no_demotion.i.i, align 4
  %5 = and i16 %bf.load.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool3.not.i.i = icmp eq i16 %5, 0
  br i1 %tobool3.not.i.i, label %if.end5.i.i, label %if.then2.i.i.cleanup_crit_edge

if.then2.i.i.cleanup_crit_edge:                   ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5.i.i:                                      ; preds = %if.then2.i.i
  %target_mem_cgroup.i.i.i = getelementptr inbounds %struct.scan_control, ptr %sc, i32 0, i32 2
  %6 = ptrtoint ptr %target_mem_cgroup.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %target_mem_cgroup.i.i.i, align 4
  %tobool.i.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.i.not.i.i, label %if.end5.i.i.can_age_anon_pages.exit_crit_edge, label %if.end5.i.i.cleanup_crit_edge

if.end5.i.i.cleanup_crit_edge:                    ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end5.i.i.can_age_anon_pages.exit_crit_edge:    ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %can_age_anon_pages.exit

can_age_anon_pages.exit:                          ; preds = %if.end5.i.i.can_age_anon_pages.exit_crit_edge, %if.end.i.i.can_age_anon_pages.exit_crit_edge
  %call9.i.i = tail call i32 @next_demotion_node(i32 noundef %2) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call9.i.i)
  %cmp.i.i.not = icmp eq i32 %call9.i.i, -1
  br i1 %cmp.i.i.not, label %can_age_anon_pages.exit.cleanup_crit_edge, label %can_age_anon_pages.exit.if.end_crit_edge

can_age_anon_pages.exit.if.end_crit_edge:         ; preds = %can_age_anon_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

can_age_anon_pages.exit.cleanup_crit_edge:        ; preds = %can_age_anon_pages.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %can_age_anon_pages.exit.if.end_crit_edge, %entry.if.end_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@age_active_anon, %if.then.i)) #13
          to label %if.end.i15 [label %if.then.i], !srcloc !567

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %__lruvec.i = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 26
  br label %out.i

if.end.i15:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %8 = load ptr, ptr @root_mem_cgroup, align 4
  %node_id.i16 = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  %9 = ptrtoint ptr %node_id.i16 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %node_id.i16, align 64
  %arrayidx.i = getelementptr %struct.mem_cgroup, ptr %8, i32 0, i32 45, i32 %10
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i, align 4
  br label %out.i

out.i:                                            ; preds = %if.end.i15, %if.then.i
  %lruvec.0.i = phi ptr [ %__lruvec.i, %if.then.i ], [ %12, %if.end.i15 ]
  %pgdat4.i = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i, i32 0, i32 7
  %13 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pgdat4.i, align 4
  %cmp.not.i = icmp eq ptr %14, %pgdat
  br i1 %cmp.not.i, label %out.i.mem_cgroup_lruvec.exit_crit_edge, label %if.then7.i, !prof !557

out.i.mem_cgroup_lruvec.exit_crit_edge:           ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %mem_cgroup_lruvec.exit

if.then7.i:                                       ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  %15 = ptrtoint ptr %pgdat4.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %pgdat, ptr %pgdat4.i, align 4
  br label %mem_cgroup_lruvec.exit

mem_cgroup_lruvec.exit:                           ; preds = %if.then7.i, %out.i.mem_cgroup_lruvec.exit_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@age_active_anon, %if.then.i.i)) #13
          to label %if.end.i.i17 [label %if.then.i.i], !srcloc !567

if.then.i.i:                                      ; preds = %mem_cgroup_lruvec.exit
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @vm_node_stat, i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @vm_node_stat to i32))
  %16 = load volatile i32, ptr @vm_node_stat, align 4
  %17 = tail call i32 @llvm.smax.i32(i32 %16, i32 0) #13
  br label %lruvec_page_state.exit.i

if.end.i.i17:                                     ; preds = %mem_cgroup_lruvec.exit
  call void @__sanitizer_cov_trace_pc() #15
  %lruvec_stats.i.i = getelementptr inbounds %struct.mem_cgroup_per_node, ptr %lruvec.0.i, i32 0, i32 2
  %18 = ptrtoint ptr %lruvec_stats.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %lruvec_stats.i.i, align 4
  br label %lruvec_page_state.exit.i

lruvec_page_state.exit.i:                         ; preds = %if.end.i.i17, %if.then.i.i
  %retval.0.i.i = phi i32 [ %17, %if.then.i.i ], [ %19, %if.end.i.i17 ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@age_active_anon, %if.then.i12.i)) #13
          to label %if.end.i21.i [label %if.then.i12.i], !srcloc !567

if.then.i12.i:                                    ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %call.i.i.i.i.i17.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), i32 noundef 4) #13
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1) to i32))
  %20 = load volatile i32, ptr getelementptr inbounds ([40 x %struct.atomic_t], ptr @vm_node_stat, i32 0, i32 1), align 4
  %21 = tail call i32 @llvm.smax.i32(i32 %20, i32 0) #13
  br label %lruvec_page_state.exit23.i

if.end.i21.i:                                     ; preds = %lruvec_page_state.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i20.i = getelementptr %struct.mem_cgroup_per_node, ptr %lruvec.0.i, i32 0, i32 2, i32 0, i32 1
  %22 = ptrtoint ptr %arrayidx.i20.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i20.i, align 4
  br label %lruvec_page_state.exit23.i

lruvec_page_state.exit23.i:                       ; preds = %if.end.i21.i, %if.then.i12.i
  %retval.0.i22.i = phi i32 [ %21, %if.then.i12.i ], [ %23, %if.end.i21.i ]
  %add4.i = add i32 %retval.0.i22.i, %retval.0.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 262144, i32 %add4.i)
  %tobool.not.i = icmp ult i32 %add4.i, 262144
  br i1 %tobool.not.i, label %lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge, label %if.then.i18

lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge: ; preds = %lruvec_page_state.exit23.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %inactive_is_low.exit

if.then.i18:                                      ; preds = %lruvec_page_state.exit23.i
  call void @__sanitizer_cov_trace_pc() #15
  %shr.i = lshr i32 %add4.i, 18
  %mul.i = mul nuw nsw i32 %shr.i, 10
  %call5.i = tail call i32 @int_sqrt(i32 noundef %mul.i) #13
  br label %inactive_is_low.exit

inactive_is_low.exit:                             ; preds = %if.then.i18, %lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge
  %inactive_ratio.0.i = phi i32 [ %call5.i, %if.then.i18 ], [ 1, %lruvec_page_state.exit23.i.inactive_is_low.exit_crit_edge ]
  %mul6.i = mul i32 %inactive_ratio.0.i, %retval.0.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %mul6.i, i32 %retval.0.i22.i)
  %cmp.i19 = icmp ult i32 %mul6.i, %retval.0.i22.i
  br i1 %cmp.i19, label %if.end4, label %inactive_is_low.exit.cleanup_crit_edge

inactive_is_low.exit.cleanup_crit_edge:           ; preds = %inactive_is_low.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end4:                                          ; preds = %inactive_is_low.exit
  %call5 = tail call ptr @mem_cgroup_iter(ptr noundef null, ptr noundef null, ptr noundef null) #13
  %__lruvec.i21 = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 26
  %node_id.i25 = getelementptr inbounds %struct.pglist_data, ptr %pgdat, i32 0, i32 8
  br label %do.body

do.body:                                          ; preds = %mem_cgroup_lruvec.exit32.do.body_crit_edge, %if.end4
  %memcg.0 = phi ptr [ %call5, %if.end4 ], [ %call7, %mem_cgroup_lruvec.exit32.do.body_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_enabled_key, i32 1), ptr blockaddress(@age_active_anon, %out.i30)) #13
          to label %if.end.i24 [label %out.i30], !srcloc !567

if.end.i24:                                       ; preds = %do.body
  %tobool.not.i23 = icmp eq ptr %memcg.0, null
  br i1 %tobool.not.i23, label %if.then1.i, label %if.end.i24.if.end2.i_crit_edge

if.end.i24.if.end2.i_crit_edge:                   ; preds = %if.end.i24
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end2.i

if.then1.i:                                       ; preds = %if.end.i24
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @root_mem_cgroup to i32))
  %24 = load ptr, ptr @root_mem_cgroup, align 4
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.then1.i, %if.end.i24.if.end2.i_crit_edge
  %memcg.addr.0.i = phi ptr [ %memcg.0, %if.end.i24.if.end2.i_crit_edge ], [ %24, %if.then1.i ]
  %25 = ptrtoint ptr %node_id.i25 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %node_id.i25, align 64
  %arrayidx.i26 = getelementptr %struct.mem_cgroup, ptr %memcg.addr.0.i, i32 0, i32 45, i32 %26
  %27 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx.i26, align 4
  br label %out.i30

out.i30:                                          ; preds = %if.end2.i, %do.body
  %lruvec.0.i27 = phi ptr [ %28, %if.end2.i ], [ %__lruvec.i21, %do.body ]
  %pgdat4.i28 = getelementptr inbounds %struct.lruvec, ptr %lruvec.0.i27, i32 0, i32 7
  %29 = ptrtoint ptr %pgdat4.i28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pgdat4.i28, align 4
  %cmp.not.i29 = icmp eq ptr %30, %pgdat
  br i1 %cmp.not.i29, label %out.i30.mem_cgroup_lruvec.exit32_crit_edge, label %if.then7.i31, !prof !557

out.i30.mem_cgroup_lruvec.exit32_crit_edge:       ; preds = %out.i30
  call void @__sanitizer_cov_trace_pc() #15
  br label %mem_cgroup_lruvec.exit32

if.then7.i31:                                     ; preds = %out.i30
  call void @__sanitizer_cov_trace_pc() #15
  %31 = ptrtoint ptr %pgdat4.i28 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %pgdat, ptr %pgdat4.i28, align 4
  br label %mem_cgroup_lruvec.exit32

mem_cgroup_lruvec.exit32:                         ; preds = %if.then7.i31, %out.i30.mem_cgroup_lruvec.exit32_crit_edge
  tail call fastcc void @shrink_active_list(i32 noundef 32, ptr noundef %lruvec.0.i27, ptr noundef %sc, i32 noundef 1)
  %call7 = tail call ptr @mem_cgroup_iter(ptr noundef null, ptr noundef %memcg.0, ptr noundef null) #13
  %tobool.not = icmp eq ptr %call7, null
  br i1 %tobool.not, label %mem_cgroup_lruvec.exit32.cleanup_crit_edge, label %mem_cgroup_lruvec.exit32.do.body_crit_edge

mem_cgroup_lruvec.exit32.do.body_crit_edge:       ; preds = %mem_cgroup_lruvec.exit32
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

mem_cgroup_lruvec.exit32.cleanup_crit_edge:       ; preds = %mem_cgroup_lruvec.exit32
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

cleanup:                                          ; preds = %mem_cgroup_lruvec.exit32.cleanup_crit_edge, %inactive_is_low.exit.cleanup_crit_edge, %can_age_anon_pages.exit.cleanup_crit_edge, %if.end5.i.i.cleanup_crit_edge, %if.then2.i.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__fs_reclaim_release(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_memstall_leave(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @swap_setup() local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umin.i8(i8, i8) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #12

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #13

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #14 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 250)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #14 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 250)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #13 = { nounwind }
attributes #14 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #15 = { nomerge }
attributes #16 = { nounwind allocsize(0) }
attributes #17 = { nounwind readonly willreturn }
attributes #18 = { nounwind allocsize(2) }
attributes #19 = { cold nounwind }
attributes #20 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !102, !103, !104, !105, !106, !107, !108, !109, !110, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !150, !151, !152, !153, !154, !155, !156, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !210, !212, !214, !215, !216, !218, !220, !222, !224, !226, !228, !229, !230, !231, !233, !235, !237, !238, !239, !240, !242, !244, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !430, !431, !432, !434, !435, !436, !438, !439, !441, !442, !444, !445, !447, !448, !449, !450, !452, !453, !454, !455, !457, !458, !459, !460, !462, !464, !466, !468, !470, !472, !474, !476, !478, !480, !482, !484, !485, !486, !487, !489, !490, !491, !493, !495, !497, !499, !501, !503, !505, !507, !509, !511, !513, !515, !516, !517, !518, !519, !520, !521, !522, !523, !525, !527, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !545, !546}
!llvm.named.register.sp = !{!547}
!llvm.module.flags = !{!548, !549, !550, !551, !552, !553, !554, !555}
!llvm.ident = !{!556}

!0 = !{ptr @__tracepoint_mm_vmscan_kswapd_sleep, !1, !"__tracepoint_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!1 = !{!"../include/trace/events/vmscan.h", i32 49, i32 1}
!2 = !{ptr @__tracepoint_ptr_mm_vmscan_kswapd_sleep, !1, !"__tracepoint_ptr_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_mm_vmscan_kswapd_sleep, !1, !"__SCK__tp_func_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!4 = !{ptr @__tracepoint_mm_vmscan_kswapd_wake, !5, !"__tracepoint_mm_vmscan_kswapd_wake", i1 false, i1 false}
!5 = !{!"../include/trace/events/vmscan.h", i32 66, i32 1}
!6 = !{ptr @__tracepoint_ptr_mm_vmscan_kswapd_wake, !5, !"__tracepoint_ptr_mm_vmscan_kswapd_wake", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_mm_vmscan_kswapd_wake, !5, !"__SCK__tp_func_mm_vmscan_kswapd_wake", i1 false, i1 false}
!8 = !{ptr @__tracepoint_mm_vmscan_wakeup_kswapd, !9, !"__tracepoint_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!9 = !{!"../include/trace/events/vmscan.h", i32 89, i32 1}
!10 = !{ptr @__tracepoint_ptr_mm_vmscan_wakeup_kswapd, !9, !"__tracepoint_ptr_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_mm_vmscan_wakeup_kswapd, !9, !"__SCK__tp_func_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!12 = !{ptr @__tracepoint_mm_vmscan_direct_reclaim_begin, !13, !"__tracepoint_mm_vmscan_direct_reclaim_begin", i1 false, i1 false}
!13 = !{!"../include/trace/events/vmscan.h", i32 136, i32 1}
!14 = !{ptr @__tracepoint_ptr_mm_vmscan_direct_reclaim_begin, !13, !"__tracepoint_ptr_mm_vmscan_direct_reclaim_begin", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_mm_vmscan_direct_reclaim_begin, !13, !"__SCK__tp_func_mm_vmscan_direct_reclaim_begin", i1 false, i1 false}
!16 = !{ptr @__tracepoint_mm_vmscan_memcg_reclaim_begin, !17, !"__tracepoint_mm_vmscan_memcg_reclaim_begin", i1 false, i1 false}
!17 = !{!"../include/trace/events/vmscan.h", i32 144, i32 1}
!18 = !{ptr @__tracepoint_ptr_mm_vmscan_memcg_reclaim_begin, !17, !"__tracepoint_ptr_mm_vmscan_memcg_reclaim_begin", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_mm_vmscan_memcg_reclaim_begin, !17, !"__SCK__tp_func_mm_vmscan_memcg_reclaim_begin", i1 false, i1 false}
!20 = !{ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin, !21, !"__tracepoint_mm_vmscan_memcg_softlimit_reclaim_begin", i1 false, i1 false}
!21 = !{!"../include/trace/events/vmscan.h", i32 151, i32 1}
!22 = !{ptr @__tracepoint_ptr_mm_vmscan_memcg_softlimit_reclaim_begin, !21, !"__tracepoint_ptr_mm_vmscan_memcg_softlimit_reclaim_begin", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_mm_vmscan_memcg_softlimit_reclaim_begin, !21, !"__SCK__tp_func_mm_vmscan_memcg_softlimit_reclaim_begin", i1 false, i1 false}
!24 = !{ptr @__tracepoint_mm_vmscan_direct_reclaim_end, !25, !"__tracepoint_mm_vmscan_direct_reclaim_end", i1 false, i1 false}
!25 = !{!"../include/trace/events/vmscan.h", i32 176, i32 1}
!26 = !{ptr @__tracepoint_ptr_mm_vmscan_direct_reclaim_end, !25, !"__tracepoint_ptr_mm_vmscan_direct_reclaim_end", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_mm_vmscan_direct_reclaim_end, !25, !"__SCK__tp_func_mm_vmscan_direct_reclaim_end", i1 false, i1 false}
!28 = !{ptr @__tracepoint_mm_vmscan_memcg_reclaim_end, !29, !"__tracepoint_mm_vmscan_memcg_reclaim_end", i1 false, i1 false}
!29 = !{!"../include/trace/events/vmscan.h", i32 184, i32 1}
!30 = !{ptr @__tracepoint_ptr_mm_vmscan_memcg_reclaim_end, !29, !"__tracepoint_ptr_mm_vmscan_memcg_reclaim_end", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_mm_vmscan_memcg_reclaim_end, !29, !"__SCK__tp_func_mm_vmscan_memcg_reclaim_end", i1 false, i1 false}
!32 = !{ptr @__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end, !33, !"__tracepoint_mm_vmscan_memcg_softlimit_reclaim_end", i1 false, i1 false}
!33 = !{!"../include/trace/events/vmscan.h", i32 191, i32 1}
!34 = !{ptr @__tracepoint_ptr_mm_vmscan_memcg_softlimit_reclaim_end, !33, !"__tracepoint_ptr_mm_vmscan_memcg_softlimit_reclaim_end", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_mm_vmscan_memcg_softlimit_reclaim_end, !33, !"__SCK__tp_func_mm_vmscan_memcg_softlimit_reclaim_end", i1 false, i1 false}
!36 = !{ptr @__tracepoint_mm_shrink_slab_start, !37, !"__tracepoint_mm_shrink_slab_start", i1 false, i1 false}
!37 = !{!"../include/trace/events/vmscan.h", i32 199, i32 1}
!38 = !{ptr @__tracepoint_ptr_mm_shrink_slab_start, !37, !"__tracepoint_ptr_mm_shrink_slab_start", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_mm_shrink_slab_start, !37, !"__SCK__tp_func_mm_shrink_slab_start", i1 false, i1 false}
!40 = !{ptr @__tracepoint_mm_shrink_slab_end, !41, !"__tracepoint_mm_shrink_slab_end", i1 false, i1 false}
!41 = !{!"../include/trace/events/vmscan.h", i32 244, i32 1}
!42 = !{ptr @__tracepoint_ptr_mm_shrink_slab_end, !41, !"__tracepoint_ptr_mm_shrink_slab_end", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_mm_shrink_slab_end, !41, !"__SCK__tp_func_mm_shrink_slab_end", i1 false, i1 false}
!44 = !{ptr @__tracepoint_mm_vmscan_lru_isolate, !45, !"__tracepoint_mm_vmscan_lru_isolate", i1 false, i1 false}
!45 = !{!"../include/trace/events/vmscan.h", i32 281, i32 1}
!46 = !{ptr @__tracepoint_ptr_mm_vmscan_lru_isolate, !45, !"__tracepoint_ptr_mm_vmscan_lru_isolate", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_mm_vmscan_lru_isolate, !45, !"__SCK__tp_func_mm_vmscan_lru_isolate", i1 false, i1 false}
!48 = !{ptr @__tracepoint_mm_vmscan_writepage, !49, !"__tracepoint_mm_vmscan_writepage", i1 false, i1 false}
!49 = !{!"../include/trace/events/vmscan.h", i32 330, i32 1}
!50 = !{ptr @__tracepoint_ptr_mm_vmscan_writepage, !49, !"__tracepoint_ptr_mm_vmscan_writepage", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_mm_vmscan_writepage, !49, !"__SCK__tp_func_mm_vmscan_writepage", i1 false, i1 false}
!52 = !{ptr @__tracepoint_mm_vmscan_lru_shrink_inactive, !53, !"__tracepoint_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!53 = !{!"../include/trace/events/vmscan.h", i32 353, i32 1}
!54 = !{ptr @__tracepoint_ptr_mm_vmscan_lru_shrink_inactive, !53, !"__tracepoint_ptr_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_mm_vmscan_lru_shrink_inactive, !53, !"__SCK__tp_func_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!56 = !{ptr @__tracepoint_mm_vmscan_lru_shrink_active, !57, !"__tracepoint_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!57 = !{!"../include/trace/events/vmscan.h", i32 404, i32 1}
!58 = !{ptr @__tracepoint_ptr_mm_vmscan_lru_shrink_active, !57, !"__tracepoint_ptr_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func_mm_vmscan_lru_shrink_active, !57, !"__SCK__tp_func_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!60 = !{ptr @__tracepoint_mm_vmscan_node_reclaim_begin, !61, !"__tracepoint_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!61 = !{!"../include/trace/events/vmscan.h", i32 440, i32 1}
!62 = !{ptr @__tracepoint_ptr_mm_vmscan_node_reclaim_begin, !61, !"__tracepoint_ptr_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_mm_vmscan_node_reclaim_begin, !61, !"__SCK__tp_func_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!64 = !{ptr @__tracepoint_mm_vmscan_node_reclaim_end, !65, !"__tracepoint_mm_vmscan_node_reclaim_end", i1 false, i1 false}
!65 = !{!"../include/trace/events/vmscan.h", i32 464, i32 1}
!66 = !{ptr @__tracepoint_ptr_mm_vmscan_node_reclaim_end, !65, !"__tracepoint_ptr_mm_vmscan_node_reclaim_end", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_mm_vmscan_node_reclaim_end, !65, !"__SCK__tp_func_mm_vmscan_node_reclaim_end", i1 false, i1 false}
!68 = !{ptr @__tracepoint_mm_vmscan_throttled, !69, !"__tracepoint_mm_vmscan_throttled", i1 false, i1 false}
!69 = !{!"../include/trace/events/vmscan.h", i32 471, i32 1}
!70 = !{ptr @__tracepoint_ptr_mm_vmscan_throttled, !69, !"__tracepoint_ptr_mm_vmscan_throttled", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_mm_vmscan_throttled, !69, !"__SCK__tp_func_mm_vmscan_throttled", i1 false, i1 false}
!72 = !{ptr @.str, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../include/trace/events/mmflags.h", i32 274, i32 1}
!74 = !{ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, !73, !"__TRACE_SYSTEM_COMPACT_SKIPPED", i1 false, i1 false}
!75 = !{ptr @TRACE_SYSTEM_COMPACT_SKIPPED, !73, !"TRACE_SYSTEM_COMPACT_SKIPPED", i1 false, i1 false}
!76 = !{ptr @.str.1, !73, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, !73, !"__TRACE_SYSTEM_COMPACT_DEFERRED", i1 false, i1 false}
!78 = !{ptr @TRACE_SYSTEM_COMPACT_DEFERRED, !73, !"TRACE_SYSTEM_COMPACT_DEFERRED", i1 false, i1 false}
!79 = !{ptr @.str.2, !73, !"<string literal>", i1 false, i1 false}
!80 = !{ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, !73, !"__TRACE_SYSTEM_COMPACT_CONTINUE", i1 false, i1 false}
!81 = !{ptr @TRACE_SYSTEM_COMPACT_CONTINUE, !73, !"TRACE_SYSTEM_COMPACT_CONTINUE", i1 false, i1 false}
!82 = !{ptr @.str.3, !73, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, !73, !"__TRACE_SYSTEM_COMPACT_SUCCESS", i1 false, i1 false}
!84 = !{ptr @TRACE_SYSTEM_COMPACT_SUCCESS, !73, !"TRACE_SYSTEM_COMPACT_SUCCESS", i1 false, i1 false}
!85 = !{ptr @.str.4, !73, !"<string literal>", i1 false, i1 false}
!86 = !{ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, !73, !"__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED", i1 false, i1 false}
!87 = !{ptr @TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, !73, !"TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED", i1 false, i1 false}
!88 = !{ptr @.str.5, !73, !"<string literal>", i1 false, i1 false}
!89 = !{ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, !73, !"__TRACE_SYSTEM_COMPACT_COMPLETE", i1 false, i1 false}
!90 = !{ptr @TRACE_SYSTEM_COMPACT_COMPLETE, !73, !"TRACE_SYSTEM_COMPACT_COMPLETE", i1 false, i1 false}
!91 = !{ptr @.str.6, !73, !"<string literal>", i1 false, i1 false}
!92 = !{ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, !73, !"__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE", i1 false, i1 false}
!93 = !{ptr @TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, !73, !"TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE", i1 false, i1 false}
!94 = !{ptr @.str.7, !73, !"<string literal>", i1 false, i1 false}
!95 = !{ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, !73, !"__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE", i1 false, i1 false}
!96 = !{ptr @TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, !73, !"TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE", i1 false, i1 false}
!97 = !{ptr @.str.8, !73, !"<string literal>", i1 false, i1 false}
!98 = !{ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, !73, !"__TRACE_SYSTEM_COMPACT_CONTENDED", i1 false, i1 false}
!99 = !{ptr @TRACE_SYSTEM_COMPACT_CONTENDED, !73, !"TRACE_SYSTEM_COMPACT_CONTENDED", i1 false, i1 false}
!100 = !{ptr @.str.9, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../include/trace/events/mmflags.h", i32 275, i32 1}
!102 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, !101, !"__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL", i1 false, i1 false}
!103 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, !101, !"TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL", i1 false, i1 false}
!104 = !{ptr @.str.10, !101, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, !101, !"__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT", i1 false, i1 false}
!106 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, !101, !"TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT", i1 false, i1 false}
!107 = !{ptr @.str.11, !101, !"<string literal>", i1 false, i1 false}
!108 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, !101, !"__TRACE_SYSTEM_COMPACT_PRIO_ASYNC", i1 false, i1 false}
!109 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_ASYNC, !101, !"TRACE_SYSTEM_COMPACT_PRIO_ASYNC", i1 false, i1 false}
!110 = !{ptr @.str.12, !111, !"<string literal>", i1 false, i1 false}
!111 = !{!"../include/trace/events/mmflags.h", i32 277, i32 1}
!112 = !{ptr @__TRACE_SYSTEM_ZONE_DMA, !111, !"__TRACE_SYSTEM_ZONE_DMA", i1 false, i1 false}
!113 = !{ptr @TRACE_SYSTEM_ZONE_DMA, !111, !"TRACE_SYSTEM_ZONE_DMA", i1 false, i1 false}
!114 = !{ptr @.str.13, !111, !"<string literal>", i1 false, i1 false}
!115 = !{ptr @__TRACE_SYSTEM_ZONE_NORMAL, !111, !"__TRACE_SYSTEM_ZONE_NORMAL", i1 false, i1 false}
!116 = !{ptr @TRACE_SYSTEM_ZONE_NORMAL, !111, !"TRACE_SYSTEM_ZONE_NORMAL", i1 false, i1 false}
!117 = !{ptr @.str.14, !111, !"<string literal>", i1 false, i1 false}
!118 = !{ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, !111, !"__TRACE_SYSTEM_ZONE_HIGHMEM", i1 false, i1 false}
!119 = !{ptr @TRACE_SYSTEM_ZONE_HIGHMEM, !111, !"TRACE_SYSTEM_ZONE_HIGHMEM", i1 false, i1 false}
!120 = !{ptr @.str.15, !111, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @__TRACE_SYSTEM_ZONE_MOVABLE, !111, !"__TRACE_SYSTEM_ZONE_MOVABLE", i1 false, i1 false}
!122 = !{ptr @TRACE_SYSTEM_ZONE_MOVABLE, !111, !"TRACE_SYSTEM_ZONE_MOVABLE", i1 false, i1 false}
!123 = !{ptr @.str.16, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../include/trace/events/mmflags.h", i32 278, i32 1}
!125 = !{ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, !124, !"__TRACE_SYSTEM_LRU_INACTIVE_ANON", i1 false, i1 false}
!126 = !{ptr @TRACE_SYSTEM_LRU_INACTIVE_ANON, !124, !"TRACE_SYSTEM_LRU_INACTIVE_ANON", i1 false, i1 false}
!127 = !{ptr @.str.17, !124, !"<string literal>", i1 false, i1 false}
!128 = !{ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, !124, !"__TRACE_SYSTEM_LRU_ACTIVE_ANON", i1 false, i1 false}
!129 = !{ptr @TRACE_SYSTEM_LRU_ACTIVE_ANON, !124, !"TRACE_SYSTEM_LRU_ACTIVE_ANON", i1 false, i1 false}
!130 = !{ptr @.str.18, !124, !"<string literal>", i1 false, i1 false}
!131 = !{ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, !124, !"__TRACE_SYSTEM_LRU_INACTIVE_FILE", i1 false, i1 false}
!132 = !{ptr @TRACE_SYSTEM_LRU_INACTIVE_FILE, !124, !"TRACE_SYSTEM_LRU_INACTIVE_FILE", i1 false, i1 false}
!133 = !{ptr @.str.19, !124, !"<string literal>", i1 false, i1 false}
!134 = !{ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, !124, !"__TRACE_SYSTEM_LRU_ACTIVE_FILE", i1 false, i1 false}
!135 = !{ptr @TRACE_SYSTEM_LRU_ACTIVE_FILE, !124, !"TRACE_SYSTEM_LRU_ACTIVE_FILE", i1 false, i1 false}
!136 = !{ptr @.str.20, !124, !"<string literal>", i1 false, i1 false}
!137 = !{ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, !124, !"__TRACE_SYSTEM_LRU_UNEVICTABLE", i1 false, i1 false}
!138 = !{ptr @TRACE_SYSTEM_LRU_UNEVICTABLE, !124, !"TRACE_SYSTEM_LRU_UNEVICTABLE", i1 false, i1 false}
!139 = !{ptr @event_class_mm_vmscan_kswapd_sleep, !1, !"event_class_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!140 = !{ptr @event_mm_vmscan_kswapd_sleep, !1, !"event_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!141 = !{ptr @__event_mm_vmscan_kswapd_sleep, !1, !"__event_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!142 = !{ptr @event_class_mm_vmscan_kswapd_wake, !5, !"event_class_mm_vmscan_kswapd_wake", i1 false, i1 false}
!143 = !{ptr @event_mm_vmscan_kswapd_wake, !5, !"event_mm_vmscan_kswapd_wake", i1 false, i1 false}
!144 = !{ptr @__event_mm_vmscan_kswapd_wake, !5, !"__event_mm_vmscan_kswapd_wake", i1 false, i1 false}
!145 = !{ptr @event_class_mm_vmscan_wakeup_kswapd, !9, !"event_class_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!146 = !{ptr @event_mm_vmscan_wakeup_kswapd, !9, !"event_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!147 = !{ptr @__event_mm_vmscan_wakeup_kswapd, !9, !"__event_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!148 = !{ptr @event_class_mm_vmscan_direct_reclaim_begin_template, !149, !"event_class_mm_vmscan_direct_reclaim_begin_template", i1 false, i1 false}
!149 = !{!"../include/trace/events/vmscan.h", i32 115, i32 1}
!150 = !{ptr @event_mm_vmscan_direct_reclaim_begin, !13, !"event_mm_vmscan_direct_reclaim_begin", i1 false, i1 false}
!151 = !{ptr @__event_mm_vmscan_direct_reclaim_begin, !13, !"__event_mm_vmscan_direct_reclaim_begin", i1 false, i1 false}
!152 = !{ptr @event_mm_vmscan_memcg_reclaim_begin, !17, !"event_mm_vmscan_memcg_reclaim_begin", i1 false, i1 false}
!153 = !{ptr @__event_mm_vmscan_memcg_reclaim_begin, !17, !"__event_mm_vmscan_memcg_reclaim_begin", i1 false, i1 false}
!154 = !{ptr @event_mm_vmscan_memcg_softlimit_reclaim_begin, !21, !"event_mm_vmscan_memcg_softlimit_reclaim_begin", i1 false, i1 false}
!155 = !{ptr @__event_mm_vmscan_memcg_softlimit_reclaim_begin, !21, !"__event_mm_vmscan_memcg_softlimit_reclaim_begin", i1 false, i1 false}
!156 = !{ptr @event_class_mm_vmscan_direct_reclaim_end_template, !157, !"event_class_mm_vmscan_direct_reclaim_end_template", i1 false, i1 false}
!157 = !{!"../include/trace/events/vmscan.h", i32 159, i32 1}
!158 = !{ptr @event_mm_vmscan_direct_reclaim_end, !25, !"event_mm_vmscan_direct_reclaim_end", i1 false, i1 false}
!159 = !{ptr @__event_mm_vmscan_direct_reclaim_end, !25, !"__event_mm_vmscan_direct_reclaim_end", i1 false, i1 false}
!160 = !{ptr @event_mm_vmscan_memcg_reclaim_end, !29, !"event_mm_vmscan_memcg_reclaim_end", i1 false, i1 false}
!161 = !{ptr @__event_mm_vmscan_memcg_reclaim_end, !29, !"__event_mm_vmscan_memcg_reclaim_end", i1 false, i1 false}
!162 = !{ptr @event_mm_vmscan_memcg_softlimit_reclaim_end, !33, !"event_mm_vmscan_memcg_softlimit_reclaim_end", i1 false, i1 false}
!163 = !{ptr @__event_mm_vmscan_memcg_softlimit_reclaim_end, !33, !"__event_mm_vmscan_memcg_softlimit_reclaim_end", i1 false, i1 false}
!164 = !{ptr @event_class_mm_shrink_slab_start, !37, !"event_class_mm_shrink_slab_start", i1 false, i1 false}
!165 = !{ptr @event_mm_shrink_slab_start, !37, !"event_mm_shrink_slab_start", i1 false, i1 false}
!166 = !{ptr @__event_mm_shrink_slab_start, !37, !"__event_mm_shrink_slab_start", i1 false, i1 false}
!167 = !{ptr @event_class_mm_shrink_slab_end, !41, !"event_class_mm_shrink_slab_end", i1 false, i1 false}
!168 = !{ptr @event_mm_shrink_slab_end, !41, !"event_mm_shrink_slab_end", i1 false, i1 false}
!169 = !{ptr @__event_mm_shrink_slab_end, !41, !"__event_mm_shrink_slab_end", i1 false, i1 false}
!170 = !{ptr @event_class_mm_vmscan_lru_isolate, !45, !"event_class_mm_vmscan_lru_isolate", i1 false, i1 false}
!171 = !{ptr @event_mm_vmscan_lru_isolate, !45, !"event_mm_vmscan_lru_isolate", i1 false, i1 false}
!172 = !{ptr @__event_mm_vmscan_lru_isolate, !45, !"__event_mm_vmscan_lru_isolate", i1 false, i1 false}
!173 = !{ptr @event_class_mm_vmscan_writepage, !49, !"event_class_mm_vmscan_writepage", i1 false, i1 false}
!174 = !{ptr @event_mm_vmscan_writepage, !49, !"event_mm_vmscan_writepage", i1 false, i1 false}
!175 = !{ptr @__event_mm_vmscan_writepage, !49, !"__event_mm_vmscan_writepage", i1 false, i1 false}
!176 = !{ptr @event_class_mm_vmscan_lru_shrink_inactive, !53, !"event_class_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!177 = !{ptr @event_mm_vmscan_lru_shrink_inactive, !53, !"event_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!178 = !{ptr @__event_mm_vmscan_lru_shrink_inactive, !53, !"__event_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!179 = !{ptr @event_class_mm_vmscan_lru_shrink_active, !57, !"event_class_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!180 = !{ptr @event_mm_vmscan_lru_shrink_active, !57, !"event_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!181 = !{ptr @__event_mm_vmscan_lru_shrink_active, !57, !"__event_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!182 = !{ptr @event_class_mm_vmscan_node_reclaim_begin, !61, !"event_class_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!183 = !{ptr @event_mm_vmscan_node_reclaim_begin, !61, !"event_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!184 = !{ptr @__event_mm_vmscan_node_reclaim_begin, !61, !"__event_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!185 = !{ptr @event_mm_vmscan_node_reclaim_end, !65, !"event_mm_vmscan_node_reclaim_end", i1 false, i1 false}
!186 = !{ptr @__event_mm_vmscan_node_reclaim_end, !65, !"__event_mm_vmscan_node_reclaim_end", i1 false, i1 false}
!187 = !{ptr @event_class_mm_vmscan_throttled, !69, !"event_class_mm_vmscan_throttled", i1 false, i1 false}
!188 = !{ptr @event_mm_vmscan_throttled, !69, !"event_mm_vmscan_throttled", i1 false, i1 false}
!189 = !{ptr @__event_mm_vmscan_throttled, !69, !"__event_mm_vmscan_throttled", i1 false, i1 false}
!190 = !{ptr @__bpf_trace_tp_map_mm_vmscan_kswapd_sleep, !1, !"__bpf_trace_tp_map_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!191 = !{ptr @__bpf_trace_tp_map_mm_vmscan_kswapd_wake, !5, !"__bpf_trace_tp_map_mm_vmscan_kswapd_wake", i1 false, i1 false}
!192 = !{ptr @__bpf_trace_tp_map_mm_vmscan_wakeup_kswapd, !9, !"__bpf_trace_tp_map_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!193 = !{ptr @__bpf_trace_tp_map_mm_vmscan_direct_reclaim_begin, !13, !"__bpf_trace_tp_map_mm_vmscan_direct_reclaim_begin", i1 false, i1 false}
!194 = !{ptr @__bpf_trace_tp_map_mm_vmscan_memcg_reclaim_begin, !17, !"__bpf_trace_tp_map_mm_vmscan_memcg_reclaim_begin", i1 false, i1 false}
!195 = !{ptr @__bpf_trace_tp_map_mm_vmscan_memcg_softlimit_reclaim_begin, !21, !"__bpf_trace_tp_map_mm_vmscan_memcg_softlimit_reclaim_begin", i1 false, i1 false}
!196 = !{ptr @__bpf_trace_tp_map_mm_vmscan_direct_reclaim_end, !25, !"__bpf_trace_tp_map_mm_vmscan_direct_reclaim_end", i1 false, i1 false}
!197 = !{ptr @__bpf_trace_tp_map_mm_vmscan_memcg_reclaim_end, !29, !"__bpf_trace_tp_map_mm_vmscan_memcg_reclaim_end", i1 false, i1 false}
!198 = !{ptr @__bpf_trace_tp_map_mm_vmscan_memcg_softlimit_reclaim_end, !33, !"__bpf_trace_tp_map_mm_vmscan_memcg_softlimit_reclaim_end", i1 false, i1 false}
!199 = !{ptr @__bpf_trace_tp_map_mm_shrink_slab_start, !37, !"__bpf_trace_tp_map_mm_shrink_slab_start", i1 false, i1 false}
!200 = !{ptr @__bpf_trace_tp_map_mm_shrink_slab_end, !41, !"__bpf_trace_tp_map_mm_shrink_slab_end", i1 false, i1 false}
!201 = !{ptr @__bpf_trace_tp_map_mm_vmscan_lru_isolate, !45, !"__bpf_trace_tp_map_mm_vmscan_lru_isolate", i1 false, i1 false}
!202 = !{ptr @__bpf_trace_tp_map_mm_vmscan_writepage, !49, !"__bpf_trace_tp_map_mm_vmscan_writepage", i1 false, i1 false}
!203 = !{ptr @__bpf_trace_tp_map_mm_vmscan_lru_shrink_inactive, !53, !"__bpf_trace_tp_map_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!204 = !{ptr @__bpf_trace_tp_map_mm_vmscan_lru_shrink_active, !57, !"__bpf_trace_tp_map_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!205 = !{ptr @__bpf_trace_tp_map_mm_vmscan_node_reclaim_begin, !61, !"__bpf_trace_tp_map_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!206 = !{ptr @__bpf_trace_tp_map_mm_vmscan_node_reclaim_end, !65, !"__bpf_trace_tp_map_mm_vmscan_node_reclaim_end", i1 false, i1 false}
!207 = !{ptr @__bpf_trace_tp_map_mm_vmscan_throttled, !69, !"__bpf_trace_tp_map_mm_vmscan_throttled", i1 false, i1 false}
!208 = !{ptr @vm_swappiness, !209, !"vm_swappiness", i1 false, i1 false}
!209 = !{!"../mm/vmscan.c", i32 177, i32 5}
!210 = distinct !{null, !211, !"__warned", i1 false, i1 false}
!211 = !{!"../mm/vmscan.c", i32 261, i32 10}
!212 = distinct !{null, !213, !"__warned", i1 false, i1 false}
!213 = !{!"../mm/vmscan.c", i32 342, i32 10}
!214 = !{ptr @.str.21, !213, !"<string literal>", i1 false, i1 false}
!215 = !{ptr @.str.22, !213, !"<string literal>", i1 false, i1 false}
!216 = !{ptr @__ksymtab_register_shrinker, !217, !"__ksymtab_register_shrinker", i1 false, i1 false}
!217 = !{!"../mm/vmscan.c", i32 668, i32 1}
!218 = !{ptr @__ksymtab_unregister_shrinker, !219, !"__ksymtab_unregister_shrinker", i1 false, i1 false}
!219 = !{!"../mm/vmscan.c", i32 688, i32 1}
!220 = !{ptr @__ksymtab_synchronize_shrinkers, !221, !"__ksymtab_synchronize_shrinkers", i1 false, i1 false}
!221 = !{!"../mm/vmscan.c", i32 703, i32 1}
!222 = distinct !{null, !223, !"__already_done", i1 false, i1 false}
!223 = !{!"../mm/vmscan.c", i32 1109, i32 3}
!224 = !{ptr @.str.23, !225, !"<string literal>", i1 false, i1 false}
!225 = !{!"../mm/vmscan.c", i32 2244, i32 2}
!226 = !{ptr @.str.24, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../mm/vmscan.c", i32 2245, i32 2}
!228 = !{ptr @isolate_lru_page._rs, !227, !"_rs", i1 false, i1 false}
!229 = !{ptr @__func__.isolate_lru_page, !227, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @.str.25, !227, !"<string literal>", i1 false, i1 false}
!231 = distinct !{null, !232, !"__already_done", i1 false, i1 false}
!232 = !{!"../mm/vmscan.c", i32 3851, i32 2}
!233 = !{ptr @.str.26, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../mm/vmscan.c", i32 4635, i32 18}
!235 = !{ptr @.str.27, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../mm/vmscan.c", i32 4639, i32 3}
!237 = !{ptr @.str.28, !236, !"<string literal>", i1 false, i1 false}
!238 = !{ptr @kswapd_run._entry, !236, !"_entry", i1 false, i1 false}
!239 = !{ptr @kswapd_run._entry_ptr, !236, !"_entry_ptr", i1 false, i1 false}
!240 = !{ptr @__initcall__kmod_vmscan__477_4668_kswapd_init6, !241, !"__initcall__kmod_vmscan__477_4668_kswapd_init6", i1 false, i1 false}
!241 = !{!"../mm/vmscan.c", i32 4668, i32 1}
!242 = !{ptr @__ksymtab_check_move_unevictable_pages, !243, !"__ksymtab_check_move_unevictable_pages", i1 false, i1 false}
!243 = !{!"../mm/vmscan.c", i32 4893, i32 1}
!244 = !{ptr @shrinker_nr_max, !245, !"shrinker_nr_max", i1 false, i1 false}
!245 = !{!"../mm/vmscan.c", i32 195, i32 12}
!246 = !{ptr @__tpstrtab_mm_vmscan_kswapd_sleep, !1, !"__tpstrtab_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!247 = !{ptr @__tpstrtab_mm_vmscan_kswapd_wake, !5, !"__tpstrtab_mm_vmscan_kswapd_wake", i1 false, i1 false}
!248 = !{ptr @__tpstrtab_mm_vmscan_wakeup_kswapd, !9, !"__tpstrtab_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!249 = !{ptr @__tpstrtab_mm_vmscan_direct_reclaim_begin, !13, !"__tpstrtab_mm_vmscan_direct_reclaim_begin", i1 false, i1 false}
!250 = !{ptr @__tpstrtab_mm_vmscan_memcg_reclaim_begin, !17, !"__tpstrtab_mm_vmscan_memcg_reclaim_begin", i1 false, i1 false}
!251 = !{ptr @__tpstrtab_mm_vmscan_memcg_softlimit_reclaim_begin, !21, !"__tpstrtab_mm_vmscan_memcg_softlimit_reclaim_begin", i1 false, i1 false}
!252 = !{ptr @__tpstrtab_mm_vmscan_direct_reclaim_end, !25, !"__tpstrtab_mm_vmscan_direct_reclaim_end", i1 false, i1 false}
!253 = !{ptr @__tpstrtab_mm_vmscan_memcg_reclaim_end, !29, !"__tpstrtab_mm_vmscan_memcg_reclaim_end", i1 false, i1 false}
!254 = !{ptr @__tpstrtab_mm_vmscan_memcg_softlimit_reclaim_end, !33, !"__tpstrtab_mm_vmscan_memcg_softlimit_reclaim_end", i1 false, i1 false}
!255 = !{ptr @__tpstrtab_mm_shrink_slab_start, !37, !"__tpstrtab_mm_shrink_slab_start", i1 false, i1 false}
!256 = !{ptr @__tpstrtab_mm_shrink_slab_end, !41, !"__tpstrtab_mm_shrink_slab_end", i1 false, i1 false}
!257 = !{ptr @__tpstrtab_mm_vmscan_lru_isolate, !45, !"__tpstrtab_mm_vmscan_lru_isolate", i1 false, i1 false}
!258 = !{ptr @__tpstrtab_mm_vmscan_writepage, !49, !"__tpstrtab_mm_vmscan_writepage", i1 false, i1 false}
!259 = !{ptr @__tpstrtab_mm_vmscan_lru_shrink_inactive, !53, !"__tpstrtab_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!260 = !{ptr @__tpstrtab_mm_vmscan_lru_shrink_active, !57, !"__tpstrtab_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!261 = !{ptr @__tpstrtab_mm_vmscan_node_reclaim_begin, !61, !"__tpstrtab_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!262 = !{ptr @__tpstrtab_mm_vmscan_node_reclaim_end, !65, !"__tpstrtab_mm_vmscan_node_reclaim_end", i1 false, i1 false}
!263 = !{ptr @__tpstrtab_mm_vmscan_throttled, !69, !"__tpstrtab_mm_vmscan_throttled", i1 false, i1 false}
!264 = !{ptr @str__vmscan__trace_system_name, !265, !"str__vmscan__trace_system_name", i1 false, i1 false}
!265 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!266 = !{ptr @.str.29, !1, !"<string literal>", i1 false, i1 false}
!267 = !{ptr @.str.30, !1, !"<string literal>", i1 false, i1 false}
!268 = !{ptr @trace_event_fields_mm_vmscan_kswapd_sleep, !1, !"trace_event_fields_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!269 = !{ptr @trace_event_type_funcs_mm_vmscan_kswapd_sleep, !1, !"trace_event_type_funcs_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!270 = !{ptr @.str.31, !1, !"<string literal>", i1 false, i1 false}
!271 = !{ptr @print_fmt_mm_vmscan_kswapd_sleep, !1, !"print_fmt_mm_vmscan_kswapd_sleep", i1 false, i1 false}
!272 = !{ptr @.str.32, !5, !"<string literal>", i1 false, i1 false}
!273 = !{ptr @.str.33, !5, !"<string literal>", i1 false, i1 false}
!274 = !{ptr @trace_event_fields_mm_vmscan_kswapd_wake, !5, !"trace_event_fields_mm_vmscan_kswapd_wake", i1 false, i1 false}
!275 = !{ptr @trace_event_type_funcs_mm_vmscan_kswapd_wake, !5, !"trace_event_type_funcs_mm_vmscan_kswapd_wake", i1 false, i1 false}
!276 = !{ptr @.str.34, !5, !"<string literal>", i1 false, i1 false}
!277 = !{ptr @print_fmt_mm_vmscan_kswapd_wake, !5, !"print_fmt_mm_vmscan_kswapd_wake", i1 false, i1 false}
!278 = !{ptr @.str.35, !9, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @.str.36, !9, !"<string literal>", i1 false, i1 false}
!280 = !{ptr @trace_event_fields_mm_vmscan_wakeup_kswapd, !9, !"trace_event_fields_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!281 = !{ptr @trace_event_type_funcs_mm_vmscan_wakeup_kswapd, !9, !"trace_event_type_funcs_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!282 = !{ptr @.str.37, !9, !"<string literal>", i1 false, i1 false}
!283 = !{ptr @.str.38, !9, !"<string literal>", i1 false, i1 false}
!284 = !{ptr @.str.39, !9, !"<string literal>", i1 false, i1 false}
!285 = !{ptr @.str.40, !9, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @.str.41, !9, !"<string literal>", i1 false, i1 false}
!287 = !{ptr @.str.42, !9, !"<string literal>", i1 false, i1 false}
!288 = !{ptr @.str.43, !9, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @.str.44, !9, !"<string literal>", i1 false, i1 false}
!290 = !{ptr @.str.45, !9, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @.str.46, !9, !"<string literal>", i1 false, i1 false}
!292 = !{ptr @.str.47, !9, !"<string literal>", i1 false, i1 false}
!293 = !{ptr @.str.48, !9, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @.str.49, !9, !"<string literal>", i1 false, i1 false}
!295 = !{ptr @.str.50, !9, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @.str.51, !9, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @.str.52, !9, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @.str.53, !9, !"<string literal>", i1 false, i1 false}
!299 = !{ptr @.str.54, !9, !"<string literal>", i1 false, i1 false}
!300 = !{ptr @.str.55, !9, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @.str.56, !9, !"<string literal>", i1 false, i1 false}
!302 = !{ptr @.str.57, !9, !"<string literal>", i1 false, i1 false}
!303 = !{ptr @.str.58, !9, !"<string literal>", i1 false, i1 false}
!304 = !{ptr @.str.59, !9, !"<string literal>", i1 false, i1 false}
!305 = !{ptr @.str.60, !9, !"<string literal>", i1 false, i1 false}
!306 = !{ptr @.str.61, !9, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @.str.62, !9, !"<string literal>", i1 false, i1 false}
!308 = !{ptr @.str.63, !9, !"<string literal>", i1 false, i1 false}
!309 = !{ptr @.str.64, !9, !"<string literal>", i1 false, i1 false}
!310 = !{ptr @.str.65, !9, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @.str.66, !9, !"<string literal>", i1 false, i1 false}
!312 = !{ptr @.str.67, !9, !"<string literal>", i1 false, i1 false}
!313 = !{ptr @.str.68, !9, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @.str.69, !9, !"<string literal>", i1 false, i1 false}
!315 = !{ptr @.str.70, !9, !"<string literal>", i1 false, i1 false}
!316 = !{ptr @.str.71, !9, !"<string literal>", i1 false, i1 false}
!317 = !{ptr @.str.72, !9, !"<string literal>", i1 false, i1 false}
!318 = !{ptr @.str.73, !9, !"<string literal>", i1 false, i1 false}
!319 = !{ptr @.str.74, !9, !"<string literal>", i1 false, i1 false}
!320 = !{ptr @trace_raw_output_mm_vmscan_wakeup_kswapd.__flags, !9, !"__flags", i1 false, i1 false}
!321 = !{ptr @.str.75, !9, !"<string literal>", i1 false, i1 false}
!322 = !{ptr @.str.76, !9, !"<string literal>", i1 false, i1 false}
!323 = !{ptr @print_fmt_mm_vmscan_wakeup_kswapd, !9, !"print_fmt_mm_vmscan_wakeup_kswapd", i1 false, i1 false}
!324 = !{ptr @trace_event_fields_mm_vmscan_direct_reclaim_begin_template, !149, !"trace_event_fields_mm_vmscan_direct_reclaim_begin_template", i1 false, i1 false}
!325 = !{ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_begin_template, !149, !"trace_event_type_funcs_mm_vmscan_direct_reclaim_begin_template", i1 false, i1 false}
!326 = !{ptr @.str.77, !149, !"<string literal>", i1 false, i1 false}
!327 = !{ptr @trace_raw_output_mm_vmscan_direct_reclaim_begin_template.__flags, !149, !"__flags", i1 false, i1 false}
!328 = !{ptr @print_fmt_mm_vmscan_direct_reclaim_begin_template, !149, !"print_fmt_mm_vmscan_direct_reclaim_begin_template", i1 false, i1 false}
!329 = !{ptr @.str.78, !157, !"<string literal>", i1 false, i1 false}
!330 = !{ptr @.str.79, !157, !"<string literal>", i1 false, i1 false}
!331 = !{ptr @trace_event_fields_mm_vmscan_direct_reclaim_end_template, !157, !"trace_event_fields_mm_vmscan_direct_reclaim_end_template", i1 false, i1 false}
!332 = !{ptr @trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template, !157, !"trace_event_type_funcs_mm_vmscan_direct_reclaim_end_template", i1 false, i1 false}
!333 = !{ptr @.str.80, !157, !"<string literal>", i1 false, i1 false}
!334 = !{ptr @print_fmt_mm_vmscan_direct_reclaim_end_template, !157, !"print_fmt_mm_vmscan_direct_reclaim_end_template", i1 false, i1 false}
!335 = !{ptr @.str.81, !37, !"<string literal>", i1 false, i1 false}
!336 = !{ptr @.str.82, !37, !"<string literal>", i1 false, i1 false}
!337 = !{ptr @.str.83, !37, !"<string literal>", i1 false, i1 false}
!338 = !{ptr @.str.84, !37, !"<string literal>", i1 false, i1 false}
!339 = !{ptr @.str.85, !37, !"<string literal>", i1 false, i1 false}
!340 = !{ptr @.str.86, !37, !"<string literal>", i1 false, i1 false}
!341 = !{ptr @.str.87, !37, !"<string literal>", i1 false, i1 false}
!342 = !{ptr @.str.88, !37, !"<string literal>", i1 false, i1 false}
!343 = !{ptr @.str.89, !37, !"<string literal>", i1 false, i1 false}
!344 = !{ptr @.str.90, !37, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @.str.91, !37, !"<string literal>", i1 false, i1 false}
!346 = !{ptr @trace_event_fields_mm_shrink_slab_start, !37, !"trace_event_fields_mm_shrink_slab_start", i1 false, i1 false}
!347 = !{ptr @trace_event_type_funcs_mm_shrink_slab_start, !37, !"trace_event_type_funcs_mm_shrink_slab_start", i1 false, i1 false}
!348 = !{ptr @.str.92, !37, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @trace_raw_output_mm_shrink_slab_start.__flags, !37, !"__flags", i1 false, i1 false}
!350 = !{ptr @print_fmt_mm_shrink_slab_start, !37, !"print_fmt_mm_shrink_slab_start", i1 false, i1 false}
!351 = !{ptr @.str.93, !41, !"<string literal>", i1 false, i1 false}
!352 = !{ptr @.str.94, !41, !"<string literal>", i1 false, i1 false}
!353 = !{ptr @.str.95, !41, !"<string literal>", i1 false, i1 false}
!354 = !{ptr @trace_event_fields_mm_shrink_slab_end, !41, !"trace_event_fields_mm_shrink_slab_end", i1 false, i1 false}
!355 = !{ptr @trace_event_type_funcs_mm_shrink_slab_end, !41, !"trace_event_type_funcs_mm_shrink_slab_end", i1 false, i1 false}
!356 = !{ptr @.str.96, !41, !"<string literal>", i1 false, i1 false}
!357 = !{ptr @print_fmt_mm_shrink_slab_end, !41, !"print_fmt_mm_shrink_slab_end", i1 false, i1 false}
!358 = !{ptr @.str.97, !45, !"<string literal>", i1 false, i1 false}
!359 = !{ptr @.str.98, !45, !"<string literal>", i1 false, i1 false}
!360 = !{ptr @.str.99, !45, !"<string literal>", i1 false, i1 false}
!361 = !{ptr @.str.100, !45, !"<string literal>", i1 false, i1 false}
!362 = !{ptr @.str.101, !45, !"<string literal>", i1 false, i1 false}
!363 = !{ptr @.str.102, !45, !"<string literal>", i1 false, i1 false}
!364 = !{ptr @.str.103, !45, !"<string literal>", i1 false, i1 false}
!365 = !{ptr @.str.104, !45, !"<string literal>", i1 false, i1 false}
!366 = !{ptr @trace_event_fields_mm_vmscan_lru_isolate, !45, !"trace_event_fields_mm_vmscan_lru_isolate", i1 false, i1 false}
!367 = !{ptr @trace_event_type_funcs_mm_vmscan_lru_isolate, !45, !"trace_event_type_funcs_mm_vmscan_lru_isolate", i1 false, i1 false}
!368 = !{ptr @.str.105, !45, !"<string literal>", i1 false, i1 false}
!369 = !{ptr @.str.106, !45, !"<string literal>", i1 false, i1 false}
!370 = !{ptr @.str.107, !45, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @.str.108, !45, !"<string literal>", i1 false, i1 false}
!372 = !{ptr @.str.109, !45, !"<string literal>", i1 false, i1 false}
!373 = !{ptr @.str.110, !45, !"<string literal>", i1 false, i1 false}
!374 = !{ptr @trace_raw_output_mm_vmscan_lru_isolate.symbols, !45, !"symbols", i1 false, i1 false}
!375 = !{ptr @print_fmt_mm_vmscan_lru_isolate, !45, !"print_fmt_mm_vmscan_lru_isolate", i1 false, i1 false}
!376 = !{ptr @.str.111, !49, !"<string literal>", i1 false, i1 false}
!377 = !{ptr @.str.112, !49, !"<string literal>", i1 false, i1 false}
!378 = !{ptr @trace_event_fields_mm_vmscan_writepage, !49, !"trace_event_fields_mm_vmscan_writepage", i1 false, i1 false}
!379 = !{ptr @trace_event_type_funcs_mm_vmscan_writepage, !49, !"trace_event_type_funcs_mm_vmscan_writepage", i1 false, i1 false}
!380 = !{ptr @.str.113, !49, !"<string literal>", i1 false, i1 false}
!381 = !{ptr @.str.114, !49, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @.str.115, !49, !"<string literal>", i1 false, i1 false}
!383 = !{ptr @.str.116, !49, !"<string literal>", i1 false, i1 false}
!384 = !{ptr @.str.117, !49, !"<string literal>", i1 false, i1 false}
!385 = !{ptr @.str.118, !49, !"<string literal>", i1 false, i1 false}
!386 = !{ptr @trace_raw_output_mm_vmscan_writepage.__flags, !49, !"__flags", i1 false, i1 false}
!387 = !{ptr @.str.119, !49, !"<string literal>", i1 false, i1 false}
!388 = !{ptr @print_fmt_mm_vmscan_writepage, !49, !"print_fmt_mm_vmscan_writepage", i1 false, i1 false}
!389 = !{ptr @.str.120, !53, !"<string literal>", i1 false, i1 false}
!390 = !{ptr @.str.121, !53, !"<string literal>", i1 false, i1 false}
!391 = !{ptr @.str.122, !53, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @.str.123, !53, !"<string literal>", i1 false, i1 false}
!393 = !{ptr @.str.124, !53, !"<string literal>", i1 false, i1 false}
!394 = !{ptr @.str.125, !53, !"<string literal>", i1 false, i1 false}
!395 = !{ptr @.str.126, !53, !"<string literal>", i1 false, i1 false}
!396 = !{ptr @.str.127, !53, !"<string literal>", i1 false, i1 false}
!397 = !{ptr @.str.128, !53, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @trace_event_fields_mm_vmscan_lru_shrink_inactive, !53, !"trace_event_fields_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!399 = !{ptr @trace_event_type_funcs_mm_vmscan_lru_shrink_inactive, !53, !"trace_event_type_funcs_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!400 = !{ptr @.str.129, !53, !"<string literal>", i1 false, i1 false}
!401 = !{ptr @trace_raw_output_mm_vmscan_lru_shrink_inactive.__flags, !53, !"__flags", i1 false, i1 false}
!402 = !{ptr @print_fmt_mm_vmscan_lru_shrink_inactive, !53, !"print_fmt_mm_vmscan_lru_shrink_inactive", i1 false, i1 false}
!403 = !{ptr @.str.130, !57, !"<string literal>", i1 false, i1 false}
!404 = !{ptr @.str.131, !57, !"<string literal>", i1 false, i1 false}
!405 = !{ptr @.str.132, !57, !"<string literal>", i1 false, i1 false}
!406 = !{ptr @trace_event_fields_mm_vmscan_lru_shrink_active, !57, !"trace_event_fields_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!407 = !{ptr @trace_event_type_funcs_mm_vmscan_lru_shrink_active, !57, !"trace_event_type_funcs_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!408 = !{ptr @.str.133, !57, !"<string literal>", i1 false, i1 false}
!409 = !{ptr @trace_raw_output_mm_vmscan_lru_shrink_active.__flags, !57, !"__flags", i1 false, i1 false}
!410 = !{ptr @print_fmt_mm_vmscan_lru_shrink_active, !57, !"print_fmt_mm_vmscan_lru_shrink_active", i1 false, i1 false}
!411 = !{ptr @trace_event_fields_mm_vmscan_node_reclaim_begin, !61, !"trace_event_fields_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!412 = !{ptr @trace_event_type_funcs_mm_vmscan_node_reclaim_begin, !61, !"trace_event_type_funcs_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!413 = !{ptr @trace_raw_output_mm_vmscan_node_reclaim_begin.__flags, !61, !"__flags", i1 false, i1 false}
!414 = !{ptr @print_fmt_mm_vmscan_node_reclaim_begin, !61, !"print_fmt_mm_vmscan_node_reclaim_begin", i1 false, i1 false}
!415 = !{ptr @.str.134, !69, !"<string literal>", i1 false, i1 false}
!416 = !{ptr @.str.135, !69, !"<string literal>", i1 false, i1 false}
!417 = !{ptr @.str.136, !69, !"<string literal>", i1 false, i1 false}
!418 = !{ptr @trace_event_fields_mm_vmscan_throttled, !69, !"trace_event_fields_mm_vmscan_throttled", i1 false, i1 false}
!419 = !{ptr @trace_event_type_funcs_mm_vmscan_throttled, !69, !"trace_event_type_funcs_mm_vmscan_throttled", i1 false, i1 false}
!420 = !{ptr @.str.137, !69, !"<string literal>", i1 false, i1 false}
!421 = !{ptr @.str.138, !69, !"<string literal>", i1 false, i1 false}
!422 = !{ptr @.str.139, !69, !"<string literal>", i1 false, i1 false}
!423 = !{ptr @.str.140, !69, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @.str.141, !69, !"<string literal>", i1 false, i1 false}
!425 = !{ptr @trace_raw_output_mm_vmscan_throttled.__flags, !69, !"__flags", i1 false, i1 false}
!426 = !{ptr @.str.142, !69, !"<string literal>", i1 false, i1 false}
!427 = !{ptr @print_fmt_mm_vmscan_throttled, !69, !"print_fmt_mm_vmscan_throttled", i1 false, i1 false}
!428 = !{ptr @.str.143, !429, !"<string literal>", i1 false, i1 false}
!429 = !{!"../mm/vmscan.c", i32 192, i32 8}
!430 = !{ptr @.str.144, !429, !"<string literal>", i1 false, i1 false}
!431 = !{ptr @shrinker_rwsem, !429, !"shrinker_rwsem", i1 false, i1 false}
!432 = distinct !{null, !433, !"__warned", i1 false, i1 false}
!433 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!434 = !{ptr @.str.145, !433, !"<string literal>", i1 false, i1 false}
!435 = !{ptr @.str.146, !433, !"<string literal>", i1 false, i1 false}
!436 = distinct !{null, !437, !"__warned", i1 false, i1 false}
!437 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!438 = !{ptr @.str.147, !437, !"<string literal>", i1 false, i1 false}
!439 = distinct !{null, !440, !"__warned", i1 false, i1 false}
!440 = !{!"../mm/vmscan.c", i32 211, i32 9}
!441 = !{ptr @.str.148, !440, !"<string literal>", i1 false, i1 false}
!442 = !{ptr @.str.149, !443, !"<string literal>", i1 false, i1 false}
!443 = !{!"../mm/vmscan.c", i32 350, i32 8}
!444 = !{ptr @shrinker_idr, !443, !"shrinker_idr", i1 false, i1 false}
!445 = !{ptr @shrinker_list, !446, !"shrinker_list", i1 false, i1 false}
!446 = !{!"../mm/vmscan.c", i32 191, i32 8}
!447 = distinct !{null, !37, !"__already_done", i1 false, i1 false}
!448 = !{ptr @.str.150, !37, !"<string literal>", i1 false, i1 false}
!449 = distinct !{null, !37, !"__warned", i1 false, i1 false}
!450 = distinct !{null, !451, !"__already_done", i1 false, i1 false}
!451 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!452 = !{ptr @.str.151, !451, !"<string literal>", i1 false, i1 false}
!453 = distinct !{null, !41, !"__already_done", i1 false, i1 false}
!454 = distinct !{null, !41, !"__warned", i1 false, i1 false}
!455 = distinct !{null, !456, !"__already_done", i1 false, i1 false}
!456 = !{!"../include/linux/vmstat.h", i32 202, i32 2}
!457 = distinct !{null, !456, !"<string literal>", i1 false, i1 false}
!458 = distinct !{null, !69, !"__already_done", i1 false, i1 false}
!459 = distinct !{null, !69, !"__warned", i1 false, i1 false}
!460 = !{ptr @.str.153, !461, !"<string literal>", i1 false, i1 false}
!461 = !{!"../include/linux/page-flags.h", i32 698, i32 1}
!462 = !{ptr @.str.154, !463, !"<string literal>", i1 false, i1 false}
!463 = !{!"../include/linux/page-flags.h", i32 414, i32 1}
!464 = !{ptr @.str.155, !465, !"<string literal>", i1 false, i1 false}
!465 = !{!"../include/linux/page-flags.h", i32 260, i32 2}
!466 = distinct !{null, !467, !"<string literal>", i1 false, i1 false}
!467 = !{!"../include/linux/page-flags.h", i32 261, i32 2}
!468 = !{ptr @.str.157, !469, !"<string literal>", i1 false, i1 false}
!469 = !{!"../include/linux/page_ref.h", i32 332, i32 2}
!470 = !{ptr @.str.158, !471, !"<string literal>", i1 false, i1 false}
!471 = !{!"../include/linux/mm.h", i32 717, i32 2}
!472 = !{ptr @.str.159, !473, !"<string literal>", i1 false, i1 false}
!473 = !{!"../mm/vmscan.c", i32 1546, i32 3}
!474 = !{ptr @.str.160, !475, !"<string literal>", i1 false, i1 false}
!475 = !{!"../mm/vmscan.c", i32 1941, i32 3}
!476 = !{ptr @.str.161, !477, !"<string literal>", i1 false, i1 false}
!477 = !{!"../include/linux/page-flags.h", i32 466, i32 1}
!478 = !{ptr @.str.162, !479, !"<string literal>", i1 false, i1 false}
!479 = !{!"../include/linux/mm.h", i32 910, i32 2}
!480 = distinct !{null, !481, !"<string literal>", i1 false, i1 false}
!481 = !{!"../include/linux/mm.h", i32 789, i32 2}
!482 = !{ptr @.str.164, !483, !"<string literal>", i1 false, i1 false}
!483 = !{!"../mm/vmscan.c", i32 1196, i32 5}
!484 = !{ptr @.str.165, !483, !"<string literal>", i1 false, i1 false}
!485 = !{ptr @pageout._entry, !483, !"_entry", i1 false, i1 false}
!486 = !{ptr @pageout._entry_ptr, !483, !"_entry_ptr", i1 false, i1 false}
!487 = !{ptr @.str.166, !488, !"<string literal>", i1 false, i1 false}
!488 = !{!"../include/linux/pagemap.h", i32 788, i32 2}
!489 = distinct !{null, !49, !"__already_done", i1 false, i1 false}
!490 = distinct !{null, !49, !"__warned", i1 false, i1 false}
!491 = !{ptr @.str.167, !492, !"<string literal>", i1 false, i1 false}
!492 = !{!"../include/linux/memcontrol.h", i32 537, i32 2}
!493 = !{ptr @.str.168, !494, !"<string literal>", i1 false, i1 false}
!494 = !{!"../include/linux/memcontrol.h", i32 538, i32 2}
!495 = !{ptr @.str.169, !496, !"<string literal>", i1 false, i1 false}
!496 = !{!"../include/linux/memcontrol.h", i32 417, i32 2}
!497 = distinct !{null, !498, !"<string literal>", i1 false, i1 false}
!498 = !{!"../include/linux/memcontrol.h", i32 418, i32 2}
!499 = distinct !{null, !500, !"<string literal>", i1 false, i1 false}
!500 = !{!"../include/linux/memcontrol.h", i32 419, i32 2}
!501 = distinct !{null, !502, !"<string literal>", i1 false, i1 false}
!502 = !{!"../include/linux/memcontrol.h", i32 398, i32 2}
!503 = !{ptr @.str.173, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../include/linux/mm.h", i32 888, i32 2}
!505 = !{ptr @.str.174, !506, !"<string literal>", i1 false, i1 false}
!506 = !{!"../include/linux/mm.h", i32 1160, i32 2}
!507 = !{ptr @.str.175, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../include/linux/mm_inline.h", i32 83, i32 2}
!509 = !{ptr @.str.176, !510, !"<string literal>", i1 false, i1 false}
!510 = !{!"../include/linux/mm.h", i32 1368, i32 10}
!511 = distinct !{null, !512, !"__already_done", i1 false, i1 false}
!512 = !{!"../mm/vmscan.c", i32 183, i32 2}
!513 = distinct !{null, !514, !"__already_done", i1 false, i1 false}
!514 = !{!"../mm/vmscan.c", i32 186, i32 2}
!515 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!516 = distinct !{null, !13, !"__warned", i1 false, i1 false}
!517 = distinct !{null, !25, !"__already_done", i1 false, i1 false}
!518 = distinct !{null, !25, !"__warned", i1 false, i1 false}
!519 = distinct !{null, !21, !"__already_done", i1 false, i1 false}
!520 = distinct !{null, !21, !"__warned", i1 false, i1 false}
!521 = distinct !{null, !45, !"__already_done", i1 false, i1 false}
!522 = distinct !{null, !45, !"__warned", i1 false, i1 false}
!523 = !{ptr @.str.178, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../mm/vmscan.c", i32 2319, i32 3}
!525 = !{ptr @.str.179, !526, !"<string literal>", i1 false, i1 false}
!526 = !{!"../mm/vmscan.c", i32 2358, i32 3}
!527 = !{ptr @.str.180, !528, !"<string literal>", i1 false, i1 false}
!528 = !{!"../include/linux/mm_inline.h", i32 55, i32 2}
!529 = distinct !{null, !53, !"__already_done", i1 false, i1 false}
!530 = distinct !{null, !53, !"__warned", i1 false, i1 false}
!531 = distinct !{null, !57, !"__already_done", i1 false, i1 false}
!532 = distinct !{null, !57, !"__warned", i1 false, i1 false}
!533 = distinct !{null, !33, !"__already_done", i1 false, i1 false}
!534 = distinct !{null, !33, !"__warned", i1 false, i1 false}
!535 = distinct !{null, !17, !"__already_done", i1 false, i1 false}
!536 = distinct !{null, !17, !"__warned", i1 false, i1 false}
!537 = distinct !{null, !29, !"__already_done", i1 false, i1 false}
!538 = distinct !{null, !29, !"__warned", i1 false, i1 false}
!539 = distinct !{null, !9, !"__already_done", i1 false, i1 false}
!540 = distinct !{null, !9, !"__warned", i1 false, i1 false}
!541 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!542 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!543 = !{ptr @.str.181, !544, !"<string literal>", i1 false, i1 false}
!544 = !{!"../include/linux/freezer.h", i32 57, i32 2}
!545 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!546 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!547 = !{!"sp"}
!548 = !{i32 1, !"wchar_size", i32 2}
!549 = !{i32 1, !"min_enum_size", i32 4}
!550 = !{i32 8, !"branch-target-enforcement", i32 0}
!551 = !{i32 8, !"sign-return-address", i32 0}
!552 = !{i32 8, !"sign-return-address-all", i32 0}
!553 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!554 = !{i32 7, !"uwtable", i32 1}
!555 = !{i32 7, !"frame-pointer", i32 2}
!556 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!557 = !{!"branch_weights", i32 2000, i32 1}
!558 = !{!"branch_weights", i32 1, i32 2000}
!559 = !{!"auto-init"}
!560 = !{i64 2150360420, i64 2150360911, i64 2150360457, i64 2150360513, i64 2150360547, i64 2150360571, i64 2150360612, i64 2150360633, i64 2150360661, i64 2150360695}
!561 = !{i64 2158470961}
!562 = !{i64 2150140755}
!563 = !{i64 2158480270}
!564 = !{i64 2150141021}
!565 = !{i64 2148805422, i64 2148805448, i64 2148805477, i64 2148805511, i64 2148805542, i64 2148805565}
!566 = !{i8 0, i8 2}
!567 = !{i64 2148406099, i64 2148406104, i64 2148406117, i64 2148406161, i64 2148406195, i64 2148406216}
!568 = !{i64 2158450738}
!569 = !{i64 2158482633, i64 2158483109, i64 2158482670, i64 2158482726, i64 2158482760, i64 2158482784, i64 2158482825, i64 2158482846, i64 2158482874, i64 2158482908}
!570 = !{i64 2148890857}
!571 = !{i64 2148806142, i64 2148806174, i64 2148806203, i64 2148806237, i64 2148806268, i64 2148806291}
!572 = !{i64 2148891086}
!573 = !{i64 2148807887, i64 2148807913, i64 2148807942, i64 2148807976, i64 2148808007, i64 2148808030}
!574 = !{i64 2156022304}
!575 = !{i64 2156022583}
!576 = !{i64 2150149314}
!577 = !{i64 2150150350}
!578 = !{i64 2153281286, i64 2153281770, i64 2153281323, i64 2153281379, i64 2153281413, i64 2153281437, i64 2153281478, i64 2153281499, i64 2153281527, i64 2153281561}
!579 = !{i64 2151127206, i64 2151127697, i64 2151127243, i64 2151127299, i64 2151127333, i64 2151127357, i64 2151127398, i64 2151127419, i64 2151127447, i64 2151127481}
!580 = !{i64 2151463117, i64 2151463606, i64 2151463154, i64 2151463210, i64 2151463244, i64 2151463268, i64 2151463309, i64 2151463330, i64 2151463358, i64 2151463392}
!581 = !{i64 2148887407}
!582 = !{i64 2150371914, i64 2150372405, i64 2150371951, i64 2150372007, i64 2150372041, i64 2150372065, i64 2150372106, i64 2150372127, i64 2150372155, i64 2150372189}
!583 = !{i64 2158516426, i64 2158516903, i64 2158516463, i64 2158516519, i64 2158516553, i64 2158516577, i64 2158516618, i64 2158516639, i64 2158516667, i64 2158516701}
!584 = !{i64 2158518019, i64 2158522557, i64 2158518056, i64 2158518112, i64 2158518146, i64 2158518170, i64 2158518211, i64 2158518232, i64 2158518260, i64 2158518294}
!585 = !{i64 2148907269}
!586 = !{i64 1290935, i64 1290959, i64 1290980, i64 1290997, i64 1291014}
!587 = !{i64 2148907495}
!588 = !{i64 2150474390, i64 2150474881, i64 2150474427, i64 2150474483, i64 2150474517, i64 2150474541, i64 2150474582, i64 2150474603, i64 2150474631, i64 2150474665}
!589 = !{i64 2151464732, i64 2151465221, i64 2151464769, i64 2151464825, i64 2151464859, i64 2151464883, i64 2151464924, i64 2151464945, i64 2151464973, i64 2151465007}
!590 = !{i64 2153251531, i64 2153252014, i64 2153251568, i64 2153251624, i64 2153251658, i64 2153251682, i64 2153251723, i64 2153251744, i64 2153251772, i64 2153251806}
!591 = !{i64 2148893898}
!592 = !{i64 2148808607, i64 2148808639, i64 2148808668, i64 2148808702, i64 2148808733, i64 2148808756}
!593 = !{i64 2148894127}
!594 = !{i64 2151013059, i64 2151013550, i64 2151013096, i64 2151013152, i64 2151013186, i64 2151013210, i64 2151013251, i64 2151013272, i64 2151013300, i64 2151013334}
!595 = !{i64 2150540355, i64 2150540528, i64 2150540543, i64 2150540595, i64 2150540654, i64 2150540678, i64 2150540719, i64 2150540740, i64 2150540768, i64 2150540800}
!596 = !{i64 2148814280, i64 2148814312, i64 2148814341, i64 2148814375, i64 2148814406, i64 2148814429}
!597 = !{i64 2148903385}
!598 = !{i64 2150529111, i64 2150529602, i64 2150529148, i64 2150529204, i64 2150529238, i64 2150529262, i64 2150529303, i64 2150529324, i64 2150529352, i64 2150529386}
!599 = !{i64 2158526783, i64 2158527260, i64 2158526820, i64 2158526876, i64 2158526910, i64 2158526934, i64 2158526975, i64 2158526996, i64 2158527024, i64 2158527058}
!600 = !{i64 2150787934, i64 2150788425, i64 2150787971, i64 2150788027, i64 2150788061, i64 2150788085, i64 2150788126, i64 2150788147, i64 2150788175, i64 2150788209}
!601 = !{i64 2150880335, i64 2150880826, i64 2150880372, i64 2150880428, i64 2150880462, i64 2150880486, i64 2150880527, i64 2150880548, i64 2150880576, i64 2150880610}
!602 = !{i64 2150931046, i64 2150931537, i64 2150931083, i64 2150931139, i64 2150931173, i64 2150931197, i64 2150931238, i64 2150931259, i64 2150931287, i64 2150931321}
!603 = !{i64 2150939628, i64 2150939801, i64 2150939816, i64 2150939868, i64 2150939927, i64 2150939951, i64 2150939992, i64 2150940013, i64 2150940041, i64 2150940073}
!604 = !{i64 2150940503, i64 2150940676, i64 2150940691, i64 2150940743, i64 2150940802, i64 2150940826, i64 2150940867, i64 2150940888, i64 2150940916, i64 2150940948}
!605 = !{i64 2150468331, i64 2150468504, i64 2150468519, i64 2150468571, i64 2150468630, i64 2150468654, i64 2150468695, i64 2150468716, i64 2150468744, i64 2150468776}
!606 = !{i64 2150453473, i64 2150453646, i64 2150453661, i64 2150453713, i64 2150453772, i64 2150453796, i64 2150453837, i64 2150453858, i64 2150453886, i64 2150453918}
!607 = !{!"branch_weights", i32 1073205, i32 2146410443}
!608 = !{i64 2153266733, i64 2153267216, i64 2153266770, i64 2153266826, i64 2153266860, i64 2153266884, i64 2153266925, i64 2153266946, i64 2153266974, i64 2153267008}
!609 = !{i64 2153242521, i64 2153243009, i64 2153242558, i64 2153242614, i64 2153242648, i64 2153242672, i64 2153242713, i64 2153242734, i64 2153242762, i64 2153242796}
!610 = !{i64 2150485610, i64 2150485783, i64 2150485798, i64 2150485850, i64 2150485909, i64 2150485933, i64 2150485974, i64 2150485995, i64 2150486023, i64 2150486055}
!611 = !{i64 2150948454, i64 2150948627, i64 2150948642, i64 2150948694, i64 2150948753, i64 2150948777, i64 2150948818, i64 2150948839, i64 2150948867, i64 2150948899}
!612 = !{i64 2150949329, i64 2150949502, i64 2150949517, i64 2150949569, i64 2150949628, i64 2150949652, i64 2150949693, i64 2150949714, i64 2150949742, i64 2150949774}
!613 = !{i64 1210102, i64 1210163}
!614 = !{i64 1212834}
!615 = !{i64 1213119}
!616 = !{i64 2151042013, i64 2151042504, i64 2151042050, i64 2151042106, i64 2151042140, i64 2151042164, i64 2151042205, i64 2151042226, i64 2151042254, i64 2151042288}
!617 = !{i64 2158528888, i64 2158529365, i64 2158528925, i64 2158528981, i64 2158529015, i64 2158529039, i64 2158529080, i64 2158529101, i64 2158529129, i64 2158529163}
!618 = !{i64 2150535051, i64 2150535224, i64 2150535239, i64 2150535291, i64 2150535350, i64 2150535374, i64 2150535415, i64 2150535436, i64 2150535464, i64 2150535496}
!619 = !{i64 2150502486, i64 2150502977, i64 2150502523, i64 2150502579, i64 2150502613, i64 2150502637, i64 2150502678, i64 2150502699, i64 2150502727, i64 2150502761}
!620 = !{i64 2158530741, i64 2158531218, i64 2158530778, i64 2158530834, i64 2158530868, i64 2158530892, i64 2158530933, i64 2158530954, i64 2158530982, i64 2158531016}
!621 = !{i64 2158539563, i64 2158540040, i64 2158539600, i64 2158539656, i64 2158539690, i64 2158539714, i64 2158539755, i64 2158539776, i64 2158539804, i64 2158539838}
!622 = !{i64 2150526330, i64 2150526503, i64 2150526518, i64 2150526570, i64 2150526629, i64 2150526653, i64 2150526694, i64 2150526715, i64 2150526743, i64 2150526775}
!623 = !{i64 2153275504, i64 2153275988, i64 2153275541, i64 2153275597, i64 2153275631, i64 2153275655, i64 2153275696, i64 2153275717, i64 2153275745, i64 2153275779}
!624 = !{i64 2155234462, i64 2155234951, i64 2155234499, i64 2155234555, i64 2155234589, i64 2155234613, i64 2155234654, i64 2155234675, i64 2155234703, i64 2155234737}
!625 = !{i64 2151342146, i64 2151342630, i64 2151342183, i64 2151342239, i64 2151342273, i64 2151342297, i64 2151342338, i64 2151342359, i64 2151342387, i64 2151342421}
!626 = !{i64 2155748052}
!627 = !{i64 2155748307}
!628 = !{i64 2155805846}
!629 = !{i64 2155806089}
!630 = !{i64 2155783708}
!631 = !{i64 2155783981}
!632 = !{i64 2155840998}
!633 = !{i64 2155841259}
!634 = !{i64 2155765717}
!635 = !{i64 2155765970}
!636 = !{i64 2155823259}
!637 = !{i64 2155823500}
!638 = !{i64 2155726550}
!639 = !{i64 2155726811}
!640 = !{i64 2158640832, i64 2158641309, i64 2158640869, i64 2158640925, i64 2158640959, i64 2158640983, i64 2158641024, i64 2158641045, i64 2158641073, i64 2158641107}
!641 = !{i64 2151028484, i64 2151028657, i64 2151028672, i64 2151028724, i64 2151028783, i64 2151028807, i64 2151028848, i64 2151028869, i64 2151028897, i64 2151028929}
!642 = !{i64 2150508390, i64 2150508563, i64 2150508578, i64 2150508630, i64 2150508689, i64 2150508713, i64 2150508754, i64 2150508775, i64 2150508803, i64 2150508835}
!643 = !{i64 2148406502, i64 2148406507, i64 2148406528, i64 2148406572, i64 2148406606, i64 2148406627}
!644 = !{i64 2158502765}
!645 = !{i64 2148981145}
!646 = !{i64 1312190, i64 1312207, i64 1312231, i64 1312257, i64 1312275}
!647 = !{i64 2148981515}
!648 = !{i64 2148655207, i64 2148655487, i64 2148655821, i64 2148656155}
!649 = !{i64 2155865299}
!650 = !{i64 2155865648}
!651 = !{i64 2155884418}
!652 = !{i64 2155884757}
!653 = !{i64 2153260282, i64 2153260765, i64 2153260319, i64 2153260375, i64 2153260409, i64 2153260433, i64 2153260474, i64 2153260495, i64 2153260523, i64 2153260557}
!654 = !{i64 2155926158}
!655 = !{i64 2155926367}
!656 = !{i64 2154878019, i64 2154878510, i64 2154878056, i64 2154878112, i64 2154878146, i64 2154878170, i64 2154878211, i64 2154878232, i64 2154878260, i64 2154878294}
!657 = !{i64 2154883980, i64 2154884471, i64 2154884017, i64 2154884073, i64 2154884107, i64 2154884131, i64 2154884172, i64 2154884193, i64 2154884221, i64 2154884255}
!658 = !{i64 2154862519, i64 2154863010, i64 2154862556, i64 2154862612, i64 2154862646, i64 2154862670, i64 2154862711, i64 2154862732, i64 2154862760, i64 2154862794}
!659 = !{i64 2154856777, i64 2154857268, i64 2154856814, i64 2154856870, i64 2154856904, i64 2154856928, i64 2154856969, i64 2154856990, i64 2154857018, i64 2154857052}
!660 = !{i64 2150557851, i64 2150558024, i64 2150558039, i64 2150558091, i64 2150558150, i64 2150558174, i64 2150558215, i64 2150558236, i64 2150558264, i64 2150558296}
!661 = !{i64 2148804841}
!662 = !{i64 1291441, i64 1291466, i64 1291488, i64 1291504, i64 1291516, i64 1291536, i64 1291560, i64 1291576, i64 1291588}
!663 = !{i64 2148805029}
!664 = !{i64 2158544668, i64 2158545145, i64 2158544705, i64 2158544761, i64 2158544795, i64 2158544819, i64 2158544860, i64 2158544881, i64 2158544909, i64 2158544943}
!665 = !{i64 2155231893, i64 2155232382, i64 2155231930, i64 2155231986, i64 2155232020, i64 2155232044, i64 2155232085, i64 2155232106, i64 2155232134, i64 2155232168}
!666 = !{!"branch_weights", i32 2146410443, i32 1073205}
!667 = !{i64 2158547537, i64 2158548014, i64 2158547574, i64 2158547630, i64 2158547664, i64 2158547688, i64 2158547729, i64 2158547750, i64 2158547778, i64 2158547812}
!668 = !{i64 2155944690}
!669 = !{i64 2155945013}
!670 = !{i64 2155904628}
!671 = !{i64 2155905011}
!672 = !{i64 2155964818}
!673 = !{i64 2155965177}
!674 = !{i64 2155709265}
!675 = !{i64 2155709500}
!676 = !{i64 2155692476}
!677 = !{i64 2155692689}
