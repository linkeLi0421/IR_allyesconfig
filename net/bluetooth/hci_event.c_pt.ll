; ModuleID = '/llk/IR_all_yes/net/bluetooth/hci_event.c_pt.bc'
source_filename = "../net/bluetooth/hci_event.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.atomic_t = type { i32 }
%struct.hci_ev = type { i8, %union.anon.148, i16, i16 }
%union.anon.148 = type { ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon }
%union.anon = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.hci_cc = type { i16, ptr, i16, i16 }
%struct.hci_cs = type { i16, ptr }
%struct.hci_le_ev = type { ptr, i16, i16 }
%struct.sk_buff = type { %union.anon.2, %union.anon.105, %union.anon.106, [48 x i8], %union.anon.107, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.109, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { ptr, ptr, %union.anon.4 }
%union.anon.4 = type { ptr }
%union.anon.105 = type { ptr }
%union.anon.106 = type { i64 }
%union.anon.107 = type { %struct.anon.108 }
%struct.anon.108 = type { i32, ptr }
%union.anon.109 = type { %struct.anon.110 }
%struct.anon.110 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.111, i32, i32, i32, i16, i16, %union.anon.113, i32, %union.anon.114, %union.anon.115, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.111 = type { i32 }
%union.anon.113 = type { i32 }
%union.anon.114 = type { i32 }
%union.anon.115 = type { i16 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.hci_dev = type { %struct.list_head, %struct.mutex, [8 x i8], i32, i16, i8, i8, %struct.bdaddr_t, %struct.bdaddr_t, %struct.bdaddr_t, %struct.bdaddr_t, %struct.bdaddr_t, i8, [248 x i8], [10 x i8], [240 x i8], i16, [3 x i8], i8, i8, i8, [3 x [8 x i8]], [8 x i8], i8, i8, i8, [8 x i8], [64 x i8], i8, i16, i8, i16, i16, i16, i8, i16, i16, i8, i8, i8, i16, i16, i8, i8, i16, i16, i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i32, i16, i16, i8, i16, i16, i16, i16, i8, i16, i16, i8, i16, i16, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i32, i16, i16, i8, i32, i32, i32, i32, i8, i16, i16, i32, i32, %struct.amp_assoc, i8, i32, i32, %struct.atomic_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i8, i8, ptr, ptr, %struct.work_struct, %struct.delayed_work, %struct.work_struct, %struct.work_struct, %struct.list_head, %struct.mutex, %struct.work_struct, i16, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.delayed_work, %struct.delayed_work, %struct.sk_buff_head, %struct.sk_buff_head, %struct.sk_buff_head, ptr, %struct.mutex, %struct.wait_queue_head, i32, i32, ptr, ptr, ptr, %struct.discovery_state, i32, i8, i32, i8, %struct.notifier_block, i32, i32, i8, i8, i8, %struct.bdaddr_t, i8, %struct.hci_conn_hash, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.hci_dev_stats, %struct.atomic_t, ptr, ptr, ptr, %struct.device, ptr, [2 x i32], [1 x i32], i8, [251 x i8], i8, [251 x i8], i8, %struct.list_head, i32, i8, i16, %struct.delayed_work, %struct.idr, i32, [16 x i8], i32, %struct.delayed_work, %struct.bdaddr_t, i32, %struct.delayed_work, ptr, i16, ptr, i8, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amp_assoc = type { i16, i16, i16, i16, [672 x i8] }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.sk_buff_head = type { %union.anon.1, i32, %struct.spinlock }
%union.anon.1 = type { %struct.anon }
%struct.anon = type { ptr, ptr }
%struct.spinlock = type { %union.anon.11 }
%union.anon.11 = type { %struct.raw_spinlock }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.discovery_state = type { i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, %struct.bdaddr_t, i8, i8, i32, [31 x i8], i8, i8, i8, i8, i8, i16, ptr, i32, i32, i32 }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.hci_conn_hash = type { %struct.list_head, i32, i32, i32, i32, i32 }
%struct.hci_dev_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.bdaddr_t = type { [6 x i8] }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.hci_ev_conn_complete = type <{ i8, i16, %struct.bdaddr_t, i8, i8 }>
%struct.hci_ev_cmd_complete = type <{ i8, i16 }>
%struct.hci_cp_remote_name_req = type { %struct.bdaddr_t, i8, i8, i16 }
%struct.inquiry_entry = type { %struct.list_head, %struct.list_head, i32, i32, %struct.inquiry_data }
%struct.inquiry_data = type { %struct.bdaddr_t, i8, i8, i8, [3 x i8], i16, i8, i8 }
%struct.hci_ev_inquiry_result = type <{ i8, [0 x %struct.inquiry_info] }>
%struct.inquiry_info = type { %struct.bdaddr_t, i8, i8, i8, [3 x i8], i16 }
%struct.hci_cp_read_remote_features = type { i16 }
%struct.hci_cp_change_conn_ptype = type { i16, i16 }
%struct.hci_conn = type { %struct.list_head, %struct.atomic_t, %struct.bdaddr_t, i8, %struct.bdaddr_t, i8, %struct.bdaddr_t, i8, %struct.bdaddr_t, i8, i8, i16, i16, i8, i8, i8, i8, i8, [3 x i8], [3 x [8 x i8]], i16, i16, i8, i8, i8, i8, i8, i8, i8, i32, i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, [31 x i8], i8, i8, i8, i8, i8, i8, i32, i32, i32, i16, i32, i8, i8, i8, i32, %struct.sk_buff_head, %struct.list_head, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work, %struct.work_struct, %struct.device, ptr, ptr, ptr, ptr, ptr, ptr, %struct.bt_codec, ptr, ptr, ptr }
%struct.bt_codec = type <{ i8, i16, i16, i8, i8 }>
%struct.hci_cb = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.hci_cp_reject_conn_req = type { %struct.bdaddr_t, i8 }
%struct.hci_cp_accept_conn_req = type { %struct.bdaddr_t, i8 }
%struct.hci_cp_accept_sync_conn_req = type <{ %struct.bdaddr_t, i32, i32, i16, i16, i8, i16 }>
%struct.hci_ev_conn_request = type { %struct.bdaddr_t, [3 x i8], i8 }
%struct.hci_ev_disconn_complete = type <{ i8, i16, i8 }>
%struct.hci_conn_params = type { %struct.list_head, %struct.list_head, %struct.bdaddr_t, i8, i16, i16, i16, i16, i32, ptr, i8, [1 x i32], i8 }
%struct.hci_cp_set_conn_encrypt = type <{ i16, i8 }>
%struct.hci_ev_auth_complete = type <{ i8, i16 }>
%struct.hci_cp_auth_requested = type { i16 }
%struct.hci_ev_remote_name = type { i8, %struct.bdaddr_t, [248 x i8] }
%struct.hci_cp_read_enc_key_size = type { i16 }
%struct.hci_request = type { ptr, %struct.sk_buff_head, i32 }
%struct.hci_cp_write_auth_payload_to = type { i16, i16 }
%struct.hci_ev_encrypt_change = type <{ i8, i16, i8 }>
%struct.hci_ev_change_link_key_complete = type <{ i8, i16 }>
%struct.hci_cp_read_remote_ext_features = type <{ i16, i8 }>
%struct.hci_ev_remote_features = type <{ i8, i16, [8 x i8] }>
%struct.hci_ev_cmd_status = type { i8, i8, i16 }
%struct.hci_ev_role_change = type { i8, %struct.bdaddr_t, i8 }
%struct.hci_ev_num_comp_pkts = type <{ i8, [0 x %struct.hci_comp_pkts_info] }>
%struct.hci_comp_pkts_info = type { i16, i16 }
%struct.hci_ev_mode_change = type <{ i8, i16, i8, i16 }>
%struct.hci_cp_link_key_reply = type { %struct.bdaddr_t, [16 x i8] }
%struct.link_key = type { %struct.list_head, %struct.callback_head, %struct.bdaddr_t, i8, [16 x i8], i8 }
%struct.callback_head = type { ptr, ptr }
%struct.hci_ev_link_key_notify = type { %struct.bdaddr_t, [16 x i8], i8 }
%struct.hci_ev_clock_offset = type <{ i8, i16, i16 }>
%struct.hci_ev_pkt_type_change = type <{ i8, i16, i16 }>
%struct.hci_ev_pscan_rep_mode = type { %struct.bdaddr_t, i8 }
%struct.inquiry_info_rssi_pscan = type <{ %struct.bdaddr_t, i8, i8, i8, [3 x i8], i16, i8 }>
%struct.inquiry_info_rssi = type <{ %struct.bdaddr_t, i8, i8, [3 x i8], i16, i8 }>
%struct.hci_ev_remote_ext_features = type <{ i8, i16, i8, i8, [8 x i8] }>
%struct.hci_ev_sync_conn_complete = type <{ i8, i16, %struct.bdaddr_t, i8, i8, i8, i16, i16, i8 }>
%struct.hci_ev_ext_inquiry_result = type { i8, [0 x %struct.extended_inquiry_info] }
%struct.extended_inquiry_info = type <{ %struct.bdaddr_t, i8, i8, [3 x i8], i16, i8, [240 x i8] }>
%struct.hci_ev_key_refresh_complete = type <{ i8, i16 }>
%struct.hci_cp_io_capability_reply = type { %struct.bdaddr_t, i8, i8, i8 }
%struct.hci_cp_io_capability_neg_reply = type { %struct.bdaddr_t, i8 }
%struct.oob_data = type { %struct.list_head, %struct.bdaddr_t, i8, i8, [16 x i8], [16 x i8], [16 x i8], [16 x i8] }
%struct.hci_ev_io_capa_reply = type { %struct.bdaddr_t, i8, i8, i8 }
%struct.hci_ev_user_confirm_req = type <{ %struct.bdaddr_t, i32 }>
%struct.hci_cp_remote_oob_data_neg_reply = type { %struct.bdaddr_t }
%struct.hci_cp_remote_oob_ext_data_reply = type { %struct.bdaddr_t, [16 x i8], [16 x i8], [16 x i8], [16 x i8] }
%struct.hci_cp_remote_oob_data_reply = type { %struct.bdaddr_t, [16 x i8], [16 x i8] }
%struct.hci_ev_simple_pair_complete = type { i8, %struct.bdaddr_t }
%struct.hci_ev_user_passkey_notify = type <{ %struct.bdaddr_t, i32 }>
%struct.hci_ev_keypress_notify = type { %struct.bdaddr_t, i8 }
%struct.hci_ev_remote_host_features = type { %struct.bdaddr_t, [8 x i8] }
%struct.hci_ev_phy_link_complete = type { i8, i8 }
%struct.amp_mgr = type { %struct.list_head, ptr, ptr, ptr, %struct.kref, i8, i8, i32, i32, %struct.list_head, %struct.mutex }
%struct.hci_ev_disconn_phy_link_complete = type { i8, i8, i8 }
%struct.hci_ev_logical_link_complete = type <{ i8, i16, i8, i8 }>
%struct.hci_chan = type { %struct.list_head, i16, ptr, %struct.sk_buff_head, i32, i8, i8 }
%struct.l2cap_chan = type { ptr, ptr, ptr, %struct.kref, %struct.atomic_t, i8, %struct.bdaddr_t, i8, %struct.bdaddr_t, i8, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, [64 x i8], i8, i8, i8, i8, i16, i16, i16, i8, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i8, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, i16, i16, i8, i16, ptr, ptr, i16, i8, i16, i8, i8, i16, i32, i32, i32, i8, i8, i16, i32, i32, i32, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work, %struct.delayed_work, ptr, %struct.sk_buff_head, %struct.sk_buff_head, %struct.l2cap_seq_list, %struct.l2cap_seq_list, %struct.list_head, %struct.list_head, ptr, ptr, %struct.mutex }
%struct.l2cap_seq_list = type { i16, i16, i16, ptr }
%struct.l2cap_conn = type { ptr, ptr, i32, i32, i8, i8, i8, i8, %struct.delayed_work, ptr, i32, i8, %struct.mutex, %struct.sk_buff_head, %struct.work_struct, %struct.work_struct, i8, ptr, %struct.list_head, %struct.mutex, %struct.kref, %struct.list_head }
%struct.hci_ev_disconn_logical_link_complete = type <{ i8, i16, i8 }>
%struct.hci_ev_num_comp_blocks = type <{ i16, i8, [0 x %struct.hci_comp_blocks_info] }>
%struct.hci_comp_blocks_info = type { i16, i16, i16 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.hci_rp_read_enc_key_size = type <{ i8, i16, i8 }>
%struct.hci_rp_role_discovery = type <{ i8, i16, i8 }>
%struct.hci_rp_read_link_policy = type <{ i8, i16, i16 }>
%struct.hci_rp_write_link_policy = type <{ i8, i16 }>
%struct.hci_rp_read_def_link_policy = type <{ i8, i16 }>
%struct.hci_cp_read_stored_link_key = type { %struct.bdaddr_t, i8 }
%struct.hci_rp_read_stored_link_key = type <{ i8, i16, i16 }>
%struct.hci_rp_delete_stored_link_key = type <{ i8, i16 }>
%struct.hci_rp_read_local_name = type { i8, [248 x i8] }
%struct.hci_rp_read_class_of_dev = type { i8, [3 x i8] }
%struct.hci_rp_read_voice_setting = type <{ i8, i16 }>
%struct.hci_rp_read_num_supported_iac = type { i8, i8 }
%struct.hci_rp_read_auth_payload_to = type <{ i8, i16, i16 }>
%struct.hci_rp_write_auth_payload_to = type <{ i8, i16 }>
%struct.hci_rp_read_local_version = type <{ i8, i8, i16, i8, i16, i16 }>
%struct.hci_rp_read_local_commands = type { i8, [64 x i8] }
%struct.hci_rp_read_local_features = type { i8, [8 x i8] }
%struct.hci_rp_read_local_ext_features = type { i8, i8, i8, [8 x i8] }
%struct.hci_rp_read_buffer_size = type <{ i8, i16, i8, i16, i16 }>
%struct.hci_rp_read_bd_addr = type { i8, %struct.bdaddr_t }
%struct.hci_rp_read_local_pairing_opts = type { i8, i8, i8 }
%struct.hci_rp_read_page_scan_activity = type <{ i8, i16, i16 }>
%struct.hci_cp_write_page_scan_activity = type { i16, i16 }
%struct.hci_rp_read_page_scan_type = type { i8, i8 }
%struct.hci_rp_read_data_block_size = type <{ i8, i16, i16, i16 }>
%struct.hci_rp_read_flow_control_mode = type { i8, i8 }
%struct.hci_rp_read_local_amp_info = type <{ i8, i8, i32, i32, i32, i32, i8, i16, i16, i32, i32 }>
%struct.hci_cp_read_clock = type <{ i16, i8 }>
%struct.hci_rp_read_clock = type <{ i8, i16, i32, i16 }>
%struct.hci_rp_read_inq_rsp_tx_power = type { i8, i8 }
%struct.hci_rp_read_def_err_data_reporting = type { i8, i8 }
%struct.hci_rp_pin_code_reply = type { i8, %struct.bdaddr_t }
%struct.hci_cp_pin_code_reply = type { %struct.bdaddr_t, i8, [16 x i8] }
%struct.hci_rp_pin_code_neg_reply = type { i8, %struct.bdaddr_t }
%struct.hci_rp_le_read_buffer_size = type <{ i8, i16, i8 }>
%struct.hci_rp_le_read_local_features = type { i8, [8 x i8] }
%struct.hci_rp_le_read_adv_tx_power = type { i8, i8 }
%struct.hci_rp_user_confirm_reply = type { i8, %struct.bdaddr_t }
%struct.hci_rp_le_read_accept_list_size = type { i8, i8 }
%struct.hci_cp_le_add_to_accept_list = type { i8, %struct.bdaddr_t }
%struct.hci_cp_le_del_from_accept_list = type { i8, %struct.bdaddr_t }
%struct.hci_rp_le_read_supported_states = type { i8, [8 x i8] }
%struct.hci_rp_le_read_def_data_len = type <{ i8, i16, i16 }>
%struct.hci_cp_le_write_def_data_len = type { i16, i16 }
%struct.hci_cp_le_add_to_resolv_list = type { i8, %struct.bdaddr_t, [16 x i8], [16 x i8] }
%struct.hci_cp_le_del_from_resolv_list = type { i8, %struct.bdaddr_t }
%struct.hci_rp_le_read_resolv_list_size = type { i8, i8 }
%struct.hci_rp_le_read_max_data_len = type <{ i8, i16, i16, i16, i16 }>
%struct.hci_cp_write_le_host_supported = type { i8, i8 }
%struct.hci_cp_le_set_adv_param = type <{ i16, i16, i8, i8, i8, %struct.bdaddr_t, i8, i8 }>
%struct.hci_rp_read_rssi = type <{ i8, i16, i8 }>
%struct.hci_rp_read_tx_power = type <{ i8, i16, i8 }>
%struct.hci_cp_read_tx_power = type <{ i16, i8 }>
%struct.hci_cp_le_set_ext_scan_params = type { i8, i8, i8, [0 x i8] }
%struct.hci_cp_le_set_default_phy = type { i8, i8, i8 }
%struct.hci_rp_le_read_num_supported_adv_sets = type { i8, i8 }
%struct.hci_cp_le_set_ext_adv_params = type <{ i8, i16, [3 x i8], [3 x i8], i8, i8, i8, %struct.bdaddr_t, i8, i8, i8, i8, i8, i8, i8 }>
%struct.hci_rp_le_set_ext_adv_params = type { i8, i8 }
%struct.adv_info = type { %struct.list_head, i8, i8, i8, i32, i16, i16, i16, i16, [251 x i8], i16, [251 x i8], i8, i32, i32, %struct.bdaddr_t, i8, %struct.delayed_work }
%struct.hci_cp_le_set_ext_adv_enable = type { i8, i8, [0 x i8] }
%struct.hci_cp_le_set_adv_set_rand_addr = type { i8, %struct.bdaddr_t }
%struct.hci_rp_le_read_transmit_power = type { i8, i8, i8 }
%struct.hci_cp_le_set_privacy_mode = type { i8, %struct.bdaddr_t, i8 }
%struct.hci_cp_disconnect = type <{ i16, i8 }>
%struct.hci_cp_le_create_conn = type <{ i16, i16, i8, i8, %struct.bdaddr_t, i8, i16, i16, i16, i16, i16, i16 }>
%struct.hci_cp_le_ext_create_conn = type { i8, i8, i8, %struct.bdaddr_t, i8, [0 x i8] }
%struct.hci_ev_le_conn_complete = type <{ i8, i16, i8, i8, %struct.bdaddr_t, i16, i16, i16, i8 }>
%struct.hci_ev_le_advertising_info = type { i8, i8, %struct.bdaddr_t, i8, [0 x i8] }
%struct.hci_ev_le_conn_update_complete = type <{ i8, i16, i16, i16, i16 }>
%struct.hci_ev_le_remote_feat_complete = type <{ i8, i16, [8 x i8] }>
%struct.hci_cp_le_ltk_reply = type { i16, [16 x i8] }
%struct.hci_cp_le_ltk_neg_reply = type { i16 }
%struct.smp_ltk = type { %struct.list_head, %struct.callback_head, %struct.bdaddr_t, i8, i8, i8, i8, i16, i64, [16 x i8] }
%struct.hci_ev_le_ltk_req = type <{ i16, i64, i16 }>
%struct.hci_cp_le_conn_param_req_neg_reply = type <{ i16, i8 }>
%struct.hci_cp_le_conn_param_req_reply = type { i16, i16, i16, i16, i16, i16, i16 }
%struct.hci_ev_le_remote_conn_param_req = type { i16, i16, i16, i16, i16 }
%struct.hci_ev_le_enh_conn_complete = type <{ i8, i16, i8, i8, %struct.bdaddr_t, %struct.bdaddr_t, %struct.bdaddr_t, i16, i16, i16, i8 }>
%struct.hci_ev_le_direct_adv_report = type { i8, [0 x %struct.hci_ev_le_direct_adv_info] }
%struct.hci_ev_le_direct_adv_info = type { i8, i8, %struct.bdaddr_t, i8, %struct.bdaddr_t, i8 }
%struct.hci_ev_le_phy_update_complete = type <{ i8, i16, i8, i8 }>
%struct.hci_ev_le_ext_adv_info = type { i16, i8, %struct.bdaddr_t, i8, i8, i8, i8, i8, i16, i8, %struct.bdaddr_t, i8, [0 x i8] }
%struct.hci_evt_le_ext_adv_set_term = type <{ i8, i8, i16, i8 }>
%struct.hci_cp_le_read_remote_features = type { i16 }
%struct.smp_irk = type { %struct.list_head, %struct.callback_head, %struct.bdaddr_t, %struct.bdaddr_t, i8, [16 x i8] }

@.str = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: Malformed HCI Event\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"%s: Received unexpected HCI Event 0x%2.2x\0A\00", [53 x i8] zeroinitializer }, align 32
@hci_event_packet.__UNIQUE_ID_ddebug660 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, i8 6, i8 -71, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.2 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"bluetooth\00", [22 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hci_event_packet\00", [47 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"net/bluetooth/hci_event.c\00", [38 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"%s: event 0x%2.2x\0A\00", [45 x i8] zeroinitializer }, align 32
@hci_ev_table = internal constant { [256 x %struct.hci_ev], [768 x i8] } { [256 x %struct.hci_ev] [%struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_inquiry_complete_evt }, i16 1, i16 1 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_inquiry_result_evt }, i16 1, i16 260 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_conn_complete_evt }, i16 11, i16 11 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_conn_request_evt }, i16 10, i16 10 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_disconn_complete_evt }, i16 4, i16 4 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_auth_complete_evt }, i16 3, i16 3 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_remote_name_evt }, i16 255, i16 255 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_encrypt_change_evt }, i16 4, i16 4 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_change_link_key_complete_evt }, i16 3, i16 3 }, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_remote_features_evt }, i16 11, i16 11 }, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 1, %union.anon.148 { ptr @hci_cmd_complete_evt }, i16 3, i16 260 }, %struct.hci_ev { i8 1, %union.anon.148 { ptr @hci_cmd_status_evt }, i16 4, i16 4 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_hardware_error_evt }, i16 1, i16 1 }, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_role_change_evt }, i16 8, i16 8 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_num_comp_pkts_evt }, i16 1, i16 260 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_mode_change_evt }, i16 6, i16 6 }, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_pin_code_request_evt }, i16 6, i16 6 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_link_key_request_evt }, i16 6, i16 6 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_link_key_notify_evt }, i16 23, i16 23 }, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_clock_offset_evt }, i16 5, i16 5 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_pkt_type_change_evt }, i16 5, i16 5 }, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_pscan_rep_mode_evt }, i16 7, i16 7 }, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_inquiry_result_with_rssi_evt }, i16 1, i16 260 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_remote_ext_features_evt }, i16 13, i16 13 }, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_sync_conn_complete_evt }, i16 17, i16 17 }, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_extended_inquiry_result_evt }, i16 1, i16 260 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_key_refresh_complete_evt }, i16 3, i16 3 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_io_capa_request_evt }, i16 6, i16 6 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_io_capa_reply_evt }, i16 9, i16 9 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_user_confirm_request_evt }, i16 10, i16 10 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_user_passkey_request_evt }, i16 6, i16 6 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_remote_oob_data_request_evt }, i16 6, i16 6 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_simple_pair_complete_evt }, i16 7, i16 7 }, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_user_passkey_notify_evt }, i16 10, i16 10 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_keypress_notify_evt }, i16 7, i16 7 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_remote_host_features_evt }, i16 14, i16 14 }, %struct.hci_ev { i8 1, %union.anon.148 { ptr @hci_le_meta_evt }, i16 1, i16 260 }, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_phy_link_complete_evt }, i16 2, i16 2 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_chan_selected_evt }, i16 1, i16 1 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_disconn_phylink_complete_evt }, i16 3, i16 3 }, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_loglink_complete_evt }, i16 5, i16 5 }, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_disconn_loglink_complete_evt }, i16 4, i16 4 }, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @hci_num_comp_blocks_evt }, i16 3, i16 3 }, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev zeroinitializer, %struct.hci_ev { i8 0, %union.anon.148 { ptr @msft_vendor_evt }, i16 0, i16 0 }], [768 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: unexpected event 0x%2.2x length: %u < %u\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: unexpected event 0x%2.2x length: %u > %u\0A\00", [50 x i8] zeroinitializer }, align 32
@hci_inquiry_complete_evt.__UNIQUE_ID_ddebug594 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.8, ptr @.str.4, ptr @.str.9, i8 2, i8 -27, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.8 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_inquiry_complete_evt\00", [39 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: status 0x%2.2x\0A\00", [44 x i8] zeroinitializer }, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@hci_inquiry_result_evt.__UNIQUE_ID_ddebug595 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.10, ptr @.str.4, ptr @.str.11, i8 2, i8 -10, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.10 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hci_inquiry_result_evt\00", [41 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"%s: num %d\0A\00", [20 x i8] zeroinitializer }, align 32
@hci_conn_complete_evt.__UNIQUE_ID_ddebug596 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.12, ptr @.str.4, ptr @.str.9, i8 2, i8 -1, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.12 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_conn_complete_evt\00", [42 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s: no memory for new conn\0A\00", [36 x i8] zeroinitializer }, align 32
@hci_conn_hash_lookup_ba.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.14 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"include/net/bluetooth/hci_core.h\00", [63 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.16 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.18 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@hci_conn_hold.__UNIQUE_ID_ddebug471 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.19, ptr @.str.14, ptr @.str.20, i8 1, i8 39, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.19 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"hci_conn_hold\00", [18 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hcon %p orig refcnt %d\0A\00", [40 x i8] zeroinitializer }, align 32
@hci_cb_list_lock = external dso_local global %struct.mutex, align 4
@hci_cb_list = external dso_local global %struct.list_head, align 4
@hci_conn_request_evt.__UNIQUE_ID_ddebug597 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.21, ptr @.str.4, ptr @.str.22, i8 3, i8 31, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.21 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hci_conn_request_evt\00", [43 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: bdaddr %pMR type 0x%x\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: no memory for new connection\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"unknown link type %d\0A\00", [42 x i8] zeroinitializer }, align 32
@hci_disconn_complete_evt.__UNIQUE_ID_ddebug598 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.25, ptr @.str.4, ptr @.str.9, i8 3, i8 59, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.25 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_disconn_complete_evt\00", [39 x i8] zeroinitializer }, align 32
@hci_conn_hash_lookup_handle.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@hci_auth_complete_evt.__UNIQUE_ID_ddebug599 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.26, ptr @.str.4, ptr @.str.9, i8 3, i8 80, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.26 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_auth_complete_evt\00", [42 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%s: re-auth of legacy device is not possible.\0A\00", [49 x i8] zeroinitializer }, align 32
@hci_conn_drop.__UNIQUE_ID_ddebug472 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.28, ptr @.str.14, ptr @.str.20, i8 1, i8 41, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.28 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"hci_conn_drop\00", [18 x i8] zeroinitializer }, align 32
@hci_remote_name_evt.__UNIQUE_ID_ddebug600 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.29, ptr @.str.4, ptr @.str.9, i8 3, i8 97, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.29 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hci_remote_name_evt\00", [44 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s: Name resolve takes too long.\00", [63 x i8] zeroinitializer }, align 32
@hci_encrypt_change_evt.__UNIQUE_ID_ddebug602 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.31, ptr @.str.4, ptr @.str.9, i8 3, i8 118, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.31 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hci_encrypt_change_evt\00", [41 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: sending read key size failed\0A\00", [62 x i8] zeroinitializer }, align 32
@read_enc_key_size_complete.__UNIQUE_ID_ddebug601 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.33, ptr @.str.4, ptr @.str.34, i8 3, i8 108, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.33 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"read_enc_key_size_complete\00", [37 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"%s status 0x%02x\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s: invalid read key size response\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"%s: failed to read key size for handle %u\0A\00", [53 x i8] zeroinitializer }, align 32
@hci_change_link_key_complete_evt.__UNIQUE_ID_ddebug603 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.37, ptr @.str.4, ptr @.str.9, i8 3, i8 -109, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.37 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"hci_change_link_key_complete_evt\00", [63 x i8] zeroinitializer }, align 32
@hci_remote_features_evt.__UNIQUE_ID_ddebug604 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.38, ptr @.str.4, ptr @.str.9, i8 3, i8 -103, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.38 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_remote_features_evt\00", [40 x i8] zeroinitializer }, align 32
@hci_cmd_complete_evt.__UNIQUE_ID_ddebug605 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.39, ptr @.str.4, ptr @.str.40, i8 3, i8 -35, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.39 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hci_cmd_complete_evt\00", [43 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: opcode 0x%4.4x\0A\00", [44 x i8] zeroinitializer }, align 32
@hci_cc_table = internal constant { [89 x %struct.hci_cc], [276 x i8] } { [89 x %struct.hci_cc] [%struct.hci_cc { i16 1026, ptr @hci_cc_inquiry_cancel, i16 1, i16 1 }, %struct.hci_cc { i16 1027, ptr @hci_cc_periodic_inq, i16 1, i16 1 }, %struct.hci_cc { i16 1028, ptr @hci_cc_exit_periodic_inq, i16 1, i16 1 }, %struct.hci_cc { i16 1050, ptr @hci_cc_remote_name_req_cancel, i16 1, i16 1 }, %struct.hci_cc { i16 2057, ptr @hci_cc_role_discovery, i16 4, i16 4 }, %struct.hci_cc { i16 2060, ptr @hci_cc_read_link_policy, i16 5, i16 5 }, %struct.hci_cc { i16 2061, ptr @hci_cc_write_link_policy, i16 3, i16 3 }, %struct.hci_cc { i16 2062, ptr @hci_cc_read_def_link_policy, i16 3, i16 3 }, %struct.hci_cc { i16 2063, ptr @hci_cc_write_def_link_policy, i16 1, i16 1 }, %struct.hci_cc { i16 3075, ptr @hci_cc_reset, i16 1, i16 1 }, %struct.hci_cc { i16 3085, ptr @hci_cc_read_stored_link_key, i16 5, i16 5 }, %struct.hci_cc { i16 3090, ptr @hci_cc_delete_stored_link_key, i16 3, i16 3 }, %struct.hci_cc { i16 3091, ptr @hci_cc_write_local_name, i16 1, i16 1 }, %struct.hci_cc { i16 3092, ptr @hci_cc_read_local_name, i16 249, i16 249 }, %struct.hci_cc { i16 3104, ptr @hci_cc_write_auth_enable, i16 1, i16 1 }, %struct.hci_cc { i16 3106, ptr @hci_cc_write_encrypt_mode, i16 1, i16 1 }, %struct.hci_cc { i16 3098, ptr @hci_cc_write_scan_enable, i16 1, i16 1 }, %struct.hci_cc { i16 3077, ptr @hci_cc_set_event_filter, i16 1, i16 1 }, %struct.hci_cc { i16 3107, ptr @hci_cc_read_class_of_dev, i16 4, i16 4 }, %struct.hci_cc { i16 3108, ptr @hci_cc_write_class_of_dev, i16 1, i16 1 }, %struct.hci_cc { i16 3109, ptr @hci_cc_read_voice_setting, i16 3, i16 3 }, %struct.hci_cc { i16 3110, ptr @hci_cc_write_voice_setting, i16 1, i16 1 }, %struct.hci_cc { i16 3128, ptr @hci_cc_read_num_supported_iac, i16 2, i16 2 }, %struct.hci_cc { i16 3158, ptr @hci_cc_write_ssp_mode, i16 1, i16 1 }, %struct.hci_cc { i16 3194, ptr @hci_cc_write_sc_support, i16 1, i16 1 }, %struct.hci_cc { i16 3195, ptr @hci_cc_read_auth_payload_timeout, i16 5, i16 5 }, %struct.hci_cc { i16 3196, ptr @hci_cc_write_auth_payload_timeout, i16 3, i16 3 }, %struct.hci_cc { i16 4097, ptr @hci_cc_read_local_version, i16 9, i16 9 }, %struct.hci_cc { i16 4098, ptr @hci_cc_read_local_commands, i16 65, i16 65 }, %struct.hci_cc { i16 4099, ptr @hci_cc_read_local_features, i16 9, i16 9 }, %struct.hci_cc { i16 4100, ptr @hci_cc_read_local_ext_features, i16 11, i16 11 }, %struct.hci_cc { i16 4101, ptr @hci_cc_read_buffer_size, i16 8, i16 8 }, %struct.hci_cc { i16 4105, ptr @hci_cc_read_bd_addr, i16 7, i16 7 }, %struct.hci_cc { i16 4108, ptr @hci_cc_read_local_pairing_opts, i16 3, i16 3 }, %struct.hci_cc { i16 3099, ptr @hci_cc_read_page_scan_activity, i16 5, i16 5 }, %struct.hci_cc { i16 3100, ptr @hci_cc_write_page_scan_activity, i16 1, i16 1 }, %struct.hci_cc { i16 3142, ptr @hci_cc_read_page_scan_type, i16 2, i16 2 }, %struct.hci_cc { i16 3143, ptr @hci_cc_write_page_scan_type, i16 1, i16 1 }, %struct.hci_cc { i16 4106, ptr @hci_cc_read_data_block_size, i16 7, i16 7 }, %struct.hci_cc { i16 3174, ptr @hci_cc_read_flow_control_mode, i16 2, i16 2 }, %struct.hci_cc { i16 5129, ptr @hci_cc_read_local_amp_info, i16 31, i16 31 }, %struct.hci_cc { i16 5127, ptr @hci_cc_read_clock, i16 9, i16 9 }, %struct.hci_cc { i16 3160, ptr @hci_cc_read_inq_rsp_tx_power, i16 2, i16 2 }, %struct.hci_cc { i16 3162, ptr @hci_cc_read_def_err_data_reporting, i16 2, i16 2 }, %struct.hci_cc { i16 3163, ptr @hci_cc_write_def_err_data_reporting, i16 1, i16 1 }, %struct.hci_cc { i16 1037, ptr @hci_cc_pin_code_reply, i16 7, i16 7 }, %struct.hci_cc { i16 1038, ptr @hci_cc_pin_code_neg_reply, i16 7, i16 7 }, %struct.hci_cc { i16 3159, ptr @hci_cc_read_local_oob_data, i16 33, i16 33 }, %struct.hci_cc { i16 3197, ptr @hci_cc_read_local_oob_ext_data, i16 65, i16 65 }, %struct.hci_cc { i16 8194, ptr @hci_cc_le_read_buffer_size, i16 4, i16 4 }, %struct.hci_cc { i16 8195, ptr @hci_cc_le_read_local_features, i16 9, i16 9 }, %struct.hci_cc { i16 8199, ptr @hci_cc_le_read_adv_tx_power, i16 2, i16 2 }, %struct.hci_cc { i16 1068, ptr @hci_cc_user_confirm_reply, i16 7, i16 7 }, %struct.hci_cc { i16 1069, ptr @hci_cc_user_confirm_neg_reply, i16 7, i16 7 }, %struct.hci_cc { i16 1070, ptr @hci_cc_user_passkey_reply, i16 7, i16 7 }, %struct.hci_cc { i16 1071, ptr @hci_cc_user_passkey_neg_reply, i16 7, i16 7 }, %struct.hci_cc { i16 8197, ptr @hci_cc_le_set_random_addr, i16 1, i16 1 }, %struct.hci_cc { i16 8202, ptr @hci_cc_le_set_adv_enable, i16 1, i16 1 }, %struct.hci_cc { i16 8203, ptr @hci_cc_le_set_scan_param, i16 1, i16 1 }, %struct.hci_cc { i16 8204, ptr @hci_cc_le_set_scan_enable, i16 1, i16 1 }, %struct.hci_cc { i16 8207, ptr @hci_cc_le_read_accept_list_size, i16 2, i16 2 }, %struct.hci_cc { i16 8208, ptr @hci_cc_le_clear_accept_list, i16 1, i16 1 }, %struct.hci_cc { i16 8209, ptr @hci_cc_le_add_to_accept_list, i16 1, i16 1 }, %struct.hci_cc { i16 8210, ptr @hci_cc_le_del_from_accept_list, i16 1, i16 1 }, %struct.hci_cc { i16 8220, ptr @hci_cc_le_read_supported_states, i16 9, i16 9 }, %struct.hci_cc { i16 8227, ptr @hci_cc_le_read_def_data_len, i16 5, i16 5 }, %struct.hci_cc { i16 8228, ptr @hci_cc_le_write_def_data_len, i16 1, i16 1 }, %struct.hci_cc { i16 8231, ptr @hci_cc_le_add_to_resolv_list, i16 1, i16 1 }, %struct.hci_cc { i16 8232, ptr @hci_cc_le_del_from_resolv_list, i16 1, i16 1 }, %struct.hci_cc { i16 8233, ptr @hci_cc_le_clear_resolv_list, i16 1, i16 1 }, %struct.hci_cc { i16 8234, ptr @hci_cc_le_read_resolv_list_size, i16 2, i16 2 }, %struct.hci_cc { i16 8237, ptr @hci_cc_le_set_addr_resolution_enable, i16 1, i16 1 }, %struct.hci_cc { i16 8239, ptr @hci_cc_le_read_max_data_len, i16 9, i16 9 }, %struct.hci_cc { i16 3181, ptr @hci_cc_write_le_host_supported, i16 1, i16 1 }, %struct.hci_cc { i16 8198, ptr @hci_cc_set_adv_param, i16 1, i16 1 }, %struct.hci_cc { i16 5125, ptr @hci_cc_read_rssi, i16 4, i16 4 }, %struct.hci_cc { i16 3117, ptr @hci_cc_read_tx_power, i16 4, i16 4 }, %struct.hci_cc { i16 6148, ptr @hci_cc_write_ssp_debug_mode, i16 1, i16 1 }, %struct.hci_cc { i16 8257, ptr @hci_cc_le_set_ext_scan_param, i16 1, i16 1 }, %struct.hci_cc { i16 8258, ptr @hci_cc_le_set_ext_scan_enable, i16 1, i16 1 }, %struct.hci_cc { i16 8241, ptr @hci_cc_le_set_default_phy, i16 1, i16 1 }, %struct.hci_cc { i16 8251, ptr @hci_cc_le_read_num_adv_sets, i16 2, i16 2 }, %struct.hci_cc { i16 8246, ptr @hci_cc_set_ext_adv_param, i16 2, i16 2 }, %struct.hci_cc { i16 8249, ptr @hci_cc_le_set_ext_adv_enable, i16 1, i16 1 }, %struct.hci_cc { i16 8245, ptr @hci_cc_le_set_adv_set_random_addr, i16 1, i16 1 }, %struct.hci_cc { i16 8252, ptr @hci_cc_le_remove_adv_set, i16 1, i16 1 }, %struct.hci_cc { i16 8253, ptr @hci_cc_le_clear_adv_sets, i16 1, i16 1 }, %struct.hci_cc { i16 8267, ptr @hci_cc_le_read_transmit_power, i16 3, i16 3 }, %struct.hci_cc { i16 8270, ptr @hci_cc_le_set_privacy_mode, i16 1, i16 1 }], [276 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%s: unexpected event for opcode 0x%4.4x\0A\00", [55 x i8] zeroinitializer }, align 32
@hci_cc_inquiry_cancel.__UNIQUE_ID_ddebug476 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.42, ptr @.str.4, ptr @.str.9, i8 0, i8 22, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.42 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_cc_inquiry_cancel\00", [42 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: Ignoring error of Inquiry Cancel command\0A\00", [50 x i8] zeroinitializer }, align 32
@hci_cc_periodic_inq.__UNIQUE_ID_ddebug477 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.44, ptr @.str.4, ptr @.str.9, i8 0, i8 32, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.44 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hci_cc_periodic_inq\00", [44 x i8] zeroinitializer }, align 32
@hci_cc_exit_periodic_inq.__UNIQUE_ID_ddebug478 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.45, ptr @.str.4, ptr @.str.9, i8 0, i8 36, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.45 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_exit_periodic_inq\00", [39 x i8] zeroinitializer }, align 32
@hci_cc_remote_name_req_cancel.__UNIQUE_ID_ddebug479 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.46, ptr @.str.4, ptr @.str.9, i8 0, i8 40, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.46 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hci_cc_remote_name_req_cancel\00", [34 x i8] zeroinitializer }, align 32
@hci_cc_role_discovery.__UNIQUE_ID_ddebug480 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.47, ptr @.str.4, ptr @.str.9, i8 0, i8 43, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.47 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_cc_role_discovery\00", [42 x i8] zeroinitializer }, align 32
@hci_cc_read_link_policy.__UNIQUE_ID_ddebug481 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.48, ptr @.str.4, ptr @.str.9, i8 0, i8 48, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.48 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_cc_read_link_policy\00", [40 x i8] zeroinitializer }, align 32
@hci_cc_write_link_policy.__UNIQUE_ID_ddebug482 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.49, ptr @.str.4, ptr @.str.9, i8 0, i8 54, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.49 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_write_link_policy\00", [39 x i8] zeroinitializer }, align 32
@hci_cc_read_def_link_policy.__UNIQUE_ID_ddebug483 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.50, ptr @.str.4, ptr @.str.9, i8 0, i8 60, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.50 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_read_def_link_policy\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_write_def_link_policy.__UNIQUE_ID_ddebug484 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.51, ptr @.str.4, ptr @.str.9, i8 0, i8 64, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.51 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_cc_write_def_link_policy\00", [35 x i8] zeroinitializer }, align 32
@hci_cc_reset.__UNIQUE_ID_ddebug485 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.52, ptr @.str.4, ptr @.str.9, i8 0, i8 69, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.52 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"hci_cc_reset\00", [19 x i8] zeroinitializer }, align 32
@hci_cc_read_stored_link_key.__UNIQUE_ID_ddebug486 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.53, ptr @.str.4, ptr @.str.9, i8 0, i8 78, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.53 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_read_stored_link_key\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_delete_stored_link_key.__UNIQUE_ID_ddebug487 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.54, ptr @.str.4, ptr @.str.9, i8 0, i8 83, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.54 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hci_cc_delete_stored_link_key\00", [34 x i8] zeroinitializer }, align 32
@hci_cc_write_local_name.__UNIQUE_ID_ddebug488 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.55, ptr @.str.4, ptr @.str.9, i8 0, i8 87, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.55 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_cc_write_local_name\00", [40 x i8] zeroinitializer }, align 32
@hci_cc_read_local_name.__UNIQUE_ID_ddebug489 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.56, ptr @.str.4, ptr @.str.9, i8 0, i8 93, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.56 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hci_cc_read_local_name\00", [41 x i8] zeroinitializer }, align 32
@hci_cc_write_auth_enable.__UNIQUE_ID_ddebug490 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.57, ptr @.str.4, ptr @.str.9, i8 0, i8 98, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.57 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_write_auth_enable\00", [39 x i8] zeroinitializer }, align 32
@hci_cc_write_encrypt_mode.__UNIQUE_ID_ddebug491 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.58, ptr @.str.4, ptr @.str.9, i8 0, i8 106, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.58 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_write_encrypt_mode\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_write_scan_enable.__UNIQUE_ID_ddebug492 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.59, ptr @.str.4, ptr @.str.9, i8 0, i8 112, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.59 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_write_scan_enable\00", [39 x i8] zeroinitializer }, align 32
@hci_cc_set_event_filter.__UNIQUE_ID_ddebug493 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.60, ptr @.str.4, ptr @.str.9, i8 0, i8 122, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.60 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_cc_set_event_filter\00", [40 x i8] zeroinitializer }, align 32
@hci_cc_read_class_of_dev.__UNIQUE_ID_ddebug494 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.61, ptr @.str.4, ptr @.str.9, i8 0, i8 -128, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.61 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_read_class_of_dev\00", [39 x i8] zeroinitializer }, align 32
@hci_cc_read_class_of_dev.__UNIQUE_ID_ddebug495 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.61, ptr @.str.4, ptr @.str.62, i8 0, i8 -126, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.62 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: class 0x%.2x%.2x%.2x\0A\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_write_class_of_dev.__UNIQUE_ID_ddebug496 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.63, ptr @.str.4, ptr @.str.9, i8 0, i8 -124, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.63 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_write_class_of_dev\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_read_voice_setting.__UNIQUE_ID_ddebug497 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.64, ptr @.str.4, ptr @.str.9, i8 0, i8 -117, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.64 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_read_voice_setting\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_read_voice_setting.__UNIQUE_ID_ddebug498 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.64, ptr @.str.4, ptr @.str.65, i8 0, i8 -114, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.65 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: voice setting 0x%4.4x\0A\00", [37 x i8] zeroinitializer }, align 32
@hci_cc_write_voice_setting.__UNIQUE_ID_ddebug499 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.66, ptr @.str.4, ptr @.str.9, i8 0, i8 -111, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.66 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hci_cc_write_voice_setting\00", [37 x i8] zeroinitializer }, align 32
@hci_cc_write_voice_setting.__UNIQUE_ID_ddebug500 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.66, ptr @.str.4, ptr @.str.65, i8 0, i8 -107, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@hci_cc_read_num_supported_iac.__UNIQUE_ID_ddebug501 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.67, ptr @.str.4, ptr @.str.9, i8 0, i8 -103, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.67 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hci_cc_read_num_supported_iac\00", [34 x i8] zeroinitializer }, align 32
@hci_cc_read_num_supported_iac.__UNIQUE_ID_ddebug502 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.67, ptr @.str.4, ptr @.str.68, i8 0, i8 -102, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.68 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"%s: num iac %d\0A\00", [16 x i8] zeroinitializer }, align 32
@hci_cc_write_ssp_mode.__UNIQUE_ID_ddebug503 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.69, ptr @.str.4, ptr @.str.9, i8 0, i8 -99, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.69 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_cc_write_ssp_mode\00", [42 x i8] zeroinitializer }, align 32
@hci_cc_write_sc_support.__UNIQUE_ID_ddebug504 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.70, ptr @.str.4, ptr @.str.9, i8 0, i8 -91, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.70 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_cc_write_sc_support\00", [40 x i8] zeroinitializer }, align 32
@hci_cc_read_auth_payload_timeout.__UNIQUE_ID_ddebug507 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.71, ptr @.str.4, ptr @.str.9, i8 0, i8 -73, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.71 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"hci_cc_read_auth_payload_timeout\00", [63 x i8] zeroinitializer }, align 32
@hci_cc_write_auth_payload_timeout.__UNIQUE_ID_ddebug508 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.72, ptr @.str.4, ptr @.str.9, i8 0, i8 -67, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.72 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"hci_cc_write_auth_payload_timeout\00", [62 x i8] zeroinitializer }, align 32
@hci_cc_read_local_version.__UNIQUE_ID_ddebug505 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.73, ptr @.str.4, ptr @.str.9, i8 0, i8 -83, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.73 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_read_local_version\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_read_local_commands.__UNIQUE_ID_ddebug506 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.74, ptr @.str.4, ptr @.str.9, i8 0, i8 -77, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.74 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hci_cc_read_local_commands\00", [37 x i8] zeroinitializer }, align 32
@hci_cc_read_local_features.__UNIQUE_ID_ddebug509 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.75, ptr @.str.4, ptr @.str.9, i8 0, i8 -61, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.75 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hci_cc_read_local_features\00", [37 x i8] zeroinitializer }, align 32
@hci_cc_read_local_ext_features.__UNIQUE_ID_ddebug510 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.76, ptr @.str.4, ptr @.str.9, i8 0, i8 -48, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.76 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hci_cc_read_local_ext_features\00", [33 x i8] zeroinitializer }, align 32
@hci_cc_read_buffer_size.__UNIQUE_ID_ddebug512 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.77, ptr @.str.4, ptr @.str.9, i8 0, i8 -39, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.77 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_cc_read_buffer_size\00", [40 x i8] zeroinitializer }, align 32
@hci_cc_read_buffer_size.__UNIQUE_ID_ddebug513 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.77, ptr @.str.4, ptr @.str.78, i8 0, i8 -34, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.78 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s acl mtu %d:%d sco mtu %d:%d\0A\00", [32 x i8] zeroinitializer }, align 32
@hci_cc_read_bd_addr.__UNIQUE_ID_ddebug514 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.79, ptr @.str.4, ptr @.str.9, i8 0, i8 -32, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.79 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hci_cc_read_bd_addr\00", [44 x i8] zeroinitializer }, align 32
@hci_cc_read_local_pairing_opts.__UNIQUE_ID_ddebug515 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.80, ptr @.str.4, ptr @.str.9, i8 0, i8 -27, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.80 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hci_cc_read_local_pairing_opts\00", [33 x i8] zeroinitializer }, align 32
@hci_cc_read_page_scan_activity.__UNIQUE_ID_ddebug516 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.81, ptr @.str.4, ptr @.str.9, i8 0, i8 -22, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.81 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hci_cc_read_page_scan_activity\00", [33 x i8] zeroinitializer }, align 32
@hci_cc_write_page_scan_activity.__UNIQUE_ID_ddebug517 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.82, ptr @.str.4, ptr @.str.9, i8 0, i8 -18, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.82 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_cc_write_page_scan_activity\00", [32 x i8] zeroinitializer }, align 32
@hci_cc_read_page_scan_type.__UNIQUE_ID_ddebug518 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.83, ptr @.str.4, ptr @.str.9, i8 0, i8 -13, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.83 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hci_cc_read_page_scan_type\00", [37 x i8] zeroinitializer }, align 32
@hci_cc_write_page_scan_type.__UNIQUE_ID_ddebug519 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.84, ptr @.str.4, ptr @.str.9, i8 0, i8 -8, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.84 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_write_page_scan_type\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_read_data_block_size.__UNIQUE_ID_ddebug520 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.85, ptr @.str.4, ptr @.str.9, i8 0, i8 -4, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.85 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_read_data_block_size\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_read_data_block_size.__UNIQUE_ID_ddebug521 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.85, ptr @.str.4, ptr @.str.86, i8 0, i8 -1, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.86 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s blk mtu %d cnt %d len %d\0A\00", [35 x i8] zeroinitializer }, align 32
@hci_cc_read_flow_control_mode.__UNIQUE_ID_ddebug511 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.87, ptr @.str.4, ptr @.str.9, i8 0, i8 -43, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.87 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hci_cc_read_flow_control_mode\00", [34 x i8] zeroinitializer }, align 32
@hci_cc_read_local_amp_info.__UNIQUE_ID_ddebug523 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.88, ptr @.str.4, ptr @.str.9, i8 1, i8 10, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.88 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hci_cc_read_local_amp_info\00", [37 x i8] zeroinitializer }, align 32
@hci_cc_read_clock.__UNIQUE_ID_ddebug522 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.89, ptr @.str.4, ptr @.str.9, i8 1, i8 2, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.89 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hci_cc_read_clock\00", [46 x i8] zeroinitializer }, align 32
@hci_cc_read_inq_rsp_tx_power.__UNIQUE_ID_ddebug524 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.90, ptr @.str.4, ptr @.str.9, i8 1, i8 16, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.90 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_cc_read_inq_rsp_tx_power\00", [35 x i8] zeroinitializer }, align 32
@hci_cc_read_def_err_data_reporting.__UNIQUE_ID_ddebug525 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.91, ptr @.str.4, ptr @.str.9, i8 1, i8 20, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.91 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"hci_cc_read_def_err_data_reporting\00", [61 x i8] zeroinitializer }, align 32
@hci_cc_write_def_err_data_reporting.__UNIQUE_ID_ddebug526 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.92, ptr @.str.4, ptr @.str.9, i8 1, i8 24, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.92 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"hci_cc_write_def_err_data_reporting\00", [60 x i8] zeroinitializer }, align 32
@hci_cc_pin_code_reply.__UNIQUE_ID_ddebug527 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.93, ptr @.str.4, ptr @.str.9, i8 1, i8 29, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.93 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_cc_pin_code_reply\00", [42 x i8] zeroinitializer }, align 32
@hci_cc_pin_code_neg_reply.__UNIQUE_ID_ddebug528 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.94, ptr @.str.4, ptr @.str.9, i8 1, i8 36, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.94 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_pin_code_neg_reply\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_read_local_oob_data.__UNIQUE_ID_ddebug537 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.95, ptr @.str.4, ptr @.str.9, i8 1, i8 71, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.95 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hci_cc_read_local_oob_data\00", [37 x i8] zeroinitializer }, align 32
@hci_cc_read_local_oob_ext_data.__UNIQUE_ID_ddebug538 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.96, ptr @.str.4, ptr @.str.9, i8 1, i8 73, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.96 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hci_cc_read_local_oob_ext_data\00", [33 x i8] zeroinitializer }, align 32
@hci_cc_le_read_buffer_size.__UNIQUE_ID_ddebug529 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.97, ptr @.str.4, ptr @.str.9, i8 1, i8 40, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.97 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hci_cc_le_read_buffer_size\00", [37 x i8] zeroinitializer }, align 32
@hci_cc_le_read_buffer_size.__UNIQUE_ID_ddebug530 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.97, ptr @.str.4, ptr @.str.98, i8 1, i8 43, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.98 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"%s le mtu %d:%d\0A\00", [47 x i8] zeroinitializer }, align 32
@hci_cc_le_read_local_features.__UNIQUE_ID_ddebug531 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.99, ptr @.str.4, ptr @.str.100, i8 1, i8 45, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.99 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hci_cc_le_read_local_features\00", [34 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"%s status 0x%2.2x\0A\00", [45 x i8] zeroinitializer }, align 32
@hci_cc_le_read_adv_tx_power.__UNIQUE_ID_ddebug532 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.101, ptr @.str.4, ptr @.str.9, i8 1, i8 49, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.101 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_le_read_adv_tx_power\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_user_confirm_reply.__UNIQUE_ID_ddebug533 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.102, ptr @.str.4, ptr @.str.9, i8 1, i8 53, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.102 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_user_confirm_reply\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_user_confirm_neg_reply.__UNIQUE_ID_ddebug534 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.103, ptr @.str.4, ptr @.str.9, i8 1, i8 57, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.103 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hci_cc_user_confirm_neg_reply\00", [34 x i8] zeroinitializer }, align 32
@hci_cc_user_passkey_reply.__UNIQUE_ID_ddebug535 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.104, ptr @.str.4, ptr @.str.9, i8 1, i8 62, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.104 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_user_passkey_reply\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_user_passkey_neg_reply.__UNIQUE_ID_ddebug536 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.105, ptr @.str.4, ptr @.str.9, i8 1, i8 66, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.105 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hci_cc_user_passkey_neg_reply\00", [34 x i8] zeroinitializer }, align 32
@hci_cc_le_set_random_addr.__UNIQUE_ID_ddebug539 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.106, ptr @.str.4, ptr @.str.9, i8 1, i8 76, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.106 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_le_set_random_addr\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_le_set_adv_enable.__UNIQUE_ID_ddebug546 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.107, ptr @.str.4, ptr @.str.9, i8 1, i8 125, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.107 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_le_set_adv_enable\00", [39 x i8] zeroinitializer }, align 32
@hci_lookup_le_connect.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@hci_cc_le_set_scan_param.__UNIQUE_ID_ddebug548 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.108, ptr @.str.4, ptr @.str.9, i8 1, i8 -105, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.108 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_le_set_scan_param\00", [39 x i8] zeroinitializer }, align 32
@hci_cc_le_set_scan_enable.__UNIQUE_ID_ddebug550 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.109, ptr @.str.4, ptr @.str.9, i8 1, i8 -72, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.109 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_le_set_scan_enable\00", [38 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"%s: use of reserved LE_Scan_Enable param %d\0A\00", [51 x i8] zeroinitializer }, align 32
@hci_cc_le_read_accept_list_size.__UNIQUE_ID_ddebug553 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.111, ptr @.str.4, ptr @.str.112, i8 1, i8 -58, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.111 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_cc_le_read_accept_list_size\00", [32 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s: status 0x%2.2x size %u\0A\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_le_clear_accept_list.__UNIQUE_ID_ddebug554 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.113, ptr @.str.4, ptr @.str.9, i8 1, i8 -54, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.113 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_le_clear_accept_list\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_le_add_to_accept_list.__UNIQUE_ID_ddebug555 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.114, ptr @.str.4, ptr @.str.9, i8 1, i8 -50, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.114 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_cc_le_add_to_accept_list\00", [35 x i8] zeroinitializer }, align 32
@hci_cc_le_del_from_accept_list.__UNIQUE_ID_ddebug556 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.115, ptr @.str.4, ptr @.str.9, i8 1, i8 -45, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.115 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hci_cc_le_del_from_accept_list\00", [33 x i8] zeroinitializer }, align 32
@hci_cc_le_read_supported_states.__UNIQUE_ID_ddebug557 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.116, ptr @.str.4, ptr @.str.9, i8 1, i8 -40, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.116 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_cc_le_read_supported_states\00", [32 x i8] zeroinitializer }, align 32
@hci_cc_le_read_def_data_len.__UNIQUE_ID_ddebug558 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.117, ptr @.str.4, ptr @.str.9, i8 1, i8 -36, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.117 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_le_read_def_data_len\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_le_write_def_data_len.__UNIQUE_ID_ddebug559 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.118, ptr @.str.4, ptr @.str.9, i8 1, i8 -32, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.118 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_cc_le_write_def_data_len\00", [35 x i8] zeroinitializer }, align 32
@hci_cc_le_add_to_resolv_list.__UNIQUE_ID_ddebug560 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.119, ptr @.str.4, ptr @.str.9, i8 1, i8 -27, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.119 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_cc_le_add_to_resolv_list\00", [35 x i8] zeroinitializer }, align 32
@hci_cc_le_del_from_resolv_list.__UNIQUE_ID_ddebug561 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.120, ptr @.str.4, ptr @.str.9, i8 1, i8 -21, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.120 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hci_cc_le_del_from_resolv_list\00", [33 x i8] zeroinitializer }, align 32
@hci_cc_le_clear_resolv_list.__UNIQUE_ID_ddebug562 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.121, ptr @.str.4, ptr @.str.9, i8 1, i8 -16, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.121 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_le_clear_resolv_list\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_le_read_resolv_list_size.__UNIQUE_ID_ddebug563 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.122, ptr @.str.4, ptr @.str.112, i8 1, i8 -12, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.122 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_cc_le_read_resolv_list_size\00", [32 x i8] zeroinitializer }, align 32
@hci_cc_le_set_addr_resolution_enable.__UNIQUE_ID_ddebug564 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.123, ptr @.str.4, ptr @.str.9, i8 1, i8 -8, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.123 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"hci_cc_le_set_addr_resolution_enable\00", [59 x i8] zeroinitializer }, align 32
@hci_cc_le_read_max_data_len.__UNIQUE_ID_ddebug565 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.124, ptr @.str.4, ptr @.str.9, i8 1, i8 -2, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.124 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_le_read_max_data_len\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_write_le_host_supported.__UNIQUE_ID_ddebug566 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.125, ptr @.str.4, ptr @.str.9, i8 2, i8 3, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.125 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hci_cc_write_le_host_supported\00", [33 x i8] zeroinitializer }, align 32
@hci_cc_set_adv_param.__UNIQUE_ID_ddebug567 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.126, ptr @.str.4, ptr @.str.9, i8 2, i8 12, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.126 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hci_cc_set_adv_param\00", [43 x i8] zeroinitializer }, align 32
@hci_cc_read_rssi.__UNIQUE_ID_ddebug569 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.127, ptr @.str.4, ptr @.str.9, i8 2, i8 26, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.127 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hci_cc_read_rssi\00", [47 x i8] zeroinitializer }, align 32
@hci_cc_read_tx_power.__UNIQUE_ID_ddebug570 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.128, ptr @.str.4, ptr @.str.9, i8 2, i8 32, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.128 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hci_cc_read_tx_power\00", [43 x i8] zeroinitializer }, align 32
@hci_cc_write_ssp_debug_mode.__UNIQUE_ID_ddebug571 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.129, ptr @.str.4, ptr @.str.9, i8 2, i8 40, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.129 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_write_ssp_debug_mode\00", [36 x i8] zeroinitializer }, align 32
@hci_cc_le_set_ext_scan_param.__UNIQUE_ID_ddebug549 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.130, ptr @.str.4, ptr @.str.9, i8 1, i8 -99, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.130 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_cc_le_set_ext_scan_param\00", [35 x i8] zeroinitializer }, align 32
@hci_cc_le_set_ext_scan_enable.__UNIQUE_ID_ddebug551 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.131, ptr @.str.4, ptr @.str.9, i8 1, i8 -67, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.131 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hci_cc_le_set_ext_scan_enable\00", [34 x i8] zeroinitializer }, align 32
@hci_cc_le_set_default_phy.__UNIQUE_ID_ddebug540 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.132, ptr @.str.4, ptr @.str.9, i8 1, i8 84, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.132 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cc_le_set_default_phy\00", [38 x i8] zeroinitializer }, align 32
@hci_cc_le_read_num_adv_sets.__UNIQUE_ID_ddebug552 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.133, ptr @.str.4, ptr @.str.134, i8 1, i8 -62, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.133 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cc_le_read_num_adv_sets\00", [36 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%s: status 0x%2.2x No of Adv sets %u\0A\00", [58 x i8] zeroinitializer }, align 32
@hci_cc_set_ext_adv_param.__UNIQUE_ID_ddebug568 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.135, ptr @.str.4, ptr @.str.9, i8 2, i8 18, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.135 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_set_ext_adv_param\00", [39 x i8] zeroinitializer }, align 32
@hci_cc_le_set_ext_adv_enable.__UNIQUE_ID_ddebug547 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.136, ptr @.str.4, ptr @.str.9, i8 1, i8 -121, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.136 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_cc_le_set_ext_adv_enable\00", [35 x i8] zeroinitializer }, align 32
@hci_cc_le_set_adv_set_random_addr.__UNIQUE_ID_ddebug541 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.137, ptr @.str.4, ptr @.str.9, i8 1, i8 90, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.137 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"hci_cc_le_set_adv_set_random_addr\00", [62 x i8] zeroinitializer }, align 32
@hci_cc_le_remove_adv_set.__UNIQUE_ID_ddebug542 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.138, ptr @.str.4, ptr @.str.9, i8 1, i8 100, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.138 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_le_remove_adv_set\00", [39 x i8] zeroinitializer }, align 32
@hci_cc_le_clear_adv_sets.__UNIQUE_ID_ddebug543 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.139, ptr @.str.4, ptr @.str.9, i8 1, i8 107, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.139 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_cc_le_clear_adv_sets\00", [39 x i8] zeroinitializer }, align 32
@hci_cc_le_read_transmit_power.__UNIQUE_ID_ddebug544 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.140, ptr @.str.4, ptr @.str.9, i8 1, i8 114, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.140 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"hci_cc_le_read_transmit_power\00", [34 x i8] zeroinitializer }, align 32
@hci_cc_le_set_privacy_mode.__UNIQUE_ID_ddebug545 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.141, ptr @.str.4, ptr @.str.9, i8 1, i8 118, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.141 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hci_cc_le_set_privacy_mode\00", [37 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"%s: unexpected cc 0x%4.4x length: %u < %u\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"%s: unexpected cc 0x%4.4x length: %u > %u\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%s: Malformed Command Complete: 0x%4.4x\0A\00", [55 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@hci_cmd_status_evt.__UNIQUE_ID_ddebug606 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.145, ptr @.str.4, ptr @.str.40, i8 3, i8 -18, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.145 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hci_cmd_status_evt\00", [45 x i8] zeroinitializer }, align 32
@hci_cs_table = internal constant { [18 x %struct.hci_cs], [48 x i8] } { [18 x %struct.hci_cs] [%struct.hci_cs { i16 1025, ptr @hci_cs_inquiry }, %struct.hci_cs { i16 1029, ptr @hci_cs_create_conn }, %struct.hci_cs { i16 1030, ptr @hci_cs_disconnect }, %struct.hci_cs { i16 1031, ptr @hci_cs_add_sco }, %struct.hci_cs { i16 1041, ptr @hci_cs_auth_requested }, %struct.hci_cs { i16 1043, ptr @hci_cs_set_conn_encrypt }, %struct.hci_cs { i16 1049, ptr @hci_cs_remote_name_req }, %struct.hci_cs { i16 1051, ptr @hci_cs_read_remote_features }, %struct.hci_cs { i16 1052, ptr @hci_cs_read_remote_ext_features }, %struct.hci_cs { i16 1064, ptr @hci_cs_setup_sync_conn }, %struct.hci_cs { i16 1085, ptr @hci_cs_enhanced_setup_sync_conn }, %struct.hci_cs { i16 2051, ptr @hci_cs_sniff_mode }, %struct.hci_cs { i16 2052, ptr @hci_cs_exit_sniff_mode }, %struct.hci_cs { i16 2059, ptr @hci_cs_switch_role }, %struct.hci_cs { i16 8205, ptr @hci_cs_le_create_conn }, %struct.hci_cs { i16 8214, ptr @hci_cs_le_read_remote_features }, %struct.hci_cs { i16 8217, ptr @hci_cs_le_start_enc }, %struct.hci_cs { i16 8259, ptr @hci_cs_le_ext_create_conn }], [48 x i8] zeroinitializer }, align 32
@hci_cs_inquiry.__UNIQUE_ID_ddebug572 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.146, ptr @.str.4, ptr @.str.9, i8 2, i8 44, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.146 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"hci_cs_inquiry\00", [17 x i8] zeroinitializer }, align 32
@hci_cs_create_conn.__UNIQUE_ID_ddebug573 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.147, ptr @.str.4, ptr @.str.9, i8 2, i8 48, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.147 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hci_cs_create_conn\00", [45 x i8] zeroinitializer }, align 32
@hci_cs_create_conn.__UNIQUE_ID_ddebug574 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.147, ptr @.str.4, ptr @.str.148, i8 2, i8 50, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.148 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: bdaddr %pMR hcon %p\0A\00", [39 x i8] zeroinitializer }, align 32
@hci_cs_disconnect.__UNIQUE_ID_ddebug588 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.149, ptr @.str.4, ptr @.str.9, i8 2, i8 -94, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.149 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hci_cs_disconnect\00", [46 x i8] zeroinitializer }, align 32
@hci_cs_add_sco.__UNIQUE_ID_ddebug575 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.150, ptr @.str.4, ptr @.str.9, i8 2, i8 57, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.150 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"hci_cs_add_sco\00", [17 x i8] zeroinitializer }, align 32
@hci_cs_add_sco.__UNIQUE_ID_ddebug576 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.150, ptr @.str.4, ptr @.str.151, i8 2, i8 60, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.151 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: handle 0x%4.4x\0A\00", [44 x i8] zeroinitializer }, align 32
@hci_cs_auth_requested.__UNIQUE_ID_ddebug577 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.152, ptr @.str.4, ptr @.str.9, i8 2, i8 66, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.152 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_cs_auth_requested\00", [42 x i8] zeroinitializer }, align 32
@hci_cs_set_conn_encrypt.__UNIQUE_ID_ddebug578 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.153, ptr @.str.4, ptr @.str.9, i8 2, i8 73, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.153 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_cs_set_conn_encrypt\00", [40 x i8] zeroinitializer }, align 32
@hci_cs_remote_name_req.__UNIQUE_ID_ddebug579 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.154, ptr @.str.4, ptr @.str.9, i8 2, i8 107, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.154 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hci_cs_remote_name_req\00", [41 x i8] zeroinitializer }, align 32
@hci_cs_read_remote_features.__UNIQUE_ID_ddebug580 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.155, ptr @.str.4, ptr @.str.9, i8 2, i8 117, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.155 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_cs_read_remote_features\00", [36 x i8] zeroinitializer }, align 32
@hci_cs_read_remote_ext_features.__UNIQUE_ID_ddebug581 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.156, ptr @.str.4, ptr @.str.9, i8 2, i8 124, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.156 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_cs_read_remote_ext_features\00", [32 x i8] zeroinitializer }, align 32
@hci_cs_setup_sync_conn.__UNIQUE_ID_ddebug582 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.157, ptr @.str.4, ptr @.str.9, i8 2, i8 -125, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.157 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hci_cs_setup_sync_conn\00", [41 x i8] zeroinitializer }, align 32
@hci_cs_setup_sync_conn.__UNIQUE_ID_ddebug583 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.157, ptr @.str.4, ptr @.str.151, i8 2, i8 -122, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@hci_cs_enhanced_setup_sync_conn.__UNIQUE_ID_ddebug584 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.158, ptr @.str.4, ptr @.str.9, i8 2, i8 -116, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.158 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_cs_enhanced_setup_sync_conn\00", [32 x i8] zeroinitializer }, align 32
@hci_cs_enhanced_setup_sync_conn.__UNIQUE_ID_ddebug585 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.158, ptr @.str.4, ptr @.str.151, i8 2, i8 -113, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@hci_cs_sniff_mode.__UNIQUE_ID_ddebug586 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.159, ptr @.str.4, ptr @.str.9, i8 2, i8 -108, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.159 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"hci_cs_sniff_mode\00", [46 x i8] zeroinitializer }, align 32
@hci_cs_exit_sniff_mode.__UNIQUE_ID_ddebug587 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.160, ptr @.str.4, ptr @.str.9, i8 2, i8 -101, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.160 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hci_cs_exit_sniff_mode\00", [41 x i8] zeroinitializer }, align 32
@hci_cs_switch_role.__UNIQUE_ID_ddebug593 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.161, ptr @.str.4, ptr @.str.100, i8 2, i8 -33, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.161 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"hci_cs_switch_role\00", [45 x i8] zeroinitializer }, align 32
@hci_cs_le_create_conn.__UNIQUE_ID_ddebug589 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.162, ptr @.str.4, ptr @.str.9, i8 2, i8 -60, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.162 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_cs_le_create_conn\00", [42 x i8] zeroinitializer }, align 32
@hci_conn_hash_lookup_le.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@hci_cs_le_read_remote_features.__UNIQUE_ID_ddebug591 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.163, ptr @.str.4, ptr @.str.9, i8 2, i8 -47, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.163 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hci_cs_le_read_remote_features\00", [33 x i8] zeroinitializer }, align 32
@hci_cs_le_start_enc.__UNIQUE_ID_ddebug592 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.164, ptr @.str.4, ptr @.str.9, i8 2, i8 -40, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.164 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hci_cs_le_start_enc\00", [44 x i8] zeroinitializer }, align 32
@hci_cs_le_ext_create_conn.__UNIQUE_ID_ddebug590 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.165, ptr @.str.4, ptr @.str.9, i8 2, i8 -54, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.165 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_cs_le_ext_create_conn\00", [38 x i8] zeroinitializer }, align 32
@hci_hardware_error_evt.__UNIQUE_ID_ddebug607 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.166, ptr @.str.4, ptr @.str.167, i8 3, i8 -9, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.166 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hci_hardware_error_evt\00", [41 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"%s: code 0x%2.2x\0A\00", [46 x i8] zeroinitializer }, align 32
@hci_role_change_evt.__UNIQUE_ID_ddebug608 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.168, ptr @.str.4, ptr @.str.9, i8 3, i8 -6, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.168 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hci_role_change_evt\00", [44 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s: wrong event for mode %d\0A\00", [35 x i8] zeroinitializer }, align 32
@hci_num_comp_pkts_evt.__UNIQUE_ID_ddebug609 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.170, ptr @.str.4, ptr @.str.11, i8 4, i8 2, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.170 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_num_comp_pkts_evt\00", [42 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s: unknown type %d conn %p\0A\00", [35 x i8] zeroinitializer }, align 32
@hci_mode_change_evt.__UNIQUE_ID_ddebug611 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.172, ptr @.str.4, ptr @.str.9, i8 4, i8 34, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.172 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"hci_mode_change_evt\00", [44 x i8] zeroinitializer }, align 32
@hci_pin_code_request_evt.__UNIQUE_ID_ddebug612 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.173, ptr @.str.4, ptr @.str.174, i8 4, i8 41, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.173 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_pin_code_request_evt\00", [39 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s: \0A\00", [26 x i8] zeroinitializer }, align 32
@hci_link_key_request_evt.__UNIQUE_ID_ddebug613 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.175, ptr @.str.4, ptr @.str.174, i8 4, i8 60, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.175 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_link_key_request_evt\00", [39 x i8] zeroinitializer }, align 32
@hci_link_key_request_evt.__UNIQUE_ID_ddebug614 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.175, ptr @.str.4, ptr @.str.176, i8 4, i8 62, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.176 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s: link key not found for %pMR\0A\00", [63 x i8] zeroinitializer }, align 32
@hci_link_key_request_evt.__UNIQUE_ID_ddebug615 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.175, ptr @.str.4, ptr @.str.177, i8 4, i8 63, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.177 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: found key type %u for %pMR\0A\00", [32 x i8] zeroinitializer }, align 32
@hci_link_key_request_evt.__UNIQUE_ID_ddebug616 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.175, ptr @.str.4, ptr @.str.178, i8 4, i8 65, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.178 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: ignoring unauthenticated key\0A\00", [62 x i8] zeroinitializer }, align 32
@hci_link_key_request_evt.__UNIQUE_ID_ddebug617 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.175, ptr @.str.4, ptr @.str.179, i8 4, i8 67, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.179 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"%s: ignoring key unauthenticated for high security\0A\00", [44 x i8] zeroinitializer }, align 32
@hci_link_key_notify_evt.__UNIQUE_ID_ddebug618 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.180, ptr @.str.4, ptr @.str.174, i8 4, i8 74, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.180 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_link_key_notify_evt\00", [40 x i8] zeroinitializer }, align 32
@hci_clock_offset_evt.__UNIQUE_ID_ddebug620 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.181, ptr @.str.4, ptr @.str.9, i8 4, i8 89, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.181 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hci_clock_offset_evt\00", [43 x i8] zeroinitializer }, align 32
@hci_pkt_type_change_evt.__UNIQUE_ID_ddebug621 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.182, ptr @.str.4, ptr @.str.9, i8 4, i8 95, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.182 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_pkt_type_change_evt\00", [40 x i8] zeroinitializer }, align 32
@hci_pscan_rep_mode_evt.__UNIQUE_ID_ddebug622 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.183, ptr @.str.4, ptr @.str.174, i8 4, i8 99, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.183 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hci_pscan_rep_mode_evt\00", [41 x i8] zeroinitializer }, align 32
@hci_inquiry_result_with_rssi_evt.__UNIQUE_ID_ddebug623 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.184, ptr @.str.4, ptr @.str.185, i8 4, i8 104, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.184 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"hci_inquiry_result_with_rssi_evt\00", [63 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"%s: num_rsp %d\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s: Malformed HCI Event: 0x%2.2x\0A\00", [62 x i8] zeroinitializer }, align 32
@hci_remote_ext_features_evt.__UNIQUE_ID_ddebug624 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.187, ptr @.str.4, ptr @.str.9, i8 4, i8 126, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.187 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_remote_ext_features_evt\00", [36 x i8] zeroinitializer }, align 32
@hci_sync_conn_complete_evt.__UNIQUE_ID_ddebug625 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.188, ptr @.str.4, ptr @.str.9, i8 4, i8 -114, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.188 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"hci_sync_conn_complete_evt\00", [37 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"%s: Ignoring connect complete event for existing connection\0A\00", [35 x i8] zeroinitializer }, align 32
@hci_sync_conn_complete_evt.__UNIQUE_ID_ddebug626 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.188, ptr @.str.4, ptr @.str.190, i8 4, i8 -97, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.190 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s: SCO connected with air mode: %02x\0A\00", [57 x i8] zeroinitializer }, align 32
@hci_extended_inquiry_result_evt.__UNIQUE_ID_ddebug627 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.191, ptr @.str.4, ptr @.str.11, i8 4, i8 -84, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.191 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_extended_inquiry_result_evt\00", [32 x i8] zeroinitializer }, align 32
@hci_key_refresh_complete_evt.__UNIQUE_ID_ddebug628 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.192, ptr @.str.4, ptr @.str.193, i8 4, i8 -72, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.192 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_key_refresh_complete_evt\00", [35 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: status 0x%2.2x handle 0x%4.4x\0A\00", [61 x i8] zeroinitializer }, align 32
@hci_io_capa_request_evt.__UNIQUE_ID_ddebug629 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.194, ptr @.str.4, ptr @.str.174, i8 4, i8 -44, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.194 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_io_capa_request_evt\00", [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [17 x i8], [47 x i8] } zeroinitializer, align 32
@hci_io_capa_reply_evt.__UNIQUE_ID_ddebug630 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.196, ptr @.str.4, ptr @.str.174, i8 4, i8 -27, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.196 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_io_capa_reply_evt\00", [42 x i8] zeroinitializer }, align 32
@hci_user_confirm_request_evt.__UNIQUE_ID_ddebug631 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.197, ptr @.str.4, ptr @.str.174, i8 4, i8 -21, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.197 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_user_confirm_request_evt\00", [35 x i8] zeroinitializer }, align 32
@hci_user_confirm_request_evt.__UNIQUE_ID_ddebug632 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.197, ptr @.str.4, ptr @.str.198, i8 4, i8 -16, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.198 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"%s: Rejecting request: remote device can't provide MITM\0A\00", [39 x i8] zeroinitializer }, align 32
@hci_user_confirm_request_evt.__UNIQUE_ID_ddebug633 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.197, ptr @.str.4, ptr @.str.199, i8 4, i8 -11, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.199 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s: Confirming auto-accept as acceptor\0A\00", [56 x i8] zeroinitializer }, align 32
@hci_user_confirm_request_evt.__UNIQUE_ID_ddebug634 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.197, ptr @.str.4, ptr @.str.200, i8 4, i8 -9, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.200 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"%s: Local host already has link key\0A\00", [59 x i8] zeroinitializer }, align 32
@hci_user_confirm_request_evt.__UNIQUE_ID_ddebug635 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.197, ptr @.str.4, ptr @.str.201, i8 4, i8 -7, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.201 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"Auto-accept of user confirmation with %ums delay\0A\00", [46 x i8] zeroinitializer }, align 32
@hci_user_passkey_request_evt.__UNIQUE_ID_ddebug636 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.202, ptr @.str.4, ptr @.str.174, i8 4, i8 -1, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.202 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_user_passkey_request_evt\00", [35 x i8] zeroinitializer }, align 32
@hci_remote_oob_data_request_evt.__UNIQUE_ID_ddebug641 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.203, ptr @.str.4, ptr @.str.174, i8 5, i8 31, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.203 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_remote_oob_data_request_evt\00", [32 x i8] zeroinitializer }, align 32
@hci_simple_pair_complete_evt.__UNIQUE_ID_ddebug639 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.204, ptr @.str.4, ptr @.str.174, i8 5, i8 17, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.204 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_simple_pair_complete_evt\00", [35 x i8] zeroinitializer }, align 32
@hci_user_passkey_notify_evt.__UNIQUE_ID_ddebug637 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.205, ptr @.str.4, ptr @.str.174, i8 5, i8 2, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.205 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"hci_user_passkey_notify_evt\00", [36 x i8] zeroinitializer }, align 32
@hci_keypress_notify_evt.__UNIQUE_ID_ddebug638 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.206, ptr @.str.4, ptr @.str.174, i8 5, i8 8, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.206 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_keypress_notify_evt\00", [40 x i8] zeroinitializer }, align 32
@hci_remote_host_features_evt.__UNIQUE_ID_ddebug640 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.207, ptr @.str.4, ptr @.str.174, i8 5, i8 25, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.207 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_remote_host_features_evt\00", [35 x i8] zeroinitializer }, align 32
@hci_le_meta_evt.__UNIQUE_ID_ddebug658 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.208, ptr @.str.4, ptr @.str.209, i8 6, i8 82, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.208 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"hci_le_meta_evt\00", [16 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"%s: subevent 0x%2.2x\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"%s: unexpected subevent 0x%2.2x length: %u < %u\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"%s: unexpected subevent 0x%2.2x length: %u > %u\0A\00", [47 x i8] zeroinitializer }, align 32
@hci_le_ev_table = internal constant { <{ [19 x %struct.hci_le_ev], [237 x %struct.hci_le_ev] }>, [512 x i8] } { <{ [19 x %struct.hci_le_ev], [237 x %struct.hci_le_ev] }> <{ [19 x %struct.hci_le_ev] [%struct.hci_le_ev zeroinitializer, %struct.hci_le_ev { ptr @hci_le_conn_complete_evt, i16 18, i16 18 }, %struct.hci_le_ev { ptr @hci_le_adv_report_evt, i16 1, i16 260 }, %struct.hci_le_ev { ptr @hci_le_conn_update_complete_evt, i16 9, i16 9 }, %struct.hci_le_ev { ptr @hci_le_remote_feat_complete_evt, i16 11, i16 11 }, %struct.hci_le_ev { ptr @hci_le_ltk_request_evt, i16 12, i16 12 }, %struct.hci_le_ev { ptr @hci_le_remote_conn_param_req_evt, i16 10, i16 10 }, %struct.hci_le_ev zeroinitializer, %struct.hci_le_ev zeroinitializer, %struct.hci_le_ev zeroinitializer, %struct.hci_le_ev { ptr @hci_le_enh_conn_complete_evt, i16 30, i16 30 }, %struct.hci_le_ev { ptr @hci_le_direct_adv_report_evt, i16 1, i16 260 }, %struct.hci_le_ev { ptr @hci_le_phy_update_evt, i16 5, i16 5 }, %struct.hci_le_ev { ptr @hci_le_ext_adv_report_evt, i16 1, i16 260 }, %struct.hci_le_ev zeroinitializer, %struct.hci_le_ev zeroinitializer, %struct.hci_le_ev zeroinitializer, %struct.hci_le_ev zeroinitializer, %struct.hci_le_ev { ptr @hci_le_ext_adv_term_evt, i16 5, i16 5 }], [237 x %struct.hci_le_ev] zeroinitializer }>, [512 x i8] zeroinitializer }, align 32
@hci_le_conn_complete_evt.__UNIQUE_ID_ddebug648 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.213, ptr @.str.4, ptr @.str.9, i8 5, i8 -126, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.213 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_le_conn_complete_evt\00", [39 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s: Dropping invalid advertising data\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s: unknown advertising packet type: 0x%02x\00", [52 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s: legacy adv larger than 31 bytes\00", [60 x i8] zeroinitializer }, align 32
@check_pending_le_conn.__UNIQUE_ID_ddebug652 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.217, ptr @.str.4, ptr @.str.218, i8 5, i8 -77, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.217 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"check_pending_le_conn\00", [42 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Failed to connect: err %ld\0A\00", [36 x i8] zeroinitializer }, align 32
@hci_le_conn_update_complete_evt.__UNIQUE_ID_ddebug651 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.219, ptr @.str.4, ptr @.str.9, i8 5, i8 -103, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.219 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_le_conn_update_complete_evt\00", [32 x i8] zeroinitializer }, align 32
@hci_le_remote_feat_complete_evt.__UNIQUE_ID_ddebug653 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.220, ptr @.str.4, ptr @.str.9, i8 6, i8 7, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.220 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"hci_le_remote_feat_complete_evt\00", [32 x i8] zeroinitializer }, align 32
@hci_le_ltk_request_evt.__UNIQUE_ID_ddebug654 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.221, ptr @.str.4, ptr @.str.151, i8 6, i8 19, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.221 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"hci_le_ltk_request_evt\00", [41 x i8] zeroinitializer }, align 32
@hci_le_remote_conn_param_req_evt.__UNIQUE_ID_ddebug656 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.222, ptr @.str.4, ptr @.str.151, i8 6, i8 38, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.222 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"hci_le_remote_conn_param_req_evt\00", [63 x i8] zeroinitializer }, align 32
@hci_le_enh_conn_complete_evt.__UNIQUE_ID_ddebug649 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.223, ptr @.str.4, ptr @.str.9, i8 5, i8 -123, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.223 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hci_le_enh_conn_complete_evt\00", [35 x i8] zeroinitializer }, align 32
@hci_le_phy_update_evt.__UNIQUE_ID_ddebug657 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.224, ptr @.str.4, ptr @.str.9, i8 6, i8 59, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.224 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_le_phy_update_evt\00", [42 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s: Unknown advertising packet type: 0x%02x\00", [52 x i8] zeroinitializer }, align 32
@hci_le_ext_adv_term_evt.__UNIQUE_ID_ddebug650 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.226, ptr @.str.4, ptr @.str.9, i8 5, i8 -119, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.226 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_le_ext_adv_term_evt\00", [40 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"%s: Unexpected advertising set terminated event\00", [48 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s: Malformed LE Event: 0x%2.2x\0A\00", [63 x i8] zeroinitializer }, align 32
@hci_phy_link_complete_evt.__UNIQUE_ID_ddebug643 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.229, ptr @.str.4, ptr @.str.230, i8 5, i8 48, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.229 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"hci_phy_link_complete_evt\00", [38 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: handle 0x%2.2x status 0x%2.2x\0A\00", [61 x i8] zeroinitializer }, align 32
@hci_chan_selected_evt.__UNIQUE_ID_ddebug642 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.231, ptr @.str.4, ptr @.str.232, i8 5, i8 44, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.231 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"hci_chan_selected_evt\00", [42 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: handle 0x%2.2x\0A\00", [44 x i8] zeroinitializer }, align 32
@hci_disconn_phylink_complete_evt.__UNIQUE_ID_ddebug647 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.233, ptr @.str.4, ptr @.str.9, i8 5, i8 74, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.233 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"hci_disconn_phylink_complete_evt\00", [63 x i8] zeroinitializer }, align 32
@hci_loglink_complete_evt.__UNIQUE_ID_ddebug644 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.234, ptr @.str.4, ptr @.str.235, i8 5, i8 59, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.234 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hci_loglink_complete_evt\00", [39 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"%s: log_handle 0x%4.4x phy_handle 0x%2.2x status 0x%2.2x\0A\00", [38 x i8] zeroinitializer }, align 32
@hci_loglink_complete_evt.__UNIQUE_ID_ddebug645 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.234, ptr @.str.4, ptr @.str.236, i8 5, i8 63, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.236 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"hcon %p mgr %p hchan %p\0A\00", [39 x i8] zeroinitializer }, align 32
@hci_disconn_loglink_complete_evt.__UNIQUE_ID_ddebug646 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.237, ptr @.str.4, ptr @.str.238, i8 5, i8 68, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.237 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"hci_disconn_loglink_complete_evt\00", [63 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: handle 0x%4.4x status 0x%2.2x\0A\00", [61 x i8] zeroinitializer }, align 32
@hci_num_comp_blocks_evt.__UNIQUE_ID_ddebug610 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.239, ptr @.str.4, ptr @.str.240, i8 4, i8 24, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.239 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"hci_num_comp_blocks_evt\00", [40 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s: num_blocks %d num_hndl %d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: unknown dev_type %d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s: Malformed Event: 0x%2.2x\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: last event is not cmd complete (0x%2.2x)\0A\00", [50 x i8] zeroinitializer }, align 32
@hci_get_cmd_complete.__UNIQUE_ID_ddebug659 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.2, ptr @.str.244, ptr @.str.4, ptr @.str.245, i8 6, i8 100, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.244 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"hci_get_cmd_complete\00", [43 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"opcode doesn't match (0x%2.2x != 0x%2.2x)\0A\00", [53 x i8] zeroinitializer }, align 32
@switch.table.hci_le_ext_adv_report_evt = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"\03\00\02\00\00\01\00\00\00\00\04\04", [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 8, i64 3, i64 4, i64 62]
@__sancov_gen_cov_switch_values.246 = internal global [5 x i64] [i64 3, i64 8, i64 2, i64 11, i64 13]
@__sancov_gen_cov_switch_values.247 = internal global [5 x i64] [i64 3, i64 8, i64 2, i64 11, i64 13]
@__sancov_gen_cov_switch_values.248 = internal global [4 x i64] [i64 2, i64 8, i64 14, i64 15]
@__sancov_gen_cov_switch_values.249 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.250 = internal global [7 x i64] [i64 5, i64 8, i64 8, i64 19, i64 20, i64 21, i64 22]
@__sancov_gen_cov_switch_values.251 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.252 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 6]
@__sancov_gen_cov_switch_values.253 = internal global [4 x i64] [i64 2, i64 8, i64 1, i64 128]
@__sancov_gen_cov_switch_values.254 = internal global [4 x i64] [i64 2, i64 8, i64 1, i64 128]
@__sancov_gen_cov_switch_values.255 = internal global [20 x i64] [i64 18, i64 16, i64 1025, i64 1029, i64 1030, i64 1031, i64 1041, i64 1043, i64 1049, i64 1051, i64 1052, i64 1064, i64 1085, i64 2051, i64 2052, i64 2059, i64 8205, i64 8214, i64 8217, i64 8259]
@__sancov_gen_cov_switch_values.256 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 128]
@__sancov_gen_cov_switch_values.257 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 4, i64 6, i64 7]
@__sancov_gen_cov_switch_values.258 = internal global [7 x i64] [i64 5, i64 8, i64 0, i64 4, i64 5, i64 7, i64 8]
@__sancov_gen_cov_switch_values.259 = internal global [7 x i64] [i64 5, i64 8, i64 0, i64 4, i64 5, i64 7, i64 8]
@__sancov_gen_cov_switch_values.260 = internal global [7 x i64] [i64 5, i64 8, i64 0, i64 4, i64 5, i64 7, i64 8]
@__sancov_gen_cov_switch_values.261 = internal global [11 x i64] [i64 9, i64 8, i64 0, i64 13, i64 16, i64 17, i64 26, i64 28, i64 30, i64 31, i64 32]
@__sancov_gen_cov_switch_values.262 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 3]
@__sancov_gen_cov_switch_values.263 = internal global [7 x i64] [i64 5, i64 8, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.264 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.265 = internal global [4 x i64] [i64 2, i64 8, i64 1, i64 129]
@__sancov_gen_cov_switch_values.266 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 128, i64 129]
@__sancov_gen_cov_switch_values.267 = internal global [4 x i64] [i64 2, i64 16, i64 1, i64 7]
@__sancov_gen_cov_switch_values.268 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 4]
@__sancov_gen_cov_switch_values.269 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.270 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.271 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.272 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 3]
@__sancov_gen_cov_switch_values.273 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 68]
@__sancov_gen_cov_switch_values.274 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 3]
@__sancov_gen_cov_switch_values.275 = internal global [4 x i64] [i64 2, i64 8, i64 1, i64 3]
@__sancov_gen_cov_switch_values.276 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 3]
@__sancov_gen_cov_switch_values.277 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 2]
@__sancov_gen_cov_switch_values.278 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 2]
@__sancov_gen_cov_switch_values.279 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@___asan_gen_.282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6850, i32 3 }
@___asan_gen_.285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6856, i32 3 }
@___asan_gen_.297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6884, i32 2 }
@___asan_gen_.298 = private unnamed_addr constant [13 x i8] c"hci_ev_table\00", align 1
@___asan_gen_.300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6663, i32 3 }
@___asan_gen_.303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6816, i32 3 }
@___asan_gen_.306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6826, i32 3 }
@___asan_gen_.312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2967, i32 2 }
@___asan_gen_.318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3032, i32 2 }
@___asan_gen_.321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3071, i32 2 }
@___asan_gen_.324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3093, i32 5 }
@___asan_gen_.330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.368, i32 1033, i32 2 }
@___asan_gen_.336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.338, i32 695, i32 2 }
@___asan_gen_.338 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.338, i32 723, i32 2 }
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.368, i32 1180, i32 2 }
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3199, i32 2 }
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3241, i32 4 }
@___asan_gen_.357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.368, i32 1515, i32 3 }
@___asan_gen_.360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3310, i32 2 }
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3392, i32 2 }
@___asan_gen_.366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3405, i32 4 }
@___asan_gen_.368 = private unnamed_addr constant [36 x i8] c"../include/net/bluetooth/hci_core.h\00", align 1
@___asan_gen_.369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.368, i32 1188, i32 2 }
@___asan_gen_.372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3463, i32 2 }
@___asan_gen_.375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2409, i32 3 }
@___asan_gen_.378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3547, i32 2 }
@___asan_gen_.381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3622, i32 4 }
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3507, i32 2 }
@___asan_gen_.390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3510, i32 3 }
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3528, i32 3 }
@___asan_gen_.396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3662, i32 2 }
@___asan_gen_.399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3685, i32 2 }
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3957, i32 2 }
@___asan_gen_.406 = private unnamed_addr constant [13 x i8] c"hci_cc_table\00", align 1
@___asan_gen_.408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3762, i32 3 }
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3972, i32 3 }
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 89, i32 2 }
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 99, i32 3 }
@___asan_gen_.420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 129, i32 2 }
@___asan_gen_.423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 144, i32 2 }
@___asan_gen_.426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 161, i32 2 }
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 172, i32 2 }
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 194, i32 2 }
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 217, i32 2 }
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 242, i32 2 }
@___asan_gen_.441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 258, i32 2 }
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 276, i32 2 }
@___asan_gen_.447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 313, i32 2 }
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 332, i32 2 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 351, i32 2 }
@___asan_gen_.456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 374, i32 2 }
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 392, i32 2 }
@___asan_gen_.462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 424, i32 2 }
@___asan_gen_.465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 450, i32 2 }
@___asan_gen_.468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 488, i32 2 }
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 512, i32 2 }
@___asan_gen_.474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 519, i32 2 }
@___asan_gen_.477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 531, i32 2 }
@___asan_gen_.480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 556, i32 2 }
@___asan_gen_.483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 568, i32 2 }
@___asan_gen_.486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 583, i32 2 }
@___asan_gen_.489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 612, i32 2 }
@___asan_gen_.492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 619, i32 2 }
@___asan_gen_.495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 630, i32 2 }
@___asan_gen_.498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 663, i32 2 }
@___asan_gen_.501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 735, i32 2 }
@___asan_gen_.504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 758, i32 2 }
@___asan_gen_.507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 695, i32 2 }
@___asan_gen_.510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 717, i32 2 }
@___asan_gen_.513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 783, i32 2 }
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 835, i32 2 }
@___asan_gen_.519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 869, i32 2 }
@___asan_gen_.522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 887, i32 2 }
@___asan_gen_.525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 898, i32 2 }
@___asan_gen_.528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 917, i32 2 }
@___asan_gen_.531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 936, i32 2 }
@___asan_gen_.534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 955, i32 2 }
@___asan_gen_.537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 975, i32 2 }
@___asan_gen_.540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 992, i32 2 }
@___asan_gen_.543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1009, i32 2 }
@___asan_gen_.546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1020, i32 2 }
@___asan_gen_.549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 854, i32 2 }
@___asan_gen_.552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1065, i32 2 }
@___asan_gen_.555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1033, i32 2 }
@___asan_gen_.558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1089, i32 2 }
@___asan_gen_.561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1104, i32 2 }
@___asan_gen_.564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1120, i32 2 }
@___asan_gen_.567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1141, i32 2 }
@___asan_gen_.570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1169, i32 2 }
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1309, i32 2 }
@___asan_gen_.576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1319, i32 2 }
@___asan_gen_.579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1187, i32 2 }
@___asan_gen_.582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1197, i32 2 }
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1207, i32 2 }
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1222, i32 2 }
@___asan_gen_.594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1237, i32 2 }
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1255, i32 2 }
@___asan_gen_.600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1273, i32 2 }
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1291, i32 2 }
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1330, i32 2 }
@___asan_gen_.609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1525, i32 2 }
@___asan_gen_.612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1629, i32 2 }
@___asan_gen_.615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1763, i32 2 }
@___asan_gen_.618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1749, i32 3 }
@___asan_gen_.624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1818, i32 2 }
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1833, i32 2 }
@___asan_gen_.630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1849, i32 2 }
@___asan_gen_.633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1870, i32 2 }
@___asan_gen_.636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1890, i32 2 }
@___asan_gen_.639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1905, i32 2 }
@___asan_gen_.642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1922, i32 2 }
@___asan_gen_.645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1943, i32 2 }
@___asan_gen_.648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1965, i32 2 }
@___asan_gen_.651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1985, i32 2 }
@___asan_gen_.654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2000, i32 2 }
@___asan_gen_.657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2016, i32 2 }
@___asan_gen_.660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2042, i32 2 }
@___asan_gen_.663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2061, i32 2 }
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2097, i32 2 }
@___asan_gen_.669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2153, i32 2 }
@___asan_gen_.672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2176, i32 2 }
@___asan_gen_.675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2211, i32 2 }
@___asan_gen_.678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1654, i32 2 }
@___asan_gen_.681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1783, i32 2 }
@___asan_gen_.684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1360, i32 2 }
@___asan_gen_.690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1802, i32 2 }
@___asan_gen_.693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2120, i32 2 }
@___asan_gen_.696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1566, i32 2 }
@___asan_gen_.699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1386, i32 2 }
@___asan_gen_.702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1424, i32 2 }
@___asan_gen_.705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1452, i32 2 }
@___asan_gen_.708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1481, i32 2 }
@___asan_gen_.711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 1499, i32 2 }
@___asan_gen_.714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3927, i32 3 }
@___asan_gen_.717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3937, i32 3 }
@___asan_gen_.720 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 67, i32 3 }
@___asan_gen_.723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4024, i32 2 }
@___asan_gen_.724 = private unnamed_addr constant [13 x i8] c"hci_cs_table\00", align 1
@___asan_gen_.726 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 3990, i32 3 }
@___asan_gen_.729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2225, i32 2 }
@___asan_gen_.732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2240, i32 2 }
@___asan_gen_.735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2250, i32 2 }
@___asan_gen_.738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2699, i32 2 }
@___asan_gen_.741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2279, i32 2 }
@___asan_gen_.744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2290, i32 2 }
@___asan_gen_.747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2313, i32 2 }
@___asan_gen_.750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2340, i32 2 }
@___asan_gen_.753 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2476, i32 2 }
@___asan_gen_.756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2519, i32 2 }
@___asan_gen_.759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2546, i32 2 }
@___asan_gen_.762 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2574, i32 2 }
@___asan_gen_.765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2609, i32 2 }
@___asan_gen_.768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2643, i32 2 }
@___asan_gen_.771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2670, i32 2 }
@___asan_gen_.774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2942, i32 2 }
@___asan_gen_.777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2834, i32 2 }
@___asan_gen_.780 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2885, i32 2 }
@___asan_gen_.783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2912, i32 2 }
@___asan_gen_.786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 2859, i32 2 }
@___asan_gen_.792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4060, i32 2 }
@___asan_gen_.795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4073, i32 2 }
@___asan_gen_.798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4101, i32 3 }
@___asan_gen_.801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4105, i32 2 }
@___asan_gen_.804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4147, i32 4 }
@___asan_gen_.807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4234, i32 2 }
@___asan_gen_.813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4263, i32 2 }
@___asan_gen_.816 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4336, i32 2 }
@___asan_gen_.819 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4345, i32 3 }
@___asan_gen_.822 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4349, i32 2 }
@___asan_gen_.825 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4358, i32 4 }
@___asan_gen_.828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4365, i32 4 }
@___asan_gen_.831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4395, i32 2 }
@___asan_gen_.834 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4453, i32 2 }
@___asan_gen_.837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4477, i32 2 }
@___asan_gen_.840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4494, i32 2 }
@___asan_gen_.846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4514, i32 2 }
@___asan_gen_.849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4535, i32 5 }
@___asan_gen_.852 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4600, i32 2 }
@___asan_gen_.855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4664, i32 2 }
@___asan_gen_.858 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4700, i32 4 }
@___asan_gen_.861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4733, i32 2 }
@___asan_gen_.864 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4785, i32 2 }
@___asan_gen_.870 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4834, i32 2 }
@___asan_gen_.873 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4944, i32 2 }
@___asan_gen_.876 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4920, i32 30 }
@___asan_gen_.879 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5014, i32 2 }
@___asan_gen_.882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5036, i32 2 }
@___asan_gen_.885 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5057, i32 3 }
@___asan_gen_.888 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5076, i32 4 }
@___asan_gen_.891 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5086, i32 4 }
@___asan_gen_.894 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5091, i32 3 }
@___asan_gen_.897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5119, i32 2 }
@___asan_gen_.900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5244, i32 2 }
@___asan_gen_.903 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5191, i32 2 }
@___asan_gen_.906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5131, i32 2 }
@___asan_gen_.909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5152, i32 2 }
@___asan_gen_.912 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5223, i32 2 }
@___asan_gen_.918 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6472, i32 2 }
@___asan_gen_.921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6488, i32 3 }
@___asan_gen_.924 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6498, i32 3 }
@___asan_gen_.925 = private unnamed_addr constant [16 x i8] c"hci_le_ev_table\00", align 1
@___asan_gen_.927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6421, i32 3 }
@___asan_gen_.930 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5641, i32 2 }
@___asan_gen_.933 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6081, i32 4 }
@___asan_gen_.936 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5864, i32 3 }
@___asan_gen_.939 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5870, i32 3 }
@___asan_gen_.945 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5837, i32 3 }
@___asan_gen_.948 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5735, i32 2 }
@___asan_gen_.951 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6175, i32 2 }
@___asan_gen_.954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6220, i32 2 }
@___asan_gen_.957 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6296, i32 2 }
@___asan_gen_.960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5655, i32 2 }
@___asan_gen_.963 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6381, i32 2 }
@___asan_gen_.966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6126, i32 2 }
@___asan_gen_.969 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5671, i32 2 }
@___asan_gen_.972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5683, i32 3 }
@___asan_gen_.975 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 79, i32 3 }
@___asan_gen_.981 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5314, i32 2 }
@___asan_gen_.987 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5299, i32 2 }
@___asan_gen_.990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5418, i32 2 }
@___asan_gen_.996 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5357, i32 2 }
@___asan_gen_.999 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5372, i32 2 }
@___asan_gen_.1005 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 5394, i32 2 }
@___asan_gen_.1011 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4193, i32 2 }
@___asan_gen_.1014 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 4170, i32 3 }
@___asan_gen_.1017 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 55, i32 3 }
@___asan_gen_.1020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6534, i32 3 }
@___asan_gen_.1024 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1025 = private constant [29 x i8] c"../net/bluetooth/hci_event.c\00", align 1
@___asan_gen_.1026 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1025, i32 6544, i32 3 }
@___asan_gen_.1027 = private unnamed_addr constant [39 x i8] c"switch.table.hci_le_ext_adv_report_evt\00", align 1
@llvm.compiler.used = appending global [250 x ptr] [ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @hci_ev_table, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @hci_cc_table, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @hci_cs_table, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @hci_le_ev_table, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @switch.table.hci_le_ext_adv_report_evt], section "llvm.metadata"
@0 = internal global [250 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hci_ev_table to i32), i32 3072, i32 3840, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hci_cc_table to i32), i32 1068, i32 1344, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hci_cs_table to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.924 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @hci_le_ev_table to i32), i32 2048, i32 2560, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.939 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.987 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.987 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.hci_le_ext_adv_report_evt to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @hci_event_packet(ptr noundef %hdev, ptr noundef %skb) local_unnamed_addr #0 align 64 {
entry:
  %req_complete = alloca ptr, align 4
  %req_complete_skb = alloca ptr, align 4
  %status = alloca i8, align 1
  %opcode = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %req_complete) #9
  %2 = ptrtoint ptr %req_complete to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %req_complete, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %req_complete_skb) #9
  %3 = ptrtoint ptr %req_complete_skb to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %req_complete_skb, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status) #9
  %4 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %status, align 1
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %opcode) #9
  %5 = ptrtoint ptr %opcode to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 0, ptr %opcode, align 2
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %6 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %7)
  %cmp = icmp ult i32 %7, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str, ptr noundef %name) #9
  br label %done

if.end:                                           ; preds = %entry
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not = icmp eq i8 %9, 0
  br i1 %tobool.not, label %if.then1, label %if.end4

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %name2 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_warn(ptr noundef nonnull @.str.1, ptr noundef %name2, i32 noundef 0) #9
  br label %done

if.end4:                                          ; preds = %if.end
  %sent_cmd = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 162
  %10 = ptrtoint ptr %sent_cmd to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sent_cmd, align 4
  %tobool5.not = icmp eq ptr %11, null
  br i1 %tobool5.not, label %if.end4.if.end25_crit_edge, label %land.lhs.true

if.end4.if.end25_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

land.lhs.true:                                    ; preds = %if.end4
  %opcode8 = getelementptr inbounds %struct.sk_buff, ptr %11, i32 0, i32 3, i32 12
  %12 = ptrtoint ptr %opcode8 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %opcode8, align 4
  %.mask = and i16 %13, -1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %.mask)
  %cmp10.not = icmp eq i16 %.mask, 8192
  br i1 %cmp10.not, label %land.lhs.true.if.end25_crit_edge, label %land.lhs.true12

land.lhs.true.if.end25_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

land.lhs.true12:                                  ; preds = %land.lhs.true
  %req_event = getelementptr inbounds %struct.sk_buff, ptr %11, i32 0, i32 3, i32 15
  %14 = ptrtoint ptr %req_event to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %req_event, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %15, i8 %9)
  %cmp18 = icmp eq i8 %15, %9
  br i1 %cmp18, label %if.then20, label %land.lhs.true12.if.end25_crit_edge

land.lhs.true12.if.end25_crit_edge:               ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

if.then20:                                        ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #11
  call void @hci_req_cmd_complete(ptr noundef %hdev, i16 noundef zeroext %13, i8 noundef zeroext 0, ptr noundef nonnull %req_complete, ptr noundef nonnull %req_complete_skb) #9
  br label %if.end25

if.end25:                                         ; preds = %if.then20, %land.lhs.true12.if.end25_crit_edge, %land.lhs.true.if.end25_crit_edge, %if.end4.if.end25_crit_edge
  %req_evt.0 = phi i8 [ %9, %if.then20 ], [ 0, %land.lhs.true12.if.end25_crit_edge ], [ 0, %land.lhs.true.if.end25_crit_edge ], [ 0, %if.end4.if.end25_crit_edge ]
  %16 = ptrtoint ptr %req_complete_skb to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %req_complete_skb, align 4
  %.fr = freeze ptr %17
  %tobool26.not = icmp ne ptr %.fr, null
  %18 = and i8 %9, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 14, i8 %18)
  %switch = icmp eq i8 %18, 14
  %or.cond = select i1 %tobool26.not, i1 true, i1 %switch
  br i1 %or.cond, label %if.then34, label %if.end25.if.end35_crit_edge

if.end25.if.end35_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end35

if.then34:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #11
  %call = call ptr @skb_clone(ptr noundef %skb, i32 noundef 3264) #9
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end25.if.end35_crit_edge
  %orig_skb.0 = phi ptr [ %call, %if.then34 ], [ null, %if.end25.if.end35_crit_edge ]
  %call36 = call ptr @skb_pull(ptr noundef %skb, i32 noundef 2) #9
  %19 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %data, align 4
  %lock.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #9
  %suspended.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 179
  %21 = ptrtoint ptr %suspended.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %suspended.i, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i = icmp eq i8 %22, 0
  br i1 %tobool.not.i, label %if.end35.hci_store_wake_reason.exit_crit_edge, label %lor.lhs.false.i

if.end35.hci_store_wake_reason.exit_crit_edge:    ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_store_wake_reason.exit

lor.lhs.false.i:                                  ; preds = %if.end35
  %wake_reason.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 180
  %23 = ptrtoint ptr %wake_reason.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %wake_reason.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool2.not.i = icmp eq i8 %24, 0
  br i1 %tobool2.not.i, label %if.end.i, label %lor.lhs.false.i.hci_store_wake_reason.exit_crit_edge

lor.lhs.false.i.hci_store_wake_reason.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_store_wake_reason.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  %25 = ptrtoint ptr %wake_reason.i to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 2, ptr %wake_reason.i, align 2
  %26 = zext i8 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values)
  switch i8 %9, label %if.else53.i [
    i8 4, label %if.then6.i
    i8 3, label %if.then10.i
    i8 62, label %if.then18.i
  ]

if.then6.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %wake_addr.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 181
  %bdaddr.i = getelementptr inbounds %struct.hci_ev_conn_complete, ptr %20, i32 0, i32 2
  %27 = call ptr @memcpy(ptr %wake_addr.i, ptr %bdaddr.i, i32 6)
  %wake_addr_type.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 182
  %28 = ptrtoint ptr %wake_addr_type.i to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 0, ptr %wake_addr_type.i, align 1
  br label %hci_store_wake_reason.exit

if.then10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %wake_addr11.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 181
  %29 = call ptr @memcpy(ptr %wake_addr11.i, ptr %20, i32 6)
  %wake_addr_type13.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 182
  %30 = ptrtoint ptr %wake_addr_type13.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 0, ptr %wake_addr_type13.i, align 1
  br label %hci_store_wake_reason.exit

if.then18.i:                                      ; preds = %if.end.i
  %31 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %data, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %32, align 1
  %35 = zext i8 %34 to i64
  call void @__sanitizer_cov_trace_switch(i64 %35, ptr @__sancov_gen_cov_switch_values.246)
  switch i8 %34, label %if.then18.i.hci_store_wake_reason.exit_crit_edge [
    i8 2, label %if.then18.i.land.lhs.true.i_crit_edge
    i8 11, label %if.then18.i.land.lhs.true.i_crit_edge92
    i8 13, label %if.then18.i.land.lhs.true.i_crit_edge93
  ]

if.then18.i.land.lhs.true.i_crit_edge93:          ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

if.then18.i.land.lhs.true.i_crit_edge92:          ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

if.then18.i.land.lhs.true.i_crit_edge:            ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

if.then18.i.hci_store_wake_reason.exit_crit_edge: ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_store_wake_reason.exit

land.lhs.true.i:                                  ; preds = %if.then18.i.land.lhs.true.i_crit_edge, %if.then18.i.land.lhs.true.i_crit_edge92, %if.then18.i.land.lhs.true.i_crit_edge93
  %arrayidx.i = getelementptr i8, ptr %32, i32 1
  %36 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool34.not.i = icmp eq i8 %37, 0
  br i1 %tobool34.not.i, label %land.lhs.true.i.hci_store_wake_reason.exit_crit_edge, label %if.then35.i

land.lhs.true.i.hci_store_wake_reason.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_store_wake_reason.exit

if.then35.i:                                      ; preds = %land.lhs.true.i
  %38 = zext i8 %34 to i64
  call void @__sanitizer_cov_trace_switch(i64 %38, ptr @__sancov_gen_cov_switch_values.247)
  switch i8 %34, label %if.then35.i.hci_store_wake_reason.exit_crit_edge [
    i8 2, label %sw.bb.i
    i8 11, label %sw.bb42.i
    i8 13, label %sw.bb47.i
  ]

if.then35.i.hci_store_wake_reason.exit_crit_edge: ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_store_wake_reason.exit

sw.bb.i:                                          ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #11
  %wake_addr39.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 181
  %bdaddr40.i = getelementptr i8, ptr %32, i32 4
  %39 = call ptr @memcpy(ptr %wake_addr39.i, ptr %bdaddr40.i, i32 6)
  %bdaddr_type.i = getelementptr i8, ptr %32, i32 3
  %40 = ptrtoint ptr %bdaddr_type.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %bdaddr_type.i, align 1
  %wake_addr_type41.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 182
  %42 = ptrtoint ptr %wake_addr_type41.i to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %41, ptr %wake_addr_type41.i, align 1
  br label %hci_store_wake_reason.exit

sw.bb42.i:                                        ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #11
  %wake_addr43.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 181
  %bdaddr44.i = getelementptr i8, ptr %32, i32 4
  %43 = call ptr @memcpy(ptr %wake_addr43.i, ptr %bdaddr44.i, i32 6)
  %bdaddr_type45.i = getelementptr i8, ptr %32, i32 3
  %44 = ptrtoint ptr %bdaddr_type45.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %bdaddr_type45.i, align 1
  %wake_addr_type46.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 182
  %46 = ptrtoint ptr %wake_addr_type46.i to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 %45, ptr %wake_addr_type46.i, align 1
  br label %hci_store_wake_reason.exit

sw.bb47.i:                                        ; preds = %if.then35.i
  call void @__sanitizer_cov_trace_pc() #11
  %wake_addr48.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 181
  %bdaddr49.i = getelementptr i8, ptr %32, i32 5
  %47 = call ptr @memcpy(ptr %wake_addr48.i, ptr %bdaddr49.i, i32 6)
  %bdaddr_type50.i = getelementptr i8, ptr %32, i32 4
  %48 = ptrtoint ptr %bdaddr_type50.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %bdaddr_type50.i, align 1
  %wake_addr_type51.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 182
  %50 = ptrtoint ptr %wake_addr_type51.i to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %49, ptr %wake_addr_type51.i, align 1
  br label %hci_store_wake_reason.exit

if.else53.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %51 = ptrtoint ptr %wake_reason.i to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 1, ptr %wake_reason.i, align 2
  br label %hci_store_wake_reason.exit

hci_store_wake_reason.exit:                       ; preds = %if.else53.i, %sw.bb47.i, %sw.bb42.i, %sw.bb.i, %if.then35.i.hci_store_wake_reason.exit_crit_edge, %land.lhs.true.i.hci_store_wake_reason.exit_crit_edge, %if.then18.i.hci_store_wake_reason.exit_crit_edge, %if.then10.i, %if.then6.i, %lor.lhs.false.i.hci_store_wake_reason.exit_crit_edge, %if.end35.hci_store_wake_reason.exit_crit_edge
  call void @mutex_unlock(ptr noundef %lock.i) #9
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_event_packet.__UNIQUE_ID_ddebug660, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_event_packet, %if.then41)) #9
          to label %do.end [label %if.then41], !srcloc !680

if.then41:                                        ; preds = %hci_store_wake_reason.exit
  call void @__sanitizer_cov_trace_pc() #11
  %name42 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv44 = zext i8 %9 to i32
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_event_packet.__UNIQUE_ID_ddebug660, ptr noundef nonnull @.str.5, ptr noundef %name42, i32 noundef %conv44) #9
  br label %do.end

do.end:                                           ; preds = %if.then41, %hci_store_wake_reason.exit
  %idxprom.i = zext i8 %9 to i32
  %arrayidx.i88 = getelementptr [256 x %struct.hci_ev], ptr @hci_ev_table, i32 0, i32 %idxprom.i
  %52 = getelementptr [256 x %struct.hci_ev], ptr @hci_ev_table, i32 0, i32 %idxprom.i, i32 1
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %52, align 4
  %tobool.not.i89 = icmp eq ptr %54, null
  br i1 %tobool.not.i89, label %do.end.hci_event_func.exit_crit_edge, label %if.end.i90

do.end.hci_event_func.exit_crit_edge:             ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_event_func.exit

if.end.i90:                                       ; preds = %do.end
  %55 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %len, align 4
  %min_len.i = getelementptr [256 x %struct.hci_ev], ptr @hci_ev_table, i32 0, i32 %idxprom.i, i32 2
  %57 = ptrtoint ptr %min_len.i to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %min_len.i, align 4
  %conv.i = zext i16 %58 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %conv.i)
  %cmp.i = icmp ult i32 %56, %conv.i
  br i1 %cmp.i, label %if.then2.i, label %if.end7.i

if.then2.i:                                       ; preds = %if.end.i90
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.6, ptr noundef %name.i, i32 noundef %idxprom.i, i32 noundef %56, i32 noundef %conv.i) #9
  br label %hci_event_func.exit

if.end7.i:                                        ; preds = %if.end.i90
  %max_len.i = getelementptr [256 x %struct.hci_ev], ptr @hci_ev_table, i32 0, i32 %idxprom.i, i32 3
  %59 = ptrtoint ptr %max_len.i to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %max_len.i, align 2
  %conv9.i = zext i16 %60 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %conv9.i)
  %cmp10.i = icmp ugt i32 %56, %conv9.i
  br i1 %cmp10.i, label %if.then12.i, label %if.end7.i.if.end19.i_crit_edge

if.end7.i.if.end19.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end19.i

if.then12.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #11
  %name13.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  call void (ptr, ...) @bt_warn(ptr noundef nonnull @.str.7, ptr noundef %name13.i, i32 noundef %idxprom.i, i32 noundef %56, i32 noundef %conv9.i) #9
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then12.i, %if.end7.i.if.end19.i_crit_edge
  %call.i.i = call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %conv.i) #9
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %hci_ev_skb_pull.exit.thread.i, label %if.end24.i

hci_ev_skb_pull.exit.thread.i:                    ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #11
  %name.i.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.242, ptr noundef %name.i.i, i32 noundef %idxprom.i) #9
  br label %hci_event_func.exit

if.end24.i:                                       ; preds = %if.end19.i
  %61 = ptrtoint ptr %arrayidx.i88 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %arrayidx.i88, align 4, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %62)
  %tobool25.not.i = icmp eq i8 %62, 0
  br i1 %tobool25.not.i, label %if.else.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %54(ptr noundef %hdev, ptr noundef nonnull %call.i.i, ptr noundef %skb, ptr noundef nonnull %opcode, ptr noundef nonnull %status, ptr noundef nonnull %req_complete, ptr noundef nonnull %req_complete_skb) #9
  br label %hci_event_func.exit

if.else.i:                                        ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %54(ptr noundef %hdev, ptr noundef nonnull %call.i.i, ptr noundef %skb) #9
  br label %hci_event_func.exit

hci_event_func.exit:                              ; preds = %if.else.i, %if.then26.i, %hci_ev_skb_pull.exit.thread.i, %if.then2.i, %do.end.hci_event_func.exit_crit_edge
  %63 = ptrtoint ptr %req_complete to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %req_complete, align 4
  %tobool46.not = icmp eq ptr %64, null
  br i1 %tobool46.not, label %if.else, label %if.then47

if.then47:                                        ; preds = %hci_event_func.exit
  call void @__sanitizer_cov_trace_pc() #11
  %65 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %status, align 1
  %67 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %opcode, align 2
  call void %64(ptr noundef %hdev, i8 noundef zeroext %66, i16 noundef zeroext %68) #9
  br label %done

if.else:                                          ; preds = %hci_event_func.exit
  %69 = ptrtoint ptr %req_complete_skb to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %req_complete_skb, align 4
  %tobool48.not = icmp eq ptr %70, null
  br i1 %tobool48.not, label %if.else.done_crit_edge, label %if.then49

if.else.done_crit_edge:                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %done

if.then49:                                        ; preds = %if.else
  %71 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %opcode, align 2
  %call50 = call fastcc zeroext i1 @hci_get_cmd_complete(ptr noundef %hdev, i16 noundef zeroext %72, i8 noundef zeroext %req_evt.0, ptr noundef %orig_skb.0)
  br i1 %call50, label %if.then49.if.end52_crit_edge, label %if.then51

if.then49.if.end52_crit_edge:                     ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end52

if.then51:                                        ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #11
  call void @kfree_skb_reason(ptr noundef %orig_skb.0, i32 noundef 0) #9
  br label %if.end52

if.end52:                                         ; preds = %if.then51, %if.then49.if.end52_crit_edge
  %orig_skb.1 = phi ptr [ %orig_skb.0, %if.then49.if.end52_crit_edge ], [ null, %if.then51 ]
  %73 = ptrtoint ptr %req_complete_skb to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %req_complete_skb, align 4
  %75 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %status, align 1
  %77 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %opcode, align 2
  call void %74(ptr noundef %hdev, i8 noundef zeroext %76, i16 noundef zeroext %78, ptr noundef %orig_skb.1) #9
  br label %done

done:                                             ; preds = %if.end52, %if.else.done_crit_edge, %if.then47, %if.then1, %if.then
  %orig_skb.2 = phi ptr [ null, %if.then ], [ %orig_skb.0, %if.then47 ], [ %orig_skb.1, %if.end52 ], [ %orig_skb.0, %if.else.done_crit_edge ], [ null, %if.then1 ]
  call void @kfree_skb_reason(ptr noundef %orig_skb.2, i32 noundef 0) #9
  call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #9
  %evt_rx = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 199, i32 3
  %79 = ptrtoint ptr %evt_rx to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %evt_rx, align 4
  %inc = add i32 %80, 1
  store i32 %inc, ptr %evt_rx, align 4
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %opcode) #9
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %req_complete_skb) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %req_complete) #9
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @bt_err(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bt_warn(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_req_cmd_complete(ptr noundef, i16 noundef zeroext, i8 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_clone(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_pull(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @hci_get_cmd_complete(ptr noundef %hdev, i16 noundef zeroext %opcode, i8 noundef zeroext %event, ptr noundef %skb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %skb, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call ptr @skb_pull_data(ptr noundef nonnull %skb, i32 noundef 2) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %hci_ev_skb_pull.exit.thread, label %if.end3

hci_ev_skb_pull.exit.thread:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv.i = zext i8 %event to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.242, ptr noundef %name.i, i32 noundef %conv.i) #9
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %event)
  %tobool4.not = icmp eq i8 %event, 0
  %0 = ptrtoint ptr %call.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %call.i, align 1
  br i1 %tobool4.not, label %if.end10, label %if.then5

if.then5:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #11
  call void @__sanitizer_cov_trace_cmp1(i8 %1, i8 %event)
  %cmp.not = icmp eq i8 %1, %event
  br label %cleanup

if.end10:                                         ; preds = %if.end3
  %2 = zext i8 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.248)
  switch i8 %1, label %if.then21 [
    i8 15, label %if.end10.cleanup_crit_edge
    i8 14, label %if.end24
  ]

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then21:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  %conv12 = zext i8 %1 to i32
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.243, ptr noundef %name, i32 noundef %conv12) #9
  br label %cleanup

if.end24:                                         ; preds = %if.end10
  %call.i60 = tail call ptr @skb_pull_data(ptr noundef nonnull %skb, i32 noundef 3) #9
  %tobool.not.i61 = icmp eq ptr %call.i60, null
  br i1 %tobool.not.i61, label %hci_cc_skb_pull.exit.thread, label %if.end28

hci_cc_skb_pull.exit.thread:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #11
  %name.i62 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv.i63 = zext i16 %opcode to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.144, ptr noundef %name.i62, i32 noundef %conv.i63) #9
  br label %cleanup

if.end28:                                         ; preds = %if.end24
  %conv29 = zext i16 %opcode to i32
  %opcode30 = getelementptr inbounds %struct.hci_ev_cmd_complete, ptr %call.i60, i32 0, i32 1
  %3 = ptrtoint ptr %opcode30 to i32
  call void @__asan_loadN_noabort(i32 %3, i32 2)
  %4 = load i16, ptr %opcode30, align 1
  %5 = tail call i16 @llvm.bswap.i16(i16 %4)
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %opcode)
  %cmp32.not = icmp eq i16 %5, %opcode
  br i1 %cmp32.not, label %if.end28.cleanup_crit_edge, label %do.body

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.body:                                          ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_get_cmd_complete.__UNIQUE_ID_ddebug659, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_get_cmd_complete, %if.then39)) #9
          to label %cleanup [label %if.then39], !srcloc !680

if.then39:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #11
  %6 = ptrtoint ptr %opcode30 to i32
  call void @__asan_loadN_noabort(i32 %6, i32 2)
  %7 = load i16, ptr %opcode30, align 1
  %8 = tail call i16 @llvm.bswap.i16(i16 %7)
  %conv42 = zext i16 %8 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_get_cmd_complete.__UNIQUE_ID_ddebug659, ptr noundef nonnull @.str.245, i32 noundef %conv29, i32 noundef %conv42) #9
  br label %cleanup

cleanup:                                          ; preds = %if.then39, %do.body, %if.end28.cleanup_crit_edge, %hci_cc_skb_pull.exit.thread, %if.then21, %if.end10.cleanup_crit_edge, %if.then5, %hci_ev_skb_pull.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %if.then21 ], [ false, %entry.cleanup_crit_edge ], [ %cmp.not, %if.then5 ], [ false, %if.end10.cleanup_crit_edge ], [ false, %if.then39 ], [ true, %if.end28.cleanup_crit_edge ], [ false, %hci_ev_skb_pull.exit.thread ], [ false, %hci_cc_skb_pull.exit.thread ], [ false, %do.body ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_inquiry_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp.i = alloca %struct.hci_cp_remote_name_req, align 1
  %.compoundliteral = alloca %struct.bdaddr_t, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_inquiry_complete_evt.__UNIQUE_ID_ddebug594, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_inquiry_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_inquiry_complete_evt.__UNIQUE_ID_ddebug594, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  tail call void @hci_conn_check_pending(ptr noundef %hdev) #9
  %flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  %call3 = tail call i32 @_test_and_clear_bit(i32 noundef 7, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %do.end10

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.end10:                                         ; preds = %do.end
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #9, !srcloc !681
  tail call void @wake_up_bit(ptr noundef %flags, i32 noundef 7) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool16.not = icmp eq i32 %4, 0
  br i1 %tobool16.not, label %do.end10.cleanup_crit_edge, label %if.end18

do.end10.cleanup_crit_edge:                       ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end18:                                         ; preds = %do.end10
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %state = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 1
  %5 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %cmp.not = icmp eq i32 %6, 2
  br i1 %cmp.not, label %if.end21, label %if.end18.unlock_crit_edge

if.end18.unlock_crit_edge:                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end21:                                         ; preds = %if.end18
  %resolve = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 4
  %7 = ptrtoint ptr %resolve to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %resolve, align 4
  %cmp.i.not = icmp eq ptr %8, %resolve
  br i1 %cmp.i.not, label %if.then24, label %if.end33

if.then24:                                        ; preds = %if.end21
  %9 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %dev_flags, align 4
  %11 = and i32 %10, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool28.not = icmp eq i32 %11, 0
  br i1 %tobool28.not, label %if.then24.if.then31_crit_edge, label %lor.lhs.false

if.then24.if.then31_crit_edge:                    ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then31

lor.lhs.false:                                    ; preds = %if.then24
  %quirks = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 118
  %12 = ptrtoint ptr %quirks to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %quirks, align 4
  %14 = and i32 %13, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool30.not = icmp eq i32 %14, 0
  br i1 %tobool30.not, label %lor.lhs.false.if.then31_crit_edge, label %lor.lhs.false.unlock_crit_edge

lor.lhs.false.unlock_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

lor.lhs.false.if.then31_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then31

if.then31:                                        ; preds = %lor.lhs.false.if.then31_crit_edge, %if.then24.if.then31_crit_edge
  tail call void @hci_discovery_set_state(ptr noundef %hdev, i32 noundef 0) #9
  br label %unlock

if.end33:                                         ; preds = %if.end21
  %15 = call ptr @memset(ptr %.compoundliteral, i32 0, i32 6)
  %call38 = call ptr @hci_inquiry_cache_lookup_resolve(ptr noundef %hdev, ptr noundef nonnull %.compoundliteral, i32 noundef 1) #9
  %tobool39.not = icmp eq ptr %call38, null
  br i1 %tobool39.not, label %if.end33.if.else_crit_edge, label %land.lhs.true

if.end33.if.else_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

land.lhs.true:                                    ; preds = %if.end33
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %cp.i) #9
  %16 = getelementptr inbounds %struct.hci_cp_remote_name_req, ptr %cp.i, i32 0, i32 1
  %17 = getelementptr inbounds %struct.hci_cp_remote_name_req, ptr %cp.i, i32 0, i32 2
  %18 = getelementptr inbounds %struct.hci_cp_remote_name_req, ptr %cp.i, i32 0, i32 3
  %data.i = getelementptr inbounds %struct.inquiry_entry, ptr %call38, i32 0, i32 4
  %19 = call ptr @memcpy(ptr %cp.i, ptr %data.i, i32 6)
  %pscan_rep_mode.i = getelementptr inbounds %struct.inquiry_entry, ptr %call38, i32 0, i32 4, i32 1
  %20 = ptrtoint ptr %pscan_rep_mode.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %pscan_rep_mode.i, align 2
  %22 = ptrtoint ptr %16 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %21, ptr %16, align 1
  %pscan_mode.i = getelementptr inbounds %struct.inquiry_entry, ptr %call38, i32 0, i32 4, i32 3
  %23 = ptrtoint ptr %pscan_mode.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %pscan_mode.i, align 4
  %25 = ptrtoint ptr %17 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %24, ptr %17, align 1
  %clock_offset.i = getelementptr inbounds %struct.inquiry_entry, ptr %call38, i32 0, i32 4, i32 5
  %26 = ptrtoint ptr %clock_offset.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %clock_offset.i, align 4
  %28 = ptrtoint ptr %18 to i32
  call void @__asan_storeN_noabort(i32 %28, i32 2)
  store i16 %27, ptr %18, align 1
  %call.i = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1049, i32 noundef 10, ptr noundef nonnull %cp.i) #9
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %cp.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp41 = icmp eq i32 %call.i, 0
  br i1 %cmp41, label %if.then43, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

if.then43:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %name_state = getelementptr inbounds %struct.inquiry_entry, ptr %call38, i32 0, i32 2
  %29 = ptrtoint ptr %name_state to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 2, ptr %name_state, align 4
  call void @hci_discovery_set_state(ptr noundef %hdev, i32 noundef 3) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %30 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %30, 1024
  %name_resolve_timeout = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 20
  %31 = ptrtoint ptr %name_resolve_timeout to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %add, ptr %name_resolve_timeout, align 4
  br label %unlock

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end33.if.else_crit_edge
  %32 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %dev_flags, align 4
  %34 = and i32 %33, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool48.not = icmp eq i32 %34, 0
  br i1 %tobool48.not, label %if.else.if.then53_crit_edge, label %lor.lhs.false49

if.else.if.then53_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then53

lor.lhs.false49:                                  ; preds = %if.else
  %quirks50 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 118
  %35 = ptrtoint ptr %quirks50 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %quirks50, align 4
  %37 = and i32 %36, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool52.not = icmp eq i32 %37, 0
  br i1 %tobool52.not, label %lor.lhs.false49.if.then53_crit_edge, label %lor.lhs.false49.unlock_crit_edge

lor.lhs.false49.unlock_crit_edge:                 ; preds = %lor.lhs.false49
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

lor.lhs.false49.if.then53_crit_edge:              ; preds = %lor.lhs.false49
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then53

if.then53:                                        ; preds = %lor.lhs.false49.if.then53_crit_edge, %if.else.if.then53_crit_edge
  call void @hci_discovery_set_state(ptr noundef %hdev, i32 noundef 0) #9
  br label %unlock

unlock:                                           ; preds = %if.then53, %lor.lhs.false49.unlock_crit_edge, %if.then43, %if.then31, %lor.lhs.false.unlock_crit_edge, %if.end18.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %unlock, %do.end10.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_inquiry_result_evt(ptr noundef %hdev, ptr noundef %edata, ptr noundef %skb) #0 align 64 {
entry:
  %data = alloca %struct.inquiry_data, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %data) #9
  %0 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 1
  %1 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 2
  %2 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 3
  %3 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 4
  %4 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 5
  %5 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 6
  %6 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 7
  %7 = call ptr @memset(ptr %data, i32 255, i32 16)
  %8 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %edata, align 1
  %conv = zext i8 %9 to i32
  %10 = mul nuw nsw i32 %conv, 14
  %call.i = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %10) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %hci_ev_skb_pull.exit.thread, label %do.body

hci_ev_skb_pull.exit.thread:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.242, ptr noundef %name.i, i32 noundef 2) #9
  br label %cleanup

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_inquiry_result_evt.__UNIQUE_ID_ddebug595, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_inquiry_result_evt, %if.then6)) #9
          to label %do.end [label %if.then6], !srcloc !680

if.then6:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %11 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %edata, align 1
  %conv8 = zext i8 %12 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_inquiry_result_evt.__UNIQUE_ID_ddebug595, ptr noundef nonnull @.str.11, ptr noundef %name, i32 noundef %conv8) #9
  br label %do.end

do.end:                                           ; preds = %if.then6, %do.body
  %13 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %edata, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool11.not = icmp eq i8 %14, 0
  br i1 %tobool11.not, label %do.end.cleanup_crit_edge, label %if.end13

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end13:                                         ; preds = %do.end
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %15 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %dev_flags, align 4
  %17 = and i32 %16, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool16.not = icmp eq i32 %17, 0
  br i1 %tobool16.not, label %if.end18, label %if.end13.cleanup_crit_edge

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end18:                                         ; preds = %if.end13
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %18 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %edata, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp60.not = icmp eq i8 %19, 0
  br i1 %cmp60.not, label %if.end18.for.end_crit_edge, label %if.end18.for.body_crit_edge

if.end18.for.body_crit_edge:                      ; preds = %if.end18
  br label %for.body

if.end18.for.end_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end18.for.body_crit_edge
  %i.061 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end18.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hci_ev_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.061
  %20 = call ptr @memcpy(ptr %data, ptr %arrayidx, i32 6)
  %pscan_rep_mode = getelementptr %struct.hci_ev_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.061, i32 1
  %21 = ptrtoint ptr %pscan_rep_mode to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %pscan_rep_mode, align 1
  %23 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %22, ptr %0, align 2
  %pscan_period_mode = getelementptr %struct.hci_ev_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.061, i32 2
  %24 = ptrtoint ptr %pscan_period_mode to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %pscan_period_mode, align 1
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 %25, ptr %1, align 1
  %pscan_mode = getelementptr %struct.hci_ev_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.061, i32 3
  %27 = ptrtoint ptr %pscan_mode to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %pscan_mode, align 1
  %29 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %28, ptr %2, align 2
  %dev_class28 = getelementptr %struct.hci_ev_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.061, i32 4
  %30 = call ptr @memcpy(ptr %3, ptr %dev_class28, i32 3)
  %clock_offset = getelementptr %struct.hci_ev_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.061, i32 5
  %31 = ptrtoint ptr %clock_offset to i32
  call void @__asan_loadN_noabort(i32 %31, i32 2)
  %32 = load i16, ptr %clock_offset, align 1
  %33 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %32, ptr %4, align 2
  %34 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 127, ptr %5, align 2
  %35 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 0, ptr %6, align 1
  %call31 = call i32 @hci_inquiry_cache_update(ptr noundef %hdev, ptr noundef nonnull %data, i1 noundef zeroext false) #9
  call void @mgmt_device_found(ptr noundef %hdev, ptr noundef %arrayidx, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %dev_class28, i8 noundef signext 127, i32 noundef %call31, ptr noundef null, i16 noundef zeroext 0, ptr noundef null, i8 noundef zeroext 0) #9
  %inc = add nuw nsw i32 %i.061, 1
  %36 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %edata, align 1
  %conv20 = zext i8 %37 to i32
  %cmp = icmp ult i32 %inc, %conv20
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end18.for.end_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end13.cleanup_crit_edge, %do.end.cleanup_crit_edge, %hci_ev_skb_pull.exit.thread
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %data) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_conn_complete_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_read_remote_features, align 2
  %cp89 = alloca %struct.hci_cp_change_conn_ptype, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_complete_evt.__UNIQUE_ID_ddebug596, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_conn_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_complete_evt.__UNIQUE_ID_ddebug596, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %link_type = getelementptr inbounds %struct.hci_ev_conn_complete, ptr %data, i32 0, i32 3
  %2 = ptrtoint ptr %link_type to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %link_type, align 1
  %bdaddr = getelementptr inbounds %struct.hci_ev_conn_complete, ptr %data, i32 0, i32 2
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext %3, ptr noundef %bdaddr)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.then5, label %do.end.if.end34_crit_edge

do.end.if.end34_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end34

if.then5:                                         ; preds = %do.end
  %4 = ptrtoint ptr %link_type to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %link_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp = icmp eq i8 %5, 1
  br i1 %cmp, label %land.lhs.true, label %if.then5.if.else_crit_edge

if.then5.if.else_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

land.lhs.true:                                    ; preds = %if.then5
  %accept_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 186
  %call10 = tail call ptr @hci_bdaddr_list_lookup_with_flags(ptr noundef %accept_list, ptr noundef %bdaddr, i8 noundef zeroext 0) #9
  %tobool11.not = icmp eq ptr %call10, null
  %6 = ptrtoint ptr %link_type to i32
  call void @__asan_load1_noabort(i32 %6)
  %.pr = load i8, ptr %link_type, align 1
  br i1 %tobool11.not, label %land.lhs.true.if.else_crit_edge, label %if.then12

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

if.then12:                                        ; preds = %land.lhs.true
  %conv14 = zext i8 %.pr to i32
  %call16 = tail call ptr @hci_conn_add(ptr noundef %hdev, i32 noundef %conv14, ptr noundef %bdaddr, i8 noundef zeroext 1) #9
  %tobool17.not = icmp eq ptr %call16, null
  br i1 %tobool17.not, label %if.then18, label %if.then12.if.end34_crit_edge

if.then12.if.end34_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end34

if.then18:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  %name19 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.13, ptr noundef %name19) #9
  br label %unlock

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.then5.if.else_crit_edge
  %7 = phi i8 [ %5, %if.then5.if.else_crit_edge ], [ %.pr, %land.lhs.true.if.else_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp24.not = icmp eq i8 %7, 0
  br i1 %cmp24.not, label %if.end27, label %if.else.unlock_crit_edge

if.else.unlock_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end27:                                         ; preds = %if.else
  %call29 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 2, ptr noundef %bdaddr)
  %tobool30.not = icmp eq ptr %call29, null
  br i1 %tobool30.not, label %if.end27.unlock_crit_edge, label %if.end32

if.end27.unlock_crit_edge:                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end32:                                         ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  %type = getelementptr inbounds %struct.hci_conn, ptr %call29, i32 0, i32 14
  %8 = ptrtoint ptr %type to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 0, ptr %type, align 1
  br label %if.end34

if.end34:                                         ; preds = %if.end32, %if.then12.if.end34_crit_edge, %do.end.if.end34_crit_edge
  %conn.0 = phi ptr [ %call3, %do.end.if.end34_crit_edge ], [ %call16, %if.then12.if.end34_crit_edge ], [ %call29, %if.end32 ]
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool36.not = icmp eq i8 %10, 0
  br i1 %tobool36.not, label %if.then37, label %if.else95

if.then37:                                        ; preds = %if.end34
  %handle = getelementptr inbounds %struct.hci_ev_conn_complete, ptr %data, i32 0, i32 1
  %11 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %11, i32 2)
  %12 = load i16, ptr %handle, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12)
  %handle38 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 11
  %14 = ptrtoint ptr %handle38 to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %handle38, align 2
  %type39 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 14
  %15 = ptrtoint ptr %type39 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %type39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %16)
  %cmp41 = icmp eq i8 %16, 1
  %state = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 12
  br i1 %cmp41, label %if.then43, label %if.else59

if.then43:                                        ; preds = %if.then37
  %17 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 7, ptr %state, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_conn_complete_evt, %if.then.i)) #9
          to label %hci_conn_hold.exit [label %if.then.i], !srcloc !680

if.then.i:                                        ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #9
  %18 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %refcnt.i, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_hold.__UNIQUE_ID_ddebug471, ptr noundef nonnull @.str.20, ptr noundef nonnull %conn.0, i32 noundef %19) #9
  br label %hci_conn_hold.exit

hci_conn_hold.exit:                               ; preds = %if.then.i, %if.then43
  %refcnt4.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 1
  %call.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #9
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #9
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #9, !srcloc !682
  %disc_work.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 58
  %call5.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work.i) #9
  %out = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 16
  %21 = ptrtoint ptr %out to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %out, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool44.not = icmp eq i8 %22, 0
  br i1 %tobool44.not, label %land.lhs.true45, label %hci_conn_hold.exit.if.else54_crit_edge

hci_conn_hold.exit.if.else54_crit_edge:           ; preds = %hci_conn_hold.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else54

land.lhs.true45:                                  ; preds = %hci_conn_hold.exit
  %hdev1.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 65
  %23 = ptrtoint ptr %hdev1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %hdev1.i, align 4
  %dev_flags.i = getelementptr inbounds %struct.hci_dev, ptr %24, i32 0, i32 206
  %25 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %dev_flags.i, align 4
  %27 = and i32 %26, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i, label %land.lhs.true45.land.lhs.true47_crit_edge, label %hci_conn_ssp_enabled.exit

land.lhs.true45.land.lhs.true47_crit_edge:        ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true47

hci_conn_ssp_enabled.exit:                        ; preds = %land.lhs.true45
  %flags.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 47
  %28 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %flags.i, align 4
  %30 = and i32 %29, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool3.i.not = icmp eq i32 %30, 0
  br i1 %tobool3.i.not, label %hci_conn_ssp_enabled.exit.land.lhs.true47_crit_edge, label %hci_conn_ssp_enabled.exit.if.else54_crit_edge

hci_conn_ssp_enabled.exit.if.else54_crit_edge:    ; preds = %hci_conn_ssp_enabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else54

hci_conn_ssp_enabled.exit.land.lhs.true47_crit_edge: ; preds = %hci_conn_ssp_enabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true47

land.lhs.true47:                                  ; preds = %hci_conn_ssp_enabled.exit.land.lhs.true47_crit_edge, %land.lhs.true45.land.lhs.true47_crit_edge
  %call49 = tail call ptr @hci_find_link_key(ptr noundef %hdev, ptr noundef %bdaddr) #9
  %tobool50.not = icmp eq ptr %call49, null
  br i1 %tobool50.not, label %if.then51, label %land.lhs.true47.if.else54_crit_edge

land.lhs.true47.if.else54_crit_edge:              ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else54

if.then51:                                        ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #11
  %disc_timeout = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 31
  %31 = ptrtoint ptr %disc_timeout to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 6000, ptr %disc_timeout, align 2
  br label %if.end61

if.else54:                                        ; preds = %land.lhs.true47.if.else54_crit_edge, %hci_conn_ssp_enabled.exit.if.else54_crit_edge, %hci_conn_hold.exit.if.else54_crit_edge
  %disc_timeout57 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 31
  %32 = ptrtoint ptr %disc_timeout57 to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 200, ptr %disc_timeout57, align 2
  br label %if.end61

if.else59:                                        ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #11
  %33 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 1, ptr %state, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.else59, %if.else54, %if.then51
  tail call void @hci_debugfs_create_conn(ptr noundef nonnull %conn.0) #9
  tail call void @hci_conn_add_sysfs(ptr noundef nonnull %conn.0) #9
  %flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  %34 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %flags, align 4
  %36 = and i32 %35, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool63.not = icmp eq i32 %36, 0
  br i1 %tobool63.not, label %if.end61.if.end66_crit_edge, label %if.then64

if.end61.if.end66_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end66

if.then64:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #11
  %flags65 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 47
  tail call void @_set_bit(i32 noundef 13, ptr noundef %flags65) #9
  br label %if.end66

if.end66:                                         ; preds = %if.then64, %if.end61.if.end66_crit_edge
  %37 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %flags, align 4
  %39 = and i32 %38, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool69.not = icmp eq i32 %39, 0
  br i1 %tobool69.not, label %if.end66.if.end72_crit_edge, label %if.then70

if.end66.if.end72_crit_edge:                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end72

if.then70:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #11
  %flags71 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 47
  tail call void @_set_bit(i32 noundef 12, ptr noundef %flags71) #9
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %if.end66.if.end72_crit_edge
  %40 = ptrtoint ptr %type39 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %type39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %41)
  %cmp75 = icmp eq i8 %41, 1
  br i1 %cmp75, label %if.then77, label %if.end72.if.end81_crit_edge

if.end72.if.end81_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end81

if.then77:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cp) #9
  %42 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %42, i32 2)
  %43 = load i16, ptr %handle, align 1
  %44 = ptrtoint ptr %cp to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %43, ptr %cp, align 2
  %call80 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1051, i32 noundef 2, ptr noundef nonnull %cp) #9
  %req_workqueue.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 139
  %45 = ptrtoint ptr %req_workqueue.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %req_workqueue.i, align 8
  %scan_update.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 156
  %call.i.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %46, ptr noundef %scan_update.i) #9
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cp) #9
  br label %if.end81

if.end81:                                         ; preds = %if.then77, %if.end72.if.end81_crit_edge
  %out82 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 16
  %47 = ptrtoint ptr %out82 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %out82, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool83.not = icmp eq i8 %48, 0
  br i1 %tobool83.not, label %land.lhs.true84, label %if.end81.if.end105_crit_edge

if.end81.if.end105_crit_edge:                     ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end105

land.lhs.true84:                                  ; preds = %if.end81
  %hci_ver = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 28
  %49 = ptrtoint ptr %hci_ver to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %hci_ver, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %50)
  %cmp86 = icmp ult i8 %50, 3
  br i1 %cmp86, label %if.then88, label %land.lhs.true84.if.end105_crit_edge

land.lhs.true84.if.end105_crit_edge:              ; preds = %land.lhs.true84
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end105

if.then88:                                        ; preds = %land.lhs.true84
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cp89) #9
  %51 = getelementptr inbounds %struct.hci_cp_change_conn_ptype, ptr %cp89, i32 0, i32 1
  %52 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %52, i32 2)
  %53 = load i16, ptr %handle, align 1
  %54 = ptrtoint ptr %cp89 to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 %53, ptr %cp89, align 2
  %pkt_type = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 20
  %55 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %pkt_type, align 2
  %57 = call i16 @llvm.bswap.i16(i16 %56)
  %58 = ptrtoint ptr %51 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %57, ptr %51, align 2
  %call93 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1039, i32 noundef 4, ptr noundef nonnull %cp89) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cp89) #9
  br label %if.end105

if.else95:                                        ; preds = %if.end34
  %state96 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 12
  %59 = ptrtoint ptr %state96 to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 9, ptr %state96, align 4
  %type97 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 14
  %60 = ptrtoint ptr %type97 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %type97, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %61)
  %cmp99 = icmp eq i8 %61, 1
  br i1 %cmp99, label %if.then101, label %if.else95.if.end105_crit_edge

if.else95.if.end105_crit_edge:                    ; preds = %if.else95
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end105

if.then101:                                       ; preds = %if.else95
  call void @__sanitizer_cov_trace_pc() #11
  %dst = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 2
  %dst_type = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 3
  %62 = ptrtoint ptr %dst_type to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %dst_type, align 2
  %64 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %data, align 1
  tail call void @mgmt_connect_failed(ptr noundef %hdev, ptr noundef %dst, i8 noundef zeroext 1, i8 noundef zeroext %63, i8 noundef zeroext %65) #9
  br label %if.end105

if.end105:                                        ; preds = %if.then101, %if.else95.if.end105_crit_edge, %if.then88, %land.lhs.true84.if.end105_crit_edge, %if.end81.if.end105_crit_edge
  %type106 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 14
  %66 = ptrtoint ptr %type106 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %type106, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %67)
  %cmp108 = icmp eq i8 %67, 1
  br i1 %cmp108, label %if.then110, label %if.end105.if.end112_crit_edge

if.end105.if.end112_crit_edge:                    ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end112

if.then110:                                       ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #11
  %68 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %data, align 1
  call void @hci_sco_setup(ptr noundef nonnull %conn.0, i8 noundef zeroext %69) #9
  br label %if.end112

if.end112:                                        ; preds = %if.then110, %if.end105.if.end112_crit_edge
  %70 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %71)
  %tobool114.not = icmp eq i8 %71, 0
  br i1 %tobool114.not, label %if.else118, label %if.then115

if.then115:                                       ; preds = %if.end112
  call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then115.for.end.i_crit_edge, label %if.then115.for.body.i_crit_edge

if.then115.for.body.i_crit_edge:                  ; preds = %if.then115
  br label %for.body.i

if.then115.for.end.i_crit_edge:                   ; preds = %if.then115
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then115.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then115.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %72 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i206 = icmp eq ptr %73, null
  br i1 %tobool.not.i206, label %for.body.i.for.inc.i_crit_edge, label %if.then.i207

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i207:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %73(ptr noundef %conn.0, i8 noundef zeroext %71) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i207, %for.body.i.for.inc.i_crit_edge
  %74 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then115.for.end.i_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 71
  %75 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %76, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %76(ptr noundef %conn.0, i8 noundef zeroext %71) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  %call117 = call i32 @hci_conn_del(ptr noundef %conn.0) #9
  br label %unlock

if.else118:                                       ; preds = %if.end112
  %77 = ptrtoint ptr %link_type to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %link_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %78)
  %cmp121 = icmp eq i8 %78, 0
  br i1 %cmp121, label %if.then123, label %if.else118.unlock_crit_edge

if.else118.unlock_crit_edge:                      ; preds = %if.else118
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then123:                                       ; preds = %if.else118
  %setting = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 33
  %79 = ptrtoint ptr %setting to i32
  call void @__asan_load2_noabort(i32 %79)
  %80 = load i16, ptr %setting, align 2
  %81 = and i16 %80, 3
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %81)
  %cond = icmp eq i16 %81, 0
  br i1 %cond, label %sw.bb, label %if.then123.sw.epilog_crit_edge

if.then123.sw.epilog_crit_edge:                   ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

sw.bb:                                            ; preds = %if.then123
  %notify = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 238
  %82 = ptrtoint ptr %notify to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %notify, align 8
  %tobool125.not = icmp eq ptr %83, null
  br i1 %tobool125.not, label %sw.bb.sw.epilog_crit_edge, label %if.then126

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

if.then126:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  call void %83(ptr noundef %hdev, i32 noundef 4) #9
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then126, %sw.bb.sw.epilog_crit_edge, %if.then123.sw.epilog_crit_edge
  %84 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load i8, ptr %data, align 1
  call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i208 = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i209 = icmp eq ptr %cb.018.i208, @hci_cb_list
  br i1 %cmp.not19.i209, label %sw.epilog.for.end.i220_crit_edge, label %sw.epilog.for.body.i213_crit_edge

sw.epilog.for.body.i213_crit_edge:                ; preds = %sw.epilog
  br label %for.body.i213

sw.epilog.for.end.i220_crit_edge:                 ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i220

for.body.i213:                                    ; preds = %for.inc.i217.for.body.i213_crit_edge, %sw.epilog.for.body.i213_crit_edge
  %cb.020.i210 = phi ptr [ %cb.0.i215, %for.inc.i217.for.body.i213_crit_edge ], [ %cb.018.i208, %sw.epilog.for.body.i213_crit_edge ]
  %connect_cfm.i211 = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i210, i32 0, i32 2
  %86 = ptrtoint ptr %connect_cfm.i211 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %connect_cfm.i211, align 4
  %tobool.not.i212 = icmp eq ptr %87, null
  br i1 %tobool.not.i212, label %for.body.i213.for.inc.i217_crit_edge, label %if.then.i214

for.body.i213.for.inc.i217_crit_edge:             ; preds = %for.body.i213
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i217

if.then.i214:                                     ; preds = %for.body.i213
  call void @__sanitizer_cov_trace_pc() #11
  call void %87(ptr noundef %conn.0, i8 noundef zeroext %85) #9
  br label %for.inc.i217

for.inc.i217:                                     ; preds = %if.then.i214, %for.body.i213.for.inc.i217_crit_edge
  %88 = ptrtoint ptr %cb.020.i210 to i32
  call void @__asan_load4_noabort(i32 %88)
  %cb.0.i215 = load ptr, ptr %cb.020.i210, align 4
  %cmp.not.i216 = icmp eq ptr %cb.0.i215, @hci_cb_list
  br i1 %cmp.not.i216, label %for.inc.i217.for.end.i220_crit_edge, label %for.inc.i217.for.body.i213_crit_edge

for.inc.i217.for.body.i213_crit_edge:             ; preds = %for.inc.i217
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i213

for.inc.i217.for.end.i220_crit_edge:              ; preds = %for.inc.i217
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i220

for.end.i220:                                     ; preds = %for.inc.i217.for.end.i220_crit_edge, %sw.epilog.for.end.i220_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i218 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 71
  %89 = ptrtoint ptr %connect_cfm_cb.i218 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %connect_cfm_cb.i218, align 8
  %tobool6.not.i219 = icmp eq ptr %90, null
  br i1 %tobool6.not.i219, label %for.end.i220.unlock_crit_edge, label %if.then7.i221

for.end.i220.unlock_crit_edge:                    ; preds = %for.end.i220
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then7.i221:                                    ; preds = %for.end.i220
  call void @__sanitizer_cov_trace_pc() #11
  call void %90(ptr noundef %conn.0, i8 noundef zeroext %85) #9
  br label %unlock

unlock:                                           ; preds = %if.then7.i221, %for.end.i220.unlock_crit_edge, %if.else118.unlock_crit_edge, %hci_connect_cfm.exit, %if.end27.unlock_crit_edge, %if.else.unlock_crit_edge, %if.then18
  call void @mutex_unlock(ptr noundef %lock) #9
  call void @hci_conn_check_pending(ptr noundef %hdev) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_conn_request_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp.i162 = alloca %struct.hci_cp_reject_conn_req, align 1
  %cp.i160 = alloca %struct.hci_cp_reject_conn_req, align 1
  %cp.i = alloca %struct.hci_cp_reject_conn_req, align 1
  %flags = alloca i8, align 1
  %cp = alloca %struct.hci_cp_accept_conn_req, align 1
  %cp93 = alloca %struct.hci_cp_accept_sync_conn_req, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %link_mode = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 101
  %0 = ptrtoint ptr %link_mode to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %link_mode, align 2
  %conv = zext i16 %1 to i32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %flags) #9
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %flags, align 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_request_evt.__UNIQUE_ID_ddebug597, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_conn_request_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %link_type = getelementptr inbounds %struct.hci_ev_conn_request, ptr %data, i32 0, i32 2
  %3 = ptrtoint ptr %link_type to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %link_type, align 1
  %conv3 = zext i8 %4 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_request_evt.__UNIQUE_ID_ddebug597, ptr noundef nonnull @.str.22, ptr noundef %name, ptr noundef %data, i32 noundef %conv3) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %link_type5 = getelementptr inbounds %struct.hci_ev_conn_request, ptr %data, i32 0, i32 2
  %5 = ptrtoint ptr %link_type5 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %link_type5, align 1
  %7 = zext i8 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.249)
  switch i8 %6, label %sw.default.i [
    i8 1, label %sw.bb.i
    i8 0, label %do.end.sw.bb1.i_crit_edge
    i8 2, label %do.end.sw.bb1.i_crit_edge165
  ]

do.end.sw.bb1.i_crit_edge165:                     ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb1.i

do.end.sw.bb1.i_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb1.i

sw.bb.i:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %call.i = tail call i32 @l2cap_connect_ind(ptr noundef %hdev, ptr noundef %data) #9
  br label %hci_proto_connect_ind.exit

sw.bb1.i:                                         ; preds = %do.end.sw.bb1.i_crit_edge, %do.end.sw.bb1.i_crit_edge165
  %call2.i = call i32 @sco_connect_ind(ptr noundef %hdev, ptr noundef %data, ptr noundef nonnull %flags) #9
  br label %hci_proto_connect_ind.exit

sw.default.i:                                     ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %conv.i = zext i8 %6 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.24, i32 noundef %conv.i) #9
  br label %hci_proto_connect_ind.exit

hci_proto_connect_ind.exit:                       ; preds = %sw.default.i, %sw.bb1.i, %sw.bb.i
  %retval.0.i158 = phi i32 [ -22, %sw.default.i ], [ %call2.i, %sw.bb1.i ], [ %call.i, %sw.bb.i ]
  %or = or i32 %retval.0.i158, %conv
  %and = and i32 %or, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.then8, label %if.end10

if.then8:                                         ; preds = %hci_proto_connect_ind.exit
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %cp.i) #9
  %8 = getelementptr inbounds %struct.hci_cp_reject_conn_req, ptr %cp.i, i32 0, i32 1
  %9 = call ptr @memcpy(ptr %cp.i, ptr %data, i32 6)
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 15, ptr %8, align 1
  %call.i159 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1034, i32 noundef 7, ptr noundef nonnull %cp.i) #9
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %cp.i) #9
  br label %cleanup

if.end10:                                         ; preds = %hci_proto_connect_ind.exit
  %reject_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 185
  %call12 = call ptr @hci_bdaddr_list_lookup(ptr noundef %reject_list, ptr noundef %data, i8 noundef zeroext 0) #9
  %tobool13.not = icmp eq ptr %call12, null
  br i1 %tobool13.not, label %if.end16, label %if.then14

if.then14:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %cp.i160) #9
  %11 = getelementptr inbounds %struct.hci_cp_reject_conn_req, ptr %cp.i160, i32 0, i32 1
  %12 = call ptr @memcpy(ptr %cp.i160, ptr %data, i32 6)
  %13 = ptrtoint ptr %11 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 15, ptr %11, align 1
  %call.i161 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1034, i32 noundef 7, ptr noundef nonnull %cp.i160) #9
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %cp.i160) #9
  br label %cleanup

if.end16:                                         ; preds = %if.end10
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %14 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %dev_flags, align 4
  %16 = and i32 %15, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool19.not = icmp eq i32 %16, 0
  br i1 %tobool19.not, label %if.end16.if.end30_crit_edge, label %land.lhs.true

if.end16.if.end30_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end30

land.lhs.true:                                    ; preds = %if.end16
  %17 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %dev_flags, align 4
  %19 = and i32 %18, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool23.not = icmp eq i32 %19, 0
  br i1 %tobool23.not, label %land.lhs.true24, label %land.lhs.true.if.end30_crit_edge

land.lhs.true.if.end30_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end30

land.lhs.true24:                                  ; preds = %land.lhs.true
  %accept_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 186
  %call26 = call ptr @hci_bdaddr_list_lookup_with_flags(ptr noundef %accept_list, ptr noundef %data, i8 noundef zeroext 0) #9
  %tobool27.not = icmp eq ptr %call26, null
  br i1 %tobool27.not, label %if.then28, label %land.lhs.true24.if.end30_crit_edge

land.lhs.true24.if.end30_crit_edge:               ; preds = %land.lhs.true24
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end30

if.then28:                                        ; preds = %land.lhs.true24
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %cp.i162) #9
  %20 = getelementptr inbounds %struct.hci_cp_reject_conn_req, ptr %cp.i162, i32 0, i32 1
  %21 = call ptr @memcpy(ptr %cp.i162, ptr %data, i32 6)
  %22 = ptrtoint ptr %20 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 15, ptr %20, align 1
  %call.i163 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1034, i32 noundef 7, ptr noundef nonnull %cp.i162) #9
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %cp.i162) #9
  br label %cleanup

if.end30:                                         ; preds = %land.lhs.true24.if.end30_crit_edge, %land.lhs.true.if.end30_crit_edge, %if.end16.if.end30_crit_edge
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call32 = call ptr @hci_inquiry_cache_lookup(ptr noundef %hdev, ptr noundef %data) #9
  %tobool33.not = icmp eq ptr %call32, null
  br i1 %tobool33.not, label %if.end30.if.end39_crit_edge, label %if.then34

if.end30.if.end39_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end39

if.then34:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #11
  %dev_class = getelementptr inbounds %struct.inquiry_entry, ptr %call32, i32 0, i32 4, i32 4
  %dev_class37 = getelementptr inbounds %struct.hci_ev_conn_request, ptr %data, i32 0, i32 1
  %23 = call ptr @memcpy(ptr %dev_class, ptr %dev_class37, i32 3)
  br label %if.end39

if.end39:                                         ; preds = %if.then34, %if.end30.if.end39_crit_edge
  %24 = ptrtoint ptr %link_type5 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %link_type5, align 1
  %call42 = call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext %25, ptr noundef %data)
  %tobool43.not = icmp eq ptr %call42, null
  br i1 %tobool43.not, label %if.then44, label %if.end39.if.end55_crit_edge

if.end39.if.end55_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end55

if.then44:                                        ; preds = %if.end39
  %26 = ptrtoint ptr %link_type5 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %link_type5, align 1
  %conv46 = zext i8 %27 to i32
  %call48 = call ptr @hci_conn_add(ptr noundef %hdev, i32 noundef %conv46, ptr noundef %data, i8 noundef zeroext 1) #9
  %tobool49.not = icmp eq ptr %call48, null
  br i1 %tobool49.not, label %if.then50, label %if.then44.if.end55_crit_edge

if.then44.if.end55_crit_edge:                     ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end55

if.then50:                                        ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #11
  %name51 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.23, ptr noundef %name51) #9
  call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

if.end55:                                         ; preds = %if.then44.if.end55_crit_edge, %if.end39.if.end55_crit_edge
  %conn.0 = phi ptr [ %call42, %if.end39.if.end55_crit_edge ], [ %call48, %if.then44.if.end55_crit_edge ]
  %dev_class56 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 18
  %dev_class58 = getelementptr inbounds %struct.hci_ev_conn_request, ptr %data, i32 0, i32 1
  %28 = call ptr @memcpy(ptr %dev_class56, ptr %dev_class58, i32 3)
  call void @mutex_unlock(ptr noundef %lock) #9
  %29 = ptrtoint ptr %link_type5 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %link_type5, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %30)
  %cmp = icmp eq i8 %30, 1
  br i1 %cmp, label %if.end55.if.then72_crit_edge, label %lor.lhs.false

if.end55.if.then72_crit_edge:                     ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then72

lor.lhs.false:                                    ; preds = %if.end55
  %31 = ptrtoint ptr %flags to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %flags, align 1
  %33 = and i8 %32, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool66.not = icmp eq i8 %33, 0
  br i1 %tobool66.not, label %land.lhs.true67, label %if.else99

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %arrayidx68 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 0, i32 3
  %34 = ptrtoint ptr %arrayidx68 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %arrayidx68, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %35)
  %tobool71.not = icmp sgt i8 %35, -1
  br i1 %tobool71.not, label %land.lhs.true67.if.then72_crit_edge, label %if.then92

land.lhs.true67.if.then72_crit_edge:              ; preds = %land.lhs.true67
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then72

if.then72:                                        ; preds = %land.lhs.true67.if.then72_crit_edge, %if.end55.if.then72_crit_edge
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %cp) #9
  %36 = getelementptr inbounds %struct.hci_cp_accept_conn_req, ptr %cp, i32 0, i32 1
  %state = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 12
  %37 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 5, ptr %state, align 4
  %38 = call ptr @memcpy(ptr %cp, ptr %data, i32 6)
  %features75 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 21
  %39 = ptrtoint ptr %features75 to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %features75, align 2
  %41 = and i8 %40, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool80.not = icmp eq i8 %41, 0
  %and82 = and i32 %or, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and82)
  %tobool83.not = icmp eq i32 %and82, 0
  %or.cond = select i1 %tobool80.not, i1 true, i1 %tobool83.not
  %storemerge = zext i1 %or.cond to i8
  %42 = ptrtoint ptr %36 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %storemerge, ptr %36, align 1
  %call87 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1033, i32 noundef 7, ptr noundef nonnull %cp) #9
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %cp) #9
  br label %cleanup

if.then92:                                        ; preds = %land.lhs.true67
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 21, ptr nonnull %cp93) #9
  %43 = getelementptr inbounds %struct.hci_cp_accept_sync_conn_req, ptr %cp93, i32 0, i32 1
  %44 = getelementptr inbounds %struct.hci_cp_accept_sync_conn_req, ptr %cp93, i32 0, i32 2
  %45 = getelementptr inbounds %struct.hci_cp_accept_sync_conn_req, ptr %cp93, i32 0, i32 3
  %46 = getelementptr inbounds %struct.hci_cp_accept_sync_conn_req, ptr %cp93, i32 0, i32 4
  %47 = getelementptr inbounds %struct.hci_cp_accept_sync_conn_req, ptr %cp93, i32 0, i32 5
  %48 = getelementptr inbounds %struct.hci_cp_accept_sync_conn_req, ptr %cp93, i32 0, i32 6
  %state94 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 12
  %49 = ptrtoint ptr %state94 to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 5, ptr %state94, align 4
  %50 = call ptr @memcpy(ptr %cp93, ptr %data, i32 6)
  %pkt_type = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 20
  %51 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %pkt_type, align 2
  %53 = call i16 @llvm.bswap.i16(i16 %52)
  %54 = ptrtoint ptr %48 to i32
  call void @__asan_storeN_noabort(i32 %54, i32 2)
  store i16 %53, ptr %48, align 1
  %55 = ptrtoint ptr %43 to i32
  call void @__asan_storeN_noabort(i32 %55, i32 4)
  store i32 1075773440, ptr %43, align 1
  %56 = ptrtoint ptr %44 to i32
  call void @__asan_storeN_noabort(i32 %56, i32 4)
  store i32 1075773440, ptr %44, align 1
  %57 = ptrtoint ptr %45 to i32
  call void @__asan_storeN_noabort(i32 %57, i32 2)
  store i16 -1, ptr %45, align 1
  %voice_setting = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 33
  %58 = ptrtoint ptr %voice_setting to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %voice_setting, align 2
  %60 = call i16 @llvm.bswap.i16(i16 %59)
  %61 = ptrtoint ptr %46 to i32
  call void @__asan_storeN_noabort(i32 %61, i32 2)
  store i16 %60, ptr %46, align 1
  %62 = ptrtoint ptr %47 to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 -1, ptr %47, align 1
  %call98 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1065, i32 noundef 21, ptr noundef nonnull %cp93) #9
  call void @llvm.lifetime.end.p0(i64 21, ptr nonnull %cp93) #9
  br label %cleanup

if.else99:                                        ; preds = %lor.lhs.false
  %state100 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 12
  %63 = ptrtoint ptr %state100 to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 6, ptr %state100, align 4
  call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.else99.for.end.i_crit_edge, label %if.else99.for.body.i_crit_edge

if.else99.for.body.i_crit_edge:                   ; preds = %if.else99
  br label %for.body.i

if.else99.for.end.i_crit_edge:                    ; preds = %if.else99
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.else99.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.else99.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %64 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %65, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %65(ptr noundef %conn.0, i8 noundef zeroext 0) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %66 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.else99.for.end.i_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 71
  %67 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %68, null
  br i1 %tobool6.not.i, label %for.end.i.cleanup_crit_edge, label %if.then7.i

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %68(ptr noundef %conn.0, i8 noundef zeroext 0) #9
  br label %cleanup

cleanup:                                          ; preds = %if.then7.i, %for.end.i.cleanup_crit_edge, %if.then92, %if.then72, %if.then50, %if.then28, %if.then14, %if.then8
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %flags) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_disconn_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_disconn_complete_evt.__UNIQUE_ID_ddebug598, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_disconn_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_disconn_complete_evt.__UNIQUE_ID_ddebug598, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_disconn_complete, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool8.not = icmp eq i8 %6, 0
  br i1 %tobool8.not, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 2
  %type = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 14
  %7 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %type, align 1
  %dst_type = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %dst_type to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %dst_type, align 2
  tail call void @mgmt_disconnect_failed(ptr noundef %hdev, ptr noundef %dst, i8 noundef zeroext %8, i8 noundef zeroext %10, i8 noundef zeroext %6) #9
  br label %unlock

if.end11:                                         ; preds = %if.end6
  %state = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 12
  %11 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 9, ptr %state, align 4
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %call12 = tail call i32 @_test_and_clear_bit(i32 noundef 6, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13 = icmp ne i32 %call12, 0
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %flags, align 4
  %14 = and i32 %13, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool17.not = icmp eq i32 %14, 0
  br i1 %tobool17.not, label %if.else, label %if.end11.if.end21_crit_edge

if.end11.if.end21_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end21

if.else:                                          ; preds = %if.end11
  %reason19 = getelementptr inbounds %struct.hci_ev_disconn_complete, ptr %data, i32 0, i32 2
  %15 = ptrtoint ptr %reason19 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %reason19, align 1
  %17 = zext i8 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.250)
  switch i8 %16, label %sw.default.i [
    i8 8, label %if.else.if.end21_crit_edge
    i8 19, label %if.else.sw.bb1.i_crit_edge
    i8 20, label %if.else.sw.bb1.i_crit_edge113
    i8 21, label %if.else.sw.bb1.i_crit_edge114
    i8 22, label %sw.bb2.i
  ]

if.else.sw.bb1.i_crit_edge114:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb1.i

if.else.sw.bb1.i_crit_edge113:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb1.i

if.else.sw.bb1.i_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb1.i

if.else.if.end21_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end21

sw.bb1.i:                                         ; preds = %if.else.sw.bb1.i_crit_edge, %if.else.sw.bb1.i_crit_edge113, %if.else.sw.bb1.i_crit_edge114
  br label %if.end21

sw.bb2.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end21

sw.default.i:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end21

if.end21:                                         ; preds = %sw.default.i, %sw.bb2.i, %sw.bb1.i, %if.else.if.end21_crit_edge, %if.end11.if.end21_crit_edge
  %reason.0 = phi i8 [ 4, %if.end11.if.end21_crit_edge ], [ 0, %sw.default.i ], [ 2, %sw.bb2.i ], [ 3, %sw.bb1.i ], [ 1, %if.else.if.end21_crit_edge ]
  %dst22 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 2
  %type23 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 14
  %18 = ptrtoint ptr %type23 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %type23, align 1
  %dst_type24 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 3
  %20 = ptrtoint ptr %dst_type24 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %dst_type24, align 2
  tail call void @mgmt_device_disconnected(ptr noundef %hdev, ptr noundef %dst22, i8 noundef zeroext %19, i8 noundef zeroext %21, i8 noundef zeroext %reason.0, i1 noundef zeroext %tobool13) #9
  %22 = ptrtoint ptr %type23 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %type23, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %23)
  %cmp = icmp eq i8 %23, 1
  br i1 %cmp, label %if.then29, label %if.end21.if.end37_crit_edge

if.end21.if.end37_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37

if.then29:                                        ; preds = %if.end21
  %24 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %flags, align 4
  %26 = and i32 %25, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool32.not = icmp eq i32 %26, 0
  br i1 %tobool32.not, label %if.then29.if.end36_crit_edge, label %if.then33

if.then29.if.end36_crit_edge:                     ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end36

if.then33:                                        ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #11
  %call35 = tail call i32 @hci_remove_link_key(ptr noundef %hdev, ptr noundef %dst22) #9
  br label %if.end36

if.end36:                                         ; preds = %if.then33, %if.then29.if.end36_crit_edge
  %req_workqueue.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 139
  %27 = ptrtoint ptr %req_workqueue.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %req_workqueue.i, align 8
  %scan_update.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 156
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %28, ptr noundef %scan_update.i) #9
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end21.if.end37_crit_edge
  %29 = ptrtoint ptr %dst_type24 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %dst_type24, align 2
  %call40 = tail call ptr @hci_conn_params_lookup(ptr noundef %hdev, ptr noundef %dst22, i8 noundef zeroext %30) #9
  %tobool41.not = icmp eq ptr %call40, null
  br i1 %tobool41.not, label %if.end37.if.end52_crit_edge, label %if.then42

if.end37.if.end52_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end52

if.then42:                                        ; preds = %if.end37
  %auto_connect = getelementptr inbounds %struct.hci_conn_params, ptr %call40, i32 0, i32 8
  %31 = ptrtoint ptr %auto_connect to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %auto_connect, align 4
  %33 = zext i32 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.251)
  switch i32 %32, label %if.then42.if.end52_crit_edge [
    i32 4, label %sw.bb
    i32 2, label %if.then42.sw.bb49_crit_edge
    i32 3, label %if.then42.sw.bb49_crit_edge115
  ]

if.then42.sw.bb49_crit_edge115:                   ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb49

if.then42.sw.bb49_crit_edge:                      ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb49

if.then42.if.end52_crit_edge:                     ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end52

sw.bb:                                            ; preds = %if.then42
  %reason43 = getelementptr inbounds %struct.hci_ev_disconn_complete, ptr %data, i32 0, i32 2
  %34 = ptrtoint ptr %reason43 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %reason43, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %35)
  %cmp45.not = icmp eq i8 %35, 8
  br i1 %cmp45.not, label %sw.bb.sw.bb49_crit_edge, label %sw.bb.if.end52_crit_edge

sw.bb.if.end52_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end52

sw.bb.sw.bb49_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb49

sw.bb49:                                          ; preds = %sw.bb.sw.bb49_crit_edge, %if.then42.sw.bb49_crit_edge, %if.then42.sw.bb49_crit_edge115
  %action = getelementptr inbounds %struct.hci_conn_params, ptr %call40, i32 0, i32 1
  %call.i.i109 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %action) #9
  br i1 %call.i.i109, label %if.end.i.i, label %sw.bb49.list_del_init.exit_crit_edge

sw.bb49.list_del_init.exit_crit_edge:             ; preds = %sw.bb49
  call void @__sanitizer_cov_trace_pc() #11
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %sw.bb49
  call void @__sanitizer_cov_trace_pc() #11
  %prev.i.i = getelementptr inbounds %struct.hci_conn_params, ptr %call40, i32 0, i32 1, i32 1
  %36 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prev.i.i, align 4
  %38 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %action, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %37, ptr %prev1.i.i.i, align 4
  %41 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %39, ptr %37, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %sw.bb49.list_del_init.exit_crit_edge
  %42 = ptrtoint ptr %action to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %action, ptr %action, align 4
  %prev.i3.i = getelementptr inbounds %struct.hci_conn_params, ptr %call40, i32 0, i32 1, i32 1
  %43 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %action, ptr %prev.i3.i, align 4
  %pend_le_conns = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 195
  %44 = ptrtoint ptr %pend_le_conns to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %pend_le_conns, align 4
  %call.i.i110 = tail call zeroext i1 @__list_add_valid(ptr noundef %action, ptr noundef %pend_le_conns, ptr noundef %45) #9
  br i1 %call.i.i110, label %if.end.i.i111, label %list_del_init.exit.list_add.exit_crit_edge

list_del_init.exit.list_add.exit_crit_edge:       ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %list_add.exit

if.end.i.i111:                                    ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #11
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %action, ptr %prev1.i.i, align 4
  %47 = ptrtoint ptr %action to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %45, ptr %action, align 4
  %48 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %pend_le_conns, ptr %prev.i3.i, align 4
  %49 = ptrtoint ptr %pend_le_conns to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %action, ptr %pend_le_conns, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i111, %list_del_init.exit.list_add.exit_crit_edge
  %call51 = tail call i32 @hci_update_passive_scan(ptr noundef %hdev) #9
  br label %if.end52

if.end52:                                         ; preds = %list_add.exit, %sw.bb.if.end52_crit_edge, %if.then42.if.end52_crit_edge, %if.end37.if.end52_crit_edge
  %reason53 = getelementptr inbounds %struct.hci_ev_disconn_complete, ptr %data, i32 0, i32 2
  %50 = ptrtoint ptr %reason53 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %reason53, align 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.end52.for.end.i_crit_edge, label %if.end52.for.body.i_crit_edge

if.end52.for.body.i_crit_edge:                    ; preds = %if.end52
  br label %for.body.i

if.end52.for.end.i_crit_edge:                     ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end52.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.end52.for.body.i_crit_edge ]
  %disconn_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 3
  %52 = ptrtoint ptr %disconn_cfm.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %disconn_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %53, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %53(ptr noundef nonnull %call3, i8 noundef zeroext %51) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %54 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end52.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %disconn_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 73
  %55 = ptrtoint ptr %disconn_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %disconn_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %56, null
  br i1 %tobool6.not.i, label %for.end.i.hci_disconn_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_disconn_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_disconn_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %56(ptr noundef nonnull %call3, i8 noundef zeroext %51) #9
  br label %hci_disconn_cfm.exit

hci_disconn_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_disconn_cfm.exit_crit_edge
  %57 = ptrtoint ptr %type23 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %type23, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %58)
  %cmp56 = icmp eq i8 %58, -128
  br i1 %cmp56, label %land.lhs.true, label %hci_disconn_cfm.exit.if.end63_crit_edge

hci_disconn_cfm.exit.if.end63_crit_edge:          ; preds = %hci_disconn_cfm.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end63

land.lhs.true:                                    ; preds = %hci_disconn_cfm.exit
  %role = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 15
  %59 = ptrtoint ptr %role to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %role, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %60)
  %cmp59 = icmp eq i8 %60, 1
  br i1 %cmp59, label %if.then61, label %land.lhs.true.if.end63_crit_edge

land.lhs.true.if.end63_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end63

if.then61:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %adv_instance = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 10
  %61 = ptrtoint ptr %adv_instance to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %adv_instance, align 8
  %cur_adv_instance = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 215
  %63 = ptrtoint ptr %cur_adv_instance to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 %62, ptr %cur_adv_instance, align 8
  %call62 = tail call i32 @hci_enable_advertising(ptr noundef %hdev) #9
  br label %if.end63

if.end63:                                         ; preds = %if.then61, %land.lhs.true.if.end63_crit_edge, %hci_disconn_cfm.exit.if.end63_crit_edge
  %call64 = tail call i32 @hci_conn_del(ptr noundef nonnull %call3) #9
  br label %unlock

unlock:                                           ; preds = %if.end63, %if.then9, %do.end.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_auth_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_set_conn_encrypt, align 2
  %cp59 = alloca %struct.hci_cp_set_conn_encrypt, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_auth_complete_evt.__UNIQUE_ID_ddebug599, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_auth_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_auth_complete_evt.__UNIQUE_ID_ddebug599, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_auth_complete, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  %7 = zext i8 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.252)
  switch i8 %6, label %if.end6.if.end25_crit_edge [
    i8 0, label %if.then9
    i8 6, label %if.then23
  ]

if.end6.if.end25_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

if.then9:                                         ; preds = %if.end6
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 22, ptr noundef %flags) #9
  %hdev1.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 65
  %8 = ptrtoint ptr %hdev1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hdev1.i, align 4
  %dev_flags.i = getelementptr inbounds %struct.hci_dev, ptr %9, i32 0, i32 206
  %10 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %dev_flags.i, align 4
  %12 = and i32 %11, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i, label %if.then9.land.lhs.true_crit_edge, label %hci_conn_ssp_enabled.exit

if.then9.land.lhs.true_crit_edge:                 ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true

hci_conn_ssp_enabled.exit:                        ; preds = %if.then9
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %flags, align 4
  %15 = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool3.i.not = icmp eq i32 %15, 0
  br i1 %tobool3.i.not, label %hci_conn_ssp_enabled.exit.land.lhs.true_crit_edge, label %hci_conn_ssp_enabled.exit.if.else_crit_edge

hci_conn_ssp_enabled.exit.if.else_crit_edge:      ; preds = %hci_conn_ssp_enabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

hci_conn_ssp_enabled.exit.land.lhs.true_crit_edge: ; preds = %hci_conn_ssp_enabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %hci_conn_ssp_enabled.exit.land.lhs.true_crit_edge, %if.then9.land.lhs.true_crit_edge
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %flags, align 4
  %18 = and i32 %17, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool13.not = icmp eq i32 %18, 0
  br i1 %tobool13.not, label %land.lhs.true.if.else_crit_edge, label %if.then14

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

if.then14:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %name15 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_info(ptr noundef nonnull @.str.27, ptr noundef %name15) #9
  br label %if.end27

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %hci_conn_ssp_enabled.exit.if.else_crit_edge
  tail call void @_set_bit(i32 noundef 13, ptr noundef %flags) #9
  %pending_sec_level = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %19 = ptrtoint ptr %pending_sec_level to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %pending_sec_level, align 1
  %sec_level = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 24
  %21 = ptrtoint ptr %sec_level to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %20, ptr %sec_level, align 4
  br label %if.end27

if.then23:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %flags24 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  tail call void @_set_bit(i32 noundef 22, ptr noundef %flags24) #9
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.end6.if.end25_crit_edge
  %22 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %data, align 1
  tail call void @mgmt_auth_failed(ptr noundef nonnull %call3, i8 noundef zeroext %23) #9
  br label %if.end27

if.end27:                                         ; preds = %if.end25, %if.else, %if.then14
  %flags28 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %flags28) #9
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %flags28) #9
  %state = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 12
  %24 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %25)
  %cmp31 = icmp eq i16 %25, 7
  %26 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %data, align 1
  br i1 %cmp31, label %if.then33, label %if.else47

if.then33:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool35.not = icmp eq i8 %27, 0
  br i1 %tobool35.not, label %land.lhs.true36, label %if.then33.if.else43_crit_edge

if.then33.if.else43_crit_edge:                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else43

land.lhs.true36:                                  ; preds = %if.then33
  %hdev1.i112 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 65
  %28 = ptrtoint ptr %hdev1.i112 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hdev1.i112, align 4
  %dev_flags.i113 = getelementptr inbounds %struct.hci_dev, ptr %29, i32 0, i32 206
  %30 = ptrtoint ptr %dev_flags.i113 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %dev_flags.i113, align 4
  %32 = and i32 %31, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i114 = icmp eq i32 %32, 0
  br i1 %tobool.not.i114, label %land.lhs.true36.if.else43_crit_edge, label %hci_conn_ssp_enabled.exit118

land.lhs.true36.if.else43_crit_edge:              ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else43

hci_conn_ssp_enabled.exit118:                     ; preds = %land.lhs.true36
  %33 = ptrtoint ptr %flags28 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %flags28, align 4
  %35 = and i32 %34, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool3.i116.not = icmp eq i32 %35, 0
  br i1 %tobool3.i116.not, label %hci_conn_ssp_enabled.exit118.if.else43_crit_edge, label %if.then39

hci_conn_ssp_enabled.exit118.if.else43_crit_edge: ; preds = %hci_conn_ssp_enabled.exit118
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else43

if.then39:                                        ; preds = %hci_conn_ssp_enabled.exit118
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %cp) #9
  %36 = getelementptr inbounds %struct.hci_cp_set_conn_encrypt, ptr %cp, i32 0, i32 1
  %37 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %37, i32 2)
  %38 = load i16, ptr %handle, align 1
  %39 = ptrtoint ptr %cp to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %38, ptr %cp, align 2
  %40 = ptrtoint ptr %36 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 1, ptr %36, align 2
  %call42 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1043, i32 noundef 3, ptr noundef nonnull %cp) #9
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %cp) #9
  br label %if.end51

if.else43:                                        ; preds = %hci_conn_ssp_enabled.exit118.if.else43_crit_edge, %land.lhs.true36.if.else43_crit_edge, %if.then33.if.else43_crit_edge
  %41 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 1, ptr %state, align 4
  %42 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %data, align 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.else43.for.end.i_crit_edge, label %if.else43.for.body.i_crit_edge

if.else43.for.body.i_crit_edge:                   ; preds = %if.else43
  br label %for.body.i

if.else43.for.end.i_crit_edge:                    ; preds = %if.else43
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.else43.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.else43.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %44 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i119 = icmp eq ptr %45, null
  br i1 %tobool.not.i119, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %45(ptr noundef %call3, i8 noundef zeroext %43) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %46 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.else43.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 71
  %47 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %48, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %48(ptr noundef %call3, i8 noundef zeroext %43) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call3)
  br label %if.end51

if.else47:                                        ; preds = %if.end27
  %49 = ptrtoint ptr %flags28 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %flags28, align 4
  %51 = and i32 %50, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.not.i121 = icmp eq i32 %51, 0
  br i1 %tobool.not.i121, label %if.end.i, label %if.else47.hci_auth_cfm.exit_crit_edge

if.else47.hci_auth_cfm.exit_crit_edge:            ; preds = %if.else47
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_auth_cfm.exit

if.end.i:                                         ; preds = %if.else47
  %52 = ptrtoint ptr %flags28 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %flags28, align 4
  %54 = lshr i32 %53, 12
  %55 = trunc i32 %54 to i8
  %56 = and i8 %55, 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.030.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not31.i = icmp eq ptr %cb.030.i, @hci_cb_list
  br i1 %cmp.not31.i, label %if.end.i.for.end.i126_crit_edge, label %if.end.i.for.body.i122_crit_edge

if.end.i.for.body.i122_crit_edge:                 ; preds = %if.end.i
  br label %for.body.i122

if.end.i.for.end.i126_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i126

for.body.i122:                                    ; preds = %for.inc.i125.for.body.i122_crit_edge, %if.end.i.for.body.i122_crit_edge
  %cb.032.i = phi ptr [ %cb.0.i123, %for.inc.i125.for.body.i122_crit_edge ], [ %cb.030.i, %if.end.i.for.body.i122_crit_edge ]
  %security_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.032.i, i32 0, i32 4
  %57 = ptrtoint ptr %security_cfm.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %security_cfm.i, align 4
  %tobool5.not.i = icmp eq ptr %58, null
  br i1 %tobool5.not.i, label %for.body.i122.for.inc.i125_crit_edge, label %if.then6.i

for.body.i122.for.inc.i125_crit_edge:             ; preds = %for.body.i122
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i125

if.then6.i:                                       ; preds = %for.body.i122
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %58(ptr noundef %call3, i8 noundef zeroext %27, i8 noundef zeroext %56) #9
  br label %for.inc.i125

for.inc.i125:                                     ; preds = %if.then6.i, %for.body.i122.for.inc.i125_crit_edge
  %59 = ptrtoint ptr %cb.032.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %cb.0.i123 = load ptr, ptr %cb.032.i, align 4
  %cmp.not.i124 = icmp eq ptr %cb.0.i123, @hci_cb_list
  br i1 %cmp.not.i124, label %for.inc.i125.for.end.i126_crit_edge, label %for.inc.i125.for.body.i122_crit_edge

for.inc.i125.for.body.i122_crit_edge:             ; preds = %for.inc.i125
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i122

for.inc.i125.for.end.i126_crit_edge:              ; preds = %for.inc.i125
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i126

for.end.i126:                                     ; preds = %for.inc.i125.for.end.i126_crit_edge, %if.end.i.for.end.i126_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %security_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 72
  %60 = ptrtoint ptr %security_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %security_cfm_cb.i, align 4
  %tobool13.not.i = icmp eq ptr %61, null
  br i1 %tobool13.not.i, label %for.end.i126.hci_auth_cfm.exit_crit_edge, label %if.then14.i

for.end.i126.hci_auth_cfm.exit_crit_edge:         ; preds = %for.end.i126
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_auth_cfm.exit

if.then14.i:                                      ; preds = %for.end.i126
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %61(ptr noundef %call3, i8 noundef zeroext %27) #9
  br label %hci_auth_cfm.exit

hci_auth_cfm.exit:                                ; preds = %if.then14.i, %for.end.i126.hci_auth_cfm.exit_crit_edge, %if.else47.hci_auth_cfm.exit_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_auth_complete_evt, %if.then.i127)) #9
          to label %hci_conn_hold.exit [label %if.then.i127], !srcloc !680

if.then.i127:                                     ; preds = %hci_auth_cfm.exit
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #9
  %62 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %refcnt.i, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_hold.__UNIQUE_ID_ddebug471, ptr noundef nonnull @.str.20, ptr noundef %call3, i32 noundef %63) #9
  br label %hci_conn_hold.exit

hci_conn_hold.exit:                               ; preds = %if.then.i127, %hci_auth_cfm.exit
  %refcnt4.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 1
  %call.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #9
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #9
  %64 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #9, !srcloc !682
  %disc_work.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 58
  %call5.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work.i) #9
  %disc_timeout = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 31
  %65 = ptrtoint ptr %disc_timeout to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 200, ptr %disc_timeout, align 2
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call3)
  br label %if.end51

if.end51:                                         ; preds = %hci_conn_hold.exit, %hci_connect_cfm.exit, %if.then39
  %66 = ptrtoint ptr %flags28 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %flags28, align 4
  %68 = and i32 %67, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool54.not = icmp eq i32 %68, 0
  br i1 %tobool54.not, label %if.end51.unlock_crit_edge, label %if.then55

if.end51.unlock_crit_edge:                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then55:                                        ; preds = %if.end51
  %69 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool57.not = icmp eq i8 %70, 0
  br i1 %tobool57.not, label %if.then58, label %if.else64

if.then58:                                        ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %cp59) #9
  %71 = getelementptr inbounds %struct.hci_cp_set_conn_encrypt, ptr %cp59, i32 0, i32 1
  %72 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %72, i32 2)
  %73 = load i16, ptr %handle, align 1
  %74 = ptrtoint ptr %cp59 to i32
  call void @__asan_store2_noabort(i32 %74)
  store i16 %73, ptr %cp59, align 2
  %75 = ptrtoint ptr %71 to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 1, ptr %71, align 2
  %call63 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1043, i32 noundef 3, ptr noundef nonnull %cp59) #9
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %cp59) #9
  br label %unlock

if.else64:                                        ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #11
  call void @_clear_bit(i32 noundef 2, ptr noundef %flags28) #9
  %76 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %data, align 1
  call fastcc void @hci_encrypt_cfm(ptr noundef nonnull %call3, i8 noundef zeroext %77)
  br label %unlock

unlock:                                           ; preds = %if.else64, %if.then58, %if.end51.unlock_crit_edge, %do.end.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_remote_name_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_auth_requested, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_remote_name_evt.__UNIQUE_ID_ddebug600, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_remote_name_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_remote_name_evt.__UNIQUE_ID_ddebug600, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  tail call void @hci_conn_check_pending(ptr noundef %hdev) #9
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %bdaddr = getelementptr inbounds %struct.hci_ev_remote_name, ptr %data, i32 0, i32 1
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %bdaddr)
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool6.not = icmp eq i32 %4, 0
  br i1 %tobool6.not, label %do.end.check_auth_crit_edge, label %if.end8

do.end.check_auth_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %check_auth

if.end8:                                          ; preds = %do.end
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %cmp = icmp eq i8 %6, 0
  br i1 %cmp, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  %name14 = getelementptr inbounds %struct.hci_ev_remote_name, ptr %data, i32 0, i32 2
  %call18 = tail call i32 @strnlen(ptr noundef %name14, i32 noundef 248) #12
  %conv19 = trunc i32 %call18 to i8
  tail call fastcc void @hci_check_pending_name(ptr noundef %hdev, ptr noundef %call3, ptr noundef %bdaddr, ptr noundef %name14, i8 noundef zeroext %conv19)
  br label %check_auth

if.else:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  tail call fastcc void @hci_check_pending_name(ptr noundef %hdev, ptr noundef %call3, ptr noundef %bdaddr, ptr noundef null, i8 noundef zeroext 0)
  br label %check_auth

check_auth:                                       ; preds = %if.else, %if.then12, %do.end.check_auth_crit_edge
  %tobool22.not = icmp eq ptr %call3, null
  br i1 %tobool22.not, label %check_auth.unlock_crit_edge, label %if.end24

check_auth.unlock_crit_edge:                      ; preds = %check_auth
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end24:                                         ; preds = %check_auth
  %state.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 12
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %8)
  %cmp.not.i = icmp eq i16 %8, 7
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %if.end24.unlock_crit_edge

if.end24.unlock_crit_edge:                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

lor.lhs.false.i:                                  ; preds = %if.end24
  %out.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 16
  %9 = ptrtoint ptr %out.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %out.i, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not.i = icmp eq i8 %10, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i.unlock_crit_edge, label %if.end.i

lor.lhs.false.i.unlock_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end.i:                                         ; preds = %lor.lhs.false.i
  %pending_sec_level.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %11 = ptrtoint ptr %pending_sec_level.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %pending_sec_level.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp3.i = icmp eq i8 %12, 0
  br i1 %cmp3.i, label %if.end.i.unlock_crit_edge, label %if.end6.i

if.end.i.unlock_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6.i:                                        ; preds = %if.end.i
  %hdev1.i.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 65
  %13 = ptrtoint ptr %hdev1.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hdev1.i.i, align 4
  %dev_flags.i.i = getelementptr inbounds %struct.hci_dev, ptr %14, i32 0, i32 206
  %15 = ptrtoint ptr %dev_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %dev_flags.i.i, align 4
  %17 = and i32 %16, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i.i = icmp eq i32 %17, 0
  br i1 %tobool.not.i.i, label %if.end6.i.land.lhs.true.i_crit_edge, label %hci_conn_ssp_enabled.exit.i

if.end6.i.land.lhs.true.i_crit_edge:              ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

hci_conn_ssp_enabled.exit.i:                      ; preds = %if.end6.i
  %flags.i.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %18 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %flags.i.i, align 4
  %20 = and i32 %19, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool3.i.not.i = icmp eq i32 %20, 0
  br i1 %tobool3.i.not.i, label %hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge, label %hci_conn_ssp_enabled.exit.i.if.end28_crit_edge

hci_conn_ssp_enabled.exit.i.if.end28_crit_edge:   ; preds = %hci_conn_ssp_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end28

hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge: ; preds = %hci_conn_ssp_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge, %if.end6.i.land.lhs.true.i_crit_edge
  %auth_type.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 23
  %21 = ptrtoint ptr %auth_type.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %auth_type.i, align 1
  %23 = and i8 %22, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool8.not.i = icmp ne i8 %23, 0
  %.off.i = add i8 %12, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %.off.i)
  %switch.i = icmp ult i8 %.off.i, 3
  %or.cond.i = select i1 %tobool8.not.i, i1 true, i1 %switch.i
  br i1 %or.cond.i, label %land.lhs.true.i.if.end28_crit_edge, label %land.lhs.true.i.unlock_crit_edge

land.lhs.true.i.unlock_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

land.lhs.true.i.if.end28_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end28

if.end28:                                         ; preds = %land.lhs.true.i.if.end28_crit_edge, %hci_conn_ssp_enabled.exit.i.if.end28_crit_edge
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %call29 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.then31, label %if.end28.unlock_crit_edge

if.end28.unlock_crit_edge:                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then31:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cp) #9
  tail call void @_set_bit(i32 noundef 17, ptr noundef %flags) #9
  %handle = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 11
  %24 = ptrtoint ptr %handle to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %handle, align 2
  %26 = tail call i16 @llvm.bswap.i16(i16 %25)
  %27 = ptrtoint ptr %cp to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %26, ptr %cp, align 2
  %call34 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1041, i32 noundef 2, ptr noundef nonnull %cp) #9
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cp) #9
  br label %unlock

unlock:                                           ; preds = %if.then31, %if.end28.unlock_crit_edge, %land.lhs.true.i.unlock_crit_edge, %if.end.i.unlock_crit_edge, %lor.lhs.false.i.unlock_crit_edge, %if.end24.unlock_crit_edge, %check_auth.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_encrypt_change_evt(ptr noundef %hdev, ptr nocapture noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_read_enc_key_size, align 2
  %req = alloca %struct.hci_request, align 4
  %cp127 = alloca %struct.hci_cp_write_auth_payload_to, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_encrypt_change_evt.__UNIQUE_ID_ddebug602, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_encrypt_change_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_encrypt_change_evt.__UNIQUE_ID_ddebug602, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_encrypt_change, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool8.not = icmp eq i8 %6, 0
  br i1 %tobool8.not, label %if.then9, label %if.end6.land.lhs.true39_crit_edge

if.end6.land.lhs.true39_crit_edge:                ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true39

if.then9:                                         ; preds = %if.end6
  %encrypt = getelementptr inbounds %struct.hci_ev_encrypt_change, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %encrypt to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %encrypt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool10.not = icmp eq i8 %8, 0
  %flags32 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  br i1 %tobool10.not, label %if.else, label %if.then11

if.then11:                                        ; preds = %if.then9
  tail call void @_set_bit(i32 noundef 13, ptr noundef %flags32) #9
  tail call void @_set_bit(i32 noundef 12, ptr noundef %flags32) #9
  %pending_sec_level = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %9 = ptrtoint ptr %pending_sec_level to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %pending_sec_level, align 1
  %sec_level = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 24
  %11 = ptrtoint ptr %sec_level to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %sec_level, align 4
  %key_type = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 22
  %12 = ptrtoint ptr %key_type to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %key_type, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %13)
  %cmp = icmp eq i8 %13, 8
  br i1 %cmp, label %if.then15, label %if.then11.if.end17_crit_edge

if.then11.if.end17_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 15, ptr noundef %flags32) #9
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.then11.if.end17_crit_edge
  %type = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 14
  %14 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %type, align 1
  %16 = zext i8 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.253)
  switch i8 %15, label %if.end17.if.end35_crit_edge [
    i8 1, label %land.lhs.true
    i8 -128, label %if.end17.if.then29_crit_edge
  ]

if.end17.if.then29_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then29

if.end17.if.end35_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end35

land.lhs.true:                                    ; preds = %if.end17
  %17 = ptrtoint ptr %encrypt to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %encrypt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %18)
  %cmp23 = icmp eq i8 %18, 2
  br i1 %cmp23, label %land.lhs.true.if.then29_crit_edge, label %land.lhs.true.if.end35_crit_edge

land.lhs.true.if.end35_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end35

land.lhs.true.if.then29_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then29

if.then29:                                        ; preds = %land.lhs.true.if.then29_crit_edge, %if.end17.if.then29_crit_edge
  tail call void @_set_bit(i32 noundef 9, ptr noundef %flags32) #9
  br label %if.end35

if.else:                                          ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 12, ptr noundef %flags32) #9
  tail call void @_clear_bit(i32 noundef 9, ptr noundef %flags32) #9
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then29, %land.lhs.true.if.end35_crit_edge, %if.end17.if.end35_crit_edge
  %19 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %19)
  %.pr = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool38.not = icmp eq i8 %.pr, 0
  br i1 %tobool38.not, label %if.end35.if.end46_crit_edge, label %if.end35.land.lhs.true39_crit_edge

if.end35.land.lhs.true39_crit_edge:               ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true39

if.end35.if.end46_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end46

land.lhs.true39:                                  ; preds = %if.end35.land.lhs.true39_crit_edge, %if.end6.land.lhs.true39_crit_edge
  %type40 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 14
  %20 = ptrtoint ptr %type40 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %type40, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %21)
  %cmp42 = icmp eq i8 %21, -128
  br i1 %cmp42, label %if.then44, label %land.lhs.true39.if.end46_crit_edge

land.lhs.true39.if.end46_crit_edge:               ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end46

if.then44:                                        ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #11
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_set_bit(i32 noundef 20, ptr noundef %dev_flags) #9
  tail call void @hci_adv_instances_set_rpa_expired(ptr noundef %hdev, i1 noundef zeroext true) #9
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %land.lhs.true39.if.end46_crit_edge, %if.end35.if.end46_crit_edge
  %flags47 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %flags47) #9
  %call48 = tail call i32 @hci_conn_check_link_mode(ptr noundef nonnull %call3) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %land.lhs.true56.thread, label %if.end52

if.end52:                                         ; preds = %if.end46
  %22 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %22)
  %.pr193 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr193)
  %tobool55.not = icmp eq i8 %.pr193, 0
  br i1 %tobool55.not, label %land.lhs.true73, label %land.lhs.true56

land.lhs.true56:                                  ; preds = %if.end52
  %state = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 12
  %23 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %24)
  %cmp58 = icmp eq i16 %24, 1
  br i1 %cmp58, label %if.then60, label %land.lhs.true56.if.end97_crit_edge

land.lhs.true56.if.end97_crit_edge:               ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end97

land.lhs.true56.thread:                           ; preds = %if.end46
  %25 = ptrtoint ptr %data to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 5, ptr %data, align 1
  %state198 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 12
  %26 = ptrtoint ptr %state198 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %state198, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %27)
  %cmp58199 = icmp eq i16 %27, 1
  br i1 %cmp58199, label %land.lhs.true56.thread.if.end67_crit_edge, label %land.lhs.true56.thread.if.end97_crit_edge

land.lhs.true56.thread.if.end97_crit_edge:        ; preds = %land.lhs.true56.thread
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end97

land.lhs.true56.thread.if.end67_crit_edge:        ; preds = %land.lhs.true56.thread
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end67

if.then60:                                        ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %.pr193)
  %cmp63 = icmp eq i8 %.pr193, 6
  br i1 %cmp63, label %if.then65, label %if.then60.if.end67_crit_edge

if.then60.if.end67_crit_edge:                     ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end67

if.then65:                                        ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 22, ptr noundef %flags47) #9
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %if.then60.if.end67_crit_edge, %land.lhs.true56.thread.if.end67_crit_edge
  %28 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %data, align 1
  tail call fastcc void @hci_encrypt_cfm(ptr noundef nonnull %call3, i8 noundef zeroext %29)
  %call69 = tail call i32 @hci_disconnect(ptr noundef nonnull %call3, i8 noundef zeroext 5) #9
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call3)
  br label %unlock

land.lhs.true73:                                  ; preds = %if.end52
  %encrypt74 = getelementptr inbounds %struct.hci_ev_encrypt_change, ptr %data, i32 0, i32 2
  %30 = ptrtoint ptr %encrypt74 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %encrypt74, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool76.not = icmp eq i8 %31, 0
  br i1 %tobool76.not, label %land.lhs.true73.if.end97_crit_edge, label %land.lhs.true77

land.lhs.true73.if.end97_crit_edge:               ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end97

land.lhs.true77:                                  ; preds = %land.lhs.true73
  %type78 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 14
  %32 = ptrtoint ptr %type78 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %type78, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %33)
  %cmp80 = icmp eq i8 %33, 1
  br i1 %cmp80, label %if.then82, label %land.lhs.true77.if.end97_crit_edge

land.lhs.true77.if.end97_crit_edge:               ; preds = %land.lhs.true77
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end97

if.then82:                                        ; preds = %land.lhs.true77
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cp) #9
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %req) #9
  %34 = call ptr @memset(ptr %req, i32 255, i32 64)
  %arrayidx = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 27, i32 20
  %35 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx, align 1
  %37 = and i8 %36, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool84.not = icmp eq i8 %37, 0
  br i1 %tobool84.not, label %if.then82.cleanup.thread_crit_edge, label %if.end86

if.then82.cleanup.thread_crit_edge:               ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.thread

if.end86:                                         ; preds = %if.then82
  call void @hci_req_init(ptr noundef nonnull %req, ptr noundef %hdev) #9
  %handle87 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 11
  %38 = ptrtoint ptr %handle87 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %handle87, align 2
  %40 = call i16 @llvm.bswap.i16(i16 %39)
  %41 = ptrtoint ptr %cp to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %40, ptr %cp, align 2
  call void @hci_req_add(ptr noundef nonnull %req, i16 noundef zeroext 5128, i32 noundef 2, ptr noundef nonnull %cp) #9
  %call89 = call i32 @hci_req_run_skb(ptr noundef nonnull %req, ptr noundef nonnull @read_enc_key_size_complete) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89)
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %cleanup, label %if.then91

if.then91:                                        ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #11
  %name92 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.32, ptr noundef %name92) #9
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then91, %if.then82.cleanup.thread_crit_edge
  %enc_key_size94 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 27
  %42 = ptrtoint ptr %enc_key_size94 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 16, ptr %enc_key_size94, align 1
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %req) #9
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cp) #9
  br label %notify

cleanup:                                          ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %req) #9
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cp) #9
  br label %unlock

if.end97:                                         ; preds = %land.lhs.true77.if.end97_crit_edge, %land.lhs.true73.if.end97_crit_edge, %land.lhs.true56.thread.if.end97_crit_edge, %land.lhs.true56.if.end97_crit_edge
  %43 = ptrtoint ptr %flags47 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %flags47, align 4
  %45 = and i32 %44, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool100.not = icmp eq i32 %45, 0
  br i1 %tobool100.not, label %if.end97.notify_crit_edge, label %land.lhs.true101

if.end97.notify_crit_edge:                        ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #11
  br label %notify

land.lhs.true101:                                 ; preds = %if.end97
  %46 = ptrtoint ptr %flags47 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %flags47, align 4
  %48 = and i32 %47, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool104.not = icmp eq i32 %48, 0
  br i1 %tobool104.not, label %land.lhs.true101.notify_crit_edge, label %land.lhs.true105

land.lhs.true101.notify_crit_edge:                ; preds = %land.lhs.true101
  call void @__sanitizer_cov_trace_pc() #11
  br label %notify

land.lhs.true105:                                 ; preds = %land.lhs.true101
  %type106 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 14
  %49 = ptrtoint ptr %type106 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %type106, align 1
  %51 = zext i8 %50 to i64
  call void @__sanitizer_cov_trace_switch(i64 %51, ptr @__sancov_gen_cov_switch_values.254)
  switch i8 %50, label %land.lhs.true105.notify_crit_edge [
    i8 1, label %land.lhs.true110
    i8 -128, label %land.lhs.true121
  ]

land.lhs.true105.notify_crit_edge:                ; preds = %land.lhs.true105
  call void @__sanitizer_cov_trace_pc() #11
  br label %notify

land.lhs.true110:                                 ; preds = %land.lhs.true105
  %arrayidx112 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 2, i32 1
  %52 = ptrtoint ptr %arrayidx112 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %arrayidx112, align 1
  %54 = and i8 %53, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool115.not = icmp eq i8 %54, 0
  br i1 %tobool115.not, label %land.lhs.true110.notify_crit_edge, label %land.lhs.true110.if.then126_crit_edge

land.lhs.true110.if.then126_crit_edge:            ; preds = %land.lhs.true110
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then126

land.lhs.true110.notify_crit_edge:                ; preds = %land.lhs.true110
  call void @__sanitizer_cov_trace_pc() #11
  br label %notify

land.lhs.true121:                                 ; preds = %land.lhs.true105
  %le_features = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 22
  %55 = ptrtoint ptr %le_features to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %le_features, align 2
  %57 = and i8 %56, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %57)
  %tobool125.not = icmp eq i8 %57, 0
  br i1 %tobool125.not, label %land.lhs.true121.notify_crit_edge, label %land.lhs.true121.if.then126_crit_edge

land.lhs.true121.if.then126_crit_edge:            ; preds = %land.lhs.true121
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then126

land.lhs.true121.notify_crit_edge:                ; preds = %land.lhs.true121
  call void @__sanitizer_cov_trace_pc() #11
  br label %notify

if.then126:                                       ; preds = %land.lhs.true121.if.then126_crit_edge, %land.lhs.true110.if.then126_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cp127) #9
  %58 = getelementptr inbounds %struct.hci_cp_write_auth_payload_to, ptr %cp127, i32 0, i32 1
  %handle128 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 11
  %59 = ptrtoint ptr %handle128 to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %handle128, align 2
  %61 = tail call i16 @llvm.bswap.i16(i16 %60)
  %62 = ptrtoint ptr %cp127 to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %61, ptr %cp127, align 2
  %auth_payload_timeout = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 72
  %63 = ptrtoint ptr %auth_payload_timeout to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %auth_payload_timeout, align 2
  %65 = tail call i16 @llvm.bswap.i16(i16 %64)
  %66 = ptrtoint ptr %58 to i32
  call void @__asan_store2_noabort(i32 %66)
  store i16 %65, ptr %58, align 2
  %hdev130 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 65
  %67 = ptrtoint ptr %hdev130 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %hdev130, align 4
  %call131 = call i32 @hci_send_cmd(ptr noundef %68, i16 noundef zeroext 3196, i32 noundef 4, ptr noundef nonnull %cp127) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cp127) #9
  br label %notify

notify:                                           ; preds = %if.then126, %land.lhs.true121.notify_crit_edge, %land.lhs.true110.notify_crit_edge, %land.lhs.true105.notify_crit_edge, %land.lhs.true101.notify_crit_edge, %if.end97.notify_crit_edge, %cleanup.thread
  %69 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %data, align 1
  call fastcc void @hci_encrypt_cfm(ptr noundef nonnull %call3, i8 noundef zeroext %70)
  br label %unlock

unlock:                                           ; preds = %notify, %cleanup, %if.end67, %do.end.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_change_link_key_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_change_link_key_complete_evt.__UNIQUE_ID_ddebug603, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_change_link_key_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_change_link_key_complete_evt.__UNIQUE_ID_ddebug603, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_change_link_key_complete, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.if.end12_crit_edge, label %if.then5

do.end.if.end12_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

if.then5:                                         ; preds = %do.end
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool7.not = icmp eq i8 %6, 0
  br i1 %tobool7.not, label %if.then8, label %if.then5.if.end9_crit_edge

if.then5.if.end9_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end9

if.then8:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  tail call void @_set_bit(i32 noundef 14, ptr noundef %flags) #9
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.then5.if.end9_crit_edge
  %flags10 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %flags10) #9
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.09.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not10.i = icmp eq ptr %cb.09.i, @hci_cb_list
  br i1 %cmp.not10.i, label %if.end9.hci_key_change_cfm.exit_crit_edge, label %if.end9.for.body.i_crit_edge

if.end9.for.body.i_crit_edge:                     ; preds = %if.end9
  br label %for.body.i

if.end9.hci_key_change_cfm.exit_crit_edge:        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_key_change_cfm.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end9.for.body.i_crit_edge
  %cb.011.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.09.i, %if.end9.for.body.i_crit_edge ]
  %key_change_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.011.i, i32 0, i32 5
  %9 = ptrtoint ptr %key_change_cfm.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %key_change_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %10(ptr noundef nonnull %call3, i8 noundef zeroext %8) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %11 = ptrtoint ptr %cb.011.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %cb.0.i = load ptr, ptr %cb.011.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.hci_key_change_cfm.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.hci_key_change_cfm.exit_crit_edge:      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_key_change_cfm.exit

hci_key_change_cfm.exit:                          ; preds = %for.inc.i.hci_key_change_cfm.exit_crit_edge, %if.end9.hci_key_change_cfm.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  br label %if.end12

if.end12:                                         ; preds = %hci_key_change_cfm.exit, %do.end.if.end12_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_remote_features_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_read_remote_ext_features, align 2
  %cp43 = alloca %struct.hci_cp_remote_name_req, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_remote_features_evt.__UNIQUE_ID_ddebug604, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_remote_features_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_remote_features_evt.__UNIQUE_ID_ddebug604, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_remote_features, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool8.not = icmp eq i8 %6, 0
  br i1 %tobool8.not, label %if.then9, label %if.end6.if.end13_crit_edge

if.end6.if.end13_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end13

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %features = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 19
  %features11 = getelementptr inbounds %struct.hci_ev_remote_features, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %features11 to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %8 = load i64, ptr %features11, align 1
  %9 = ptrtoint ptr %features to i32
  call void @__asan_storeN_noabort(i32 %9, i32 8)
  store i64 %8, ptr %features, align 2
  br label %if.end13

if.end13:                                         ; preds = %if.then9, %if.end6.if.end13_crit_edge
  %state = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 12
  %10 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %11)
  %cmp.not = icmp eq i16 %11, 7
  br i1 %cmp.not, label %if.end17, label %if.end13.unlock_crit_edge

if.end13.unlock_crit_edge:                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end17:                                         ; preds = %if.end13
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool19.not = icmp eq i8 %13, 0
  br i1 %tobool19.not, label %land.lhs.true, label %if.end17.if.else_crit_edge

if.end17.if.else_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

land.lhs.true:                                    ; preds = %if.end17
  %arrayidx22 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 0, i32 7
  %14 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx22, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %15)
  %tobool24.not = icmp sgt i8 %15, -1
  br i1 %tobool24.not, label %land.lhs.true.land.lhs.true39_crit_edge, label %land.lhs.true25

land.lhs.true.land.lhs.true39_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true39

land.lhs.true25:                                  ; preds = %land.lhs.true
  %arrayidx28 = getelementptr %struct.hci_conn, ptr %call3, i32 0, i32 19, i32 0, i32 7
  %16 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx28, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %17)
  %tobool31.not = icmp sgt i8 %17, -1
  br i1 %tobool31.not, label %land.lhs.true25.land.lhs.true39_crit_edge, label %if.then32

land.lhs.true25.land.lhs.true39_crit_edge:        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true39

if.then32:                                        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %cp) #9
  %18 = getelementptr inbounds %struct.hci_cp_read_remote_ext_features, ptr %cp, i32 0, i32 1
  %19 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %19, i32 2)
  %20 = load i16, ptr %handle, align 1
  %21 = ptrtoint ptr %cp to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %20, ptr %cp, align 2
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 1, ptr %18, align 2
  %call35 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1052, i32 noundef 3, ptr noundef nonnull %cp) #9
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %cp) #9
  br label %unlock

land.lhs.true39:                                  ; preds = %land.lhs.true25.land.lhs.true39_crit_edge, %land.lhs.true.land.lhs.true39_crit_edge
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %23 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %flags, align 4
  %25 = and i32 %24, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool41.not = icmp eq i32 %25, 0
  br i1 %tobool41.not, label %if.then42, label %land.lhs.true39.if.else_crit_edge

land.lhs.true39.if.else_crit_edge:                ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

if.then42:                                        ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %cp43) #9
  %26 = getelementptr inbounds %struct.hci_cp_remote_name_req, ptr %cp43, i32 0, i32 1
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 2
  %27 = getelementptr inbounds i8, ptr %cp43, i32 7
  %28 = call ptr @memset(ptr %27, i32 0, i32 3)
  %29 = call ptr @memcpy(ptr %cp43, ptr %dst, i32 6)
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 2, ptr %26, align 1
  %call44 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1049, i32 noundef 10, ptr noundef nonnull %cp43) #9
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %cp43) #9
  br label %if.end50

if.else:                                          ; preds = %land.lhs.true39.if.else_crit_edge, %if.end17.if.else_crit_edge
  %flags45 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %call46 = tail call i32 @_test_and_set_bit(i32 noundef 6, ptr noundef %flags45) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %if.then48, label %if.else.if.end50_crit_edge

if.else.if.end50_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end50

if.then48:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @mgmt_device_connected(ptr noundef %hdev, ptr noundef nonnull %call3, ptr noundef null, i8 noundef zeroext 0) #9
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.else.if.end50_crit_edge, %if.then42
  %31 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %32)
  %cmp.not.i = icmp eq i16 %32, 7
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %if.end50.if.then53_crit_edge

if.end50.if.then53_crit_edge:                     ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then53

lor.lhs.false.i:                                  ; preds = %if.end50
  %out.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 16
  %33 = ptrtoint ptr %out.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %out.i, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.i = icmp eq i8 %34, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i.if.then53_crit_edge, label %if.end.i

lor.lhs.false.i.if.then53_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then53

if.end.i:                                         ; preds = %lor.lhs.false.i
  %pending_sec_level.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %35 = ptrtoint ptr %pending_sec_level.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %pending_sec_level.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %cmp3.i = icmp eq i8 %36, 0
  br i1 %cmp3.i, label %if.end.i.if.then53_crit_edge, label %if.end6.i

if.end.i.if.then53_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then53

if.end6.i:                                        ; preds = %if.end.i
  %hdev1.i.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 65
  %37 = ptrtoint ptr %hdev1.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %hdev1.i.i, align 4
  %dev_flags.i.i = getelementptr inbounds %struct.hci_dev, ptr %38, i32 0, i32 206
  %39 = ptrtoint ptr %dev_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %dev_flags.i.i, align 4
  %41 = and i32 %40, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.i.i = icmp eq i32 %41, 0
  br i1 %tobool.not.i.i, label %if.end6.i.land.lhs.true.i_crit_edge, label %hci_conn_ssp_enabled.exit.i

if.end6.i.land.lhs.true.i_crit_edge:              ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

hci_conn_ssp_enabled.exit.i:                      ; preds = %if.end6.i
  %flags.i.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %42 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %flags.i.i, align 4
  %44 = and i32 %43, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool3.i.not.i = icmp eq i32 %44, 0
  br i1 %tobool3.i.not.i, label %hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge, label %hci_conn_ssp_enabled.exit.i.unlock_crit_edge

hci_conn_ssp_enabled.exit.i.unlock_crit_edge:     ; preds = %hci_conn_ssp_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge: ; preds = %hci_conn_ssp_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge, %if.end6.i.land.lhs.true.i_crit_edge
  %auth_type.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 23
  %45 = ptrtoint ptr %auth_type.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %auth_type.i, align 1
  %47 = and i8 %46, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool8.not.i = icmp ne i8 %47, 0
  %.off.i = add i8 %36, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %.off.i)
  %switch.i = icmp ult i8 %.off.i, 3
  %or.cond.i = select i1 %tobool8.not.i, i1 true, i1 %switch.i
  br i1 %or.cond.i, label %land.lhs.true.i.unlock_crit_edge, label %land.lhs.true.i.if.then53_crit_edge

land.lhs.true.i.if.then53_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then53

land.lhs.true.i.unlock_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then53:                                        ; preds = %land.lhs.true.i.if.then53_crit_edge, %if.end.i.if.then53_crit_edge, %lor.lhs.false.i.if.then53_crit_edge, %if.end50.if.then53_crit_edge
  %48 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 1, ptr %state, align 4
  %49 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %data, align 1
  call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then53.for.end.i_crit_edge, label %if.then53.for.body.i_crit_edge

if.then53.for.body.i_crit_edge:                   ; preds = %if.then53
  br label %for.body.i

if.then53.for.end.i_crit_edge:                    ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then53.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then53.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %51 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i85 = icmp eq ptr %52, null
  br i1 %tobool.not.i85, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %52(ptr noundef nonnull %call3, i8 noundef zeroext %50) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %53 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i86 = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i86, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then53.for.end.i_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 71
  %54 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %55, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %55(ptr noundef nonnull %call3, i8 noundef zeroext %50) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  call fastcc void @hci_conn_drop(ptr noundef nonnull %call3)
  br label %unlock

unlock:                                           ; preds = %hci_connect_cfm.exit, %land.lhs.true.i.unlock_crit_edge, %hci_conn_ssp_enabled.exit.i.unlock_crit_edge, %if.then32, %if.end13.unlock_crit_edge, %do.end.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cmd_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr noundef %skb, ptr nocapture noundef %opcode, ptr nocapture noundef %status, ptr noundef %req_complete, ptr noundef %req_complete_skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %opcode1 = getelementptr inbounds %struct.hci_ev_cmd_complete, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %opcode1 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %opcode1, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %3 = ptrtoint ptr %opcode to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 %2, ptr %opcode, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cmd_complete_evt.__UNIQUE_ID_ddebug605, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cmd_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %4 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %opcode, align 2
  %conv = zext i16 %5 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cmd_complete_evt.__UNIQUE_ID_ddebug605, ptr noundef nonnull @.str.40, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %6 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %opcode, align 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end
  %i.055 = phi i32 [ 0, %do.end ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr [89 x %struct.hci_cc], ptr @hci_cc_table, i32 0, i32 %i.055
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %9, i16 %7)
  %cmp7 = icmp eq i16 %9, %7
  br i1 %cmp7, label %if.then9, label %for.inc

if.then9:                                         ; preds = %for.body
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %10 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len.i, align 4
  %min_len.i = getelementptr [89 x %struct.hci_cc], ptr @hci_cc_table, i32 0, i32 %i.055, i32 2
  %12 = ptrtoint ptr %min_len.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %min_len.i, align 4
  %conv.i = zext i16 %13 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %conv.i)
  %cmp.i = icmp ult i32 %11, %conv.i
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv2.i = zext i16 %7 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.142, ptr noundef %name.i, i32 noundef %conv2.i, i32 noundef %11, i32 noundef %conv.i) #9
  br label %hci_cc_func.exit

if.end.i:                                         ; preds = %if.then9
  %max_len.i = getelementptr [89 x %struct.hci_cc], ptr @hci_cc_table, i32 0, i32 %i.055, i32 3
  %14 = ptrtoint ptr %max_len.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %max_len.i, align 2
  %conv7.i = zext i16 %15 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %conv7.i)
  %cmp8.i = icmp ugt i32 %11, %conv7.i
  br i1 %cmp8.i, label %if.then10.i, label %if.end.i.if.end18.i_crit_edge

if.end.i.if.end18.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18.i

if.then10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %name11.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv14.i = zext i16 %7 to i32
  tail call void (ptr, ...) @bt_warn(ptr noundef nonnull @.str.143, ptr noundef %name11.i, i32 noundef %conv14.i, i32 noundef %11, i32 noundef %conv7.i) #9
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then10.i, %if.end.i.if.end18.i_crit_edge
  %call.i.i47 = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %conv.i) #9
  %tobool.not.i.i = icmp eq ptr %call.i.i47, null
  br i1 %tobool.not.i.i, label %hci_cc_skb_pull.exit.thread.i, label %if.end23.i

hci_cc_skb_pull.exit.thread.i:                    ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #11
  %name.i.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv.i.i = zext i16 %7 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.144, ptr noundef %name.i.i, i32 noundef %conv.i.i) #9
  br label %hci_cc_func.exit

if.end23.i:                                       ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #11
  %func.i = getelementptr [89 x %struct.hci_cc], ptr @hci_cc_table, i32 0, i32 %i.055, i32 1
  %16 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %func.i, align 4
  %call24.i = tail call zeroext i8 %17(ptr noundef %hdev, ptr noundef nonnull %call.i.i47, ptr noundef %skb) #9
  br label %hci_cc_func.exit

hci_cc_func.exit:                                 ; preds = %if.end23.i, %hci_cc_skb_pull.exit.thread.i, %if.then.i
  %retval.0.i48 = phi i8 [ 31, %if.then.i ], [ %call24.i, %if.end23.i ], [ 31, %hci_cc_skb_pull.exit.thread.i ]
  %18 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %retval.0.i48, ptr %status, align 1
  br label %for.end

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.055, 1
  %exitcond.not = icmp eq i32 %inc, 89
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %hci_cc_func.exit
  %19 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %data, align 1
  %cmd_timer.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 150
  %call.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %cmd_timer.i) #9
  %flags.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  %21 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %flags.i, align 4
  %23 = and i32 %22, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not.i = icmp eq i32 %23, 0
  br i1 %tobool.not.i, label %if.then.i49, label %for.end.handle_cmd_cnt_and_timer.exit_crit_edge

for.end.handle_cmd_cnt_and_timer.exit_crit_edge:  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %handle_cmd_cnt_and_timer.exit

if.then.i49:                                      ; preds = %for.end
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool2.not.i = icmp eq i8 %20, 0
  %ncmd_timer5.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 151
  br i1 %tobool2.not.i, label %if.else.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i49
  call void @__sanitizer_cov_trace_pc() #11
  %call4.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %ncmd_timer5.i) #9
  %cmd_cnt.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 119
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cmd_cnt.i, i32 noundef 4) #9
  %24 = ptrtoint ptr %cmd_cnt.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 1, ptr %cmd_cnt.i, align 4
  br label %handle_cmd_cnt_and_timer.exit

if.else.i:                                        ; preds = %if.then.i49
  call void @__sanitizer_cov_trace_pc() #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %25 = load ptr, ptr @system_wq, align 4
  %call.i.i13.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %25, ptr noundef %ncmd_timer5.i, i32 noundef 400) #9
  br label %handle_cmd_cnt_and_timer.exit

handle_cmd_cnt_and_timer.exit:                    ; preds = %if.else.i, %if.then3.i, %for.end.handle_cmd_cnt_and_timer.exit_crit_edge
  %26 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %opcode, align 2
  %28 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %status, align 1
  tail call void @hci_req_cmd_complete(ptr noundef %hdev, i16 noundef zeroext %27, i8 noundef zeroext %29, ptr noundef %req_complete, ptr noundef %req_complete_skb) #9
  %arrayidx.i = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 206, i32 1
  %30 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %arrayidx.i, align 4
  %32 = and i32 %31, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool15.not = icmp eq i32 %32, 0
  br i1 %tobool15.not, label %if.end20, label %if.then16

if.then16:                                        ; preds = %handle_cmd_cnt_and_timer.exit
  call void @__sanitizer_cov_trace_pc() #11
  %name17 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %33 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %opcode, align 2
  %conv19 = zext i16 %34 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.41, ptr noundef %name17, i32 noundef %conv19) #9
  br label %cleanup

if.end20:                                         ; preds = %handle_cmd_cnt_and_timer.exit
  %cmd_cnt = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 119
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %cmd_cnt, i32 noundef 4) #9
  %35 = ptrtoint ptr %cmd_cnt to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %cmd_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool22.not = icmp eq i32 %36, 0
  br i1 %tobool22.not, label %if.end20.cleanup_crit_edge, label %land.lhs.true

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end20
  %cmd_q = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 161
  %37 = ptrtoint ptr %cmd_q to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %cmd_q, align 4
  %cmp.i50.not = icmp eq ptr %38, %cmd_q
  br i1 %cmp.i50.not, label %land.lhs.true.cleanup_crit_edge, label %if.then25

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then25:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 138
  %39 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %workqueue, align 4
  %cmd_work = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 153
  %call.i52 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %40, ptr noundef %cmd_work) #9
  br label %cleanup

cleanup:                                          ; preds = %if.then25, %land.lhs.true.cleanup_crit_edge, %if.end20.cleanup_crit_edge, %if.then16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cmd_status_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb, ptr nocapture noundef %opcode, ptr nocapture noundef writeonly %status, ptr noundef %req_complete, ptr noundef %req_complete_skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %opcode1 = getelementptr inbounds %struct.hci_ev_cmd_status, ptr %data, i32 0, i32 2
  %0 = ptrtoint ptr %opcode1 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %opcode1, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %3 = ptrtoint ptr %opcode to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 %2, ptr %opcode, align 2
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  %6 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %status, align 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cmd_status_evt.__UNIQUE_ID_ddebug606, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cmd_status_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %7 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %opcode, align 2
  %conv = zext i16 %8 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cmd_status_evt.__UNIQUE_ID_ddebug606, ptr noundef nonnull @.str.40, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %9 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %opcode, align 2
  %11 = zext i16 %10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.255)
  switch i16 %10, label %do.end.for.end_crit_edge [
    i16 1025, label %do.end.if.then10_crit_edge
    i16 1029, label %if.then10.fold.split
    i16 1030, label %if.then10.fold.split69
    i16 1031, label %if.then10.fold.split70
    i16 1041, label %if.then10.fold.split71
    i16 1043, label %if.then10.fold.split72
    i16 1049, label %if.then10.fold.split73
    i16 1051, label %if.then10.fold.split74
    i16 1052, label %if.then10.fold.split75
    i16 1064, label %if.then10.fold.split76
    i16 1085, label %if.then10.fold.split77
    i16 2051, label %if.then10.fold.split78
    i16 2052, label %if.then10.fold.split79
    i16 2059, label %if.then10.fold.split80
    i16 8205, label %if.then10.fold.split81
    i16 8214, label %if.then10.fold.split82
    i16 8217, label %if.then10.fold.split83
    i16 8259, label %if.then10.fold.split84
  ]

do.end.if.then10_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

if.then10.fold.split:                             ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split69:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split70:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split71:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split72:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split73:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split74:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split75:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split76:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split77:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split78:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split79:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split80:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split81:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split82:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split83:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10.fold.split84:                           ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then10

if.then10:                                        ; preds = %if.then10.fold.split84, %if.then10.fold.split83, %if.then10.fold.split82, %if.then10.fold.split81, %if.then10.fold.split80, %if.then10.fold.split79, %if.then10.fold.split78, %if.then10.fold.split77, %if.then10.fold.split76, %if.then10.fold.split75, %if.then10.fold.split74, %if.then10.fold.split73, %if.then10.fold.split72, %if.then10.fold.split71, %if.then10.fold.split70, %if.then10.fold.split69, %if.then10.fold.split, %do.end.if.then10_crit_edge
  %i.067.lcssa = phi i32 [ 0, %do.end.if.then10_crit_edge ], [ 1, %if.then10.fold.split ], [ 2, %if.then10.fold.split69 ], [ 3, %if.then10.fold.split70 ], [ 4, %if.then10.fold.split71 ], [ 5, %if.then10.fold.split72 ], [ 6, %if.then10.fold.split73 ], [ 7, %if.then10.fold.split74 ], [ 8, %if.then10.fold.split75 ], [ 9, %if.then10.fold.split76 ], [ 10, %if.then10.fold.split77 ], [ 11, %if.then10.fold.split78 ], [ 12, %if.then10.fold.split79 ], [ 13, %if.then10.fold.split80 ], [ 14, %if.then10.fold.split81 ], [ 15, %if.then10.fold.split82 ], [ 16, %if.then10.fold.split83 ], [ 17, %if.then10.fold.split84 ]
  %func = getelementptr [18 x %struct.hci_cs], ptr @hci_cs_table, i32 0, i32 %i.067.lcssa, i32 1
  %12 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %func, align 4
  %14 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %data, align 1
  tail call void %13(ptr noundef %hdev, i8 noundef zeroext %15) #9
  br label %for.end

for.end:                                          ; preds = %if.then10, %do.end.for.end_crit_edge
  %ncmd = getelementptr inbounds %struct.hci_ev_cmd_status, ptr %data, i32 0, i32 1
  %16 = ptrtoint ptr %ncmd to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %ncmd, align 1
  %cmd_timer.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 150
  %call.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %cmd_timer.i) #9
  %flags.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  %18 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %flags.i, align 4
  %20 = and i32 %19, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i, label %if.then.i, label %for.end.handle_cmd_cnt_and_timer.exit_crit_edge

for.end.handle_cmd_cnt_and_timer.exit_crit_edge:  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %handle_cmd_cnt_and_timer.exit

if.then.i:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool2.not.i = icmp eq i8 %17, 0
  %ncmd_timer5.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 151
  br i1 %tobool2.not.i, label %if.else.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #11
  %call4.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %ncmd_timer5.i) #9
  %cmd_cnt.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 119
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cmd_cnt.i, i32 noundef 4) #9
  %21 = ptrtoint ptr %cmd_cnt.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile i32 1, ptr %cmd_cnt.i, align 4
  br label %handle_cmd_cnt_and_timer.exit

if.else.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %22 = load ptr, ptr @system_wq, align 4
  %call.i.i13.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %22, ptr noundef %ncmd_timer5.i, i32 noundef 400) #9
  br label %handle_cmd_cnt_and_timer.exit

handle_cmd_cnt_and_timer.exit:                    ; preds = %if.else.i, %if.then3.i, %for.end.handle_cmd_cnt_and_timer.exit_crit_edge
  %23 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool16.not = icmp eq i8 %24, 0
  br i1 %tobool16.not, label %lor.lhs.false, label %handle_cmd_cnt_and_timer.exit.if.then21_crit_edge

handle_cmd_cnt_and_timer.exit.if.then21_crit_edge: ; preds = %handle_cmd_cnt_and_timer.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then21

lor.lhs.false:                                    ; preds = %handle_cmd_cnt_and_timer.exit
  %sent_cmd = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 162
  %25 = ptrtoint ptr %sent_cmd to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sent_cmd, align 4
  %tobool17.not = icmp eq ptr %26, null
  br i1 %tobool17.not, label %lor.lhs.false.if.end31_crit_edge, label %land.lhs.true

lor.lhs.false.if.end31_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end31

land.lhs.true:                                    ; preds = %lor.lhs.false
  %req_event = getelementptr inbounds %struct.sk_buff, ptr %26, i32 0, i32 3, i32 15
  %27 = ptrtoint ptr %req_event to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %req_event, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool20.not = icmp eq i8 %28, 0
  br i1 %tobool20.not, label %land.lhs.true.if.then21_crit_edge, label %land.lhs.true.if.end31_crit_edge

land.lhs.true.if.end31_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end31

land.lhs.true.if.then21_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then21

if.then21:                                        ; preds = %land.lhs.true.if.then21_crit_edge, %handle_cmd_cnt_and_timer.exit.if.then21_crit_edge
  %29 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %opcode, align 2
  tail call void @hci_req_cmd_complete(ptr noundef %hdev, i16 noundef zeroext %30, i8 noundef zeroext %24, ptr noundef %req_complete, ptr noundef %req_complete_skb) #9
  %arrayidx.i = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 206, i32 1
  %31 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %arrayidx.i, align 4
  %33 = and i32 %32, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool25.not = icmp eq i32 %33, 0
  br i1 %tobool25.not, label %if.then21.if.end31_crit_edge, label %if.then26

if.then21.if.end31_crit_edge:                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end31

if.then26:                                        ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #11
  %name27 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %34 = ptrtoint ptr %opcode to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %opcode, align 2
  %conv29 = zext i16 %35 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.41, ptr noundef %name27, i32 noundef %conv29) #9
  br label %cleanup

if.end31:                                         ; preds = %if.then21.if.end31_crit_edge, %land.lhs.true.if.end31_crit_edge, %lor.lhs.false.if.end31_crit_edge
  %cmd_cnt = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 119
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %cmd_cnt, i32 noundef 4) #9
  %36 = ptrtoint ptr %cmd_cnt to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %cmd_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool33.not = icmp eq i32 %37, 0
  br i1 %tobool33.not, label %if.end31.cleanup_crit_edge, label %land.lhs.true34

if.end31.cleanup_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

land.lhs.true34:                                  ; preds = %if.end31
  %cmd_q = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 161
  %38 = ptrtoint ptr %cmd_q to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %cmd_q, align 4
  %cmp.i.not = icmp eq ptr %39, %cmd_q
  br i1 %cmp.i.not, label %land.lhs.true34.cleanup_crit_edge, label %if.then37

land.lhs.true34.cleanup_crit_edge:                ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then37:                                        ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #11
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 138
  %40 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %workqueue, align 4
  %cmd_work = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 153
  %call.i64 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %41, ptr noundef %cmd_work) #9
  br label %cleanup

cleanup:                                          ; preds = %if.then37, %land.lhs.true34.cleanup_crit_edge, %if.end31.cleanup_crit_edge, %if.then26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_hardware_error_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_hardware_error_evt.__UNIQUE_ID_ddebug607, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_hardware_error_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_hardware_error_evt.__UNIQUE_ID_ddebug607, ptr noundef nonnull @.str.167, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  %hw_error_code = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 77
  %4 = ptrtoint ptr %hw_error_code to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %3, ptr %hw_error_code, align 8
  %req_workqueue = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 139
  %5 = ptrtoint ptr %req_workqueue to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %req_workqueue, align 8
  %error_reset = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 142
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %6, ptr noundef %error_reset) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_role_change_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_role_change_evt.__UNIQUE_ID_ddebug608, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_role_change_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_role_change_evt.__UNIQUE_ID_ddebug608, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %bdaddr = getelementptr inbounds %struct.hci_ev_role_change, ptr %data, i32 0, i32 1
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %bdaddr)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.if.end13_crit_edge, label %if.then5

do.end.if.end13_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end13

if.then5:                                         ; preds = %do.end
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool7.not = icmp eq i8 %3, 0
  br i1 %tobool7.not, label %if.then8, label %if.then5.if.end10_crit_edge

if.then5.if.end10_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end10

if.then8:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  %role = getelementptr inbounds %struct.hci_ev_role_change, ptr %data, i32 0, i32 2
  %4 = ptrtoint ptr %role to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %role, align 1
  %role9 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 15
  %6 = ptrtoint ptr %role9 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %role9, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.then5.if.end10_crit_edge
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %flags) #9
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  %role12 = getelementptr inbounds %struct.hci_ev_role_change, ptr %data, i32 0, i32 2
  %9 = ptrtoint ptr %role12 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %role12, align 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.09.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not10.i = icmp eq ptr %cb.09.i, @hci_cb_list
  br i1 %cmp.not10.i, label %if.end10.hci_role_switch_cfm.exit_crit_edge, label %if.end10.for.body.i_crit_edge

if.end10.for.body.i_crit_edge:                    ; preds = %if.end10
  br label %for.body.i

if.end10.hci_role_switch_cfm.exit_crit_edge:      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_role_switch_cfm.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end10.for.body.i_crit_edge
  %cb.011.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.09.i, %if.end10.for.body.i_crit_edge ]
  %role_switch_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.011.i, i32 0, i32 6
  %11 = ptrtoint ptr %role_switch_cfm.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %role_switch_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %12(ptr noundef nonnull %call3, i8 noundef zeroext %8, i8 noundef zeroext %10) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %13 = ptrtoint ptr %cb.011.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %cb.0.i = load ptr, ptr %cb.011.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.hci_role_switch_cfm.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.hci_role_switch_cfm.exit_crit_edge:     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_role_switch_cfm.exit

hci_role_switch_cfm.exit:                         ; preds = %for.inc.i.hci_role_switch_cfm.exit_crit_edge, %if.end10.hci_role_switch_cfm.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  br label %if.end13

if.end13:                                         ; preds = %hci_role_switch_cfm.exit, %do.end.if.end13_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_num_comp_pkts_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  %2 = shl nuw nsw i32 %conv, 2
  %call.i = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %2) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %hci_ev_skb_pull.exit.thread, label %if.end

hci_ev_skb_pull.exit.thread:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.242, ptr noundef %name.i, i32 noundef 19) #9
  br label %cleanup81

if.end:                                           ; preds = %entry
  %flow_ctl_mode = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 116
  %3 = ptrtoint ptr %flow_ctl_mode to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %flow_ctl_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %cmp.not = icmp eq i8 %4, 0
  br i1 %cmp.not, label %do.body, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %conv2 = zext i8 %4 to i32
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.169, ptr noundef %name, i32 noundef %conv2) #9
  br label %cleanup81

do.body:                                          ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_num_comp_pkts_evt.__UNIQUE_ID_ddebug609, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_num_comp_pkts_evt, %if.then12)) #9
          to label %do.end [label %if.then12], !srcloc !680

if.then12:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #11
  %name13 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  %conv16 = zext i8 %6 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_num_comp_pkts_evt.__UNIQUE_ID_ddebug609, ptr noundef nonnull @.str.11, ptr noundef %name13, i32 noundef %conv16) #9
  br label %do.end

do.end:                                           ; preds = %if.then12, %do.body
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %cmp20138.not = icmp eq i8 %8, 0
  br i1 %cmp20138.not, label %do.end.for.end_crit_edge, label %for.body.lr.ph

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end
  %sco_cnt = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 121
  %sco_pkts = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 127
  %le_pkts = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 128
  %le_cnt = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 122
  %acl_cnt52 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 120
  %acl_pkts55 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 126
  %name73 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %i.0139 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cleanup.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hci_ev_num_comp_pkts, ptr %data, i32 0, i32 1, i32 %i.0139
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_loadN_noabort(i32 %9, i32 2)
  %10 = load i16, ptr %arrayidx, align 1
  %11 = tail call i16 @llvm.bswap.i16(i16 %10)
  %count23 = getelementptr %struct.hci_ev_num_comp_pkts, ptr %data, i32 0, i32 1, i32 %i.0139, i32 1
  %12 = ptrtoint ptr %count23 to i32
  call void @__asan_loadN_noabort(i32 %12, i32 2)
  %13 = load i16, ptr %count23, align 1
  %call24 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %11)
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %for.body.cleanup_crit_edge, label %if.end27

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end27:                                         ; preds = %for.body
  %14 = tail call i16 @llvm.bswap.i16(i16 %13)
  %conv28 = zext i16 %14 to i32
  %sent = getelementptr inbounds %struct.hci_conn, ptr %call24, i32 0, i32 55
  %15 = ptrtoint ptr %sent to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sent, align 4
  %sub = sub i32 %16, %conv28
  store i32 %sub, ptr %sent, align 4
  %type = getelementptr inbounds %struct.hci_conn, ptr %call24, i32 0, i32 14
  %17 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %type, align 1
  %19 = zext i8 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.256)
  switch i8 %18, label %sw.default [
    i8 1, label %sw.bb
    i8 -128, label %sw.bb38
    i8 0, label %sw.bb63
  ]

sw.bb:                                            ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  %20 = ptrtoint ptr %acl_cnt52 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %acl_cnt52, align 8
  %add = add i32 %21, %conv28
  %22 = ptrtoint ptr %acl_pkts55 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %acl_pkts55, align 8
  %24 = tail call i32 @llvm.umin.i32(i32 %add, i32 %23)
  %25 = ptrtoint ptr %acl_cnt52 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %acl_cnt52, align 8
  br label %cleanup

sw.bb38:                                          ; preds = %if.end27
  %26 = ptrtoint ptr %le_pkts to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %le_pkts, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool39.not = icmp eq i32 %27, 0
  br i1 %tobool39.not, label %if.else, label %if.then40

if.then40:                                        ; preds = %sw.bb38
  call void @__sanitizer_cov_trace_pc() #11
  %28 = ptrtoint ptr %le_cnt to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %le_cnt, align 8
  %add42 = add i32 %29, %conv28
  %30 = tail call i32 @llvm.umin.i32(i32 %add42, i32 %27)
  %31 = ptrtoint ptr %le_cnt to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %le_cnt, align 8
  br label %cleanup

if.else:                                          ; preds = %sw.bb38
  call void @__sanitizer_cov_trace_pc() #11
  %32 = ptrtoint ptr %acl_cnt52 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %acl_cnt52, align 8
  %add53 = add i32 %33, %conv28
  %34 = ptrtoint ptr %acl_pkts55 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %acl_pkts55, align 8
  %36 = tail call i32 @llvm.umin.i32(i32 %add53, i32 %35)
  %37 = ptrtoint ptr %acl_cnt52 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %acl_cnt52, align 8
  br label %cleanup

sw.bb63:                                          ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  %38 = ptrtoint ptr %sco_cnt to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %sco_cnt, align 4
  %add65 = add i32 %39, %conv28
  %40 = ptrtoint ptr %sco_pkts to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %sco_pkts, align 4
  %42 = tail call i32 @llvm.umin.i32(i32 %add65, i32 %41)
  %43 = ptrtoint ptr %sco_cnt to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %sco_cnt, align 4
  br label %cleanup

sw.default:                                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  %conv29 = zext i8 %18 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.171, ptr noundef %name73, i32 noundef %conv29, ptr noundef nonnull %call24) #9
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %sw.bb63, %if.else, %if.then40, %sw.bb, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.0139, 1
  %44 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %data, align 1
  %conv19 = zext i8 %45 to i32
  %cmp20 = icmp ult i32 %inc, %conv19
  br i1 %cmp20, label %cleanup.for.body_crit_edge, label %cleanup.for.end_crit_edge

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %do.end.for.end_crit_edge
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 138
  %46 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %workqueue, align 4
  %tx_work = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 154
  %call.i135 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %47, ptr noundef %tx_work) #9
  br label %cleanup81

cleanup81:                                        ; preds = %for.end, %if.then4, %hci_ev_skb_pull.exit.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_mode_change_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_mode_change_evt.__UNIQUE_ID_ddebug611, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_mode_change_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_mode_change_evt.__UNIQUE_ID_ddebug611, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_mode_change, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.if.end24_crit_edge, label %if.then5

do.end.if.end24_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end24

if.then5:                                         ; preds = %do.end
  %mode = getelementptr inbounds %struct.hci_ev_mode_change, ptr %data, i32 0, i32 2
  %5 = ptrtoint ptr %mode to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %mode, align 1
  %mode6 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 13
  %7 = ptrtoint ptr %mode6 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %6, ptr %mode6, align 2
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %call7 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.then9, label %if.then5.if.end17_crit_edge

if.then5.if.end17_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then9:                                         ; preds = %if.then5
  %8 = ptrtoint ptr %mode6 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %mode6, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %cmp = icmp eq i8 %9, 0
  br i1 %cmp, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 10, ptr noundef %flags) #9
  br label %if.end17

if.else:                                          ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 10, ptr noundef %flags) #9
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then13, %if.then5.if.end17_crit_edge
  %call19 = tail call i32 @_test_and_clear_bit(i32 noundef 5, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end17.if.end24_crit_edge, label %if.then21

if.end17.if.end24_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end24

if.then21:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  tail call void @hci_sco_setup(ptr noundef nonnull %call3, i8 noundef zeroext %11) #9
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %if.end17.if.end24_crit_edge, %do.end.if.end24_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_pin_code_request_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_pin_code_request_evt.__UNIQUE_ID_ddebug612, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_pin_code_request_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_pin_code_request_evt.__UNIQUE_ID_ddebug612, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %data)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  %state = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 12
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %1)
  %cmp = icmp eq i16 %1, 1
  br i1 %cmp, label %if.then8, label %if.end6.if.end11_crit_edge

if.end6.if.end11_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

if.then8:                                         ; preds = %if.end6
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_pin_code_request_evt, %if.then.i)) #9
          to label %hci_conn_hold.exit [label %if.then.i], !srcloc !680

if.then.i:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #9
  %2 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %refcnt.i, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_hold.__UNIQUE_ID_ddebug471, ptr noundef nonnull @.str.20, ptr noundef nonnull %call3, i32 noundef %3) #9
  br label %hci_conn_hold.exit

hci_conn_hold.exit:                               ; preds = %if.then.i, %if.then8
  %refcnt4.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 1
  %call.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #9
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #9
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #9, !srcloc !682
  %disc_work.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 58
  %call5.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work.i) #9
  %disc_timeout = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 31
  %5 = ptrtoint ptr %disc_timeout to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 6000, ptr %disc_timeout, align 2
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call3)
  br label %if.end11

if.end11:                                         ; preds = %hci_conn_hold.exit, %if.end6.if.end11_crit_edge
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %6 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dev_flags, align 4
  %8 = and i32 %7, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool14.not = icmp eq i32 %8, 0
  br i1 %tobool14.not, label %land.lhs.true, label %if.end11.if.else_crit_edge

if.end11.if.else_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

land.lhs.true:                                    ; preds = %if.end11
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %flags, align 4
  %11 = and i32 %10, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool16.not = icmp eq i32 %11, 0
  br i1 %tobool16.not, label %if.then17, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

if.then17:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %call19 = tail call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1038, i32 noundef 6, ptr noundef %data) #9
  br label %unlock

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end11.if.else_crit_edge
  %12 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %dev_flags, align 4
  %14 = and i32 %13, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool23.not = icmp eq i32 %14, 0
  br i1 %tobool23.not, label %if.else.unlock_crit_edge, label %if.then24

if.else.unlock_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then24:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %pending_sec_level = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %15 = ptrtoint ptr %pending_sec_level to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %pending_sec_level, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %16)
  %cmp26 = icmp eq i8 %16, 3
  %. = zext i1 %cmp26 to i8
  tail call void @mgmt_pin_code_request(ptr noundef %hdev, ptr noundef %data, i8 noundef zeroext %.) #9
  br label %unlock

unlock:                                           ; preds = %if.then24, %if.else.unlock_crit_edge, %if.then17, %do.end.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_link_key_request_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_link_key_reply, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 22, ptr nonnull %cp) #9
  %0 = getelementptr inbounds %struct.hci_cp_link_key_reply, ptr %cp, i32 0, i32 1
  %1 = call ptr @memset(ptr %cp, i32 255, i32 22)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug613, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_link_key_request_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_link_key_request_evt.__UNIQUE_ID_ddebug613, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %do.end.cleanup_crit_edge, label %if.end7

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call8 = tail call ptr @hci_find_link_key(ptr noundef %hdev, ptr noundef %data) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %do.body11, label %do.body31

do.body11:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug614, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_link_key_request_evt, %if.then23)) #9
          to label %not_found [label %if.then23], !srcloc !680

if.then23:                                        ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #11
  %name24 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_link_key_request_evt.__UNIQUE_ID_ddebug614, ptr noundef nonnull @.str.176, ptr noundef %name24, ptr noundef %data) #9
  br label %not_found

do.body31:                                        ; preds = %if.end7
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug615, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_link_key_request_evt, %if.then43)) #9
          to label %do.end49 [label %if.then43], !srcloc !680

if.then43:                                        ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #11
  %name44 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %type = getelementptr inbounds %struct.link_key, ptr %call8, i32 0, i32 3
  %5 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %type, align 2
  %conv = zext i8 %6 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_link_key_request_evt.__UNIQUE_ID_ddebug615, ptr noundef nonnull @.str.177, ptr noundef %name44, i32 noundef %conv, ptr noundef %data) #9
  br label %do.end49

do.end49:                                         ; preds = %if.then43, %do.body31
  %call51 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %data)
  %tobool52.not = icmp eq ptr %call51, null
  br i1 %tobool52.not, label %do.end49.if.end127_crit_edge, label %if.then53

do.end49.if.end127_crit_edge:                     ; preds = %do.end49
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end127

if.then53:                                        ; preds = %do.end49
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 20, ptr noundef %flags) #9
  %type54 = getelementptr inbounds %struct.link_key, ptr %call8, i32 0, i32 3
  %7 = ptrtoint ptr %type54 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %type54, align 2
  %9 = zext i8 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.257)
  switch i8 %8, label %if.then53.if.end.i_crit_edge [
    i8 4, label %if.then53.land.lhs.true_crit_edge
    i8 7, label %if.then53.land.lhs.true_crit_edge193
    i8 0, label %land.lhs.true92
    i8 6, label %if.then53.if.end127_crit_edge
  ]

if.then53.if.end127_crit_edge:                    ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end127

if.then53.land.lhs.true_crit_edge193:             ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true

if.then53.land.lhs.true_crit_edge:                ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true

if.then53.if.end.i_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end.i

land.lhs.true:                                    ; preds = %if.then53.land.lhs.true_crit_edge, %if.then53.land.lhs.true_crit_edge193
  %auth_type = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 23
  %10 = ptrtoint ptr %auth_type to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %auth_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %11)
  %cmp62.not = icmp eq i8 %11, -1
  %12 = and i8 %11, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool67.not = icmp eq i8 %12, 0
  %or.cond = or i1 %cmp62.not, %tobool67.not
  br i1 %or.cond, label %if.end124, label %do.body69

do.body69:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug616, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_link_key_request_evt, %if.then81)) #9
          to label %not_found [label %if.then81], !srcloc !680

if.then81:                                        ; preds = %do.body69
  call void @__sanitizer_cov_trace_pc() #11
  %name82 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_link_key_request_evt.__UNIQUE_ID_ddebug616, ptr noundef nonnull @.str.178, ptr noundef %name82) #9
  br label %not_found

land.lhs.true92:                                  ; preds = %if.then53
  %pin_len = getelementptr inbounds %struct.link_key, ptr %call8, i32 0, i32 5
  %13 = ptrtoint ptr %pin_len to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %pin_len, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %14)
  %cmp94 = icmp ult i8 %14, 16
  br i1 %cmp94, label %land.lhs.true96, label %land.lhs.true92.if.end.i.thread_crit_edge

land.lhs.true92.if.end.i.thread_crit_edge:        ; preds = %land.lhs.true92
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end.i.thread

land.lhs.true96:                                  ; preds = %land.lhs.true92
  %pending_sec_level = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 25
  %15 = ptrtoint ptr %pending_sec_level to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %pending_sec_level, align 1
  %.off = add i8 %16, -3
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %.off)
  %switch = icmp ult i8 %.off, 2
  br i1 %switch, label %do.body106, label %land.lhs.true96.if.end.i.thread_crit_edge

land.lhs.true96.if.end.i.thread_crit_edge:        ; preds = %land.lhs.true96
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end.i.thread

do.body106:                                       ; preds = %land.lhs.true96
  call void @__sanitizer_cov_trace_pc() #11
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug617, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_link_key_request_evt, %if.then118)) #9
          to label %not_found [label %if.then118], !srcloc !680

if.then118:                                       ; preds = %do.body106
  call void @__sanitizer_cov_trace_pc() #11
  %name119 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_link_key_request_evt.__UNIQUE_ID_ddebug617, ptr noundef nonnull @.str.179, ptr noundef %name119) #9
  br label %not_found

if.end.i.thread:                                  ; preds = %land.lhs.true96.if.end.i.thread_crit_edge, %land.lhs.true92.if.end.i.thread_crit_edge
  %17 = ptrtoint ptr %pin_len to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %pin_len, align 1
  %pin_length.i191 = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 26
  %19 = ptrtoint ptr %pin_length.i191 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %18, ptr %pin_length.i191, align 2
  %key_type2.i192 = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 22
  %20 = ptrtoint ptr %key_type2.i192 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %key_type2.i192, align 2
  br label %sw.bb4.i

if.end124:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %8)
  %cmp.i = icmp eq i8 %8, 6
  br i1 %cmp.i, label %if.end124.if.end127_crit_edge, label %if.end124.if.end.i_crit_edge

if.end124.if.end.i_crit_edge:                     ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end.i

if.end124.if.end127_crit_edge:                    ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end127

if.end.i:                                         ; preds = %if.end124.if.end.i_crit_edge, %if.then53.if.end.i_crit_edge
  %pin_len126 = getelementptr inbounds %struct.link_key, ptr %call8, i32 0, i32 5
  %21 = ptrtoint ptr %pin_len126 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %pin_len126, align 1
  %pin_length.i = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 26
  %23 = ptrtoint ptr %pin_length.i to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %22, ptr %pin_length.i, align 2
  %key_type2.i = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 22
  %24 = ptrtoint ptr %key_type2.i to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %8, ptr %key_type2.i, align 2
  %25 = zext i8 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.258)
  switch i8 %8, label %if.end.i.if.end127_crit_edge [
    i8 8, label %sw.bb15.i
    i8 5, label %sw.bb13.i
    i8 7, label %if.end.i.sw.bb11.i_crit_edge
    i8 0, label %if.end.i.sw.bb4.i_crit_edge
    i8 4, label %if.end.i.sw.bb11.i_crit_edge194
  ]

if.end.i.sw.bb11.i_crit_edge194:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb11.i

if.end.i.sw.bb4.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb4.i

if.end.i.sw.bb11.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb11.i

if.end.i.if.end127_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end127

sw.bb4.i:                                         ; preds = %if.end.i.sw.bb4.i_crit_edge, %if.end.i.thread
  %26 = phi i8 [ %18, %if.end.i.thread ], [ %22, %if.end.i.sw.bb4.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %26)
  %cmp6.i = icmp eq i8 %26, 16
  %pending_sec_level.i = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 25
  br i1 %cmp6.i, label %if.then8.i, label %if.else.i

if.then8.i:                                       ; preds = %sw.bb4.i
  call void @__sanitizer_cov_trace_pc() #11
  %27 = ptrtoint ptr %pending_sec_level.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 3, ptr %pending_sec_level.i, align 1
  br label %if.end127

if.else.i:                                        ; preds = %sw.bb4.i
  call void @__sanitizer_cov_trace_pc() #11
  %28 = ptrtoint ptr %pending_sec_level.i to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 2, ptr %pending_sec_level.i, align 1
  br label %if.end127

sw.bb11.i:                                        ; preds = %if.end.i.sw.bb11.i_crit_edge, %if.end.i.sw.bb11.i_crit_edge194
  %pending_sec_level12.i = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 25
  %29 = ptrtoint ptr %pending_sec_level12.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 2, ptr %pending_sec_level12.i, align 1
  br label %if.end127

sw.bb13.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %pending_sec_level14.i = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 25
  %30 = ptrtoint ptr %pending_sec_level14.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 3, ptr %pending_sec_level14.i, align 1
  br label %if.end127

sw.bb15.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %pending_sec_level16.i = getelementptr inbounds %struct.hci_conn, ptr %call51, i32 0, i32 25
  %31 = ptrtoint ptr %pending_sec_level16.i to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 4, ptr %pending_sec_level16.i, align 1
  br label %if.end127

if.end127:                                        ; preds = %sw.bb15.i, %sw.bb13.i, %sw.bb11.i, %if.else.i, %if.then8.i, %if.end.i.if.end127_crit_edge, %if.end124.if.end127_crit_edge, %if.then53.if.end127_crit_edge, %do.end49.if.end127_crit_edge
  %32 = call ptr @memcpy(ptr %cp, ptr %data, i32 6)
  %val = getelementptr inbounds %struct.link_key, ptr %call8, i32 0, i32 4
  %33 = call ptr @memcpy(ptr %0, ptr %val, i32 16)
  %call132 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1035, i32 noundef 22, ptr noundef nonnull %cp) #9
  call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

not_found:                                        ; preds = %if.then118, %do.body106, %if.then81, %do.body69, %if.then23, %do.body11
  %call135 = tail call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1036, i32 noundef 6, ptr noundef %data) #9
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %not_found, %if.end127, %do.end.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 22, ptr nonnull %cp) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_link_key_notify_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %persistent = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %persistent) #9
  %0 = ptrtoint ptr %persistent to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %persistent, align 1, !annotation !683
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_link_key_notify_evt.__UNIQUE_ID_ddebug618, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_link_key_notify_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_link_key_notify_evt.__UNIQUE_ID_ddebug618, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %data)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_link_key_notify_evt, %if.then.i)) #9
          to label %hci_conn_hold.exit [label %if.then.i], !srcloc !680

if.then.i:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #9
  %1 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %refcnt.i, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_hold.__UNIQUE_ID_ddebug471, ptr noundef nonnull @.str.20, ptr noundef nonnull %call3, i32 noundef %2) #9
  br label %hci_conn_hold.exit

hci_conn_hold.exit:                               ; preds = %if.then.i, %if.end6
  %refcnt4.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 1
  %call.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #9
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #9
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #9, !srcloc !682
  %disc_work.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 58
  %call5.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work.i) #9
  %disc_timeout = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 31
  %4 = ptrtoint ptr %disc_timeout to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 200, ptr %disc_timeout, align 2
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call3)
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  tail call void @_set_bit(i32 noundef 20, ptr noundef %flags) #9
  %key_type = getelementptr inbounds %struct.hci_ev_link_key_notify, ptr %data, i32 0, i32 2
  %5 = ptrtoint ptr %key_type to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %key_type, align 1
  %pin_length = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 26
  %7 = ptrtoint ptr %pin_length to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %pin_length, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %6)
  %cmp.i = icmp eq i8 %6, 6
  br i1 %cmp.i, label %hci_conn_hold.exit.conn_set_key.exit_crit_edge, label %if.end.i

hci_conn_hold.exit.conn_set_key.exit_crit_edge:   ; preds = %hci_conn_hold.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %conn_set_key.exit

if.end.i:                                         ; preds = %hci_conn_hold.exit
  %key_type2.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 22
  %9 = ptrtoint ptr %key_type2.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %6, ptr %key_type2.i, align 2
  %10 = zext i8 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.259)
  switch i8 %6, label %if.end.i.conn_set_key.exit_crit_edge [
    i8 8, label %sw.bb15.i
    i8 5, label %sw.bb13.i
    i8 7, label %if.end.i.sw.bb11.i_crit_edge
    i8 0, label %sw.bb4.i
    i8 4, label %if.end.i.sw.bb11.i_crit_edge101
  ]

if.end.i.sw.bb11.i_crit_edge101:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb11.i

if.end.i.sw.bb11.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb11.i

if.end.i.conn_set_key.exit_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %conn_set_key.exit

sw.bb4.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %8)
  %cmp6.i = icmp eq i8 %8, 16
  %pending_sec_level.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  br i1 %cmp6.i, label %if.then8.i, label %if.else.i

if.then8.i:                                       ; preds = %sw.bb4.i
  call void @__sanitizer_cov_trace_pc() #11
  %11 = ptrtoint ptr %pending_sec_level.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 3, ptr %pending_sec_level.i, align 1
  br label %conn_set_key.exit

if.else.i:                                        ; preds = %sw.bb4.i
  call void @__sanitizer_cov_trace_pc() #11
  %12 = ptrtoint ptr %pending_sec_level.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 2, ptr %pending_sec_level.i, align 1
  br label %conn_set_key.exit

sw.bb11.i:                                        ; preds = %if.end.i.sw.bb11.i_crit_edge, %if.end.i.sw.bb11.i_crit_edge101
  %pending_sec_level12.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %13 = ptrtoint ptr %pending_sec_level12.i to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 2, ptr %pending_sec_level12.i, align 1
  br label %conn_set_key.exit

sw.bb13.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %pending_sec_level14.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %14 = ptrtoint ptr %pending_sec_level14.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 3, ptr %pending_sec_level14.i, align 1
  br label %conn_set_key.exit

sw.bb15.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %pending_sec_level16.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %15 = ptrtoint ptr %pending_sec_level16.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 4, ptr %pending_sec_level16.i, align 1
  br label %conn_set_key.exit

conn_set_key.exit:                                ; preds = %sw.bb15.i, %sw.bb13.i, %sw.bb11.i, %if.else.i, %if.then8.i, %if.end.i.conn_set_key.exit_crit_edge, %hci_conn_hold.exit.conn_set_key.exit_crit_edge
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %16 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %dev_flags, align 4
  %18 = and i32 %17, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool10.not = icmp eq i32 %18, 0
  br i1 %tobool10.not, label %conn_set_key.exit.unlock_crit_edge, label %if.end12

conn_set_key.exit.unlock_crit_edge:               ; preds = %conn_set_key.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end12:                                         ; preds = %conn_set_key.exit
  %link_key = getelementptr inbounds %struct.hci_ev_link_key_notify, ptr %data, i32 0, i32 1
  %19 = ptrtoint ptr %key_type to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %key_type, align 1
  %call16 = call ptr @hci_add_link_key(ptr noundef %hdev, ptr noundef nonnull %call3, ptr noundef %data, ptr noundef %link_key, i8 noundef zeroext %20, i8 noundef zeroext 0, ptr noundef nonnull %persistent) #9
  %tobool17.not = icmp eq ptr %call16, null
  br i1 %tobool17.not, label %if.end12.unlock_crit_edge, label %if.end19

if.end12.unlock_crit_edge:                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end19:                                         ; preds = %if.end12
  %21 = ptrtoint ptr %key_type to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %key_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %22)
  %cmp = icmp eq i8 %22, 6
  br i1 %cmp, label %if.then23, label %if.end19.if.end25_crit_edge

if.end19.if.end25_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

if.then23:                                        ; preds = %if.end19
  %type = getelementptr inbounds %struct.link_key, ptr %call16, i32 0, i32 3
  %23 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %type, align 2
  %pin_len24 = getelementptr inbounds %struct.link_key, ptr %call16, i32 0, i32 5
  %25 = ptrtoint ptr %pin_len24 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %pin_len24, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %24)
  %cmp.i84 = icmp eq i8 %24, 6
  br i1 %cmp.i84, label %if.then23.if.end25_crit_edge, label %if.end.i87

if.then23.if.end25_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

if.end.i87:                                       ; preds = %if.then23
  %27 = ptrtoint ptr %pin_length to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %pin_length, align 2
  %key_type2.i86 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 22
  %28 = ptrtoint ptr %key_type2.i86 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %24, ptr %key_type2.i86, align 2
  %29 = zext i8 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.260)
  switch i8 %24, label %if.end.i87.if.end25_crit_edge [
    i8 8, label %sw.bb15.i98
    i8 5, label %sw.bb13.i96
    i8 7, label %if.end.i87.sw.bb11.i94_crit_edge
    i8 0, label %sw.bb4.i90
    i8 4, label %if.end.i87.sw.bb11.i94_crit_edge102
  ]

if.end.i87.sw.bb11.i94_crit_edge102:              ; preds = %if.end.i87
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb11.i94

if.end.i87.sw.bb11.i94_crit_edge:                 ; preds = %if.end.i87
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb11.i94

if.end.i87.if.end25_crit_edge:                    ; preds = %if.end.i87
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

sw.bb4.i90:                                       ; preds = %if.end.i87
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %26)
  %cmp6.i88 = icmp eq i8 %26, 16
  %pending_sec_level.i89 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  br i1 %cmp6.i88, label %if.then8.i91, label %if.else.i92

if.then8.i91:                                     ; preds = %sw.bb4.i90
  call void @__sanitizer_cov_trace_pc() #11
  %30 = ptrtoint ptr %pending_sec_level.i89 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 3, ptr %pending_sec_level.i89, align 1
  br label %if.end25

if.else.i92:                                      ; preds = %sw.bb4.i90
  call void @__sanitizer_cov_trace_pc() #11
  %31 = ptrtoint ptr %pending_sec_level.i89 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 2, ptr %pending_sec_level.i89, align 1
  br label %if.end25

sw.bb11.i94:                                      ; preds = %if.end.i87.sw.bb11.i94_crit_edge, %if.end.i87.sw.bb11.i94_crit_edge102
  %pending_sec_level12.i93 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %32 = ptrtoint ptr %pending_sec_level12.i93 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 2, ptr %pending_sec_level12.i93, align 1
  br label %if.end25

sw.bb13.i96:                                      ; preds = %if.end.i87
  call void @__sanitizer_cov_trace_pc() #11
  %pending_sec_level14.i95 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %33 = ptrtoint ptr %pending_sec_level14.i95 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 3, ptr %pending_sec_level14.i95, align 1
  br label %if.end25

sw.bb15.i98:                                      ; preds = %if.end.i87
  call void @__sanitizer_cov_trace_pc() #11
  %pending_sec_level16.i97 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %34 = ptrtoint ptr %pending_sec_level16.i97 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 4, ptr %pending_sec_level16.i97, align 1
  br label %if.end25

if.end25:                                         ; preds = %sw.bb15.i98, %sw.bb13.i96, %sw.bb11.i94, %if.else.i92, %if.then8.i91, %if.end.i87.if.end25_crit_edge, %if.then23.if.end25_crit_edge, %if.end19.if.end25_crit_edge
  %35 = ptrtoint ptr %persistent to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %persistent, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool26 = icmp ne i8 %36, 0
  call void @mgmt_new_link_key(ptr noundef %hdev, ptr noundef nonnull %call16, i1 noundef zeroext %tobool26) #9
  %type27 = getelementptr inbounds %struct.link_key, ptr %call16, i32 0, i32 3
  %37 = ptrtoint ptr %type27 to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %type27, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %38)
  %cmp29 = icmp eq i8 %38, 3
  br i1 %cmp29, label %land.lhs.true, label %if.end25.if.end45_crit_edge

if.end25.if.end45_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end45

land.lhs.true:                                    ; preds = %if.end25
  %39 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %dev_flags, align 4
  %41 = and i32 %40, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool34.not = icmp eq i32 %41, 0
  br i1 %tobool34.not, label %if.then35, label %land.lhs.true.if.end45_crit_edge

land.lhs.true.if.end45_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end45

if.then35:                                        ; preds = %land.lhs.true
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %call16) #9
  br i1 %call.i.i, label %if.end.i.i, label %if.then35.list_del_rcu.exit_crit_edge

if.then35.list_del_rcu.exit_crit_edge:            ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #11
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #11
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call16, i32 0, i32 1
  %42 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %prev.i.i, align 4
  %44 = ptrtoint ptr %call16 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %call16, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %43, ptr %prev1.i.i.i, align 4
  %47 = ptrtoint ptr %43 to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile ptr %45, ptr %43, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.then35.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call16, i32 0, i32 1
  %48 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %rcu = getelementptr inbounds %struct.link_key, ptr %call16, i32 0, i32 1
  call void @kvfree_call_rcu(ptr noundef %rcu, ptr noundef nonnull inttoptr (i32 8 to ptr)) #9
  br label %unlock

if.end45:                                         ; preds = %land.lhs.true.if.end45_crit_edge, %if.end25.if.end45_crit_edge
  %49 = ptrtoint ptr %persistent to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %persistent, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool46.not = icmp eq i8 %50, 0
  br i1 %tobool46.not, label %if.else, label %if.then47

if.then47:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #11
  call void @_clear_bit(i32 noundef 11, ptr noundef %flags) #9
  br label %unlock

if.else:                                          ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #11
  call void @_set_bit(i32 noundef 11, ptr noundef %flags) #9
  br label %unlock

unlock:                                           ; preds = %if.else, %if.then47, %list_del_rcu.exit, %if.end12.unlock_crit_edge, %conn_set_key.exit.unlock_crit_edge, %do.end.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %persistent) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_clock_offset_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_clock_offset_evt.__UNIQUE_ID_ddebug620, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_clock_offset_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_clock_offset_evt.__UNIQUE_ID_ddebug620, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_clock_offset, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.if.end14_crit_edge, label %land.lhs.true

do.end.if.end14_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end14

land.lhs.true:                                    ; preds = %do.end
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool6.not = icmp eq i8 %6, 0
  br i1 %tobool6.not, label %if.then7, label %land.lhs.true.if.end14_crit_edge

land.lhs.true.if.end14_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end14

if.then7:                                         ; preds = %land.lhs.true
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 2
  %call8 = tail call ptr @hci_inquiry_cache_lookup(ptr noundef %hdev, ptr noundef %dst) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.then7.if.end14_crit_edge, label %if.then10

if.then7.if.end14_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end14

if.then10:                                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #11
  %clock_offset = getelementptr inbounds %struct.hci_ev_clock_offset, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %clock_offset to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %clock_offset, align 1
  %clock_offset12 = getelementptr inbounds %struct.inquiry_entry, ptr %call8, i32 0, i32 4, i32 5
  %9 = ptrtoint ptr %clock_offset12 to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %8, ptr %clock_offset12, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %10 = load volatile i32, ptr @jiffies, align 128
  %timestamp = getelementptr inbounds %struct.inquiry_entry, ptr %call8, i32 0, i32 3
  %11 = ptrtoint ptr %timestamp to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %timestamp, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.then10, %if.then7.if.end14_crit_edge, %land.lhs.true.if.end14_crit_edge, %do.end.if.end14_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_pkt_type_change_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_pkt_type_change_evt.__UNIQUE_ID_ddebug621, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_pkt_type_change_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_pkt_type_change_evt.__UNIQUE_ID_ddebug621, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_pkt_type_change, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.if.end9_crit_edge, label %land.lhs.true

do.end.if.end9_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end9

land.lhs.true:                                    ; preds = %do.end
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool6.not = icmp eq i8 %6, 0
  br i1 %tobool6.not, label %if.then7, label %land.lhs.true.if.end9_crit_edge

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end9

if.then7:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %pkt_type = getelementptr inbounds %struct.hci_ev_pkt_type_change, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %pkt_type to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %pkt_type, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8)
  %pkt_type8 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 20
  %10 = ptrtoint ptr %pkt_type8 to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %pkt_type8, align 2
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %land.lhs.true.if.end9_crit_edge, %do.end.if.end9_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_pscan_rep_mode_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_pscan_rep_mode_evt.__UNIQUE_ID_ddebug622, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_pscan_rep_mode_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_pscan_rep_mode_evt.__UNIQUE_ID_ddebug622, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call3 = tail call ptr @hci_inquiry_cache_lookup(ptr noundef %hdev, ptr noundef %data) #9
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.if.end8_crit_edge, label %if.then5

do.end.if.end8_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end8

if.then5:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %pscan_rep_mode = getelementptr inbounds %struct.hci_ev_pscan_rep_mode, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %pscan_rep_mode to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pscan_rep_mode, align 1
  %pscan_rep_mode7 = getelementptr inbounds %struct.inquiry_entry, ptr %call3, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %pscan_rep_mode7 to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %1, ptr %pscan_rep_mode7, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %3 = load volatile i32, ptr @jiffies, align 128
  %timestamp = getelementptr inbounds %struct.inquiry_entry, ptr %call3, i32 0, i32 3
  %4 = ptrtoint ptr %timestamp to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %timestamp, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %do.end.if.end8_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_inquiry_result_with_rssi_evt(ptr noundef %hdev, ptr nocapture noundef readonly %edata, ptr noundef %skb) #0 align 64 {
entry:
  %data = alloca %struct.inquiry_data, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %data) #9
  %0 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 1
  %1 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 2
  %2 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 3
  %3 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 4
  %4 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 5
  %5 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 6
  %6 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 7
  %7 = call ptr @memset(ptr %data, i32 255, i32 16)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_inquiry_result_with_rssi_evt.__UNIQUE_ID_ddebug623, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_inquiry_result_with_rssi_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %8 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %edata, align 1
  %conv = zext i8 %9 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_inquiry_result_with_rssi_evt.__UNIQUE_ID_ddebug623, ptr noundef nonnull @.str.185, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %10 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %edata, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool4.not = icmp eq i8 %11, 0
  br i1 %tobool4.not, label %do.end.cleanup101_crit_edge, label %if.end6

do.end.cleanup101_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup101

if.end6:                                          ; preds = %do.end
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %12 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %dev_flags, align 4
  %14 = and i32 %13, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool9.not = icmp eq i32 %14, 0
  br i1 %tobool9.not, label %if.end11, label %if.end6.cleanup101_crit_edge

if.end6.cleanup101_crit_edge:                     ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup101

if.end11:                                         ; preds = %if.end6
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %15 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %len, align 4
  %17 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %edata, align 1
  %conv13 = zext i8 %18 to i32
  %19 = mul nuw nsw i32 %conv13, 15
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %19)
  %cmp = icmp eq i32 %16, %19
  br i1 %cmp, label %for.cond.preheader, label %if.else

for.cond.preheader:                               ; preds = %if.end11
  %20 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %edata, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %cmp19169.not = icmp eq i8 %21, 0
  br i1 %cmp19169.not, label %for.cond.preheader.if.end99_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end99_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end99

for.body:                                         ; preds = %if.end26.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0170 = phi i32 [ %inc, %if.end26.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %call.i = call ptr @skb_pull_data(ptr noundef %skb, i32 noundef 15) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then23, label %if.end26

if.then23:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.242, ptr noundef %name.i, i32 noundef 34) #9
  call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.186, ptr noundef %name.i, i32 noundef 34) #9
  br label %cleanup101

if.end26:                                         ; preds = %for.body
  %22 = call ptr @memcpy(ptr %data, ptr %call.i, i32 6)
  %pscan_rep_mode = getelementptr inbounds %struct.inquiry_info_rssi_pscan, ptr %call.i, i32 0, i32 1
  %23 = ptrtoint ptr %pscan_rep_mode to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %pscan_rep_mode, align 1
  %25 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %24, ptr %0, align 2
  %pscan_period_mode = getelementptr inbounds %struct.inquiry_info_rssi_pscan, ptr %call.i, i32 0, i32 2
  %26 = ptrtoint ptr %pscan_period_mode to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %pscan_period_mode, align 1
  %28 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %27, ptr %1, align 1
  %pscan_mode = getelementptr inbounds %struct.inquiry_info_rssi_pscan, ptr %call.i, i32 0, i32 3
  %29 = ptrtoint ptr %pscan_mode to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %pscan_mode, align 1
  %31 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %30, ptr %2, align 2
  %dev_class32 = getelementptr inbounds %struct.inquiry_info_rssi_pscan, ptr %call.i, i32 0, i32 4
  %32 = call ptr @memcpy(ptr %3, ptr %dev_class32, i32 3)
  %clock_offset = getelementptr inbounds %struct.inquiry_info_rssi_pscan, ptr %call.i, i32 0, i32 5
  %33 = ptrtoint ptr %clock_offset to i32
  call void @__asan_loadN_noabort(i32 %33, i32 2)
  %34 = load i16, ptr %clock_offset, align 1
  %35 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %4, align 2
  %rssi = getelementptr inbounds %struct.inquiry_info_rssi_pscan, ptr %call.i, i32 0, i32 6
  %36 = ptrtoint ptr %rssi to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %rssi, align 1
  %38 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %37, ptr %5, align 2
  %39 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 0, ptr %6, align 1
  %call36 = call i32 @hci_inquiry_cache_update(ptr noundef %hdev, ptr noundef nonnull %data, i1 noundef zeroext false) #9
  %40 = ptrtoint ptr %rssi to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %rssi, align 1
  call void @mgmt_device_found(ptr noundef %hdev, ptr noundef nonnull %call.i, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %dev_class32, i8 noundef signext %41, i32 noundef %call36, ptr noundef null, i16 noundef zeroext 0, ptr noundef null, i8 noundef zeroext 0) #9
  %inc = add nuw nsw i32 %i.0170, 1
  %42 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %edata, align 1
  %conv18 = zext i8 %43 to i32
  %cmp19 = icmp ult i32 %inc, %conv18
  br i1 %cmp19, label %if.end26.for.body_crit_edge, label %if.end26.if.end99_crit_edge

if.end26.if.end99_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end99

if.end26.for.body_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

if.else:                                          ; preds = %if.end11
  %44 = mul nuw nsw i32 %conv13, 14
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %44)
  %cmp48 = icmp eq i32 %16, %44
  br i1 %cmp48, label %for.cond52.preheader, label %if.else95

for.cond52.preheader:                             ; preds = %if.else
  %45 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %edata, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %cmp55166.not = icmp eq i8 %46, 0
  br i1 %cmp55166.not, label %for.cond52.preheader.if.end99_crit_edge, label %for.cond52.preheader.for.body57_crit_edge

for.cond52.preheader.for.body57_crit_edge:        ; preds = %for.cond52.preheader
  br label %for.body57

for.cond52.preheader.if.end99_crit_edge:          ; preds = %for.cond52.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end99

for.body57:                                       ; preds = %if.end64.for.body57_crit_edge, %for.cond52.preheader.for.body57_crit_edge
  %i.1167 = phi i32 [ %inc90, %if.end64.for.body57_crit_edge ], [ 0, %for.cond52.preheader.for.body57_crit_edge ]
  %call.i158 = call ptr @skb_pull_data(ptr noundef %skb, i32 noundef 14) #9
  %tobool.not.i159 = icmp eq ptr %call.i158, null
  br i1 %tobool.not.i159, label %if.then61, label %if.end64

if.then61:                                        ; preds = %for.body57
  call void @__sanitizer_cov_trace_pc() #11
  %name.i160 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.242, ptr noundef %name.i160, i32 noundef 34) #9
  call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.186, ptr noundef %name.i160, i32 noundef 34) #9
  br label %cleanup101

if.end64:                                         ; preds = %for.body57
  %47 = call ptr @memcpy(ptr %data, ptr %call.i158, i32 6)
  %pscan_rep_mode67 = getelementptr inbounds %struct.inquiry_info_rssi, ptr %call.i158, i32 0, i32 1
  %48 = ptrtoint ptr %pscan_rep_mode67 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %pscan_rep_mode67, align 1
  %50 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %49, ptr %0, align 2
  %pscan_period_mode69 = getelementptr inbounds %struct.inquiry_info_rssi, ptr %call.i158, i32 0, i32 2
  %51 = ptrtoint ptr %pscan_period_mode69 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %pscan_period_mode69, align 1
  %53 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %52, ptr %1, align 1
  %54 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 0, ptr %2, align 2
  %dev_class74 = getelementptr inbounds %struct.inquiry_info_rssi, ptr %call.i158, i32 0, i32 3
  %55 = call ptr @memcpy(ptr %3, ptr %dev_class74, i32 3)
  %clock_offset76 = getelementptr inbounds %struct.inquiry_info_rssi, ptr %call.i158, i32 0, i32 4
  %56 = ptrtoint ptr %clock_offset76 to i32
  call void @__asan_loadN_noabort(i32 %56, i32 2)
  %57 = load i16, ptr %clock_offset76, align 1
  %58 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %57, ptr %4, align 2
  %rssi78 = getelementptr inbounds %struct.inquiry_info_rssi, ptr %call.i158, i32 0, i32 5
  %59 = ptrtoint ptr %rssi78 to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %rssi78, align 1
  %61 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %60, ptr %5, align 2
  %62 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 0, ptr %6, align 1
  %call81 = call i32 @hci_inquiry_cache_update(ptr noundef %hdev, ptr noundef nonnull %data, i1 noundef zeroext false) #9
  %63 = ptrtoint ptr %rssi78 to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %rssi78, align 1
  call void @mgmt_device_found(ptr noundef %hdev, ptr noundef nonnull %call.i158, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %dev_class74, i8 noundef signext %64, i32 noundef %call81, ptr noundef null, i16 noundef zeroext 0, ptr noundef null, i8 noundef zeroext 0) #9
  %inc90 = add nuw nsw i32 %i.1167, 1
  %65 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %edata, align 1
  %conv54 = zext i8 %66 to i32
  %cmp55 = icmp ult i32 %inc90, %conv54
  br i1 %cmp55, label %if.end64.for.body57_crit_edge, label %if.end64.if.end99_crit_edge

if.end64.if.end99_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end99

if.end64.for.body57_crit_edge:                    ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body57

if.else95:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %name96 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.186, ptr noundef %name96, i32 noundef 34) #9
  br label %if.end99

if.end99:                                         ; preds = %if.else95, %if.end64.if.end99_crit_edge, %for.cond52.preheader.if.end99_crit_edge, %if.end26.if.end99_crit_edge, %for.cond.preheader.if.end99_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup101

cleanup101:                                       ; preds = %if.end99, %if.then61, %if.then23, %if.end6.cleanup101_crit_edge, %do.end.cleanup101_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %data) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_remote_ext_features_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_remote_name_req, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_remote_ext_features_evt.__UNIQUE_ID_ddebug624, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_remote_ext_features_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_remote_ext_features_evt.__UNIQUE_ID_ddebug624, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_remote_ext_features, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  %page = getelementptr inbounds %struct.hci_ev_remote_ext_features, ptr %data, i32 0, i32 2
  %5 = ptrtoint ptr %page to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %page, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %6)
  %cmp = icmp ult i8 %6, 3
  br i1 %cmp, label %if.then9, label %if.end6.if.end14_crit_edge

if.end6.if.end14_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end14

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %conv7 = zext i8 %6 to i32
  %arrayidx = getelementptr %struct.hci_conn, ptr %call3, i32 0, i32 19, i32 %conv7
  %features12 = getelementptr inbounds %struct.hci_ev_remote_ext_features, ptr %data, i32 0, i32 4
  %7 = ptrtoint ptr %features12 to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %8 = load i64, ptr %features12, align 1
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_storeN_noabort(i32 %9, i32 8)
  store i64 %8, ptr %arrayidx, align 2
  br label %if.end14

if.end14:                                         ; preds = %if.then9, %if.end6.if.end14_crit_edge
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool16.not = icmp eq i8 %11, 0
  br i1 %tobool16.not, label %land.lhs.true, label %if.end14.if.end47_crit_edge

if.end14.if.end47_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end47

land.lhs.true:                                    ; preds = %if.end14
  %12 = ptrtoint ptr %page to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %page, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %13)
  %cmp19 = icmp eq i8 %13, 1
  br i1 %cmp19, label %if.then21, label %land.lhs.true.if.end47_crit_edge

land.lhs.true.if.end47_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end47

if.then21:                                        ; preds = %land.lhs.true
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 2
  %call22 = tail call ptr @hci_inquiry_cache_lookup(ptr noundef %hdev, ptr noundef %dst) #9
  %tobool23.not = icmp eq ptr %call22, null
  br i1 %tobool23.not, label %if.then21.if.end30_crit_edge, label %if.then24

if.then21.if.end30_crit_edge:                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end30

if.then24:                                        ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #11
  %features25 = getelementptr inbounds %struct.hci_ev_remote_ext_features, ptr %data, i32 0, i32 4
  %14 = ptrtoint ptr %features25 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %features25, align 1
  %16 = and i8 %15, 1
  %ssp_mode = getelementptr inbounds %struct.inquiry_entry, ptr %call22, i32 0, i32 4, i32 7
  %17 = ptrtoint ptr %ssp_mode to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %ssp_mode, align 1
  br label %if.end30

if.end30:                                         ; preds = %if.then24, %if.then21.if.end30_crit_edge
  %features31 = getelementptr inbounds %struct.hci_ev_remote_ext_features, ptr %data, i32 0, i32 4
  %18 = ptrtoint ptr %features31 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %features31, align 1
  %20 = and i8 %19, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool35.not = icmp eq i8 %20, 0
  %flags37 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  br i1 %tobool35.not, label %if.else, label %if.then36

if.then36:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 7, ptr noundef %flags37) #9
  br label %if.end38

if.else:                                          ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %flags37) #9
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then36
  %21 = ptrtoint ptr %features31 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %features31, align 1
  %23 = and i8 %22, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool43.not = icmp eq i8 %23, 0
  br i1 %tobool43.not, label %if.end38.if.end47_crit_edge, label %if.then44

if.end38.if.end47_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end47

if.then44:                                        ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #11
  %flags45 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  tail call void @_set_bit(i32 noundef 8, ptr noundef %flags45) #9
  br label %if.end47

if.end47:                                         ; preds = %if.then44, %if.end38.if.end47_crit_edge, %land.lhs.true.if.end47_crit_edge, %if.end14.if.end47_crit_edge
  %state = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 12
  %24 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %25)
  %cmp49.not = icmp eq i16 %25, 7
  br i1 %cmp49.not, label %if.end52, label %if.end47.unlock_crit_edge

if.end47.unlock_crit_edge:                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end52:                                         ; preds = %if.end47
  %26 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool54.not = icmp eq i8 %27, 0
  br i1 %tobool54.not, label %land.lhs.true55, label %if.end52.if.else62_crit_edge

if.end52.if.else62_crit_edge:                     ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else62

land.lhs.true55:                                  ; preds = %if.end52
  %flags56 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %28 = ptrtoint ptr %flags56 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %flags56, align 4
  %30 = and i32 %29, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool58.not = icmp eq i32 %30, 0
  br i1 %tobool58.not, label %if.then59, label %land.lhs.true55.if.else62_crit_edge

land.lhs.true55.if.else62_crit_edge:              ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else62

if.then59:                                        ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %cp) #9
  %31 = getelementptr inbounds %struct.hci_cp_remote_name_req, ptr %cp, i32 0, i32 1
  %dst60 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 2
  %32 = getelementptr inbounds i8, ptr %cp, i32 7
  %33 = call ptr @memset(ptr %32, i32 0, i32 3)
  %34 = call ptr @memcpy(ptr %cp, ptr %dst60, i32 6)
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 2, ptr %31, align 1
  %call61 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1049, i32 noundef 10, ptr noundef nonnull %cp) #9
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %cp) #9
  br label %if.end68

if.else62:                                        ; preds = %land.lhs.true55.if.else62_crit_edge, %if.end52.if.else62_crit_edge
  %flags63 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %call64 = tail call i32 @_test_and_set_bit(i32 noundef 6, ptr noundef %flags63) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %if.then66, label %if.else62.if.end68_crit_edge

if.else62.if.end68_crit_edge:                     ; preds = %if.else62
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end68

if.then66:                                        ; preds = %if.else62
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @mgmt_device_connected(ptr noundef %hdev, ptr noundef nonnull %call3, ptr noundef null, i8 noundef zeroext 0) #9
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %if.else62.if.end68_crit_edge, %if.then59
  %36 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %37)
  %cmp.not.i = icmp eq i16 %37, 7
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %if.end68.if.then71_crit_edge

if.end68.if.then71_crit_edge:                     ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then71

lor.lhs.false.i:                                  ; preds = %if.end68
  %out.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 16
  %38 = ptrtoint ptr %out.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %out.i, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool.not.i = icmp eq i8 %39, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i.if.then71_crit_edge, label %if.end.i

lor.lhs.false.i.if.then71_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then71

if.end.i:                                         ; preds = %lor.lhs.false.i
  %pending_sec_level.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 25
  %40 = ptrtoint ptr %pending_sec_level.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %pending_sec_level.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %cmp3.i = icmp eq i8 %41, 0
  br i1 %cmp3.i, label %if.end.i.if.then71_crit_edge, label %if.end6.i

if.end.i.if.then71_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then71

if.end6.i:                                        ; preds = %if.end.i
  %hdev1.i.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 65
  %42 = ptrtoint ptr %hdev1.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hdev1.i.i, align 4
  %dev_flags.i.i = getelementptr inbounds %struct.hci_dev, ptr %43, i32 0, i32 206
  %44 = ptrtoint ptr %dev_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %dev_flags.i.i, align 4
  %46 = and i32 %45, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i.i = icmp eq i32 %46, 0
  br i1 %tobool.not.i.i, label %if.end6.i.land.lhs.true.i_crit_edge, label %hci_conn_ssp_enabled.exit.i

if.end6.i.land.lhs.true.i_crit_edge:              ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

hci_conn_ssp_enabled.exit.i:                      ; preds = %if.end6.i
  %flags.i.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %47 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %flags.i.i, align 4
  %49 = and i32 %48, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool3.i.not.i = icmp eq i32 %49, 0
  br i1 %tobool3.i.not.i, label %hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge, label %hci_conn_ssp_enabled.exit.i.unlock_crit_edge

hci_conn_ssp_enabled.exit.i.unlock_crit_edge:     ; preds = %hci_conn_ssp_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge: ; preds = %hci_conn_ssp_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge, %if.end6.i.land.lhs.true.i_crit_edge
  %auth_type.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 23
  %50 = ptrtoint ptr %auth_type.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %auth_type.i, align 1
  %52 = and i8 %51, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool8.not.i = icmp ne i8 %52, 0
  %.off.i = add i8 %41, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %.off.i)
  %switch.i = icmp ult i8 %.off.i, 3
  %or.cond.i = select i1 %tobool8.not.i, i1 true, i1 %switch.i
  br i1 %or.cond.i, label %land.lhs.true.i.unlock_crit_edge, label %land.lhs.true.i.if.then71_crit_edge

land.lhs.true.i.if.then71_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then71

land.lhs.true.i.unlock_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then71:                                        ; preds = %land.lhs.true.i.if.then71_crit_edge, %if.end.i.if.then71_crit_edge, %lor.lhs.false.i.if.then71_crit_edge, %if.end68.if.then71_crit_edge
  %53 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 1, ptr %state, align 4
  %54 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %data, align 1
  call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then71.for.end.i_crit_edge, label %if.then71.for.body.i_crit_edge

if.then71.for.body.i_crit_edge:                   ; preds = %if.then71
  br label %for.body.i

if.then71.for.end.i_crit_edge:                    ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then71.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then71.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %56 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i110 = icmp eq ptr %57, null
  br i1 %tobool.not.i110, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %57(ptr noundef nonnull %call3, i8 noundef zeroext %55) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %58 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i111 = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i111, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then71.for.end.i_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 71
  %59 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %60, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  call void %60(ptr noundef nonnull %call3, i8 noundef zeroext %55) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  call fastcc void @hci_conn_drop(ptr noundef nonnull %call3)
  br label %unlock

unlock:                                           ; preds = %hci_connect_cfm.exit, %land.lhs.true.i.unlock_crit_edge, %hci_conn_ssp_enabled.exit.i.unlock_crit_edge, %if.end47.unlock_crit_edge, %do.end.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_sync_conn_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_sync_conn_complete_evt.__UNIQUE_ID_ddebug625, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_sync_conn_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_sync_conn_complete_evt.__UNIQUE_ID_ddebug625, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %link_type = getelementptr inbounds %struct.hci_ev_sync_conn_complete, ptr %data, i32 0, i32 3
  %2 = ptrtoint ptr %link_type to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %link_type, align 1
  %bdaddr = getelementptr inbounds %struct.hci_ev_sync_conn_complete, ptr %data, i32 0, i32 2
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext %3, ptr noundef %bdaddr)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.then5, label %do.end.if.end16_crit_edge

do.end.if.end16_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16

if.then5:                                         ; preds = %do.end
  %4 = ptrtoint ptr %link_type to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %link_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %5)
  %cmp = icmp eq i8 %5, 2
  br i1 %cmp, label %if.then5.unlock_crit_edge, label %if.end10

if.then5.unlock_crit_edge:                        ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end10:                                         ; preds = %if.then5
  %call12 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 2, ptr noundef %bdaddr)
  %tobool13.not = icmp eq ptr %call12, null
  br i1 %tobool13.not, label %if.end10.unlock_crit_edge, label %if.end10.if.end16_crit_edge

if.end10.if.end16_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16

if.end10.unlock_crit_edge:                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end16:                                         ; preds = %if.end10.if.end16_crit_edge, %do.end.if.end16_crit_edge
  %conn.0 = phi ptr [ %call3, %do.end.if.end16_crit_edge ], [ %call12, %if.end10.if.end16_crit_edge ]
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  %8 = zext i8 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.261)
  switch i8 %7, label %if.end16.sw.default_crit_edge [
    i8 0, label %sw.bb
    i8 16, label %if.end16.sw.bb29_crit_edge
    i8 13, label %if.end16.sw.bb29_crit_edge126
    i8 17, label %if.end16.sw.bb29_crit_edge127
    i8 28, label %if.end16.sw.bb29_crit_edge128
    i8 26, label %if.end16.sw.bb29_crit_edge129
    i8 30, label %if.end16.sw.bb29_crit_edge130
    i8 31, label %if.end16.sw.bb29_crit_edge131
    i8 32, label %if.end16.sw.bb29_crit_edge132
  ]

if.end16.sw.bb29_crit_edge132:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb29

if.end16.sw.bb29_crit_edge131:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb29

if.end16.sw.bb29_crit_edge130:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb29

if.end16.sw.bb29_crit_edge129:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb29

if.end16.sw.bb29_crit_edge128:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb29

if.end16.sw.bb29_crit_edge127:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb29

if.end16.sw.bb29_crit_edge126:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb29

if.end16.sw.bb29_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb29

if.end16.sw.default_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.default

sw.bb:                                            ; preds = %if.end16
  %state = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 12
  %9 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %10)
  %cmp20 = icmp eq i16 %10, 1
  br i1 %cmp20, label %if.then22, label %if.end25

if.then22:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  %name23 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.189, ptr noundef %name23) #9
  br label %unlock

if.end25:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  %handle = getelementptr inbounds %struct.hci_ev_sync_conn_complete, ptr %data, i32 0, i32 1
  %11 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %11, i32 2)
  %12 = load i16, ptr %handle, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12)
  %handle26 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 11
  %14 = ptrtoint ptr %handle26 to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %handle26, align 2
  %15 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 1, ptr %state, align 4
  %16 = ptrtoint ptr %link_type to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %link_type, align 1
  %type = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 14
  %18 = ptrtoint ptr %type to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %type, align 1
  tail call void @hci_debugfs_create_conn(ptr noundef nonnull %conn.0) #9
  tail call void @hci_conn_add_sysfs(ptr noundef nonnull %conn.0) #9
  br label %do.body43

sw.bb29:                                          ; preds = %if.end16.sw.bb29_crit_edge, %if.end16.sw.bb29_crit_edge126, %if.end16.sw.bb29_crit_edge127, %if.end16.sw.bb29_crit_edge128, %if.end16.sw.bb29_crit_edge129, %if.end16.sw.bb29_crit_edge130, %if.end16.sw.bb29_crit_edge131, %if.end16.sw.bb29_crit_edge132
  %out = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 16
  %19 = ptrtoint ptr %out to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %out, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool30.not = icmp eq i8 %20, 0
  br i1 %tobool30.not, label %sw.bb29.sw.default_crit_edge, label %if.then31

sw.bb29.sw.default_crit_edge:                     ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.default

if.then31:                                        ; preds = %sw.bb29
  %esco_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 99
  %21 = ptrtoint ptr %esco_type to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %esco_type, align 2
  %23 = and i16 %22, 967
  %pkt_type = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 20
  %24 = ptrtoint ptr %pkt_type to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %23, ptr %pkt_type, align 2
  %link = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 69
  %25 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %link, align 4
  %handle37 = getelementptr inbounds %struct.hci_conn, ptr %26, i32 0, i32 11
  %27 = ptrtoint ptr %handle37 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %handle37, align 2
  %call38 = tail call zeroext i1 @hci_setup_sync(ptr noundef nonnull %conn.0, i16 noundef zeroext %28) #9
  br i1 %call38, label %if.then31.unlock_crit_edge, label %if.then31.sw.default_crit_edge

if.then31.sw.default_crit_edge:                   ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.default

if.then31.unlock_crit_edge:                       ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

sw.default:                                       ; preds = %if.then31.sw.default_crit_edge, %sw.bb29.sw.default_crit_edge, %if.end16.sw.default_crit_edge
  %state42 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 12
  %29 = ptrtoint ptr %state42 to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 9, ptr %state42, align 4
  br label %do.body43

do.body43:                                        ; preds = %sw.default, %if.end25
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_sync_conn_complete_evt.__UNIQUE_ID_ddebug626, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_sync_conn_complete_evt, %if.then55)) #9
          to label %do.end61 [label %if.then55], !srcloc !680

if.then55:                                        ; preds = %do.body43
  call void @__sanitizer_cov_trace_pc() #11
  %name56 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %air_mode = getelementptr inbounds %struct.hci_ev_sync_conn_complete, ptr %data, i32 0, i32 8
  %30 = ptrtoint ptr %air_mode to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %air_mode, align 1
  %conv58 = zext i8 %31 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_sync_conn_complete_evt.__UNIQUE_ID_ddebug626, ptr noundef nonnull @.str.190, ptr noundef %name56, i32 noundef %conv58) #9
  br label %do.end61

do.end61:                                         ; preds = %if.then55, %do.body43
  %data_path = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 70, i32 3
  %32 = ptrtoint ptr %data_path to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %data_path, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %cmp63 = icmp eq i8 %33, 0
  br i1 %cmp63, label %land.lhs.true, label %do.end61.if.end74_crit_edge

do.end61.if.end74_crit_edge:                      ; preds = %do.end61
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end74

land.lhs.true:                                    ; preds = %do.end61
  %notify = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 238
  %34 = ptrtoint ptr %notify to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %notify, align 8
  %tobool65.not = icmp eq ptr %35, null
  br i1 %tobool65.not, label %land.lhs.true.if.end74_crit_edge, label %if.then66

land.lhs.true.if.end74_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end74

if.then66:                                        ; preds = %land.lhs.true
  %air_mode67 = getelementptr inbounds %struct.hci_ev_sync_conn_complete, ptr %data, i32 0, i32 8
  %36 = ptrtoint ptr %air_mode67 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %air_mode67, align 1
  %38 = zext i8 %37 to i64
  call void @__sanitizer_cov_trace_switch(i64 %38, ptr @__sancov_gen_cov_switch_values.262)
  switch i8 %37, label %if.then66.if.end74_crit_edge [
    i8 2, label %if.then66.if.end74.sink.split_crit_edge
    i8 3, label %sw.bb71
  ]

if.then66.if.end74.sink.split_crit_edge:          ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end74.sink.split

if.then66.if.end74_crit_edge:                     ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end74

sw.bb71:                                          ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end74.sink.split

if.end74.sink.split:                              ; preds = %sw.bb71, %if.then66.if.end74.sink.split_crit_edge
  %.sink = phi i32 [ 5, %sw.bb71 ], [ 4, %if.then66.if.end74.sink.split_crit_edge ]
  tail call void %35(ptr noundef %hdev, i32 noundef %.sink) #9
  br label %if.end74

if.end74:                                         ; preds = %if.end74.sink.split, %if.then66.if.end74_crit_edge, %land.lhs.true.if.end74_crit_edge, %do.end61.if.end74_crit_edge
  %39 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %data, align 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.end74.for.end.i_crit_edge, label %if.end74.for.body.i_crit_edge

if.end74.for.body.i_crit_edge:                    ; preds = %if.end74
  br label %for.body.i

if.end74.for.end.i_crit_edge:                     ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end74.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.end74.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %41 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %42, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %42(ptr noundef %conn.0, i8 noundef zeroext %40) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %43 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end74.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 71
  %44 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %45, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %45(ptr noundef %conn.0, i8 noundef zeroext %40) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  %46 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool77.not = icmp eq i8 %47, 0
  br i1 %tobool77.not, label %hci_connect_cfm.exit.unlock_crit_edge, label %if.then78

hci_connect_cfm.exit.unlock_crit_edge:            ; preds = %hci_connect_cfm.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then78:                                        ; preds = %hci_connect_cfm.exit
  call void @__sanitizer_cov_trace_pc() #11
  %call79 = tail call i32 @hci_conn_del(ptr noundef %conn.0) #9
  br label %unlock

unlock:                                           ; preds = %if.then78, %hci_connect_cfm.exit.unlock_crit_edge, %if.then31.unlock_crit_edge, %if.then22, %if.end10.unlock_crit_edge, %if.then5.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_extended_inquiry_result_evt(ptr noundef %hdev, ptr noundef %edata, ptr noundef %skb) #0 align 64 {
entry:
  %data = alloca %struct.inquiry_data, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %data) #9
  %0 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 1
  %1 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 2
  %2 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 3
  %3 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 4
  %4 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 5
  %5 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 6
  %6 = getelementptr inbounds %struct.inquiry_data, ptr %data, i32 0, i32 7
  %7 = call ptr @memset(ptr %data, i32 255, i32 16)
  %8 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %edata, align 1
  %conv = zext i8 %9 to i32
  %10 = mul nuw nsw i32 %conv, 254
  %call.i = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %10) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %hci_ev_skb_pull.exit.thread, label %do.body

hci_ev_skb_pull.exit.thread:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.242, ptr noundef %name.i, i32 noundef 47) #9
  br label %cleanup

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_extended_inquiry_result_evt.__UNIQUE_ID_ddebug627, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_extended_inquiry_result_evt, %if.then6)) #9
          to label %do.end [label %if.then6], !srcloc !680

if.then6:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %11 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %edata, align 1
  %conv8 = zext i8 %12 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_extended_inquiry_result_evt.__UNIQUE_ID_ddebug627, ptr noundef nonnull @.str.11, ptr noundef %name, i32 noundef %conv8) #9
  br label %do.end

do.end:                                           ; preds = %if.then6, %do.body
  %13 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %edata, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool11.not = icmp eq i8 %14, 0
  br i1 %tobool11.not, label %do.end.cleanup_crit_edge, label %if.end13

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end13:                                         ; preds = %do.end
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %15 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %dev_flags, align 4
  %17 = and i32 %16, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool16.not = icmp eq i32 %17, 0
  br i1 %tobool16.not, label %if.end18, label %if.end13.cleanup_crit_edge

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end18:                                         ; preds = %if.end13
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %18 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %edata, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp95.not = icmp eq i8 %19, 0
  br i1 %cmp95.not, label %if.end18.for.end_crit_edge, label %if.end18.for.body_crit_edge

if.end18.for.body_crit_edge:                      ; preds = %if.end18
  br label %for.body

if.end18.for.end_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body:                                         ; preds = %eir_get_length.exit.for.body_crit_edge, %if.end18.for.body_crit_edge
  %i.096 = phi i32 [ %inc, %eir_get_length.exit.for.body_crit_edge ], [ 0, %if.end18.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hci_ev_ext_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.096
  %20 = call ptr @memcpy(ptr %data, ptr %arrayidx, i32 6)
  %pscan_rep_mode = getelementptr %struct.hci_ev_ext_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.096, i32 1
  %21 = ptrtoint ptr %pscan_rep_mode to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %pscan_rep_mode, align 1
  %23 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %22, ptr %0, align 2
  %pscan_period_mode = getelementptr %struct.hci_ev_ext_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.096, i32 2
  %24 = ptrtoint ptr %pscan_period_mode to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %pscan_period_mode, align 1
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 %25, ptr %1, align 1
  %27 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %2, align 2
  %dev_class27 = getelementptr %struct.hci_ev_ext_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.096, i32 3
  %28 = call ptr @memcpy(ptr %3, ptr %dev_class27, i32 3)
  %clock_offset = getelementptr %struct.hci_ev_ext_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.096, i32 4
  %29 = ptrtoint ptr %clock_offset to i32
  call void @__asan_loadN_noabort(i32 %29, i32 2)
  %30 = load i16, ptr %clock_offset, align 1
  %31 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %30, ptr %4, align 2
  %rssi = getelementptr %struct.hci_ev_ext_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.096, i32 5
  %32 = ptrtoint ptr %rssi to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %rssi, align 1
  %34 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %33, ptr %5, align 2
  %35 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 1, ptr %6, align 1
  %36 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %dev_flags, align 4
  %38 = and i32 %37, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool34.not = icmp eq i32 %38, 0
  br i1 %tobool34.not, label %for.body.if.end41_crit_edge, label %if.then35

for.body.if.end41_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end41

if.then35:                                        ; preds = %for.body
  %data36 = getelementptr %struct.hci_ev_ext_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.096, i32 6
  br label %while.body.i

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %if.then35
  %parsed.012.i = phi i32 [ 0, %if.then35 ], [ %add7.i, %cleanup.i.while.body.i_crit_edge ]
  %eir.addr.011.i = phi ptr [ %data36, %if.then35 ], [ %add.ptr.i, %cleanup.i.while.body.i_crit_edge ]
  %39 = ptrtoint ptr %eir.addr.011.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %eir.addr.011.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %cmp2.i = icmp eq i8 %40, 0
  br i1 %cmp2.i, label %while.body.i.eir_get_data.exit_crit_edge, label %if.end5.i

while.body.i.eir_get_data.exit_crit_edge:         ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %eir_get_data.exit

if.end5.i:                                        ; preds = %while.body.i
  %conv.i = zext i8 %40 to i32
  %add.i = add nuw nsw i32 %conv.i, 1
  %add7.i = add nuw nsw i32 %add.i, %parsed.012.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 240, i32 %add7.i)
  %cmp8.i = icmp ugt i32 %add7.i, 240
  br i1 %cmp8.i, label %if.end5.i.eir_get_data.exit_crit_edge, label %if.end11.i

if.end5.i.eir_get_data.exit_crit_edge:            ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %eir_get_data.exit

if.end11.i:                                       ; preds = %if.end5.i
  %arrayidx12.i = getelementptr i8, ptr %eir.addr.011.i, i32 1
  %41 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx12.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 9, i8 %42)
  %cmp15.not.i = icmp eq i8 %42, 9
  br i1 %cmp15.not.i, label %cleanup.thread5.i, label %cleanup.i

cleanup.thread5.i:                                ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #11
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %40)
  %cmp22.i = icmp eq i8 %40, 1
  %arrayidx30.i = getelementptr i8, ptr %eir.addr.011.i, i32 2
  %spec.select.i = select i1 %cmp22.i, ptr null, ptr %arrayidx30.i
  br label %eir_get_data.exit

cleanup.i:                                        ; preds = %if.end11.i
  %add.ptr.i = getelementptr i8, ptr %eir.addr.011.i, i32 %add.i
  %cmp1.i = icmp ult i32 %add7.i, 239
  br i1 %cmp1.i, label %cleanup.i.while.body.i_crit_edge, label %cleanup.i.eir_get_data.exit_crit_edge

cleanup.i.eir_get_data.exit_crit_edge:            ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %eir_get_data.exit

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body.i

eir_get_data.exit:                                ; preds = %cleanup.i.eir_get_data.exit_crit_edge, %cleanup.thread5.i, %if.end5.i.eir_get_data.exit_crit_edge, %while.body.i.eir_get_data.exit_crit_edge
  %retval.2.i = phi ptr [ %spec.select.i, %cleanup.thread5.i ], [ null, %cleanup.i.eir_get_data.exit_crit_edge ], [ null, %if.end5.i.eir_get_data.exit_crit_edge ], [ null, %while.body.i.eir_get_data.exit_crit_edge ]
  %tobool39 = icmp ne ptr %retval.2.i, null
  br label %if.end41

if.end41:                                         ; preds = %eir_get_data.exit, %for.body.if.end41_crit_edge
  %name_known.0.off0 = phi i1 [ %tobool39, %eir_get_data.exit ], [ true, %for.body.if.end41_crit_edge ]
  %call43 = call i32 @hci_inquiry_cache_update(ptr noundef %hdev, ptr noundef nonnull %data, i1 noundef zeroext %name_known.0.off0) #9
  %data44 = getelementptr %struct.hci_ev_ext_inquiry_result, ptr %edata, i32 0, i32 1, i32 %i.096, i32 6
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i89.while.cond.i_crit_edge, %if.end41
  %eir.addr.0.i = phi ptr [ %data44, %if.end41 ], [ %add.ptr.i88, %while.body.i89.while.cond.i_crit_edge ]
  %parsed.0.i = phi i32 [ 0, %if.end41 ], [ %add4.i, %while.body.i89.while.cond.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 240, i32 %parsed.0.i)
  %cmp.i = icmp ult i32 %parsed.0.i, 240
  br i1 %cmp.i, label %while.body.i89, label %while.cond.i.eir_get_length.exit_crit_edge

while.cond.i.eir_get_length.exit_crit_edge:       ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %eir_get_length.exit

while.body.i89:                                   ; preds = %while.cond.i
  %43 = ptrtoint ptr %eir.addr.0.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %eir.addr.0.i, align 1
  %cmp1.i85 = icmp eq i8 %44, 0
  %conv.i86 = zext i8 %44 to i32
  %add.i87 = add nuw nsw i32 %conv.i86, 1
  %add4.i = add nuw nsw i32 %add.i87, %parsed.0.i
  %add.ptr.i88 = getelementptr i8, ptr %eir.addr.0.i, i32 %add.i87
  br i1 %cmp1.i85, label %while.body.i89.eir_get_length.exit_crit_edge, label %while.body.i89.while.cond.i_crit_edge

while.body.i89.while.cond.i_crit_edge:            ; preds = %while.body.i89
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.cond.i

while.body.i89.eir_get_length.exit_crit_edge:     ; preds = %while.body.i89
  call void @__sanitizer_cov_trace_pc() #11
  br label %eir_get_length.exit

eir_get_length.exit:                              ; preds = %while.body.i89.eir_get_length.exit_crit_edge, %while.cond.i.eir_get_length.exit_crit_edge
  %retval.2.i90 = phi i32 [ %parsed.0.i, %while.body.i89.eir_get_length.exit_crit_edge ], [ 240, %while.cond.i.eir_get_length.exit_crit_edge ]
  %45 = ptrtoint ptr %rssi to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %rssi, align 1
  %conv53 = trunc i32 %retval.2.i90 to i16
  call void @mgmt_device_found(ptr noundef %hdev, ptr noundef %arrayidx, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %dev_class27, i8 noundef signext %46, i32 noundef %call43, ptr noundef %data44, i16 noundef zeroext %conv53, ptr noundef null, i8 noundef zeroext 0) #9
  %inc = add nuw nsw i32 %i.096, 1
  %47 = ptrtoint ptr %edata to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %edata, align 1
  %conv20 = zext i8 %48 to i32
  %cmp = icmp ult i32 %inc, %conv20
  br i1 %cmp, label %eir_get_length.exit.for.body_crit_edge, label %eir_get_length.exit.for.end_crit_edge

eir_get_length.exit.for.end_crit_edge:            ; preds = %eir_get_length.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

eir_get_length.exit.for.body_crit_edge:           ; preds = %eir_get_length.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.end:                                          ; preds = %eir_get_length.exit.for.end_crit_edge, %if.end18.for.end_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end13.cleanup_crit_edge, %do.end.cleanup_crit_edge, %hci_ev_skb_pull.exit.thread
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %data) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_key_refresh_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_key_refresh_complete_evt.__UNIQUE_ID_ddebug628, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_key_refresh_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  %handle = getelementptr inbounds %struct.hci_ev_key_refresh_complete, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %conv3 = zext i16 %4 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_key_refresh_complete_evt.__UNIQUE_ID_ddebug628, ptr noundef nonnull @.str.193, ptr noundef %name, i32 noundef %conv, i32 noundef %conv3) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle4 = getelementptr inbounds %struct.hci_ev_key_refresh_complete, ptr %data, i32 0, i32 1
  %5 = ptrtoint ptr %handle4 to i32
  call void @__asan_loadN_noabort(i32 %5, i32 2)
  %6 = load i16, ptr %handle4, align 1
  %7 = tail call i16 @llvm.bswap.i16(i16 %6)
  %call5 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %7)
  %tobool6.not = icmp eq ptr %call5, null
  br i1 %tobool6.not, label %do.end.unlock_crit_edge, label %if.end8

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end8:                                          ; preds = %do.end
  %type = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 14
  %8 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %9)
  %cmp.not = icmp eq i8 %9, -128
  br i1 %cmp.not, label %if.end12, label %if.end8.unlock_crit_edge

if.end8.unlock_crit_edge:                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end12:                                         ; preds = %if.end8
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool14.not = icmp eq i8 %11, 0
  br i1 %tobool14.not, label %if.then15, label %if.end12.if.end16_crit_edge

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %pending_sec_level = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 25
  %12 = ptrtoint ptr %pending_sec_level to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %pending_sec_level, align 1
  %sec_level = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 24
  %14 = ptrtoint ptr %sec_level to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %sec_level, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end12.if.end16_crit_edge
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %flags) #9
  %15 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool19.not = icmp eq i8 %16, 0
  %state26 = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 12
  %17 = ptrtoint ptr %state26 to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %state26, align 4
  br i1 %tobool19.not, label %if.end25, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %18)
  %cmp21 = icmp eq i16 %18, 1
  br i1 %cmp21, label %if.then23, label %if.end25.thread

if.then23:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %call24 = tail call i32 @hci_disconnect(ptr noundef nonnull %call5, i8 noundef zeroext 5) #9
  br label %unlock.sink.split

if.end25:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %18)
  %cmp28 = icmp eq i16 %18, 7
  br i1 %cmp28, label %if.then33, label %if.end25.if.else_crit_edge

if.end25.if.else_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

if.end25.thread:                                  ; preds = %land.lhs.true
  %19 = ptrtoint ptr %state26 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %state26, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %20)
  %cmp2877 = icmp eq i16 %20, 7
  br i1 %cmp2877, label %if.end25.thread.if.end35_crit_edge, label %if.end25.thread.if.else_crit_edge

if.end25.thread.if.else_crit_edge:                ; preds = %if.end25.thread
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

if.end25.thread.if.end35_crit_edge:               ; preds = %if.end25.thread
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end35

if.then33:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #11
  %21 = ptrtoint ptr %state26 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 1, ptr %state26, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %if.end25.thread.if.end35_crit_edge
  %22 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %data, align 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.end35.for.end.i_crit_edge, label %if.end35.for.body.i_crit_edge

if.end35.for.body.i_crit_edge:                    ; preds = %if.end35
  br label %for.body.i

if.end35.for.end.i_crit_edge:                     ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end35.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.end35.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %24 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %25, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %25(ptr noundef nonnull %call5, i8 noundef zeroext %23) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %26 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end35.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 71
  %27 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %28, null
  br i1 %tobool6.not.i, label %for.end.i.unlock.sink.split_crit_edge, label %if.then7.i

for.end.i.unlock.sink.split_crit_edge:            ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock.sink.split

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %28(ptr noundef nonnull %call5, i8 noundef zeroext %23) #9
  br label %unlock.sink.split

if.else:                                          ; preds = %if.end25.thread.if.else_crit_edge, %if.end25.if.else_crit_edge
  %29 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %flags, align 4
  %31 = and i32 %30, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i68 = icmp eq i32 %31, 0
  br i1 %tobool.not.i68, label %if.end.i, label %if.else.hci_auth_cfm.exit_crit_edge

if.else.hci_auth_cfm.exit_crit_edge:              ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_auth_cfm.exit

if.end.i:                                         ; preds = %if.else
  %32 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %flags, align 4
  %34 = lshr i32 %33, 12
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.030.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not31.i = icmp eq ptr %cb.030.i, @hci_cb_list
  br i1 %cmp.not31.i, label %if.end.i.for.end.i73_crit_edge, label %if.end.i.for.body.i69_crit_edge

if.end.i.for.body.i69_crit_edge:                  ; preds = %if.end.i
  br label %for.body.i69

if.end.i.for.end.i73_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i73

for.body.i69:                                     ; preds = %for.inc.i72.for.body.i69_crit_edge, %if.end.i.for.body.i69_crit_edge
  %cb.032.i = phi ptr [ %cb.0.i70, %for.inc.i72.for.body.i69_crit_edge ], [ %cb.030.i, %if.end.i.for.body.i69_crit_edge ]
  %security_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.032.i, i32 0, i32 4
  %37 = ptrtoint ptr %security_cfm.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %security_cfm.i, align 4
  %tobool5.not.i = icmp eq ptr %38, null
  br i1 %tobool5.not.i, label %for.body.i69.for.inc.i72_crit_edge, label %if.then6.i

for.body.i69.for.inc.i72_crit_edge:               ; preds = %for.body.i69
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i72

if.then6.i:                                       ; preds = %for.body.i69
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %38(ptr noundef nonnull %call5, i8 noundef zeroext %16, i8 noundef zeroext %36) #9
  br label %for.inc.i72

for.inc.i72:                                      ; preds = %if.then6.i, %for.body.i69.for.inc.i72_crit_edge
  %39 = ptrtoint ptr %cb.032.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %cb.0.i70 = load ptr, ptr %cb.032.i, align 4
  %cmp.not.i71 = icmp eq ptr %cb.0.i70, @hci_cb_list
  br i1 %cmp.not.i71, label %for.inc.i72.for.end.i73_crit_edge, label %for.inc.i72.for.body.i69_crit_edge

for.inc.i72.for.body.i69_crit_edge:               ; preds = %for.inc.i72
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i69

for.inc.i72.for.end.i73_crit_edge:                ; preds = %for.inc.i72
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i73

for.end.i73:                                      ; preds = %for.inc.i72.for.end.i73_crit_edge, %if.end.i.for.end.i73_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %security_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 72
  %40 = ptrtoint ptr %security_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %security_cfm_cb.i, align 4
  %tobool13.not.i = icmp eq ptr %41, null
  br i1 %tobool13.not.i, label %for.end.i73.hci_auth_cfm.exit_crit_edge, label %if.then14.i

for.end.i73.hci_auth_cfm.exit_crit_edge:          ; preds = %for.end.i73
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_auth_cfm.exit

if.then14.i:                                      ; preds = %for.end.i73
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %41(ptr noundef nonnull %call5, i8 noundef zeroext %16) #9
  br label %hci_auth_cfm.exit

hci_auth_cfm.exit:                                ; preds = %if.then14.i, %for.end.i73.hci_auth_cfm.exit_crit_edge, %if.else.hci_auth_cfm.exit_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_key_refresh_complete_evt, %if.then.i74)) #9
          to label %hci_conn_hold.exit [label %if.then.i74], !srcloc !680

if.then.i74:                                      ; preds = %hci_auth_cfm.exit
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt.i = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #9
  %42 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %refcnt.i, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_hold.__UNIQUE_ID_ddebug471, ptr noundef nonnull @.str.20, ptr noundef nonnull %call5, i32 noundef %43) #9
  br label %hci_conn_hold.exit

hci_conn_hold.exit:                               ; preds = %if.then.i74, %hci_auth_cfm.exit
  %refcnt4.i = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 1
  %call.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #9
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #9
  %44 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #9, !srcloc !682
  %disc_work.i = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 58
  %call5.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work.i) #9
  %disc_timeout = getelementptr inbounds %struct.hci_conn, ptr %call5, i32 0, i32 31
  %45 = ptrtoint ptr %disc_timeout to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 200, ptr %disc_timeout, align 2
  br label %unlock.sink.split

unlock.sink.split:                                ; preds = %hci_conn_hold.exit, %if.then7.i, %for.end.i.unlock.sink.split_crit_edge, %if.then23
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call5)
  br label %unlock

unlock:                                           ; preds = %unlock.sink.split, %if.end8.unlock_crit_edge, %do.end.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_io_capa_request_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_io_capability_reply, align 1
  %cp63 = alloca %struct.hci_cp_io_capability_neg_reply, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_io_capa_request_evt.__UNIQUE_ID_ddebug629, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_io_capa_request_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_io_capa_request_evt.__UNIQUE_ID_ddebug629, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %data)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_io_capa_request_evt, %if.then.i)) #9
          to label %hci_conn_hold.exit [label %if.then.i], !srcloc !680

if.then.i:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #9
  %0 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %refcnt.i, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_hold.__UNIQUE_ID_ddebug471, ptr noundef nonnull @.str.20, ptr noundef nonnull %call3, i32 noundef %1) #9
  br label %hci_conn_hold.exit

hci_conn_hold.exit:                               ; preds = %if.then.i, %if.end6
  %refcnt4.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 1
  %call.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #9
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #9
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #9, !srcloc !682
  %disc_work.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 58
  %call5.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work.i) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %3 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %dev_flags, align 4
  %5 = and i32 %4, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool9.not = icmp eq i32 %5, 0
  br i1 %tobool9.not, label %hci_conn_hold.exit.unlock_crit_edge, label %if.end11

hci_conn_hold.exit.unlock_crit_edge:              ; preds = %hci_conn_hold.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end11:                                         ; preds = %hci_conn_hold.exit
  %6 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dev_flags, align 4
  %8 = and i32 %7, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool15.not = icmp eq i32 %8, 0
  br i1 %tobool15.not, label %lor.lhs.false, label %if.end11.if.then20_crit_edge

if.end11.if.then20_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then20

lor.lhs.false:                                    ; preds = %if.end11
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %flags, align 4
  %11 = and i32 %10, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool17.not = icmp eq i32 %11, 0
  br i1 %tobool17.not, label %lor.lhs.false18, label %lor.lhs.false.if.then20_crit_edge

lor.lhs.false.if.then20_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then20

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %remote_auth = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 53
  %12 = ptrtoint ptr %remote_auth to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %remote_auth, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %13)
  %cmp = icmp ult i8 %13, 2
  br i1 %cmp, label %lor.lhs.false18.if.then20_crit_edge, label %if.else62

lor.lhs.false18.if.then20_crit_edge:              ; preds = %lor.lhs.false18
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then20

if.then20:                                        ; preds = %lor.lhs.false18.if.then20_crit_edge, %lor.lhs.false.if.then20_crit_edge, %if.end11.if.then20_crit_edge
  call void @llvm.lifetime.start.p0(i64 9, ptr nonnull %cp) #9
  %14 = getelementptr inbounds %struct.hci_cp_io_capability_reply, ptr %cp, i32 0, i32 1
  %15 = getelementptr inbounds %struct.hci_cp_io_capability_reply, ptr %cp, i32 0, i32 2
  %16 = getelementptr inbounds %struct.hci_cp_io_capability_reply, ptr %cp, i32 0, i32 3
  %17 = getelementptr inbounds i8, ptr %cp, i32 7
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 -1, ptr %17, align 1
  %19 = call ptr @memcpy(ptr %cp, ptr %data, i32 6)
  %io_capability = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 28
  %20 = ptrtoint ptr %io_capability to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %io_capability, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %21)
  %cmp24 = icmp eq i8 %21, 4
  %spec.select = select i1 %cmp24, i8 1, i8 %21
  %22 = ptrtoint ptr %14 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %spec.select, ptr %14, align 1
  %remote_auth29 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 53
  %23 = ptrtoint ptr %remote_auth29 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %remote_auth29, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %24)
  %cmp31 = icmp eq i8 %24, -1
  br i1 %cmp31, label %if.then33, label %if.else

if.then33:                                        ; preds = %if.then20
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %21)
  %cmp36.not = icmp eq i8 %21, 3
  br i1 %cmp36.not, label %if.then33.if.end48_crit_edge, label %land.lhs.true

if.then33.if.end48_crit_edge:                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end48

land.lhs.true:                                    ; preds = %if.then33
  %auth_type = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 23
  %25 = ptrtoint ptr %auth_type to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %auth_type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %cmp39.not = icmp eq i8 %26, 0
  br i1 %cmp39.not, label %land.lhs.true.if.end48_crit_edge, label %if.then41

land.lhs.true.if.end48_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end48

if.then41:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %27 = or i8 %26, 1
  %28 = ptrtoint ptr %auth_type to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %27, ptr %auth_type, align 1
  br label %if.end48

if.else:                                          ; preds = %if.then20
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %24)
  %switch.i = icmp ult i8 %24, 2
  br i1 %switch.i, label %if.then.i99, label %if.end.i

if.then.i99:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %auth_type.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 23
  %29 = ptrtoint ptr %auth_type.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %auth_type.i, align 1
  %31 = and i8 %30, 1
  %or39.i = or i8 %31, %24
  br label %hci_get_auth_req.exit

if.end.i:                                         ; preds = %if.else
  %remote_cap.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 52
  %32 = ptrtoint ptr %remote_cap.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %remote_cap.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %33)
  %cmp11.not.i = icmp eq i8 %33, 3
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %21)
  %cmp14.not.i = icmp eq i8 %21, 3
  %or.cond = select i1 %cmp11.not.i, i1 true, i1 %cmp14.not.i
  br i1 %or.cond, label %if.end21.i, label %if.then16.i

if.then16.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %34 = or i8 %24, 1
  br label %hci_get_auth_req.exit

if.end21.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %35 = and i8 %24, -2
  %auth_type25.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 23
  %36 = ptrtoint ptr %auth_type25.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %auth_type25.i, align 1
  %38 = and i8 %37, 1
  %or2838.i = or i8 %38, %35
  br label %hci_get_auth_req.exit

hci_get_auth_req.exit:                            ; preds = %if.end21.i, %if.then16.i, %if.then.i99
  %retval.0.i100 = phi i8 [ %or39.i, %if.then.i99 ], [ %34, %if.then16.i ], [ %or2838.i, %if.end21.i ]
  %auth_type47 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 23
  %39 = ptrtoint ptr %auth_type47 to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 %retval.0.i100, ptr %auth_type47, align 1
  br label %if.end48

if.end48:                                         ; preds = %hci_get_auth_req.exit, %if.then41, %land.lhs.true.if.end48_crit_edge, %if.then33.if.end48_crit_edge
  %40 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %dev_flags, align 4
  %42 = and i32 %41, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool52.not = icmp eq i32 %42, 0
  br i1 %tobool52.not, label %if.then53, label %if.end48.if.end58_crit_edge

if.end48.if.end58_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end58

if.then53:                                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #11
  %auth_type54 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 23
  %43 = ptrtoint ptr %auth_type54 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %auth_type54, align 1
  %45 = and i8 %44, 1
  store i8 %45, ptr %auth_type54, align 1
  br label %if.end58

if.end58:                                         ; preds = %if.then53, %if.end48.if.end58_crit_edge
  %auth_type59 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 23
  %46 = ptrtoint ptr %auth_type59 to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %auth_type59, align 1
  %48 = ptrtoint ptr %16 to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %47, ptr %16, align 1
  %hdev1.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 65
  %49 = ptrtoint ptr %hdev1.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %hdev1.i, align 4
  %dst.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 2
  %call.i = tail call ptr @hci_find_remote_oob_data(ptr noundef %50, ptr noundef %dst.i, i8 noundef zeroext 0) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end58.bredr_oob_data_present.exit_crit_edge, label %if.end.i101

if.end58.bredr_oob_data_present.exit_crit_edge:   ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #11
  br label %bredr_oob_data_present.exit

if.end.i101:                                      ; preds = %if.end58
  %arrayidx2.i = getelementptr %struct.hci_dev, ptr %50, i32 0, i32 21, i32 2, i32 1
  %51 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %arrayidx2.i, align 1
  %53 = and i8 %52, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool3.not.i = icmp eq i8 %53, 0
  br i1 %tobool3.not.i, label %if.end.i101.if.end21.i103_crit_edge, label %land.lhs.true.i102

if.end.i101.if.end21.i103_crit_edge:              ; preds = %if.end.i101
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end21.i103

land.lhs.true.i102:                               ; preds = %if.end.i101
  %dev_flags.i = getelementptr inbounds %struct.hci_dev, ptr %50, i32 0, i32 206
  %54 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %dev_flags.i, align 4
  %56 = and i32 %55, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool5.not.i = icmp eq i32 %56, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i102.if.end21.i103_crit_edge, label %if.then6.i

land.lhs.true.i102.if.end21.i103_crit_edge:       ; preds = %land.lhs.true.i102
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end21.i103

if.then6.i:                                       ; preds = %land.lhs.true.i102
  %57 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %dev_flags.i, align 4
  %59 = and i32 %58, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool10.not.i = icmp eq i32 %59, 0
  br i1 %tobool10.not.i, label %if.then11.i, label %if.end12.i

if.then11.i:                                      ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #11
  %present.i = getelementptr inbounds %struct.oob_data, ptr %call.i, i32 0, i32 3
  %60 = ptrtoint ptr %present.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %present.i, align 1
  br label %bredr_oob_data_present.exit

if.end12.i:                                       ; preds = %if.then6.i
  %rand256.i = getelementptr inbounds %struct.oob_data, ptr %call.i, i32 0, i32 7
  %bcmp42.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %rand256.i, ptr noundef nonnull dereferenceable(16) @.str.195, i32 16) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp42.i)
  %tobool15.not.i = icmp eq i32 %bcmp42.i, 0
  br i1 %tobool15.not.i, label %if.end12.i.bredr_oob_data_present.exit_crit_edge, label %lor.lhs.false.i

if.end12.i.bredr_oob_data_present.exit_crit_edge: ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %bredr_oob_data_present.exit

lor.lhs.false.i:                                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #11
  %hash256.i = getelementptr inbounds %struct.oob_data, ptr %call.i, i32 0, i32 6
  %bcmp43.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %hash256.i, ptr noundef nonnull dereferenceable(16) @.str.195, i32 16) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp43.i)
  %tobool18.not.i = icmp eq i32 %bcmp43.i, 0
  %spec.select.i = select i1 %tobool18.not.i, i8 0, i8 2
  br label %bredr_oob_data_present.exit

if.end21.i103:                                    ; preds = %land.lhs.true.i102.if.end21.i103_crit_edge, %if.end.i101.if.end21.i103_crit_edge
  %rand192.i = getelementptr inbounds %struct.oob_data, ptr %call.i, i32 0, i32 5
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %rand192.i, ptr noundef nonnull dereferenceable(16) @.str.195, i32 16) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %tobool24.not.i = icmp eq i32 %bcmp.i, 0
  br i1 %tobool24.not.i, label %if.end21.i103.bredr_oob_data_present.exit_crit_edge, label %lor.lhs.false25.i

if.end21.i103.bredr_oob_data_present.exit_crit_edge: ; preds = %if.end21.i103
  call void @__sanitizer_cov_trace_pc() #11
  br label %bredr_oob_data_present.exit

lor.lhs.false25.i:                                ; preds = %if.end21.i103
  call void @__sanitizer_cov_trace_pc() #11
  %hash192.i = getelementptr inbounds %struct.oob_data, ptr %call.i, i32 0, i32 4
  %bcmp41.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %hash192.i, ptr noundef nonnull dereferenceable(16) @.str.195, i32 16) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp41.i)
  %tobool28.not.i = icmp ne i32 %bcmp41.i, 0
  %spec.select44.i = zext i1 %tobool28.not.i to i8
  br label %bredr_oob_data_present.exit

bredr_oob_data_present.exit:                      ; preds = %lor.lhs.false25.i, %if.end21.i103.bredr_oob_data_present.exit_crit_edge, %lor.lhs.false.i, %if.end12.i.bredr_oob_data_present.exit_crit_edge, %if.then11.i, %if.end58.bredr_oob_data_present.exit_crit_edge
  %retval.0.i104 = phi i8 [ %61, %if.then11.i ], [ 0, %if.end58.bredr_oob_data_present.exit_crit_edge ], [ 0, %if.end12.i.bredr_oob_data_present.exit_crit_edge ], [ 0, %if.end21.i103.bredr_oob_data_present.exit_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ], [ %spec.select44.i, %lor.lhs.false25.i ]
  %62 = ptrtoint ptr %15 to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 %retval.0.i104, ptr %15, align 1
  %call61 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1067, i32 noundef 9, ptr noundef nonnull %cp) #9
  call void @llvm.lifetime.end.p0(i64 9, ptr nonnull %cp) #9
  br label %unlock

if.else62:                                        ; preds = %lor.lhs.false18
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %cp63) #9
  %63 = getelementptr inbounds %struct.hci_cp_io_capability_neg_reply, ptr %cp63, i32 0, i32 1
  %64 = call ptr @memcpy(ptr %cp63, ptr %data, i32 6)
  %65 = ptrtoint ptr %63 to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 24, ptr %63, align 1
  %call66 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1076, i32 noundef 7, ptr noundef nonnull %cp63) #9
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %cp63) #9
  br label %unlock

unlock:                                           ; preds = %if.else62, %bredr_oob_data_present.exit, %hci_conn_hold.exit.unlock_crit_edge, %do.end.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_io_capa_reply_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_io_capa_reply_evt.__UNIQUE_ID_ddebug630, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_io_capa_reply_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_io_capa_reply_evt.__UNIQUE_ID_ddebug630, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %data)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %capability = getelementptr inbounds %struct.hci_ev_io_capa_reply, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %capability to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %capability, align 1
  %remote_cap = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 52
  %2 = ptrtoint ptr %remote_cap to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %1, ptr %remote_cap, align 8
  %authentication = getelementptr inbounds %struct.hci_ev_io_capa_reply, ptr %data, i32 0, i32 3
  %3 = ptrtoint ptr %authentication to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %authentication, align 1
  %remote_auth = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 53
  %5 = ptrtoint ptr %remote_auth to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %4, ptr %remote_auth, align 1
  br label %unlock

unlock:                                           ; preds = %if.end6, %do.end.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_user_confirm_request_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug631, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_user_confirm_request_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug631, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %dev_flags, align 4
  %2 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool5.not = icmp eq i32 %2, 0
  br i1 %tobool5.not, label %do.end.unlock_crit_edge, label %if.end7

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end7:                                          ; preds = %do.end
  %call8 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %data)
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.unlock_crit_edge, label %if.end11

if.end7.unlock_crit_edge:                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end11:                                         ; preds = %if.end7
  %auth_type = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 23
  %3 = ptrtoint ptr %auth_type to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %auth_type, align 1
  %5 = and i8 %4, 1
  %remote_auth = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 53
  %6 = ptrtoint ptr %remote_auth to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %remote_auth, align 1
  %8 = and i8 %7, 1
  %pending_sec_level = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 25
  %9 = ptrtoint ptr %pending_sec_level to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %pending_sec_level, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %10)
  %cmp = icmp ugt i8 %10, 2
  br i1 %cmp, label %land.lhs.true, label %if.end11.if.end40_crit_edge

if.end11.if.end40_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end40

land.lhs.true:                                    ; preds = %if.end11
  %remote_cap = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 52
  %11 = ptrtoint ptr %remote_cap to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %remote_cap, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %12)
  %cmp17 = icmp eq i8 %12, 3
  br i1 %cmp17, label %do.body20, label %land.lhs.true.if.end40_crit_edge

land.lhs.true.if.end40_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end40

do.body20:                                        ; preds = %land.lhs.true
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug632, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_user_confirm_request_evt, %if.then32)) #9
          to label %do.end37 [label %if.then32], !srcloc !680

if.then32:                                        ; preds = %do.body20
  call void @__sanitizer_cov_trace_pc() #11
  %name33 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug632, ptr noundef nonnull @.str.198, ptr noundef %name33) #9
  br label %do.end37

do.end37:                                         ; preds = %if.then32, %do.body20
  %call39 = tail call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1069, i32 noundef 6, ptr noundef %data) #9
  br label %unlock

if.end40:                                         ; preds = %land.lhs.true.if.end40_crit_edge, %if.end11.if.end40_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool41.not = icmp eq i8 %5, 0
  br i1 %tobool41.not, label %if.end40.land.lhs.true46_crit_edge, label %lor.lhs.false

if.end40.land.lhs.true46_crit_edge:               ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true46

lor.lhs.false:                                    ; preds = %if.end40
  %remote_cap42 = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 52
  %13 = ptrtoint ptr %remote_cap42 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %remote_cap42, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %14)
  %cmp44 = icmp eq i8 %14, 3
  br i1 %cmp44, label %lor.lhs.false.land.lhs.true46_crit_edge, label %lor.lhs.false.confirm_crit_edge

lor.lhs.false.confirm_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %confirm

lor.lhs.false.land.lhs.true46_crit_edge:          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true46

land.lhs.true46:                                  ; preds = %lor.lhs.false.land.lhs.true46_crit_edge, %if.end40.land.lhs.true46_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool47.not = icmp eq i8 %8, 0
  br i1 %tobool47.not, label %land.lhs.true46.if.then52_crit_edge, label %lor.lhs.false48

land.lhs.true46.if.then52_crit_edge:              ; preds = %land.lhs.true46
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then52

lor.lhs.false48:                                  ; preds = %land.lhs.true46
  %io_capability = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 28
  %15 = ptrtoint ptr %io_capability to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %io_capability, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %16)
  %cmp50 = icmp eq i8 %16, 3
  br i1 %cmp50, label %lor.lhs.false48.if.then52_crit_edge, label %lor.lhs.false48.confirm_crit_edge

lor.lhs.false48.confirm_crit_edge:                ; preds = %lor.lhs.false48
  call void @__sanitizer_cov_trace_pc() #11
  br label %confirm

lor.lhs.false48.if.then52_crit_edge:              ; preds = %lor.lhs.false48
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then52

if.then52:                                        ; preds = %lor.lhs.false48.if.then52_crit_edge, %land.lhs.true46.if.then52_crit_edge
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 47
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %flags, align 4
  %and1.i173 = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i173)
  %tobool54.not = icmp eq i32 %and1.i173, 0
  br i1 %tobool54.not, label %land.lhs.true55, label %if.then52.if.end83_crit_edge

if.then52.if.end83_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end83

land.lhs.true55:                                  ; preds = %if.then52
  %io_capability56 = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 28
  %19 = ptrtoint ptr %io_capability56 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %io_capability56, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %20)
  %cmp58.not = icmp eq i8 %20, 3
  %21 = select i1 %tobool41.not, i1 %tobool47.not, i1 false
  %or.cond = select i1 %cmp58.not, i1 true, i1 %21
  br i1 %or.cond, label %land.lhs.true55.if.end83_crit_edge, label %do.body65

land.lhs.true55.if.end83_crit_edge:               ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end83

do.body65:                                        ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #11
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug633, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_user_confirm_request_evt, %if.then77)) #9
          to label %confirm [label %if.then77], !srcloc !680

if.then77:                                        ; preds = %do.body65
  call void @__sanitizer_cov_trace_pc() #11
  %name78 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug633, ptr noundef nonnull @.str.199, ptr noundef %name78) #9
  br label %confirm

if.end83:                                         ; preds = %land.lhs.true55.if.end83_crit_edge, %if.then52.if.end83_crit_edge
  %call85 = tail call ptr @hci_find_link_key(ptr noundef %hdev, ptr noundef %data) #9
  %tobool86.not = icmp eq ptr %call85, null
  br i1 %tobool86.not, label %do.body107, label %do.body88

do.body88:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #11
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug634, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_user_confirm_request_evt, %if.then100)) #9
          to label %confirm [label %if.then100], !srcloc !680

if.then100:                                       ; preds = %do.body88
  call void @__sanitizer_cov_trace_pc() #11
  %name101 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug634, ptr noundef nonnull @.str.200, ptr noundef %name101) #9
  br label %confirm

do.body107:                                       ; preds = %if.end83
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug635, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_user_confirm_request_evt, %if.then119)) #9
          to label %do.end122 [label %if.then119], !srcloc !680

if.then119:                                       ; preds = %do.body107
  call void @__sanitizer_cov_trace_pc() #11
  %auto_accept_delay = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 117
  %22 = ptrtoint ptr %auto_accept_delay to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %auto_accept_delay, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug635, ptr noundef nonnull @.str.201, i32 noundef %23) #9
  br label %do.end122

do.end122:                                        ; preds = %if.then119, %do.body107
  %auto_accept_delay123 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 117
  %24 = ptrtoint ptr %auto_accept_delay123 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %auto_accept_delay123, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp124.not = icmp eq i32 %25, 0
  br i1 %cmp124.not, label %if.end131, label %if.else.i

if.else.i:                                        ; preds = %do.end122
  call void @__sanitizer_cov_trace_pc() #11
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %25) #9
  %hdev129 = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 65
  %26 = ptrtoint ptr %hdev129 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %hdev129, align 4
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %27, i32 0, i32 138
  %28 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %workqueue, align 4
  %auto_accept_work = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 59
  %call.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %29, ptr noundef %auto_accept_work, i32 noundef %call2.i) #9
  br label %unlock

if.end131:                                        ; preds = %do.end122
  call void @__sanitizer_cov_trace_pc() #11
  %call133 = tail call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1068, i32 noundef 6, ptr noundef %data) #9
  br label %unlock

confirm:                                          ; preds = %if.then100, %do.body88, %if.then77, %do.body65, %lor.lhs.false48.confirm_crit_edge, %lor.lhs.false.confirm_crit_edge
  %confirm_hint.0 = phi i8 [ 0, %lor.lhs.false48.confirm_crit_edge ], [ 0, %lor.lhs.false.confirm_crit_edge ], [ 1, %if.then77 ], [ 1, %if.then100 ], [ 1, %do.body65 ], [ 1, %do.body88 ]
  %passkey = getelementptr inbounds %struct.hci_ev_user_confirm_req, ptr %data, i32 0, i32 1
  %30 = ptrtoint ptr %passkey to i32
  call void @__asan_loadN_noabort(i32 %30, i32 4)
  %31 = load i32, ptr %passkey, align 1
  %32 = tail call i32 @llvm.bswap.i32(i32 %31)
  %call137 = tail call i32 @mgmt_user_confirm_request(ptr noundef %hdev, ptr noundef %data, i8 noundef zeroext 1, i8 noundef zeroext 0, i32 noundef %32, i8 noundef zeroext %confirm_hint.0) #9
  br label %unlock

unlock:                                           ; preds = %confirm, %if.end131, %if.else.i, %do.end37, %if.end7.unlock_crit_edge, %do.end.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_user_passkey_request_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_user_passkey_request_evt.__UNIQUE_ID_ddebug636, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_user_passkey_request_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_user_passkey_request_evt.__UNIQUE_ID_ddebug636, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %dev_flags, align 4
  %2 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool5.not = icmp eq i32 %2, 0
  br i1 %tobool5.not, label %do.end.if.end8_crit_edge, label %if.then6

do.end.if.end8_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end8

if.then6:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %call7 = tail call i32 @mgmt_user_passkey_request(ptr noundef %hdev, ptr noundef %data, i8 noundef zeroext 1, i8 noundef zeroext 0) #9
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %do.end.if.end8_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_remote_oob_data_request_evt(ptr noundef %hdev, ptr noundef %edata, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_remote_oob_data_neg_reply, align 1
  %cp22 = alloca %struct.hci_cp_remote_oob_ext_data_reply, align 1
  %cp49 = alloca %struct.hci_cp_remote_oob_data_reply, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_remote_oob_data_request_evt.__UNIQUE_ID_ddebug641, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_remote_oob_data_request_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_remote_oob_data_request_evt.__UNIQUE_ID_ddebug641, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %dev_flags, align 4
  %2 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool5.not = icmp eq i32 %2, 0
  br i1 %tobool5.not, label %do.end.unlock_crit_edge, label %if.end7

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_find_remote_oob_data(ptr noundef %hdev, ptr noundef %edata, i8 noundef zeroext 0) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.then10, label %if.end14

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %cp) #9
  %3 = call ptr @memcpy(ptr %cp, ptr %edata, i32 6)
  %call13 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1075, i32 noundef 6, ptr noundef nonnull %cp) #9
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %cp) #9
  br label %unlock

if.end14:                                         ; preds = %if.end7
  %arrayidx15 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 2, i32 1
  %4 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx15, align 1
  %6 = and i8 %5, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool16.not = icmp eq i8 %6, 0
  br i1 %tobool16.not, label %if.end14.if.else48_crit_edge, label %land.lhs.true

if.end14.if.else48_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else48

land.lhs.true:                                    ; preds = %if.end14
  %7 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %dev_flags, align 4
  %9 = and i32 %8, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool20.not = icmp eq i32 %9, 0
  br i1 %tobool20.not, label %land.lhs.true.if.else48_crit_edge, label %if.then21

land.lhs.true.if.else48_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else48

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 70, ptr nonnull %cp22) #9
  %10 = getelementptr inbounds i8, ptr %cp22, i32 6
  %11 = call ptr @memset(ptr %10, i32 255, i32 32)
  %12 = call ptr @memcpy(ptr %cp22, ptr %edata, i32 6)
  %13 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %dev_flags, align 4
  %15 = and i32 %14, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool28.not = icmp eq i32 %15, 0
  %hash19232 = getelementptr inbounds %struct.hci_cp_remote_oob_ext_data_reply, ptr %cp22, i32 0, i32 1
  br i1 %tobool28.not, label %if.else, label %if.then29

if.then29:                                        ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #11
  %16 = call ptr @memset(ptr %hash19232, i32 0, i32 32)
  br label %if.end40

if.else:                                          ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #11
  %hash19234 = getelementptr inbounds %struct.oob_data, ptr %call8, i32 0, i32 4
  %17 = call ptr @memcpy(ptr %hash19232, ptr %hash19234, i32 16)
  %rand19236 = getelementptr inbounds %struct.hci_cp_remote_oob_ext_data_reply, ptr %cp22, i32 0, i32 2
  %rand19238 = getelementptr inbounds %struct.oob_data, ptr %call8, i32 0, i32 5
  %18 = call ptr @memcpy(ptr %rand19236, ptr %rand19238, i32 16)
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then29
  %hash256 = getelementptr inbounds %struct.hci_cp_remote_oob_ext_data_reply, ptr %cp22, i32 0, i32 3
  %hash25642 = getelementptr inbounds %struct.oob_data, ptr %call8, i32 0, i32 6
  %19 = call ptr @memcpy(ptr %hash256, ptr %hash25642, i32 16)
  %rand256 = getelementptr inbounds %struct.hci_cp_remote_oob_ext_data_reply, ptr %cp22, i32 0, i32 4
  %rand25645 = getelementptr inbounds %struct.oob_data, ptr %call8, i32 0, i32 7
  %20 = call ptr @memcpy(ptr %rand256, ptr %rand25645, i32 16)
  %call47 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1093, i32 noundef 70, ptr noundef nonnull %cp22) #9
  call void @llvm.lifetime.end.p0(i64 70, ptr nonnull %cp22) #9
  br label %unlock

if.else48:                                        ; preds = %land.lhs.true.if.else48_crit_edge, %if.end14.if.else48_crit_edge
  call void @llvm.lifetime.start.p0(i64 38, ptr nonnull %cp49) #9
  %21 = call ptr @memcpy(ptr %cp49, ptr %edata, i32 6)
  %hash = getelementptr inbounds %struct.hci_cp_remote_oob_data_reply, ptr %cp49, i32 0, i32 1
  %hash19253 = getelementptr inbounds %struct.oob_data, ptr %call8, i32 0, i32 4
  %22 = call ptr @memcpy(ptr %hash, ptr %hash19253, i32 16)
  %rand = getelementptr inbounds %struct.hci_cp_remote_oob_data_reply, ptr %cp49, i32 0, i32 2
  %rand19256 = getelementptr inbounds %struct.oob_data, ptr %call8, i32 0, i32 5
  %23 = call ptr @memcpy(ptr %rand, ptr %rand19256, i32 16)
  %call58 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1072, i32 noundef 38, ptr noundef nonnull %cp49) #9
  call void @llvm.lifetime.end.p0(i64 38, ptr nonnull %cp49) #9
  br label %unlock

unlock:                                           ; preds = %if.else48, %if.end40, %if.then10, %do.end.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_simple_pair_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_simple_pair_complete_evt.__UNIQUE_ID_ddebug639, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_simple_pair_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_simple_pair_complete_evt.__UNIQUE_ID_ddebug639, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %bdaddr = getelementptr inbounds %struct.hci_ev_simple_pair_complete, ptr %data, i32 0, i32 1
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %bdaddr)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.unlock_crit_edge, label %if.end6

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6:                                          ; preds = %do.end
  %remote_auth = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 53
  %0 = ptrtoint ptr %remote_auth to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %remote_auth, align 1
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 47
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %flags, align 4
  %and1.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool8.not = icmp eq i32 %and1.i, 0
  br i1 %tobool8.not, label %land.lhs.true, label %if.end6.if.end12_crit_edge

if.end6.if.end12_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

land.lhs.true:                                    ; preds = %if.end6
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool9.not = icmp eq i8 %4, 0
  br i1 %tobool9.not, label %land.lhs.true.if.end12_crit_edge, label %if.then10

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

if.then10:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @mgmt_auth_failed(ptr noundef nonnull %call3, i8 noundef zeroext %4) #9
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %land.lhs.true.if.end12_crit_edge, %if.end6.if.end12_crit_edge
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call3)
  br label %unlock

unlock:                                           ; preds = %if.end12, %do.end.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_user_passkey_notify_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_user_passkey_notify_evt.__UNIQUE_ID_ddebug637, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_user_passkey_notify_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_user_passkey_notify_evt.__UNIQUE_ID_ddebug637, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %data)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end6

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end6:                                          ; preds = %do.end
  %passkey = getelementptr inbounds %struct.hci_ev_user_passkey_notify, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %passkey to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %1 = load i32, ptr %passkey, align 1
  %2 = tail call i32 @llvm.bswap.i32(i32 %1)
  %passkey_notify = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 29
  %3 = ptrtoint ptr %passkey_notify to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %passkey_notify, align 4
  %passkey_entered = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 30
  %4 = ptrtoint ptr %passkey_entered to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %passkey_entered, align 8
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %5 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %dev_flags, align 4
  %7 = and i32 %6, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool9.not = icmp eq i32 %7, 0
  br i1 %tobool9.not, label %if.end6.cleanup_crit_edge, label %if.then10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then10:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 2
  %type = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 14
  %8 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %type, align 1
  %dst_type = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %dst_type to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %dst_type, align 2
  %call13 = tail call i32 @mgmt_user_passkey_notify(ptr noundef %hdev, ptr noundef %dst, i8 noundef zeroext %9, i8 noundef zeroext %11, i32 noundef %2, i8 noundef zeroext 0) #9
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %if.end6.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_keypress_notify_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_keypress_notify_evt.__UNIQUE_ID_ddebug638, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_keypress_notify_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_keypress_notify_evt.__UNIQUE_ID_ddebug638, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %data)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end6

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end6:                                          ; preds = %do.end
  %type = getelementptr inbounds %struct.hci_ev_keypress_notify, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %type, align 1
  %2 = zext i8 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.263)
  switch i8 %1, label %if.end6.sw.epilog_crit_edge [
    i8 0, label %sw.bb
    i8 1, label %sw.bb7
    i8 2, label %sw.bb9
    i8 3, label %sw.bb11
    i8 4, label %if.end6.cleanup_crit_edge
  ]

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end6.sw.epilog_crit_edge:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %passkey_entered = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 30
  %3 = ptrtoint ptr %passkey_entered to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %passkey_entered, align 8
  br label %cleanup

sw.bb7:                                           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %passkey_entered8 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 30
  %4 = ptrtoint ptr %passkey_entered8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %passkey_entered8, align 8
  %inc = add i8 %5, 1
  store i8 %inc, ptr %passkey_entered8, align 8
  br label %sw.epilog

sw.bb9:                                           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %passkey_entered10 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 30
  %6 = ptrtoint ptr %passkey_entered10 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %passkey_entered10, align 8
  %dec = add i8 %7, -1
  store i8 %dec, ptr %passkey_entered10, align 8
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %passkey_entered12 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 30
  %8 = ptrtoint ptr %passkey_entered12 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 0, ptr %passkey_entered12, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb11, %sw.bb9, %sw.bb7, %if.end6.sw.epilog_crit_edge
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %9 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %dev_flags, align 4
  %11 = and i32 %10, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool16.not = icmp eq i32 %11, 0
  br i1 %tobool16.not, label %sw.epilog.cleanup_crit_edge, label %if.then17

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then17:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #11
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 2
  %type18 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 14
  %12 = ptrtoint ptr %type18 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %type18, align 1
  %dst_type = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %dst_type to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %dst_type, align 2
  %passkey_notify = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 29
  %16 = ptrtoint ptr %passkey_notify to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %passkey_notify, align 4
  %passkey_entered19 = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 30
  %18 = ptrtoint ptr %passkey_entered19 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %passkey_entered19, align 8
  %call20 = tail call i32 @mgmt_user_passkey_notify(ptr noundef %hdev, ptr noundef %dst, i8 noundef zeroext %13, i8 noundef zeroext %15, i32 noundef %17, i8 noundef zeroext %19) #9
  br label %cleanup

cleanup:                                          ; preds = %if.then17, %sw.epilog.cleanup_crit_edge, %sw.bb, %if.end6.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_remote_host_features_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_remote_host_features_evt.__UNIQUE_ID_ddebug640, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_remote_host_features_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_remote_host_features_evt.__UNIQUE_ID_ddebug640, ptr noundef nonnull @.str.174, ptr noundef %name) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef %data)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.if.end9_crit_edge, label %if.then5

do.end.if.end9_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end9

if.then5:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %arrayidx = getelementptr %struct.hci_conn, ptr %call3, i32 0, i32 19, i32 1
  %features7 = getelementptr inbounds %struct.hci_ev_remote_host_features, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %features7 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %1 = load i64, ptr %features7, align 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_storeN_noabort(i32 %2, i32 8)
  store i64 %1, ptr %arrayidx, align 2
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %do.end.if.end9_crit_edge
  %call11 = tail call ptr @hci_inquiry_cache_lookup(ptr noundef %hdev, ptr noundef %data) #9
  %tobool12.not = icmp eq ptr %call11, null
  br i1 %tobool12.not, label %if.end9.if.end18_crit_edge, label %if.then13

if.end9.if.end18_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then13:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  %features14 = getelementptr inbounds %struct.hci_ev_remote_host_features, ptr %data, i32 0, i32 1
  %3 = ptrtoint ptr %features14 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %features14, align 1
  %5 = and i8 %4, 1
  %ssp_mode = getelementptr inbounds %struct.inquiry_entry, ptr %call11, i32 0, i32 4, i32 7
  %6 = ptrtoint ptr %ssp_mode to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %ssp_mode, align 1
  br label %if.end18

if.end18:                                         ; preds = %if.then13, %if.end9.if.end18_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_meta_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr noundef %skb, ptr nocapture noundef writeonly %opcode, ptr nocapture noundef readnone %status, ptr noundef %req_complete, ptr noundef %req_complete_skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_le_meta_evt.__UNIQUE_ID_ddebug658, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_le_meta_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_le_meta_evt.__UNIQUE_ID_ddebug658, ptr noundef nonnull @.str.209, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %sent_cmd = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 162
  %2 = ptrtoint ptr %sent_cmd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sent_cmd, align 4
  %tobool3.not = icmp eq ptr %3, null
  br i1 %tobool3.not, label %do.end.if.end23_crit_edge, label %land.lhs.true

do.end.if.end23_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end23

land.lhs.true:                                    ; preds = %do.end
  %opcode6 = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 3, i32 12
  %4 = ptrtoint ptr %opcode6 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %opcode6, align 4
  %.mask = and i16 %5, -1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %.mask)
  %cmp = icmp eq i16 %.mask, 8192
  br i1 %cmp, label %land.lhs.true9, label %land.lhs.true.if.end23_crit_edge

land.lhs.true.if.end23_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end23

land.lhs.true9:                                   ; preds = %land.lhs.true
  %req_event = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 3, i32 15
  %6 = ptrtoint ptr %req_event to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %req_event, align 1
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %7, i8 %9)
  %cmp16 = icmp eq i8 %7, %9
  br i1 %cmp16, label %if.then18, label %land.lhs.true9.if.end23_crit_edge

land.lhs.true9.if.end23_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end23

if.then18:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #11
  %10 = ptrtoint ptr %opcode to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %5, ptr %opcode, align 2
  tail call void @hci_req_cmd_complete(ptr noundef %hdev, i16 noundef zeroext %5, i8 noundef zeroext 0, ptr noundef %req_complete, ptr noundef %req_complete_skb) #9
  br label %if.end23

if.end23:                                         ; preds = %if.then18, %land.lhs.true9.if.end23_crit_edge, %land.lhs.true.if.end23_crit_edge, %do.end.if.end23_crit_edge
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %data, align 1
  %idxprom = zext i8 %12 to i32
  %arrayidx = getelementptr [256 x %struct.hci_le_ev], ptr @hci_le_ev_table, i32 0, i32 %idxprom
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx, align 4
  %tobool25.not = icmp eq ptr %14, null
  br i1 %tobool25.not, label %if.end23.cleanup_crit_edge, label %if.end27

if.end23.cleanup_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end27:                                         ; preds = %if.end23
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %15 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %len, align 4
  %min_len = getelementptr [256 x %struct.hci_le_ev], ptr @hci_le_ev_table, i32 0, i32 %idxprom, i32 1
  %17 = ptrtoint ptr %min_len to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %min_len, align 4
  %conv28 = zext i16 %18 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %conv28)
  %cmp29 = icmp ult i32 %16, %conv28
  br i1 %cmp29, label %if.then31, label %if.end39

if.then31:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  %name32 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.210, ptr noundef %name32, i32 noundef %idxprom, i32 noundef %16, i32 noundef %conv28) #9
  br label %cleanup

if.end39:                                         ; preds = %if.end27
  %max_len = getelementptr [256 x %struct.hci_le_ev], ptr @hci_le_ev_table, i32 0, i32 %idxprom, i32 2
  %19 = ptrtoint ptr %max_len to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %max_len, align 2
  %conv41 = zext i16 %20 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %conv41)
  %cmp42 = icmp ugt i32 %16, %conv41
  br i1 %cmp42, label %if.then44, label %if.end39.if.end52_crit_edge

if.end39.if.end52_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end52

if.then44:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #11
  %name45 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_warn(ptr noundef nonnull @.str.211, ptr noundef %name45, i32 noundef %idxprom, i32 noundef %16, i32 noundef %conv41) #9
  br label %if.end52

if.end52:                                         ; preds = %if.then44, %if.end39.if.end52_crit_edge
  %21 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %data, align 1
  %call.i = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %conv28) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %hci_le_ev_skb_pull.exit.thread, label %if.end59

hci_le_ev_skb_pull.exit.thread:                   ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv.i = zext i8 %22 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.228, ptr noundef %name.i, i32 noundef %conv.i) #9
  br label %cleanup

if.end59:                                         ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %14(ptr noundef %hdev, ptr noundef nonnull %call.i, ptr noundef %skb) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end59, %hci_le_ev_skb_pull.exit.thread, %if.then31, %if.end23.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_phy_link_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_phy_link_complete_evt.__UNIQUE_ID_ddebug643, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_phy_link_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %phy_handle = getelementptr inbounds %struct.hci_ev_phy_link_complete, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %phy_handle to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %phy_handle, align 1
  %conv = zext i8 %1 to i32
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  %conv3 = zext i8 %3 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_phy_link_complete_evt.__UNIQUE_ID_ddebug643, ptr noundef nonnull @.str.230, ptr noundef %name, i32 noundef %conv, i32 noundef %conv3) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %phy_handle4 = getelementptr inbounds %struct.hci_ev_phy_link_complete, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %phy_handle4 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %phy_handle4, align 1
  %conv5 = zext i8 %5 to i16
  %call6 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %conv5)
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %do.end.unlock_crit_edge, label %if.end9

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end9:                                          ; preds = %do.end
  %amp_mgr = getelementptr inbounds %struct.hci_conn, ptr %call6, i32 0, i32 68
  %6 = ptrtoint ptr %amp_mgr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %amp_mgr, align 8
  %tobool10.not = icmp eq ptr %7, null
  br i1 %tobool10.not, label %if.end9.unlock_crit_edge, label %if.end12

if.end9.unlock_crit_edge:                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end12:                                         ; preds = %if.end9
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool14.not = icmp eq i8 %9, 0
  br i1 %tobool14.not, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %call16 = tail call i32 @hci_conn_del(ptr noundef nonnull %call6) #9
  br label %unlock

if.end17:                                         ; preds = %if.end12
  %l2cap_conn = getelementptr inbounds %struct.amp_mgr, ptr %7, i32 0, i32 1
  %10 = ptrtoint ptr %l2cap_conn to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %l2cap_conn, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %state = getelementptr inbounds %struct.hci_conn, ptr %call6, i32 0, i32 12
  %14 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 1, ptr %state, align 4
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call6, i32 0, i32 2
  %dst20 = getelementptr inbounds %struct.hci_conn, ptr %13, i32 0, i32 2
  %15 = call ptr @memcpy(ptr %dst, ptr %dst20, i32 6)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_phy_link_complete_evt, %if.then.i)) #9
          to label %hci_conn_hold.exit [label %if.then.i], !srcloc !680

if.then.i:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt.i = getelementptr inbounds %struct.hci_conn, ptr %call6, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #9
  %16 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %refcnt.i, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_hold.__UNIQUE_ID_ddebug471, ptr noundef nonnull @.str.20, ptr noundef nonnull %call6, i32 noundef %17) #9
  br label %hci_conn_hold.exit

hci_conn_hold.exit:                               ; preds = %if.then.i, %if.end17
  %refcnt4.i = getelementptr inbounds %struct.hci_conn, ptr %call6, i32 0, i32 1
  %call.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #9
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #9
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #9, !srcloc !682
  %disc_work.i = getelementptr inbounds %struct.hci_conn, ptr %call6, i32 0, i32 58
  %call5.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work.i) #9
  %disc_timeout = getelementptr inbounds %struct.hci_conn, ptr %call6, i32 0, i32 31
  %19 = ptrtoint ptr %disc_timeout to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 200, ptr %disc_timeout, align 2
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call6)
  tail call void @hci_debugfs_create_conn(ptr noundef nonnull %call6) #9
  tail call void @hci_conn_add_sysfs(ptr noundef nonnull %call6) #9
  tail call void @amp_physical_cfm(ptr noundef %13, ptr noundef nonnull %call6) #9
  br label %unlock

unlock:                                           ; preds = %hci_conn_hold.exit, %if.then15, %if.end9.unlock_crit_edge, %do.end.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_chan_selected_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_chan_selected_evt.__UNIQUE_ID_ddebug642, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_chan_selected_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_chan_selected_evt.__UNIQUE_ID_ddebug642, ptr noundef nonnull @.str.232, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  %conv4 = zext i8 %3 to i16
  %call5 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %conv4)
  %tobool6.not = icmp eq ptr %call5, null
  br i1 %tobool6.not, label %do.end.cleanup_crit_edge, label %if.end8

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end8:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @amp_read_loc_assoc_final_data(ptr noundef %hdev, ptr noundef nonnull %call5) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_disconn_phylink_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_disconn_phylink_complete_evt.__UNIQUE_ID_ddebug647, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_disconn_phylink_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_disconn_phylink_complete_evt.__UNIQUE_ID_ddebug647, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end6, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end6:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %phy_handle = getelementptr inbounds %struct.hci_ev_disconn_phy_link_complete, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %phy_handle to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %phy_handle, align 1
  %conv7 = zext i8 %5 to i16
  %call8 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %conv7)
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end6.if.end12_crit_edge, label %if.then10

if.end6.if.end12_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

if.then10:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %state = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 12
  %6 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 9, ptr %state, align 4
  %call11 = tail call i32 @hci_conn_del(ptr noundef nonnull %call8) #9
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end6.if.end12_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_loglink_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_loglink_complete_evt.__UNIQUE_ID_ddebug644, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_loglink_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %handle = getelementptr inbounds %struct.hci_ev_logical_link_complete, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %handle, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %conv = zext i16 %2 to i32
  %phy_handle = getelementptr inbounds %struct.hci_ev_logical_link_complete, ptr %data, i32 0, i32 2
  %3 = ptrtoint ptr %phy_handle to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %phy_handle, align 1
  %conv3 = zext i8 %4 to i32
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  %conv4 = zext i8 %6 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_loglink_complete_evt.__UNIQUE_ID_ddebug644, ptr noundef nonnull @.str.235, ptr noundef %name, i32 noundef %conv, i32 noundef %conv3, i32 noundef %conv4) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %phy_handle5 = getelementptr inbounds %struct.hci_ev_logical_link_complete, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %phy_handle5 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %phy_handle5, align 1
  %conv6 = zext i8 %8 to i16
  %call7 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %conv6)
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %do.end.cleanup_crit_edge, label %if.end10

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end10:                                         ; preds = %do.end
  %call11 = tail call ptr @hci_chan_create(ptr noundef nonnull %call7) #9
  %tobool12.not = icmp eq ptr %call11, null
  br i1 %tobool12.not, label %if.end10.cleanup_crit_edge, label %if.end14

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end14:                                         ; preds = %if.end10
  %handle15 = getelementptr inbounds %struct.hci_ev_logical_link_complete, ptr %data, i32 0, i32 1
  %9 = ptrtoint ptr %handle15 to i32
  call void @__asan_loadN_noabort(i32 %9, i32 2)
  %10 = load i16, ptr %handle15, align 1
  %11 = tail call i16 @llvm.bswap.i16(i16 %10)
  %handle16 = getelementptr inbounds %struct.hci_chan, ptr %call11, i32 0, i32 1
  %12 = ptrtoint ptr %handle16 to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %11, ptr %handle16, align 4
  %amp = getelementptr inbounds %struct.hci_chan, ptr %call11, i32 0, i32 6
  %13 = ptrtoint ptr %amp to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 1, ptr %amp, align 1
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_loglink_complete_evt.__UNIQUE_ID_ddebug645, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_loglink_complete_evt, %if.then29)) #9
          to label %do.end32 [label %if.then29], !srcloc !680

if.then29:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #11
  %amp_mgr = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 68
  %14 = ptrtoint ptr %amp_mgr to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %amp_mgr, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_loglink_complete_evt.__UNIQUE_ID_ddebug645, ptr noundef nonnull @.str.236, ptr noundef nonnull %call7, ptr noundef %15, ptr noundef nonnull %call11) #9
  br label %do.end32

do.end32:                                         ; preds = %if.then29, %if.end14
  %amp_mgr33 = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 68
  %16 = ptrtoint ptr %amp_mgr33 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %amp_mgr33, align 8
  %tobool34.not = icmp eq ptr %17, null
  br i1 %tobool34.not, label %do.end32.cleanup_crit_edge, label %land.lhs.true

do.end32.cleanup_crit_edge:                       ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

land.lhs.true:                                    ; preds = %do.end32
  %bredr_chan = getelementptr inbounds %struct.amp_mgr, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %bredr_chan to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %bredr_chan, align 4
  %tobool35.not = icmp eq ptr %19, null
  br i1 %tobool35.not, label %land.lhs.true.cleanup_crit_edge, label %if.then36

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then36:                                        ; preds = %land.lhs.true
  %lock.i = getelementptr inbounds %struct.l2cap_chan, ptr %19, i32 0, i32 86
  %nesting.i = getelementptr inbounds %struct.l2cap_chan, ptr %19, i32 0, i32 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nesting.i, i32 noundef 4) #9
  %20 = ptrtoint ptr %nesting.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %nesting.i, align 4
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef %21) #9
  %block_mtu = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 130
  %22 = ptrtoint ptr %block_mtu to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %block_mtu, align 2
  %conv39 = zext i16 %23 to i32
  %24 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %19, align 4
  %mtu = getelementptr inbounds %struct.l2cap_conn, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %mtu to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %conv39, ptr %mtu, align 4
  tail call void @l2cap_logical_cfm(ptr noundef nonnull %19, ptr noundef nonnull %call11, i8 noundef zeroext 0) #9
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_loglink_complete_evt, %if.then.i)) #9
          to label %hci_conn_hold.exit [label %if.then.i], !srcloc !680

if.then.i:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt.i = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 1
  %call.i.i.i68 = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #9
  %27 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %refcnt.i, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_hold.__UNIQUE_ID_ddebug471, ptr noundef nonnull @.str.20, ptr noundef nonnull %call7, i32 noundef %28) #9
  br label %hci_conn_hold.exit

hci_conn_hold.exit:                               ; preds = %if.then.i, %if.then36
  %refcnt4.i = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 1
  %call.i.i9.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #9
  tail call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #9
  %29 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #9, !srcloc !682
  %disc_work.i = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 58
  %call5.i = tail call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work.i) #9
  tail call void @mutex_unlock(ptr noundef %lock.i) #9
  br label %cleanup

cleanup:                                          ; preds = %hci_conn_hold.exit, %land.lhs.true.cleanup_crit_edge, %do.end32.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_disconn_loglink_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_disconn_loglink_complete_evt.__UNIQUE_ID_ddebug646, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_disconn_loglink_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %handle = getelementptr inbounds %struct.hci_ev_disconn_logical_link_complete, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %handle, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %conv = zext i16 %2 to i32
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %data, align 1
  %conv3 = zext i8 %4 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_disconn_loglink_complete_evt.__UNIQUE_ID_ddebug646, ptr noundef nonnull @.str.238, ptr noundef %name, i32 noundef %conv, i32 noundef %conv3) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool5.not = icmp eq i8 %6, 0
  br i1 %tobool5.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle8 = getelementptr inbounds %struct.hci_ev_disconn_logical_link_complete, ptr %data, i32 0, i32 1
  %7 = ptrtoint ptr %handle8 to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %handle8, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8)
  %call9 = tail call ptr @hci_chan_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %9) #9
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %if.end7.unlock_crit_edge, label %lor.lhs.false

if.end7.unlock_crit_edge:                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

lor.lhs.false:                                    ; preds = %if.end7
  %amp = getelementptr inbounds %struct.hci_chan, ptr %call9, i32 0, i32 6
  %10 = ptrtoint ptr %amp to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %amp, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool11.not = icmp eq i8 %11, 0
  br i1 %tobool11.not, label %lor.lhs.false.unlock_crit_edge, label %if.end13

lor.lhs.false.unlock_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end13:                                         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  %reason = getelementptr inbounds %struct.hci_ev_disconn_logical_link_complete, ptr %data, i32 0, i32 2
  %12 = ptrtoint ptr %reason to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %reason, align 1
  tail call void @amp_destroy_logical_link(ptr noundef nonnull %call9, i8 noundef zeroext %13) #9
  br label %unlock

unlock:                                           ; preds = %if.end13, %lor.lhs.false.unlock_crit_edge, %if.end7.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %unlock, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_num_comp_blocks_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %num_hndl = getelementptr inbounds %struct.hci_ev_num_comp_blocks, ptr %data, i32 0, i32 1
  %0 = ptrtoint ptr %num_hndl to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %num_hndl, align 1
  %conv = zext i8 %1 to i32
  %2 = mul nuw nsw i32 %conv, 6
  %call.i = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %2) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %hci_ev_skb_pull.exit.thread, label %if.end

hci_ev_skb_pull.exit.thread:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.242, ptr noundef %name.i, i32 noundef 72) #9
  br label %cleanup51

if.end:                                           ; preds = %entry
  %flow_ctl_mode = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 116
  %3 = ptrtoint ptr %flow_ctl_mode to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %flow_ctl_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %4)
  %cmp.not = icmp eq i8 %4, 1
  br i1 %cmp.not, label %do.body, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %conv2 = zext i8 %4 to i32
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.169, ptr noundef %name, i32 noundef %conv2) #9
  br label %cleanup51

do.body:                                          ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_num_comp_blocks_evt.__UNIQUE_ID_ddebug610, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_num_comp_blocks_evt, %if.then12)) #9
          to label %do.end [label %if.then12], !srcloc !680

if.then12:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #11
  %name13 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %5 = ptrtoint ptr %data to i32
  call void @__asan_loadN_noabort(i32 %5, i32 2)
  %6 = load i16, ptr %data, align 1
  %conv15 = zext i16 %6 to i32
  %7 = ptrtoint ptr %num_hndl to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %num_hndl, align 1
  %conv17 = zext i8 %8 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_num_comp_blocks_evt.__UNIQUE_ID_ddebug610, ptr noundef nonnull @.str.240, ptr noundef %name13, i32 noundef %conv15, i32 noundef %conv17) #9
  br label %do.end

do.end:                                           ; preds = %if.then12, %do.body
  %9 = ptrtoint ptr %num_hndl to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %num_hndl, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %cmp2191.not = icmp eq i8 %10, 0
  br i1 %cmp2191.not, label %do.end.for.end_crit_edge, label %for.body.lr.ph

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end
  %dev_type.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 6
  %block_cnt = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 132
  %num_blocks35 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 131
  %name43 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %i.092 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cleanup.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hci_ev_num_comp_blocks, ptr %data, i32 0, i32 2, i32 %i.092
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_loadN_noabort(i32 %11, i32 2)
  %12 = load i16, ptr %arrayidx, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12)
  %blocks = getelementptr %struct.hci_ev_num_comp_blocks, ptr %data, i32 0, i32 2, i32 %i.092, i32 2
  %14 = ptrtoint ptr %blocks to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %blocks, align 1
  %16 = ptrtoint ptr %dev_type.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %dev_type.i, align 1
  %18 = zext i8 %17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.264)
  switch i8 %17, label %sw.default.i [
    i8 0, label %sw.bb.i
    i8 1, label %sw.bb1.i
  ]

sw.bb.i:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  %call.i81 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %13) #9
  br label %__hci_conn_lookup_handle.exit

sw.bb1.i:                                         ; preds = %for.body
  %call2.i = tail call ptr @hci_chan_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %13) #9
  %tobool.not.i82 = icmp eq ptr %call2.i, null
  br i1 %tobool.not.i82, label %sw.bb1.i.cleanup_crit_edge, label %if.then.i83

sw.bb1.i.cleanup_crit_edge:                       ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then.i83:                                      ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #11
  %conn.i = getelementptr inbounds %struct.hci_chan, ptr %call2.i, i32 0, i32 2
  %19 = ptrtoint ptr %conn.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %conn.i, align 4
  br label %__hci_conn_lookup_handle.exit

sw.default.i:                                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  %conv.i = zext i8 %17 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.241, ptr noundef %name43, i32 noundef %conv.i) #9
  br label %cleanup

__hci_conn_lookup_handle.exit:                    ; preds = %if.then.i83, %sw.bb.i
  %retval.0.i85 = phi ptr [ %20, %if.then.i83 ], [ %call.i81, %sw.bb.i ]
  %tobool25.not = icmp eq ptr %retval.0.i85, null
  br i1 %tobool25.not, label %__hci_conn_lookup_handle.exit.cleanup_crit_edge, label %if.end27

__hci_conn_lookup_handle.exit.cleanup_crit_edge:  ; preds = %__hci_conn_lookup_handle.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end27:                                         ; preds = %__hci_conn_lookup_handle.exit
  %21 = tail call i16 @llvm.bswap.i16(i16 %15)
  %conv28 = zext i16 %21 to i32
  %sent = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i85, i32 0, i32 55
  %22 = ptrtoint ptr %sent to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sent, align 4
  %sub = sub i32 %23, %conv28
  store i32 %sub, ptr %sent, align 4
  %type = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i85, i32 0, i32 14
  %24 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %type, align 1
  %26 = zext i8 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.265)
  switch i8 %25, label %sw.default [
    i8 1, label %if.end27.sw.bb_crit_edge
    i8 -127, label %if.end27.sw.bb_crit_edge93
  ]

if.end27.sw.bb_crit_edge93:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb

if.end27.sw.bb_crit_edge:                         ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb

sw.bb:                                            ; preds = %if.end27.sw.bb_crit_edge, %if.end27.sw.bb_crit_edge93
  %27 = ptrtoint ptr %block_cnt to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %block_cnt, align 2
  %add = add i16 %28, %21
  %29 = ptrtoint ptr %num_blocks35 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %num_blocks35, align 8
  %31 = tail call i16 @llvm.umin.i16(i16 %add, i16 %30)
  %32 = ptrtoint ptr %block_cnt to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %31, ptr %block_cnt, align 2
  br label %cleanup

sw.default:                                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  %conv29 = zext i8 %25 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.171, ptr noundef %name43, i32 noundef %conv29, ptr noundef nonnull %retval.0.i85) #9
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %sw.bb, %__hci_conn_lookup_handle.exit.cleanup_crit_edge, %sw.default.i, %sw.bb1.i.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.092, 1
  %33 = ptrtoint ptr %num_hndl to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %num_hndl, align 1
  %conv20 = zext i8 %34 to i32
  %cmp21 = icmp ult i32 %inc, %conv20
  br i1 %cmp21, label %cleanup.for.body_crit_edge, label %cleanup.for.end_crit_edge

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %do.end.for.end_crit_edge
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 138
  %35 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %workqueue, align 4
  %tx_work = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 154
  %call.i86 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %36, ptr noundef %tx_work) #9
  br label %cleanup51

cleanup51:                                        ; preds = %for.end, %if.then4, %hci_ev_skb_pull.exit.thread
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msft_vendor_evt(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_conn_check_pending(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_bit(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_discovery_set_state(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_inquiry_cache_lookup_resolve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_send_cmd(ptr noundef, i16 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_inquiry_cache_update(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_device_found(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, ptr noundef, i8 noundef signext, i32 noundef, ptr noundef, i16 noundef zeroext, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext %type, ptr nocapture noundef readonly %ba) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %conn_hash = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 183
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #9
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !684
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #9
  %call.i = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 696, ptr noundef nonnull @.str.17) #9
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call i32 @rcu_read_lock_any_held() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b35 = load i1, ptr @hci_conn_hash_lookup_ba.__warned, align 1
  br i1 %.b35, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @hci_conn_hash_lookup_ba.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 1033, ptr noundef nonnull @.str.15) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  %4 = ptrtoint ptr %conn_hash to i32
  call void @__asan_load4_noabort(i32 %4)
  %c.058 = load volatile ptr, ptr %conn_hash, align 4
  %cmp.not59 = icmp eq ptr %c.058, %conn_hash
  br i1 %cmp.not59, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %c.060 = phi ptr [ %c.0, %for.inc.for.body_crit_edge ], [ %c.058, %do.end.for.body_crit_edge ]
  %type11 = getelementptr inbounds %struct.hci_conn, ptr %c.060, i32 0, i32 14
  %5 = ptrtoint ptr %type11 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %type11, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %6, i8 %type)
  %cmp13 = icmp eq i8 %6, %type
  br i1 %cmp13, label %land.lhs.true15, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

land.lhs.true15:                                  ; preds = %for.body
  %dst = getelementptr inbounds %struct.hci_conn, ptr %c.060, i32 0, i32 2
  %bcmp = tail call i32 @bcmp(ptr noundef dereferenceable(6) %dst, ptr noundef dereferenceable(6) %ba, i32 6) #12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool17.not = icmp eq i32 %bcmp, 0
  br i1 %tobool17.not, label %if.then18, label %land.lhs.true15.for.inc_crit_edge

land.lhs.true15.for.inc_crit_edge:                ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

if.then18:                                        ; preds = %land.lhs.true15
  %call.i37 = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i37, label %if.then18.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i40

if.then18.rcu_read_unlock.exit_crit_edge:         ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit

land.lhs.true.i40:                                ; preds = %if.then18
  %call1.i38 = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i38)
  %tobool.not.i39 = icmp eq i32 %call1.i38, 0
  br i1 %tobool.not.i39, label %land.lhs.true.i40.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i42

land.lhs.true.i40.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i40
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit

land.lhs.true2.i42:                               ; preds = %land.lhs.true.i40
  %.b4.i41 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i41, label %land.lhs.true2.i42.rcu_read_unlock.exit_crit_edge, label %if.then.i43

land.lhs.true2.i42.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i42
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit

if.then.i43:                                      ; preds = %land.lhs.true2.i42
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 724, ptr noundef nonnull @.str.18) #9
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i43, %land.lhs.true2.i42.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i40.rcu_read_unlock.exit_crit_edge, %if.then18.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !685
  br label %cleanup

for.inc:                                          ; preds = %land.lhs.true15.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %7 = ptrtoint ptr %c.060 to i32
  call void @__asan_load4_noabort(i32 %7)
  %c.0 = load volatile ptr, ptr %c.060, align 4
  %cmp.not = icmp eq ptr %c.0, %conn_hash
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end.for.end_crit_edge
  %call.i46 = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i46, label %for.end.rcu_read_unlock.exit56_crit_edge, label %land.lhs.true.i49

for.end.rcu_read_unlock.exit56_crit_edge:         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit56

land.lhs.true.i49:                                ; preds = %for.end
  %call1.i47 = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i47)
  %tobool.not.i48 = icmp eq i32 %call1.i47, 0
  br i1 %tobool.not.i48, label %land.lhs.true.i49.rcu_read_unlock.exit56_crit_edge, label %land.lhs.true2.i51

land.lhs.true.i49.rcu_read_unlock.exit56_crit_edge: ; preds = %land.lhs.true.i49
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit56

land.lhs.true2.i51:                               ; preds = %land.lhs.true.i49
  %.b4.i50 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i50, label %land.lhs.true2.i51.rcu_read_unlock.exit56_crit_edge, label %if.then.i52

land.lhs.true2.i51.rcu_read_unlock.exit56_crit_edge: ; preds = %land.lhs.true2.i51
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit56

if.then.i52:                                      ; preds = %land.lhs.true2.i51
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 724, ptr noundef nonnull @.str.18) #9
  br label %rcu_read_unlock.exit56

rcu_read_unlock.exit56:                           ; preds = %if.then.i52, %land.lhs.true2.i51.rcu_read_unlock.exit56_crit_edge, %land.lhs.true.i49.rcu_read_unlock.exit56_crit_edge, %for.end.rcu_read_unlock.exit56_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !685
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit56, %rcu_read_unlock.exit
  %retval.0 = phi ptr [ %c.060, %rcu_read_unlock.exit ], [ null, %rcu_read_unlock.exit56 ]
  %8 = tail call i32 @llvm.read_register.i32(metadata !669) #9
  %and.i.i.i.i.i53 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i53 to ptr
  %preempt_count.i.i.i.i54 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i54 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i54, align 4
  %sub.i.i.i55 = add i32 %11, -1
  store volatile i32 %sub.i.i.i55, ptr %preempt_count.i.i.i.i54, align 4
  tail call void @rcu_read_unlock_strict() #9
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #9
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_bdaddr_list_lookup_with_flags(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_conn_add(ptr noundef, i32 noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_find_link_key(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_debugfs_create_conn(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_conn_add_sysfs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_connect_failed(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_sco_setup(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_conn_del(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #6

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_bdaddr_list_lookup(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_inquiry_cache_lookup(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @l2cap_connect_ind(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sco_connect_ind(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %handle) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %conn_hash = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 183
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #9
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !684
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #9
  %call.i = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 696, ptr noundef nonnull @.str.17) #9
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call i32 @rcu_read_lock_any_held() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.for.cond.preheader_crit_edge

rcu_read_lock.exit.for.cond.preheader_crit_edge:  ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond.preheader

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.for.cond.preheader_crit_edge, label %land.lhs.true3

land.lhs.true.for.cond.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond.preheader

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b31 = load i1, ptr @hci_conn_hash_lookup_handle.__warned, align 1
  br i1 %.b31, label %land.lhs.true3.for.cond.preheader_crit_edge, label %if.then

land.lhs.true3.for.cond.preheader_crit_edge:      ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond.preheader

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @hci_conn_hash_lookup_handle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 1014, ptr noundef nonnull @.str.15) #9
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then, %land.lhs.true3.for.cond.preheader_crit_edge, %land.lhs.true.for.cond.preheader_crit_edge, %rcu_read_lock.exit.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %for.cond.preheader
  %c.0.in = phi ptr [ %c.0, %for.body.for.cond_crit_edge ], [ %conn_hash, %for.cond.preheader ]
  %4 = ptrtoint ptr %c.0.in to i32
  call void @__asan_load4_noabort(i32 %4)
  %c.0 = load volatile ptr, ptr %c.0.in, align 4
  %cmp.not = icmp eq ptr %c.0, %conn_hash
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %handle11 = getelementptr inbounds %struct.hci_conn, ptr %c.0, i32 0, i32 11
  %5 = ptrtoint ptr %handle11 to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %handle11, align 2
  %cmp13 = icmp eq i16 %6, %handle
  br i1 %cmp13, label %if.then15, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond

if.then15:                                        ; preds = %for.body
  %call.i32 = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i32, label %if.then15.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i35

if.then15.rcu_read_unlock.exit_crit_edge:         ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit

land.lhs.true.i35:                                ; preds = %if.then15
  %call1.i33 = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i33)
  %tobool.not.i34 = icmp eq i32 %call1.i33, 0
  br i1 %tobool.not.i34, label %land.lhs.true.i35.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i37

land.lhs.true.i35.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i35
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit

land.lhs.true2.i37:                               ; preds = %land.lhs.true.i35
  %.b4.i36 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i36, label %land.lhs.true2.i37.rcu_read_unlock.exit_crit_edge, label %if.then.i38

land.lhs.true2.i37.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i37
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit

if.then.i38:                                      ; preds = %land.lhs.true2.i37
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 724, ptr noundef nonnull @.str.18) #9
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i38, %land.lhs.true2.i37.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i35.rcu_read_unlock.exit_crit_edge, %if.then15.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !685
  br label %cleanup

for.end:                                          ; preds = %for.cond
  %call.i41 = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i41, label %for.end.rcu_read_unlock.exit51_crit_edge, label %land.lhs.true.i44

for.end.rcu_read_unlock.exit51_crit_edge:         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit51

land.lhs.true.i44:                                ; preds = %for.end
  %call1.i42 = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i42)
  %tobool.not.i43 = icmp eq i32 %call1.i42, 0
  br i1 %tobool.not.i43, label %land.lhs.true.i44.rcu_read_unlock.exit51_crit_edge, label %land.lhs.true2.i46

land.lhs.true.i44.rcu_read_unlock.exit51_crit_edge: ; preds = %land.lhs.true.i44
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit51

land.lhs.true2.i46:                               ; preds = %land.lhs.true.i44
  %.b4.i45 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i45, label %land.lhs.true2.i46.rcu_read_unlock.exit51_crit_edge, label %if.then.i47

land.lhs.true2.i46.rcu_read_unlock.exit51_crit_edge: ; preds = %land.lhs.true2.i46
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit51

if.then.i47:                                      ; preds = %land.lhs.true2.i46
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 724, ptr noundef nonnull @.str.18) #9
  br label %rcu_read_unlock.exit51

rcu_read_unlock.exit51:                           ; preds = %if.then.i47, %land.lhs.true2.i46.rcu_read_unlock.exit51_crit_edge, %land.lhs.true.i44.rcu_read_unlock.exit51_crit_edge, %for.end.rcu_read_unlock.exit51_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !685
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit51, %rcu_read_unlock.exit
  %retval.0 = phi ptr [ %c.0, %rcu_read_unlock.exit ], [ null, %rcu_read_unlock.exit51 ]
  %7 = tail call i32 @llvm.read_register.i32(metadata !669) #9
  %and.i.i.i.i.i48 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i48 to ptr
  %preempt_count.i.i.i.i49 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i49 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i49, align 4
  %sub.i.i.i50 = add i32 %10, -1
  store volatile i32 %sub.i.i.i50, ptr %preempt_count.i.i.i.i49, align 4
  tail call void @rcu_read_unlock_strict() #9
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #9
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_disconnect_failed(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_device_disconnected(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_remove_link_key(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_conn_params_lookup(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_update_passive_scan(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_enable_advertising(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bt_info(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_auth_failed(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hci_conn_drop(ptr noundef %conn) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_drop.__UNIQUE_ID_ddebug472, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_conn_drop, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #9
  %0 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %refcnt, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_drop.__UNIQUE_ID_ddebug472, ptr noundef nonnull @.str.20, ptr noundef %conn, i32 noundef %1) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %refcnt4 = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 1
  %call.i.i35 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4, i32 noundef 4) #9
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #9, !srcloc !686
  tail call void @llvm.prefetch.p0(ptr %refcnt4, i32 1, i32 3, i32 1) #9
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4, ptr %refcnt4, i32 1, ptr elementtype(i32) %refcnt4) #9, !srcloc !687
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %2, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #9, !srcloc !688
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then6, label %do.end.if.end22_crit_edge

do.end.if.end22_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end22

if.then6:                                         ; preds = %do.end
  %type = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 14
  %3 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %type, align 1
  %5 = zext i8 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.266)
  switch i8 %4, label %if.then6.sw.epilog_crit_edge [
    i8 1, label %if.then6.sw.bb_crit_edge
    i8 -128, label %if.then6.sw.bb_crit_edge37
    i8 -127, label %sw.bb16
  ]

if.then6.sw.bb_crit_edge37:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb

if.then6.sw.bb_crit_edge:                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb

if.then6.sw.epilog_crit_edge:                     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

sw.bb:                                            ; preds = %if.then6.sw.bb_crit_edge, %if.then6.sw.bb_crit_edge37
  %idle_work = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 60
  %call7 = tail call zeroext i1 @cancel_delayed_work(ptr noundef %idle_work) #9
  %state = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 12
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %7)
  %cmp = icmp eq i16 %7, 1
  br i1 %cmp, label %if.then10, label %sw.bb.sw.epilog_crit_edge

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

if.then10:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  %disc_timeout = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 31
  %8 = ptrtoint ptr %disc_timeout to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %disc_timeout, align 2
  %conv11 = zext i16 %9 to i32
  %out = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 16
  %10 = ptrtoint ptr %out to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %out, align 1, !range !679
  %12 = xor i8 %11, 1
  %13 = zext i8 %12 to i32
  %spec.select = shl nuw nsw i32 %conv11, %13
  br label %sw.epilog

sw.bb16:                                          ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #11
  %disc_timeout17 = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 31
  %14 = ptrtoint ptr %disc_timeout17 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %disc_timeout17, align 2
  %conv18 = zext i16 %15 to i32
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb16, %if.then10, %sw.bb.sw.epilog_crit_edge, %if.then6.sw.epilog_crit_edge
  %timeo.0 = phi i32 [ %conv18, %sw.bb16 ], [ %spec.select, %if.then10 ], [ 0, %sw.bb.sw.epilog_crit_edge ], [ 0, %if.then6.sw.epilog_crit_edge ]
  %disc_work = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 58
  %call19 = tail call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work) #9
  %hdev = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 65
  %16 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hdev, align 4
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %17, i32 0, i32 138
  %18 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %workqueue, align 4
  %call.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %19, ptr noundef %disc_work, i32 noundef %timeo.0) #9
  br label %if.end22

if.end22:                                         ; preds = %sw.epilog, %do.end.if.end22_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hci_encrypt_cfm(ptr noundef %conn, i8 noundef zeroext %status) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %state = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 12
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %1)
  %cmp = icmp eq i16 %1, 7
  br i1 %cmp, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool.not = icmp eq i8 %status, 0
  br i1 %tobool.not, label %if.then2, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  %2 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 1, ptr %state, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then.if.end_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.end.for.end.i_crit_edge, label %if.end.for.body.i_crit_edge

if.end.for.body.i_crit_edge:                      ; preds = %if.end
  br label %for.body.i

if.end.for.end.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.end.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %3 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %4(ptr noundef %conn, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %5 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 71
  %6 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %7, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %7(ptr noundef %conn, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  tail call fastcc void @hci_conn_drop(ptr noundef %conn)
  br label %cleanup

if.end4:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 47
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %flags, align 4
  %10 = and i32 %9, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool5.not = icmp eq i32 %10, 0
  br i1 %tobool5.not, label %if.end4.if.end13_crit_edge, label %if.else

if.end4.if.end13_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end13

if.else:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #11
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %flags, align 4
  %13 = and i32 %12, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool9.not = icmp eq i32 %13, 0
  %. = select i1 %tobool9.not, i8 1, i8 2
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end4.if.end13_crit_edge
  %encrypt.0 = phi i8 [ 0, %if.end4.if.end13_crit_edge ], [ %., %if.else ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool14.not = icmp eq i8 %status, 0
  br i1 %tobool14.not, label %if.then15, label %if.end13.if.end31_crit_edge

if.end13.if.end31_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end31

if.then15:                                        ; preds = %if.end13
  %sec_level = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 24
  %14 = ptrtoint ptr %sec_level to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %sec_level, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %cmp17 = icmp eq i8 %15, 0
  br i1 %cmp17, label %if.then19, label %if.then15.if.end21_crit_edge

if.then15.if.end21_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end21

if.then19:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %sec_level to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %sec_level, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.then15.if.end21_crit_edge
  %pending_sec_level = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 25
  %17 = ptrtoint ptr %pending_sec_level to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %pending_sec_level, align 1
  %19 = ptrtoint ptr %sec_level to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %sec_level, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %18, i8 %20)
  %cmp25 = icmp ugt i8 %18, %20
  br i1 %cmp25, label %if.then27, label %if.end21.if.end31_crit_edge

if.end21.if.end31_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end31

if.then27:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #11
  %21 = ptrtoint ptr %sec_level to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %18, ptr %sec_level, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then27, %if.end21.if.end31_crit_edge, %if.end13.if.end31_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.072 = load ptr, ptr @hci_cb_list, align 4
  %cmp32.not73 = icmp eq ptr %cb.072, @hci_cb_list
  br i1 %cmp32.not73, label %if.end31.for.end_crit_edge, label %if.end31.for.body_crit_edge

if.end31.for.body_crit_edge:                      ; preds = %if.end31
  br label %for.body

if.end31.for.end_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end31.for.body_crit_edge
  %cb.074 = phi ptr [ %cb.0, %for.inc.for.body_crit_edge ], [ %cb.072, %if.end31.for.body_crit_edge ]
  %security_cfm = getelementptr inbounds %struct.hci_cb, ptr %cb.074, i32 0, i32 4
  %22 = ptrtoint ptr %security_cfm to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %security_cfm, align 4
  %tobool34.not = icmp eq ptr %23, null
  br i1 %tobool34.not, label %for.body.for.inc_crit_edge, label %if.then35

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

if.then35:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %23(ptr noundef %conn, i8 noundef zeroext %status, i8 noundef zeroext %encrypt.0) #9
  br label %for.inc

for.inc:                                          ; preds = %if.then35, %for.body.for.inc_crit_edge
  %24 = ptrtoint ptr %cb.074 to i32
  call void @__asan_load4_noabort(i32 %24)
  %cb.0 = load ptr, ptr %cb.074, align 4
  %cmp32.not = icmp eq ptr %cb.0, @hci_cb_list
  br i1 %cmp32.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end31.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %security_cfm_cb = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 72
  %25 = ptrtoint ptr %security_cfm_cb to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %security_cfm_cb, align 4
  %tobool42.not = icmp eq ptr %26, null
  br i1 %tobool42.not, label %for.end.cleanup_crit_edge, label %if.then43

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then43:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %26(ptr noundef %conn, i8 noundef zeroext %status) #9
  br label %cleanup

cleanup:                                          ; preds = %if.then43, %for.end.cleanup_crit_edge, %hci_connect_cfm.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hci_check_pending_name(ptr noundef %hdev, ptr noundef %conn, ptr noundef %bdaddr, ptr noundef %name, i8 noundef zeroext %name_len) unnamed_addr #0 align 64 {
entry:
  %cp.i.i = alloca %struct.hci_cp_remote_name_req, align 1
  %.compoundliteral.i = alloca %struct.bdaddr_t, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %conn, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %state = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 12
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %state, align 4
  %2 = zext i16 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.267)
  switch i16 %1, label %land.lhs.true.if.end_crit_edge [
    i16 7, label %land.lhs.true.land.lhs.true6_crit_edge
    i16 1, label %land.lhs.true.land.lhs.true6_crit_edge52
  ]

land.lhs.true.land.lhs.true6_crit_edge52:         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true6

land.lhs.true.land.lhs.true6_crit_edge:           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true6

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true6:                                   ; preds = %land.lhs.true.land.lhs.true6_crit_edge, %land.lhs.true.land.lhs.true6_crit_edge52
  %flags = getelementptr inbounds %struct.hci_conn, ptr %conn, i32 0, i32 47
  %call = tail call i32 @_test_and_set_bit(i32 noundef 6, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool7.not = icmp eq i32 %call, 0
  br i1 %tobool7.not, label %if.then, label %land.lhs.true6.if.end_crit_edge

land.lhs.true6.if.end_crit_edge:                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.then:                                          ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @mgmt_device_connected(ptr noundef %hdev, ptr noundef nonnull %conn, ptr noundef %name, i8 noundef zeroext %name_len) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true6.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %state8 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 1
  %3 = ptrtoint ptr %state8 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %state8, align 4
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.268)
  switch i32 %4, label %if.end.cleanup_crit_edge [
    i32 3, label %if.end22
    i32 4, label %if.end.discov_complete_crit_edge
  ]

if.end.discov_complete_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %discov_complete

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end22:                                         ; preds = %if.end
  %call23 = tail call ptr @hci_inquiry_cache_lookup_resolve(ptr noundef %hdev, ptr noundef %bdaddr, i32 noundef 2) #9
  %tobool24.not = icmp eq ptr %call23, null
  br i1 %tobool24.not, label %if.end22.cleanup_crit_edge, label %if.end26

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end26:                                         ; preds = %if.end22
  %list = getelementptr inbounds %struct.inquiry_entry, ptr %call23, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #9
  br i1 %call.i.i, label %if.end.i.i, label %if.end26.list_del.exit_crit_edge

if.end26.list_del.exit_crit_edge:                 ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #11
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #11
  %prev.i.i = getelementptr inbounds %struct.inquiry_entry, ptr %call23, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %8 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end26.list_del.exit_crit_edge
  %12 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 256 to ptr), ptr %list, align 4
  %prev.i = getelementptr inbounds %struct.inquiry_entry, ptr %call23, i32 0, i32 1, i32 1
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %tobool27.not = icmp eq ptr %name, null
  %cond = select i1 %tobool27.not, i32 0, i32 3
  %name_state = getelementptr inbounds %struct.inquiry_entry, ptr %call23, i32 0, i32 2
  %14 = ptrtoint ptr %name_state to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %cond, ptr %name_state, align 4
  %rssi = getelementptr inbounds %struct.inquiry_entry, ptr %call23, i32 0, i32 4, i32 6
  %15 = ptrtoint ptr %rssi to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %rssi, align 2
  tail call void @mgmt_remote_name(ptr noundef %hdev, ptr noundef %bdaddr, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef signext %16, ptr noundef %name, i8 noundef zeroext %name_len) #9
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %.compoundliteral.i)
  %resolve.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 4
  %17 = ptrtoint ptr %resolve.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %resolve.i, align 4
  %cmp.i.not.i = icmp eq ptr %18, %resolve.i
  br i1 %cmp.i.not.i, label %list_del.exit.hci_resolve_next_name.exit.thread_crit_edge, label %if.end.i

list_del.exit.hci_resolve_next_name.exit.thread_crit_edge: ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_resolve_next_name.exit.thread

if.end.i:                                         ; preds = %list_del.exit
  %name_resolve_timeout.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 20
  %19 = ptrtoint ptr %name_resolve_timeout.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %name_resolve_timeout.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %21 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %20, %21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %if.then1.i, label %if.end2.i

if.then1.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_warn_ratelimited(ptr noundef nonnull @.str.30, ptr noundef %name.i) #9
  br label %hci_resolve_next_name.exit.thread

if.end2.i:                                        ; preds = %if.end.i
  %22 = call ptr @memset(ptr %.compoundliteral.i, i32 0, i32 6)
  %call7.i = call ptr @hci_inquiry_cache_lookup_resolve(ptr noundef %hdev, ptr noundef nonnull %.compoundliteral.i, i32 noundef 1) #9
  %tobool8.not.i = icmp eq ptr %call7.i, null
  br i1 %tobool8.not.i, label %if.end2.i.hci_resolve_next_name.exit.thread_crit_edge, label %if.end10.i

if.end2.i.hci_resolve_next_name.exit.thread_crit_edge: ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_resolve_next_name.exit.thread

if.end10.i:                                       ; preds = %if.end2.i
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %cp.i.i) #9
  %23 = getelementptr inbounds %struct.hci_cp_remote_name_req, ptr %cp.i.i, i32 0, i32 1
  %24 = getelementptr inbounds %struct.hci_cp_remote_name_req, ptr %cp.i.i, i32 0, i32 2
  %25 = getelementptr inbounds %struct.hci_cp_remote_name_req, ptr %cp.i.i, i32 0, i32 3
  %data.i.i = getelementptr inbounds %struct.inquiry_entry, ptr %call7.i, i32 0, i32 4
  %26 = call ptr @memcpy(ptr %cp.i.i, ptr %data.i.i, i32 6)
  %pscan_rep_mode.i.i = getelementptr inbounds %struct.inquiry_entry, ptr %call7.i, i32 0, i32 4, i32 1
  %27 = ptrtoint ptr %pscan_rep_mode.i.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %pscan_rep_mode.i.i, align 2
  %29 = ptrtoint ptr %23 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %28, ptr %23, align 1
  %pscan_mode.i.i = getelementptr inbounds %struct.inquiry_entry, ptr %call7.i, i32 0, i32 4, i32 3
  %30 = ptrtoint ptr %pscan_mode.i.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %pscan_mode.i.i, align 4
  %32 = ptrtoint ptr %24 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %31, ptr %24, align 1
  %clock_offset.i.i = getelementptr inbounds %struct.inquiry_entry, ptr %call7.i, i32 0, i32 4, i32 5
  %33 = ptrtoint ptr %clock_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %clock_offset.i.i, align 4
  %35 = ptrtoint ptr %25 to i32
  call void @__asan_storeN_noabort(i32 %35, i32 2)
  store i16 %34, ptr %25, align 1
  %call.i.i50 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1049, i32 noundef 10, ptr noundef nonnull %cp.i.i) #9
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %cp.i.i) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i50)
  %cmp12.i = icmp eq i32 %call.i.i50, 0
  br i1 %cmp12.i, label %hci_resolve_next_name.exit, label %if.end10.i.hci_resolve_next_name.exit.thread_crit_edge

if.end10.i.hci_resolve_next_name.exit.thread_crit_edge: ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_resolve_next_name.exit.thread

hci_resolve_next_name.exit.thread:                ; preds = %if.end10.i.hci_resolve_next_name.exit.thread_crit_edge, %if.end2.i.hci_resolve_next_name.exit.thread_crit_edge, %if.then1.i, %list_del.exit.hci_resolve_next_name.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %.compoundliteral.i)
  br label %discov_complete

hci_resolve_next_name.exit:                       ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #11
  %name_state.i = getelementptr inbounds %struct.inquiry_entry, ptr %call7.i, i32 0, i32 2
  %36 = ptrtoint ptr %name_state.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 2, ptr %name_state.i, align 4
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %.compoundliteral.i)
  br label %cleanup

discov_complete:                                  ; preds = %hci_resolve_next_name.exit.thread, %if.end.discov_complete_crit_edge
  call void @hci_discovery_set_state(ptr noundef %hdev, i32 noundef 0) #9
  br label %cleanup

cleanup:                                          ; preds = %discov_complete, %hci_resolve_next_name.exit, %if.end22.cleanup_crit_edge, %if.end.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strnlen(ptr nocapture noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_device_connected(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_remote_name(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef signext, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bt_warn_ratelimited(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_adv_instances_set_rpa_expired(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_conn_check_link_mode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_disconnect(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_req_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_req_add(ptr noundef, i16 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_req_run_skb(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @read_enc_key_size_complete(ptr noundef %hdev, i8 noundef zeroext %status, i16 noundef zeroext %opcode, ptr noundef readonly %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @read_enc_key_size_complete.__UNIQUE_ID_ddebug601, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@read_enc_key_size_complete, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @read_enc_key_size_complete.__UNIQUE_ID_ddebug601, ptr noundef nonnull @.str.34, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %tobool3.not = icmp eq ptr %skb, null
  br i1 %tobool3.not, label %do.end.if.then5_crit_edge, label %lor.lhs.false

do.end.if.then5_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then5

lor.lhs.false:                                    ; preds = %do.end
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %1)
  %cmp = icmp ult i32 %1, 4
  br i1 %cmp, label %lor.lhs.false.if.then5_crit_edge, label %if.end8

lor.lhs.false.if.then5_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then5

if.then5:                                         ; preds = %lor.lhs.false.if.then5_crit_edge, %do.end.if.then5_crit_edge
  %name6 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.35, ptr noundef %name6) #9
  br label %cleanup

if.end8:                                          ; preds = %lor.lhs.false
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data, align 4
  %handle9 = getelementptr inbounds %struct.hci_rp_read_enc_key_size, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %handle9 to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle9, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end8.unlock_crit_edge, label %if.end13

if.end8.unlock_crit_edge:                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end13:                                         ; preds = %if.end8
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool15.not = icmp eq i8 %8, 0
  br i1 %tobool15.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  %name17 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv19 = zext i16 %6 to i32
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.36, ptr noundef %name17, i32 noundef %conv19) #9
  br label %if.end21

if.else:                                          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  %key_size = getelementptr inbounds %struct.hci_rp_read_enc_key_size, ptr %3, i32 0, i32 2
  %9 = ptrtoint ptr %key_size to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %key_size, align 1
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then16
  %.sink = phi i8 [ %10, %if.else ], [ 0, %if.then16 ]
  %11 = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 27
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %.sink, ptr %11, align 1
  tail call fastcc void @hci_encrypt_cfm(ptr noundef nonnull %call10, i8 noundef zeroext 0)
  br label %unlock

unlock:                                           ; preds = %if.end21, %if.end8.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %unlock, %if.then5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_inquiry_cancel(ptr noundef %hdev, ptr nocapture noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_inquiry_cancel.__UNIQUE_ID_ddebug476, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_inquiry_cancel, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_inquiry_cancel.__UNIQUE_ID_ddebug476, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %3)
  %cmp = icmp eq i8 %3, 12
  br i1 %cmp, label %land.lhs.true, label %do.end.if.end12_crit_edge

do.end.if.end12_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

land.lhs.true:                                    ; preds = %do.end
  %flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %flags, align 4
  %6 = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool7.not = icmp eq i32 %6, 0
  br i1 %tobool7.not, label %if.end12.thread, label %if.end12thread-pre-split

if.end12.thread:                                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %name9 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_warn(ptr noundef nonnull @.str.43, ptr noundef %name9) #9
  %7 = ptrtoint ptr %data to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %data, align 1
  br label %if.end17

if.end12thread-pre-split:                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %8)
  %.pr = load i8, ptr %data, align 1
  br label %if.end12

if.end12:                                         ; preds = %if.end12thread-pre-split, %do.end.if.end12_crit_edge
  %9 = phi i8 [ %.pr, %if.end12thread-pre-split ], [ %3, %do.end.if.end12_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool14.not = icmp eq i8 %9, 0
  br i1 %tobool14.not, label %if.end12.if.end17_crit_edge, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end12.if.end17_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.end17:                                         ; preds = %if.end12.if.end17_crit_edge, %if.end12.thread
  %flags18 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %flags18) #9
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #9, !srcloc !689
  tail call void @wake_up_bit(ptr noundef %flags18, i32 noundef 7) #9
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %10 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %dev_flags, align 4
  %12 = and i32 %11, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool28.not = icmp eq i32 %12, 0
  br i1 %tobool28.not, label %if.end17.if.then32_crit_edge, label %lor.lhs.false

if.end17.if.then32_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then32

lor.lhs.false:                                    ; preds = %if.end17
  %le_scan_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 46
  %13 = ptrtoint ptr %le_scan_type to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %le_scan_type, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %14)
  %cmp30.not = icmp eq i8 %14, 1
  br i1 %cmp30.not, label %lor.lhs.false.if.end33_crit_edge, label %lor.lhs.false.if.then32_crit_edge

lor.lhs.false.if.then32_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then32

lor.lhs.false.if.end33_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end33

if.then32:                                        ; preds = %lor.lhs.false.if.then32_crit_edge, %if.end17.if.then32_crit_edge
  tail call void @hci_discovery_set_state(ptr noundef %hdev, i32 noundef 0) #9
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %lor.lhs.false.if.end33_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  tail call void @hci_conn_check_pending(ptr noundef %hdev) #9
  %15 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end33, %if.end12.cleanup_crit_edge
  %retval.0 = phi i8 [ %16, %if.end33 ], [ %9, %if.end12.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_periodic_inq(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_periodic_inq.__UNIQUE_ID_ddebug477, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_periodic_inq, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_periodic_inq.__UNIQUE_ID_ddebug477, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_set_bit(i32 noundef 30, ptr noundef %dev_flags) #9
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %5, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_exit_periodic_inq(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_exit_periodic_inq.__UNIQUE_ID_ddebug478, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_exit_periodic_inq, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_exit_periodic_inq.__UNIQUE_ID_ddebug478, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_clear_bit(i32 noundef 30, ptr noundef %dev_flags) #9
  tail call void @hci_conn_check_pending(ptr noundef %hdev) #9
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %5, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_remote_name_req_cancel(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_remote_name_req_cancel.__UNIQUE_ID_ddebug479, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_remote_name_req_cancel, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_remote_name_req_cancel.__UNIQUE_ID_ddebug479, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  ret i8 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_role_discovery(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_role_discovery.__UNIQUE_ID_ddebug480, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_role_discovery, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_role_discovery.__UNIQUE_ID_ddebug480, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_rp_role_discovery, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %call8 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.if.end12_crit_edge, label %if.then10

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %role = getelementptr inbounds %struct.hci_rp_role_discovery, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %role to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %role, align 1
  %role11 = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 15
  %9 = ptrtoint ptr %role11 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %role11, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end7.if.end12_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %11, %if.end12 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_link_policy(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_link_policy.__UNIQUE_ID_ddebug481, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_link_policy, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_link_policy.__UNIQUE_ID_ddebug481, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_rp_read_link_policy, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %call8 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.if.end11_crit_edge, label %if.then10

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %policy = getelementptr inbounds %struct.hci_rp_read_link_policy, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %policy to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %policy, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8)
  %link_policy = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 21
  %10 = ptrtoint ptr %link_policy to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %link_policy, align 8
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7.if.end11_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %12, %if.end11 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_link_policy(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_link_policy.__UNIQUE_ID_ddebug482, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_link_policy, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_link_policy.__UNIQUE_ID_ddebug482, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 2061) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_rp_write_link_policy, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %call13 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end12.if.end17_crit_edge, label %if.then15

if.end12.if.end17_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %add.ptr = getelementptr i8, ptr %call8, i32 2
  %7 = ptrtoint ptr %add.ptr to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %add.ptr, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #9
  %link_policy = getelementptr inbounds %struct.hci_conn, ptr %call13, i32 0, i32 21
  %10 = ptrtoint ptr %link_policy to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %link_policy, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12.if.end17_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end17, %if.end7.cleanup.sink.split_crit_edge
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %12, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_def_link_policy(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_def_link_policy.__UNIQUE_ID_ddebug483, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_def_link_policy, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_def_link_policy.__UNIQUE_ID_ddebug483, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %policy = getelementptr inbounds %struct.hci_rp_read_def_link_policy, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %policy to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %policy, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %link_policy = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 100
  %7 = ptrtoint ptr %link_policy to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %link_policy, align 8
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %9, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_def_link_policy(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_def_link_policy.__UNIQUE_ID_ddebug484, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_def_link_policy, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_def_link_policy.__UNIQUE_ID_ddebug484, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 2063) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %call8, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5) #9
  %link_policy = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 100
  %7 = ptrtoint ptr %link_policy to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %link_policy, align 8
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %9, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_reset(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_reset.__UNIQUE_ID_ddebug485, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_reset, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_reset.__UNIQUE_ID_ddebug485, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  tail call void @_clear_bit(i32 noundef 9, ptr noundef %flags) #9
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %do.body8, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.body8:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_clear_bit(i32 noundef 14, ptr noundef %dev_flags) #9
  tail call void @_clear_bit(i32 noundef 13, ptr noundef %dev_flags) #9
  tail call void @_clear_bit(i32 noundef 40, ptr noundef %dev_flags) #9
  tail call void @_clear_bit(i32 noundef 30, ptr noundef %dev_flags) #9
  tail call void @_clear_bit(i32 noundef 44, ptr noundef %dev_flags) #9
  tail call void @hci_discovery_set_state(ptr noundef %hdev, i32 noundef 0) #9
  %inq_tx_power = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 38
  %4 = ptrtoint ptr %inq_tx_power to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 127, ptr %inq_tx_power, align 1
  %adv_tx_power = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 208
  %5 = ptrtoint ptr %adv_tx_power to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 127, ptr %adv_tx_power, align 8
  %adv_data = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 209
  %le_scan_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 46
  %6 = ptrtoint ptr %le_scan_type to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %le_scan_type, align 8
  %ssp_debug_mode = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 76
  %7 = ptrtoint ptr %ssp_debug_mode to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %ssp_debug_mode, align 1
  %le_accept_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 192
  %8 = call ptr @memset(ptr %adv_data, i32 0, i32 504)
  tail call void @hci_bdaddr_list_clear(ptr noundef %le_accept_list) #9
  %le_resolv_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 193
  tail call void @hci_bdaddr_list_clear(ptr noundef %le_resolv_list) #9
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.body8, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %10, %do.body8 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_stored_link_key(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_stored_link_key.__UNIQUE_ID_ddebug486, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_stored_link_key, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_stored_link_key.__UNIQUE_ID_ddebug486, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3085) #9
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end7

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool9.not = icmp eq i8 %3, 0
  br i1 %tobool9.not, label %land.lhs.true, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end7
  %read_all = getelementptr inbounds %struct.hci_cp_read_stored_link_key, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %read_all to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %read_all, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp = icmp eq i8 %5, 1
  br i1 %cmp, label %if.then12, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then12:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  %max_keys = getelementptr inbounds %struct.hci_rp_read_stored_link_key, ptr %data, i32 0, i32 1
  %6 = ptrtoint ptr %max_keys to i32
  call void @__asan_loadN_noabort(i32 %6, i32 2)
  %7 = load i16, ptr %max_keys, align 1
  %8 = tail call i16 @llvm.bswap.i16(i16 %7)
  %stored_max_keys = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 35
  %9 = ptrtoint ptr %stored_max_keys to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %8, ptr %stored_max_keys, align 2
  %num_keys = getelementptr inbounds %struct.hci_rp_read_stored_link_key, ptr %data, i32 0, i32 2
  %10 = ptrtoint ptr %num_keys to i32
  call void @__asan_loadN_noabort(i32 %10, i32 2)
  %11 = load i16, ptr %num_keys, align 1
  %12 = tail call i16 @llvm.bswap.i16(i16 %11)
  %stored_num_keys = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 36
  %13 = ptrtoint ptr %stored_num_keys to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %12, ptr %stored_num_keys, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %land.lhs.true.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %14 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %14)
  %retval.0 = load i8, ptr %data, align 1
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_delete_stored_link_key(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_delete_stored_link_key.__UNIQUE_ID_ddebug487, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_delete_stored_link_key, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_delete_stored_link_key.__UNIQUE_ID_ddebug487, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %num_keys = getelementptr inbounds %struct.hci_rp_delete_stored_link_key, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %num_keys to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %num_keys, align 1
  %stored_num_keys = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 36
  %6 = ptrtoint ptr %stored_num_keys to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %stored_num_keys, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %7)
  %cmp.not = icmp ugt i16 %5, %7
  %8 = tail call i16 @llvm.bswap.i16(i16 %5)
  %sub = sub i16 %7, %8
  %storemerge = select i1 %cmp.not, i16 0, i16 %sub
  %9 = ptrtoint ptr %stored_num_keys to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %storemerge, ptr %stored_num_keys, align 8
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %11, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_local_name(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_local_name.__UNIQUE_ID_ddebug488, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_local_name, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_local_name.__UNIQUE_ID_ddebug488, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3091) #9
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end7

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool10.not = icmp eq i32 %4, 0
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  br i1 %tobool10.not, label %if.else, label %if.then11

if.then11:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @mgmt_set_local_name_complete(ptr noundef %hdev, ptr noundef nonnull %call3, i8 noundef zeroext %6) #9
  br label %if.end18

if.else:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool14.not = icmp eq i8 %6, 0
  br i1 %tobool14.not, label %if.then15, label %if.else.if.end18_crit_edge

if.else.if.end18_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then15:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %dev_name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 13
  %7 = call ptr @memcpy(ptr %dev_name, ptr %call3, i32 248)
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %if.else.if.end18_crit_edge, %if.then11
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %do.end.cleanup_crit_edge
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %8)
  %retval.0 = load i8, ptr %data, align 1
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_local_name(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_local_name.__UNIQUE_ID_ddebug489, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_local_name, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_local_name.__UNIQUE_ID_ddebug489, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %4 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %dev_flags, align 4
  %and1.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool10.not = icmp eq i32 %and1.i, 0
  br i1 %tobool10.not, label %lor.lhs.false, label %if.end7.if.then15_crit_edge

if.end7.if.then15_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

lor.lhs.false:                                    ; preds = %if.end7
  %6 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dev_flags, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool14.not = icmp eq i32 %8, 0
  br i1 %tobool14.not, label %lor.lhs.false.if.end19_crit_edge, label %lor.lhs.false.if.then15_crit_edge

lor.lhs.false.if.then15_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

lor.lhs.false.if.end19_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end19

if.then15:                                        ; preds = %lor.lhs.false.if.then15_crit_edge, %if.end7.if.then15_crit_edge
  %dev_name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 13
  %name17 = getelementptr inbounds %struct.hci_rp_read_local_name, ptr %data, i32 0, i32 1
  %9 = call ptr @memcpy(ptr %dev_name, ptr %name17, i32 248)
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %lor.lhs.false.if.end19_crit_edge
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %11, %if.end19 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_auth_enable(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_auth_enable.__UNIQUE_ID_ddebug490, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_auth_enable, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_auth_enable.__UNIQUE_ID_ddebug490, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3104) #9
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end7

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool9.not = icmp eq i8 %3, 0
  br i1 %tobool9.not, label %if.then10, label %if.end7.if.end16_crit_edge

if.end7.if.end16_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16

if.then10:                                        ; preds = %if.end7
  %4 = ptrtoint ptr %call3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp = icmp eq i8 %5, 1
  %flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  br i1 %cmp, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 5, ptr noundef %flags) #9
  br label %if.end16

if.else:                                          ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 5, ptr noundef %flags) #9
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then13, %if.end7.if.end16_crit_edge
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %6 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dev_flags, align 4
  %8 = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool19.not = icmp eq i32 %8, 0
  br i1 %tobool19.not, label %if.end16.if.end22_crit_edge, label %if.then20

if.end16.if.end22_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end22

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 1
  tail call void @mgmt_auth_enable_complete(ptr noundef %hdev, i8 noundef zeroext %10) #9
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end16.if.end22_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %do.end.cleanup_crit_edge
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %11)
  %retval.0 = load i8, ptr %data, align 1
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_encrypt_mode(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_encrypt_mode.__UNIQUE_ID_ddebug491, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_encrypt_mode, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_encrypt_mode.__UNIQUE_ID_ddebug491, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3106) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool13.not = icmp eq i8 %5, 0
  %flags15 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  br i1 %tobool13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 6, ptr noundef %flags15) #9
  br label %cleanup.sink.split

if.else:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %flags15) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.else, %if.then14, %if.end7.cleanup.sink.split_crit_edge
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %7, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_scan_enable(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_scan_enable.__UNIQUE_ID_ddebug492, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_scan_enable, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_scan_enable.__UNIQUE_ID_ddebug492, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3098) #9
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end7

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %2 = ptrtoint ptr %call3 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %call3, align 1
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool9.not = icmp eq i8 %5, 0
  br i1 %tobool9.not, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %discov_timeout = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 147
  %6 = ptrtoint ptr %discov_timeout to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 0, ptr %discov_timeout, align 4
  br label %done

if.end11:                                         ; preds = %if.end7
  %conv12 = zext i8 %3 to i32
  %and = and i32 %conv12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool13.not = icmp eq i32 %and, 0
  %flags15 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  br i1 %tobool13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 4, ptr noundef %flags15) #9
  br label %if.end16

if.else:                                          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %flags15) #9
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then14
  %and18 = and i32 %conv12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  %flags23 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  br i1 %tobool19.not, label %if.else22, label %if.then20

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 3, ptr noundef %flags23) #9
  br label %done

if.else22:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %flags23) #9
  br label %done

done:                                             ; preds = %if.else22, %if.then20, %if.then10
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %done, %do.end.cleanup_crit_edge
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %retval.0 = load i8, ptr %data, align 1
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_set_event_filter(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_set_event_filter.__UNIQUE_ID_ddebug493, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_set_event_filter, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_set_event_filter.__UNIQUE_ID_ddebug493, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3077) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp = icmp eq i8 %5, 0
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  br i1 %cmp, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 35, ptr noundef %dev_flags) #9
  br label %cleanup.sink.split

if.else:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 35, ptr noundef %dev_flags) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.else, %if.then15, %if.end7.cleanup.sink.split_crit_edge
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %7, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_class_of_dev(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_class_of_dev.__UNIQUE_ID_ddebug494, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_class_of_dev, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_class_of_dev.__UNIQUE_ID_ddebug494, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %dev_class = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 17
  %dev_class9 = getelementptr inbounds %struct.hci_rp_read_class_of_dev, ptr %data, i32 0, i32 1
  %4 = call ptr @memcpy(ptr %dev_class, ptr %dev_class9, i32 3)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_class_of_dev.__UNIQUE_ID_ddebug495, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_class_of_dev, %if.then23)) #9
          to label %do.end36 [label %if.then23], !srcloc !680

if.then23:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %name24 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %arrayidx = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 17, i32 2
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 2
  %conv27 = zext i8 %6 to i32
  %arrayidx29 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 17, i32 1
  %7 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx29, align 1
  %conv30 = zext i8 %8 to i32
  %9 = ptrtoint ptr %dev_class to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %dev_class, align 8
  %conv33 = zext i8 %10 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_class_of_dev.__UNIQUE_ID_ddebug495, ptr noundef nonnull @.str.62, ptr noundef %name24, i32 noundef %conv27, i32 noundef %conv30, i32 noundef %conv33) #9
  br label %do.end36

do.end36:                                         ; preds = %if.then23, %if.end7
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.end36, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %12, %do.end36 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_class_of_dev(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_class_of_dev.__UNIQUE_ID_ddebug496, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_class_of_dev, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_class_of_dev.__UNIQUE_ID_ddebug496, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3108) #9
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end7

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool9.not = icmp eq i8 %3, 0
  br i1 %tobool9.not, label %if.then10, label %if.end7.if.end12_crit_edge

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %dev_class = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 17
  %4 = call ptr @memcpy(ptr %dev_class, ptr %call3, i32 3)
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end7.if.end12_crit_edge
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %5 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %dev_flags, align 4
  %7 = and i32 %6, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool15.not = icmp eq i32 %7, 0
  br i1 %tobool15.not, label %if.end12.if.end18_crit_edge, label %if.then16

if.end12.if.end18_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then16:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %8 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %data, align 1
  tail call void @mgmt_set_class_of_dev_complete(ptr noundef %hdev, ptr noundef nonnull %call3, i8 noundef zeroext %9) #9
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end12.if.end18_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %do.end.cleanup_crit_edge
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %retval.0 = load i8, ptr %data, align 1
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_voice_setting(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_voice_setting.__UNIQUE_ID_ddebug497, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_voice_setting, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_voice_setting.__UNIQUE_ID_ddebug497, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %voice_setting = getelementptr inbounds %struct.hci_rp_read_voice_setting, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %voice_setting to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %voice_setting, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %voice_setting8 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 33
  %7 = ptrtoint ptr %voice_setting8 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %voice_setting8, align 2
  %conv10 = zext i16 %6 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %6)
  %cmp = icmp eq i16 %8, %6
  br i1 %cmp, label %if.end7.cleanup_crit_edge, label %if.end14

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end14:                                         ; preds = %if.end7
  %9 = ptrtoint ptr %voice_setting8 to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %6, ptr %voice_setting8, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_voice_setting.__UNIQUE_ID_ddebug498, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_voice_setting, %if.then28)) #9
          to label %do.end34 [label %if.then28], !srcloc !680

if.then28:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #11
  %name29 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_voice_setting.__UNIQUE_ID_ddebug498, ptr noundef nonnull @.str.65, ptr noundef %name29, i32 noundef %conv10) #9
  br label %do.end34

do.end34:                                         ; preds = %if.then28, %if.end14
  %notify = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 238
  %10 = ptrtoint ptr %notify to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %notify, align 8
  %tobool35.not = icmp eq ptr %11, null
  br i1 %tobool35.not, label %do.end34.if.end38_crit_edge, label %if.then36

do.end34.if.end38_crit_edge:                      ; preds = %do.end34
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end38

if.then36:                                        ; preds = %do.end34
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %11(ptr noundef %hdev, i32 noundef 3) #9
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %do.end34.if.end38_crit_edge
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %if.end7.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %13, %if.end38 ], [ %3, %do.end.cleanup_crit_edge ], [ 0, %if.end7.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_voice_setting(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_voice_setting.__UNIQUE_ID_ddebug499, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_voice_setting, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_voice_setting.__UNIQUE_ID_ddebug499, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3110) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %call8, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5) #9
  %voice_setting = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 33
  %7 = ptrtoint ptr %voice_setting to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %voice_setting, align 2
  %conv15 = zext i16 %6 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %6)
  %cmp = icmp eq i16 %8, %6
  br i1 %cmp, label %if.end12.cleanup.sink.split_crit_edge, label %if.end19

if.end12.cleanup.sink.split_crit_edge:            ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end19:                                         ; preds = %if.end12
  %9 = ptrtoint ptr %voice_setting to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %6, ptr %voice_setting, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_voice_setting.__UNIQUE_ID_ddebug500, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_voice_setting, %if.then33)) #9
          to label %do.end39 [label %if.then33], !srcloc !680

if.then33:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #11
  %name34 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_voice_setting.__UNIQUE_ID_ddebug500, ptr noundef nonnull @.str.65, ptr noundef %name34, i32 noundef %conv15) #9
  br label %do.end39

do.end39:                                         ; preds = %if.then33, %if.end19
  %notify = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 238
  %10 = ptrtoint ptr %notify to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %notify, align 8
  %tobool40.not = icmp eq ptr %11, null
  br i1 %tobool40.not, label %do.end39.cleanup.sink.split_crit_edge, label %if.then41

do.end39.cleanup.sink.split_crit_edge:            ; preds = %do.end39
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.then41:                                        ; preds = %do.end39
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %11(ptr noundef %hdev, i32 noundef 3) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.then41, %do.end39.cleanup.sink.split_crit_edge, %if.end12.cleanup.sink.split_crit_edge, %if.end7.cleanup.sink.split_crit_edge
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %13, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_num_supported_iac(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_num_supported_iac.__UNIQUE_ID_ddebug501, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_num_supported_iac, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_num_supported_iac.__UNIQUE_ID_ddebug501, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %num_iac = getelementptr inbounds %struct.hci_rp_read_num_supported_iac, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %num_iac to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %num_iac, align 1
  %num_iac8 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 34
  %6 = ptrtoint ptr %num_iac8 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %num_iac8, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_num_supported_iac.__UNIQUE_ID_ddebug502, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_num_supported_iac, %if.then21)) #9
          to label %do.end28 [label %if.then21], !srcloc !680

if.then21:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %name22 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %7 = ptrtoint ptr %num_iac8 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %num_iac8, align 4
  %conv25 = zext i8 %8 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_num_supported_iac.__UNIQUE_ID_ddebug502, ptr noundef nonnull @.str.68, ptr noundef %name22, i32 noundef %conv25) #9
  br label %do.end28

do.end28:                                         ; preds = %if.then21, %if.end7
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.end28, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %10, %do.end28 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_ssp_mode(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_ssp_mode.__UNIQUE_ID_ddebug503, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_ssp_mode, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_ssp_mode.__UNIQUE_ID_ddebug503, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3158) #9
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end7

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool9.not = icmp eq i8 %3, 0
  br i1 %tobool9.not, label %if.then10, label %if.end7.if.end34_crit_edge

if.end7.if.end34_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end34

if.then10:                                        ; preds = %if.end7
  %4 = ptrtoint ptr %call3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool11.not = icmp ne i8 %5, 0
  %arrayidx17 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 1
  %6 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx17, align 2
  %8 = and i8 %7, -2
  %masksel = zext i1 %tobool11.not to i8
  %.sink = or i8 %8, %masksel
  store i8 %.sink, ptr %arrayidx17, align 2
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %.pr = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool24.not = icmp eq i8 %.pr, 0
  br i1 %tobool24.not, label %if.then25, label %if.then10.if.end34_crit_edge

if.then10.if.end34_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end34

if.then25:                                        ; preds = %if.then10
  %10 = ptrtoint ptr %call3 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %call3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool27.not = icmp eq i8 %11, 0
  %dev_flags31 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  br i1 %tobool27.not, label %if.else30, label %if.then28

if.then28:                                        ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 15, ptr noundef %dev_flags31) #9
  br label %if.end34

if.else30:                                        ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 15, ptr noundef %dev_flags31) #9
  br label %if.end34

if.end34:                                         ; preds = %if.else30, %if.then28, %if.then10.if.end34_crit_edge, %if.end7.if.end34_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %do.end.cleanup_crit_edge
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %12)
  %retval.0 = load i8, ptr %data, align 1
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_sc_support(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_sc_support.__UNIQUE_ID_ddebug504, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_sc_support, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_sc_support.__UNIQUE_ID_ddebug504, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3194) #9
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end7

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool9.not = icmp eq i8 %3, 0
  br i1 %tobool9.not, label %if.then10, label %if.end7.if.end22_crit_edge

if.end7.if.end22_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end22

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %call3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool11.not = icmp eq i8 %5, 0
  %arrayidx17 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 1
  %6 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx17, align 2
  %8 = and i8 %7, -9
  %masksel = select i1 %tobool11.not, i8 0, i8 8
  %.sink = or i8 %8, %masksel
  store i8 %.sink, ptr %arrayidx17, align 2
  br label %if.end22

if.end22:                                         ; preds = %if.then10, %if.end7.if.end22_crit_edge
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %9 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %dev_flags, align 4
  %11 = and i32 %10, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool25.not = icmp eq i32 %11, 0
  br i1 %tobool25.not, label %land.lhs.true, label %if.end22.if.end38_crit_edge

if.end22.if.end38_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end38

land.lhs.true:                                    ; preds = %if.end22
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool27.not = icmp eq i8 %13, 0
  br i1 %tobool27.not, label %if.then28, label %land.lhs.true.if.end38_crit_edge

land.lhs.true.if.end38_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end38

if.then28:                                        ; preds = %land.lhs.true
  %14 = ptrtoint ptr %call3 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %call3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool30.not = icmp eq i8 %15, 0
  br i1 %tobool30.not, label %if.else34, label %if.then31

if.then31:                                        ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 16, ptr noundef %dev_flags) #9
  br label %if.end38

if.else34:                                        ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 16, ptr noundef %dev_flags) #9
  br label %if.end38

if.end38:                                         ; preds = %if.else34, %if.then31, %land.lhs.true.if.end38_crit_edge, %if.end22.if.end38_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %do.end.cleanup_crit_edge
  %16 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %16)
  %retval.0 = load i8, ptr %data, align 1
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_auth_payload_timeout(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_auth_payload_timeout.__UNIQUE_ID_ddebug507, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_auth_payload_timeout, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_auth_payload_timeout.__UNIQUE_ID_ddebug507, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_rp_read_auth_payload_to, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %call8 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.if.end11_crit_edge, label %if.then10

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %timeout = getelementptr inbounds %struct.hci_rp_read_auth_payload_to, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %timeout to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %timeout, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8)
  %auth_payload_timeout = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 34
  %10 = ptrtoint ptr %auth_payload_timeout to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %auth_payload_timeout, align 8
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7.if.end11_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %12, %if.end11 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_auth_payload_timeout(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_auth_payload_timeout.__UNIQUE_ID_ddebug508, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_auth_payload_timeout, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_auth_payload_timeout.__UNIQUE_ID_ddebug508, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3196) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_rp_write_auth_payload_to, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %call13 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end12.if.end17_crit_edge, label %if.then15

if.end12.if.end17_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %add.ptr = getelementptr i8, ptr %call8, i32 2
  %7 = ptrtoint ptr %add.ptr to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %add.ptr, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #9
  %auth_payload_timeout = getelementptr inbounds %struct.hci_conn, ptr %call13, i32 0, i32 34
  %10 = ptrtoint ptr %auth_payload_timeout to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %auth_payload_timeout, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12.if.end17_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end17, %if.end7.cleanup.sink.split_crit_edge
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %12, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_local_version(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_local_version.__UNIQUE_ID_ddebug505, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_local_version, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_local_version.__UNIQUE_ID_ddebug505, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %4 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %dev_flags, align 4
  %and1.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool10.not = icmp eq i32 %and1.i, 0
  br i1 %tobool10.not, label %lor.lhs.false, label %if.end7.if.then15_crit_edge

if.end7.if.then15_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

lor.lhs.false:                                    ; preds = %if.end7
  %6 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dev_flags, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool14.not = icmp eq i32 %8, 0
  br i1 %tobool14.not, label %lor.lhs.false.if.end21_crit_edge, label %lor.lhs.false.if.then15_crit_edge

lor.lhs.false.if.then15_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

lor.lhs.false.if.end21_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end21

if.then15:                                        ; preds = %lor.lhs.false.if.then15_crit_edge, %if.end7.if.then15_crit_edge
  %hci_ver = getelementptr inbounds %struct.hci_rp_read_local_version, ptr %data, i32 0, i32 1
  %9 = ptrtoint ptr %hci_ver to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %hci_ver, align 1
  %hci_ver16 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 28
  %11 = ptrtoint ptr %hci_ver16 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %hci_ver16, align 1
  %hci_rev = getelementptr inbounds %struct.hci_rp_read_local_version, ptr %data, i32 0, i32 2
  %12 = ptrtoint ptr %hci_rev to i32
  call void @__asan_loadN_noabort(i32 %12, i32 2)
  %13 = load i16, ptr %hci_rev, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13)
  %hci_rev17 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 29
  %15 = ptrtoint ptr %hci_rev17 to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %14, ptr %hci_rev17, align 2
  %lmp_ver = getelementptr inbounds %struct.hci_rp_read_local_version, ptr %data, i32 0, i32 3
  %16 = ptrtoint ptr %lmp_ver to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %lmp_ver, align 1
  %lmp_ver18 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 30
  %18 = ptrtoint ptr %lmp_ver18 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %lmp_ver18, align 4
  %manufacturer = getelementptr inbounds %struct.hci_rp_read_local_version, ptr %data, i32 0, i32 4
  %19 = ptrtoint ptr %manufacturer to i32
  call void @__asan_loadN_noabort(i32 %19, i32 2)
  %20 = load i16, ptr %manufacturer, align 1
  %21 = tail call i16 @llvm.bswap.i16(i16 %20)
  %manufacturer19 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 31
  %22 = ptrtoint ptr %manufacturer19 to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %21, ptr %manufacturer19, align 2
  %lmp_subver = getelementptr inbounds %struct.hci_rp_read_local_version, ptr %data, i32 0, i32 5
  %23 = ptrtoint ptr %lmp_subver to i32
  call void @__asan_loadN_noabort(i32 %23, i32 2)
  %24 = load i16, ptr %lmp_subver, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24)
  %lmp_subver20 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 32
  %26 = ptrtoint ptr %lmp_subver20 to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %25, ptr %lmp_subver20, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %lor.lhs.false.if.end21_crit_edge
  %27 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %28, %if.end21 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_local_commands(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_local_commands.__UNIQUE_ID_ddebug506, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_local_commands, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_local_commands.__UNIQUE_ID_ddebug506, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %4 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %dev_flags, align 4
  %and1.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool10.not = icmp eq i32 %and1.i, 0
  br i1 %tobool10.not, label %lor.lhs.false, label %if.end7.if.then15_crit_edge

if.end7.if.then15_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

lor.lhs.false:                                    ; preds = %if.end7
  %6 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dev_flags, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool14.not = icmp eq i32 %8, 0
  br i1 %tobool14.not, label %lor.lhs.false.if.end19_crit_edge, label %lor.lhs.false.if.then15_crit_edge

lor.lhs.false.if.then15_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

lor.lhs.false.if.end19_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end19

if.then15:                                        ; preds = %lor.lhs.false.if.then15_crit_edge, %if.end7.if.then15_crit_edge
  %commands = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 27
  %commands17 = getelementptr inbounds %struct.hci_rp_read_local_commands, ptr %data, i32 0, i32 1
  %9 = call ptr @memcpy(ptr %commands, ptr %commands17, i32 64)
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %lor.lhs.false.if.end19_crit_edge
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %11, %if.end19 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_local_features(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_local_features.__UNIQUE_ID_ddebug509, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_local_features, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_local_features.__UNIQUE_ID_ddebug509, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %features = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 21
  %features9 = getelementptr inbounds %struct.hci_rp_read_local_features, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %features9 to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %features9, align 1
  %6 = ptrtoint ptr %features to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 %5, ptr %features, align 2
  %7 = lshr i64 %5, 56
  %8 = trunc i64 %7 to i8
  %9 = and i8 %8, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool14.not = icmp eq i8 %9, 0
  br i1 %tobool14.not, label %if.end7.if.end18_crit_edge, label %if.then15

if.end7.if.end18_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then15:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %pkt_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 98
  %10 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %pkt_type, align 4
  %12 = or i16 %11, 3072
  store i16 %12, ptr %pkt_type, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %if.end7.if.end18_crit_edge
  %13 = and i8 %8, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool24.not = icmp eq i8 %13, 0
  br i1 %tobool24.not, label %if.end18.if.end30_crit_edge, label %if.then25

if.end18.if.end30_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end30

if.then25:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #11
  %pkt_type26 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 98
  %14 = ptrtoint ptr %pkt_type26 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %pkt_type26, align 4
  %16 = or i16 %15, -16384
  store i16 %16, ptr %pkt_type26, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then25, %if.end18.if.end30_crit_edge
  %arrayidx33 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 0, i32 1
  %17 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx33, align 1
  %19 = and i8 %18, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool36.not = icmp eq i8 %19, 0
  br i1 %tobool36.not, label %if.end30.if.end45_crit_edge, label %if.then37

if.end30.if.end45_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end45

if.then37:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #11
  %pkt_type38 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 98
  %20 = ptrtoint ptr %pkt_type38 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %pkt_type38, align 4
  %22 = or i16 %21, 64
  store i16 %22, ptr %pkt_type38, align 4
  %esco_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 99
  %23 = ptrtoint ptr %esco_type to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %esco_type, align 2
  %25 = or i16 %24, 2
  store i16 %25, ptr %esco_type, align 2
  br label %if.end45

if.end45:                                         ; preds = %if.then37, %if.end30.if.end45_crit_edge
  %26 = and i8 %18, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool51.not = icmp eq i8 %26, 0
  br i1 %tobool51.not, label %if.end45.if.end61_crit_edge, label %if.then52

if.end45.if.end61_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end61

if.then52:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #11
  %pkt_type53 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 98
  %27 = ptrtoint ptr %pkt_type53 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %pkt_type53, align 4
  %29 = or i16 %28, 128
  store i16 %29, ptr %pkt_type53, align 4
  %esco_type57 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 99
  %30 = ptrtoint ptr %esco_type57 to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %esco_type57, align 2
  %32 = or i16 %31, 4
  store i16 %32, ptr %esco_type57, align 2
  br label %if.end61

if.end61:                                         ; preds = %if.then52, %if.end45.if.end61_crit_edge
  %arrayidx64 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 0, i32 3
  %33 = ptrtoint ptr %arrayidx64 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %arrayidx64, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %34)
  %tobool67.not = icmp sgt i8 %34, -1
  br i1 %tobool67.not, label %if.end61.if.end73_crit_edge, label %if.then68

if.end61.if.end73_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end73

if.then68:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #11
  %esco_type69 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 99
  %35 = ptrtoint ptr %esco_type69 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %esco_type69, align 2
  %37 = or i16 %36, 8
  store i16 %37, ptr %esco_type69, align 2
  br label %if.end73

if.end73:                                         ; preds = %if.then68, %if.end61.if.end73_crit_edge
  %arrayidx76 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 0, i32 4
  %38 = ptrtoint ptr %arrayidx76 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %arrayidx76, align 2
  %40 = and i8 %39, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %tobool79.not = icmp eq i8 %40, 0
  br i1 %tobool79.not, label %if.end73.if.end85_crit_edge, label %if.then80

if.end73.if.end85_crit_edge:                      ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end85

if.then80:                                        ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #11
  %esco_type81 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 99
  %41 = ptrtoint ptr %esco_type81 to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %esco_type81, align 2
  %43 = or i16 %42, 16
  store i16 %43, ptr %esco_type81, align 2
  br label %if.end85

if.end85:                                         ; preds = %if.then80, %if.end73.if.end85_crit_edge
  %44 = and i8 %39, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %tobool91.not = icmp eq i8 %44, 0
  br i1 %tobool91.not, label %if.end85.if.end97_crit_edge, label %if.then92

if.end85.if.end97_crit_edge:                      ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end97

if.then92:                                        ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #11
  %esco_type93 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 99
  %45 = ptrtoint ptr %esco_type93 to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %esco_type93, align 2
  %47 = or i16 %46, 32
  store i16 %47, ptr %esco_type93, align 2
  br label %if.end97

if.end97:                                         ; preds = %if.then92, %if.end85.if.end97_crit_edge
  %arrayidx100 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 0, i32 5
  %48 = ptrtoint ptr %arrayidx100 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %arrayidx100, align 1
  %50 = and i8 %49, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool103.not = icmp eq i8 %50, 0
  br i1 %tobool103.not, label %if.end97.if.end109_crit_edge, label %if.then104

if.end97.if.end109_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end109

if.then104:                                       ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #11
  %esco_type105 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 99
  %51 = ptrtoint ptr %esco_type105 to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %esco_type105, align 2
  %53 = or i16 %52, 64
  store i16 %53, ptr %esco_type105, align 2
  br label %if.end109

if.end109:                                        ; preds = %if.then104, %if.end97.if.end109_crit_edge
  %54 = and i8 %49, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool115.not = icmp eq i8 %54, 0
  br i1 %tobool115.not, label %if.end109.if.end121_crit_edge, label %if.then116

if.end109.if.end121_crit_edge:                    ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end121

if.then116:                                       ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #11
  %esco_type117 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 99
  %55 = ptrtoint ptr %esco_type117 to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %esco_type117, align 2
  %57 = or i16 %56, 128
  store i16 %57, ptr %esco_type117, align 2
  br label %if.end121

if.end121:                                        ; preds = %if.then116, %if.end109.if.end121_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %49)
  %tobool127.not = icmp sgt i8 %49, -1
  br i1 %tobool127.not, label %if.end121.if.end133_crit_edge, label %if.then128

if.end121.if.end133_crit_edge:                    ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end133

if.then128:                                       ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #11
  %esco_type129 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 99
  %58 = ptrtoint ptr %esco_type129 to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %esco_type129, align 2
  %60 = or i16 %59, 768
  store i16 %60, ptr %esco_type129, align 2
  br label %if.end133

if.end133:                                        ; preds = %if.then128, %if.end121.if.end133_crit_edge
  %61 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end133, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %62, %if.end133 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_local_ext_features(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_local_ext_features.__UNIQUE_ID_ddebug510, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_local_ext_features, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_local_ext_features.__UNIQUE_ID_ddebug510, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %max_page = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 20
  %4 = ptrtoint ptr %max_page to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %max_page, align 1
  %max_page9 = getelementptr inbounds %struct.hci_rp_read_local_ext_features, ptr %data, i32 0, i32 2
  %6 = ptrtoint ptr %max_page9 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %max_page9, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %5, i8 %7)
  %cmp = icmp ult i8 %5, %7
  br i1 %cmp, label %if.then12, label %if.end7.if.end15_crit_edge

if.end7.if.end15_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end15

if.then12:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %8 = ptrtoint ptr %max_page to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %max_page, align 1
  br label %if.end15

if.end15:                                         ; preds = %if.then12, %if.end7.if.end15_crit_edge
  %page = getelementptr inbounds %struct.hci_rp_read_local_ext_features, ptr %data, i32 0, i32 1
  %9 = ptrtoint ptr %page to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %page, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %10)
  %cmp17 = icmp ult i8 %10, 3
  br i1 %cmp17, label %if.then19, label %if.end15.if.end24_crit_edge

if.end15.if.end24_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end24

if.then19:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #11
  %conv16 = zext i8 %10 to i32
  %arrayidx = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 %conv16
  %features22 = getelementptr inbounds %struct.hci_rp_read_local_ext_features, ptr %data, i32 0, i32 3
  %11 = ptrtoint ptr %features22 to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %12 = load i64, ptr %features22, align 1
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_storeN_noabort(i32 %13, i32 8)
  store i64 %12, ptr %arrayidx, align 2
  br label %if.end24

if.end24:                                         ; preds = %if.then19, %if.end15.if.end24_crit_edge
  %14 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %15, %if.end24 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_buffer_size(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_buffer_size.__UNIQUE_ID_ddebug512, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_buffer_size, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_buffer_size.__UNIQUE_ID_ddebug512, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %acl_mtu = getelementptr inbounds %struct.hci_rp_read_buffer_size, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %acl_mtu to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %acl_mtu, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %conv8 = zext i16 %6 to i32
  %acl_mtu9 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 123
  %7 = ptrtoint ptr %acl_mtu9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv8, ptr %acl_mtu9, align 4
  %sco_mtu = getelementptr inbounds %struct.hci_rp_read_buffer_size, ptr %data, i32 0, i32 2
  %8 = ptrtoint ptr %sco_mtu to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %sco_mtu, align 1
  %conv10 = zext i8 %9 to i32
  %sco_mtu11 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 124
  %10 = ptrtoint ptr %sco_mtu11 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv10, ptr %sco_mtu11, align 8
  %acl_max_pkt = getelementptr inbounds %struct.hci_rp_read_buffer_size, ptr %data, i32 0, i32 3
  %11 = ptrtoint ptr %acl_max_pkt to i32
  call void @__asan_loadN_noabort(i32 %11, i32 2)
  %12 = load i16, ptr %acl_max_pkt, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12)
  %conv12 = zext i16 %13 to i32
  %acl_pkts = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 126
  %14 = ptrtoint ptr %acl_pkts to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %conv12, ptr %acl_pkts, align 8
  %sco_max_pkt = getelementptr inbounds %struct.hci_rp_read_buffer_size, ptr %data, i32 0, i32 4
  %15 = ptrtoint ptr %sco_max_pkt to i32
  call void @__asan_loadN_noabort(i32 %15, i32 2)
  %16 = load i16, ptr %sco_max_pkt, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16)
  %conv13 = zext i16 %17 to i32
  %sco_pkts = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 127
  %18 = ptrtoint ptr %sco_pkts to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %conv13, ptr %sco_pkts, align 4
  %quirks = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 118
  %19 = ptrtoint ptr %quirks to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %quirks, align 4
  %21 = and i32 %20, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool15.not = icmp eq i32 %21, 0
  br i1 %tobool15.not, label %if.end7.if.end19_crit_edge, label %if.then16

if.end7.if.end19_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end19

if.then16:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %22 = ptrtoint ptr %sco_mtu11 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 64, ptr %sco_mtu11, align 8
  %23 = ptrtoint ptr %sco_pkts to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 8, ptr %sco_pkts, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.end7.if.end19_crit_edge
  %acl_cnt = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 120
  %24 = ptrtoint ptr %acl_cnt to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %conv12, ptr %acl_cnt, align 8
  %25 = ptrtoint ptr %sco_pkts to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %sco_pkts, align 4
  %sco_cnt = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 121
  %27 = ptrtoint ptr %sco_cnt to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %sco_cnt, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_buffer_size.__UNIQUE_ID_ddebug513, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_buffer_size, %if.then34)) #9
          to label %do.end43 [label %if.then34], !srcloc !680

if.then34:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #11
  %name35 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %28 = ptrtoint ptr %acl_mtu9 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %acl_mtu9, align 4
  %30 = ptrtoint ptr %acl_pkts to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %acl_pkts, align 8
  %32 = ptrtoint ptr %sco_mtu11 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %sco_mtu11, align 8
  %34 = ptrtoint ptr %sco_pkts to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sco_pkts, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_buffer_size.__UNIQUE_ID_ddebug513, ptr noundef nonnull @.str.78, ptr noundef %name35, i32 noundef %29, i32 noundef %31, i32 noundef %33, i32 noundef %35) #9
  br label %do.end43

do.end43:                                         ; preds = %if.then34, %if.end19
  %36 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.end43, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %37, %do.end43 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_bd_addr(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_bd_addr.__UNIQUE_ID_ddebug514, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_bd_addr, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_bd_addr.__UNIQUE_ID_ddebug514, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %flags, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool9.not = icmp eq i32 %6, 0
  br i1 %tobool9.not, label %if.end7.if.end12_crit_edge, label %if.then10

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %bdaddr = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 7
  %bdaddr11 = getelementptr inbounds %struct.hci_rp_read_bd_addr, ptr %data, i32 0, i32 1
  %7 = call ptr @memcpy(ptr %bdaddr, ptr %bdaddr11, i32 6)
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end7.if.end12_crit_edge
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %8 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %dev_flags, align 4
  %and1.i29 = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i29)
  %tobool15.not = icmp eq i32 %and1.i29, 0
  br i1 %tobool15.not, label %if.end12.if.end18_crit_edge, label %if.then16

if.end12.if.end18_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then16:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %setup_addr = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 8
  %bdaddr17 = getelementptr inbounds %struct.hci_rp_read_bd_addr, ptr %data, i32 0, i32 1
  %10 = call ptr @memcpy(ptr %setup_addr, ptr %bdaddr17, i32 6)
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end12.if.end18_crit_edge
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %12, %if.end18 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_local_pairing_opts(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_local_pairing_opts.__UNIQUE_ID_ddebug515, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_local_pairing_opts, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_local_pairing_opts.__UNIQUE_ID_ddebug515, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %4 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %dev_flags, align 4
  %and1.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool10.not = icmp eq i32 %and1.i, 0
  br i1 %tobool10.not, label %lor.lhs.false, label %if.end7.if.then15_crit_edge

if.end7.if.then15_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

lor.lhs.false:                                    ; preds = %if.end7
  %6 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dev_flags, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool14.not = icmp eq i32 %8, 0
  br i1 %tobool14.not, label %lor.lhs.false.if.end17_crit_edge, label %lor.lhs.false.if.then15_crit_edge

lor.lhs.false.if.then15_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

lor.lhs.false.if.end17_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %lor.lhs.false.if.then15_crit_edge, %if.end7.if.then15_crit_edge
  %pairing_opts = getelementptr inbounds %struct.hci_rp_read_local_pairing_opts, ptr %data, i32 0, i32 1
  %9 = ptrtoint ptr %pairing_opts to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %pairing_opts, align 1
  %pairing_opts16 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 75
  %11 = ptrtoint ptr %pairing_opts16 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %pairing_opts16, align 2
  %max_key_size = getelementptr inbounds %struct.hci_rp_read_local_pairing_opts, ptr %data, i32 0, i32 2
  %12 = ptrtoint ptr %max_key_size to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %max_key_size, align 1
  %max_enc_key_size = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 74
  %14 = ptrtoint ptr %max_enc_key_size to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %max_enc_key_size, align 1
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %lor.lhs.false.if.end17_crit_edge
  %15 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %16, %if.end17 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_page_scan_activity(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_page_scan_activity.__UNIQUE_ID_ddebug516, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_page_scan_activity, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_page_scan_activity.__UNIQUE_ID_ddebug516, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %flags, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool9.not = icmp eq i32 %6, 0
  br i1 %tobool9.not, label %if.end7.if.end11_crit_edge, label %if.then10

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %interval = getelementptr inbounds %struct.hci_rp_read_page_scan_activity, ptr %data, i32 0, i32 1
  %7 = ptrtoint ptr %interval to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %interval, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8)
  %page_scan_interval = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 40
  %10 = ptrtoint ptr %page_scan_interval to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %page_scan_interval, align 2
  %window = getelementptr inbounds %struct.hci_rp_read_page_scan_activity, ptr %data, i32 0, i32 2
  %11 = ptrtoint ptr %window to i32
  call void @__asan_loadN_noabort(i32 %11, i32 2)
  %12 = load i16, ptr %window, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12)
  %page_scan_window = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 41
  %14 = ptrtoint ptr %page_scan_window to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %page_scan_window, align 8
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7.if.end11_crit_edge
  %15 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %16, %if.end11 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_page_scan_activity(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_page_scan_activity.__UNIQUE_ID_ddebug517, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_page_scan_activity, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_page_scan_activity.__UNIQUE_ID_ddebug517, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3100) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %call8, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %page_scan_interval = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 40
  %7 = ptrtoint ptr %page_scan_interval to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %page_scan_interval, align 2
  %window = getelementptr inbounds %struct.hci_cp_write_page_scan_activity, ptr %call8, i32 0, i32 1
  %8 = ptrtoint ptr %window to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %window, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9)
  %page_scan_window = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 41
  %11 = ptrtoint ptr %page_scan_window to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %page_scan_window, align 8
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %13, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_page_scan_type(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_page_scan_type.__UNIQUE_ID_ddebug518, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_page_scan_type, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_page_scan_type.__UNIQUE_ID_ddebug518, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %flags, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool9.not = icmp eq i32 %6, 0
  br i1 %tobool9.not, label %if.end7.if.end11_crit_edge, label %if.then10

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %type = getelementptr inbounds %struct.hci_rp_read_page_scan_type, ptr %data, i32 0, i32 1
  %7 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %type, align 1
  %page_scan_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 42
  %9 = ptrtoint ptr %page_scan_type to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %page_scan_type, align 2
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7.if.end11_crit_edge
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %11, %if.end11 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_page_scan_type(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_page_scan_type.__UNIQUE_ID_ddebug519, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_page_scan_type, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_page_scan_type.__UNIQUE_ID_ddebug519, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3143) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.if.end11_crit_edge, label %if.then10

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %page_scan_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 42
  %6 = ptrtoint ptr %page_scan_type to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %page_scan_type, align 2
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7.if.end11_crit_edge
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %8, %if.end11 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_data_block_size(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_data_block_size.__UNIQUE_ID_ddebug520, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_data_block_size, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_data_block_size.__UNIQUE_ID_ddebug520, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %max_acl_len = getelementptr inbounds %struct.hci_rp_read_data_block_size, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %max_acl_len to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %max_acl_len, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %block_mtu = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 130
  %7 = ptrtoint ptr %block_mtu to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %block_mtu, align 2
  %block_len = getelementptr inbounds %struct.hci_rp_read_data_block_size, ptr %data, i32 0, i32 2
  %8 = ptrtoint ptr %block_len to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %block_len, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9)
  %block_len8 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 129
  %11 = ptrtoint ptr %block_len8 to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %block_len8, align 4
  %num_blocks = getelementptr inbounds %struct.hci_rp_read_data_block_size, ptr %data, i32 0, i32 3
  %12 = ptrtoint ptr %num_blocks to i32
  call void @__asan_loadN_noabort(i32 %12, i32 2)
  %13 = load i16, ptr %num_blocks, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13)
  %num_blocks9 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 131
  %15 = ptrtoint ptr %num_blocks9 to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %14, ptr %num_blocks9, align 8
  %block_cnt = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 132
  %16 = ptrtoint ptr %block_cnt to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %14, ptr %block_cnt, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_data_block_size.__UNIQUE_ID_ddebug521, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_data_block_size, %if.then23)) #9
          to label %do.end34 [label %if.then23], !srcloc !680

if.then23:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %name24 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %17 = ptrtoint ptr %block_mtu to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %block_mtu, align 2
  %conv27 = zext i16 %18 to i32
  %19 = ptrtoint ptr %block_cnt to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %block_cnt, align 2
  %conv29 = zext i16 %20 to i32
  %21 = ptrtoint ptr %block_len8 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %block_len8, align 4
  %conv31 = zext i16 %22 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_data_block_size.__UNIQUE_ID_ddebug521, ptr noundef nonnull @.str.86, ptr noundef %name24, i32 noundef %conv27, i32 noundef %conv29, i32 noundef %conv31) #9
  br label %do.end34

do.end34:                                         ; preds = %if.then23, %if.end7
  %23 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.end34, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %24, %do.end34 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_flow_control_mode(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_flow_control_mode.__UNIQUE_ID_ddebug511, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_flow_control_mode, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_flow_control_mode.__UNIQUE_ID_ddebug511, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %mode = getelementptr inbounds %struct.hci_rp_read_flow_control_mode, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %mode to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %mode, align 1
  %flow_ctl_mode = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 116
  %6 = ptrtoint ptr %flow_ctl_mode to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %flow_ctl_mode, align 8
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %8, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_local_amp_info(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_local_amp_info.__UNIQUE_ID_ddebug523, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_local_amp_info, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_local_amp_info.__UNIQUE_ID_ddebug523, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %amp_status = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %amp_status to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %amp_status, align 1
  %amp_status8 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 105
  %6 = ptrtoint ptr %amp_status8 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %amp_status8, align 4
  %total_bw = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %total_bw to i32
  call void @__asan_loadN_noabort(i32 %7, i32 4)
  %8 = load i32, ptr %total_bw, align 1
  %9 = tail call i32 @llvm.bswap.i32(i32 %8)
  %amp_total_bw = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 106
  %10 = ptrtoint ptr %amp_total_bw to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %amp_total_bw, align 8
  %max_bw = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 3
  %11 = ptrtoint ptr %max_bw to i32
  call void @__asan_loadN_noabort(i32 %11, i32 4)
  %12 = load i32, ptr %max_bw, align 1
  %13 = tail call i32 @llvm.bswap.i32(i32 %12)
  %amp_max_bw = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 107
  %14 = ptrtoint ptr %amp_max_bw to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %amp_max_bw, align 4
  %min_latency = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 4
  %15 = ptrtoint ptr %min_latency to i32
  call void @__asan_loadN_noabort(i32 %15, i32 4)
  %16 = load i32, ptr %min_latency, align 1
  %17 = tail call i32 @llvm.bswap.i32(i32 %16)
  %amp_min_latency = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 108
  %18 = ptrtoint ptr %amp_min_latency to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %amp_min_latency, align 8
  %max_pdu = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 5
  %19 = ptrtoint ptr %max_pdu to i32
  call void @__asan_loadN_noabort(i32 %19, i32 4)
  %20 = load i32, ptr %max_pdu, align 1
  %21 = tail call i32 @llvm.bswap.i32(i32 %20)
  %amp_max_pdu = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 109
  %22 = ptrtoint ptr %amp_max_pdu to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %amp_max_pdu, align 4
  %amp_type = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 6
  %23 = ptrtoint ptr %amp_type to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %amp_type, align 1
  %amp_type9 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 110
  %25 = ptrtoint ptr %amp_type9 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %24, ptr %amp_type9, align 8
  %pal_cap = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 7
  %26 = ptrtoint ptr %pal_cap to i32
  call void @__asan_loadN_noabort(i32 %26, i32 2)
  %27 = load i16, ptr %pal_cap, align 1
  %28 = tail call i16 @llvm.bswap.i16(i16 %27)
  %amp_pal_cap = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 111
  %29 = ptrtoint ptr %amp_pal_cap to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %28, ptr %amp_pal_cap, align 2
  %max_assoc_size = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 8
  %30 = ptrtoint ptr %max_assoc_size to i32
  call void @__asan_loadN_noabort(i32 %30, i32 2)
  %31 = load i16, ptr %max_assoc_size, align 1
  %32 = tail call i16 @llvm.bswap.i16(i16 %31)
  %amp_assoc_size = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 112
  %33 = ptrtoint ptr %amp_assoc_size to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %32, ptr %amp_assoc_size, align 4
  %be_flush_to = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 10
  %34 = ptrtoint ptr %be_flush_to to i32
  call void @__asan_loadN_noabort(i32 %34, i32 4)
  %35 = load i32, ptr %be_flush_to, align 1
  %36 = tail call i32 @llvm.bswap.i32(i32 %35)
  %amp_be_flush_to = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 114
  %37 = ptrtoint ptr %amp_be_flush_to to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %amp_be_flush_to, align 4
  %max_flush_to = getelementptr inbounds %struct.hci_rp_read_local_amp_info, ptr %data, i32 0, i32 9
  %38 = ptrtoint ptr %max_flush_to to i32
  call void @__asan_loadN_noabort(i32 %38, i32 4)
  %39 = load i32, ptr %max_flush_to, align 1
  %40 = tail call i32 @llvm.bswap.i32(i32 %39)
  %amp_max_flush_to = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 113
  %41 = ptrtoint ptr %amp_max_flush_to to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %amp_max_flush_to, align 8
  %42 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %43, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_clock(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_clock.__UNIQUE_ID_ddebug522, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_clock, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_clock.__UNIQUE_ID_ddebug522, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 5127) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.unlock_crit_edge, label %if.end11

if.end7.unlock_crit_edge:                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end11:                                         ; preds = %if.end7
  %which = getelementptr inbounds %struct.hci_cp_read_clock, ptr %call8, i32 0, i32 1
  %4 = ptrtoint ptr %which to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %which, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp = icmp eq i8 %5, 0
  br i1 %cmp, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #11
  %clock = getelementptr inbounds %struct.hci_rp_read_clock, ptr %data, i32 0, i32 2
  %6 = ptrtoint ptr %clock to i32
  call void @__asan_loadN_noabort(i32 %6, i32 4)
  %7 = load i32, ptr %clock, align 1
  %8 = tail call i32 @llvm.bswap.i32(i32 %7)
  %clock15 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 78
  %9 = ptrtoint ptr %clock15 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %clock15, align 4
  br label %unlock

if.end16:                                         ; preds = %if.end11
  %handle = getelementptr inbounds %struct.hci_rp_read_clock, ptr %data, i32 0, i32 1
  %10 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %10, i32 2)
  %11 = load i16, ptr %handle, align 1
  %12 = tail call i16 @llvm.bswap.i16(i16 %11)
  %call17 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %12)
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %if.end16.unlock_crit_edge, label %if.then19

if.end16.unlock_crit_edge:                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %clock20 = getelementptr inbounds %struct.hci_rp_read_clock, ptr %data, i32 0, i32 2
  %13 = ptrtoint ptr %clock20 to i32
  call void @__asan_loadN_noabort(i32 %13, i32 4)
  %14 = load i32, ptr %clock20, align 1
  %15 = tail call i32 @llvm.bswap.i32(i32 %14)
  %clock21 = getelementptr inbounds %struct.hci_conn, ptr %call17, i32 0, i32 49
  %16 = ptrtoint ptr %clock21 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %clock21, align 4
  %accuracy = getelementptr inbounds %struct.hci_rp_read_clock, ptr %data, i32 0, i32 3
  %17 = ptrtoint ptr %accuracy to i32
  call void @__asan_loadN_noabort(i32 %17, i32 2)
  %18 = load i16, ptr %accuracy, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18)
  %clock_accuracy = getelementptr inbounds %struct.hci_conn, ptr %call17, i32 0, i32 50
  %20 = ptrtoint ptr %clock_accuracy to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %19, ptr %clock_accuracy, align 8
  br label %unlock

unlock:                                           ; preds = %if.then19, %if.end16.unlock_crit_edge, %if.then14, %if.end7.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %21 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %unlock, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %22, %unlock ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_inq_rsp_tx_power(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_inq_rsp_tx_power.__UNIQUE_ID_ddebug524, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_inq_rsp_tx_power, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_inq_rsp_tx_power.__UNIQUE_ID_ddebug524, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %tx_power = getelementptr inbounds %struct.hci_rp_read_inq_rsp_tx_power, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %tx_power to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %tx_power, align 1
  %inq_tx_power = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 38
  %6 = ptrtoint ptr %inq_tx_power to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %inq_tx_power, align 1
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %8, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_def_err_data_reporting(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_def_err_data_reporting.__UNIQUE_ID_ddebug525, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_def_err_data_reporting, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_def_err_data_reporting.__UNIQUE_ID_ddebug525, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %err_data_reporting = getelementptr inbounds %struct.hci_rp_read_def_err_data_reporting, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %err_data_reporting to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %err_data_reporting, align 1
  %err_data_reporting8 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 39
  %6 = ptrtoint ptr %err_data_reporting8 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %err_data_reporting8, align 4
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %8, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_def_err_data_reporting(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_def_err_data_reporting.__UNIQUE_ID_ddebug526, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_def_err_data_reporting, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_def_err_data_reporting.__UNIQUE_ID_ddebug526, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3163) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %err_data_reporting13 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 39
  %6 = ptrtoint ptr %err_data_reporting13 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %err_data_reporting13, align 4
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %8, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_pin_code_reply(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_pin_code_reply.__UNIQUE_ID_ddebug527, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_pin_code_reply, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_pin_code_reply.__UNIQUE_ID_ddebug527, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %do.end.if.end8_crit_edge, label %if.then6

do.end.if.end8_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end8

if.then6:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %bdaddr = getelementptr inbounds %struct.hci_rp_pin_code_reply, ptr %data, i32 0, i32 1
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  tail call void @mgmt_pin_code_reply_complete(ptr noundef %hdev, ptr noundef %bdaddr, i8 noundef zeroext %6) #9
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %do.end.if.end8_crit_edge
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool10.not = icmp eq i8 %8, 0
  br i1 %tobool10.not, label %if.end12, label %if.end8.unlock_crit_edge

if.end8.unlock_crit_edge:                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end12:                                         ; preds = %if.end8
  %call13 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1037) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end12.unlock_crit_edge, label %if.end16

if.end12.unlock_crit_edge:                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end16:                                         ; preds = %if.end12
  %call18 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef nonnull %call13)
  %tobool19.not = icmp eq ptr %call18, null
  br i1 %tobool19.not, label %if.end16.unlock_crit_edge, label %if.then20

if.end16.unlock_crit_edge:                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %pin_len = getelementptr inbounds %struct.hci_cp_pin_code_reply, ptr %call13, i32 0, i32 1
  %9 = ptrtoint ptr %pin_len to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %pin_len, align 1
  %pin_length = getelementptr inbounds %struct.hci_conn, ptr %call18, i32 0, i32 26
  %11 = ptrtoint ptr %pin_length to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %pin_length, align 2
  br label %unlock

unlock:                                           ; preds = %if.then20, %if.end16.unlock_crit_edge, %if.end12.unlock_crit_edge, %if.end8.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %data, align 1
  ret i8 %13
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_pin_code_neg_reply(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_pin_code_neg_reply.__UNIQUE_ID_ddebug528, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_pin_code_neg_reply, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_pin_code_neg_reply.__UNIQUE_ID_ddebug528, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %do.end.if.end8_crit_edge, label %if.then6

do.end.if.end8_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end8

if.then6:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %bdaddr = getelementptr inbounds %struct.hci_rp_pin_code_neg_reply, ptr %data, i32 0, i32 1
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  tail call void @mgmt_pin_code_neg_reply_complete(ptr noundef %hdev, ptr noundef %bdaddr, i8 noundef zeroext %6) #9
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %do.end.if.end8_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  ret i8 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_local_oob_data(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_local_oob_data.__UNIQUE_ID_ddebug537, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_local_oob_data, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_local_oob_data.__UNIQUE_ID_ddebug537, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  ret i8 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_local_oob_ext_data(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_local_oob_ext_data.__UNIQUE_ID_ddebug538, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_local_oob_ext_data, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_local_oob_ext_data.__UNIQUE_ID_ddebug538, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  ret i8 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_buffer_size(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_buffer_size.__UNIQUE_ID_ddebug529, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_buffer_size, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_buffer_size.__UNIQUE_ID_ddebug529, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %le_mtu = getelementptr inbounds %struct.hci_rp_le_read_buffer_size, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %le_mtu to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %le_mtu, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %conv8 = zext i16 %6 to i32
  %le_mtu9 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 125
  %7 = ptrtoint ptr %le_mtu9 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv8, ptr %le_mtu9, align 4
  %le_max_pkt = getelementptr inbounds %struct.hci_rp_le_read_buffer_size, ptr %data, i32 0, i32 2
  %8 = ptrtoint ptr %le_max_pkt to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %le_max_pkt, align 1
  %conv10 = zext i8 %9 to i32
  %le_pkts = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 128
  %10 = ptrtoint ptr %le_pkts to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv10, ptr %le_pkts, align 8
  %le_cnt = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 122
  %11 = ptrtoint ptr %le_cnt to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %conv10, ptr %le_cnt, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_buffer_size.__UNIQUE_ID_ddebug530, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_buffer_size, %if.then24)) #9
          to label %do.end31 [label %if.then24], !srcloc !680

if.then24:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %name25 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %12 = ptrtoint ptr %le_mtu9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %le_mtu9, align 4
  %14 = ptrtoint ptr %le_pkts to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %le_pkts, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_buffer_size.__UNIQUE_ID_ddebug530, ptr noundef nonnull @.str.98, ptr noundef %name25, i32 noundef %13, i32 noundef %15) #9
  br label %do.end31

do.end31:                                         ; preds = %if.then24, %if.end7
  %16 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.end31, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %17, %do.end31 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_local_features(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_local_features.__UNIQUE_ID_ddebug531, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_local_features, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_local_features.__UNIQUE_ID_ddebug531, ptr noundef nonnull @.str.100, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %le_features = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 22
  %features = getelementptr inbounds %struct.hci_rp_le_read_local_features, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %features to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %features, align 1
  %6 = ptrtoint ptr %le_features to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 %5, ptr %le_features, align 2
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %8, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_adv_tx_power(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_adv_tx_power.__UNIQUE_ID_ddebug532, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_adv_tx_power, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_adv_tx_power.__UNIQUE_ID_ddebug532, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %tx_power = getelementptr inbounds %struct.hci_rp_le_read_adv_tx_power, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %tx_power to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %tx_power, align 1
  %adv_tx_power = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 208
  %6 = ptrtoint ptr %adv_tx_power to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %adv_tx_power, align 8
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %8, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_user_confirm_reply(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_user_confirm_reply.__UNIQUE_ID_ddebug533, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_user_confirm_reply, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_user_confirm_reply.__UNIQUE_ID_ddebug533, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %do.end.if.end9_crit_edge, label %if.then6

do.end.if.end9_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end9

if.then6:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %bdaddr = getelementptr inbounds %struct.hci_rp_user_confirm_reply, ptr %data, i32 0, i32 1
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  %call8 = tail call i32 @mgmt_user_confirm_reply_complete(ptr noundef %hdev, ptr noundef %bdaddr, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext %6) #9
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %do.end.if.end9_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  ret i8 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_user_confirm_neg_reply(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_user_confirm_neg_reply.__UNIQUE_ID_ddebug534, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_user_confirm_neg_reply, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_user_confirm_neg_reply.__UNIQUE_ID_ddebug534, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %do.end.if.end9_crit_edge, label %if.then6

do.end.if.end9_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end9

if.then6:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %bdaddr = getelementptr inbounds %struct.hci_rp_user_confirm_reply, ptr %data, i32 0, i32 1
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  %call8 = tail call i32 @mgmt_user_confirm_neg_reply_complete(ptr noundef %hdev, ptr noundef %bdaddr, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext %6) #9
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %do.end.if.end9_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  ret i8 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_user_passkey_reply(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_user_passkey_reply.__UNIQUE_ID_ddebug535, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_user_passkey_reply, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_user_passkey_reply.__UNIQUE_ID_ddebug535, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %do.end.if.end9_crit_edge, label %if.then6

do.end.if.end9_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end9

if.then6:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %bdaddr = getelementptr inbounds %struct.hci_rp_user_confirm_reply, ptr %data, i32 0, i32 1
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  %call8 = tail call i32 @mgmt_user_passkey_reply_complete(ptr noundef %hdev, ptr noundef %bdaddr, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext %6) #9
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %do.end.if.end9_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  ret i8 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_user_passkey_neg_reply(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_user_passkey_neg_reply.__UNIQUE_ID_ddebug536, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_user_passkey_neg_reply, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_user_passkey_neg_reply.__UNIQUE_ID_ddebug536, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %2 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_flags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %do.end.if.end9_crit_edge, label %if.then6

do.end.if.end9_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end9

if.then6:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %bdaddr = getelementptr inbounds %struct.hci_rp_user_confirm_reply, ptr %data, i32 0, i32 1
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  %call8 = tail call i32 @mgmt_user_passkey_neg_reply_complete(ptr noundef %hdev, ptr noundef %bdaddr, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext %6) #9
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %do.end.if.end9_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  ret i8 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_random_addr(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_random_addr.__UNIQUE_ID_ddebug539, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_random_addr, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_random_addr.__UNIQUE_ID_ddebug539, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8197) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %random_addr = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 10
  %4 = call ptr @memcpy(ptr %random_addr, ptr %call8, i32 6)
  %rpa = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 223
  %bcmp = tail call i32 @bcmp(ptr noundef dereferenceable(6) %rpa, ptr noundef nonnull dereferenceable(6) %call8, i32 6) #12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool14.not = icmp eq i32 %bcmp, 0
  br i1 %tobool14.not, label %if.then15, label %if.end12.if.end19_crit_edge

if.end12.if.end19_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end19

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_clear_bit(i32 noundef 20, ptr noundef %dev_flags) #9
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 138
  %5 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %workqueue, align 4
  %rpa_expired = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 222
  %rpa_timeout = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 221
  %7 = ptrtoint ptr %rpa_timeout to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rpa_timeout, align 8
  %mul = mul i32 %8, 1000
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %mul) #9
  %call.i39 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %6, ptr noundef %rpa_expired, i32 noundef %call2.i) #9
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end12.if.end19_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end19, %if.end7.cleanup.sink.split_crit_edge
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %10, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_adv_enable(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_adv_enable.__UNIQUE_ID_ddebug546, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_adv_enable, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_adv_enable.__UNIQUE_ID_ddebug546, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8202) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool13.not = icmp eq i8 %5, 0
  %dev_flags22 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  br i1 %tobool13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end12
  tail call void @_set_bit(i32 noundef 13, ptr noundef %dev_flags22) #9
  %call16 = tail call fastcc ptr @hci_lookup_le_connect(ptr noundef %hdev)
  %tobool17.not = icmp eq ptr %call16, null
  br i1 %tobool17.not, label %if.then14.if.end24_crit_edge, label %if.then18

if.then14.if.end24_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end24

if.then18:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #11
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 138
  %6 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %workqueue, align 4
  %le_conn_timeout = getelementptr inbounds %struct.hci_conn, ptr %call16, i32 0, i32 61
  %conn_timeout = getelementptr inbounds %struct.hci_conn, ptr %call16, i32 0, i32 32
  %8 = ptrtoint ptr %conn_timeout to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %conn_timeout, align 4
  %conv19 = zext i16 %9 to i32
  %call.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %7, ptr noundef %le_conn_timeout, i32 noundef %conv19) #9
  br label %if.end24

if.else:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 13, ptr noundef %dev_flags22) #9
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18, %if.then14.if.end24_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end24, %if.end7.cleanup.sink.split_crit_edge
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %11, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_scan_param(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_scan_param.__UNIQUE_ID_ddebug548, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_scan_param, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_scan_param.__UNIQUE_ID_ddebug548, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8203) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %le_scan_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 46
  %6 = ptrtoint ptr %le_scan_type to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %le_scan_type, align 8
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %8, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_scan_enable(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_scan_enable.__UNIQUE_ID_ddebug550, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_scan_enable, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_scan_enable.__UNIQUE_ID_ddebug550, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8204) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  tail call fastcc void @le_set_scan_enable_complete(ptr noundef %hdev, i8 noundef zeroext %5)
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %7, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_accept_list_size(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_accept_list_size.__UNIQUE_ID_ddebug553, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_accept_list_size, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  %size = getelementptr inbounds %struct.hci_rp_le_read_accept_list_size, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %size to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %size, align 1
  %conv3 = zext i8 %3 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_accept_list_size.__UNIQUE_ID_ddebug553, ptr noundef nonnull @.str.112, ptr noundef %name, i32 noundef %conv, i32 noundef %conv3) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool5.not = icmp eq i8 %5, 0
  br i1 %tobool5.not, label %if.end8, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end8:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %size9 = getelementptr inbounds %struct.hci_rp_le_read_accept_list_size, ptr %data, i32 0, i32 1
  %6 = ptrtoint ptr %size9 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %size9, align 1
  %le_accept_list_size = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 23
  %8 = ptrtoint ptr %le_accept_list_size to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %le_accept_list_size, align 2
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %10, %if.end8 ], [ %5, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_clear_accept_list(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_clear_accept_list.__UNIQUE_ID_ddebug554, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_clear_accept_list, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_clear_accept_list.__UNIQUE_ID_ddebug554, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %le_accept_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 192
  tail call void @hci_bdaddr_list_clear(ptr noundef %le_accept_list) #9
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %5, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_add_to_accept_list(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_add_to_accept_list.__UNIQUE_ID_ddebug555, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_add_to_accept_list, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_add_to_accept_list.__UNIQUE_ID_ddebug555, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8209) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %le_accept_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 192
  %bdaddr = getelementptr inbounds %struct.hci_cp_le_add_to_accept_list, ptr %call8, i32 0, i32 1
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %call13 = tail call i32 @hci_bdaddr_list_add(ptr noundef %le_accept_list, ptr noundef %bdaddr, i8 noundef zeroext %5) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %7, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_del_from_accept_list(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_del_from_accept_list.__UNIQUE_ID_ddebug556, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_del_from_accept_list, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_del_from_accept_list.__UNIQUE_ID_ddebug556, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8210) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %le_accept_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 192
  %bdaddr = getelementptr inbounds %struct.hci_cp_le_del_from_accept_list, ptr %call8, i32 0, i32 1
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %call13 = tail call i32 @hci_bdaddr_list_del(ptr noundef %le_accept_list, ptr noundef %bdaddr, i8 noundef zeroext %5) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %7, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_supported_states(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_supported_states.__UNIQUE_ID_ddebug557, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_supported_states, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_supported_states.__UNIQUE_ID_ddebug557, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %le_states = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 26
  %le_states9 = getelementptr inbounds %struct.hci_rp_le_read_supported_states, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %le_states9 to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %le_states9, align 1
  %6 = ptrtoint ptr %le_states to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 %5, ptr %le_states, align 1
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %8, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_def_data_len(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_def_data_len.__UNIQUE_ID_ddebug558, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_def_data_len, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_def_data_len.__UNIQUE_ID_ddebug558, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %tx_len = getelementptr inbounds %struct.hci_rp_le_read_def_data_len, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %tx_len to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %tx_len, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %le_def_tx_len = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 61
  %7 = ptrtoint ptr %le_def_tx_len to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %le_def_tx_len, align 2
  %tx_time = getelementptr inbounds %struct.hci_rp_le_read_def_data_len, ptr %data, i32 0, i32 2
  %8 = ptrtoint ptr %tx_time to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %tx_time, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9)
  %le_def_tx_time = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 62
  %11 = ptrtoint ptr %le_def_tx_time to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %le_def_tx_time, align 8
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %13, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_write_def_data_len(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_write_def_data_len.__UNIQUE_ID_ddebug559, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_write_def_data_len, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_write_def_data_len.__UNIQUE_ID_ddebug559, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8228) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %call8, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %le_def_tx_len = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 61
  %7 = ptrtoint ptr %le_def_tx_len to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %le_def_tx_len, align 2
  %tx_time = getelementptr inbounds %struct.hci_cp_le_write_def_data_len, ptr %call8, i32 0, i32 1
  %8 = ptrtoint ptr %tx_time to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %tx_time, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9)
  %le_def_tx_time = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 62
  %11 = ptrtoint ptr %le_def_tx_time to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %le_def_tx_time, align 8
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %13, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_add_to_resolv_list(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_add_to_resolv_list.__UNIQUE_ID_ddebug560, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_add_to_resolv_list, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_add_to_resolv_list.__UNIQUE_ID_ddebug560, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8231) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %le_resolv_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 193
  %bdaddr = getelementptr inbounds %struct.hci_cp_le_add_to_resolv_list, ptr %call8, i32 0, i32 1
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %peer_irk = getelementptr inbounds %struct.hci_cp_le_add_to_resolv_list, ptr %call8, i32 0, i32 2
  %local_irk = getelementptr inbounds %struct.hci_cp_le_add_to_resolv_list, ptr %call8, i32 0, i32 3
  %call15 = tail call i32 @hci_bdaddr_list_add_with_irk(ptr noundef %le_resolv_list, ptr noundef %bdaddr, i8 noundef zeroext %5, ptr noundef %peer_irk, ptr noundef %local_irk) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %7, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_del_from_resolv_list(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_del_from_resolv_list.__UNIQUE_ID_ddebug561, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_del_from_resolv_list, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_del_from_resolv_list.__UNIQUE_ID_ddebug561, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8232) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %le_resolv_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 193
  %bdaddr = getelementptr inbounds %struct.hci_cp_le_del_from_resolv_list, ptr %call8, i32 0, i32 1
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %call13 = tail call i32 @hci_bdaddr_list_del_with_irk(ptr noundef %le_resolv_list, ptr noundef %bdaddr, i8 noundef zeroext %5) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %7, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_clear_resolv_list(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_clear_resolv_list.__UNIQUE_ID_ddebug562, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_clear_resolv_list, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_clear_resolv_list.__UNIQUE_ID_ddebug562, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %le_resolv_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 193
  tail call void @hci_bdaddr_list_clear(ptr noundef %le_resolv_list) #9
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %5, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_resolv_list_size(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_resolv_list_size.__UNIQUE_ID_ddebug563, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_resolv_list_size, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  %size = getelementptr inbounds %struct.hci_rp_le_read_resolv_list_size, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %size to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %size, align 1
  %conv3 = zext i8 %3 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_resolv_list_size.__UNIQUE_ID_ddebug563, ptr noundef nonnull @.str.112, ptr noundef %name, i32 noundef %conv, i32 noundef %conv3) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool5.not = icmp eq i8 %5, 0
  br i1 %tobool5.not, label %if.end8, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end8:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %size9 = getelementptr inbounds %struct.hci_rp_le_read_resolv_list_size, ptr %data, i32 0, i32 1
  %6 = ptrtoint ptr %size9 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %size9, align 1
  %le_resolv_list_size = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 24
  %8 = ptrtoint ptr %le_resolv_list_size to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %le_resolv_list_size, align 1
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %10, %if.end8 ], [ %5, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_addr_resolution_enable(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_addr_resolution_enable.__UNIQUE_ID_ddebug564, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_addr_resolution_enable, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_addr_resolution_enable.__UNIQUE_ID_ddebug564, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8237) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool13.not = icmp eq i8 %5, 0
  %dev_flags16 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  br i1 %tobool13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_set_bit(i32 noundef 40, ptr noundef %dev_flags16) #9
  br label %if.end18

if.else:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @_clear_bit(i32 noundef 40, ptr noundef %dev_flags16) #9
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end18, %if.end7.cleanup.sink.split_crit_edge
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %7, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_max_data_len(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_max_data_len.__UNIQUE_ID_ddebug565, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_max_data_len, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_max_data_len.__UNIQUE_ID_ddebug565, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %tx_len = getelementptr inbounds %struct.hci_rp_le_read_max_data_len, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %tx_len to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %tx_len, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %le_max_tx_len = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 63
  %7 = ptrtoint ptr %le_max_tx_len to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %le_max_tx_len, align 2
  %tx_time = getelementptr inbounds %struct.hci_rp_le_read_max_data_len, ptr %data, i32 0, i32 2
  %8 = ptrtoint ptr %tx_time to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %tx_time, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9)
  %le_max_tx_time = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 64
  %11 = ptrtoint ptr %le_max_tx_time to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %le_max_tx_time, align 4
  %rx_len = getelementptr inbounds %struct.hci_rp_le_read_max_data_len, ptr %data, i32 0, i32 3
  %12 = ptrtoint ptr %rx_len to i32
  call void @__asan_loadN_noabort(i32 %12, i32 2)
  %13 = load i16, ptr %rx_len, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13)
  %le_max_rx_len = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 65
  %15 = ptrtoint ptr %le_max_rx_len to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %14, ptr %le_max_rx_len, align 2
  %rx_time = getelementptr inbounds %struct.hci_rp_le_read_max_data_len, ptr %data, i32 0, i32 4
  %16 = ptrtoint ptr %rx_time to i32
  call void @__asan_loadN_noabort(i32 %16, i32 2)
  %17 = load i16, ptr %rx_time, align 1
  %18 = tail call i16 @llvm.bswap.i16(i16 %17)
  %le_max_rx_time = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 66
  %19 = ptrtoint ptr %le_max_rx_time to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %18, ptr %le_max_rx_time, align 8
  %20 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %21, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_le_host_supported(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_le_host_supported.__UNIQUE_ID_ddebug566, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_le_host_supported, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_le_host_supported.__UNIQUE_ID_ddebug566, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3181) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool13.not = icmp eq i8 %5, 0
  %arrayidx20 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 1
  %6 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx20, align 2
  br i1 %tobool13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %8 = or i8 %7, 2
  %9 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %arrayidx20, align 2
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_set_bit(i32 noundef 23, ptr noundef %dev_flags) #9
  br label %if.end28

if.else:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %10 = and i8 %7, -3
  %11 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %arrayidx20, align 2
  %dev_flags24 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_clear_bit(i32 noundef 23, ptr noundef %dev_flags24) #9
  tail call void @_clear_bit(i32 noundef 24, ptr noundef %dev_flags24) #9
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then14
  %simul = getelementptr inbounds %struct.hci_cp_write_le_host_supported, ptr %call8, i32 0, i32 1
  %12 = ptrtoint ptr %simul to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %simul, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool29.not = icmp eq i8 %13, 0
  %arrayidx39 = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 21, i32 1
  %14 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx39, align 2
  %16 = and i8 %15, -5
  %masksel = select i1 %tobool29.not, i8 0, i8 4
  %.sink = or i8 %16, %masksel
  store i8 %.sink, ptr %arrayidx39, align 2
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end28, %if.end7.cleanup.sink.split_crit_edge
  %17 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %18, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_set_adv_param(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_set_adv_param.__UNIQUE_ID_ddebug567, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_set_adv_param, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_set_adv_param.__UNIQUE_ID_ddebug567, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8198) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %own_address_type = getelementptr inbounds %struct.hci_cp_le_set_adv_param, ptr %call8, i32 0, i32 3
  %4 = ptrtoint ptr %own_address_type to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %own_address_type, align 1
  %adv_addr_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 12
  %6 = ptrtoint ptr %adv_addr_type to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %adv_addr_type, align 2
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %8, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_rssi(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_rssi.__UNIQUE_ID_ddebug569, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_rssi, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_rssi.__UNIQUE_ID_ddebug569, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_rp_read_rssi, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %call8 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.if.end12_crit_edge, label %if.then10

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %rssi = getelementptr inbounds %struct.hci_rp_read_rssi, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %rssi to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %rssi, align 1
  %rssi11 = getelementptr inbounds %struct.hci_conn, ptr %call8, i32 0, i32 44
  %9 = ptrtoint ptr %rssi11 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %rssi11, align 2
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end7.if.end12_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %11, %if.end12 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_read_tx_power(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_read_tx_power.__UNIQUE_ID_ddebug570, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_read_tx_power, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_read_tx_power.__UNIQUE_ID_ddebug570, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 3117) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_rp_read_tx_power, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %call13 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end12.unlock_crit_edge, label %if.end16

if.end12.unlock_crit_edge:                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end16:                                         ; preds = %if.end12
  %type = getelementptr inbounds %struct.hci_cp_read_tx_power, ptr %call8, i32 0, i32 1
  %7 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %type, align 1
  %9 = zext i8 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.269)
  switch i8 %8, label %if.end16.unlock_crit_edge [
    i8 0, label %sw.bb
    i8 1, label %sw.bb19
  ]

if.end16.unlock_crit_edge:                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

sw.bb:                                            ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %tx_power = getelementptr inbounds %struct.hci_rp_read_tx_power, ptr %data, i32 0, i32 2
  %10 = ptrtoint ptr %tx_power to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %tx_power, align 1
  %tx_power18 = getelementptr inbounds %struct.hci_conn, ptr %call13, i32 0, i32 45
  %12 = ptrtoint ptr %tx_power18 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %tx_power18, align 1
  br label %unlock

sw.bb19:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %tx_power20 = getelementptr inbounds %struct.hci_rp_read_tx_power, ptr %data, i32 0, i32 2
  %13 = ptrtoint ptr %tx_power20 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %tx_power20, align 1
  %max_tx_power = getelementptr inbounds %struct.hci_conn, ptr %call13, i32 0, i32 46
  %15 = ptrtoint ptr %max_tx_power to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %14, ptr %max_tx_power, align 8
  br label %unlock

unlock:                                           ; preds = %sw.bb19, %sw.bb, %if.end16.unlock_crit_edge, %if.end12.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %unlock, %if.end7.cleanup.sink.split_crit_edge
  %16 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %17, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_write_ssp_debug_mode(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_write_ssp_debug_mode.__UNIQUE_ID_ddebug571, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_write_ssp_debug_mode, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_write_ssp_debug_mode.__UNIQUE_ID_ddebug571, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 6148) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.if.end11_crit_edge, label %if.then10

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end11

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %ssp_debug_mode = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 76
  %6 = ptrtoint ptr %ssp_debug_mode to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %ssp_debug_mode, align 1
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7.if.end11_crit_edge
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %8, %if.end11 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_ext_scan_param(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_ext_scan_param.__UNIQUE_ID_ddebug549, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_ext_scan_param, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_ext_scan_param.__UNIQUE_ID_ddebug549, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8257) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %data13 = getelementptr inbounds %struct.hci_cp_le_set_ext_scan_params, ptr %call8, i32 0, i32 3
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %4 = ptrtoint ptr %data13 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data13, align 1
  %le_scan_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 46
  %6 = ptrtoint ptr %le_scan_type to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %le_scan_type, align 8
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %8, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_ext_scan_enable(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_ext_scan_enable.__UNIQUE_ID_ddebug551, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_ext_scan_enable, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_ext_scan_enable.__UNIQUE_ID_ddebug551, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8258) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  tail call fastcc void @le_set_scan_enable_complete(ptr noundef %hdev, i8 noundef zeroext %5)
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %7, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_default_phy(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_default_phy.__UNIQUE_ID_ddebug540, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_default_phy, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_default_phy.__UNIQUE_ID_ddebug540, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8241) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %tx_phys = getelementptr inbounds %struct.hci_cp_le_set_default_phy, ptr %call8, i32 0, i32 1
  %4 = ptrtoint ptr %tx_phys to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %tx_phys, align 1
  %le_tx_def_phys = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 136
  %6 = ptrtoint ptr %le_tx_def_phys to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %le_tx_def_phys, align 8
  %rx_phys = getelementptr inbounds %struct.hci_cp_le_set_default_phy, ptr %call8, i32 0, i32 2
  %7 = ptrtoint ptr %rx_phys to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %rx_phys, align 1
  %le_rx_def_phys = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 137
  %9 = ptrtoint ptr %le_rx_def_phys to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %le_rx_def_phys, align 1
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end12, %if.end7.cleanup.sink.split_crit_edge
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %11, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_num_adv_sets(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_num_adv_sets.__UNIQUE_ID_ddebug552, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_num_adv_sets, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  %num_of_sets = getelementptr inbounds %struct.hci_rp_le_read_num_supported_adv_sets, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %num_of_sets to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %num_of_sets, align 1
  %conv3 = zext i8 %3 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_num_adv_sets.__UNIQUE_ID_ddebug552, ptr noundef nonnull @.str.134, ptr noundef %name, i32 noundef %conv, i32 noundef %conv3) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool5.not = icmp eq i8 %5, 0
  br i1 %tobool5.not, label %if.end8, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end8:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %num_of_sets9 = getelementptr inbounds %struct.hci_rp_le_read_num_supported_adv_sets, ptr %data, i32 0, i32 1
  %6 = ptrtoint ptr %num_of_sets9 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %num_of_sets9, align 1
  %le_num_of_adv_sets = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 25
  %8 = ptrtoint ptr %le_num_of_adv_sets to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %le_num_of_adv_sets, align 8
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %10, %if.end8 ], [ %5, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_set_ext_adv_param(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_set_ext_adv_param.__UNIQUE_ID_ddebug568, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_set_ext_adv_param, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_set_ext_adv_param.__UNIQUE_ID_ddebug568, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8246) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %own_addr_type = getelementptr inbounds %struct.hci_cp_le_set_ext_adv_params, ptr %call8, i32 0, i32 5
  %4 = ptrtoint ptr %own_addr_type to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %own_addr_type, align 1
  %adv_addr_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 12
  %6 = ptrtoint ptr %adv_addr_type to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %adv_addr_type, align 2
  %7 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %call8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool13.not = icmp eq i8 %8, 0
  br i1 %tobool13.not, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %tx_power = getelementptr inbounds %struct.hci_rp_le_set_ext_adv_params, ptr %data, i32 0, i32 1
  %9 = ptrtoint ptr %tx_power to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %tx_power, align 1
  %adv_tx_power = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 208
  %11 = ptrtoint ptr %adv_tx_power to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %adv_tx_power, align 8
  br label %if.end22

if.else:                                          ; preds = %if.end12
  %call16 = tail call ptr @hci_find_adv_instance(ptr noundef %hdev, i8 noundef zeroext %8) #9
  %tobool17.not = icmp eq ptr %call16, null
  br i1 %tobool17.not, label %if.else.if.end22_crit_edge, label %if.then18

if.else.if.end22_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end22

if.then18:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  %tx_power19 = getelementptr inbounds %struct.hci_rp_le_set_ext_adv_params, ptr %data, i32 0, i32 1
  %12 = ptrtoint ptr %tx_power19 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %tx_power19, align 1
  %tx_power20 = getelementptr inbounds %struct.adv_info, ptr %call16, i32 0, i32 12
  %14 = ptrtoint ptr %tx_power20 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %tx_power20, align 1
  br label %if.end22

if.end22:                                         ; preds = %if.then18, %if.else.if.end22_crit_edge, %if.then14
  %15 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %call8, align 1
  %call24 = tail call i32 @hci_req_update_adv_data(ptr noundef %hdev, i8 noundef zeroext %16) #9
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end22, %if.end7.cleanup.sink.split_crit_edge
  %17 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %18, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_ext_adv_enable(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_ext_adv_enable.__UNIQUE_ID_ddebug547, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_ext_adv_enable, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_ext_adv_enable.__UNIQUE_ID_ddebug547, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8249) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %num_of_sets = getelementptr inbounds %struct.hci_cp_le_set_ext_adv_enable, ptr %call8, i32 0, i32 1
  %4 = ptrtoint ptr %num_of_sets to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %num_of_sets, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool15.not = icmp eq i8 %5, 0
  br i1 %tobool15.not, label %if.end12.if.end18_crit_edge, label %if.then16

if.end12.if.end18_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then16:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %data13 = getelementptr inbounds %struct.hci_cp_le_set_ext_adv_enable, ptr %call8, i32 0, i32 2
  %6 = ptrtoint ptr %data13 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data13, align 1
  %call17 = tail call ptr @hci_find_adv_instance(ptr noundef %hdev, i8 noundef zeroext %7) #9
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end12.if.end18_crit_edge
  %adv.0 = phi ptr [ %call17, %if.then16 ], [ null, %if.end12.if.end18_crit_edge ]
  %8 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %call8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool19.not = icmp eq i8 %9, 0
  br i1 %tobool19.not, label %if.else, label %if.then20

if.then20:                                        ; preds = %if.end18
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_set_bit(i32 noundef 13, ptr noundef %dev_flags) #9
  %tobool22.not = icmp eq ptr %adv.0, null
  br i1 %tobool22.not, label %if.then20.if.end24_crit_edge, label %if.then23

if.then20.if.end24_crit_edge:                     ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end24

if.then23:                                        ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #11
  %enabled = getelementptr inbounds %struct.adv_info, ptr %adv.0, i32 0, i32 1
  %10 = ptrtoint ptr %enabled to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 1, ptr %enabled, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.then20.if.end24_crit_edge
  %call25 = tail call fastcc ptr @hci_lookup_le_connect(ptr noundef %hdev)
  %tobool26.not = icmp eq ptr %call25, null
  br i1 %tobool26.not, label %if.end24.unlock_crit_edge, label %if.then27

if.end24.unlock_crit_edge:                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then27:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #11
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 138
  %11 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %workqueue, align 4
  %le_conn_timeout = getelementptr inbounds %struct.hci_conn, ptr %call25, i32 0, i32 61
  %conn_timeout = getelementptr inbounds %struct.hci_conn, ptr %call25, i32 0, i32 32
  %13 = ptrtoint ptr %conn_timeout to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %conn_timeout, align 4
  %conv28 = zext i16 %14 to i32
  %call.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %12, ptr noundef %le_conn_timeout, i32 noundef %conv28) #9
  br label %unlock

if.else:                                          ; preds = %if.end18
  %15 = ptrtoint ptr %num_of_sets to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %num_of_sets, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool32.not = icmp eq i8 %16, 0
  br i1 %tobool32.not, label %if.else57, label %if.then33

if.then33:                                        ; preds = %if.else
  %tobool34.not = icmp eq ptr %adv.0, null
  br i1 %tobool34.not, label %if.then33.if.end37_crit_edge, label %if.then35

if.then33.if.end37_crit_edge:                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37

if.then35:                                        ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #11
  %enabled36 = getelementptr inbounds %struct.adv_info, ptr %adv.0, i32 0, i32 1
  %17 = ptrtoint ptr %enabled36 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 0, ptr %enabled36, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.then33.if.end37_crit_edge
  %adv_instances = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 213
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end37
  %adv.1.in = phi ptr [ %adv_instances, %if.end37 ], [ %adv.1, %for.body.for.cond_crit_edge ]
  %18 = ptrtoint ptr %adv.1.in to i32
  call void @__asan_load4_noabort(i32 %18)
  %adv.1 = load ptr, ptr %adv.1.in, align 4
  %cmp.not = icmp eq ptr %adv.1, %adv_instances
  br i1 %cmp.not, label %for.cond.if.end84_crit_edge, label %for.body

for.cond.if.end84_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end84

for.body:                                         ; preds = %for.cond
  %enabled48 = getelementptr inbounds %struct.adv_info, ptr %adv.1, i32 0, i32 1
  %19 = ptrtoint ptr %enabled48 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %enabled48, align 4, !range !679
  %tobool49.not = icmp eq i8 %20, 0
  br i1 %tobool49.not, label %for.body.for.cond_crit_edge, label %for.body.unlock_crit_edge

for.body.unlock_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond

if.else57:                                        ; preds = %if.else
  %adv_instances59 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 213
  %21 = ptrtoint ptr %adv_instances59 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adv_instances59, align 4
  %cmp71.not130 = icmp eq ptr %22, %adv_instances59
  br i1 %cmp71.not130, label %if.else57.if.end84_crit_edge, label %if.else57.for.body75_crit_edge

if.else57.for.body75_crit_edge:                   ; preds = %if.else57
  br label %for.body75

if.else57.if.end84_crit_edge:                     ; preds = %if.else57
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end84

for.body75:                                       ; preds = %for.body75.for.body75_crit_edge, %if.else57.for.body75_crit_edge
  %adv.2131 = phi ptr [ %n.1, %for.body75.for.body75_crit_edge ], [ %22, %if.else57.for.body75_crit_edge ]
  %23 = ptrtoint ptr %adv.2131 to i32
  call void @__asan_load4_noabort(i32 %23)
  %n.1 = load ptr, ptr %adv.2131, align 4
  %enabled76 = getelementptr inbounds %struct.adv_info, ptr %adv.2131, i32 0, i32 1
  %24 = ptrtoint ptr %enabled76 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 0, ptr %enabled76, align 4
  %cmp71.not = icmp eq ptr %n.1, %adv_instances59
  br i1 %cmp71.not, label %for.body75.if.end84_crit_edge, label %for.body75.for.body75_crit_edge

for.body75.for.body75_crit_edge:                  ; preds = %for.body75
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body75

for.body75.if.end84_crit_edge:                    ; preds = %for.body75
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end84

if.end84:                                         ; preds = %for.body75.if.end84_crit_edge, %if.else57.if.end84_crit_edge, %for.cond.if.end84_crit_edge
  %dev_flags85 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_clear_bit(i32 noundef 13, ptr noundef %dev_flags85) #9
  br label %unlock

unlock:                                           ; preds = %if.end84, %for.body.unlock_crit_edge, %if.then27, %if.end24.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %unlock, %if.end7.cleanup.sink.split_crit_edge
  %25 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %26, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_adv_set_random_addr(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_adv_set_random_addr.__UNIQUE_ID_ddebug541, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_adv_set_random_addr, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_adv_set_random_addr.__UNIQUE_ID_ddebug541, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8245) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %lor.lhs.false

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

lor.lhs.false:                                    ; preds = %if.end7
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool10.not = icmp eq i8 %5, 0
  br i1 %tobool10.not, label %lor.lhs.false.cleanup.sink.split_crit_edge, label %if.end13

lor.lhs.false.cleanup.sink.split_crit_edge:       ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end13:                                         ; preds = %lor.lhs.false
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %6 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %call8, align 1
  %call15 = tail call ptr @hci_find_adv_instance(ptr noundef %hdev, i8 noundef zeroext %7) #9
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %if.end13.if.end25_crit_edge, label %if.then17

if.end13.if.end25_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

if.then17:                                        ; preds = %if.end13
  %random_addr = getelementptr inbounds %struct.adv_info, ptr %call15, i32 0, i32 15
  %bdaddr = getelementptr inbounds %struct.hci_cp_le_set_adv_set_rand_addr, ptr %call8, i32 0, i32 1
  %8 = call ptr @memcpy(ptr %random_addr, ptr %bdaddr, i32 6)
  %rpa = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 223
  %bcmp = tail call i32 @bcmp(ptr noundef dereferenceable(6) %rpa, ptr noundef dereferenceable(6) %bdaddr, i32 6) #12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool20.not = icmp eq i32 %bcmp, 0
  br i1 %tobool20.not, label %if.then21, label %if.then17.if.end25_crit_edge

if.then17.if.end25_crit_edge:                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end25

if.then21:                                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #11
  %rpa_expired = getelementptr inbounds %struct.adv_info, ptr %call15, i32 0, i32 16
  %9 = ptrtoint ptr %rpa_expired to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %rpa_expired, align 2
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 138
  %10 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %workqueue, align 4
  %rpa_expired_cb = getelementptr inbounds %struct.adv_info, ptr %call15, i32 0, i32 17
  %rpa_timeout = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 221
  %12 = ptrtoint ptr %rpa_timeout to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rpa_timeout, align 8
  %mul = mul i32 %13, 1000
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %mul) #9
  %call.i49 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %11, ptr noundef %rpa_expired_cb, i32 noundef %call2.i) #9
  br label %if.end25

if.end25:                                         ; preds = %if.then21, %if.then17.if.end25_crit_edge, %if.end13.if.end25_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end25, %lor.lhs.false.cleanup.sink.split_crit_edge, %if.end7.cleanup.sink.split_crit_edge
  %14 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %15, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_remove_adv_set(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_remove_adv_set.__UNIQUE_ID_ddebug542, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_remove_adv_set, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_remove_adv_set.__UNIQUE_ID_ddebug542, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8252) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %call13 = tail call i32 @hci_remove_adv_instance(ptr noundef %hdev, i8 noundef zeroext %5) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.then15, label %if.end12.if.end17_crit_edge

if.end12.if.end17_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %sent_cmd = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 162
  %6 = ptrtoint ptr %sent_cmd to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sent_cmd, align 4
  %8 = getelementptr inbounds %struct.sk_buff, ptr %7, i32 0, i32 3, i32 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 8
  %11 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %call8, align 1
  tail call void @mgmt_advertising_removed(ptr noundef %10, ptr noundef %hdev, i8 noundef zeroext %12) #9
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12.if.end17_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end17, %if.end7.cleanup.sink.split_crit_edge
  %13 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %14, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_clear_adv_sets(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_clear_adv_sets.__UNIQUE_ID_ddebug543, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_clear_adv_sets, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_clear_adv_sets.__UNIQUE_ID_ddebug543, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8253) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %adv_instances = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 213
  %4 = ptrtoint ptr %adv_instances to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adv_instances, align 4
  %cmp.not57 = icmp eq ptr %5, %adv_instances
  br i1 %cmp.not57, label %if.end12.for.end_crit_edge, label %for.body.lr.ph

if.end12.for.end_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end12
  %sent_cmd = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 162
  br label %for.body

for.body:                                         ; preds = %if.end28.for.body_crit_edge, %for.body.lr.ph
  %adv.058 = phi ptr [ %5, %for.body.lr.ph ], [ %n.059, %if.end28.for.body_crit_edge ]
  %6 = ptrtoint ptr %adv.058 to i32
  call void @__asan_load4_noabort(i32 %6)
  %n.059 = load ptr, ptr %adv.058, align 4
  %instance23 = getelementptr inbounds %struct.adv_info, ptr %adv.058, i32 0, i32 3
  %7 = ptrtoint ptr %instance23 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %instance23, align 2
  %call24 = tail call i32 @hci_remove_adv_instance(ptr noundef %hdev, i8 noundef zeroext %8) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.then26, label %for.body.if.end28_crit_edge

for.body.if.end28_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end28

if.then26:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  %9 = ptrtoint ptr %sent_cmd to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %sent_cmd, align 4
  %11 = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 3, i32 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 8
  tail call void @mgmt_advertising_removed(ptr noundef %13, ptr noundef %hdev, i8 noundef zeroext %8) #9
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %for.body.if.end28_crit_edge
  %cmp.not = icmp eq ptr %n.059, %adv_instances
  br i1 %cmp.not, label %if.end28.for.end_crit_edge, label %if.end28.for.body_crit_edge

if.end28.for.body_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

if.end28.for.end_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.end:                                          ; preds = %if.end28.for.end_crit_edge, %if.end12.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %for.end, %if.end7.cleanup.sink.split_crit_edge
  %14 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %15, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_read_transmit_power(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_read_transmit_power.__UNIQUE_ID_ddebug544, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_read_transmit_power, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_read_transmit_power.__UNIQUE_ID_ddebug544, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %min_le_tx_power = getelementptr inbounds %struct.hci_rp_le_read_transmit_power, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %min_le_tx_power to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %min_le_tx_power, align 1
  %min_le_tx_power8 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 96
  %6 = ptrtoint ptr %min_le_tx_power8 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %min_le_tx_power8, align 2
  %max_le_tx_power = getelementptr inbounds %struct.hci_rp_le_read_transmit_power, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %max_le_tx_power to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %max_le_tx_power, align 1
  %max_le_tx_power9 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 97
  %9 = ptrtoint ptr %max_le_tx_power9 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %max_le_tx_power9, align 1
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %11, %if.end7 ], [ %3, %do.end.cleanup_crit_edge ]
  ret i8 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i8 @hci_cc_le_set_privacy_mode(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cc_le_set_privacy_mode.__UNIQUE_ID_ddebug545, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cc_le_set_privacy_mode, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cc_le_set_privacy_mode.__UNIQUE_ID_ddebug545, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end7, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end7:                                          ; preds = %do.end
  %call8 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8270) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup.sink.split_crit_edge, label %if.end12

if.end7.cleanup.sink.split_crit_edge:             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup.sink.split

if.end12:                                         ; preds = %if.end7
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %bdaddr = getelementptr inbounds %struct.hci_cp_le_set_privacy_mode, ptr %call8, i32 0, i32 1
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call8, align 1
  %call13 = tail call ptr @hci_conn_params_lookup(ptr noundef %hdev, ptr noundef %bdaddr, i8 noundef zeroext %5) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end12.if.end16_crit_edge, label %if.then15

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  %mode = getelementptr inbounds %struct.hci_cp_le_set_privacy_mode, ptr %call8, i32 0, i32 2
  %6 = ptrtoint ptr %mode to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %mode, align 1
  %privacy_mode = getelementptr inbounds %struct.hci_conn_params, ptr %call13, i32 0, i32 12
  %8 = ptrtoint ptr %privacy_mode to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %privacy_mode, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end12.if.end16_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end16, %if.end7.cleanup.sink.split_crit_edge
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %data, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %do.end.cleanup_crit_edge
  %retval.0 = phi i8 [ %3, %do.end.cleanup_crit_edge ], [ %10, %cleanup.sink.split ]
  ret i8 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_sent_cmd_data(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_bdaddr_list_clear(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_set_local_name_complete(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_auth_enable_complete(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_set_class_of_dev_complete(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_pin_code_reply_complete(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_pin_code_neg_reply_complete(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mgmt_user_confirm_reply_complete(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mgmt_user_confirm_neg_reply_complete(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mgmt_user_passkey_reply_complete(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mgmt_user_passkey_neg_reply_complete(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @hci_lookup_le_connect(ptr noundef %hdev) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %conn_hash = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 183
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #9
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !684
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #9
  %call.i = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 696, ptr noundef nonnull @.str.17) #9
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call i32 @rcu_read_lock_any_held() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b38 = load i1, ptr @hci_lookup_le_connect.__warned, align 1
  br i1 %.b38, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @hci_lookup_le_connect.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 1096, ptr noundef nonnull @.str.15) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  %4 = ptrtoint ptr %conn_hash to i32
  call void @__asan_load4_noabort(i32 %4)
  %c.060 = load volatile ptr, ptr %conn_hash, align 4
  %cmp.not61 = icmp eq ptr %c.060, %conn_hash
  br i1 %cmp.not61, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %c.062 = phi ptr [ %c.0, %for.inc.for.body_crit_edge ], [ %c.060, %do.end.for.body_crit_edge ]
  %type = getelementptr inbounds %struct.hci_conn, ptr %c.062, i32 0, i32 14
  %5 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %6)
  %cmp11 = icmp eq i8 %6, -128
  br i1 %cmp11, label %land.lhs.true13, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

land.lhs.true13:                                  ; preds = %for.body
  %state = getelementptr inbounds %struct.hci_conn, ptr %c.062, i32 0, i32 12
  %7 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 5, i16 %8)
  %cmp15 = icmp eq i16 %8, 5
  br i1 %cmp15, label %land.lhs.true17, label %land.lhs.true13.for.inc_crit_edge

land.lhs.true13.for.inc_crit_edge:                ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

land.lhs.true17:                                  ; preds = %land.lhs.true13
  %flags = getelementptr inbounds %struct.hci_conn, ptr %c.062, i32 0, i32 47
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %flags, align 4
  %11 = and i32 %10, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool19.not = icmp eq i32 %11, 0
  br i1 %tobool19.not, label %if.then20, label %land.lhs.true17.for.inc_crit_edge

land.lhs.true17.for.inc_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc

if.then20:                                        ; preds = %land.lhs.true17
  %call.i39 = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i39, label %if.then20.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i42

if.then20.rcu_read_unlock.exit_crit_edge:         ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit

land.lhs.true.i42:                                ; preds = %if.then20
  %call1.i40 = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i40)
  %tobool.not.i41 = icmp eq i32 %call1.i40, 0
  br i1 %tobool.not.i41, label %land.lhs.true.i42.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i44

land.lhs.true.i42.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i42
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit

land.lhs.true2.i44:                               ; preds = %land.lhs.true.i42
  %.b4.i43 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i43, label %land.lhs.true2.i44.rcu_read_unlock.exit_crit_edge, label %if.then.i45

land.lhs.true2.i44.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i44
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit

if.then.i45:                                      ; preds = %land.lhs.true2.i44
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 724, ptr noundef nonnull @.str.18) #9
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i45, %land.lhs.true2.i44.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i42.rcu_read_unlock.exit_crit_edge, %if.then20.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !685
  br label %cleanup

for.inc:                                          ; preds = %land.lhs.true17.for.inc_crit_edge, %land.lhs.true13.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %12 = ptrtoint ptr %c.062 to i32
  call void @__asan_load4_noabort(i32 %12)
  %c.0 = load volatile ptr, ptr %c.062, align 4
  %cmp.not = icmp eq ptr %c.0, %conn_hash
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end.for.end_crit_edge
  %call.i48 = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i48, label %for.end.rcu_read_unlock.exit58_crit_edge, label %land.lhs.true.i51

for.end.rcu_read_unlock.exit58_crit_edge:         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit58

land.lhs.true.i51:                                ; preds = %for.end
  %call1.i49 = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i49)
  %tobool.not.i50 = icmp eq i32 %call1.i49, 0
  br i1 %tobool.not.i50, label %land.lhs.true.i51.rcu_read_unlock.exit58_crit_edge, label %land.lhs.true2.i53

land.lhs.true.i51.rcu_read_unlock.exit58_crit_edge: ; preds = %land.lhs.true.i51
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit58

land.lhs.true2.i53:                               ; preds = %land.lhs.true.i51
  %.b4.i52 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i52, label %land.lhs.true2.i53.rcu_read_unlock.exit58_crit_edge, label %if.then.i54

land.lhs.true2.i53.rcu_read_unlock.exit58_crit_edge: ; preds = %land.lhs.true2.i53
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit58

if.then.i54:                                      ; preds = %land.lhs.true2.i53
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 724, ptr noundef nonnull @.str.18) #9
  br label %rcu_read_unlock.exit58

rcu_read_unlock.exit58:                           ; preds = %if.then.i54, %land.lhs.true2.i53.rcu_read_unlock.exit58_crit_edge, %land.lhs.true.i51.rcu_read_unlock.exit58_crit_edge, %for.end.rcu_read_unlock.exit58_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !685
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit58, %rcu_read_unlock.exit
  %retval.0 = phi ptr [ %c.062, %rcu_read_unlock.exit ], [ null, %rcu_read_unlock.exit58 ]
  %13 = tail call i32 @llvm.read_register.i32(metadata !669) #9
  %and.i.i.i.i.i55 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i55 to ptr
  %preempt_count.i.i.i.i56 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i56 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i56, align 4
  %sub.i.i.i57 = add i32 %16, -1
  store volatile i32 %sub.i.i.i57, ptr %preempt_count.i.i.i.i56, align 4
  tail call void @rcu_read_unlock_strict() #9
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #9
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @le_set_scan_enable_complete(ptr noundef %hdev, i8 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  %.compoundliteral.i = alloca %struct.bdaddr_t, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %0 = zext i8 %enable to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.270)
  switch i8 %enable, label %sw.default [
    i8 1, label %sw.bb
    i8 0, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_set_bit(i32 noundef 14, ptr noundef %dev_flags) #9
  %le_scan_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 46
  %1 = ptrtoint ptr %le_scan_type to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %le_scan_type, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %2)
  %cmp = icmp eq i8 %2, 1
  br i1 %cmp, label %if.then, label %sw.bb.sw.epilog_crit_edge

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

if.then:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  %last_adv_addr.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 6
  %last_adv_data_len.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 11
  %3 = ptrtoint ptr %last_adv_data_len.i to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %last_adv_data_len.i, align 1
  %4 = call ptr @memset(ptr %last_adv_addr.i, i32 0, i32 6)
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %.compoundliteral.i)
  %last_adv_addr.i37 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 6
  %5 = call ptr @memset(ptr %.compoundliteral.i, i32 0, i32 6)
  %bcmp.i = call i32 @bcmp(ptr noundef dereferenceable(6) %last_adv_addr.i37, ptr noundef nonnull dereferenceable(6) %.compoundliteral.i, i32 6) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %tobool.i.not = icmp eq i32 %bcmp.i, 0
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %.compoundliteral.i)
  br i1 %tobool.i.not, label %sw.bb3.if.end7_crit_edge, label %if.then4

sw.bb3.if.end7_crit_edge:                         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end7

if.then4:                                         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #11
  %last_adv_addr_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 7
  %6 = ptrtoint ptr %last_adv_addr_type to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %last_adv_addr_type, align 2
  %last_adv_rssi = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 8
  %8 = ptrtoint ptr %last_adv_rssi to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %last_adv_rssi, align 1
  %last_adv_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 9
  %10 = ptrtoint ptr %last_adv_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %last_adv_flags, align 4
  %last_adv_data = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 10
  %last_adv_data_len = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 11
  %12 = ptrtoint ptr %last_adv_data_len to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %last_adv_data_len, align 1
  %conv6 = zext i8 %13 to i16
  tail call void @mgmt_device_found(ptr noundef %hdev, ptr noundef %last_adv_addr.i37, i8 noundef zeroext -128, i8 noundef zeroext %7, ptr noundef null, i8 noundef signext %9, i32 noundef %11, ptr noundef %last_adv_data, i16 noundef zeroext %conv6, ptr noundef null, i8 noundef zeroext 0) #9
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %sw.bb3.if.end7_crit_edge
  %le_scan_disable = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 157
  %call8 = tail call zeroext i1 @cancel_delayed_work(ptr noundef %le_scan_disable) #9
  %dev_flags9 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_clear_bit(i32 noundef 14, ptr noundef %dev_flags9) #9
  %call13 = tail call i32 @_test_and_clear_bit(i32 noundef 33, ptr noundef %dev_flags9) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool.not = icmp eq i32 %call13, 0
  br i1 %tobool.not, label %if.end7.sw.epilog_crit_edge, label %if.then14

if.end7.sw.epilog_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog

if.then14:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @hci_discovery_set_state(ptr noundef %hdev, i32 noundef 0) #9
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %conv = zext i8 %enable to i32
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.110, ptr noundef %name, i32 noundef %conv) #9
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.then14, %if.end7.sw.epilog_crit_edge, %if.then, %sw.bb.sw.epilog_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_bdaddr_list_add(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_bdaddr_list_del(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_bdaddr_list_add_with_irk(ptr noundef, ptr noundef, i8 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_bdaddr_list_del_with_irk(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_find_adv_instance(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_req_update_adv_data(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hci_remove_adv_instance(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_advertising_removed(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_pull_data(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_inquiry(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_inquiry.__UNIQUE_ID_ddebug572, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_inquiry, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_inquiry.__UNIQUE_ID_ddebug572, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @hci_conn_check_pending(ptr noundef %hdev) #9
  br label %return

if.end5:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 3
  tail call void @_set_bit(i32 noundef 7, ptr noundef %flags) #9
  br label %return

return:                                           ; preds = %if.end5, %if.then4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_create_conn(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_create_conn.__UNIQUE_ID_ddebug573, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_create_conn, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_create_conn.__UNIQUE_ID_ddebug573, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1029) #9
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.cleanup_crit_edge, label %if.end6

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end6:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call7 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef nonnull %call3)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_create_conn.__UNIQUE_ID_ddebug574, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_create_conn, %if.then20)) #9
          to label %do.end26 [label %if.then20], !srcloc !680

if.then20:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %name21 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_create_conn.__UNIQUE_ID_ddebug574, ptr noundef nonnull @.str.148, ptr noundef %name21, ptr noundef nonnull %call3, ptr noundef %call7) #9
  br label %do.end26

do.end26:                                         ; preds = %if.then20, %if.end6
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool27.not = icmp eq i8 %status, 0
  %tobool46.not = icmp eq ptr %call7, null
  br i1 %tobool27.not, label %if.else45, label %if.then28

if.then28:                                        ; preds = %do.end26
  br i1 %tobool46.not, label %if.then28.if.end56_crit_edge, label %land.lhs.true

if.then28.if.end56_crit_edge:                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end56

land.lhs.true:                                    ; preds = %if.then28
  %state = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 12
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 5, i16 %1)
  %cmp = icmp eq i16 %1, 5
  br i1 %cmp, label %if.then32, label %land.lhs.true.if.end56_crit_edge

land.lhs.true.if.end56_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end56

if.then32:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %status)
  %cmp34.not = icmp eq i8 %status, 12
  br i1 %cmp34.not, label %lor.lhs.false, label %if.then32.if.then39_crit_edge

if.then32.if.then39_crit_edge:                    ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then39

lor.lhs.false:                                    ; preds = %if.then32
  %attempt = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 17
  %2 = ptrtoint ptr %attempt to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %attempt, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %3)
  %cmp37 = icmp ugt i8 %3, 2
  br i1 %cmp37, label %lor.lhs.false.if.then39_crit_edge, label %if.else

lor.lhs.false.if.then39_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then39

if.then39:                                        ; preds = %lor.lhs.false.if.then39_crit_edge, %if.then32.if.then39_crit_edge
  %4 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 9, ptr %state, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then39.for.end.i_crit_edge, label %if.then39.for.body.i_crit_edge

if.then39.for.body.i_crit_edge:                   ; preds = %if.then39
  br label %for.body.i

if.then39.for.end.i_crit_edge:                    ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then39.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then39.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %5 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %6(ptr noundef nonnull %call7, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %7 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then39.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 71
  %8 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %9, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %9(ptr noundef nonnull %call7, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  %call41 = tail call i32 @hci_conn_del(ptr noundef nonnull %call7) #9
  br label %if.end56

if.else:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  %10 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 6, ptr %state, align 4
  br label %if.end56

if.else45:                                        ; preds = %do.end26
  br i1 %tobool46.not, label %if.then47, label %if.else45.if.end56_crit_edge

if.else45.if.end56_crit_edge:                     ; preds = %if.else45
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end56

if.then47:                                        ; preds = %if.else45
  %call49 = tail call ptr @hci_conn_add(ptr noundef %hdev, i32 noundef 1, ptr noundef nonnull %call3, i8 noundef zeroext 0) #9
  %tobool50.not = icmp eq ptr %call49, null
  br i1 %tobool50.not, label %if.then51, label %if.then47.if.end56_crit_edge

if.then47.if.end56_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end56

if.then51:                                        ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #11
  %name52 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.23, ptr noundef %name52) #9
  br label %if.end56

if.end56:                                         ; preds = %if.then51, %if.then47.if.end56_crit_edge, %if.else45.if.end56_crit_edge, %if.else, %hci_connect_cfm.exit, %land.lhs.true.if.end56_crit_edge, %if.then28.if.end56_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end56, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_disconnect(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_disconnect.__UNIQUE_ID_ddebug588, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_disconnect, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_disconnect.__UNIQUE_ID_ddebug588, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %land.lhs.true, label %do.end.if.end6_crit_edge

do.end.if.end6_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end6

land.lhs.true:                                    ; preds = %do.end
  %suspended = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 179
  %0 = ptrtoint ptr %suspended to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %suspended, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool4.not = icmp eq i8 %1, 0
  br i1 %tobool4.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end6_crit_edge

land.lhs.true.if.end6_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end6

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end6:                                          ; preds = %land.lhs.true.if.end6_crit_edge, %do.end.if.end6_crit_edge
  %call7 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1030) #9
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %if.end6.cleanup_crit_edge, label %if.end10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %2 = ptrtoint ptr %call7 to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %call7, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call11 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool12.not = icmp eq ptr %call11, null
  br i1 %tobool12.not, label %if.end10.unlock_crit_edge, label %if.end14

if.end10.unlock_crit_edge:                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end14:                                         ; preds = %if.end10
  br i1 %tobool3.not, label %if.end27, label %if.then16

if.then16:                                        ; preds = %if.end14
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 2
  %type = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 14
  %5 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %type, align 1
  %dst_type = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 3
  %7 = ptrtoint ptr %dst_type to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %dst_type, align 2
  tail call void @mgmt_disconnect_failed(ptr noundef %hdev, ptr noundef %dst, i8 noundef zeroext %6, i8 noundef zeroext %8, i8 noundef zeroext %status) #9
  %9 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %type, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %10)
  %cmp = icmp eq i8 %10, -128
  br i1 %cmp, label %land.lhs.true20, label %if.then16.done_crit_edge

if.then16.done_crit_edge:                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #11
  br label %done

land.lhs.true20:                                  ; preds = %if.then16
  %role = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 15
  %11 = ptrtoint ptr %role to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %role, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %12)
  %cmp22 = icmp eq i8 %12, 1
  br i1 %cmp22, label %if.then24, label %land.lhs.true20.done_crit_edge

land.lhs.true20.done_crit_edge:                   ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #11
  br label %done

if.then24:                                        ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #11
  %adv_instance = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 10
  %13 = ptrtoint ptr %adv_instance to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %adv_instance, align 8
  %cur_adv_instance = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 215
  %15 = ptrtoint ptr %cur_adv_instance to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %14, ptr %cur_adv_instance, align 8
  %call25 = tail call i32 @hci_enable_advertising(ptr noundef %hdev) #9
  br label %done

if.end27:                                         ; preds = %if.end14
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 47
  %call28 = tail call i32 @_test_and_clear_bit(i32 noundef 6, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29 = icmp ne i32 %call28, 0
  %type31 = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 14
  %16 = ptrtoint ptr %type31 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %type31, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %17)
  %cmp33 = icmp eq i8 %17, 1
  br i1 %cmp33, label %if.then35, label %if.end27.if.end43_crit_edge

if.end27.if.end43_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end43

if.then35:                                        ; preds = %if.end27
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %flags, align 4
  %20 = and i32 %19, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool38.not = icmp eq i32 %20, 0
  br i1 %tobool38.not, label %if.then35.if.end43_crit_edge, label %if.then39

if.then35.if.end43_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end43

if.then39:                                        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #11
  %dst40 = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 2
  %call41 = tail call i32 @hci_remove_link_key(ptr noundef %hdev, ptr noundef %dst40) #9
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %if.then35.if.end43_crit_edge, %if.end27.if.end43_crit_edge
  %dst44 = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 2
  %dst_type45 = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 3
  %21 = ptrtoint ptr %dst_type45 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %dst_type45, align 2
  %call46 = tail call ptr @hci_conn_params_lookup(ptr noundef %hdev, ptr noundef %dst44, i8 noundef zeroext %22) #9
  %tobool47.not = icmp eq ptr %call46, null
  br i1 %tobool47.not, label %if.end43.if.end56_crit_edge, label %if.then48

if.end43.if.end56_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end56

if.then48:                                        ; preds = %if.end43
  %auto_connect = getelementptr inbounds %struct.hci_conn_params, ptr %call46, i32 0, i32 8
  %23 = ptrtoint ptr %auto_connect to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %auto_connect, align 4
  %25 = zext i32 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.271)
  switch i32 %24, label %if.then48.if.end56_crit_edge [
    i32 4, label %sw.bb
    i32 2, label %if.then48.sw.bb54_crit_edge
    i32 3, label %if.then48.sw.bb54_crit_edge110
  ]

if.then48.sw.bb54_crit_edge110:                   ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb54

if.then48.sw.bb54_crit_edge:                      ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb54

if.then48.if.end56_crit_edge:                     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end56

sw.bb:                                            ; preds = %if.then48
  %reason = getelementptr inbounds %struct.hci_cp_disconnect, ptr %call7, i32 0, i32 1
  %26 = ptrtoint ptr %reason to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %reason, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %27)
  %cmp50.not = icmp eq i8 %27, 8
  br i1 %cmp50.not, label %sw.bb.sw.bb54_crit_edge, label %sw.bb.if.end56_crit_edge

sw.bb.if.end56_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end56

sw.bb.sw.bb54_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.bb54

sw.bb54:                                          ; preds = %sw.bb.sw.bb54_crit_edge, %if.then48.sw.bb54_crit_edge, %if.then48.sw.bb54_crit_edge110
  %action = getelementptr inbounds %struct.hci_conn_params, ptr %call46, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %action) #9
  br i1 %call.i.i, label %if.end.i.i, label %sw.bb54.list_del_init.exit_crit_edge

sw.bb54.list_del_init.exit_crit_edge:             ; preds = %sw.bb54
  call void @__sanitizer_cov_trace_pc() #11
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %sw.bb54
  call void @__sanitizer_cov_trace_pc() #11
  %prev.i.i = getelementptr inbounds %struct.hci_conn_params, ptr %call46, i32 0, i32 1, i32 1
  %28 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev.i.i, align 4
  %30 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %action, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev1.i.i.i, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %31, ptr %29, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %sw.bb54.list_del_init.exit_crit_edge
  %34 = ptrtoint ptr %action to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %action, ptr %action, align 4
  %prev.i3.i = getelementptr inbounds %struct.hci_conn_params, ptr %call46, i32 0, i32 1, i32 1
  %35 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %action, ptr %prev.i3.i, align 4
  %pend_le_conns = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 195
  %36 = ptrtoint ptr %pend_le_conns to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pend_le_conns, align 4
  %call.i.i107 = tail call zeroext i1 @__list_add_valid(ptr noundef %action, ptr noundef %pend_le_conns, ptr noundef %37) #9
  br i1 %call.i.i107, label %if.end.i.i108, label %list_del_init.exit.if.end56_crit_edge

list_del_init.exit.if.end56_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end56

if.end.i.i108:                                    ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #11
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %action, ptr %prev1.i.i, align 4
  %39 = ptrtoint ptr %action to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %37, ptr %action, align 4
  %40 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %pend_le_conns, ptr %prev.i3.i, align 4
  %41 = ptrtoint ptr %pend_le_conns to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %action, ptr %pend_le_conns, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.end.i.i108, %list_del_init.exit.if.end56_crit_edge, %sw.bb.if.end56_crit_edge, %if.then48.if.end56_crit_edge, %if.end43.if.end56_crit_edge
  %42 = ptrtoint ptr %type31 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %type31, align 1
  %44 = ptrtoint ptr %dst_type45 to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %dst_type45, align 2
  %reason60 = getelementptr inbounds %struct.hci_cp_disconnect, ptr %call7, i32 0, i32 1
  %46 = ptrtoint ptr %reason60 to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %reason60, align 1
  tail call void @mgmt_device_disconnected(ptr noundef %hdev, ptr noundef %dst44, i8 noundef zeroext %43, i8 noundef zeroext %45, i8 noundef zeroext %47, i1 noundef zeroext %tobool29) #9
  %48 = ptrtoint ptr %reason60 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %reason60, align 1
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.end56.for.end.i_crit_edge, label %if.end56.for.body.i_crit_edge

if.end56.for.body.i_crit_edge:                    ; preds = %if.end56
  br label %for.body.i

if.end56.for.end.i_crit_edge:                     ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end56.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.end56.for.body.i_crit_edge ]
  %disconn_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 3
  %50 = ptrtoint ptr %disconn_cfm.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %disconn_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %51, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %51(ptr noundef nonnull %call11, i8 noundef zeroext %49) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %52 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end56.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %disconn_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call11, i32 0, i32 73
  %53 = ptrtoint ptr %disconn_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %disconn_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %54, null
  br i1 %tobool6.not.i, label %for.end.i.done_crit_edge, label %if.then7.i

for.end.i.done_crit_edge:                         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %done

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %54(ptr noundef nonnull %call11, i8 noundef zeroext %49) #9
  br label %done

done:                                             ; preds = %if.then7.i, %for.end.i.done_crit_edge, %if.then24, %land.lhs.true20.done_crit_edge, %if.then16.done_crit_edge
  %call63 = tail call i32 @hci_conn_del(ptr noundef nonnull %call11) #9
  br label %unlock

unlock:                                           ; preds = %done, %if.end10.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %unlock, %if.end6.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_add_sco(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_add_sco.__UNIQUE_ID_ddebug575, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_add_sco, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_add_sco.__UNIQUE_ID_ddebug575, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1031) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_add_sco.__UNIQUE_ID_ddebug576, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_add_sco, %if.then23)) #9
          to label %do.end29 [label %if.then23], !srcloc !680

if.then23:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  %name24 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv26 = zext i16 %2 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_add_sco.__UNIQUE_ID_ddebug576, ptr noundef nonnull @.str.151, ptr noundef %name24, i32 noundef %conv26) #9
  br label %do.end29

do.end29:                                         ; preds = %if.then23, %if.end9
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call30 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool31.not = icmp eq ptr %call30, null
  br i1 %tobool31.not, label %do.end29.if.end37_crit_edge, label %if.then32

do.end29.if.end37_crit_edge:                      ; preds = %do.end29
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37

if.then32:                                        ; preds = %do.end29
  %link = getelementptr inbounds %struct.hci_conn, ptr %call30, i32 0, i32 69
  %3 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %link, align 4
  %tobool33.not = icmp eq ptr %4, null
  br i1 %tobool33.not, label %if.then32.if.end37_crit_edge, label %if.then34

if.then32.if.end37_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37

if.then34:                                        ; preds = %if.then32
  %state = getelementptr inbounds %struct.hci_conn, ptr %4, i32 0, i32 12
  %5 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 9, ptr %state, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then34.for.end.i_crit_edge, label %if.then34.for.body.i_crit_edge

if.then34.for.body.i_crit_edge:                   ; preds = %if.then34
  br label %for.body.i

if.then34.for.end.i_crit_edge:                    ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then34.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then34.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %6 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %7(ptr noundef nonnull %4, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %8 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then34.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %4, i32 0, i32 71
  %9 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %10, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %10(ptr noundef nonnull %4, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  %call35 = tail call i32 @hci_conn_del(ptr noundef nonnull %4) #9
  br label %if.end37

if.end37:                                         ; preds = %hci_connect_cfm.exit, %if.then32.if.end37_crit_edge, %do.end29.if.end37_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_auth_requested(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_auth_requested.__UNIQUE_ID_ddebug577, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_auth_requested, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_auth_requested.__UNIQUE_ID_ddebug577, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1041) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.if.end17_crit_edge, label %if.then12

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then12:                                        ; preds = %if.end9
  %state = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 12
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %4)
  %cmp = icmp eq i16 %4, 7
  br i1 %cmp, label %if.then15, label %if.then12.if.end17_crit_edge

if.then12.if.end17_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %if.then12
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then15.for.end.i_crit_edge, label %if.then15.for.body.i_crit_edge

if.then15.for.body.i_crit_edge:                   ; preds = %if.then15
  br label %for.body.i

if.then15.for.end.i_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then15.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then15.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %5 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %6(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %7 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then15.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 71
  %8 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %9, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %9(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call10)
  br label %if.end17

if.end17:                                         ; preds = %hci_connect_cfm.exit, %if.then12.if.end17_crit_edge, %if.end9.if.end17_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_set_conn_encrypt(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_set_conn_encrypt.__UNIQUE_ID_ddebug578, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_set_conn_encrypt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_set_conn_encrypt.__UNIQUE_ID_ddebug578, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1043) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.if.end17_crit_edge, label %if.then12

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then12:                                        ; preds = %if.end9
  %state = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 12
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %4)
  %cmp = icmp eq i16 %4, 7
  br i1 %cmp, label %if.then15, label %if.then12.if.end17_crit_edge

if.then12.if.end17_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %if.then12
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then15.for.end.i_crit_edge, label %if.then15.for.body.i_crit_edge

if.then15.for.body.i_crit_edge:                   ; preds = %if.then15
  br label %for.body.i

if.then15.for.end.i_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then15.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then15.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %5 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %6(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %7 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then15.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 71
  %8 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %9, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %9(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call10)
  br label %if.end17

if.end17:                                         ; preds = %hci_connect_cfm.exit, %if.then12.if.end17_crit_edge, %if.end9.if.end17_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_remote_name_req(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  %auth_cp = alloca %struct.hci_cp_auth_requested, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_remote_name_req.__UNIQUE_ID_ddebug579, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_remote_name_req, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_remote_name_req.__UNIQUE_ID_ddebug579, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1049) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef nonnull %call6)
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %0 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %dev_flags, align 4
  %2 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool13.not = icmp eq i32 %2, 0
  br i1 %tobool13.not, label %if.end9.if.end16_crit_edge, label %if.then14

if.end9.if.end16_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end16

if.then14:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  tail call fastcc void @hci_check_pending_name(ptr noundef %hdev, ptr noundef %call10, ptr noundef nonnull %call6, ptr noundef null, i8 noundef zeroext 0)
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end9.if.end16_crit_edge
  %tobool17.not = icmp eq ptr %call10, null
  br i1 %tobool17.not, label %if.end16.unlock_crit_edge, label %if.end19

if.end16.unlock_crit_edge:                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end19:                                         ; preds = %if.end16
  %state.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 12
  %3 = ptrtoint ptr %state.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %4)
  %cmp.not.i = icmp eq i16 %4, 7
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %if.end19.unlock_crit_edge

if.end19.unlock_crit_edge:                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

lor.lhs.false.i:                                  ; preds = %if.end19
  %out.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 16
  %5 = ptrtoint ptr %out.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %out.i, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i.unlock_crit_edge, label %if.end.i

lor.lhs.false.i.unlock_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end.i:                                         ; preds = %lor.lhs.false.i
  %pending_sec_level.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 25
  %7 = ptrtoint ptr %pending_sec_level.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %pending_sec_level.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %cmp3.i = icmp eq i8 %8, 0
  br i1 %cmp3.i, label %if.end.i.unlock_crit_edge, label %if.end6.i

if.end.i.unlock_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end6.i:                                        ; preds = %if.end.i
  %hdev1.i.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 65
  %9 = ptrtoint ptr %hdev1.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hdev1.i.i, align 4
  %dev_flags.i.i = getelementptr inbounds %struct.hci_dev, ptr %10, i32 0, i32 206
  %11 = ptrtoint ptr %dev_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %dev_flags.i.i, align 4
  %13 = and i32 %12, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i.i, label %if.end6.i.land.lhs.true.i_crit_edge, label %hci_conn_ssp_enabled.exit.i

if.end6.i.land.lhs.true.i_crit_edge:              ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

hci_conn_ssp_enabled.exit.i:                      ; preds = %if.end6.i
  %flags.i.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 47
  %14 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %flags.i.i, align 4
  %16 = and i32 %15, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool3.i.not.i = icmp eq i32 %16, 0
  br i1 %tobool3.i.not.i, label %hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge, label %hci_conn_ssp_enabled.exit.i.if.end23_crit_edge

hci_conn_ssp_enabled.exit.i.if.end23_crit_edge:   ; preds = %hci_conn_ssp_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end23

hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge: ; preds = %hci_conn_ssp_enabled.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %hci_conn_ssp_enabled.exit.i.land.lhs.true.i_crit_edge, %if.end6.i.land.lhs.true.i_crit_edge
  %auth_type.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 23
  %17 = ptrtoint ptr %auth_type.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %auth_type.i, align 1
  %19 = and i8 %18, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool8.not.i = icmp ne i8 %19, 0
  %.off.i = add i8 %8, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %.off.i)
  %switch.i = icmp ult i8 %.off.i, 3
  %or.cond.i = select i1 %tobool8.not.i, i1 true, i1 %switch.i
  br i1 %or.cond.i, label %land.lhs.true.i.if.end23_crit_edge, label %land.lhs.true.i.unlock_crit_edge

land.lhs.true.i.unlock_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

land.lhs.true.i.if.end23_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end23

if.end23:                                         ; preds = %land.lhs.true.i.if.end23_crit_edge, %hci_conn_ssp_enabled.exit.i.if.end23_crit_edge
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 47
  %call24 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.then26, label %if.end23.unlock_crit_edge

if.end23.unlock_crit_edge:                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then26:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %auth_cp) #9
  tail call void @_set_bit(i32 noundef 17, ptr noundef %flags) #9
  %handle = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 11
  %20 = ptrtoint ptr %handle to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %handle, align 2
  %22 = tail call i16 @llvm.bswap.i16(i16 %21)
  %23 = ptrtoint ptr %auth_cp to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %22, ptr %auth_cp, align 2
  %call29 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 1041, i32 noundef 2, ptr noundef nonnull %auth_cp) #9
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %auth_cp) #9
  br label %unlock

unlock:                                           ; preds = %if.then26, %if.end23.unlock_crit_edge, %land.lhs.true.i.unlock_crit_edge, %if.end.i.unlock_crit_edge, %lor.lhs.false.i.unlock_crit_edge, %if.end19.unlock_crit_edge, %if.end16.unlock_crit_edge
  call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %unlock, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_read_remote_features(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_read_remote_features.__UNIQUE_ID_ddebug580, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_read_remote_features, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_read_remote_features.__UNIQUE_ID_ddebug580, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1051) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.if.end17_crit_edge, label %if.then12

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then12:                                        ; preds = %if.end9
  %state = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 12
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %4)
  %cmp = icmp eq i16 %4, 7
  br i1 %cmp, label %if.then15, label %if.then12.if.end17_crit_edge

if.then12.if.end17_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %if.then12
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then15.for.end.i_crit_edge, label %if.then15.for.body.i_crit_edge

if.then15.for.body.i_crit_edge:                   ; preds = %if.then15
  br label %for.body.i

if.then15.for.end.i_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then15.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then15.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %5 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %6(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %7 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then15.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 71
  %8 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %9, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %9(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call10)
  br label %if.end17

if.end17:                                         ; preds = %hci_connect_cfm.exit, %if.then12.if.end17_crit_edge, %if.end9.if.end17_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_read_remote_ext_features(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_read_remote_ext_features.__UNIQUE_ID_ddebug581, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_read_remote_ext_features, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_read_remote_ext_features.__UNIQUE_ID_ddebug581, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1052) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.if.end17_crit_edge, label %if.then12

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then12:                                        ; preds = %if.end9
  %state = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 12
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %4)
  %cmp = icmp eq i16 %4, 7
  br i1 %cmp, label %if.then15, label %if.then12.if.end17_crit_edge

if.then12.if.end17_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %if.then12
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then15.for.end.i_crit_edge, label %if.then15.for.body.i_crit_edge

if.then15.for.body.i_crit_edge:                   ; preds = %if.then15
  br label %for.body.i

if.then15.for.end.i_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then15.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then15.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %5 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %6(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %7 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then15.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 71
  %8 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %9, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %9(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call10)
  br label %if.end17

if.end17:                                         ; preds = %hci_connect_cfm.exit, %if.then12.if.end17_crit_edge, %if.end9.if.end17_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_setup_sync_conn(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_setup_sync_conn.__UNIQUE_ID_ddebug582, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_setup_sync_conn, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_setup_sync_conn.__UNIQUE_ID_ddebug582, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1064) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_setup_sync_conn.__UNIQUE_ID_ddebug583, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_setup_sync_conn, %if.then23)) #9
          to label %do.end29 [label %if.then23], !srcloc !680

if.then23:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  %name24 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv26 = zext i16 %2 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_setup_sync_conn.__UNIQUE_ID_ddebug583, ptr noundef nonnull @.str.151, ptr noundef %name24, i32 noundef %conv26) #9
  br label %do.end29

do.end29:                                         ; preds = %if.then23, %if.end9
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call30 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool31.not = icmp eq ptr %call30, null
  br i1 %tobool31.not, label %do.end29.if.end37_crit_edge, label %if.then32

do.end29.if.end37_crit_edge:                      ; preds = %do.end29
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37

if.then32:                                        ; preds = %do.end29
  %link = getelementptr inbounds %struct.hci_conn, ptr %call30, i32 0, i32 69
  %3 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %link, align 4
  %tobool33.not = icmp eq ptr %4, null
  br i1 %tobool33.not, label %if.then32.if.end37_crit_edge, label %if.then34

if.then32.if.end37_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37

if.then34:                                        ; preds = %if.then32
  %state = getelementptr inbounds %struct.hci_conn, ptr %4, i32 0, i32 12
  %5 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 9, ptr %state, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then34.for.end.i_crit_edge, label %if.then34.for.body.i_crit_edge

if.then34.for.body.i_crit_edge:                   ; preds = %if.then34
  br label %for.body.i

if.then34.for.end.i_crit_edge:                    ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then34.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then34.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %6 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %7(ptr noundef nonnull %4, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %8 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then34.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %4, i32 0, i32 71
  %9 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %10, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %10(ptr noundef nonnull %4, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  %call35 = tail call i32 @hci_conn_del(ptr noundef nonnull %4) #9
  br label %if.end37

if.end37:                                         ; preds = %hci_connect_cfm.exit, %if.then32.if.end37_crit_edge, %do.end29.if.end37_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_enhanced_setup_sync_conn(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_enhanced_setup_sync_conn.__UNIQUE_ID_ddebug584, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_enhanced_setup_sync_conn, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_enhanced_setup_sync_conn.__UNIQUE_ID_ddebug584, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 1085) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_enhanced_setup_sync_conn.__UNIQUE_ID_ddebug585, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_enhanced_setup_sync_conn, %if.then23)) #9
          to label %do.end29 [label %if.then23], !srcloc !680

if.then23:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  %name24 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv26 = zext i16 %2 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_enhanced_setup_sync_conn.__UNIQUE_ID_ddebug585, ptr noundef nonnull @.str.151, ptr noundef %name24, i32 noundef %conv26) #9
  br label %do.end29

do.end29:                                         ; preds = %if.then23, %if.end9
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call30 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool31.not = icmp eq ptr %call30, null
  br i1 %tobool31.not, label %do.end29.if.end37_crit_edge, label %if.then32

do.end29.if.end37_crit_edge:                      ; preds = %do.end29
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37

if.then32:                                        ; preds = %do.end29
  %link = getelementptr inbounds %struct.hci_conn, ptr %call30, i32 0, i32 69
  %3 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %link, align 4
  %tobool33.not = icmp eq ptr %4, null
  br i1 %tobool33.not, label %if.then32.if.end37_crit_edge, label %if.then34

if.then32.if.end37_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end37

if.then34:                                        ; preds = %if.then32
  %state = getelementptr inbounds %struct.hci_conn, ptr %4, i32 0, i32 12
  %5 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 9, ptr %state, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then34.for.end.i_crit_edge, label %if.then34.for.body.i_crit_edge

if.then34.for.body.i_crit_edge:                   ; preds = %if.then34
  br label %for.body.i

if.then34.for.end.i_crit_edge:                    ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then34.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then34.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %6 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %7(ptr noundef nonnull %4, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %8 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then34.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %4, i32 0, i32 71
  %9 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %10, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %10(ptr noundef nonnull %4, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  %call35 = tail call i32 @hci_conn_del(ptr noundef nonnull %4) #9
  br label %if.end37

if.end37:                                         ; preds = %hci_connect_cfm.exit, %if.then32.if.end37_crit_edge, %do.end29.if.end37_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_sniff_mode(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_sniff_mode.__UNIQUE_ID_ddebug586, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_sniff_mode, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_sniff_mode.__UNIQUE_ID_ddebug586, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 2051) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.if.end18_crit_edge, label %if.then12

if.end9.if.end18_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then12:                                        ; preds = %if.end9
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %flags) #9
  %call14 = tail call i32 @_test_and_clear_bit(i32 noundef 5, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then12.if.end18_crit_edge, label %if.then16

if.then12.if.end18_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then16:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @hci_sco_setup(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.then12.if.end18_crit_edge, %if.end9.if.end18_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_exit_sniff_mode(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_exit_sniff_mode.__UNIQUE_ID_ddebug587, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_exit_sniff_mode, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_exit_sniff_mode.__UNIQUE_ID_ddebug587, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 2052) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.if.end18_crit_edge, label %if.then12

if.end9.if.end18_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then12:                                        ; preds = %if.end9
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %flags) #9
  %call14 = tail call i32 @_test_and_clear_bit(i32 noundef 5, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then12.if.end18_crit_edge, label %if.then16

if.then12.if.end18_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then16:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @hci_sco_setup(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.then12.if.end18_crit_edge, %if.end9.if.end18_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_switch_role(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_switch_role.__UNIQUE_ID_ddebug593, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_switch_role, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_switch_role.__UNIQUE_ID_ddebug593, ptr noundef nonnull @.str.100, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 2059) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_ba(ptr noundef %hdev, i8 noundef zeroext 1, ptr noundef nonnull %call6)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.if.end13_crit_edge, label %if.then12

if.end9.if.end13_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end13

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 47
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %flags) #9
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end9.if.end13_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_le_create_conn(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_le_create_conn.__UNIQUE_ID_ddebug589, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_le_create_conn, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_le_create_conn.__UNIQUE_ID_ddebug589, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %if.end5, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8205) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %peer_addr = getelementptr inbounds %struct.hci_cp_le_create_conn, ptr %call6, i32 0, i32 4
  %peer_addr_type = getelementptr inbounds %struct.hci_cp_le_create_conn, ptr %call6, i32 0, i32 3
  %0 = ptrtoint ptr %peer_addr_type to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %peer_addr_type, align 1
  %own_address_type = getelementptr inbounds %struct.hci_cp_le_create_conn, ptr %call6, i32 0, i32 5
  %2 = ptrtoint ptr %own_address_type to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %own_address_type, align 1
  %filter_policy = getelementptr inbounds %struct.hci_cp_le_create_conn, ptr %call6, i32 0, i32 2
  %4 = ptrtoint ptr %filter_policy to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %filter_policy, align 1
  tail call fastcc void @cs_le_create_conn(ptr noundef %hdev, ptr noundef %peer_addr, i8 noundef zeroext %1, i8 noundef zeroext %3, i8 noundef zeroext %5)
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_le_read_remote_features(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_le_read_remote_features.__UNIQUE_ID_ddebug591, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_le_read_remote_features, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_le_read_remote_features.__UNIQUE_ID_ddebug591, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8214) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.if.end17_crit_edge, label %if.then12

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then12:                                        ; preds = %if.end9
  %state = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 12
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %4)
  %cmp = icmp eq i16 %4, 7
  br i1 %cmp, label %if.then15, label %if.then12.if.end17_crit_edge

if.then12.if.end17_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end17

if.then15:                                        ; preds = %if.then12
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.then15.for.end.i_crit_edge, label %if.then15.for.body.i_crit_edge

if.then15.for.body.i_crit_edge:                   ; preds = %if.then15
  br label %for.body.i

if.then15.for.end.i_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then15.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.then15.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %5 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %6(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %7 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then15.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 71
  %8 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %9, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %9(ptr noundef nonnull %call10, i8 noundef zeroext %status) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call10)
  br label %if.end17

if.end17:                                         ; preds = %hci_connect_cfm.exit, %if.then12.if.end17_crit_edge, %if.end9.if.end17_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_le_start_enc(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_le_start_enc.__UNIQUE_ID_ddebug592, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_le_start_enc, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_le_start_enc.__UNIQUE_ID_ddebug592, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %do.end.cleanup_crit_edge, label %if.end5

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8217) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.unlock_crit_edge, label %if.end9

if.end5.unlock_crit_edge:                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end9:                                          ; preds = %if.end5
  %0 = ptrtoint ptr %call6 to i32
  call void @__asan_loadN_noabort(i32 %0, i32 2)
  %1 = load i16, ptr %call6, align 1
  %2 = tail call i16 @llvm.bswap.i16(i16 %1)
  %call10 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %2)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.unlock_crit_edge, label %if.end13

if.end9.unlock_crit_edge:                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end13:                                         ; preds = %if.end9
  %state = getelementptr inbounds %struct.hci_conn, ptr %call10, i32 0, i32 12
  %3 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %4)
  %cmp.not = icmp eq i16 %4, 1
  br i1 %cmp.not, label %if.end17, label %if.end13.unlock_crit_edge

if.end13.unlock_crit_edge:                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end17:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #11
  %call18 = tail call i32 @hci_disconnect(ptr noundef nonnull %call10, i8 noundef zeroext 5) #9
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call10)
  br label %unlock

unlock:                                           ; preds = %if.end17, %if.end13.unlock_crit_edge, %if.end9.unlock_crit_edge, %if.end5.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %unlock, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_cs_le_ext_create_conn(ptr noundef %hdev, i8 noundef zeroext %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_cs_le_ext_create_conn.__UNIQUE_ID_ddebug590, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_cs_le_ext_create_conn, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %conv = zext i8 %status to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_cs_le_ext_create_conn.__UNIQUE_ID_ddebug590, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool3.not = icmp eq i8 %status, 0
  br i1 %tobool3.not, label %if.end5, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %do.end
  %call6 = tail call ptr @hci_sent_cmd_data(ptr noundef %hdev, i16 noundef zeroext 8259) #9
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %peer_addr = getelementptr inbounds %struct.hci_cp_le_ext_create_conn, ptr %call6, i32 0, i32 3
  %peer_addr_type = getelementptr inbounds %struct.hci_cp_le_ext_create_conn, ptr %call6, i32 0, i32 2
  %0 = ptrtoint ptr %peer_addr_type to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %peer_addr_type, align 1
  %own_addr_type = getelementptr inbounds %struct.hci_cp_le_ext_create_conn, ptr %call6, i32 0, i32 1
  %2 = ptrtoint ptr %own_addr_type to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %own_addr_type, align 1
  %4 = ptrtoint ptr %call6 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %call6, align 1
  tail call fastcc void @cs_le_create_conn(ptr noundef %hdev, ptr noundef %peer_addr, i8 noundef zeroext %1, i8 noundef zeroext %3, i8 noundef zeroext %5)
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.end5.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cs_le_create_conn(ptr noundef %hdev, ptr nocapture noundef readonly %peer_addr, i8 noundef zeroext %peer_addr_type, i8 noundef zeroext %own_address_type, i8 noundef zeroext %filter_policy) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %conn_hash.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 183
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #9
  %and.i.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !684
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #9
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i.i, label %entry.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

entry.rcu_read_lock.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 696, ptr noundef nonnull @.str.17) #9
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %entry.rcu_read_lock.exit.i_crit_edge
  %call.i = tail call i32 @rcu_read_lock_any_held() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end.i_crit_edge

rcu_read_lock.exit.i.do.end.i_crit_edge:          ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.do.end.i_crit_edge, label %land.lhs.true3.i

land.lhs.true.i.do.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %.b40.i = load i1, ptr @hci_conn_hash_lookup_le.__warned, align 1
  br i1 %.b40.i, label %land.lhs.true3.i.do.end.i_crit_edge, label %if.then.i

land.lhs.true3.i.do.end.i_crit_edge:              ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.end.i

if.then.i:                                        ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @hci_conn_hash_lookup_le.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 1054, ptr noundef nonnull @.str.15) #9
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %land.lhs.true3.i.do.end.i_crit_edge, %land.lhs.true.i.do.end.i_crit_edge, %rcu_read_lock.exit.i.do.end.i_crit_edge
  %4 = ptrtoint ptr %conn_hash.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %c.063.i = load volatile ptr, ptr %conn_hash.i, align 4
  %cmp.not64.i = icmp eq ptr %c.063.i, %conn_hash.i
  br i1 %cmp.not64.i, label %do.end.i.for.end.i_crit_edge, label %do.end.i.for.body.i_crit_edge

do.end.i.for.body.i_crit_edge:                    ; preds = %do.end.i
  br label %for.body.i

do.end.i.for.end.i_crit_edge:                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end.i.for.body.i_crit_edge
  %c.065.i = phi ptr [ %c.0.i, %for.inc.i.for.body.i_crit_edge ], [ %c.063.i, %do.end.i.for.body.i_crit_edge ]
  %type.i = getelementptr inbounds %struct.hci_conn, ptr %c.065.i, i32 0, i32 14
  %5 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %type.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %6)
  %cmp11.not.i = icmp eq i8 %6, -128
  br i1 %cmp11.not.i, label %if.end14.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.end14.i:                                       ; preds = %for.body.i
  %dst_type.i = getelementptr inbounds %struct.hci_conn, ptr %c.065.i, i32 0, i32 3
  %7 = ptrtoint ptr %dst_type.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %dst_type.i, align 2
  call void @__sanitizer_cov_trace_cmp1(i8 %8, i8 %peer_addr_type)
  %cmp17.i = icmp eq i8 %8, %peer_addr_type
  br i1 %cmp17.i, label %land.lhs.true19.i, label %if.end14.i.for.inc.i_crit_edge

if.end14.i.for.inc.i_crit_edge:                   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

land.lhs.true19.i:                                ; preds = %if.end14.i
  %dst.i = getelementptr inbounds %struct.hci_conn, ptr %c.065.i, i32 0, i32 2
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(6) %dst.i, ptr noundef dereferenceable(6) %peer_addr, i32 6) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %tobool21.not.i = icmp eq i32 %bcmp.i, 0
  br i1 %tobool21.not.i, label %if.then22.i, label %land.lhs.true19.i.for.inc.i_crit_edge

land.lhs.true19.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true19.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then22.i:                                      ; preds = %land.lhs.true19.i
  %call.i42.i = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i42.i, label %if.then22.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i45.i

if.then22.i.rcu_read_unlock.exit.i_crit_edge:     ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit.i

land.lhs.true.i45.i:                              ; preds = %if.then22.i
  %call1.i43.i = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i43.i)
  %tobool.not.i44.i = icmp eq i32 %call1.i43.i, 0
  br i1 %tobool.not.i44.i, label %land.lhs.true.i45.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i47.i

land.lhs.true.i45.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i45.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i47.i:                             ; preds = %land.lhs.true.i45.i
  %.b4.i46.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i46.i, label %land.lhs.true2.i47.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i48.i

land.lhs.true2.i47.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i47.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit.i

if.then.i48.i:                                    ; preds = %land.lhs.true2.i47.i
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 724, ptr noundef nonnull @.str.18) #9
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i48.i, %land.lhs.true2.i47.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i45.i.rcu_read_unlock.exit.i_crit_edge, %if.then22.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !685
  br label %hci_conn_hash_lookup_le.exit

for.inc.i:                                        ; preds = %land.lhs.true19.i.for.inc.i_crit_edge, %if.end14.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %9 = ptrtoint ptr %c.065.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %c.0.i = load volatile ptr, ptr %c.065.i, align 4
  %cmp.not.i = icmp eq ptr %c.0.i, %conn_hash.i
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %do.end.i.for.end.i_crit_edge
  %call.i51.i = tail call zeroext i1 @rcu_is_watching() #9
  br i1 %call.i51.i, label %for.end.i.rcu_read_unlock.exit61.i_crit_edge, label %land.lhs.true.i54.i

for.end.i.rcu_read_unlock.exit61.i_crit_edge:     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit61.i

land.lhs.true.i54.i:                              ; preds = %for.end.i
  %call1.i52.i = tail call i32 @debug_lockdep_rcu_enabled() #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i52.i)
  %tobool.not.i53.i = icmp eq i32 %call1.i52.i, 0
  br i1 %tobool.not.i53.i, label %land.lhs.true.i54.i.rcu_read_unlock.exit61.i_crit_edge, label %land.lhs.true2.i56.i

land.lhs.true.i54.i.rcu_read_unlock.exit61.i_crit_edge: ; preds = %land.lhs.true.i54.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit61.i

land.lhs.true2.i56.i:                             ; preds = %land.lhs.true.i54.i
  %.b4.i55.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i55.i, label %land.lhs.true2.i56.i.rcu_read_unlock.exit61.i_crit_edge, label %if.then.i57.i

land.lhs.true2.i56.i.rcu_read_unlock.exit61.i_crit_edge: ; preds = %land.lhs.true2.i56.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %rcu_read_unlock.exit61.i

if.then.i57.i:                                    ; preds = %land.lhs.true2.i56.i
  call void @__sanitizer_cov_trace_pc() #11
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 724, ptr noundef nonnull @.str.18) #9
  br label %rcu_read_unlock.exit61.i

rcu_read_unlock.exit61.i:                         ; preds = %if.then.i57.i, %land.lhs.true2.i56.i.rcu_read_unlock.exit61.i_crit_edge, %land.lhs.true.i54.i.rcu_read_unlock.exit61.i_crit_edge, %for.end.i.rcu_read_unlock.exit61.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #9, !srcloc !685
  br label %hci_conn_hash_lookup_le.exit

hci_conn_hash_lookup_le.exit:                     ; preds = %rcu_read_unlock.exit61.i, %rcu_read_unlock.exit.i
  %retval.0.i = phi ptr [ %c.065.i, %rcu_read_unlock.exit.i ], [ null, %rcu_read_unlock.exit61.i ]
  %10 = tail call i32 @llvm.read_register.i32(metadata !669) #9
  %and.i.i.i.i.i58.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i58.i to ptr
  %preempt_count.i.i.i.i59.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i59.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i59.i, align 4
  %sub.i.i.i60.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i60.i, ptr %preempt_count.i.i.i.i59.i, align 4
  tail call void @rcu_read_unlock_strict() #9
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #9
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %hci_conn_hash_lookup_le.exit.cleanup_crit_edge, label %if.end

hci_conn_hash_lookup_le.exit.cleanup_crit_edge:   ; preds = %hci_conn_hash_lookup_le.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %hci_conn_hash_lookup_le.exit
  %14 = zext i8 %own_address_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.272)
  switch i8 %own_address_type, label %ev_bdaddr_type.exit [
    i8 2, label %ev_bdaddr_type.exit.thread34
    i8 3, label %ev_bdaddr_type.exit.thread
  ]

ev_bdaddr_type.exit.thread34:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %init_addr_type36 = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 7
  %15 = ptrtoint ptr %init_addr_type36 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 0, ptr %init_addr_type36, align 8
  br label %if.else

ev_bdaddr_type.exit.thread:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %init_addr_type32 = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 7
  %16 = ptrtoint ptr %init_addr_type32 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %init_addr_type32, align 8
  br label %if.then3

ev_bdaddr_type.exit:                              ; preds = %if.end
  %init_addr_type = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 7
  %17 = ptrtoint ptr %init_addr_type to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %own_address_type, ptr %init_addr_type, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %own_address_type)
  %cmp = icmp eq i8 %own_address_type, 1
  br i1 %cmp, label %ev_bdaddr_type.exit.if.then3_crit_edge, label %ev_bdaddr_type.exit.if.else_crit_edge

ev_bdaddr_type.exit.if.else_crit_edge:            ; preds = %ev_bdaddr_type.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

ev_bdaddr_type.exit.if.then3_crit_edge:           ; preds = %ev_bdaddr_type.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then3

if.then3:                                         ; preds = %ev_bdaddr_type.exit.if.then3_crit_edge, %ev_bdaddr_type.exit.thread
  %init_addr = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 6
  %random_addr = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 10
  %18 = call ptr @memcpy(ptr %init_addr, ptr %random_addr, i32 6)
  br label %if.end5

if.else:                                          ; preds = %ev_bdaddr_type.exit.if.else_crit_edge, %ev_bdaddr_type.exit.thread34
  %init_addr4 = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 6
  %bdaddr = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 7
  %19 = call ptr @memcpy(ptr %init_addr4, ptr %bdaddr, i32 6)
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  %resp_addr_type = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 9
  %20 = ptrtoint ptr %resp_addr_type to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %peer_addr_type, ptr %resp_addr_type, align 1
  %resp_addr = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 8
  %21 = call ptr @memcpy(ptr %resp_addr, ptr %peer_addr, i32 6)
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %filter_policy)
  %cmp7 = icmp eq i8 %filter_policy, 0
  br i1 %cmp7, label %if.then9, label %if.end5.cleanup_crit_edge

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  %hdev10 = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 65
  %22 = ptrtoint ptr %hdev10 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hdev10, align 4
  %workqueue = getelementptr inbounds %struct.hci_dev, ptr %23, i32 0, i32 138
  %24 = ptrtoint ptr %workqueue to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %workqueue, align 4
  %le_conn_timeout = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 61
  %conn_timeout = getelementptr inbounds %struct.hci_conn, ptr %retval.0.i, i32 0, i32 32
  %26 = ptrtoint ptr %conn_timeout to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %conn_timeout, align 4
  %conv11 = zext i16 %27 to i32
  %call.i30 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %25, ptr noundef %le_conn_timeout, i32 noundef %conv11) #9
  br label %cleanup

cleanup:                                          ; preds = %if.then9, %if.end5.cleanup_crit_edge, %hci_conn_hash_lookup_le.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_pin_code_request(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_add_link_key(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_new_link_key(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @hci_setup_sync(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_find_remote_oob_data(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mgmt_user_confirm_request(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i32 noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mgmt_user_passkey_request(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mgmt_user_passkey_notify(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i32 noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_conn_complete_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_le_conn_complete_evt.__UNIQUE_ID_ddebug648, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_le_conn_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_le_conn_complete_evt.__UNIQUE_ID_ddebug648, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  %bdaddr = getelementptr inbounds %struct.hci_ev_le_conn_complete, ptr %data, i32 0, i32 4
  %bdaddr_type = getelementptr inbounds %struct.hci_ev_le_conn_complete, ptr %data, i32 0, i32 3
  %4 = ptrtoint ptr %bdaddr_type to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %bdaddr_type, align 1
  %role = getelementptr inbounds %struct.hci_ev_le_conn_complete, ptr %data, i32 0, i32 2
  %6 = ptrtoint ptr %role to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %role, align 1
  %handle = getelementptr inbounds %struct.hci_ev_le_conn_complete, ptr %data, i32 0, i32 1
  %8 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %handle, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9)
  %interval = getelementptr inbounds %struct.hci_ev_le_conn_complete, ptr %data, i32 0, i32 5
  %11 = ptrtoint ptr %interval to i32
  call void @__asan_loadN_noabort(i32 %11, i32 2)
  %12 = load i16, ptr %interval, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12)
  %latency = getelementptr inbounds %struct.hci_ev_le_conn_complete, ptr %data, i32 0, i32 6
  %14 = ptrtoint ptr %latency to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %latency, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15)
  %supervision_timeout = getelementptr inbounds %struct.hci_ev_le_conn_complete, ptr %data, i32 0, i32 7
  %17 = ptrtoint ptr %supervision_timeout to i32
  call void @__asan_loadN_noabort(i32 %17, i32 2)
  %18 = load i16, ptr %supervision_timeout, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18)
  tail call fastcc void @le_conn_complete_evt(ptr noundef %hdev, i8 noundef zeroext %3, ptr noundef %bdaddr, i8 noundef zeroext %5, ptr noundef null, i8 noundef zeroext %7, i16 noundef zeroext %10, i16 noundef zeroext %13, i16 noundef zeroext %16, i16 noundef zeroext %19)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_adv_report_evt(ptr noundef %hdev, ptr nocapture noundef %data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup22_crit_edge, label %if.end

entry.cleanup22_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup22

if.end:                                           ; preds = %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  %dec48 = add i8 %3, -1
  store i8 %dec48, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool2.not49 = icmp eq i8 %3, 0
  br i1 %tobool2.not49, label %if.end.while.end_crit_edge, label %while.body.lr.ph

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %call.i = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef 9) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %while.body.while.end.sink.split_crit_edge, label %if.end5

while.body.while.end.sink.split_crit_edge:        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end.sink.split

if.end5:                                          ; preds = %while.body
  %length = getelementptr inbounds %struct.hci_ev_le_advertising_info, ptr %call.i, i32 0, i32 3
  %4 = ptrtoint ptr %length to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %length, align 1
  %conv = zext i8 %5 to i32
  %add = add nuw nsw i32 %conv, 1
  %call.i41 = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %add) #9
  %tobool.not.i42 = icmp eq ptr %call.i41, null
  br i1 %tobool.not.i42, label %if.end5.while.end.sink.split_crit_edge, label %if.end9

if.end5.while.end.sink.split_crit_edge:           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end.sink.split

if.end9:                                          ; preds = %if.end5
  %6 = ptrtoint ptr %length to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %length, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 32, i8 %7)
  %cmp = icmp ult i8 %7, 32
  br i1 %cmp, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  %conv11 = zext i8 %7 to i32
  %data14 = getelementptr inbounds %struct.hci_ev_le_advertising_info, ptr %call.i, i32 0, i32 4
  %arrayidx = getelementptr %struct.hci_ev_le_advertising_info, ptr %call.i, i32 0, i32 4, i32 %conv11
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx, align 1
  %10 = ptrtoint ptr %call.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %call.i, align 1
  %bdaddr = getelementptr inbounds %struct.hci_ev_le_advertising_info, ptr %call.i, i32 0, i32 2
  %bdaddr_type = getelementptr inbounds %struct.hci_ev_le_advertising_info, ptr %call.i, i32 0, i32 1
  %12 = ptrtoint ptr %bdaddr_type to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %bdaddr_type, align 1
  tail call fastcc void @process_adv_report(ptr noundef %hdev, i8 noundef zeroext %11, ptr noundef %bdaddr, i8 noundef zeroext %13, ptr noundef null, i8 noundef zeroext 0, i8 noundef signext %9, ptr noundef %data14, i8 noundef zeroext %7, i1 noundef zeroext false)
  br label %cleanup

if.else:                                          ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #11
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.214, ptr noundef %name) #9
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then13
  %14 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %data, align 1
  %dec = add i8 %15, -1
  store i8 %dec, ptr %data, align 1
  %tobool2.not = icmp eq i8 %15, 0
  br i1 %tobool2.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end

while.end.sink.split:                             ; preds = %if.end5.while.end.sink.split_crit_edge, %while.body.while.end.sink.split_crit_edge
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.228, ptr noundef %name, i32 noundef 2) #9
  br label %while.end

while.end:                                        ; preds = %while.end.sink.split, %cleanup.while.end_crit_edge, %if.end.while.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup22

cleanup22:                                        ; preds = %while.end, %entry.cleanup22_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_conn_update_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_le_conn_update_complete_evt.__UNIQUE_ID_ddebug651, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_le_conn_update_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_le_conn_update_complete_evt.__UNIQUE_ID_ddebug651, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end6, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end6:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_le_conn_update_complete, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %call7 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %if.end6.if.end10_crit_edge, label %if.then9

if.end6.if.end10_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end10

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %interval = getelementptr inbounds %struct.hci_ev_le_conn_update_complete, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %interval to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %interval, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8)
  %le_conn_interval = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 37
  %10 = ptrtoint ptr %le_conn_interval to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %le_conn_interval, align 2
  %latency = getelementptr inbounds %struct.hci_ev_le_conn_update_complete, ptr %data, i32 0, i32 3
  %11 = ptrtoint ptr %latency to i32
  call void @__asan_loadN_noabort(i32 %11, i32 2)
  %12 = load i16, ptr %latency, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12)
  %le_conn_latency = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 38
  %14 = ptrtoint ptr %le_conn_latency to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %le_conn_latency, align 8
  %supervision_timeout = getelementptr inbounds %struct.hci_ev_le_conn_update_complete, ptr %data, i32 0, i32 4
  %15 = ptrtoint ptr %supervision_timeout to i32
  call void @__asan_loadN_noabort(i32 %15, i32 2)
  %16 = load i16, ptr %supervision_timeout, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16)
  %le_supv_timeout = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 39
  %18 = ptrtoint ptr %le_supv_timeout to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %17, ptr %le_supv_timeout, align 2
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end6.if.end10_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_remote_feat_complete_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_le_remote_feat_complete_evt.__UNIQUE_ID_ddebug653, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_le_remote_feat_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_le_remote_feat_complete_evt.__UNIQUE_ID_ddebug653, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_le_remote_feat_complete, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %handle, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %call3 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %4)
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %do.end.if.end31_crit_edge, label %if.then5

do.end.if.end31_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end31

if.then5:                                         ; preds = %do.end
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool7.not = icmp eq i8 %6, 0
  br i1 %tobool7.not, label %if.then8, label %if.then5.if.end12_crit_edge

if.then5.if.end12_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end12

if.then8:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #11
  %features = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 19
  %features10 = getelementptr inbounds %struct.hci_ev_le_remote_feat_complete, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %features10 to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %8 = load i64, ptr %features10, align 1
  %9 = ptrtoint ptr %features to i32
  call void @__asan_storeN_noabort(i32 %9, i32 8)
  store i64 %8, ptr %features, align 2
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %if.then5.if.end12_crit_edge
  %state = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 12
  %10 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 7, i16 %11)
  %cmp = icmp eq i16 %11, 7
  br i1 %cmp, label %if.then15, label %if.end12.if.end31_crit_edge

if.end12.if.end31_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end31

if.then15:                                        ; preds = %if.end12
  %out = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 16
  %12 = ptrtoint ptr %out to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %out, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool17.not = icmp eq i8 %13, 0
  br i1 %tobool17.not, label %land.lhs.true, label %if.then15.if.else_crit_edge

if.then15.if.else_crit_edge:                      ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

land.lhs.true:                                    ; preds = %if.then15
  %14 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 26, i8 %15)
  %cmp20 = icmp eq i8 %15, 26
  br i1 %cmp20, label %land.lhs.true22, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

land.lhs.true22:                                  ; preds = %land.lhs.true
  %le_features = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 22
  %16 = ptrtoint ptr %le_features to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %le_features, align 2
  %18 = and i8 %17, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool25.not = icmp eq i8 %18, 0
  br i1 %tobool25.not, label %land.lhs.true22.if.else_crit_edge, label %land.lhs.true22.if.end28_crit_edge

land.lhs.true22.if.end28_crit_edge:               ; preds = %land.lhs.true22
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end28

land.lhs.true22.if.else_crit_edge:                ; preds = %land.lhs.true22
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else

if.else:                                          ; preds = %land.lhs.true22.if.else_crit_edge, %land.lhs.true.if.else_crit_edge, %if.then15.if.else_crit_edge
  %19 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %data, align 1
  br label %if.end28

if.end28:                                         ; preds = %if.else, %land.lhs.true22.if.end28_crit_edge
  %status16.0 = phi i8 [ %20, %if.else ], [ 0, %land.lhs.true22.if.end28_crit_edge ]
  %21 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 1, ptr %state, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.end28.for.end.i_crit_edge, label %if.end28.for.body.i_crit_edge

if.end28.for.body.i_crit_edge:                    ; preds = %if.end28
  br label %for.body.i

if.end28.for.end.i_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end28.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.end28.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %22 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i = icmp eq ptr %23, null
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %23(ptr noundef nonnull %call3, i8 noundef zeroext %status16.0) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %24 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end28.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %call3, i32 0, i32 71
  %25 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i = icmp eq ptr %26, null
  br i1 %tobool6.not.i, label %for.end.i.hci_connect_cfm.exit_crit_edge, label %if.then7.i

for.end.i.hci_connect_cfm.exit_crit_edge:         ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_connect_cfm.exit

if.then7.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %26(ptr noundef nonnull %call3, i8 noundef zeroext %status16.0) #9
  br label %hci_connect_cfm.exit

hci_connect_cfm.exit:                             ; preds = %if.then7.i, %for.end.i.hci_connect_cfm.exit_crit_edge
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %call3)
  br label %if.end31

if.end31:                                         ; preds = %hci_connect_cfm.exit, %if.end12.if.end31_crit_edge, %do.end.if.end31_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_ltk_request_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp = alloca %struct.hci_cp_le_ltk_reply, align 2
  %neg = alloca %struct.hci_cp_le_ltk_neg_reply, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 18, ptr nonnull %cp) #9
  %0 = getelementptr inbounds %struct.hci_cp_le_ltk_reply, ptr %cp, i32 0, i32 1
  %1 = call ptr @memset(ptr %cp, i32 255, i32 18)
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %neg) #9
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_le_ltk_request_evt.__UNIQUE_ID_ddebug654, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_le_ltk_request_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %2 = ptrtoint ptr %data to i32
  call void @__asan_loadN_noabort(i32 %2, i32 2)
  %3 = load i16, ptr %data, align 1
  %4 = tail call i16 @llvm.bswap.i16(i16 %3)
  %conv = zext i16 %4 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_le_ltk_request_evt.__UNIQUE_ID_ddebug654, ptr noundef nonnull @.str.151, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %5 = ptrtoint ptr %data to i32
  call void @__asan_loadN_noabort(i32 %5, i32 2)
  %6 = load i16, ptr %data, align 1
  %7 = tail call i16 @llvm.bswap.i16(i16 %6)
  %call4 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %7)
  %cmp = icmp eq ptr %call4, null
  br i1 %cmp, label %do.end.not_found_crit_edge, label %if.end7

do.end.not_found_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %not_found

if.end7:                                          ; preds = %do.end
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call4, i32 0, i32 2
  %dst_type = getelementptr inbounds %struct.hci_conn, ptr %call4, i32 0, i32 3
  %8 = ptrtoint ptr %dst_type to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %dst_type, align 2
  %role = getelementptr inbounds %struct.hci_conn, ptr %call4, i32 0, i32 15
  %10 = ptrtoint ptr %role to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %role, align 8
  %call8 = tail call ptr @hci_find_ltk(ptr noundef %hdev, ptr noundef %dst, i8 noundef zeroext %9, i8 noundef zeroext %11) #9
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.not_found_crit_edge, label %if.end11

if.end7.not_found_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #11
  br label %not_found

if.end11:                                         ; preds = %if.end7
  %type.i = getelementptr inbounds %struct.smp_ltk, ptr %call8, i32 0, i32 5
  %12 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %type.i, align 8
  %.off.i = add i8 %13, -3
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %.off.i)
  %switch.i = icmp ult i8 %.off.i, 2
  %ediv = getelementptr inbounds %struct.hci_ev_le_ltk_req, ptr %data, i32 0, i32 2
  %14 = ptrtoint ptr %ediv to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %ediv, align 1
  br i1 %switch.i, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool15.not = icmp eq i16 %15, 0
  br i1 %tobool15.not, label %lor.lhs.false, label %if.then13.not_found_crit_edge

if.then13.not_found_crit_edge:                    ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #11
  br label %not_found

lor.lhs.false:                                    ; preds = %if.then13
  %rand = getelementptr inbounds %struct.hci_ev_le_ltk_req, ptr %data, i32 0, i32 1
  %16 = ptrtoint ptr %rand to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %rand, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %17)
  %tobool16.not = icmp eq i64 %17, 0
  br i1 %tobool16.not, label %lor.lhs.false.if.end32_crit_edge, label %lor.lhs.false.not_found_crit_edge

lor.lhs.false.not_found_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %not_found

lor.lhs.false.if.end32_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end32

if.else:                                          ; preds = %if.end11
  %ediv21 = getelementptr inbounds %struct.smp_ltk, ptr %call8, i32 0, i32 7
  %18 = ptrtoint ptr %ediv21 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %ediv21, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %19)
  %cmp23.not = icmp eq i16 %15, %19
  br i1 %cmp23.not, label %lor.lhs.false25, label %if.else.not_found_crit_edge

if.else.not_found_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #11
  br label %not_found

lor.lhs.false25:                                  ; preds = %if.else
  %rand26 = getelementptr inbounds %struct.hci_ev_le_ltk_req, ptr %data, i32 0, i32 1
  %20 = ptrtoint ptr %rand26 to i32
  call void @__asan_loadN_noabort(i32 %20, i32 8)
  %21 = load i64, ptr %rand26, align 1
  %rand27 = getelementptr inbounds %struct.smp_ltk, ptr %call8, i32 0, i32 8
  %22 = ptrtoint ptr %rand27 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %rand27, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %21, i64 %23)
  %cmp28.not = icmp eq i64 %21, %23
  br i1 %cmp28.not, label %lor.lhs.false25.if.end32_crit_edge, label %lor.lhs.false25.not_found_crit_edge

lor.lhs.false25.not_found_crit_edge:              ; preds = %lor.lhs.false25
  call void @__sanitizer_cov_trace_pc() #11
  br label %not_found

lor.lhs.false25.if.end32_crit_edge:               ; preds = %lor.lhs.false25
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end32

if.end32:                                         ; preds = %lor.lhs.false25.if.end32_crit_edge, %lor.lhs.false.if.end32_crit_edge
  %val = getelementptr inbounds %struct.smp_ltk, ptr %call8, i32 0, i32 9
  %enc_size = getelementptr inbounds %struct.smp_ltk, ptr %call8, i32 0, i32 6
  %24 = ptrtoint ptr %enc_size to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %enc_size, align 1
  %conv36 = zext i8 %25 to i32
  %26 = call ptr @memcpy(ptr %0, ptr %val, i32 %conv36)
  %27 = load i8, ptr %enc_size, align 1
  %conv40 = zext i8 %27 to i32
  %add.ptr = getelementptr i8, ptr %0, i32 %conv40
  %sub = sub nsw i32 16, %conv40
  %28 = call ptr @memset(ptr %add.ptr, i32 0, i32 %sub)
  %handle43 = getelementptr inbounds %struct.hci_conn, ptr %call4, i32 0, i32 11
  %29 = ptrtoint ptr %handle43 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %handle43, align 2
  %31 = tail call i16 @llvm.bswap.i16(i16 %30)
  %32 = ptrtoint ptr %cp to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %31, ptr %cp, align 2
  %authenticated.i = getelementptr inbounds %struct.smp_ltk, ptr %call8, i32 0, i32 4
  %33 = ptrtoint ptr %authenticated.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %authenticated.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.i = icmp eq i8 %34, 0
  br i1 %tobool.not.i, label %if.end32.smp_ltk_sec_level.exit_crit_edge, label %if.then.i

if.end32.smp_ltk_sec_level.exit_crit_edge:        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #11
  br label %smp_ltk_sec_level.exit

if.then.i:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #11
  %35 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %type.i, align 8
  %.off.i.i = add i8 %36, -3
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %.off.i.i)
  %switch.i.i = icmp ult i8 %.off.i.i, 2
  %..i = select i1 %switch.i.i, i8 4, i8 3
  br label %smp_ltk_sec_level.exit

smp_ltk_sec_level.exit:                           ; preds = %if.then.i, %if.end32.smp_ltk_sec_level.exit_crit_edge
  %retval.0.i107 = phi i8 [ %..i, %if.then.i ], [ 2, %if.end32.smp_ltk_sec_level.exit_crit_edge ]
  %pending_sec_level = getelementptr inbounds %struct.hci_conn, ptr %call4, i32 0, i32 25
  %37 = ptrtoint ptr %pending_sec_level to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %retval.0.i107, ptr %pending_sec_level, align 1
  %38 = ptrtoint ptr %enc_size to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %enc_size, align 1
  %enc_key_size = getelementptr inbounds %struct.hci_conn, ptr %call4, i32 0, i32 27
  %40 = ptrtoint ptr %enc_key_size to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %39, ptr %enc_key_size, align 1
  %call47 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 8218, i32 noundef 18, ptr noundef nonnull %cp) #9
  %41 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %cmp49 = icmp eq i8 %42, 0
  %flags = getelementptr inbounds %struct.hci_conn, ptr %call4, i32 0, i32 47
  br i1 %cmp49, label %if.then51, label %if.else61

if.then51:                                        ; preds = %smp_ltk_sec_level.exit
  call void @_set_bit(i32 noundef 16, ptr noundef %flags) #9
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %call8) #9
  br i1 %call.i.i, label %if.end.i.i, label %if.then51.list_del_rcu.exit_crit_edge

if.then51.list_del_rcu.exit_crit_edge:            ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #11
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #11
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call8, i32 0, i32 1
  %43 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %prev.i.i, align 4
  %45 = ptrtoint ptr %call8 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %call8, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %44, ptr %prev1.i.i.i, align 4
  %48 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile ptr %46, ptr %44, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.then51.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call8, i32 0, i32 1
  %49 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %rcu = getelementptr inbounds %struct.smp_ltk, ptr %call8, i32 0, i32 1
  call void @kvfree_call_rcu(ptr noundef %rcu, ptr noundef nonnull inttoptr (i32 8 to ptr)) #9
  br label %cleanup

if.else61:                                        ; preds = %smp_ltk_sec_level.exit
  call void @__sanitizer_cov_trace_pc() #11
  call void @_clear_bit(i32 noundef 16, ptr noundef %flags) #9
  br label %cleanup

not_found:                                        ; preds = %lor.lhs.false25.not_found_crit_edge, %if.else.not_found_crit_edge, %lor.lhs.false.not_found_crit_edge, %if.then13.not_found_crit_edge, %if.end7.not_found_crit_edge, %do.end.not_found_crit_edge
  %50 = ptrtoint ptr %data to i32
  call void @__asan_loadN_noabort(i32 %50, i32 2)
  %51 = load i16, ptr %data, align 1
  %52 = ptrtoint ptr %neg to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 %51, ptr %neg, align 2
  %call67 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 8219, i32 noundef 2, ptr noundef nonnull %neg) #9
  br label %cleanup

cleanup:                                          ; preds = %not_found, %if.else61, %list_del_rcu.exit
  call void @mutex_unlock(ptr noundef %lock) #9
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %neg) #9
  call void @llvm.lifetime.end.p0(i64 18, ptr nonnull %cp) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_remote_conn_param_req_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %cp.i86 = alloca %struct.hci_cp_le_conn_param_req_neg_reply, align 2
  %cp.i = alloca %struct.hci_cp_le_conn_param_req_neg_reply, align 2
  %cp = alloca %struct.hci_cp_le_conn_param_req_reply, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %cp) #9
  %0 = getelementptr inbounds %struct.hci_cp_le_conn_param_req_reply, ptr %cp, i32 0, i32 1
  %1 = getelementptr inbounds %struct.hci_cp_le_conn_param_req_reply, ptr %cp, i32 0, i32 2
  %2 = getelementptr inbounds %struct.hci_cp_le_conn_param_req_reply, ptr %cp, i32 0, i32 3
  %3 = getelementptr inbounds %struct.hci_cp_le_conn_param_req_reply, ptr %cp, i32 0, i32 4
  %4 = getelementptr inbounds %struct.hci_cp_le_conn_param_req_reply, ptr %cp, i32 0, i32 5
  %5 = getelementptr inbounds %struct.hci_cp_le_conn_param_req_reply, ptr %cp, i32 0, i32 6
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_le_remote_conn_param_req_evt.__UNIQUE_ID_ddebug656, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_le_remote_conn_param_req_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %6 = ptrtoint ptr %data to i32
  call void @__asan_loadN_noabort(i32 %6, i32 2)
  %7 = load i16, ptr %data, align 1
  %8 = tail call i16 @llvm.bswap.i16(i16 %7)
  %conv = zext i16 %8 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_le_remote_conn_param_req_evt.__UNIQUE_ID_ddebug656, ptr noundef nonnull @.str.151, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %9 = ptrtoint ptr %data to i32
  call void @__asan_loadN_noabort(i32 %9, i32 2)
  %10 = load i16, ptr %data, align 1
  %11 = tail call i16 @llvm.bswap.i16(i16 %10)
  %interval_min = getelementptr inbounds %struct.hci_ev_le_remote_conn_param_req, ptr %data, i32 0, i32 1
  %12 = ptrtoint ptr %interval_min to i32
  call void @__asan_loadN_noabort(i32 %12, i32 2)
  %13 = load i16, ptr %interval_min, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13)
  %interval_max = getelementptr inbounds %struct.hci_ev_le_remote_conn_param_req, ptr %data, i32 0, i32 2
  %15 = ptrtoint ptr %interval_max to i32
  call void @__asan_loadN_noabort(i32 %15, i32 2)
  %16 = load i16, ptr %interval_max, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16)
  %latency5 = getelementptr inbounds %struct.hci_ev_le_remote_conn_param_req, ptr %data, i32 0, i32 3
  %18 = ptrtoint ptr %latency5 to i32
  call void @__asan_loadN_noabort(i32 %18, i32 2)
  %19 = load i16, ptr %latency5, align 1
  %20 = tail call i16 @llvm.bswap.i16(i16 %19)
  %timeout6 = getelementptr inbounds %struct.hci_ev_le_remote_conn_param_req, ptr %data, i32 0, i32 4
  %21 = ptrtoint ptr %timeout6 to i32
  call void @__asan_loadN_noabort(i32 %21, i32 2)
  %22 = load i16, ptr %timeout6, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22)
  %call7 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %11)
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %do.end.if.then11_crit_edge, label %lor.lhs.false

do.end.if.then11_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then11

lor.lhs.false:                                    ; preds = %do.end
  %state = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 12
  %24 = ptrtoint ptr %state to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %25)
  %cmp.not = icmp eq i16 %25, 1
  br i1 %cmp.not, label %if.end12, label %lor.lhs.false.if.then11_crit_edge

lor.lhs.false.if.then11_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then11

if.then11:                                        ; preds = %lor.lhs.false.if.then11_crit_edge, %do.end.if.then11_crit_edge
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %cp.i) #9
  %26 = getelementptr inbounds %struct.hci_cp_le_conn_param_req_neg_reply, ptr %cp.i, i32 0, i32 1
  %27 = ptrtoint ptr %cp.i to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %10, ptr %cp.i, align 2
  %28 = ptrtoint ptr %26 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 2, ptr %26, align 2
  %call.i = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 8225, i32 noundef 3, ptr noundef nonnull %cp.i) #9
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %cp.i) #9
  br label %cleanup

if.end12:                                         ; preds = %lor.lhs.false
  %conv1.i = zext i16 %17 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %14, i16 %17)
  %cmp.i = icmp ugt i16 %14, %17
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %14)
  %cmp4.i = icmp ult i16 %14, 6
  %or.cond.i = or i1 %cmp4.i, %cmp.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 3200, i16 %17)
  %cmp8.i = icmp ugt i16 %17, 3200
  %or.cond47.i = or i1 %cmp8.i, %or.cond.i
  br i1 %or.cond47.i, label %if.end12.if.then15_crit_edge, label %if.end.i

if.end12.if.then15_crit_edge:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

if.end.i:                                         ; preds = %if.end12
  %conv10.i = zext i16 %23 to i32
  %29 = add i16 %23, -3201
  call void @__sanitizer_cov_trace_const_cmp2(i16 -3191, i16 %29)
  %30 = icmp ult i16 %29, -3191
  %mul.i = shl nuw nsw i32 %conv10.i, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i, i32 %conv1.i)
  %cmp21.not.i = icmp ule i32 %mul.i, %conv1.i
  %or.cond49.i = select i1 %30, i1 true, i1 %cmp21.not.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 499, i16 %20)
  %cmp30.i = icmp ugt i16 %20, 499
  %or.cond50.i = or i1 %cmp30.i, %or.cond49.i
  br i1 %or.cond50.i, label %if.end.i.if.then15_crit_edge, label %lor.lhs.false32.i

if.end.i.if.then15_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

lor.lhs.false32.i:                                ; preds = %if.end.i
  %conv29.i = zext i16 %20 to i32
  %mul26.i = shl nuw nsw i32 %conv10.i, 2
  %div.i = udiv i32 %mul26.i, %conv1.i
  %conv28.i = add nuw nsw i32 %div.i, 65535
  %conv34.i = and i32 %conv28.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv34.i, i32 %conv29.i)
  %cmp35.i = icmp ult i32 %conv34.i, %conv29.i
  br i1 %cmp35.i, label %lor.lhs.false32.i.if.then15_crit_edge, label %if.end16

lor.lhs.false32.i.if.then15_crit_edge:            ; preds = %lor.lhs.false32.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then15

if.then15:                                        ; preds = %lor.lhs.false32.i.if.then15_crit_edge, %if.end.i.if.then15_crit_edge, %if.end12.if.then15_crit_edge
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %cp.i86) #9
  %31 = getelementptr inbounds %struct.hci_cp_le_conn_param_req_neg_reply, ptr %cp.i86, i32 0, i32 1
  %32 = ptrtoint ptr %cp.i86 to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %10, ptr %cp.i86, align 2
  %33 = ptrtoint ptr %31 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 30, ptr %31, align 2
  %call.i87 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 8225, i32 noundef 3, ptr noundef nonnull %cp.i86) #9
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %cp.i86) #9
  br label %cleanup

if.end16:                                         ; preds = %lor.lhs.false32.i
  %role = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 15
  %34 = ptrtoint ptr %role to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %role, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %cmp18 = icmp eq i8 %35, 0
  br i1 %cmp18, label %if.then20, label %if.end16.if.end28_crit_edge

if.end16.if.end28_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end28

if.then20:                                        ; preds = %if.end16
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dst = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 2
  %dst_type = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 3
  %36 = ptrtoint ptr %dst_type to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %dst_type, align 2
  %call21 = tail call ptr @hci_conn_params_lookup(ptr noundef %hdev, ptr noundef %dst, i8 noundef zeroext %37) #9
  %tobool22.not = icmp eq ptr %call21, null
  br i1 %tobool22.not, label %if.then20.if.end24_crit_edge, label %if.then23

if.then20.if.end24_crit_edge:                     ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end24

if.then23:                                        ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #11
  %conn_min_interval = getelementptr inbounds %struct.hci_conn_params, ptr %call21, i32 0, i32 4
  %38 = ptrtoint ptr %conn_min_interval to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %14, ptr %conn_min_interval, align 4
  %conn_max_interval = getelementptr inbounds %struct.hci_conn_params, ptr %call21, i32 0, i32 5
  %39 = ptrtoint ptr %conn_max_interval to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %17, ptr %conn_max_interval, align 2
  %conn_latency = getelementptr inbounds %struct.hci_conn_params, ptr %call21, i32 0, i32 6
  %40 = ptrtoint ptr %conn_latency to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %20, ptr %conn_latency, align 4
  %supervision_timeout = getelementptr inbounds %struct.hci_conn_params, ptr %call21, i32 0, i32 7
  %41 = ptrtoint ptr %supervision_timeout to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %23, ptr %supervision_timeout, align 2
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.then20.if.end24_crit_edge
  %store_hint.0 = phi i8 [ 1, %if.then23 ], [ 0, %if.then20.if.end24_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %lock) #9
  %42 = ptrtoint ptr %dst_type to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %dst_type, align 2
  tail call void @mgmt_new_conn_param(ptr noundef %hdev, ptr noundef %dst, i8 noundef zeroext %43, i8 noundef zeroext %store_hint.0, i16 noundef zeroext %14, i16 noundef zeroext %17, i16 noundef zeroext %20, i16 noundef zeroext %23) #9
  br label %if.end28

if.end28:                                         ; preds = %if.end24, %if.end16.if.end28_crit_edge
  %44 = ptrtoint ptr %data to i32
  call void @__asan_loadN_noabort(i32 %44, i32 2)
  %45 = load i16, ptr %data, align 1
  %46 = ptrtoint ptr %cp to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 %45, ptr %cp, align 2
  %47 = ptrtoint ptr %interval_min to i32
  call void @__asan_loadN_noabort(i32 %47, i32 2)
  %48 = load i16, ptr %interval_min, align 1
  %49 = ptrtoint ptr %0 to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %48, ptr %0, align 2
  %50 = ptrtoint ptr %interval_max to i32
  call void @__asan_loadN_noabort(i32 %50, i32 2)
  %51 = load i16, ptr %interval_max, align 1
  %52 = ptrtoint ptr %1 to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 %51, ptr %1, align 2
  %53 = ptrtoint ptr %latency5 to i32
  call void @__asan_loadN_noabort(i32 %53, i32 2)
  %54 = load i16, ptr %latency5, align 1
  %55 = ptrtoint ptr %2 to i32
  call void @__asan_store2_noabort(i32 %55)
  store i16 %54, ptr %2, align 2
  %56 = ptrtoint ptr %timeout6 to i32
  call void @__asan_loadN_noabort(i32 %56, i32 2)
  %57 = load i16, ptr %timeout6, align 1
  %58 = ptrtoint ptr %3 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %57, ptr %3, align 2
  %59 = ptrtoint ptr %4 to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 0, ptr %4, align 2
  %60 = ptrtoint ptr %5 to i32
  call void @__asan_store2_noabort(i32 %60)
  store i16 0, ptr %5, align 2
  %call39 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 8224, i32 noundef 14, ptr noundef nonnull %cp) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end28, %if.then15, %if.then11
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %cp) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_enh_conn_complete_evt(ptr noundef %hdev, ptr noundef %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_le_enh_conn_complete_evt.__UNIQUE_ID_ddebug649, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_le_enh_conn_complete_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_le_enh_conn_complete_evt.__UNIQUE_ID_ddebug649, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  %bdaddr = getelementptr inbounds %struct.hci_ev_le_enh_conn_complete, ptr %data, i32 0, i32 4
  %bdaddr_type = getelementptr inbounds %struct.hci_ev_le_enh_conn_complete, ptr %data, i32 0, i32 3
  %4 = ptrtoint ptr %bdaddr_type to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %bdaddr_type, align 1
  %local_rpa = getelementptr inbounds %struct.hci_ev_le_enh_conn_complete, ptr %data, i32 0, i32 5
  %role = getelementptr inbounds %struct.hci_ev_le_enh_conn_complete, ptr %data, i32 0, i32 2
  %6 = ptrtoint ptr %role to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %role, align 1
  %handle = getelementptr inbounds %struct.hci_ev_le_enh_conn_complete, ptr %data, i32 0, i32 1
  %8 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %handle, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9)
  %interval = getelementptr inbounds %struct.hci_ev_le_enh_conn_complete, ptr %data, i32 0, i32 7
  %11 = ptrtoint ptr %interval to i32
  call void @__asan_loadN_noabort(i32 %11, i32 2)
  %12 = load i16, ptr %interval, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12)
  %latency = getelementptr inbounds %struct.hci_ev_le_enh_conn_complete, ptr %data, i32 0, i32 8
  %14 = ptrtoint ptr %latency to i32
  call void @__asan_loadN_noabort(i32 %14, i32 2)
  %15 = load i16, ptr %latency, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15)
  %supervision_timeout = getelementptr inbounds %struct.hci_ev_le_enh_conn_complete, ptr %data, i32 0, i32 9
  %17 = ptrtoint ptr %supervision_timeout to i32
  call void @__asan_loadN_noabort(i32 %17, i32 2)
  %18 = load i16, ptr %supervision_timeout, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18)
  tail call fastcc void @le_conn_complete_evt(ptr noundef %hdev, i8 noundef zeroext %3, ptr noundef %bdaddr, i8 noundef zeroext %5, ptr noundef %local_rpa, i8 noundef zeroext %7, i16 noundef zeroext %10, i16 noundef zeroext %13, i16 noundef zeroext %16, i16 noundef zeroext %19)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_direct_adv_report_evt(ptr noundef %hdev, ptr noundef %data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  %2 = shl nuw nsw i32 %conv, 4
  %call.i = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %2) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %hci_le_ev_skb_pull.exit.thread, label %if.end

hci_le_ev_skb_pull.exit.thread:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.228, ptr noundef %name.i, i32 noundef 11) #9
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool3.not = icmp eq i8 %4, 0
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %cmp26.not = icmp eq i8 %6, 0
  br i1 %cmp26.not, label %if.end5.for.end_crit_edge, label %if.end5.for.body_crit_edge

if.end5.for.body_crit_edge:                       ; preds = %if.end5
  br label %for.body

if.end5.for.end_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end5.for.body_crit_edge
  %i.027 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end5.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hci_ev_le_direct_adv_report, ptr %data, i32 0, i32 1, i32 %i.027
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx, align 1
  %bdaddr = getelementptr %struct.hci_ev_le_direct_adv_report, ptr %data, i32 0, i32 1, i32 %i.027, i32 2
  %bdaddr_type = getelementptr %struct.hci_ev_le_direct_adv_report, ptr %data, i32 0, i32 1, i32 %i.027, i32 1
  %9 = ptrtoint ptr %bdaddr_type to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %bdaddr_type, align 1
  %direct_addr = getelementptr %struct.hci_ev_le_direct_adv_report, ptr %data, i32 0, i32 1, i32 %i.027, i32 4
  %direct_addr_type = getelementptr %struct.hci_ev_le_direct_adv_report, ptr %data, i32 0, i32 1, i32 %i.027, i32 3
  %11 = ptrtoint ptr %direct_addr_type to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %direct_addr_type, align 1
  %rssi = getelementptr %struct.hci_ev_le_direct_adv_report, ptr %data, i32 0, i32 1, i32 %i.027, i32 5
  %13 = ptrtoint ptr %rssi to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %rssi, align 1
  tail call fastcc void @process_adv_report(ptr noundef %hdev, i8 noundef zeroext %8, ptr noundef %bdaddr, i8 noundef zeroext %10, ptr noundef %direct_addr, i8 noundef zeroext %12, i8 noundef signext %14, ptr noundef null, i8 noundef zeroext 0, i1 noundef zeroext false)
  %inc = add nuw nsw i32 %i.027, 1
  %15 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %data, align 1
  %conv7 = zext i8 %16 to i32
  %cmp = icmp ult i32 %inc, %conv7
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end5.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end.cleanup_crit_edge, %hci_le_ev_skb_pull.exit.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_phy_update_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_le_phy_update_evt.__UNIQUE_ID_ddebug657, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_le_phy_update_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_le_phy_update_evt.__UNIQUE_ID_ddebug657, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end6, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end6:                                          ; preds = %do.end
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %handle = getelementptr inbounds %struct.hci_ev_le_phy_update_complete, ptr %data, i32 0, i32 1
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_loadN_noabort(i32 %4, i32 2)
  %5 = load i16, ptr %handle, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5)
  %call7 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %6)
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %if.end6.unlock_crit_edge, label %if.end10

if.end6.unlock_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.end10:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #11
  %tx_phy = getelementptr inbounds %struct.hci_ev_le_phy_update_complete, ptr %data, i32 0, i32 2
  %7 = ptrtoint ptr %tx_phy to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %tx_phy, align 1
  %le_tx_phy = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 42
  %9 = ptrtoint ptr %le_tx_phy to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %le_tx_phy, align 4
  %rx_phy = getelementptr inbounds %struct.hci_ev_le_phy_update_complete, ptr %data, i32 0, i32 3
  %10 = ptrtoint ptr %rx_phy to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %rx_phy, align 1
  %le_rx_phy = getelementptr inbounds %struct.hci_conn, ptr %call7, i32 0, i32 43
  %12 = ptrtoint ptr %le_rx_phy to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %le_rx_phy, align 1
  br label %unlock

unlock:                                           ; preds = %if.end10, %if.end6.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup

cleanup:                                          ; preds = %unlock, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_ext_adv_report_evt(ptr noundef %hdev, ptr nocapture noundef %data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup22_crit_edge, label %if.end

entry.cleanup22_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup22

if.end:                                           ; preds = %entry
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data, align 1
  %dec54 = add i8 %3, -1
  store i8 %dec54, ptr %data, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool2.not55 = icmp eq i8 %3, 0
  br i1 %tobool2.not55, label %if.end.while.end_crit_edge, label %while.body.lr.ph

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end
  %name.i48 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %call.i = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef 24) #9
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %while.body.while.end.sink.split_crit_edge, label %if.end5

while.body.while.end.sink.split_crit_edge:        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end.sink.split

if.end5:                                          ; preds = %while.body
  %length = getelementptr inbounds %struct.hci_ev_le_ext_adv_info, ptr %call.i, i32 0, i32 11
  %4 = ptrtoint ptr %length to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %length, align 1
  %conv = zext i8 %5 to i32
  %call.i41 = tail call ptr @skb_pull_data(ptr noundef %skb, i32 noundef %conv) #9
  %tobool.not.i42 = icmp eq ptr %call.i41, null
  br i1 %tobool.not.i42, label %if.end5.while.end.sink.split_crit_edge, label %if.end9

if.end5.while.end.sink.split_crit_edge:           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end.sink.split

if.end9:                                          ; preds = %if.end5
  %6 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 2)
  %7 = load i16, ptr %call.i, align 1
  %8 = tail call i16 @llvm.bswap.i16(i16 %7)
  %conv.i = zext i16 %8 to i32
  %and.i = and i32 %conv.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i46 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i46, label %if.end.i, label %if.then.i47

if.then.i47:                                      ; preds = %if.end9
  %switch.tableidx = add i16 %8, -16
  call void @__sanitizer_cov_trace_const_cmp2(i16 12, i16 %switch.tableidx)
  %9 = icmp ult i16 %switch.tableidx, 12
  br i1 %9, label %switch.hole_check, label %if.then.i47.ext_evt_type_to_legacy.exit_crit_edge

if.then.i47.ext_evt_type_to_legacy.exit_crit_edge: ; preds = %if.then.i47
  call void @__sanitizer_cov_trace_pc() #11
  br label %ext_evt_type_to_legacy.exit

if.end.i:                                         ; preds = %if.end9
  %and7.i = and i32 %conv.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %if.end15.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  %10 = trunc i16 %8 to i8
  %11 = lshr i8 %10, 2
  %12 = and i8 %11, 1
  br label %if.then13

if.end15.i:                                       ; preds = %if.end.i
  %and17.i = and i32 %conv.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  br i1 %tobool18.not.i, label %if.end20.i, label %if.end15.i.if.then13_crit_edge

if.end15.i.if.then13_crit_edge:                   ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then13

if.end20.i:                                       ; preds = %if.end15.i
  %and22.i = and i32 %conv.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i)
  %tobool23.not.i = icmp eq i32 %and22.i, 0
  br i1 %tobool23.not.i, label %if.end25.i, label %if.end20.i.if.then13_crit_edge

if.end20.i.if.then13_crit_edge:                   ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then13

if.end25.i:                                       ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %7)
  %cmp.i = icmp ne i16 %7, 0
  %and29.i = and i32 %conv.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i)
  %tobool30.not.i = icmp eq i32 %and29.i, 0
  %or.cond.i = and i1 %cmp.i, %tobool30.not.i
  br i1 %or.cond.i, label %if.end25.i.ext_evt_type_to_legacy.exit_crit_edge, label %if.end25.i.if.then13_crit_edge

if.end25.i.if.then13_crit_edge:                   ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then13

if.end25.i.ext_evt_type_to_legacy.exit_crit_edge: ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %ext_evt_type_to_legacy.exit

ext_evt_type_to_legacy.exit:                      ; preds = %switch.hole_check.ext_evt_type_to_legacy.exit_crit_edge, %if.end25.i.ext_evt_type_to_legacy.exit_crit_edge, %if.then.i47.ext_evt_type_to_legacy.exit_crit_edge
  tail call void (ptr, ...) @bt_err_ratelimited(ptr noundef nonnull @.str.225, ptr noundef %name.i48, i32 noundef %conv.i) #9
  br label %cleanup

switch.hole_check:                                ; preds = %if.then.i47
  %switch.shifted = lshr i16 3117, %switch.tableidx
  %13 = and i16 %switch.shifted, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %switch.lobit.not = icmp eq i16 %13, 0
  br i1 %switch.lobit.not, label %switch.hole_check.ext_evt_type_to_legacy.exit_crit_edge, label %switch.lookup

switch.hole_check.ext_evt_type_to_legacy.exit_crit_edge: ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #11
  br label %ext_evt_type_to_legacy.exit

switch.lookup:                                    ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #11
  %14 = sext i16 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [12 x i8], ptr @switch.table.hci_le_ext_adv_report_evt, i32 0, i32 %14
  %15 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load1_noabort(i32 %15)
  %switch.load = load i8, ptr %switch.gep, align 1
  br label %if.then13

if.then13:                                        ; preds = %switch.lookup, %if.end25.i.if.then13_crit_edge, %if.end20.i.if.then13_crit_edge, %if.end15.i.if.then13_crit_edge, %if.then9.i
  %retval.0.i.ph = phi i8 [ 3, %if.end25.i.if.then13_crit_edge ], [ 2, %if.end20.i.if.then13_crit_edge ], [ 4, %if.end15.i.if.then13_crit_edge ], [ %12, %if.then9.i ], [ %switch.load, %switch.lookup ]
  %bdaddr = getelementptr inbounds %struct.hci_ev_le_ext_adv_info, ptr %call.i, i32 0, i32 2
  %bdaddr_type = getelementptr inbounds %struct.hci_ev_le_ext_adv_info, ptr %call.i, i32 0, i32 1
  %16 = ptrtoint ptr %bdaddr_type to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %bdaddr_type, align 1
  %rssi = getelementptr inbounds %struct.hci_ev_le_ext_adv_info, ptr %call.i, i32 0, i32 7
  %18 = ptrtoint ptr %rssi to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %rssi, align 1
  %data14 = getelementptr inbounds %struct.hci_ev_le_ext_adv_info, ptr %call.i, i32 0, i32 12
  %20 = ptrtoint ptr %length to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %length, align 1
  %22 = and i16 %8, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool17.not = icmp eq i16 %22, 0
  tail call fastcc void @process_adv_report(ptr noundef %hdev, i8 noundef zeroext %retval.0.i.ph, ptr noundef %bdaddr, i8 noundef zeroext %17, ptr noundef null, i8 noundef zeroext 0, i8 noundef signext %19, ptr noundef %data14, i8 noundef zeroext %21, i1 noundef zeroext %tobool17.not)
  br label %cleanup

cleanup:                                          ; preds = %if.then13, %ext_evt_type_to_legacy.exit
  %23 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %data, align 1
  %dec = add i8 %24, -1
  store i8 %dec, ptr %data, align 1
  %tobool2.not = icmp eq i8 %24, 0
  br i1 %tobool2.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #11
  br label %while.end

while.end.sink.split:                             ; preds = %if.end5.while.end.sink.split_crit_edge, %while.body.while.end.sink.split_crit_edge
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.228, ptr noundef %name.i48, i32 noundef 13) #9
  br label %while.end

while.end:                                        ; preds = %while.end.sink.split, %cleanup.while.end_crit_edge, %if.end.while.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #9
  br label %cleanup22

cleanup22:                                        ; preds = %while.end, %entry.cleanup22_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hci_le_ext_adv_term_evt(ptr noundef %hdev, ptr nocapture noundef readonly %data, ptr nocapture noundef readnone %skb) #0 align 64 {
entry:
  %.compoundliteral = alloca %struct.bdaddr_t, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_le_ext_adv_term_evt.__UNIQUE_ID_ddebug650, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@hci_le_ext_adv_term_evt, %if.then)) #9
          to label %do.end [label %if.then], !srcloc !680

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data, align 1
  %conv = zext i8 %1 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_le_ext_adv_term_evt.__UNIQUE_ID_ddebug650, ptr noundef nonnull @.str.9, ptr noundef %name, i32 noundef %conv) #9
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %handle = getelementptr inbounds %struct.hci_evt_le_ext_adv_set_term, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %handle to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %handle, align 1
  %call3 = tail call ptr @hci_find_adv_instance(ptr noundef %hdev, i8 noundef zeroext %3) #9
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %data, align 1
  %6 = zext i8 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.273)
  switch i8 %5, label %if.then13 [
    i8 68, label %if.then7
    i8 0, label %if.end40
  ]

if.then7:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #11
  %name8 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_warn_ratelimited(ptr noundef nonnull @.str.227, ptr noundef %name8) #9
  br label %cleanup

if.then13:                                        ; preds = %do.end
  %tobool14.not = icmp eq ptr %call3, null
  br i1 %tobool14.not, label %if.then13.cleanup_crit_edge, label %if.end16

if.then13.cleanup_crit_edge:                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.then13
  %7 = ptrtoint ptr %handle to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %handle, align 1
  %call18 = tail call i32 @hci_remove_adv_instance(ptr noundef %hdev, i8 noundef zeroext %8) #9
  %9 = ptrtoint ptr %handle to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %handle, align 1
  tail call void @mgmt_advertising_removed(ptr noundef null, ptr noundef %hdev, i8 noundef zeroext %10) #9
  %adv_instances = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 213
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end16
  %adv.0.in = phi ptr [ %adv_instances, %if.end16 ], [ %adv.0, %for.body.for.cond_crit_edge ]
  %11 = ptrtoint ptr %adv.0.in to i32
  call void @__asan_load4_noabort(i32 %11)
  %adv.0 = load ptr, ptr %adv.0.in, align 4
  %cmp27.not = icmp eq ptr %adv.0, %adv_instances
  br i1 %cmp27.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %enabled = getelementptr inbounds %struct.adv_info, ptr %adv.0, i32 0, i32 1
  %12 = ptrtoint ptr %enabled to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %enabled, align 4, !range !679
  %tobool31.not = icmp eq i8 %13, 0
  br i1 %tobool31.not, label %for.body.for.cond_crit_edge, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #11
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_clear_bit(i32 noundef 13, ptr noundef %dev_flags) #9
  br label %cleanup

if.end40:                                         ; preds = %do.end
  %tobool41.not = icmp eq ptr %call3, null
  br i1 %tobool41.not, label %if.end40.if.end44_crit_edge, label %if.then42

if.end40.if.end44_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end44

if.then42:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #11
  %enabled43 = getelementptr inbounds %struct.adv_info, ptr %call3, i32 0, i32 1
  %14 = ptrtoint ptr %enabled43 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 0, ptr %enabled43, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %if.end40.if.end44_crit_edge
  %conn_handle = getelementptr inbounds %struct.hci_evt_le_ext_adv_set_term, ptr %data, i32 0, i32 2
  %15 = ptrtoint ptr %conn_handle to i32
  call void @__asan_loadN_noabort(i32 %15, i32 2)
  %16 = load i16, ptr %conn_handle, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16)
  %call45 = tail call fastcc ptr @hci_conn_hash_lookup_handle(ptr noundef %hdev, i16 noundef zeroext %17)
  %tobool46.not = icmp eq ptr %call45, null
  br i1 %tobool46.not, label %if.end44.cleanup_crit_edge, label %if.then47

if.end44.cleanup_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then47:                                        ; preds = %if.end44
  %18 = ptrtoint ptr %handle to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %handle, align 1
  %adv_instance = getelementptr inbounds %struct.hci_conn, ptr %call45, i32 0, i32 10
  %20 = ptrtoint ptr %adv_instance to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %adv_instance, align 8
  %adv_addr_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 12
  %21 = ptrtoint ptr %adv_addr_type to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %adv_addr_type, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %22)
  %cmp50.not = icmp eq i8 %22, 1
  br i1 %cmp50.not, label %lor.lhs.false, label %if.then47.cleanup_crit_edge

if.then47.cleanup_crit_edge:                      ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.then47
  %resp_addr = getelementptr inbounds %struct.hci_conn, ptr %call45, i32 0, i32 8
  %23 = call ptr @memset(ptr %.compoundliteral, i32 0, i32 6)
  %bcmp = call i32 @bcmp(ptr noundef dereferenceable(6) %resp_addr, ptr noundef nonnull dereferenceable(6) %.compoundliteral, i32 6) #12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool57.not = icmp eq i32 %bcmp, 0
  br i1 %tobool57.not, label %if.end59, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end59:                                         ; preds = %lor.lhs.false
  %24 = ptrtoint ptr %handle to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %handle, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool61.not = icmp eq i8 %25, 0
  br i1 %tobool61.not, label %if.then62, label %if.end64

if.then62:                                        ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #11
  %random_addr = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 10
  %26 = call ptr @memcpy(ptr %resp_addr, ptr %random_addr, i32 6)
  br label %cleanup

if.end64:                                         ; preds = %if.end59
  br i1 %tobool41.not, label %if.end64.cleanup_crit_edge, label %if.then66

if.end64.cleanup_crit_edge:                       ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then66:                                        ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #11
  %random_addr68 = getelementptr inbounds %struct.adv_info, ptr %call3, i32 0, i32 15
  %27 = call ptr @memcpy(ptr %resp_addr, ptr %random_addr68, i32 6)
  br label %cleanup

cleanup:                                          ; preds = %if.then66, %if.end64.cleanup_crit_edge, %if.then62, %lor.lhs.false.cleanup_crit_edge, %if.then47.cleanup_crit_edge, %if.end44.cleanup_crit_edge, %for.end, %for.body.cleanup_crit_edge, %if.then13.cleanup_crit_edge, %if.then7
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @le_conn_complete_evt(ptr noundef %hdev, i8 noundef zeroext %status, ptr noundef %bdaddr, i8 noundef zeroext %bdaddr_type, ptr noundef readonly %local_rpa, i8 noundef zeroext %role, i16 noundef zeroext %handle, i16 noundef zeroext %interval, i16 noundef zeroext %latency, i16 noundef zeroext %supervision_timeout) unnamed_addr #0 align 64 {
entry:
  %.compoundliteral.i = alloca %struct.bdaddr_t, align 1
  %.compoundliteral24.i = alloca %struct.bdaddr_t, align 1
  %cp = alloca %struct.hci_cp_le_read_remote_features, align 2
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #9
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  tail call void @_clear_bit(i32 noundef 13, ptr noundef %dev_flags) #9
  %call = tail call fastcc ptr @hci_lookup_le_connect(ptr noundef %hdev)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.else16

if.then:                                          ; preds = %entry
  %call1 = tail call ptr @hci_conn_add(ptr noundef %hdev, i32 noundef 128, ptr noundef %bdaddr, i8 noundef zeroext %role) #9
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #11
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err(ptr noundef nonnull @.str.23, ptr noundef %name) #9
  br label %unlock

if.end:                                           ; preds = %if.then
  %dst_type = getelementptr inbounds %struct.hci_conn, ptr %call1, i32 0, i32 3
  %0 = ptrtoint ptr %dst_type to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 %bdaddr_type, ptr %dst_type, align 2
  %out = getelementptr inbounds %struct.hci_conn, ptr %call1, i32 0, i32 16
  %1 = ptrtoint ptr %out to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %out, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool5.not = icmp eq i8 %2, 0
  br i1 %tobool5.not, label %if.end.if.end18_crit_edge, label %if.then6

if.end.if.end18_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

if.then6:                                         ; preds = %if.end
  %resp_addr_type = getelementptr inbounds %struct.hci_conn, ptr %call1, i32 0, i32 9
  %3 = ptrtoint ptr %resp_addr_type to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %bdaddr_type, ptr %resp_addr_type, align 1
  %resp_addr = getelementptr inbounds %struct.hci_conn, ptr %call1, i32 0, i32 8
  %4 = call ptr @memcpy(ptr %resp_addr, ptr %bdaddr, i32 6)
  %5 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %dev_flags, align 4
  %7 = and i32 %6, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool10.not = icmp eq i32 %7, 0
  br i1 %tobool10.not, label %if.else, label %if.then11

if.then11:                                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #11
  %init_addr_type = getelementptr inbounds %struct.hci_conn, ptr %call1, i32 0, i32 7
  %8 = ptrtoint ptr %init_addr_type to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %init_addr_type, align 8
  %init_addr = getelementptr inbounds %struct.hci_conn, ptr %call1, i32 0, i32 6
  %rpa = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 223
  %9 = call ptr @memcpy(ptr %init_addr, ptr %rpa, i32 6)
  br label %if.end18

if.else:                                          ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #11
  %init_addr12 = getelementptr inbounds %struct.hci_conn, ptr %call1, i32 0, i32 6
  %init_addr_type13 = getelementptr inbounds %struct.hci_conn, ptr %call1, i32 0, i32 7
  tail call void @hci_copy_identity_address(ptr noundef %hdev, ptr noundef %init_addr12, ptr noundef %init_addr_type13) #9
  br label %if.end18

if.else16:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %le_conn_timeout = getelementptr inbounds %struct.hci_conn, ptr %call, i32 0, i32 61
  %call17 = tail call zeroext i1 @cancel_delayed_work(ptr noundef %le_conn_timeout) #9
  br label %if.end18

if.end18:                                         ; preds = %if.else16, %if.else, %if.then11, %if.end.if.end18_crit_edge
  %conn.0 = phi ptr [ %call, %if.else16 ], [ %call1, %if.then11 ], [ %call1, %if.else ], [ %call1, %if.end.if.end18_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %.compoundliteral.i)
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %.compoundliteral24.i)
  %out.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 16
  %10 = ptrtoint ptr %out.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %out.i, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %if.else19.i, label %if.then.i

if.then.i:                                        ; preds = %if.end18
  %dst_type.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 3
  %12 = ptrtoint ptr %dst_type.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %bdaddr_type, ptr %dst_type.i, align 2
  %resp_addr_type.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 9
  %13 = ptrtoint ptr %resp_addr_type.i to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %bdaddr_type, ptr %resp_addr_type.i, align 1
  %resp_addr.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 8
  %14 = call ptr @memcpy(ptr %resp_addr.i, ptr %bdaddr, i32 6)
  %tobool1.not.i = icmp eq ptr %local_rpa, null
  br i1 %tobool1.not.i, label %if.then.i.if.else.i_crit_edge, label %land.lhs.true.i

if.then.i.if.else.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then.i
  %15 = call ptr @memset(ptr %.compoundliteral.i, i32 0, i32 6)
  %bcmp.i = call i32 @bcmp(ptr noundef nonnull dereferenceable(6) %local_rpa, ptr noundef nonnull dereferenceable(6) %.compoundliteral.i, i32 6) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %tobool6.not.i = icmp eq i32 %bcmp.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %if.then7.i

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else.i

if.then7.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #11
  %init_addr_type.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 7
  %16 = ptrtoint ptr %init_addr_type.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %init_addr_type.i, align 8
  %init_addr.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 6
  %17 = call ptr @memcpy(ptr %init_addr.i, ptr %local_rpa, i32 6)
  br label %le_conn_update_addr.exit

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then.i.if.else.i_crit_edge
  %hdev.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 65
  %18 = ptrtoint ptr %hdev.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hdev.i, align 4
  %dev_flags.i = getelementptr inbounds %struct.hci_dev, ptr %19, i32 0, i32 206
  %20 = ptrtoint ptr %dev_flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %dev_flags.i, align 4
  %22 = and i32 %21, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool9.not.i = icmp eq i32 %22, 0
  br i1 %tobool9.not.i, label %if.else14.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #11
  %init_addr_type11.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 7
  %23 = ptrtoint ptr %init_addr_type11.i to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 1, ptr %init_addr_type11.i, align 8
  %init_addr12.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 6
  %rpa.i = getelementptr inbounds %struct.hci_dev, ptr %19, i32 0, i32 223
  %24 = call ptr @memcpy(ptr %init_addr12.i, ptr %rpa.i, i32 6)
  br label %le_conn_update_addr.exit

if.else14.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #11
  %init_addr16.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 6
  %init_addr_type17.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 7
  tail call void @hci_copy_identity_address(ptr noundef %19, ptr noundef %init_addr16.i, ptr noundef %init_addr_type17.i) #9
  br label %le_conn_update_addr.exit

if.else19.i:                                      ; preds = %if.end18
  %hdev20.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 65
  %25 = ptrtoint ptr %hdev20.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hdev20.i, align 4
  %adv_addr_type.i = getelementptr inbounds %struct.hci_dev, ptr %26, i32 0, i32 12
  %27 = ptrtoint ptr %adv_addr_type.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %adv_addr_type.i, align 2
  %resp_addr_type21.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 9
  %29 = ptrtoint ptr %resp_addr_type21.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %28, ptr %resp_addr_type21.i, align 1
  %tobool22.not.i = icmp eq ptr %local_rpa, null
  br i1 %tobool22.not.i, label %if.else19.i.if.else37.i_crit_edge, label %land.lhs.true23.i

if.else19.i.if.else37.i_crit_edge:                ; preds = %if.else19.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else37.i

land.lhs.true23.i:                                ; preds = %if.else19.i
  %30 = call ptr @memset(ptr %.compoundliteral24.i, i32 0, i32 6)
  %bcmp99.i = call i32 @bcmp(ptr noundef nonnull dereferenceable(6) %local_rpa, ptr noundef nonnull dereferenceable(6) %.compoundliteral24.i, i32 6) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp99.i)
  %tobool33.not.i = icmp eq i32 %bcmp99.i, 0
  br i1 %tobool33.not.i, label %land.lhs.true23.i.if.else37.i_crit_edge, label %if.then34.i

land.lhs.true23.i.if.else37.i_crit_edge:          ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.else37.i

if.then34.i:                                      ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #11
  %31 = ptrtoint ptr %resp_addr_type21.i to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 1, ptr %resp_addr_type21.i, align 1
  %resp_addr36.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 8
  %32 = call ptr @memcpy(ptr %resp_addr36.i, ptr %local_rpa, i32 6)
  br label %if.end54.i

if.else37.i:                                      ; preds = %land.lhs.true23.i.if.else37.i_crit_edge, %if.else19.i.if.else37.i_crit_edge
  %33 = ptrtoint ptr %adv_addr_type.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %adv_addr_type.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %34)
  %cmp.i = icmp eq i8 %34, 1
  br i1 %cmp.i, label %if.then41.i, label %if.else49.i

if.then41.i:                                      ; preds = %if.else37.i
  %arrayidx.i = getelementptr %struct.hci_dev, ptr %26, i32 0, i32 22, i32 1
  %35 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx.i, align 1
  %37 = and i8 %36, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool44.not.i = icmp eq i8 %37, 0
  br i1 %tobool44.not.i, label %if.then45.i, label %if.then41.i.if.end54.i_crit_edge

if.then41.i.if.end54.i_crit_edge:                 ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end54.i

if.then45.i:                                      ; preds = %if.then41.i
  call void @__sanitizer_cov_trace_pc() #11
  %resp_addr46.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 8
  %random_addr.i = getelementptr inbounds %struct.hci_dev, ptr %26, i32 0, i32 10
  %38 = call ptr @memcpy(ptr %resp_addr46.i, ptr %random_addr.i, i32 6)
  br label %if.end54.i

if.else49.i:                                      ; preds = %if.else37.i
  call void @__sanitizer_cov_trace_pc() #11
  %resp_addr50.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 8
  %bdaddr52.i = getelementptr inbounds %struct.hci_dev, ptr %26, i32 0, i32 7
  %39 = call ptr @memcpy(ptr %resp_addr50.i, ptr %bdaddr52.i, i32 6)
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.else49.i, %if.then45.i, %if.then41.i.if.end54.i_crit_edge, %if.then34.i
  %init_addr_type55.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 7
  %40 = ptrtoint ptr %init_addr_type55.i to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %bdaddr_type, ptr %init_addr_type55.i, align 8
  %init_addr56.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 6
  %41 = call ptr @memcpy(ptr %init_addr56.i, ptr %bdaddr, i32 6)
  %le_conn_min_interval.i = getelementptr inbounds %struct.hci_dev, ptr %26, i32 0, i32 57
  %42 = ptrtoint ptr %le_conn_min_interval.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %le_conn_min_interval.i, align 2
  %le_conn_min_interval58.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 35
  %44 = ptrtoint ptr %le_conn_min_interval58.i to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %43, ptr %le_conn_min_interval58.i, align 2
  %le_conn_max_interval.i = getelementptr inbounds %struct.hci_dev, ptr %26, i32 0, i32 58
  %45 = ptrtoint ptr %le_conn_max_interval.i to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %le_conn_max_interval.i, align 8
  %le_conn_max_interval60.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 36
  %47 = ptrtoint ptr %le_conn_max_interval60.i to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 %46, ptr %le_conn_max_interval60.i, align 4
  br label %le_conn_update_addr.exit

le_conn_update_addr.exit:                         ; preds = %if.end54.i, %if.else14.i, %if.then10.i, %if.then7.i
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %.compoundliteral.i)
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %.compoundliteral24.i)
  %dst = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 2
  %dst_type19 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 3
  %48 = ptrtoint ptr %dst_type19 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %dst_type19, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %49)
  %cmp.not.i.i = icmp eq i8 %49, 1
  br i1 %cmp.not.i.i, label %hci_bdaddr_is_rpa.exit.i, label %le_conn_update_addr.exit.if.end27thread-pre-split_crit_edge

le_conn_update_addr.exit.if.end27thread-pre-split_crit_edge: ; preds = %le_conn_update_addr.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end27thread-pre-split

hci_bdaddr_is_rpa.exit.i:                         ; preds = %le_conn_update_addr.exit
  %arrayidx.i.i = getelementptr %struct.hci_conn, ptr %conn.0, i32 0, i32 2, i32 0, i32 5
  %50 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %arrayidx.i.i, align 1
  %52 = and i8 %51, -64
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %52)
  %cmp3.i.i = icmp eq i8 %52, 64
  br i1 %cmp3.i.i, label %hci_get_irk.exit, label %hci_bdaddr_is_rpa.exit.i.if.end27thread-pre-split_crit_edge

hci_bdaddr_is_rpa.exit.i.if.end27thread-pre-split_crit_edge: ; preds = %hci_bdaddr_is_rpa.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end27thread-pre-split

hci_get_irk.exit:                                 ; preds = %hci_bdaddr_is_rpa.exit.i
  %call1.i = tail call ptr @hci_find_irk_by_rpa(ptr noundef %hdev, ptr noundef %dst) #9
  %tobool21.not = icmp eq ptr %call1.i, null
  br i1 %tobool21.not, label %hci_get_irk.exit.if.end27thread-pre-split_crit_edge, label %if.then22

hci_get_irk.exit.if.end27thread-pre-split_crit_edge: ; preds = %hci_get_irk.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end27thread-pre-split

if.then22:                                        ; preds = %hci_get_irk.exit
  call void @__sanitizer_cov_trace_pc() #11
  %bdaddr24 = getelementptr inbounds %struct.smp_irk, ptr %call1.i, i32 0, i32 3
  %53 = call ptr @memcpy(ptr %dst, ptr %bdaddr24, i32 6)
  %addr_type25 = getelementptr inbounds %struct.smp_irk, ptr %call1.i, i32 0, i32 4
  %54 = ptrtoint ptr %addr_type25 to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %addr_type25, align 4
  %56 = ptrtoint ptr %dst_type19 to i32
  call void @__asan_store1_noabort(i32 %56)
  store i8 %55, ptr %dst_type19, align 2
  br label %if.end27

if.end27thread-pre-split:                         ; preds = %hci_get_irk.exit.if.end27thread-pre-split_crit_edge, %hci_bdaddr_is_rpa.exit.i.if.end27thread-pre-split_crit_edge, %le_conn_update_addr.exit.if.end27thread-pre-split_crit_edge
  %57 = ptrtoint ptr %dst_type19 to i32
  call void @__asan_load1_noabort(i32 %57)
  %.pr = load i8, ptr %dst_type19, align 2
  br label %if.end27

if.end27:                                         ; preds = %if.end27thread-pre-split, %if.then22
  %58 = phi i8 [ %.pr, %if.end27thread-pre-split ], [ %55, %if.then22 ]
  %59 = zext i8 %58 to i64
  call void @__sanitizer_cov_trace_switch(i64 %59, ptr @__sancov_gen_cov_switch_values.274)
  switch i8 %58, label %sw.epilog.i [
    i8 2, label %if.end27.ev_bdaddr_type.exit_crit_edge
    i8 3, label %sw.bb1.i
  ]

if.end27.ev_bdaddr_type.exit_crit_edge:           ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %ev_bdaddr_type.exit

sw.bb1.i:                                         ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %ev_bdaddr_type.exit

sw.epilog.i:                                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %ev_bdaddr_type.exit

ev_bdaddr_type.exit:                              ; preds = %sw.epilog.i, %sw.bb1.i, %if.end27.ev_bdaddr_type.exit_crit_edge
  %retval.0.i153 = phi i8 [ 1, %sw.bb1.i ], [ %58, %sw.epilog.i ], [ 0, %if.end27.ev_bdaddr_type.exit_crit_edge ]
  %60 = ptrtoint ptr %dst_type19 to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %retval.0.i153, ptr %dst_type19, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %status)
  %tobool31.not = icmp eq i8 %status, 0
  br i1 %tobool31.not, label %if.end33, label %if.then32

if.then32:                                        ; preds = %ev_bdaddr_type.exit
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @hci_le_conn_failed(ptr noundef nonnull %conn.0, i8 noundef zeroext %status) #9
  br label %unlock

if.end33:                                         ; preds = %ev_bdaddr_type.exit
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %retval.0.i153)
  %cmp = icmp eq i8 %retval.0.i153, 0
  %. = select i1 %cmp, i8 1, i8 2
  %reject_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 185
  %call40 = tail call ptr @hci_bdaddr_list_lookup(ptr noundef %reject_list, ptr noundef %dst, i8 noundef zeroext %.) #9
  %tobool41.not = icmp eq ptr %call40, null
  br i1 %tobool41.not, label %if.end43, label %if.then42

if.then42:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #11
  tail call fastcc void @hci_conn_drop(ptr noundef nonnull %conn.0)
  br label %unlock

if.end43:                                         ; preds = %if.end33
  %flags = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 47
  %call44 = tail call i32 @_test_and_set_bit(i32 noundef 6, ptr noundef %flags) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %if.then46, label %if.end43.if.end47_crit_edge

if.end43.if.end47_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end47

if.then46:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #11
  tail call void @mgmt_device_connected(ptr noundef %hdev, ptr noundef nonnull %conn.0, ptr noundef null, i8 noundef zeroext 0) #9
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %if.end43.if.end47_crit_edge
  %sec_level = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 24
  %61 = ptrtoint ptr %sec_level to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 1, ptr %sec_level, align 4
  %handle48 = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 11
  %62 = ptrtoint ptr %handle48 to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %handle, ptr %handle48, align 2
  %state = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 12
  %63 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 7, ptr %state, align 4
  %le_features = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 22
  %arrayidx = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 22, i32 1
  %64 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %arrayidx, align 1
  %66 = and i8 %65, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %66)
  %tobool50.not = icmp eq i8 %66, 0
  br i1 %tobool50.not, label %if.then51, label %if.end47.if.end52_crit_edge

if.end47.if.end52_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end52

if.then51:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #11
  %cur_adv_instance = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 215
  %67 = ptrtoint ptr %cur_adv_instance to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %cur_adv_instance, align 8
  %adv_instance = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 10
  %69 = ptrtoint ptr %adv_instance to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 %68, ptr %adv_instance, align 8
  br label %if.end52

if.end52:                                         ; preds = %if.then51, %if.end47.if.end52_crit_edge
  %le_conn_interval = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 37
  %70 = ptrtoint ptr %le_conn_interval to i32
  call void @__asan_store2_noabort(i32 %70)
  store i16 %interval, ptr %le_conn_interval, align 2
  %le_conn_latency = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 38
  %71 = ptrtoint ptr %le_conn_latency to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 %latency, ptr %le_conn_latency, align 8
  %le_supv_timeout = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 39
  %72 = ptrtoint ptr %le_supv_timeout to i32
  call void @__asan_store2_noabort(i32 %72)
  store i16 %supervision_timeout, ptr %le_supv_timeout, align 2
  tail call void @hci_debugfs_create_conn(ptr noundef nonnull %conn.0) #9
  tail call void @hci_conn_add_sysfs(ptr noundef nonnull %conn.0) #9
  %73 = ptrtoint ptr %out.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %out.i, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %74)
  %tobool54.not = icmp eq i8 %74, 0
  br i1 %tobool54.not, label %lor.lhs.false, label %if.end52.if.then61_crit_edge

if.end52.if.then61_crit_edge:                     ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then61

lor.lhs.false:                                    ; preds = %if.end52
  %75 = ptrtoint ptr %le_features to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %le_features, align 2
  %77 = and i8 %76, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool60.not = icmp eq i8 %77, 0
  br i1 %tobool60.not, label %if.else65, label %lor.lhs.false.if.then61_crit_edge

lor.lhs.false.if.then61_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then61

if.then61:                                        ; preds = %lor.lhs.false.if.then61_crit_edge, %if.end52.if.then61_crit_edge
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %cp) #9
  %78 = ptrtoint ptr %handle48 to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %handle48, align 2
  %80 = tail call i16 @llvm.bswap.i16(i16 %79)
  %81 = ptrtoint ptr %cp to i32
  call void @__asan_store2_noabort(i32 %81)
  store i16 %80, ptr %cp, align 2
  %call64 = call i32 @hci_send_cmd(ptr noundef %hdev, i16 noundef zeroext 8214, i32 noundef 2, ptr noundef nonnull %cp) #9
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@le_conn_complete_evt, %if.then.i154)) #9
          to label %hci_conn_hold.exit [label %if.then.i154], !srcloc !680

if.then.i154:                                     ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #11
  %refcnt.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 1
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #9
  %82 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %refcnt.i, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @hci_conn_hold.__UNIQUE_ID_ddebug471, ptr noundef nonnull @.str.20, ptr noundef nonnull %conn.0, i32 noundef %83) #9
  br label %hci_conn_hold.exit

hci_conn_hold.exit:                               ; preds = %if.then.i154, %if.then61
  %refcnt4.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 1
  %call.i.i9.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcnt4.i, i32 noundef 4) #9
  call void @llvm.prefetch.p0(ptr %refcnt4.i, i32 1, i32 3, i32 1) #9
  %84 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt4.i, ptr %refcnt4.i, i32 1, ptr elementtype(i32) %refcnt4.i) #9, !srcloc !682
  %disc_work.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 58
  %call5.i = call zeroext i1 @cancel_delayed_work(ptr noundef %disc_work.i) #9
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %cp) #9
  br label %if.end67

if.else65:                                        ; preds = %lor.lhs.false
  %85 = ptrtoint ptr %state to i32
  call void @__asan_store2_noabort(i32 %85)
  store i16 1, ptr %state, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @hci_cb_list_lock, i32 noundef 0) #9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @hci_cb_list to i32))
  %cb.018.i = load ptr, ptr @hci_cb_list, align 4
  %cmp.not19.i = icmp eq ptr %cb.018.i, @hci_cb_list
  br i1 %cmp.not19.i, label %if.else65.for.end.i_crit_edge, label %if.else65.for.body.i_crit_edge

if.else65.for.body.i_crit_edge:                   ; preds = %if.else65
  br label %for.body.i

if.else65.for.end.i_crit_edge:                    ; preds = %if.else65
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.else65.for.body.i_crit_edge
  %cb.020.i = phi ptr [ %cb.0.i, %for.inc.i.for.body.i_crit_edge ], [ %cb.018.i, %if.else65.for.body.i_crit_edge ]
  %connect_cfm.i = getelementptr inbounds %struct.hci_cb, ptr %cb.020.i, i32 0, i32 2
  %86 = ptrtoint ptr %connect_cfm.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %connect_cfm.i, align 4
  %tobool.not.i155 = icmp eq ptr %87, null
  br i1 %tobool.not.i155, label %for.body.i.for.inc.i_crit_edge, label %if.then.i156

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.inc.i

if.then.i156:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %87(ptr noundef nonnull %conn.0, i8 noundef zeroext 0) #9
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i156, %for.body.i.for.inc.i_crit_edge
  %88 = ptrtoint ptr %cb.020.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %cb.0.i = load ptr, ptr %cb.020.i, align 4
  %cmp.not.i = icmp eq ptr %cb.0.i, @hci_cb_list
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.else65.for.end.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @hci_cb_list_lock) #9
  %connect_cfm_cb.i = getelementptr inbounds %struct.hci_conn, ptr %conn.0, i32 0, i32 71
  %89 = ptrtoint ptr %connect_cfm_cb.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %connect_cfm_cb.i, align 8
  %tobool6.not.i157 = icmp eq ptr %90, null
  br i1 %tobool6.not.i157, label %for.end.i.if.end67_crit_edge, label %if.then7.i158

for.end.i.if.end67_crit_edge:                     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end67

if.then7.i158:                                    ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #11
  tail call void %90(ptr noundef nonnull %conn.0, i8 noundef zeroext 0) #9
  br label %if.end67

if.end67:                                         ; preds = %if.then7.i158, %for.end.i.if.end67_crit_edge, %hci_conn_hold.exit
  %pend_le_conns = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 195
  %91 = ptrtoint ptr %dst_type19 to i32
  call void @__asan_load1_noabort(i32 %91)
  %92 = load i8, ptr %dst_type19, align 2
  %call70 = call ptr @hci_pend_le_action_lookup(ptr noundef %pend_le_conns, ptr noundef %dst, i8 noundef zeroext %92) #9
  %tobool71.not = icmp eq ptr %call70, null
  br i1 %tobool71.not, label %if.end67.unlock_crit_edge, label %if.then72

if.end67.unlock_crit_edge:                        ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then72:                                        ; preds = %if.end67
  %action = getelementptr inbounds %struct.hci_conn_params, ptr %call70, i32 0, i32 1
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %action) #9
  br i1 %call.i.i, label %if.end.i.i, label %if.then72.list_del_init.exit_crit_edge

if.then72.list_del_init.exit_crit_edge:           ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #11
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #11
  %prev.i.i = getelementptr inbounds %struct.hci_conn_params, ptr %call70, i32 0, i32 1, i32 1
  %93 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %prev.i.i, align 4
  %95 = ptrtoint ptr %action to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %action, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr %94, ptr %prev1.i.i.i, align 4
  %98 = ptrtoint ptr %94 to i32
  call void @__asan_store4_noabort(i32 %98)
  store volatile ptr %96, ptr %94, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then72.list_del_init.exit_crit_edge
  %99 = ptrtoint ptr %action to i32
  call void @__asan_store4_noabort(i32 %99)
  store volatile ptr %action, ptr %action, align 4
  %prev.i3.i = getelementptr inbounds %struct.hci_conn_params, ptr %call70, i32 0, i32 1, i32 1
  %100 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %action, ptr %prev.i3.i, align 4
  %conn73 = getelementptr inbounds %struct.hci_conn_params, ptr %call70, i32 0, i32 9
  %101 = ptrtoint ptr %conn73 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %conn73, align 4
  %tobool74.not = icmp eq ptr %102, null
  br i1 %tobool74.not, label %list_del_init.exit.unlock_crit_edge, label %if.then75

list_del_init.exit.unlock_crit_edge:              ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %unlock

if.then75:                                        ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #11
  call fastcc void @hci_conn_drop(ptr noundef nonnull %102)
  %103 = ptrtoint ptr %conn73 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %conn73, align 4
  %dev.i = getelementptr inbounds %struct.hci_conn, ptr %104, i32 0, i32 63
  call void @put_device(ptr noundef %dev.i) #9
  %105 = ptrtoint ptr %conn73 to i32
  call void @__asan_store4_noabort(i32 %105)
  store ptr null, ptr %conn73, align 4
  br label %unlock

unlock:                                           ; preds = %if.then75, %list_del_init.exit.unlock_crit_edge, %if.end67.unlock_crit_edge, %if.then42, %if.then32, %if.then3
  %call81 = call i32 @hci_update_passive_scan(ptr noundef %hdev) #9
  call void @mutex_unlock(ptr noundef %lock) #9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_copy_identity_address(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hci_le_conn_failed(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_pend_le_action_lookup(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_find_irk_by_rpa(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @process_adv_report(ptr noundef %hdev, i8 noundef zeroext %type, ptr noundef %bdaddr, i8 noundef zeroext %bdaddr_type, ptr noundef %direct_addr, i8 noundef zeroext %direct_addr_type, i8 noundef signext %rssi, ptr noundef %data, i8 noundef zeroext %len, i1 noundef zeroext %ext_adv) unnamed_addr #0 align 64 {
entry:
  %.compoundliteral.i = alloca %struct.bdaddr_t, align 1
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %type)
  %switch = icmp ult i8 %type, 5
  br i1 %switch, label %sw.epilog, label %sw.default

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %conv = zext i8 %type to i32
  %name = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err_ratelimited(ptr noundef nonnull @.str.215, ptr noundef %name, i32 noundef %conv) #9
  br label %cleanup

sw.epilog:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 32, i8 %len)
  %cmp = icmp ult i8 %len, 32
  %0 = or i1 %cmp, %ext_adv
  br i1 %0, label %for.cond.preheader, label %if.then

for.cond.preheader:                               ; preds = %sw.epilog
  %conv6 = zext i8 %len to i32
  %add.ptr = getelementptr i8, ptr %data, i32 %conv6
  %cmp7330 = icmp ugt ptr %add.ptr, %data
  br i1 %cmp7330, label %for.cond.preheader.land.rhs_crit_edge, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.cond.preheader.land.rhs_crit_edge:            ; preds = %for.cond.preheader
  br label %land.rhs

if.then:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #11
  %name4 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 2
  tail call void (ptr, ...) @bt_err_ratelimited(ptr noundef nonnull @.str.216, ptr noundef %name4) #9
  br label %cleanup

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %for.cond.preheader.land.rhs_crit_edge
  %ptr.0331 = phi ptr [ %add.ptr21, %for.inc.land.rhs_crit_edge ], [ %data, %for.cond.preheader.land.rhs_crit_edge ]
  %1 = ptrtoint ptr %ptr.0331 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %ptr.0331, align 1
  %conv9 = zext i8 %2 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool10.not = icmp eq i8 %2, 0
  %add.ptr11 = getelementptr i8, ptr %ptr.0331, i32 1
  %add.ptr13 = getelementptr i8, ptr %add.ptr11, i32 %conv9
  %cmp16 = icmp ugt ptr %add.ptr13, %add.ptr
  %or.cond277 = select i1 %tobool10.not, i1 true, i1 %cmp16
  br i1 %or.cond277, label %land.rhs.for.end_crit_edge, label %for.inc

land.rhs.for.end_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.inc:                                          ; preds = %land.rhs
  %add = add nuw nsw i32 %conv9, 1
  %add.ptr21 = getelementptr i8, ptr %ptr.0331, i32 %add
  %cmp7 = icmp ult ptr %add.ptr21, %add.ptr
  br i1 %cmp7, label %for.inc.land.rhs_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %for.end

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #11
  br label %land.rhs

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %land.rhs.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %ptr.0.lcssa = phi ptr [ %data, %for.cond.preheader.for.end_crit_edge ], [ %add.ptr21, %for.inc.for.end_crit_edge ], [ %ptr.0331, %land.rhs.for.end_crit_edge ]
  %sub.ptr.lhs.cast = ptrtoint ptr %ptr.0.lcssa to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %data to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv22 = trunc i32 %sub.ptr.sub to i8
  %tobool23.not = icmp eq ptr %direct_addr, null
  br i1 %tobool23.not, label %for.end.if.end38_crit_edge, label %if.then24

for.end.if.end38_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end38

if.then24:                                        ; preds = %for.end
  %3 = zext i8 %direct_addr_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.275)
  switch i8 %direct_addr_type, label %if.then24.cleanup_crit_edge [
    i8 1, label %if.then24.hci_bdaddr_is_rpa.exit_crit_edge
    i8 3, label %if.then24.hci_bdaddr_is_rpa.exit_crit_edge333
  ]

if.then24.hci_bdaddr_is_rpa.exit_crit_edge333:    ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_bdaddr_is_rpa.exit

if.then24.hci_bdaddr_is_rpa.exit_crit_edge:       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #11
  br label %hci_bdaddr_is_rpa.exit

if.then24.cleanup_crit_edge:                      ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

hci_bdaddr_is_rpa.exit:                           ; preds = %if.then24.hci_bdaddr_is_rpa.exit_crit_edge, %if.then24.hci_bdaddr_is_rpa.exit_crit_edge333
  %arrayidx.i = getelementptr [6 x i8], ptr %direct_addr, i32 0, i32 5
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx.i, align 1
  %6 = and i8 %5, -64
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %6)
  %cmp3.i = icmp eq i8 %6, 64
  br i1 %cmp3.i, label %if.end27, label %hci_bdaddr_is_rpa.exit.cleanup_crit_edge

hci_bdaddr_is_rpa.exit.cleanup_crit_edge:         ; preds = %hci_bdaddr_is_rpa.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end27:                                         ; preds = %hci_bdaddr_is_rpa.exit
  %dev_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 206
  %7 = ptrtoint ptr %dev_flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %dev_flags, align 4
  %9 = and i32 %8, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool30.not = icmp eq i32 %9, 0
  br i1 %tobool30.not, label %if.end27.cleanup_crit_edge, label %if.end32

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end32:                                         ; preds = %if.end27
  %irk33 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 220
  %call35 = tail call zeroext i1 @smp_irk_matches(ptr noundef %hdev, ptr noundef %irk33, ptr noundef nonnull %direct_addr) #9
  br i1 %call35, label %if.end32.if.end38_crit_edge, label %if.end32.cleanup_crit_edge

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end32.if.end38_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end38

if.end38:                                         ; preds = %if.end32.if.end38_crit_edge, %for.end.if.end38_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %bdaddr_type)
  %cmp.not.i.i = icmp eq i8 %bdaddr_type, 1
  br i1 %cmp.not.i.i, label %hci_bdaddr_is_rpa.exit.i, label %if.end38.if.end43_crit_edge

if.end38.if.end43_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end43

hci_bdaddr_is_rpa.exit.i:                         ; preds = %if.end38
  %arrayidx.i.i = getelementptr [6 x i8], ptr %bdaddr, i32 0, i32 5
  %10 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx.i.i, align 1
  %12 = and i8 %11, -64
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %12)
  %cmp3.i.i = icmp eq i8 %12, 64
  br i1 %cmp3.i.i, label %hci_get_irk.exit, label %hci_bdaddr_is_rpa.exit.i.sw.epilog.i288_crit_edge

hci_bdaddr_is_rpa.exit.i.sw.epilog.i288_crit_edge: ; preds = %hci_bdaddr_is_rpa.exit.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i288

hci_get_irk.exit:                                 ; preds = %hci_bdaddr_is_rpa.exit.i
  %call1.i = tail call ptr @hci_find_irk_by_rpa(ptr noundef %hdev, ptr noundef %bdaddr) #9
  %tobool40.not = icmp eq ptr %call1.i, null
  br i1 %tobool40.not, label %hci_get_irk.exit.sw.epilog.i288_crit_edge, label %if.then41

hci_get_irk.exit.sw.epilog.i288_crit_edge:        ; preds = %hci_get_irk.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i288

if.then41:                                        ; preds = %hci_get_irk.exit
  call void @__sanitizer_cov_trace_pc() #11
  %bdaddr42 = getelementptr inbounds %struct.smp_irk, ptr %call1.i, i32 0, i32 3
  %addr_type = getelementptr inbounds %struct.smp_irk, ptr %call1.i, i32 0, i32 4
  %13 = ptrtoint ptr %addr_type to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %addr_type, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %if.end38.if.end43_crit_edge
  %bdaddr_type.addr.0 = phi i8 [ %14, %if.then41 ], [ %bdaddr_type, %if.end38.if.end43_crit_edge ]
  %bdaddr.addr.0 = phi ptr [ %bdaddr42, %if.then41 ], [ %bdaddr, %if.end38.if.end43_crit_edge ]
  %15 = zext i8 %bdaddr_type.addr.0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.276)
  switch i8 %bdaddr_type.addr.0, label %if.end43.sw.epilog.i288_crit_edge [
    i8 2, label %if.end43.ev_bdaddr_type.exit292_crit_edge
    i8 3, label %sw.bb1.i287
  ]

if.end43.ev_bdaddr_type.exit292_crit_edge:        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #11
  br label %ev_bdaddr_type.exit292

if.end43.sw.epilog.i288_crit_edge:                ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #11
  br label %sw.epilog.i288

sw.bb1.i287:                                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #11
  br label %ev_bdaddr_type.exit292

sw.epilog.i288:                                   ; preds = %if.end43.sw.epilog.i288_crit_edge, %hci_get_irk.exit.sw.epilog.i288_crit_edge, %hci_bdaddr_is_rpa.exit.i.sw.epilog.i288_crit_edge
  %bdaddr.addr.0322 = phi ptr [ %bdaddr.addr.0, %if.end43.sw.epilog.i288_crit_edge ], [ %bdaddr, %hci_get_irk.exit.sw.epilog.i288_crit_edge ], [ %bdaddr, %hci_bdaddr_is_rpa.exit.i.sw.epilog.i288_crit_edge ]
  %bdaddr_type.addr.0320 = phi i8 [ %bdaddr_type.addr.0, %if.end43.sw.epilog.i288_crit_edge ], [ 1, %hci_get_irk.exit.sw.epilog.i288_crit_edge ], [ 1, %hci_bdaddr_is_rpa.exit.i.sw.epilog.i288_crit_edge ]
  br label %ev_bdaddr_type.exit292

ev_bdaddr_type.exit292:                           ; preds = %sw.epilog.i288, %sw.bb1.i287, %if.end43.ev_bdaddr_type.exit292_crit_edge
  %bdaddr.addr.0321 = phi ptr [ %bdaddr.addr.0, %sw.bb1.i287 ], [ %bdaddr.addr.0322, %sw.epilog.i288 ], [ %bdaddr.addr.0, %if.end43.ev_bdaddr_type.exit292_crit_edge ]
  %tobool45 = phi i1 [ true, %sw.bb1.i287 ], [ false, %sw.epilog.i288 ], [ true, %if.end43.ev_bdaddr_type.exit292_crit_edge ]
  %retval.0.ph.i290 = phi i8 [ 1, %sw.bb1.i287 ], [ %bdaddr_type.addr.0320, %sw.epilog.i288 ], [ 0, %if.end43.ev_bdaddr_type.exit292_crit_edge ]
  %call46 = tail call fastcc ptr @check_pending_le_conn(ptr noundef %hdev, ptr noundef %bdaddr.addr.0321, i8 noundef zeroext %retval.0.ph.i290, i1 noundef zeroext %tobool45, i8 noundef zeroext %type)
  %tobool49.not = icmp ne ptr %call46, null
  %not.ext_adv = xor i1 %ext_adv, true
  %or.cond278 = select i1 %not.ext_adv, i1 %tobool49.not, i1 false
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %type)
  %cmp52 = icmp eq i8 %type, 0
  %or.cond279 = and i1 %cmp52, %or.cond278
  br i1 %or.cond279, label %land.lhs.true54, label %ev_bdaddr_type.exit292.if.end61_crit_edge

ev_bdaddr_type.exit292.if.end61_crit_edge:        ; preds = %ev_bdaddr_type.exit292
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end61

land.lhs.true54:                                  ; preds = %ev_bdaddr_type.exit292
  %conv55 = and i32 %sub.ptr.sub, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %conv55)
  %cmp56 = icmp ult i32 %conv55, 32
  br i1 %cmp56, label %if.then58, label %land.lhs.true54.if.end61_crit_edge

land.lhs.true54.if.end61_crit_edge:               ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end61

if.then58:                                        ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #11
  %le_adv_data = getelementptr inbounds %struct.hci_conn, ptr %call46, i32 0, i32 40
  %16 = call ptr @memcpy(ptr %le_adv_data, ptr %data, i32 %conv55)
  %le_adv_data_len = getelementptr inbounds %struct.hci_conn, ptr %call46, i32 0, i32 41
  %17 = ptrtoint ptr %le_adv_data_len to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv22, ptr %le_adv_data_len, align 1
  br label %if.end61

if.end61:                                         ; preds = %if.then58, %land.lhs.true54.if.end61_crit_edge, %ev_bdaddr_type.exit292.if.end61_crit_edge
  %le_scan_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 46
  %18 = ptrtoint ptr %le_scan_type to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %le_scan_type, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp63 = icmp eq i8 %19, 0
  br i1 %cmp63, label %if.then65, label %if.end87

if.then65:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %type)
  %cmp67 = icmp eq i8 %type, 1
  br i1 %cmp67, label %if.then65.cleanup_crit_edge, label %if.end70

if.then65.cleanup_crit_edge:                      ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end70:                                         ; preds = %if.then65
  %pend_le_reports = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 196
  %call71 = tail call ptr @hci_pend_le_action_lookup(ptr noundef %pend_le_reports, ptr noundef %bdaddr.addr.0321, i8 noundef zeroext %retval.0.ph.i290) #9
  %tobool72.not = icmp eq ptr %call71, null
  br i1 %tobool72.not, label %land.lhs.true73, label %if.end70.if.end77_crit_edge

if.end70.if.end77_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end77

land.lhs.true73:                                  ; preds = %if.end70
  %xa_head.i.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 218, i32 0, i32 2
  %20 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %xa_head.i.i, align 4
  %cmp.i.i = icmp eq ptr %21, null
  br i1 %cmp.i.i, label %idr_is_empty.exit, label %land.lhs.true73.if.end77_crit_edge

land.lhs.true73.if.end77_crit_edge:               ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end77

idr_is_empty.exit:                                ; preds = %land.lhs.true73
  %adv_monitors_idr = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 218
  %call2.i = tail call i32 @radix_tree_tagged(ptr noundef %adv_monitors_idr, i32 noundef 0) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.i.not = icmp eq i32 %call2.i, 0
  br i1 %tobool.i.not, label %idr_is_empty.exit.if.end77_crit_edge, label %idr_is_empty.exit.cleanup_crit_edge

idr_is_empty.exit.cleanup_crit_edge:              ; preds = %idr_is_empty.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

idr_is_empty.exit.if.end77_crit_edge:             ; preds = %idr_is_empty.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end77

if.end77:                                         ; preds = %idr_is_empty.exit.if.end77_crit_edge, %land.lhs.true73.if.end77_crit_edge, %if.end70.if.end77_crit_edge
  %22 = and i8 %type, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %22)
  %switch280 = icmp eq i8 %22, 2
  %spec.select = select i1 %switch280, i32 4, i32 0
  %23 = trunc i32 %sub.ptr.sub to i16
  %conv86 = and i16 %23, 255
  tail call void @mgmt_device_found(ptr noundef %hdev, ptr noundef %bdaddr.addr.0321, i8 noundef zeroext -128, i8 noundef zeroext %retval.0.ph.i290, ptr noundef null, i8 noundef signext %rssi, i32 noundef %spec.select, ptr noundef %data, i16 noundef zeroext %conv86, ptr noundef null, i8 noundef zeroext 0) #9
  br label %cleanup

if.end87:                                         ; preds = %if.end61
  %type.off281 = add i8 %type, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %type.off281)
  %switch282 = icmp ult i8 %type.off281, 3
  %spec.select283 = select i1 %switch282, i32 4, i32 0
  br i1 %ext_adv, label %if.end87.if.end116_crit_edge, label %land.lhs.true103

if.end87.if.end116_crit_edge:                     ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end116

land.lhs.true103:                                 ; preds = %if.end87
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %.compoundliteral.i)
  %last_adv_addr.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 6
  %24 = call ptr @memset(ptr %.compoundliteral.i, i32 0, i32 6)
  %bcmp.i = call i32 @bcmp(ptr noundef dereferenceable(6) %last_adv_addr.i, ptr noundef nonnull dereferenceable(6) %.compoundliteral.i, i32 6) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %tobool.i293.not = icmp eq i32 %bcmp.i, 0
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %.compoundliteral.i)
  br i1 %tobool.i293.not, label %if.then105, label %land.lhs.true103.if.end116_crit_edge

land.lhs.true103.if.end116_crit_edge:             ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end116

if.then105:                                       ; preds = %land.lhs.true103
  %25 = zext i8 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.277)
  switch i8 %type, label %if.end114 [
    i8 0, label %if.then105.if.then113_crit_edge
    i8 2, label %if.then105.if.then113_crit_edge334
  ]

if.then105.if.then113_crit_edge334:               ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then113

if.then105.if.then113_crit_edge:                  ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then113

if.then113:                                       ; preds = %if.then105.if.then113_crit_edge, %if.then105.if.then113_crit_edge334
  call void @__sanitizer_cov_trace_const_cmp1(i8 31, i8 %conv22)
  %cmp.i = icmp ugt i8 %conv22, 31
  br i1 %cmp.i, label %if.then113.cleanup_crit_edge, label %if.end.i295

if.then113.cleanup_crit_edge:                     ; preds = %if.then113
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end.i295:                                      ; preds = %if.then113
  call void @__sanitizer_cov_trace_pc() #11
  %conv.i = and i32 %sub.ptr.sub, 255
  %26 = call ptr @memcpy(ptr %last_adv_addr.i, ptr %bdaddr.addr.0321, i32 6)
  %last_adv_addr_type.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 7
  %27 = ptrtoint ptr %last_adv_addr_type.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %retval.0.ph.i290, ptr %last_adv_addr_type.i, align 2
  %last_adv_rssi.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 8
  %28 = ptrtoint ptr %last_adv_rssi.i to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %rssi, ptr %last_adv_rssi.i, align 1
  %last_adv_flags.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 9
  %29 = ptrtoint ptr %last_adv_flags.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %spec.select283, ptr %last_adv_flags.i, align 4
  %last_adv_data.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 10
  %30 = call ptr @memcpy(ptr %last_adv_data.i, ptr %data, i32 %conv.i)
  %last_adv_data_len.i = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 11
  %31 = ptrtoint ptr %last_adv_data_len.i to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %conv22, ptr %last_adv_data_len.i, align 1
  br label %cleanup

if.end114:                                        ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #11
  %32 = trunc i32 %sub.ptr.sub to i16
  %conv115 = and i16 %32, 255
  tail call void @mgmt_device_found(ptr noundef %hdev, ptr noundef %bdaddr.addr.0321, i8 noundef zeroext -128, i8 noundef zeroext %retval.0.ph.i290, ptr noundef null, i8 noundef signext %rssi, i32 noundef %spec.select283, ptr noundef %data, i16 noundef zeroext %conv115, ptr noundef null, i8 noundef zeroext 0) #9
  br label %cleanup

if.end116:                                        ; preds = %land.lhs.true103.if.end116_crit_edge, %if.end87.if.end116_crit_edge
  %last_adv_addr = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 6
  %bcmp = tail call i32 @bcmp(ptr noundef dereferenceable(6) %bdaddr.addr.0321, ptr noundef dereferenceable(6) %last_adv_addr, i32 6) #12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool118.not = icmp eq i32 %bcmp, 0
  br i1 %tobool118.not, label %land.end124, label %if.end116.if.then133_crit_edge

if.end116.if.then133_crit_edge:                   ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then133

land.end124:                                      ; preds = %if.end116
  %last_adv_addr_type = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 7
  %33 = ptrtoint ptr %last_adv_addr_type to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %last_adv_addr_type, align 2
  call void @__sanitizer_cov_trace_cmp1(i8 %retval.0.ph.i290, i8 %34)
  %cmp122 = icmp eq i8 %retval.0.ph.i290, %34
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %type)
  %cmp127.not = icmp ne i8 %type, 4
  %.not = xor i1 %cmp122, true
  %brmerge = select i1 %cmp127.not, i1 true, i1 %.not
  br i1 %brmerge, label %if.then131, label %if.end151

if.then131:                                       ; preds = %land.end124
  br i1 %cmp122, label %if.then131.if.end138_crit_edge, label %if.then131.if.then133_crit_edge

if.then131.if.then133_crit_edge:                  ; preds = %if.then131
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then133

if.then131.if.end138_crit_edge:                   ; preds = %if.then131
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end138

if.then133:                                       ; preds = %if.then131.if.then133_crit_edge, %if.end116.if.then133_crit_edge
  %last_adv_addr_type135 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 7
  %35 = ptrtoint ptr %last_adv_addr_type135 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %last_adv_addr_type135, align 2
  %last_adv_rssi = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 8
  %37 = ptrtoint ptr %last_adv_rssi to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %last_adv_rssi, align 1
  %last_adv_flags = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 9
  %39 = ptrtoint ptr %last_adv_flags to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %last_adv_flags, align 4
  %last_adv_data = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 10
  %last_adv_data_len = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 11
  %41 = ptrtoint ptr %last_adv_data_len to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %last_adv_data_len, align 1
  %conv137 = zext i8 %42 to i16
  tail call void @mgmt_device_found(ptr noundef %hdev, ptr noundef %last_adv_addr, i8 noundef zeroext -128, i8 noundef zeroext %36, ptr noundef null, i8 noundef signext %38, i32 noundef %40, ptr noundef %last_adv_data, i16 noundef zeroext %conv137, ptr noundef null, i8 noundef zeroext 0) #9
  br label %if.end138

if.end138:                                        ; preds = %if.then133, %if.then131.if.end138_crit_edge
  br i1 %ext_adv, label %if.end138.if.end149_crit_edge, label %land.lhs.true140

if.end138.if.end149_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end149

land.lhs.true140:                                 ; preds = %if.end138
  %43 = zext i8 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %43, ptr @__sancov_gen_cov_switch_values.278)
  switch i8 %type, label %land.lhs.true140.if.end149_crit_edge [
    i8 0, label %land.lhs.true140.if.then148_crit_edge
    i8 2, label %land.lhs.true140.if.then148_crit_edge335
  ]

land.lhs.true140.if.then148_crit_edge335:         ; preds = %land.lhs.true140
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then148

land.lhs.true140.if.then148_crit_edge:            ; preds = %land.lhs.true140
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.then148

land.lhs.true140.if.end149_crit_edge:             ; preds = %land.lhs.true140
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end149

if.then148:                                       ; preds = %land.lhs.true140.if.then148_crit_edge, %land.lhs.true140.if.then148_crit_edge335
  call void @__sanitizer_cov_trace_const_cmp1(i8 31, i8 %conv22)
  %cmp.i296 = icmp ugt i8 %conv22, 31
  br i1 %cmp.i296, label %if.then148.cleanup_crit_edge, label %if.end.i304

if.then148.cleanup_crit_edge:                     ; preds = %if.then148
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end.i304:                                      ; preds = %if.then148
  call void @__sanitizer_cov_trace_pc() #11
  %conv.i297 = and i32 %sub.ptr.sub, 255
  %44 = call ptr @memcpy(ptr %last_adv_addr, ptr %bdaddr.addr.0321, i32 6)
  %last_adv_addr_type.i299 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 7
  %45 = ptrtoint ptr %last_adv_addr_type.i299 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 %retval.0.ph.i290, ptr %last_adv_addr_type.i299, align 2
  %last_adv_rssi.i300 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 8
  %46 = ptrtoint ptr %last_adv_rssi.i300 to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 %rssi, ptr %last_adv_rssi.i300, align 1
  %last_adv_flags.i301 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 9
  %47 = ptrtoint ptr %last_adv_flags.i301 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %spec.select283, ptr %last_adv_flags.i301, align 4
  %last_adv_data.i302 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 10
  %48 = call ptr @memcpy(ptr %last_adv_data.i302, ptr %data, i32 %conv.i297)
  %last_adv_data_len.i303 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 11
  %49 = ptrtoint ptr %last_adv_data_len.i303 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %conv22, ptr %last_adv_data_len.i303, align 1
  br label %cleanup

if.end149:                                        ; preds = %land.lhs.true140.if.end149_crit_edge, %if.end138.if.end149_crit_edge
  %last_adv_data_len.i307 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 11
  %50 = ptrtoint ptr %last_adv_data_len.i307 to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 0, ptr %last_adv_data_len.i307, align 1
  %51 = call ptr @memset(ptr %last_adv_addr, i32 0, i32 6)
  %52 = trunc i32 %sub.ptr.sub to i16
  %conv150 = and i16 %52, 255
  tail call void @mgmt_device_found(ptr noundef %hdev, ptr noundef %bdaddr.addr.0321, i8 noundef zeroext -128, i8 noundef zeroext %retval.0.ph.i290, ptr noundef null, i8 noundef signext %rssi, i32 noundef %spec.select283, ptr noundef %data, i16 noundef zeroext %conv150, ptr noundef null, i8 noundef zeroext 0) #9
  br label %cleanup

if.end151:                                        ; preds = %land.end124
  call void @__sanitizer_cov_trace_pc() #11
  %53 = ptrtoint ptr %last_adv_addr_type to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %last_adv_addr_type, align 2
  %last_adv_flags154 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 9
  %55 = ptrtoint ptr %last_adv_flags154 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %last_adv_flags154, align 4
  %last_adv_data155 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 10
  %last_adv_data_len157 = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 170, i32 11
  %57 = ptrtoint ptr %last_adv_data_len157 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %last_adv_data_len157, align 1
  %conv158 = zext i8 %58 to i16
  tail call void @mgmt_device_found(ptr noundef %hdev, ptr noundef %last_adv_addr, i8 noundef zeroext -128, i8 noundef zeroext %54, ptr noundef null, i8 noundef signext %rssi, i32 noundef %56, ptr noundef %last_adv_data155, i16 noundef zeroext %conv158, ptr noundef %data, i8 noundef zeroext %conv22) #9
  %59 = ptrtoint ptr %last_adv_data_len157 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 0, ptr %last_adv_data_len157, align 1
  %60 = call ptr @memset(ptr %last_adv_addr, i32 0, i32 6)
  br label %cleanup

cleanup:                                          ; preds = %if.end151, %if.end149, %if.end.i304, %if.then148.cleanup_crit_edge, %if.end114, %if.end.i295, %if.then113.cleanup_crit_edge, %if.end77, %idr_is_empty.exit.cleanup_crit_edge, %if.then65.cleanup_crit_edge, %if.end32.cleanup_crit_edge, %if.end27.cleanup_crit_edge, %hci_bdaddr_is_rpa.exit.cleanup_crit_edge, %if.then24.cleanup_crit_edge, %if.then, %sw.default
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bt_err_ratelimited(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @smp_irk_matches(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @check_pending_le_conn(ptr noundef %hdev, ptr noundef %addr, i8 noundef zeroext %addr_type, i1 noundef zeroext %addr_resolved, i8 noundef zeroext %adv_type) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %adv_type)
  %switch = icmp ult i8 %adv_type, 2
  br i1 %switch, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  %reject_list = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 185
  %call = tail call ptr @hci_bdaddr_list_lookup(ptr noundef %reject_list, ptr noundef %addr, i8 noundef zeroext %addr_type) #9
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %lor.lhs.false, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %suspended = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 179
  %0 = ptrtoint ptr %suspended to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %suspended, align 1, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool5.not = icmp eq i8 %1, 0
  br i1 %tobool5.not, label %if.end8, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end8:                                          ; preds = %lor.lhs.false
  %le_num_peripheral = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 183, i32 5
  %2 = ptrtoint ptr %le_num_peripheral to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %le_num_peripheral, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp9.not = icmp eq i32 %3, 0
  br i1 %cmp9.not, label %if.end8.if.end18_crit_edge, label %land.lhs.true11

if.end8.if.end18_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

land.lhs.true11:                                  ; preds = %if.end8
  %quirks = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 118
  %4 = ptrtoint ptr %quirks to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %quirks, align 4
  %6 = and i32 %5, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool13.not = icmp eq i32 %6, 0
  br i1 %tobool13.not, label %land.lhs.true11.cleanup_crit_edge, label %lor.lhs.false14

land.lhs.true11.cleanup_crit_edge:                ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

lor.lhs.false14:                                  ; preds = %land.lhs.true11
  %arrayidx = getelementptr %struct.hci_dev, ptr %hdev, i32 0, i32 26, i32 3
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx, align 1
  %9 = and i8 %8, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool16.not = icmp eq i8 %9, 0
  br i1 %tobool16.not, label %lor.lhs.false14.cleanup_crit_edge, label %lor.lhs.false14.if.end18_crit_edge

lor.lhs.false14.if.end18_crit_edge:               ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end18

lor.lhs.false14.cleanup_crit_edge:                ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end18:                                         ; preds = %lor.lhs.false14.if.end18_crit_edge, %if.end8.if.end18_crit_edge
  %pend_le_conns = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 195
  %call19 = tail call ptr @hci_pend_le_action_lookup(ptr noundef %pend_le_conns, ptr noundef %addr, i8 noundef zeroext %addr_type) #9
  %tobool20.not = icmp eq ptr %call19, null
  br i1 %tobool20.not, label %if.end18.cleanup_crit_edge, label %if.end22

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end22:                                         ; preds = %if.end18
  %explicit_connect = getelementptr inbounds %struct.hci_conn_params, ptr %call19, i32 0, i32 10
  %10 = ptrtoint ptr %explicit_connect to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %explicit_connect, align 4, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool23.not = icmp eq i8 %11, 0
  br i1 %tobool23.not, label %if.then24, label %if.end22.if.end30_crit_edge

if.end22.if.end30_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end30

if.then24:                                        ; preds = %if.end22
  %auto_connect = getelementptr inbounds %struct.hci_conn_params, ptr %call19, i32 0, i32 8
  %12 = ptrtoint ptr %auto_connect to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %auto_connect, align 4
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.279)
  switch i32 %13, label %if.then24.cleanup_crit_edge [
    i32 2, label %sw.bb
    i32 3, label %if.then24.if.end30_crit_edge
  ]

if.then24.if.end30_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end30

if.then24.cleanup_crit_edge:                      ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

sw.bb:                                            ; preds = %if.then24
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %adv_type)
  %cmp26.not = icmp eq i8 %adv_type, 1
  br i1 %cmp26.not, label %sw.bb.if.end30_crit_edge, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

sw.bb.if.end30_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end30

if.end30:                                         ; preds = %sw.bb.if.end30_crit_edge, %if.then24.if.end30_crit_edge, %if.end22.if.end30_crit_edge
  %def_le_autoconnect_timeout = getelementptr inbounds %struct.hci_dev, ptr %hdev, i32 0, i32 95
  %15 = ptrtoint ptr %def_le_autoconnect_timeout to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %def_le_autoconnect_timeout, align 8
  %call32 = tail call ptr @hci_connect_le(ptr noundef %hdev, ptr noundef %addr, i8 noundef zeroext %addr_type, i1 noundef zeroext %addr_resolved, i8 noundef zeroext 1, i16 noundef zeroext %16, i8 noundef zeroext 0) #9
  %cmp.i = icmp ugt ptr %call32, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end41, label %if.then34

if.then34:                                        ; preds = %if.end30
  %17 = ptrtoint ptr %explicit_connect to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %explicit_connect, align 4, !range !679
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool36.not = icmp eq i8 %18, 0
  br i1 %tobool36.not, label %if.then37, label %if.then34.cleanup_crit_edge

if.then34.cleanup_crit_edge:                      ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.then37:                                        ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #11
  %dev.i = getelementptr inbounds %struct.hci_conn, ptr %call32, i32 0, i32 63
  %call.i = tail call ptr @get_device(ptr noundef %dev.i) #9
  %conn39 = getelementptr inbounds %struct.hci_conn_params, ptr %call19, i32 0, i32 9
  %19 = ptrtoint ptr %conn39 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call32, ptr %conn39, align 4
  br label %cleanup

if.end41:                                         ; preds = %if.end30
  %20 = ptrtoint ptr %call32 to i32
  %cond = icmp eq ptr %call32, inttoptr (i32 -16 to ptr)
  br i1 %cond, label %if.end41.cleanup_crit_edge, label %do.body

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.body:                                          ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #11
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @check_pending_le_conn.__UNIQUE_ID_ddebug652, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@check_pending_le_conn, %if.then49)) #9
          to label %cleanup [label %if.then49], !srcloc !680

if.then49:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #11
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @check_pending_le_conn.__UNIQUE_ID_ddebug652, ptr noundef nonnull @.str.218, i32 noundef %20) #9
  br label %cleanup

cleanup:                                          ; preds = %if.then49, %do.body, %if.end41.cleanup_crit_edge, %if.then37, %if.then34.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %if.then24.cleanup_crit_edge, %if.end18.cleanup_crit_edge, %lor.lhs.false14.cleanup_crit_edge, %land.lhs.true11.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ null, %lor.lhs.false.cleanup_crit_edge ], [ null, %if.end.cleanup_crit_edge ], [ null, %lor.lhs.false14.cleanup_crit_edge ], [ null, %land.lhs.true11.cleanup_crit_edge ], [ null, %if.end18.cleanup_crit_edge ], [ null, %sw.bb.cleanup_crit_edge ], [ null, %if.then24.cleanup_crit_edge ], [ %call32, %if.then37 ], [ %call32, %if.then34.cleanup_crit_edge ], [ null, %if.then49 ], [ null, %if.end41.cleanup_crit_edge ], [ null, %do.body ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_connect_le(ptr noundef, ptr noundef, i8 noundef zeroext, i1 noundef zeroext, i8 noundef zeroext, i16 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @radix_tree_tagged(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_find_ltk(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mgmt_new_conn_param(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i16 noundef zeroext, i16 noundef zeroext, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amp_physical_cfm(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amp_read_loc_assoc_final_data(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_chan_create(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @l2cap_logical_cfm(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @hci_chan_lookup_handle(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amp_destroy_logical_link(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umin.i16(i16, i16) #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #4

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #9

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #10 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 250)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #10 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 250)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { nounwind readonly }
attributes #6 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #7 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { argmemonly nofree nounwind readonly willreturn }
attributes #9 = { nounwind }
attributes #10 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #11 = { nomerge }
attributes #12 = { nobuiltin }
attributes #13 = { nobuiltin nounwind }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !8, !9, !10, !12, !14, !16, !18, !19, !20, !22, !23, !24, !26, !27, !29, !31, !32, !33, !35, !36, !37, !39, !40, !42, !43, !44, !46, !47, !48, !50, !52, !54, !55, !57, !59, !60, !62, !64, !65, !67, !68, !70, !72, !73, !75, !77, !78, !79, !81, !83, !85, !86, !88, !89, !91, !92, !93, !95, !97, !99, !100, !102, !104, !105, !107, !108, !110, !111, !113, !114, !116, !117, !119, !120, !122, !123, !125, !126, !128, !129, !131, !132, !134, !135, !137, !138, !140, !141, !143, !144, !146, !147, !149, !150, !152, !153, !155, !156, !158, !159, !161, !162, !164, !165, !167, !168, !170, !171, !173, !175, !176, !178, !179, !181, !182, !184, !185, !187, !188, !190, !191, !193, !194, !196, !197, !199, !200, !202, !203, !205, !206, !208, !209, !211, !212, !214, !215, !217, !218, !220, !221, !223, !224, !226, !227, !229, !230, !232, !233, !235, !236, !238, !239, !241, !242, !244, !245, !247, !248, !250, !251, !253, !254, !256, !257, !259, !260, !262, !263, !265, !266, !268, !269, !271, !272, !273, !275, !276, !278, !279, !281, !282, !284, !285, !287, !288, !290, !291, !293, !294, !296, !298, !299, !301, !302, !304, !306, !307, !308, !310, !311, !313, !314, !316, !317, !319, !320, !322, !323, !325, !326, !328, !329, !331, !332, !334, !335, !337, !338, !340, !341, !343, !344, !346, !347, !349, !350, !352, !353, !355, !356, !358, !359, !361, !362, !364, !365, !367, !368, !370, !371, !372, !374, !375, !377, !378, !380, !381, !383, !384, !386, !387, !389, !390, !392, !393, !395, !397, !399, !401, !402, !404, !406, !407, !409, !410, !412, !413, !415, !416, !418, !419, !421, !422, !424, !425, !427, !428, !430, !431, !433, !434, !436, !437, !439, !440, !442, !444, !445, !447, !449, !450, !452, !453, !455, !456, !458, !459, !461, !463, !464, !466, !467, !469, !470, !472, !473, !474, !476, !477, !479, !481, !482, !484, !486, !487, !489, !490, !491, !493, !494, !496, !497, !499, !500, !502, !503, !505, !506, !508, !509, !511, !512, !514, !515, !517, !518, !520, !521, !522, !524, !526, !527, !529, !530, !532, !534, !535, !537, !538, !540, !541, !542, !544, !545, !547, !549, !550, !552, !553, !555, !556, !558, !559, !561, !562, !564, !565, !567, !568, !570, !571, !573, !574, !576, !577, !579, !580, !582, !583, !585, !586, !587, !589, !591, !593, !595, !596, !598, !600, !602, !604, !605, !606, !608, !609, !611, !612, !614, !615, !617, !618, !620, !621, !623, !624, !626, !628, !629, !631, !633, !635, !636, !637, !639, !640, !641, !643, !644, !646, !647, !648, !650, !651, !653, !654, !655, !657, !658, !659, !661, !663, !665, !667, !668}
!llvm.named.register.sp = !{!669}
!llvm.module.flags = !{!670, !671, !672, !673, !674, !675, !676, !677}
!llvm.ident = !{!678}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../net/bluetooth/hci_event.c", i32 6850, i32 3}
!2 = !{ptr @.str.1, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../net/bluetooth/hci_event.c", i32 6856, i32 3}
!4 = !{ptr @.str.2, !5, !"<string literal>", i1 false, i1 false}
!5 = !{!"../net/bluetooth/hci_event.c", i32 6884, i32 2}
!6 = !{ptr @.str.3, !5, !"<string literal>", i1 false, i1 false}
!7 = !{ptr @.str.4, !5, !"<string literal>", i1 false, i1 false}
!8 = !{ptr @.str.5, !5, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @hci_event_packet.__UNIQUE_ID_ddebug660, !5, !"__UNIQUE_ID_ddebug660", i1 false, i1 false}
!10 = !{ptr @.str.6, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../net/bluetooth/hci_event.c", i32 6816, i32 3}
!12 = !{ptr @.str.7, !13, !"<string literal>", i1 false, i1 false}
!13 = !{!"../net/bluetooth/hci_event.c", i32 6826, i32 3}
!14 = !{ptr @hci_ev_table, !15, !"hci_ev_table", i1 false, i1 false}
!15 = !{!"../net/bluetooth/hci_event.c", i32 6663, i32 3}
!16 = !{ptr @.str.8, !17, !"<string literal>", i1 false, i1 false}
!17 = !{!"../net/bluetooth/hci_event.c", i32 2967, i32 2}
!18 = !{ptr @.str.9, !17, !"<string literal>", i1 false, i1 false}
!19 = !{ptr @hci_inquiry_complete_evt.__UNIQUE_ID_ddebug594, !17, !"__UNIQUE_ID_ddebug594", i1 false, i1 false}
!20 = !{ptr @.str.10, !21, !"<string literal>", i1 false, i1 false}
!21 = !{!"../net/bluetooth/hci_event.c", i32 3032, i32 2}
!22 = !{ptr @.str.11, !21, !"<string literal>", i1 false, i1 false}
!23 = !{ptr @hci_inquiry_result_evt.__UNIQUE_ID_ddebug595, !21, !"__UNIQUE_ID_ddebug595", i1 false, i1 false}
!24 = !{ptr @.str.12, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../net/bluetooth/hci_event.c", i32 3071, i32 2}
!26 = !{ptr @hci_conn_complete_evt.__UNIQUE_ID_ddebug596, !25, !"__UNIQUE_ID_ddebug596", i1 false, i1 false}
!27 = !{ptr @.str.13, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../net/bluetooth/hci_event.c", i32 3093, i32 5}
!29 = distinct !{null, !30, !"__warned", i1 false, i1 false}
!30 = !{!"../include/net/bluetooth/hci_core.h", i32 1033, i32 2}
!31 = !{ptr @.str.14, !30, !"<string literal>", i1 false, i1 false}
!32 = !{ptr @.str.15, !30, !"<string literal>", i1 false, i1 false}
!33 = distinct !{null, !34, !"__warned", i1 false, i1 false}
!34 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!35 = !{ptr @.str.16, !34, !"<string literal>", i1 false, i1 false}
!36 = !{ptr @.str.17, !34, !"<string literal>", i1 false, i1 false}
!37 = distinct !{null, !38, !"__warned", i1 false, i1 false}
!38 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!39 = !{ptr @.str.18, !38, !"<string literal>", i1 false, i1 false}
!40 = !{ptr @.str.19, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../include/net/bluetooth/hci_core.h", i32 1180, i32 2}
!42 = !{ptr @.str.20, !41, !"<string literal>", i1 false, i1 false}
!43 = !{ptr @hci_conn_hold.__UNIQUE_ID_ddebug471, !41, !"__UNIQUE_ID_ddebug471", i1 false, i1 false}
!44 = !{ptr @.str.21, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../net/bluetooth/hci_event.c", i32 3199, i32 2}
!46 = !{ptr @.str.22, !45, !"<string literal>", i1 false, i1 false}
!47 = !{ptr @hci_conn_request_evt.__UNIQUE_ID_ddebug597, !45, !"__UNIQUE_ID_ddebug597", i1 false, i1 false}
!48 = !{ptr @.str.23, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../net/bluetooth/hci_event.c", i32 3241, i32 4}
!50 = !{ptr @.str.24, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../include/net/bluetooth/hci_core.h", i32 1515, i32 3}
!52 = !{ptr @.str.25, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../net/bluetooth/hci_event.c", i32 3310, i32 2}
!54 = !{ptr @hci_disconn_complete_evt.__UNIQUE_ID_ddebug598, !53, !"__UNIQUE_ID_ddebug598", i1 false, i1 false}
!55 = distinct !{null, !56, !"__warned", i1 false, i1 false}
!56 = !{!"../include/net/bluetooth/hci_core.h", i32 1014, i32 2}
!57 = !{ptr @.str.26, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../net/bluetooth/hci_event.c", i32 3392, i32 2}
!59 = !{ptr @hci_auth_complete_evt.__UNIQUE_ID_ddebug599, !58, !"__UNIQUE_ID_ddebug599", i1 false, i1 false}
!60 = !{ptr @.str.27, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../net/bluetooth/hci_event.c", i32 3405, i32 4}
!62 = !{ptr @.str.28, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../include/net/bluetooth/hci_core.h", i32 1188, i32 2}
!64 = !{ptr @hci_conn_drop.__UNIQUE_ID_ddebug472, !63, !"__UNIQUE_ID_ddebug472", i1 false, i1 false}
!65 = !{ptr @.str.29, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../net/bluetooth/hci_event.c", i32 3463, i32 2}
!67 = !{ptr @hci_remote_name_evt.__UNIQUE_ID_ddebug600, !66, !"__UNIQUE_ID_ddebug600", i1 false, i1 false}
!68 = !{ptr @.str.30, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../net/bluetooth/hci_event.c", i32 2409, i32 3}
!70 = !{ptr @.str.31, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../net/bluetooth/hci_event.c", i32 3547, i32 2}
!72 = !{ptr @hci_encrypt_change_evt.__UNIQUE_ID_ddebug602, !71, !"__UNIQUE_ID_ddebug602", i1 false, i1 false}
!73 = !{ptr @.str.32, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../net/bluetooth/hci_event.c", i32 3622, i32 4}
!75 = !{ptr @.str.33, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../net/bluetooth/hci_event.c", i32 3507, i32 2}
!77 = !{ptr @.str.34, !76, !"<string literal>", i1 false, i1 false}
!78 = !{ptr @read_enc_key_size_complete.__UNIQUE_ID_ddebug601, !76, !"__UNIQUE_ID_ddebug601", i1 false, i1 false}
!79 = !{ptr @.str.35, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../net/bluetooth/hci_event.c", i32 3510, i32 3}
!81 = !{ptr @.str.36, !82, !"<string literal>", i1 false, i1 false}
!82 = !{!"../net/bluetooth/hci_event.c", i32 3528, i32 3}
!83 = !{ptr @.str.37, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../net/bluetooth/hci_event.c", i32 3662, i32 2}
!85 = !{ptr @hci_change_link_key_complete_evt.__UNIQUE_ID_ddebug603, !84, !"__UNIQUE_ID_ddebug603", i1 false, i1 false}
!86 = !{ptr @.str.38, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../net/bluetooth/hci_event.c", i32 3685, i32 2}
!88 = !{ptr @hci_remote_features_evt.__UNIQUE_ID_ddebug604, !87, !"__UNIQUE_ID_ddebug604", i1 false, i1 false}
!89 = !{ptr @.str.39, !90, !"<string literal>", i1 false, i1 false}
!90 = !{!"../net/bluetooth/hci_event.c", i32 3957, i32 2}
!91 = !{ptr @.str.40, !90, !"<string literal>", i1 false, i1 false}
!92 = !{ptr @hci_cmd_complete_evt.__UNIQUE_ID_ddebug605, !90, !"__UNIQUE_ID_ddebug605", i1 false, i1 false}
!93 = !{ptr @.str.41, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../net/bluetooth/hci_event.c", i32 3972, i32 3}
!95 = !{ptr @hci_cc_table, !96, !"hci_cc_table", i1 false, i1 false}
!96 = !{!"../net/bluetooth/hci_event.c", i32 3762, i32 3}
!97 = !{ptr @.str.42, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../net/bluetooth/hci_event.c", i32 89, i32 2}
!99 = !{ptr @hci_cc_inquiry_cancel.__UNIQUE_ID_ddebug476, !98, !"__UNIQUE_ID_ddebug476", i1 false, i1 false}
!100 = !{ptr @.str.43, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../net/bluetooth/hci_event.c", i32 99, i32 3}
!102 = !{ptr @.str.44, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../net/bluetooth/hci_event.c", i32 129, i32 2}
!104 = !{ptr @hci_cc_periodic_inq.__UNIQUE_ID_ddebug477, !103, !"__UNIQUE_ID_ddebug477", i1 false, i1 false}
!105 = !{ptr @.str.45, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../net/bluetooth/hci_event.c", i32 144, i32 2}
!107 = !{ptr @hci_cc_exit_periodic_inq.__UNIQUE_ID_ddebug478, !106, !"__UNIQUE_ID_ddebug478", i1 false, i1 false}
!108 = !{ptr @.str.46, !109, !"<string literal>", i1 false, i1 false}
!109 = !{!"../net/bluetooth/hci_event.c", i32 161, i32 2}
!110 = !{ptr @hci_cc_remote_name_req_cancel.__UNIQUE_ID_ddebug479, !109, !"__UNIQUE_ID_ddebug479", i1 false, i1 false}
!111 = !{ptr @.str.47, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../net/bluetooth/hci_event.c", i32 172, i32 2}
!113 = !{ptr @hci_cc_role_discovery.__UNIQUE_ID_ddebug480, !112, !"__UNIQUE_ID_ddebug480", i1 false, i1 false}
!114 = !{ptr @.str.48, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../net/bluetooth/hci_event.c", i32 194, i32 2}
!116 = !{ptr @hci_cc_read_link_policy.__UNIQUE_ID_ddebug481, !115, !"__UNIQUE_ID_ddebug481", i1 false, i1 false}
!117 = !{ptr @.str.49, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../net/bluetooth/hci_event.c", i32 217, i32 2}
!119 = !{ptr @hci_cc_write_link_policy.__UNIQUE_ID_ddebug482, !118, !"__UNIQUE_ID_ddebug482", i1 false, i1 false}
!120 = !{ptr @.str.50, !121, !"<string literal>", i1 false, i1 false}
!121 = !{!"../net/bluetooth/hci_event.c", i32 242, i32 2}
!122 = !{ptr @hci_cc_read_def_link_policy.__UNIQUE_ID_ddebug483, !121, !"__UNIQUE_ID_ddebug483", i1 false, i1 false}
!123 = !{ptr @.str.51, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../net/bluetooth/hci_event.c", i32 258, i32 2}
!125 = !{ptr @hci_cc_write_def_link_policy.__UNIQUE_ID_ddebug484, !124, !"__UNIQUE_ID_ddebug484", i1 false, i1 false}
!126 = !{ptr @.str.52, !127, !"<string literal>", i1 false, i1 false}
!127 = !{!"../net/bluetooth/hci_event.c", i32 276, i32 2}
!128 = !{ptr @hci_cc_reset.__UNIQUE_ID_ddebug485, !127, !"__UNIQUE_ID_ddebug485", i1 false, i1 false}
!129 = !{ptr @.str.53, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../net/bluetooth/hci_event.c", i32 313, i32 2}
!131 = !{ptr @hci_cc_read_stored_link_key.__UNIQUE_ID_ddebug486, !130, !"__UNIQUE_ID_ddebug486", i1 false, i1 false}
!132 = !{ptr @.str.54, !133, !"<string literal>", i1 false, i1 false}
!133 = !{!"../net/bluetooth/hci_event.c", i32 332, i32 2}
!134 = !{ptr @hci_cc_delete_stored_link_key.__UNIQUE_ID_ddebug487, !133, !"__UNIQUE_ID_ddebug487", i1 false, i1 false}
!135 = !{ptr @.str.55, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../net/bluetooth/hci_event.c", i32 351, i32 2}
!137 = !{ptr @hci_cc_write_local_name.__UNIQUE_ID_ddebug488, !136, !"__UNIQUE_ID_ddebug488", i1 false, i1 false}
!138 = !{ptr @.str.56, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../net/bluetooth/hci_event.c", i32 374, i32 2}
!140 = !{ptr @hci_cc_read_local_name.__UNIQUE_ID_ddebug489, !139, !"__UNIQUE_ID_ddebug489", i1 false, i1 false}
!141 = !{ptr @.str.57, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../net/bluetooth/hci_event.c", i32 392, i32 2}
!143 = !{ptr @hci_cc_write_auth_enable.__UNIQUE_ID_ddebug490, !142, !"__UNIQUE_ID_ddebug490", i1 false, i1 false}
!144 = !{ptr @.str.58, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../net/bluetooth/hci_event.c", i32 424, i32 2}
!146 = !{ptr @hci_cc_write_encrypt_mode.__UNIQUE_ID_ddebug491, !145, !"__UNIQUE_ID_ddebug491", i1 false, i1 false}
!147 = !{ptr @.str.59, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../net/bluetooth/hci_event.c", i32 450, i32 2}
!149 = !{ptr @hci_cc_write_scan_enable.__UNIQUE_ID_ddebug492, !148, !"__UNIQUE_ID_ddebug492", i1 false, i1 false}
!150 = !{ptr @.str.60, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../net/bluetooth/hci_event.c", i32 488, i32 2}
!152 = !{ptr @hci_cc_set_event_filter.__UNIQUE_ID_ddebug493, !151, !"__UNIQUE_ID_ddebug493", i1 false, i1 false}
!153 = !{ptr @.str.61, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../net/bluetooth/hci_event.c", i32 512, i32 2}
!155 = !{ptr @hci_cc_read_class_of_dev.__UNIQUE_ID_ddebug494, !154, !"__UNIQUE_ID_ddebug494", i1 false, i1 false}
!156 = !{ptr @.str.62, !157, !"<string literal>", i1 false, i1 false}
!157 = !{!"../net/bluetooth/hci_event.c", i32 519, i32 2}
!158 = !{ptr @hci_cc_read_class_of_dev.__UNIQUE_ID_ddebug495, !157, !"__UNIQUE_ID_ddebug495", i1 false, i1 false}
!159 = !{ptr @.str.63, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../net/bluetooth/hci_event.c", i32 531, i32 2}
!161 = !{ptr @hci_cc_write_class_of_dev.__UNIQUE_ID_ddebug496, !160, !"__UNIQUE_ID_ddebug496", i1 false, i1 false}
!162 = !{ptr @.str.64, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../net/bluetooth/hci_event.c", i32 556, i32 2}
!164 = !{ptr @hci_cc_read_voice_setting.__UNIQUE_ID_ddebug497, !163, !"__UNIQUE_ID_ddebug497", i1 false, i1 false}
!165 = !{ptr @.str.65, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../net/bluetooth/hci_event.c", i32 568, i32 2}
!167 = !{ptr @hci_cc_read_voice_setting.__UNIQUE_ID_ddebug498, !166, !"__UNIQUE_ID_ddebug498", i1 false, i1 false}
!168 = !{ptr @.str.66, !169, !"<string literal>", i1 false, i1 false}
!169 = !{!"../net/bluetooth/hci_event.c", i32 583, i32 2}
!170 = !{ptr @hci_cc_write_voice_setting.__UNIQUE_ID_ddebug499, !169, !"__UNIQUE_ID_ddebug499", i1 false, i1 false}
!171 = !{ptr @hci_cc_write_voice_setting.__UNIQUE_ID_ddebug500, !172, !"__UNIQUE_ID_ddebug500", i1 false, i1 false}
!172 = !{!"../net/bluetooth/hci_event.c", i32 599, i32 2}
!173 = !{ptr @.str.67, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../net/bluetooth/hci_event.c", i32 612, i32 2}
!175 = !{ptr @hci_cc_read_num_supported_iac.__UNIQUE_ID_ddebug501, !174, !"__UNIQUE_ID_ddebug501", i1 false, i1 false}
!176 = !{ptr @.str.68, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../net/bluetooth/hci_event.c", i32 619, i32 2}
!178 = !{ptr @hci_cc_read_num_supported_iac.__UNIQUE_ID_ddebug502, !177, !"__UNIQUE_ID_ddebug502", i1 false, i1 false}
!179 = !{ptr @.str.69, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../net/bluetooth/hci_event.c", i32 630, i32 2}
!181 = !{ptr @hci_cc_write_ssp_mode.__UNIQUE_ID_ddebug503, !180, !"__UNIQUE_ID_ddebug503", i1 false, i1 false}
!182 = !{ptr @.str.70, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../net/bluetooth/hci_event.c", i32 663, i32 2}
!184 = !{ptr @hci_cc_write_sc_support.__UNIQUE_ID_ddebug504, !183, !"__UNIQUE_ID_ddebug504", i1 false, i1 false}
!185 = !{ptr @.str.71, !186, !"<string literal>", i1 false, i1 false}
!186 = !{!"../net/bluetooth/hci_event.c", i32 735, i32 2}
!187 = !{ptr @hci_cc_read_auth_payload_timeout.__UNIQUE_ID_ddebug507, !186, !"__UNIQUE_ID_ddebug507", i1 false, i1 false}
!188 = !{ptr @.str.72, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../net/bluetooth/hci_event.c", i32 758, i32 2}
!190 = !{ptr @hci_cc_write_auth_payload_timeout.__UNIQUE_ID_ddebug508, !189, !"__UNIQUE_ID_ddebug508", i1 false, i1 false}
!191 = !{ptr @.str.73, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../net/bluetooth/hci_event.c", i32 695, i32 2}
!193 = !{ptr @hci_cc_read_local_version.__UNIQUE_ID_ddebug505, !192, !"__UNIQUE_ID_ddebug505", i1 false, i1 false}
!194 = !{ptr @.str.74, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../net/bluetooth/hci_event.c", i32 717, i32 2}
!196 = !{ptr @hci_cc_read_local_commands.__UNIQUE_ID_ddebug506, !195, !"__UNIQUE_ID_ddebug506", i1 false, i1 false}
!197 = !{ptr @.str.75, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../net/bluetooth/hci_event.c", i32 783, i32 2}
!199 = !{ptr @hci_cc_read_local_features.__UNIQUE_ID_ddebug509, !198, !"__UNIQUE_ID_ddebug509", i1 false, i1 false}
!200 = !{ptr @.str.76, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../net/bluetooth/hci_event.c", i32 835, i32 2}
!202 = !{ptr @hci_cc_read_local_ext_features.__UNIQUE_ID_ddebug510, !201, !"__UNIQUE_ID_ddebug510", i1 false, i1 false}
!203 = !{ptr @.str.77, !204, !"<string literal>", i1 false, i1 false}
!204 = !{!"../net/bluetooth/hci_event.c", i32 869, i32 2}
!205 = !{ptr @hci_cc_read_buffer_size.__UNIQUE_ID_ddebug512, !204, !"__UNIQUE_ID_ddebug512", i1 false, i1 false}
!206 = !{ptr @.str.78, !207, !"<string literal>", i1 false, i1 false}
!207 = !{!"../net/bluetooth/hci_event.c", i32 887, i32 2}
!208 = !{ptr @hci_cc_read_buffer_size.__UNIQUE_ID_ddebug513, !207, !"__UNIQUE_ID_ddebug513", i1 false, i1 false}
!209 = !{ptr @.str.79, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../net/bluetooth/hci_event.c", i32 898, i32 2}
!211 = !{ptr @hci_cc_read_bd_addr.__UNIQUE_ID_ddebug514, !210, !"__UNIQUE_ID_ddebug514", i1 false, i1 false}
!212 = !{ptr @.str.80, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../net/bluetooth/hci_event.c", i32 917, i32 2}
!214 = !{ptr @hci_cc_read_local_pairing_opts.__UNIQUE_ID_ddebug515, !213, !"__UNIQUE_ID_ddebug515", i1 false, i1 false}
!215 = !{ptr @.str.81, !216, !"<string literal>", i1 false, i1 false}
!216 = !{!"../net/bluetooth/hci_event.c", i32 936, i32 2}
!217 = !{ptr @hci_cc_read_page_scan_activity.__UNIQUE_ID_ddebug516, !216, !"__UNIQUE_ID_ddebug516", i1 false, i1 false}
!218 = !{ptr @.str.82, !219, !"<string literal>", i1 false, i1 false}
!219 = !{!"../net/bluetooth/hci_event.c", i32 955, i32 2}
!220 = !{ptr @hci_cc_write_page_scan_activity.__UNIQUE_ID_ddebug517, !219, !"__UNIQUE_ID_ddebug517", i1 false, i1 false}
!221 = !{ptr @.str.83, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../net/bluetooth/hci_event.c", i32 975, i32 2}
!223 = !{ptr @hci_cc_read_page_scan_type.__UNIQUE_ID_ddebug518, !222, !"__UNIQUE_ID_ddebug518", i1 false, i1 false}
!224 = !{ptr @.str.84, !225, !"<string literal>", i1 false, i1 false}
!225 = !{!"../net/bluetooth/hci_event.c", i32 992, i32 2}
!226 = !{ptr @hci_cc_write_page_scan_type.__UNIQUE_ID_ddebug519, !225, !"__UNIQUE_ID_ddebug519", i1 false, i1 false}
!227 = !{ptr @.str.85, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../net/bluetooth/hci_event.c", i32 1009, i32 2}
!229 = !{ptr @hci_cc_read_data_block_size.__UNIQUE_ID_ddebug520, !228, !"__UNIQUE_ID_ddebug520", i1 false, i1 false}
!230 = !{ptr @.str.86, !231, !"<string literal>", i1 false, i1 false}
!231 = !{!"../net/bluetooth/hci_event.c", i32 1020, i32 2}
!232 = !{ptr @hci_cc_read_data_block_size.__UNIQUE_ID_ddebug521, !231, !"__UNIQUE_ID_ddebug521", i1 false, i1 false}
!233 = !{ptr @.str.87, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../net/bluetooth/hci_event.c", i32 854, i32 2}
!235 = !{ptr @hci_cc_read_flow_control_mode.__UNIQUE_ID_ddebug511, !234, !"__UNIQUE_ID_ddebug511", i1 false, i1 false}
!236 = !{ptr @.str.88, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../net/bluetooth/hci_event.c", i32 1065, i32 2}
!238 = !{ptr @hci_cc_read_local_amp_info.__UNIQUE_ID_ddebug523, !237, !"__UNIQUE_ID_ddebug523", i1 false, i1 false}
!239 = !{ptr @.str.89, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../net/bluetooth/hci_event.c", i32 1033, i32 2}
!241 = !{ptr @hci_cc_read_clock.__UNIQUE_ID_ddebug522, !240, !"__UNIQUE_ID_ddebug522", i1 false, i1 false}
!242 = !{ptr @.str.90, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../net/bluetooth/hci_event.c", i32 1089, i32 2}
!244 = !{ptr @hci_cc_read_inq_rsp_tx_power.__UNIQUE_ID_ddebug524, !243, !"__UNIQUE_ID_ddebug524", i1 false, i1 false}
!245 = !{ptr @.str.91, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../net/bluetooth/hci_event.c", i32 1104, i32 2}
!247 = !{ptr @hci_cc_read_def_err_data_reporting.__UNIQUE_ID_ddebug525, !246, !"__UNIQUE_ID_ddebug525", i1 false, i1 false}
!248 = !{ptr @.str.92, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../net/bluetooth/hci_event.c", i32 1120, i32 2}
!250 = !{ptr @hci_cc_write_def_err_data_reporting.__UNIQUE_ID_ddebug526, !249, !"__UNIQUE_ID_ddebug526", i1 false, i1 false}
!251 = !{ptr @.str.93, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../net/bluetooth/hci_event.c", i32 1141, i32 2}
!253 = !{ptr @hci_cc_pin_code_reply.__UNIQUE_ID_ddebug527, !252, !"__UNIQUE_ID_ddebug527", i1 false, i1 false}
!254 = !{ptr @.str.94, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../net/bluetooth/hci_event.c", i32 1169, i32 2}
!256 = !{ptr @hci_cc_pin_code_neg_reply.__UNIQUE_ID_ddebug528, !255, !"__UNIQUE_ID_ddebug528", i1 false, i1 false}
!257 = !{ptr @.str.95, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../net/bluetooth/hci_event.c", i32 1309, i32 2}
!259 = !{ptr @hci_cc_read_local_oob_data.__UNIQUE_ID_ddebug537, !258, !"__UNIQUE_ID_ddebug537", i1 false, i1 false}
!260 = !{ptr @.str.96, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../net/bluetooth/hci_event.c", i32 1319, i32 2}
!262 = !{ptr @hci_cc_read_local_oob_ext_data.__UNIQUE_ID_ddebug538, !261, !"__UNIQUE_ID_ddebug538", i1 false, i1 false}
!263 = !{ptr @.str.97, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../net/bluetooth/hci_event.c", i32 1187, i32 2}
!265 = !{ptr @hci_cc_le_read_buffer_size.__UNIQUE_ID_ddebug529, !264, !"__UNIQUE_ID_ddebug529", i1 false, i1 false}
!266 = !{ptr @.str.98, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../net/bluetooth/hci_event.c", i32 1197, i32 2}
!268 = !{ptr @hci_cc_le_read_buffer_size.__UNIQUE_ID_ddebug530, !267, !"__UNIQUE_ID_ddebug530", i1 false, i1 false}
!269 = !{ptr @.str.99, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../net/bluetooth/hci_event.c", i32 1207, i32 2}
!271 = !{ptr @.str.100, !270, !"<string literal>", i1 false, i1 false}
!272 = !{ptr @hci_cc_le_read_local_features.__UNIQUE_ID_ddebug531, !270, !"__UNIQUE_ID_ddebug531", i1 false, i1 false}
!273 = !{ptr @.str.101, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../net/bluetooth/hci_event.c", i32 1222, i32 2}
!275 = !{ptr @hci_cc_le_read_adv_tx_power.__UNIQUE_ID_ddebug532, !274, !"__UNIQUE_ID_ddebug532", i1 false, i1 false}
!276 = !{ptr @.str.102, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../net/bluetooth/hci_event.c", i32 1237, i32 2}
!278 = !{ptr @hci_cc_user_confirm_reply.__UNIQUE_ID_ddebug533, !277, !"__UNIQUE_ID_ddebug533", i1 false, i1 false}
!279 = !{ptr @.str.103, !280, !"<string literal>", i1 false, i1 false}
!280 = !{!"../net/bluetooth/hci_event.c", i32 1255, i32 2}
!281 = !{ptr @hci_cc_user_confirm_neg_reply.__UNIQUE_ID_ddebug534, !280, !"__UNIQUE_ID_ddebug534", i1 false, i1 false}
!282 = !{ptr @.str.104, !283, !"<string literal>", i1 false, i1 false}
!283 = !{!"../net/bluetooth/hci_event.c", i32 1273, i32 2}
!284 = !{ptr @hci_cc_user_passkey_reply.__UNIQUE_ID_ddebug535, !283, !"__UNIQUE_ID_ddebug535", i1 false, i1 false}
!285 = !{ptr @.str.105, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../net/bluetooth/hci_event.c", i32 1291, i32 2}
!287 = !{ptr @hci_cc_user_passkey_neg_reply.__UNIQUE_ID_ddebug536, !286, !"__UNIQUE_ID_ddebug536", i1 false, i1 false}
!288 = !{ptr @.str.106, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../net/bluetooth/hci_event.c", i32 1330, i32 2}
!290 = !{ptr @hci_cc_le_set_random_addr.__UNIQUE_ID_ddebug539, !289, !"__UNIQUE_ID_ddebug539", i1 false, i1 false}
!291 = !{ptr @.str.107, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../net/bluetooth/hci_event.c", i32 1525, i32 2}
!293 = !{ptr @hci_cc_le_set_adv_enable.__UNIQUE_ID_ddebug546, !292, !"__UNIQUE_ID_ddebug546", i1 false, i1 false}
!294 = distinct !{null, !295, !"__warned", i1 false, i1 false}
!295 = !{!"../include/net/bluetooth/hci_core.h", i32 1096, i32 2}
!296 = !{ptr @.str.108, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../net/bluetooth/hci_event.c", i32 1629, i32 2}
!298 = !{ptr @hci_cc_le_set_scan_param.__UNIQUE_ID_ddebug548, !297, !"__UNIQUE_ID_ddebug548", i1 false, i1 false}
!299 = !{ptr @.str.109, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../net/bluetooth/hci_event.c", i32 1763, i32 2}
!301 = !{ptr @hci_cc_le_set_scan_enable.__UNIQUE_ID_ddebug550, !300, !"__UNIQUE_ID_ddebug550", i1 false, i1 false}
!302 = !{ptr @.str.110, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../net/bluetooth/hci_event.c", i32 1749, i32 3}
!304 = !{ptr @.str.111, !305, !"<string literal>", i1 false, i1 false}
!305 = !{!"../net/bluetooth/hci_event.c", i32 1818, i32 2}
!306 = !{ptr @.str.112, !305, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @hci_cc_le_read_accept_list_size.__UNIQUE_ID_ddebug553, !305, !"__UNIQUE_ID_ddebug553", i1 false, i1 false}
!308 = !{ptr @.str.113, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../net/bluetooth/hci_event.c", i32 1833, i32 2}
!310 = !{ptr @hci_cc_le_clear_accept_list.__UNIQUE_ID_ddebug554, !309, !"__UNIQUE_ID_ddebug554", i1 false, i1 false}
!311 = !{ptr @.str.114, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../net/bluetooth/hci_event.c", i32 1849, i32 2}
!313 = !{ptr @hci_cc_le_add_to_accept_list.__UNIQUE_ID_ddebug555, !312, !"__UNIQUE_ID_ddebug555", i1 false, i1 false}
!314 = !{ptr @.str.115, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../net/bluetooth/hci_event.c", i32 1870, i32 2}
!316 = !{ptr @hci_cc_le_del_from_accept_list.__UNIQUE_ID_ddebug556, !315, !"__UNIQUE_ID_ddebug556", i1 false, i1 false}
!317 = !{ptr @.str.116, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../net/bluetooth/hci_event.c", i32 1890, i32 2}
!319 = !{ptr @hci_cc_le_read_supported_states.__UNIQUE_ID_ddebug557, !318, !"__UNIQUE_ID_ddebug557", i1 false, i1 false}
!320 = !{ptr @.str.117, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../net/bluetooth/hci_event.c", i32 1905, i32 2}
!322 = !{ptr @hci_cc_le_read_def_data_len.__UNIQUE_ID_ddebug558, !321, !"__UNIQUE_ID_ddebug558", i1 false, i1 false}
!323 = !{ptr @.str.118, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../net/bluetooth/hci_event.c", i32 1922, i32 2}
!325 = !{ptr @hci_cc_le_write_def_data_len.__UNIQUE_ID_ddebug559, !324, !"__UNIQUE_ID_ddebug559", i1 false, i1 false}
!326 = !{ptr @.str.119, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../net/bluetooth/hci_event.c", i32 1943, i32 2}
!328 = !{ptr @hci_cc_le_add_to_resolv_list.__UNIQUE_ID_ddebug560, !327, !"__UNIQUE_ID_ddebug560", i1 false, i1 false}
!329 = !{ptr @.str.120, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../net/bluetooth/hci_event.c", i32 1965, i32 2}
!331 = !{ptr @hci_cc_le_del_from_resolv_list.__UNIQUE_ID_ddebug561, !330, !"__UNIQUE_ID_ddebug561", i1 false, i1 false}
!332 = !{ptr @.str.121, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../net/bluetooth/hci_event.c", i32 1985, i32 2}
!334 = !{ptr @hci_cc_le_clear_resolv_list.__UNIQUE_ID_ddebug562, !333, !"__UNIQUE_ID_ddebug562", i1 false, i1 false}
!335 = !{ptr @.str.122, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../net/bluetooth/hci_event.c", i32 2000, i32 2}
!337 = !{ptr @hci_cc_le_read_resolv_list_size.__UNIQUE_ID_ddebug563, !336, !"__UNIQUE_ID_ddebug563", i1 false, i1 false}
!338 = !{ptr @.str.123, !339, !"<string literal>", i1 false, i1 false}
!339 = !{!"../net/bluetooth/hci_event.c", i32 2016, i32 2}
!340 = !{ptr @hci_cc_le_set_addr_resolution_enable.__UNIQUE_ID_ddebug564, !339, !"__UNIQUE_ID_ddebug564", i1 false, i1 false}
!341 = !{ptr @.str.124, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../net/bluetooth/hci_event.c", i32 2042, i32 2}
!343 = !{ptr @hci_cc_le_read_max_data_len.__UNIQUE_ID_ddebug565, !342, !"__UNIQUE_ID_ddebug565", i1 false, i1 false}
!344 = !{ptr @.str.125, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../net/bluetooth/hci_event.c", i32 2061, i32 2}
!346 = !{ptr @hci_cc_write_le_host_supported.__UNIQUE_ID_ddebug566, !345, !"__UNIQUE_ID_ddebug566", i1 false, i1 false}
!347 = !{ptr @.str.126, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../net/bluetooth/hci_event.c", i32 2097, i32 2}
!349 = !{ptr @hci_cc_set_adv_param.__UNIQUE_ID_ddebug567, !348, !"__UNIQUE_ID_ddebug567", i1 false, i1 false}
!350 = !{ptr @.str.127, !351, !"<string literal>", i1 false, i1 false}
!351 = !{!"../net/bluetooth/hci_event.c", i32 2153, i32 2}
!352 = !{ptr @hci_cc_read_rssi.__UNIQUE_ID_ddebug569, !351, !"__UNIQUE_ID_ddebug569", i1 false, i1 false}
!353 = !{ptr @.str.128, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../net/bluetooth/hci_event.c", i32 2176, i32 2}
!355 = !{ptr @hci_cc_read_tx_power.__UNIQUE_ID_ddebug570, !354, !"__UNIQUE_ID_ddebug570", i1 false, i1 false}
!356 = !{ptr @.str.129, !357, !"<string literal>", i1 false, i1 false}
!357 = !{!"../net/bluetooth/hci_event.c", i32 2211, i32 2}
!358 = !{ptr @hci_cc_write_ssp_debug_mode.__UNIQUE_ID_ddebug571, !357, !"__UNIQUE_ID_ddebug571", i1 false, i1 false}
!359 = !{ptr @.str.130, !360, !"<string literal>", i1 false, i1 false}
!360 = !{!"../net/bluetooth/hci_event.c", i32 1654, i32 2}
!361 = !{ptr @hci_cc_le_set_ext_scan_param.__UNIQUE_ID_ddebug549, !360, !"__UNIQUE_ID_ddebug549", i1 false, i1 false}
!362 = !{ptr @.str.131, !363, !"<string literal>", i1 false, i1 false}
!363 = !{!"../net/bluetooth/hci_event.c", i32 1783, i32 2}
!364 = !{ptr @hci_cc_le_set_ext_scan_enable.__UNIQUE_ID_ddebug551, !363, !"__UNIQUE_ID_ddebug551", i1 false, i1 false}
!365 = !{ptr @.str.132, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../net/bluetooth/hci_event.c", i32 1360, i32 2}
!367 = !{ptr @hci_cc_le_set_default_phy.__UNIQUE_ID_ddebug540, !366, !"__UNIQUE_ID_ddebug540", i1 false, i1 false}
!368 = !{ptr @.str.133, !369, !"<string literal>", i1 false, i1 false}
!369 = !{!"../net/bluetooth/hci_event.c", i32 1802, i32 2}
!370 = !{ptr @.str.134, !369, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @hci_cc_le_read_num_adv_sets.__UNIQUE_ID_ddebug552, !369, !"__UNIQUE_ID_ddebug552", i1 false, i1 false}
!372 = !{ptr @.str.135, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../net/bluetooth/hci_event.c", i32 2120, i32 2}
!374 = !{ptr @hci_cc_set_ext_adv_param.__UNIQUE_ID_ddebug568, !373, !"__UNIQUE_ID_ddebug568", i1 false, i1 false}
!375 = !{ptr @.str.136, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../net/bluetooth/hci_event.c", i32 1566, i32 2}
!377 = !{ptr @hci_cc_le_set_ext_adv_enable.__UNIQUE_ID_ddebug547, !376, !"__UNIQUE_ID_ddebug547", i1 false, i1 false}
!378 = !{ptr @.str.137, !379, !"<string literal>", i1 false, i1 false}
!379 = !{!"../net/bluetooth/hci_event.c", i32 1386, i32 2}
!380 = !{ptr @hci_cc_le_set_adv_set_random_addr.__UNIQUE_ID_ddebug541, !379, !"__UNIQUE_ID_ddebug541", i1 false, i1 false}
!381 = !{ptr @.str.138, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../net/bluetooth/hci_event.c", i32 1424, i32 2}
!383 = !{ptr @hci_cc_le_remove_adv_set.__UNIQUE_ID_ddebug542, !382, !"__UNIQUE_ID_ddebug542", i1 false, i1 false}
!384 = !{ptr @.str.139, !385, !"<string literal>", i1 false, i1 false}
!385 = !{!"../net/bluetooth/hci_event.c", i32 1452, i32 2}
!386 = !{ptr @hci_cc_le_clear_adv_sets.__UNIQUE_ID_ddebug543, !385, !"__UNIQUE_ID_ddebug543", i1 false, i1 false}
!387 = !{ptr @.str.140, !388, !"<string literal>", i1 false, i1 false}
!388 = !{!"../net/bluetooth/hci_event.c", i32 1481, i32 2}
!389 = !{ptr @hci_cc_le_read_transmit_power.__UNIQUE_ID_ddebug544, !388, !"__UNIQUE_ID_ddebug544", i1 false, i1 false}
!390 = !{ptr @.str.141, !391, !"<string literal>", i1 false, i1 false}
!391 = !{!"../net/bluetooth/hci_event.c", i32 1499, i32 2}
!392 = !{ptr @hci_cc_le_set_privacy_mode.__UNIQUE_ID_ddebug545, !391, !"__UNIQUE_ID_ddebug545", i1 false, i1 false}
!393 = !{ptr @.str.142, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../net/bluetooth/hci_event.c", i32 3927, i32 3}
!395 = !{ptr @.str.143, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../net/bluetooth/hci_event.c", i32 3937, i32 3}
!397 = !{ptr @.str.144, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../net/bluetooth/hci_event.c", i32 67, i32 3}
!399 = !{ptr @.str.145, !400, !"<string literal>", i1 false, i1 false}
!400 = !{!"../net/bluetooth/hci_event.c", i32 4024, i32 2}
!401 = !{ptr @hci_cmd_status_evt.__UNIQUE_ID_ddebug606, !400, !"__UNIQUE_ID_ddebug606", i1 false, i1 false}
!402 = !{ptr @hci_cs_table, !403, !"hci_cs_table", i1 false, i1 false}
!403 = !{!"../net/bluetooth/hci_event.c", i32 3990, i32 3}
!404 = !{ptr @.str.146, !405, !"<string literal>", i1 false, i1 false}
!405 = !{!"../net/bluetooth/hci_event.c", i32 2225, i32 2}
!406 = !{ptr @hci_cs_inquiry.__UNIQUE_ID_ddebug572, !405, !"__UNIQUE_ID_ddebug572", i1 false, i1 false}
!407 = !{ptr @.str.147, !408, !"<string literal>", i1 false, i1 false}
!408 = !{!"../net/bluetooth/hci_event.c", i32 2240, i32 2}
!409 = !{ptr @hci_cs_create_conn.__UNIQUE_ID_ddebug573, !408, !"__UNIQUE_ID_ddebug573", i1 false, i1 false}
!410 = !{ptr @.str.148, !411, !"<string literal>", i1 false, i1 false}
!411 = !{!"../net/bluetooth/hci_event.c", i32 2250, i32 2}
!412 = !{ptr @hci_cs_create_conn.__UNIQUE_ID_ddebug574, !411, !"__UNIQUE_ID_ddebug574", i1 false, i1 false}
!413 = !{ptr @.str.149, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../net/bluetooth/hci_event.c", i32 2699, i32 2}
!415 = !{ptr @hci_cs_disconnect.__UNIQUE_ID_ddebug588, !414, !"__UNIQUE_ID_ddebug588", i1 false, i1 false}
!416 = !{ptr @.str.150, !417, !"<string literal>", i1 false, i1 false}
!417 = !{!"../net/bluetooth/hci_event.c", i32 2279, i32 2}
!418 = !{ptr @hci_cs_add_sco.__UNIQUE_ID_ddebug575, !417, !"__UNIQUE_ID_ddebug575", i1 false, i1 false}
!419 = !{ptr @.str.151, !420, !"<string literal>", i1 false, i1 false}
!420 = !{!"../net/bluetooth/hci_event.c", i32 2290, i32 2}
!421 = !{ptr @hci_cs_add_sco.__UNIQUE_ID_ddebug576, !420, !"__UNIQUE_ID_ddebug576", i1 false, i1 false}
!422 = !{ptr @.str.152, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../net/bluetooth/hci_event.c", i32 2313, i32 2}
!424 = !{ptr @hci_cs_auth_requested.__UNIQUE_ID_ddebug577, !423, !"__UNIQUE_ID_ddebug577", i1 false, i1 false}
!425 = !{ptr @.str.153, !426, !"<string literal>", i1 false, i1 false}
!426 = !{!"../net/bluetooth/hci_event.c", i32 2340, i32 2}
!427 = !{ptr @hci_cs_set_conn_encrypt.__UNIQUE_ID_ddebug578, !426, !"__UNIQUE_ID_ddebug578", i1 false, i1 false}
!428 = !{ptr @.str.154, !429, !"<string literal>", i1 false, i1 false}
!429 = !{!"../net/bluetooth/hci_event.c", i32 2476, i32 2}
!430 = !{ptr @hci_cs_remote_name_req.__UNIQUE_ID_ddebug579, !429, !"__UNIQUE_ID_ddebug579", i1 false, i1 false}
!431 = !{ptr @.str.155, !432, !"<string literal>", i1 false, i1 false}
!432 = !{!"../net/bluetooth/hci_event.c", i32 2519, i32 2}
!433 = !{ptr @hci_cs_read_remote_features.__UNIQUE_ID_ddebug580, !432, !"__UNIQUE_ID_ddebug580", i1 false, i1 false}
!434 = !{ptr @.str.156, !435, !"<string literal>", i1 false, i1 false}
!435 = !{!"../net/bluetooth/hci_event.c", i32 2546, i32 2}
!436 = !{ptr @hci_cs_read_remote_ext_features.__UNIQUE_ID_ddebug581, !435, !"__UNIQUE_ID_ddebug581", i1 false, i1 false}
!437 = !{ptr @.str.157, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../net/bluetooth/hci_event.c", i32 2574, i32 2}
!439 = !{ptr @hci_cs_setup_sync_conn.__UNIQUE_ID_ddebug582, !438, !"__UNIQUE_ID_ddebug582", i1 false, i1 false}
!440 = !{ptr @hci_cs_setup_sync_conn.__UNIQUE_ID_ddebug583, !441, !"__UNIQUE_ID_ddebug583", i1 false, i1 false}
!441 = !{!"../net/bluetooth/hci_event.c", i32 2585, i32 2}
!442 = !{ptr @.str.158, !443, !"<string literal>", i1 false, i1 false}
!443 = !{!"../net/bluetooth/hci_event.c", i32 2609, i32 2}
!444 = !{ptr @hci_cs_enhanced_setup_sync_conn.__UNIQUE_ID_ddebug584, !443, !"__UNIQUE_ID_ddebug584", i1 false, i1 false}
!445 = !{ptr @hci_cs_enhanced_setup_sync_conn.__UNIQUE_ID_ddebug585, !446, !"__UNIQUE_ID_ddebug585", i1 false, i1 false}
!446 = !{!"../net/bluetooth/hci_event.c", i32 2620, i32 2}
!447 = !{ptr @.str.159, !448, !"<string literal>", i1 false, i1 false}
!448 = !{!"../net/bluetooth/hci_event.c", i32 2643, i32 2}
!449 = !{ptr @hci_cs_sniff_mode.__UNIQUE_ID_ddebug586, !448, !"__UNIQUE_ID_ddebug586", i1 false, i1 false}
!450 = !{ptr @.str.160, !451, !"<string literal>", i1 false, i1 false}
!451 = !{!"../net/bluetooth/hci_event.c", i32 2670, i32 2}
!452 = !{ptr @hci_cs_exit_sniff_mode.__UNIQUE_ID_ddebug587, !451, !"__UNIQUE_ID_ddebug587", i1 false, i1 false}
!453 = !{ptr @.str.161, !454, !"<string literal>", i1 false, i1 false}
!454 = !{!"../net/bluetooth/hci_event.c", i32 2942, i32 2}
!455 = !{ptr @hci_cs_switch_role.__UNIQUE_ID_ddebug593, !454, !"__UNIQUE_ID_ddebug593", i1 false, i1 false}
!456 = !{ptr @.str.162, !457, !"<string literal>", i1 false, i1 false}
!457 = !{!"../net/bluetooth/hci_event.c", i32 2834, i32 2}
!458 = !{ptr @hci_cs_le_create_conn.__UNIQUE_ID_ddebug589, !457, !"__UNIQUE_ID_ddebug589", i1 false, i1 false}
!459 = distinct !{null, !460, !"__warned", i1 false, i1 false}
!460 = !{!"../include/net/bluetooth/hci_core.h", i32 1054, i32 2}
!461 = !{ptr @.str.163, !462, !"<string literal>", i1 false, i1 false}
!462 = !{!"../net/bluetooth/hci_event.c", i32 2885, i32 2}
!463 = !{ptr @hci_cs_le_read_remote_features.__UNIQUE_ID_ddebug591, !462, !"__UNIQUE_ID_ddebug591", i1 false, i1 false}
!464 = !{ptr @.str.164, !465, !"<string literal>", i1 false, i1 false}
!465 = !{!"../net/bluetooth/hci_event.c", i32 2912, i32 2}
!466 = !{ptr @hci_cs_le_start_enc.__UNIQUE_ID_ddebug592, !465, !"__UNIQUE_ID_ddebug592", i1 false, i1 false}
!467 = !{ptr @.str.165, !468, !"<string literal>", i1 false, i1 false}
!468 = !{!"../net/bluetooth/hci_event.c", i32 2859, i32 2}
!469 = !{ptr @hci_cs_le_ext_create_conn.__UNIQUE_ID_ddebug590, !468, !"__UNIQUE_ID_ddebug590", i1 false, i1 false}
!470 = !{ptr @.str.166, !471, !"<string literal>", i1 false, i1 false}
!471 = !{!"../net/bluetooth/hci_event.c", i32 4060, i32 2}
!472 = !{ptr @.str.167, !471, !"<string literal>", i1 false, i1 false}
!473 = !{ptr @hci_hardware_error_evt.__UNIQUE_ID_ddebug607, !471, !"__UNIQUE_ID_ddebug607", i1 false, i1 false}
!474 = !{ptr @.str.168, !475, !"<string literal>", i1 false, i1 false}
!475 = !{!"../net/bluetooth/hci_event.c", i32 4073, i32 2}
!476 = !{ptr @hci_role_change_evt.__UNIQUE_ID_ddebug608, !475, !"__UNIQUE_ID_ddebug608", i1 false, i1 false}
!477 = !{ptr @.str.169, !478, !"<string literal>", i1 false, i1 false}
!478 = !{!"../net/bluetooth/hci_event.c", i32 4101, i32 3}
!479 = !{ptr @.str.170, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../net/bluetooth/hci_event.c", i32 4105, i32 2}
!481 = !{ptr @hci_num_comp_pkts_evt.__UNIQUE_ID_ddebug609, !480, !"__UNIQUE_ID_ddebug609", i1 false, i1 false}
!482 = !{ptr @.str.171, !483, !"<string literal>", i1 false, i1 false}
!483 = !{!"../net/bluetooth/hci_event.c", i32 4147, i32 4}
!484 = !{ptr @.str.172, !485, !"<string literal>", i1 false, i1 false}
!485 = !{!"../net/bluetooth/hci_event.c", i32 4234, i32 2}
!486 = !{ptr @hci_mode_change_evt.__UNIQUE_ID_ddebug611, !485, !"__UNIQUE_ID_ddebug611", i1 false, i1 false}
!487 = !{ptr @.str.173, !488, !"<string literal>", i1 false, i1 false}
!488 = !{!"../net/bluetooth/hci_event.c", i32 4263, i32 2}
!489 = !{ptr @.str.174, !488, !"<string literal>", i1 false, i1 false}
!490 = !{ptr @hci_pin_code_request_evt.__UNIQUE_ID_ddebug612, !488, !"__UNIQUE_ID_ddebug612", i1 false, i1 false}
!491 = !{ptr @.str.175, !492, !"<string literal>", i1 false, i1 false}
!492 = !{!"../net/bluetooth/hci_event.c", i32 4336, i32 2}
!493 = !{ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug613, !492, !"__UNIQUE_ID_ddebug613", i1 false, i1 false}
!494 = !{ptr @.str.176, !495, !"<string literal>", i1 false, i1 false}
!495 = !{!"../net/bluetooth/hci_event.c", i32 4345, i32 3}
!496 = !{ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug614, !495, !"__UNIQUE_ID_ddebug614", i1 false, i1 false}
!497 = !{ptr @.str.177, !498, !"<string literal>", i1 false, i1 false}
!498 = !{!"../net/bluetooth/hci_event.c", i32 4349, i32 2}
!499 = !{ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug615, !498, !"__UNIQUE_ID_ddebug615", i1 false, i1 false}
!500 = !{ptr @.str.178, !501, !"<string literal>", i1 false, i1 false}
!501 = !{!"../net/bluetooth/hci_event.c", i32 4358, i32 4}
!502 = !{ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug616, !501, !"__UNIQUE_ID_ddebug616", i1 false, i1 false}
!503 = !{ptr @.str.179, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../net/bluetooth/hci_event.c", i32 4365, i32 4}
!505 = !{ptr @hci_link_key_request_evt.__UNIQUE_ID_ddebug617, !504, !"__UNIQUE_ID_ddebug617", i1 false, i1 false}
!506 = !{ptr @.str.180, !507, !"<string literal>", i1 false, i1 false}
!507 = !{!"../net/bluetooth/hci_event.c", i32 4395, i32 2}
!508 = !{ptr @hci_link_key_notify_evt.__UNIQUE_ID_ddebug618, !507, !"__UNIQUE_ID_ddebug618", i1 false, i1 false}
!509 = !{ptr @.str.181, !510, !"<string literal>", i1 false, i1 false}
!510 = !{!"../net/bluetooth/hci_event.c", i32 4453, i32 2}
!511 = !{ptr @hci_clock_offset_evt.__UNIQUE_ID_ddebug620, !510, !"__UNIQUE_ID_ddebug620", i1 false, i1 false}
!512 = !{ptr @.str.182, !513, !"<string literal>", i1 false, i1 false}
!513 = !{!"../net/bluetooth/hci_event.c", i32 4477, i32 2}
!514 = !{ptr @hci_pkt_type_change_evt.__UNIQUE_ID_ddebug621, !513, !"__UNIQUE_ID_ddebug621", i1 false, i1 false}
!515 = !{ptr @.str.183, !516, !"<string literal>", i1 false, i1 false}
!516 = !{!"../net/bluetooth/hci_event.c", i32 4494, i32 2}
!517 = !{ptr @hci_pscan_rep_mode_evt.__UNIQUE_ID_ddebug622, !516, !"__UNIQUE_ID_ddebug622", i1 false, i1 false}
!518 = !{ptr @.str.184, !519, !"<string literal>", i1 false, i1 false}
!519 = !{!"../net/bluetooth/hci_event.c", i32 4514, i32 2}
!520 = !{ptr @.str.185, !519, !"<string literal>", i1 false, i1 false}
!521 = !{ptr @hci_inquiry_result_with_rssi_evt.__UNIQUE_ID_ddebug623, !519, !"__UNIQUE_ID_ddebug623", i1 false, i1 false}
!522 = !{ptr @.str.186, !523, !"<string literal>", i1 false, i1 false}
!523 = !{!"../net/bluetooth/hci_event.c", i32 4535, i32 5}
!524 = !{ptr @.str.187, !525, !"<string literal>", i1 false, i1 false}
!525 = !{!"../net/bluetooth/hci_event.c", i32 4600, i32 2}
!526 = !{ptr @hci_remote_ext_features_evt.__UNIQUE_ID_ddebug624, !525, !"__UNIQUE_ID_ddebug624", i1 false, i1 false}
!527 = !{ptr @.str.188, !528, !"<string literal>", i1 false, i1 false}
!528 = !{!"../net/bluetooth/hci_event.c", i32 4664, i32 2}
!529 = !{ptr @hci_sync_conn_complete_evt.__UNIQUE_ID_ddebug625, !528, !"__UNIQUE_ID_ddebug625", i1 false, i1 false}
!530 = !{ptr @.str.189, !531, !"<string literal>", i1 false, i1 false}
!531 = !{!"../net/bluetooth/hci_event.c", i32 4700, i32 4}
!532 = !{ptr @.str.190, !533, !"<string literal>", i1 false, i1 false}
!533 = !{!"../net/bluetooth/hci_event.c", i32 4733, i32 2}
!534 = !{ptr @hci_sync_conn_complete_evt.__UNIQUE_ID_ddebug626, !533, !"__UNIQUE_ID_ddebug626", i1 false, i1 false}
!535 = !{ptr @.str.191, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../net/bluetooth/hci_event.c", i32 4785, i32 2}
!537 = !{ptr @hci_extended_inquiry_result_evt.__UNIQUE_ID_ddebug627, !536, !"__UNIQUE_ID_ddebug627", i1 false, i1 false}
!538 = !{ptr @.str.192, !539, !"<string literal>", i1 false, i1 false}
!539 = !{!"../net/bluetooth/hci_event.c", i32 4834, i32 2}
!540 = !{ptr @.str.193, !539, !"<string literal>", i1 false, i1 false}
!541 = !{ptr @hci_key_refresh_complete_evt.__UNIQUE_ID_ddebug628, !539, !"__UNIQUE_ID_ddebug628", i1 false, i1 false}
!542 = !{ptr @.str.194, !543, !"<string literal>", i1 false, i1 false}
!543 = !{!"../net/bluetooth/hci_event.c", i32 4944, i32 2}
!544 = !{ptr @hci_io_capa_request_evt.__UNIQUE_ID_ddebug629, !543, !"__UNIQUE_ID_ddebug629", i1 false, i1 false}
!545 = !{ptr @.str.195, !546, !"<string literal>", i1 false, i1 false}
!546 = !{!"../net/bluetooth/hci_event.c", i32 4920, i32 30}
!547 = !{ptr @.str.196, !548, !"<string literal>", i1 false, i1 false}
!548 = !{!"../net/bluetooth/hci_event.c", i32 5014, i32 2}
!549 = !{ptr @hci_io_capa_reply_evt.__UNIQUE_ID_ddebug630, !548, !"__UNIQUE_ID_ddebug630", i1 false, i1 false}
!550 = !{ptr @.str.197, !551, !"<string literal>", i1 false, i1 false}
!551 = !{!"../net/bluetooth/hci_event.c", i32 5036, i32 2}
!552 = !{ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug631, !551, !"__UNIQUE_ID_ddebug631", i1 false, i1 false}
!553 = !{ptr @.str.198, !554, !"<string literal>", i1 false, i1 false}
!554 = !{!"../net/bluetooth/hci_event.c", i32 5057, i32 3}
!555 = !{ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug632, !554, !"__UNIQUE_ID_ddebug632", i1 false, i1 false}
!556 = !{ptr @.str.199, !557, !"<string literal>", i1 false, i1 false}
!557 = !{!"../net/bluetooth/hci_event.c", i32 5076, i32 4}
!558 = !{ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug633, !557, !"__UNIQUE_ID_ddebug633", i1 false, i1 false}
!559 = !{ptr @.str.200, !560, !"<string literal>", i1 false, i1 false}
!560 = !{!"../net/bluetooth/hci_event.c", i32 5086, i32 4}
!561 = !{ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug634, !560, !"__UNIQUE_ID_ddebug634", i1 false, i1 false}
!562 = !{ptr @.str.201, !563, !"<string literal>", i1 false, i1 false}
!563 = !{!"../net/bluetooth/hci_event.c", i32 5091, i32 3}
!564 = !{ptr @hci_user_confirm_request_evt.__UNIQUE_ID_ddebug635, !563, !"__UNIQUE_ID_ddebug635", i1 false, i1 false}
!565 = !{ptr @.str.202, !566, !"<string literal>", i1 false, i1 false}
!566 = !{!"../net/bluetooth/hci_event.c", i32 5119, i32 2}
!567 = !{ptr @hci_user_passkey_request_evt.__UNIQUE_ID_ddebug636, !566, !"__UNIQUE_ID_ddebug636", i1 false, i1 false}
!568 = !{ptr @.str.203, !569, !"<string literal>", i1 false, i1 false}
!569 = !{!"../net/bluetooth/hci_event.c", i32 5244, i32 2}
!570 = !{ptr @hci_remote_oob_data_request_evt.__UNIQUE_ID_ddebug641, !569, !"__UNIQUE_ID_ddebug641", i1 false, i1 false}
!571 = !{ptr @.str.204, !572, !"<string literal>", i1 false, i1 false}
!572 = !{!"../net/bluetooth/hci_event.c", i32 5191, i32 2}
!573 = !{ptr @hci_simple_pair_complete_evt.__UNIQUE_ID_ddebug639, !572, !"__UNIQUE_ID_ddebug639", i1 false, i1 false}
!574 = !{ptr @.str.205, !575, !"<string literal>", i1 false, i1 false}
!575 = !{!"../net/bluetooth/hci_event.c", i32 5131, i32 2}
!576 = !{ptr @hci_user_passkey_notify_evt.__UNIQUE_ID_ddebug637, !575, !"__UNIQUE_ID_ddebug637", i1 false, i1 false}
!577 = !{ptr @.str.206, !578, !"<string literal>", i1 false, i1 false}
!578 = !{!"../net/bluetooth/hci_event.c", i32 5152, i32 2}
!579 = !{ptr @hci_keypress_notify_evt.__UNIQUE_ID_ddebug638, !578, !"__UNIQUE_ID_ddebug638", i1 false, i1 false}
!580 = !{ptr @.str.207, !581, !"<string literal>", i1 false, i1 false}
!581 = !{!"../net/bluetooth/hci_event.c", i32 5223, i32 2}
!582 = !{ptr @hci_remote_host_features_evt.__UNIQUE_ID_ddebug640, !581, !"__UNIQUE_ID_ddebug640", i1 false, i1 false}
!583 = !{ptr @.str.208, !584, !"<string literal>", i1 false, i1 false}
!584 = !{!"../net/bluetooth/hci_event.c", i32 6472, i32 2}
!585 = !{ptr @.str.209, !584, !"<string literal>", i1 false, i1 false}
!586 = !{ptr @hci_le_meta_evt.__UNIQUE_ID_ddebug658, !584, !"__UNIQUE_ID_ddebug658", i1 false, i1 false}
!587 = !{ptr @.str.210, !588, !"<string literal>", i1 false, i1 false}
!588 = !{!"../net/bluetooth/hci_event.c", i32 6488, i32 3}
!589 = !{ptr @.str.211, !590, !"<string literal>", i1 false, i1 false}
!590 = !{!"../net/bluetooth/hci_event.c", i32 6498, i32 3}
!591 = !{ptr @hci_le_ev_table, !592, !"hci_le_ev_table", i1 false, i1 false}
!592 = !{!"../net/bluetooth/hci_event.c", i32 6421, i32 3}
!593 = !{ptr @.str.213, !594, !"<string literal>", i1 false, i1 false}
!594 = !{!"../net/bluetooth/hci_event.c", i32 5641, i32 2}
!595 = !{ptr @hci_le_conn_complete_evt.__UNIQUE_ID_ddebug648, !594, !"__UNIQUE_ID_ddebug648", i1 false, i1 false}
!596 = !{ptr @.str.214, !597, !"<string literal>", i1 false, i1 false}
!597 = !{!"../net/bluetooth/hci_event.c", i32 6081, i32 4}
!598 = !{ptr @.str.215, !599, !"<string literal>", i1 false, i1 false}
!599 = !{!"../net/bluetooth/hci_event.c", i32 5864, i32 3}
!600 = !{ptr @.str.216, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../net/bluetooth/hci_event.c", i32 5870, i32 3}
!602 = !{ptr @.str.217, !603, !"<string literal>", i1 false, i1 false}
!603 = !{!"../net/bluetooth/hci_event.c", i32 5837, i32 3}
!604 = !{ptr @.str.218, !603, !"<string literal>", i1 false, i1 false}
!605 = !{ptr @check_pending_le_conn.__UNIQUE_ID_ddebug652, !603, !"__UNIQUE_ID_ddebug652", i1 false, i1 false}
!606 = !{ptr @.str.219, !607, !"<string literal>", i1 false, i1 false}
!607 = !{!"../net/bluetooth/hci_event.c", i32 5735, i32 2}
!608 = !{ptr @hci_le_conn_update_complete_evt.__UNIQUE_ID_ddebug651, !607, !"__UNIQUE_ID_ddebug651", i1 false, i1 false}
!609 = !{ptr @.str.220, !610, !"<string literal>", i1 false, i1 false}
!610 = !{!"../net/bluetooth/hci_event.c", i32 6175, i32 2}
!611 = !{ptr @hci_le_remote_feat_complete_evt.__UNIQUE_ID_ddebug653, !610, !"__UNIQUE_ID_ddebug653", i1 false, i1 false}
!612 = !{ptr @.str.221, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../net/bluetooth/hci_event.c", i32 6220, i32 2}
!614 = !{ptr @hci_le_ltk_request_evt.__UNIQUE_ID_ddebug654, !613, !"__UNIQUE_ID_ddebug654", i1 false, i1 false}
!615 = !{ptr @.str.222, !616, !"<string literal>", i1 false, i1 false}
!616 = !{!"../net/bluetooth/hci_event.c", i32 6296, i32 2}
!617 = !{ptr @hci_le_remote_conn_param_req_evt.__UNIQUE_ID_ddebug656, !616, !"__UNIQUE_ID_ddebug656", i1 false, i1 false}
!618 = !{ptr @.str.223, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../net/bluetooth/hci_event.c", i32 5655, i32 2}
!620 = !{ptr @hci_le_enh_conn_complete_evt.__UNIQUE_ID_ddebug649, !619, !"__UNIQUE_ID_ddebug649", i1 false, i1 false}
!621 = !{ptr @.str.224, !622, !"<string literal>", i1 false, i1 false}
!622 = !{!"../net/bluetooth/hci_event.c", i32 6381, i32 2}
!623 = !{ptr @hci_le_phy_update_evt.__UNIQUE_ID_ddebug657, !622, !"__UNIQUE_ID_ddebug657", i1 false, i1 false}
!624 = !{ptr @.str.225, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../net/bluetooth/hci_event.c", i32 6126, i32 2}
!626 = !{ptr @.str.226, !627, !"<string literal>", i1 false, i1 false}
!627 = !{!"../net/bluetooth/hci_event.c", i32 5671, i32 2}
!628 = !{ptr @hci_le_ext_adv_term_evt.__UNIQUE_ID_ddebug650, !627, !"__UNIQUE_ID_ddebug650", i1 false, i1 false}
!629 = !{ptr @.str.227, !630, !"<string literal>", i1 false, i1 false}
!630 = !{!"../net/bluetooth/hci_event.c", i32 5683, i32 3}
!631 = !{ptr @.str.228, !632, !"<string literal>", i1 false, i1 false}
!632 = !{!"../net/bluetooth/hci_event.c", i32 79, i32 3}
!633 = !{ptr @.str.229, !634, !"<string literal>", i1 false, i1 false}
!634 = !{!"../net/bluetooth/hci_event.c", i32 5314, i32 2}
!635 = !{ptr @.str.230, !634, !"<string literal>", i1 false, i1 false}
!636 = !{ptr @hci_phy_link_complete_evt.__UNIQUE_ID_ddebug643, !634, !"__UNIQUE_ID_ddebug643", i1 false, i1 false}
!637 = !{ptr @.str.231, !638, !"<string literal>", i1 false, i1 false}
!638 = !{!"../net/bluetooth/hci_event.c", i32 5299, i32 2}
!639 = !{ptr @.str.232, !638, !"<string literal>", i1 false, i1 false}
!640 = !{ptr @hci_chan_selected_evt.__UNIQUE_ID_ddebug642, !638, !"__UNIQUE_ID_ddebug642", i1 false, i1 false}
!641 = !{ptr @.str.233, !642, !"<string literal>", i1 false, i1 false}
!642 = !{!"../net/bluetooth/hci_event.c", i32 5418, i32 2}
!643 = !{ptr @hci_disconn_phylink_complete_evt.__UNIQUE_ID_ddebug647, !642, !"__UNIQUE_ID_ddebug647", i1 false, i1 false}
!644 = !{ptr @.str.234, !645, !"<string literal>", i1 false, i1 false}
!645 = !{!"../net/bluetooth/hci_event.c", i32 5357, i32 2}
!646 = !{ptr @.str.235, !645, !"<string literal>", i1 false, i1 false}
!647 = !{ptr @hci_loglink_complete_evt.__UNIQUE_ID_ddebug644, !645, !"__UNIQUE_ID_ddebug644", i1 false, i1 false}
!648 = !{ptr @.str.236, !649, !"<string literal>", i1 false, i1 false}
!649 = !{!"../net/bluetooth/hci_event.c", i32 5372, i32 2}
!650 = !{ptr @hci_loglink_complete_evt.__UNIQUE_ID_ddebug645, !649, !"__UNIQUE_ID_ddebug645", i1 false, i1 false}
!651 = !{ptr @.str.237, !652, !"<string literal>", i1 false, i1 false}
!652 = !{!"../net/bluetooth/hci_event.c", i32 5394, i32 2}
!653 = !{ptr @.str.238, !652, !"<string literal>", i1 false, i1 false}
!654 = !{ptr @hci_disconn_loglink_complete_evt.__UNIQUE_ID_ddebug646, !652, !"__UNIQUE_ID_ddebug646", i1 false, i1 false}
!655 = !{ptr @.str.239, !656, !"<string literal>", i1 false, i1 false}
!656 = !{!"../net/bluetooth/hci_event.c", i32 4193, i32 2}
!657 = !{ptr @.str.240, !656, !"<string literal>", i1 false, i1 false}
!658 = !{ptr @hci_num_comp_blocks_evt.__UNIQUE_ID_ddebug610, !656, !"__UNIQUE_ID_ddebug610", i1 false, i1 false}
!659 = !{ptr @.str.241, !660, !"<string literal>", i1 false, i1 false}
!660 = !{!"../net/bluetooth/hci_event.c", i32 4170, i32 3}
!661 = !{ptr @.str.242, !662, !"<string literal>", i1 false, i1 false}
!662 = !{!"../net/bluetooth/hci_event.c", i32 55, i32 3}
!663 = !{ptr @.str.243, !664, !"<string literal>", i1 false, i1 false}
!664 = !{!"../net/bluetooth/hci_event.c", i32 6534, i32 3}
!665 = !{ptr @.str.244, !666, !"<string literal>", i1 false, i1 false}
!666 = !{!"../net/bluetooth/hci_event.c", i32 6544, i32 3}
!667 = !{ptr @.str.245, !666, !"<string literal>", i1 false, i1 false}
!668 = !{ptr @hci_get_cmd_complete.__UNIQUE_ID_ddebug659, !666, !"__UNIQUE_ID_ddebug659", i1 false, i1 false}
!669 = !{!"sp"}
!670 = !{i32 1, !"wchar_size", i32 2}
!671 = !{i32 1, !"min_enum_size", i32 4}
!672 = !{i32 8, !"branch-target-enforcement", i32 0}
!673 = !{i32 8, !"sign-return-address", i32 0}
!674 = !{i32 8, !"sign-return-address-all", i32 0}
!675 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!676 = !{i32 7, !"uwtable", i32 1}
!677 = !{i32 7, !"frame-pointer", i32 2}
!678 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!679 = !{i8 0, i8 2}
!680 = !{i64 2148969893, i64 2148969898, i64 2148969911, i64 2148969955, i64 2148969989, i64 2148970010}
!681 = !{i64 2157853934}
!682 = !{i64 2148444079, i64 2148444105, i64 2148444134, i64 2148444168, i64 2148444199, i64 2148444222}
!683 = !{!"auto-init"}
!684 = !{i64 2149745336}
!685 = !{i64 2149745602}
!686 = !{i64 2148532531}
!687 = !{i64 2148447264, i64 2148447296, i64 2148447325, i64 2148447359, i64 2148447390, i64 2148447413}
!688 = !{i64 2148532760}
!689 = !{i64 2157509284}
